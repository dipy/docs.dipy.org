
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples_built\reconstruction\reconst_forecast.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_built_reconstruction_reconst_forecast.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_built_reconstruction_reconst_forecast.py:


==============================================================
Crossing invariant fiber response function with FORECAST model
==============================================================

We show how to obtain a voxel specific response function in the form of
axially symmetric tensor and the fODF using the FORECAST model from
[Anderson2005]_ , [Kaden2016]_ and [Zucchelli2017]_.

First import the necessary modules:

.. GENERATED FROM PYTHON SOURCE LINES 12-22

.. code-block:: Python


    import numpy as np
    import matplotlib.pyplot as plt
    from dipy.reconst.forecast import ForecastModel
    from dipy.viz import actor, window
    from dipy.data import fetch_hbn, get_sphere
    import nibabel as nib
    import os.path as op
    from dipy.core.gradients import gradient_table








.. GENERATED FROM PYTHON SOURCE LINES 23-28

Download and read the data for this tutorial. Our implementation of FORECAST
requires multi-shell `data.fetch_hbn()` provides data that was acquired using
b-values of 1000 and 2000 as part of the Healthy Brain Network study
[Alexander2017]_ and was preprocessed and quality controlled in the HBN-POD2
dataset [RichieHalford2022]_.

.. GENERATED FROM PYTHON SOURCE LINES 28-52

.. code-block:: Python


    data_path = fetch_hbn(["NDARAA948VFH"])[1]
    dwi_path = op.join(
           data_path, "derivatives", "qsiprep", "sub-NDARAA948VFH",
           "ses-HBNsiteRU", "dwi")

    img = nib.load(op.join(
           dwi_path,
           "sub-NDARAA948VFH_ses-HBNsiteRU_acq-64dir_space-T1w_desc-preproc_dwi.nii.gz"))

    gtab = gradient_table(
           op.join(dwi_path,
    "sub-NDARAA948VFH_ses-HBNsiteRU_acq-64dir_space-T1w_desc-preproc_dwi.bval"),
           op.join(dwi_path,
    "sub-NDARAA948VFH_ses-HBNsiteRU_acq-64dir_space-T1w_desc-preproc_dwi.bvec"))

    data = np.asarray(img.dataobj)

    mask_img = nib.load(
           op.join(dwi_path,
    "sub-NDARAA948VFH_ses-HBNsiteRU_acq-64dir_space-T1w_desc-brain_mask.nii.gz"))

    brain_mask = mask_img.get_fdata()








.. GENERATED FROM PYTHON SOURCE LINES 53-54

Let us consider only a single slice for the FORECAST fitting

.. GENERATED FROM PYTHON SOURCE LINES 54-58

.. code-block:: Python


    data_small = data[:, :, 50:51]
    mask_small = brain_mask[:, :, 50:51]








.. GENERATED FROM PYTHON SOURCE LINES 59-66

Instantiate the FORECAST Model.

"sh_order" is the spherical harmonics order used for the fODF.

dec_alg is the spherical deconvolution algorithm used for the FORECAST basis
fitting, in this case we used the Constrained Spherical Deconvolution (CSD)
algorithm.

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: Python


    fm = ForecastModel(gtab, sh_order=6, dec_alg='CSD')








.. GENERATED FROM PYTHON SOURCE LINES 70-71

Fit the FORECAST to the data

.. GENERATED FROM PYTHON SOURCE LINES 71-74

.. code-block:: Python


    f_fit = fm.fit(data_small, mask_small)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                                                                                                                        | 0/5148.0 [00:00<?, ?it/s]      0%|▎                                                                                                                             | 14/5148.0 [00:00<00:37, 135.60it/s]      1%|█▏                                                                                                                            | 46/5148.0 [00:00<00:21, 240.68it/s]      2%|█▉                                                                                                                            | 79/5148.0 [00:00<00:18, 280.48it/s]      2%|██▋                                                                                                                          | 111/5148.0 [00:00<00:17, 295.60it/s]      3%|███▌                                                                                                                         | 145/5148.0 [00:00<00:16, 310.85it/s]      3%|████▎                                                                                                                        | 177/5148.0 [00:00<00:15, 313.62it/s]      4%|█████                                                                                                                        | 211/5148.0 [00:00<00:15, 321.95it/s]      5%|█████▉                                                                                                                       | 246/5148.0 [00:00<00:14, 329.35it/s]      5%|██████▊                                                                                                                      | 279/5148.0 [00:00<00:14, 328.85it/s]      6%|███████▌                                                                                                                     | 314/5148.0 [00:01<00:14, 333.65it/s]      7%|████████▌                                                                                                                    | 351/5148.0 [00:01<00:13, 342.87it/s]      8%|█████████▍                                                                                                                   | 391/5148.0 [00:01<00:13, 359.52it/s]      8%|██████████▍                                                                                                                  | 432/5148.0 [00:01<00:12, 374.36it/s]      9%|███████████▍                                                                                                                 | 472/5148.0 [00:01<00:12, 381.65it/s]     10%|████████████▍                                                                                                                | 511/5148.0 [00:01<00:12, 376.78it/s]     11%|█████████████▎                                                                                                               | 549/5148.0 [00:01<00:12, 367.69it/s]     12%|██████████████▍                                                                                                              | 593/5148.0 [00:01<00:11, 386.23it/s]     12%|███████████████▎                                                                                                             | 632/5148.0 [00:01<00:11, 383.63it/s]     13%|████████████████▎                                                                                                            | 671/5148.0 [00:01<00:12, 371.87it/s]     14%|█████████████████▏                                                                                                           | 709/5148.0 [00:02<00:12, 367.20it/s]     14%|██████████████████                                                                                                           | 746/5148.0 [00:02<00:12, 352.73it/s]     15%|███████████████████                                                                                                          | 783/5148.0 [00:02<00:12, 356.80it/s]     16%|███████████████████▉                                                                                                         | 820/5148.0 [00:02<00:12, 359.84it/s]     17%|████████████████████▊                                                                                                        | 859/5148.0 [00:02<00:11, 367.12it/s]     17%|█████████████████████▊                                                                                                       | 899/5148.0 [00:02<00:11, 376.37it/s]     18%|██████████████████████▊                                                                                                      | 937/5148.0 [00:02<00:11, 371.15it/s]     19%|███████████████████████▊                                                                                                     | 982/5148.0 [00:02<00:10, 393.91it/s]     20%|████████████████████████▌                                                                                                   | 1022/5148.0 [00:02<00:10, 388.44it/s]     21%|█████████████████████████▋                                                                                                  | 1064/5148.0 [00:02<00:10, 396.14it/s]     21%|██████████████████████████▌                                                                                                 | 1104/5148.0 [00:03<00:10, 377.92it/s]     22%|███████████████████████████▋                                                                                                | 1147/5148.0 [00:03<00:10, 390.86it/s]     23%|████████████████████████████▌                                                                                               | 1187/5148.0 [00:03<00:10, 380.80it/s]     24%|█████████████████████████████▌                                                                                              | 1229/5148.0 [00:03<00:10, 389.39it/s]     25%|██████████████████████████████▌                                                                                             | 1270/5148.0 [00:03<00:09, 395.08it/s]     25%|███████████████████████████████▌                                                                                            | 1310/5148.0 [00:03<00:09, 392.66it/s]     26%|████████████████████████████████▌                                                                                           | 1353/5148.0 [00:03<00:09, 403.30it/s]     27%|█████████████████████████████████▋                                                                                          | 1401/5148.0 [00:03<00:08, 425.43it/s]     28%|██████████████████████████████████▊                                                                                         | 1444/5148.0 [00:03<00:08, 417.82it/s]     29%|███████████████████████████████████▊                                                                                        | 1486/5148.0 [00:04<00:08, 413.38it/s]     30%|████████████████████████████████████▊                                                                                       | 1528/5148.0 [00:04<00:08, 405.51it/s]     31%|█████████████████████████████████████▉                                                                                      | 1576/5148.0 [00:04<00:08, 425.52it/s]     32%|███████████████████████████████████████                                                                                     | 1622/5148.0 [00:04<00:08, 433.99it/s]     32%|████████████████████████████████████████▏                                                                                   | 1669/5148.0 [00:04<00:07, 442.78it/s]     33%|█████████████████████████████████████████▎                                                                                  | 1714/5148.0 [00:04<00:08, 428.08it/s]     34%|██████████████████████████████████████████▍                                                                                 | 1761/5148.0 [00:04<00:07, 436.57it/s]     35%|███████████████████████████████████████████▍                                                                                | 1805/5148.0 [00:04<00:07, 435.81it/s]     36%|████████████████████████████████████████████▌                                                                               | 1852/5148.0 [00:04<00:07, 445.44it/s]     37%|█████████████████████████████████████████████▋                                                                              | 1897/5148.0 [00:04<00:07, 442.56it/s]     38%|██████████████████████████████████████████████▊                                                                             | 1942/5148.0 [00:05<00:07, 441.80it/s]     39%|███████████████████████████████████████████████▊                                                                            | 1987/5148.0 [00:05<00:07, 424.56it/s]     39%|████████████████████████████████████████████████▉                                                                           | 2032/5148.0 [00:05<00:07, 430.95it/s]     40%|██████████████████████████████████████████████████                                                                          | 2076/5148.0 [00:05<00:07, 427.00it/s]     41%|███████████████████████████████████████████████████▏                                                                        | 2124/5148.0 [00:05<00:06, 442.06it/s]     42%|████████████████████████████████████████████████████▎                                                                       | 2170/5148.0 [00:05<00:06, 445.65it/s]     43%|█████████████████████████████████████████████████████▍                                                                      | 2216/5148.0 [00:05<00:06, 446.95it/s]     44%|██████████████████████████████████████████████████████▍                                                                     | 2261/5148.0 [00:05<00:06, 435.95it/s]     45%|███████████████████████████████████████████████████████▌                                                                    | 2305/5148.0 [00:05<00:06, 425.71it/s]     46%|████████████████████████████████████████████████████████▌                                                                   | 2348/5148.0 [00:06<00:06, 424.17it/s]     46%|█████████████████████████████████████████████████████████▌                                                                  | 2391/5148.0 [00:06<00:06, 425.57it/s]     47%|██████████████████████████████████████████████████████████▋                                                                 | 2436/5148.0 [00:06<00:06, 432.37it/s]     48%|███████████████████████████████████████████████████████████▋                                                                | 2480/5148.0 [00:06<00:06, 434.29it/s]     49%|████████████████████████████████████████████████████████████▊                                                               | 2524/5148.0 [00:06<00:06, 427.95it/s]     50%|█████████████████████████████████████████████████████████████▊                                                              | 2568/5148.0 [00:06<00:06, 428.13it/s]     51%|██████████████████████████████████████████████████████████████▉                                                             | 2612/5148.0 [00:06<00:05, 431.59it/s]     52%|████████████████████████████████████████████████████████████████                                                            | 2662/5148.0 [00:06<00:05, 451.51it/s]     53%|█████████████████████████████████████████████████████████████████▎                                                          | 2711/5148.0 [00:06<00:05, 461.14it/s]     54%|██████████████████████████████████████████████████████████████████▍                                                         | 2758/5148.0 [00:06<00:05, 457.94it/s]     54%|███████████████████████████████████████████████████████████████████▌                                                        | 2805/5148.0 [00:07<00:05, 459.70it/s]     55%|████████████████████████████████████████████████████████████████████▋                                                       | 2851/5148.0 [00:07<00:05, 428.71it/s]     56%|█████████████████████████████████████████████████████████████████████▊                                                      | 2899/5148.0 [00:07<00:05, 442.76it/s]     57%|██████████████████████████████████████████████████████████████████████▉                                                     | 2946/5148.0 [00:07<00:04, 448.94it/s]     58%|████████████████████████████████████████████████████████████████████████                                                    | 2993/5148.0 [00:07<00:04, 453.43it/s]     59%|█████████████████████████████████████████████████████████████████████████▏                                                  | 3041/5148.0 [00:07<00:04, 458.72it/s]     60%|██████████████████████████████████████████████████████████████████████████▍                                                 | 3090/5148.0 [00:07<00:04, 466.64it/s]     61%|███████████████████████████████████████████████████████████████████████████▌                                                | 3137/5148.0 [00:07<00:04, 459.12it/s]     62%|████████████████████████████████████████████████████████████████████████████▋                                               | 3185/5148.0 [00:07<00:04, 464.86it/s]     63%|█████████████████████████████████████████████████████████████████████████████▊                                              | 3232/5148.0 [00:07<00:04, 465.97it/s]     64%|██████████████████████████████████████████████████████████████████████████████▉                                             | 3279/5148.0 [00:08<00:04, 463.71it/s]     65%|████████████████████████████████████████████████████████████████████████████████                                            | 3326/5148.0 [00:08<00:04, 447.27it/s]     65%|█████████████████████████████████████████████████████████████████████████████████▏                                          | 3371/5148.0 [00:08<00:04, 395.88it/s]     66%|██████████████████████████████████████████████████████████████████████████████████▍                                         | 3420/5148.0 [00:08<00:04, 419.55it/s]     67%|███████████████████████████████████████████████████████████████████████████████████▍                                        | 3466/5148.0 [00:08<00:03, 429.18it/s]     68%|████████████████████████████████████████████████████████████████████████████████████▋                                       | 3515/5148.0 [00:08<00:03, 444.75it/s]     69%|█████████████████████████████████████████████████████████████████████████████████████▊                                      | 3565/5148.0 [00:08<00:03, 458.90it/s]     70%|███████████████████████████████████████████████████████████████████████████████████████                                     | 3613/5148.0 [00:08<00:03, 464.64it/s]     71%|████████████████████████████████████████████████████████████████████████████████████████▏                                   | 3660/5148.0 [00:08<00:03, 462.47it/s]     72%|█████████████████████████████████████████████████████████████████████████████████████████▎                                  | 3707/5148.0 [00:09<00:03, 460.25it/s]     73%|██████████████████████████████████████████████████████████████████████████████████████████▍                                 | 3754/5148.0 [00:09<00:03, 439.35it/s]     74%|███████████████████████████████████████████████████████████████████████████████████████████▌                                | 3799/5148.0 [00:09<00:03, 438.00it/s]     75%|████████████████████████████████████████████████████████████████████████████████████████████▌                               | 3844/5148.0 [00:09<00:02, 437.31it/s]     76%|█████████████████████████████████████████████████████████████████████████████████████████████▋                              | 3892/5148.0 [00:09<00:02, 449.35it/s]     76%|██████████████████████████████████████████████████████████████████████████████████████████████▊                             | 3938/5148.0 [00:09<00:02, 448.19it/s]     77%|████████████████████████████████████████████████████████████████████████████████████████████████                            | 3989/5148.0 [00:09<00:02, 465.96it/s]     78%|█████████████████████████████████████████████████████████████████████████████████████████████████▏                          | 4036/5148.0 [00:09<00:02, 462.60it/s]     79%|██████████████████████████████████████████████████████████████████████████████████████████████████▎                         | 4083/5148.0 [00:09<00:02, 463.76it/s]     80%|███████████████████████████████████████████████████████████████████████████████████████████████████▍                        | 4130/5148.0 [00:09<00:02, 465.24it/s]     81%|████████████████████████████████████████████████████████████████████████████████████████████████████▌                       | 4177/5148.0 [00:10<00:02, 456.66it/s]     82%|█████████████████████████████████████████████████████████████████████████████████████████████████████▊                      | 4225/5148.0 [00:10<00:01, 463.39it/s]     83%|██████████████████████████████████████████████████████████████████████████████████████████████████████▉                     | 4272/5148.0 [00:10<00:01, 457.89it/s]     84%|████████████████████████████████████████████████████████████████████████████████████████████████████████                    | 4318/5148.0 [00:10<00:01, 456.41it/s]     85%|█████████████████████████████████████████████████████████████████████████████████████████████████████████                   | 4364/5148.0 [00:10<00:01, 450.50it/s]     86%|██████████████████████████████████████████████████████████████████████████████████████████████████████████▎                 | 4412/5148.0 [00:10<00:01, 456.18it/s]     87%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▍                | 4458/5148.0 [00:10<00:01, 441.80it/s]     88%|████████████████████████████████████████████████████████████████████████████████████████████████████████████▌               | 4505/5148.0 [00:10<00:01, 449.58it/s]     89%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████▋              | 4556/5148.0 [00:10<00:01, 466.85it/s]     89%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████▊             | 4603/5148.0 [00:11<00:01, 463.26it/s]     90%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████            | 4650/5148.0 [00:11<00:01, 456.84it/s]     91%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏          | 4697/5148.0 [00:11<00:00, 458.94it/s]     92%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏         | 4743/5148.0 [00:11<00:00, 456.37it/s]     93%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎        | 4789/5148.0 [00:11<00:00, 454.43it/s]     94%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌       | 4839/5148.0 [00:11<00:00, 465.47it/s]     95%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋      | 4887/5148.0 [00:11<00:00, 469.43it/s]     96%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊     | 4935/5148.0 [00:11<00:00, 472.20it/s]     97%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████    | 4984/5148.0 [00:11<00:00, 475.63it/s]     98%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎  | 5034/5148.0 [00:11<00:00, 481.08it/s]     99%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍ | 5083/5148.0 [00:12<00:00, 476.21it/s]    100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌| 5131/5148.0 [00:12<00:00, 476.95it/s]    100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 5148/5148.0 [00:12<00:00, 422.80it/s]




.. GENERATED FROM PYTHON SOURCE LINES 75-78

Calculate the crossing invariant tensor indices [Kaden2016]_ : the parallel
diffusivity, the perpendicular diffusivity, the fractional anisotropy and
the mean diffusivity.

.. GENERATED FROM PYTHON SOURCE LINES 78-84

.. code-block:: Python


    d_par = f_fit.dpar
    d_perp = f_fit.dperp
    fa = f_fit.fractional_anisotropy()
    md = f_fit.mean_diffusivity()








.. GENERATED FROM PYTHON SOURCE LINES 85-86

Show the indices and save them in FORECAST_indices.png.

.. GENERATED FROM PYTHON SOURCE LINES 86-110

.. code-block:: Python


    fig = plt.figure(figsize=(6, 6))
    ax1 = fig.add_subplot(2, 2, 1, title='parallel diffusivity')
    ax1.set_axis_off()
    ind = ax1.imshow(d_par[:, :, 0].T, interpolation='nearest',
                     origin='lower', cmap=plt.cm.gray)
    plt.colorbar(ind, shrink=0.6)
    ax2 = fig.add_subplot(2, 2, 2, title='perpendicular diffusivity')
    ax2.set_axis_off()
    ind = ax2.imshow(d_perp[:, :, 0].T, interpolation='nearest',
                     origin='lower', cmap=plt.cm.gray)
    plt.colorbar(ind, shrink=0.6)
    ax3 = fig.add_subplot(2, 2, 3, title='fractional anisotropy')
    ax3.set_axis_off()
    ind = ax3.imshow(fa[:, :, 0].T, interpolation='nearest',
                     origin='lower', cmap=plt.cm.gray)
    plt.colorbar(ind, shrink=0.6)
    ax4 = fig.add_subplot(2, 2, 4, title='mean diffusivity')
    ax4.set_axis_off()
    ind = ax4.imshow(md[:, :, 0].T, interpolation='nearest',
                     origin='lower', cmap=plt.cm.gray)
    plt.colorbar(ind, shrink=0.6)
    plt.savefig('FORECAST_indices.png', dpi=300, bbox_inches='tight')




.. image-sg:: /examples_built/reconstruction/images/sphx_glr_reconst_forecast_001.png
   :alt: reconst forecast
   :srcset: /examples_built/reconstruction/images/sphx_glr_reconst_forecast_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 111-117

.. rst-class:: centered small fst-italic fw-semibold

FORECAST scalar indices.


Load an ODF reconstruction sphere

.. GENERATED FROM PYTHON SOURCE LINES 117-120

.. code-block:: Python


    sphere = get_sphere('repulsion724')








.. GENERATED FROM PYTHON SOURCE LINES 121-122

Compute the fODFs.

.. GENERATED FROM PYTHON SOURCE LINES 122-126

.. code-block:: Python


    odf = f_fit.odf(sphere)
    print('fODF.shape (%d, %d, %d, %d)' % odf.shape)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    fODF.shape (108, 129, 1, 724)




.. GENERATED FROM PYTHON SOURCE LINES 127-128

Display a part of the fODFs

.. GENERATED FROM PYTHON SOURCE LINES 128-135

.. code-block:: Python


    odf_actor = actor.odf_slicer(odf[30:60, 30:60, :], sphere=sphere,
                                 colormap='plasma', scale=0.6)
    scene = window.Scene()
    scene.add(odf_actor)
    window.record(scene, out_path='fODFs.png', size=(600, 600), magnification=4)




.. image-sg:: /examples_built/reconstruction/images/sphx_glr_reconst_forecast_002.png
   :alt: reconst forecast
   :srcset: /examples_built/reconstruction/images/sphx_glr_reconst_forecast_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 136-163

.. rst-class:: centered small fst-italic fw-semibold

Fiber Orientation Distribution Functions, in a small ROI of the brain.


References
----------

.. [Anderson2005] Anderson A. W., "Measurement of Fiber Orientation
       Distributions Using High Angular Resolution Diffusion Imaging",
       Magnetic Resonance in Medicine, 2005.

.. [Kaden2016] Kaden E. et al., "Quantitative Mapping of the Per-Axon
       Diffusion Coefficients in Brain White Matter", Magnetic Resonance
       in Medicine, 2016.

.. [Zucchelli2017] Zucchelli E. et al., "A generalized SMT-based framework
       for Diffusion MRI microstructural model estimation", MICCAI Workshop
       on Computational DIFFUSION MRI (CDMRI), 2017.

.. [Alexander2017] Alexander LM, Escalera J, Ai L, et al. An open resource
       for transdiagnostic research in pediatric mental health and learning
       disorders. Sci Data. 2017;4:170181.

.. [RichieHalford2022] Richie-Halford A, Cieslak M, Ai L, et al. An
       analysis-ready and quality controlled resource for pediatric brain
       white-matter research. Scientific Data. 2022;9(1):1-27.

.. GENERATED FROM PYTHON SOURCE LINES 165-167

.. include:: ../../links_names.inc



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 41.027 seconds)


.. _sphx_glr_download_examples_built_reconstruction_reconst_forecast.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: reconst_forecast.ipynb <reconst_forecast.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: reconst_forecast.py <reconst_forecast.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
