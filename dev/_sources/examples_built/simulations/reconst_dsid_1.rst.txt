
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples_built\simulations\reconst_dsid_1.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_built_simulations_reconst_dsid_1.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_built_simulations_reconst_dsid_1.py:


===============================
DSI Deconvolution (DSID) vs DSI
===============================

An alternative method to DSI is the method proposed by
:footcite:p:`CanalesRodriguez2010` which is called DSI with Deconvolution. This
algorithm is using Lucy-Richardson deconvolution in the diffusion propagator
with the goal to create sharper ODFs with higher angular resolution.

In this example we will show with simulated data how this method's ODF
performs against standard DSI ODF and a ground truth multi tensor ODF.

.. GENERATED FROM PYTHON SOURCE LINES 14-23

.. code-block:: Python


    import numpy as np

    from dipy.core.gradients import gradient_table
    from dipy.data import get_fnames, get_sphere
    from dipy.reconst.dsi import DiffusionSpectrumDeconvModel, DiffusionSpectrumModel
    from dipy.sims.voxel import multi_tensor, multi_tensor_odf
    from dipy.viz import actor, window








.. GENERATED FROM PYTHON SOURCE LINES 24-26

For the simulation we will use a standard DSI acquisition scheme with 514
gradient directions and 1 S0.

.. GENERATED FROM PYTHON SOURCE LINES 26-31

.. code-block:: Python


    btable = np.loadtxt(get_fnames(name="dsi515btable"))

    gtab = gradient_table(btable[:, 0], bvecs=btable[:, 1:])








.. GENERATED FROM PYTHON SOURCE LINES 32-33

Let's create a multi tensor with 2 fiber directions at 60 degrees.

.. GENERATED FROM PYTHON SOURCE LINES 33-50

.. code-block:: Python


    evals = np.array([[0.0015, 0.0003, 0.0003], [0.0015, 0.0003, 0.0003]])

    directions = [(-30, 0), (30, 0)]

    fractions = [50, 50]

    signal, _ = multi_tensor(
        gtab, evals, S0=100, angles=directions, fractions=fractions, snr=None
    )

    sphere = get_sphere(name="repulsion724").subdivide(n=1)

    odf_gt = multi_tensor_odf(
        sphere.vertices, evals, angles=directions, fractions=fractions
    )








.. GENERATED FROM PYTHON SOURCE LINES 51-52

Perform the reconstructions with standard DSI and DSI with deconvolution.

.. GENERATED FROM PYTHON SOURCE LINES 52-61

.. code-block:: Python


    dsi_model = DiffusionSpectrumModel(gtab)

    dsi_odf = dsi_model.fit(signal).odf(sphere)

    dsid_model = DiffusionSpectrumDeconvModel(gtab)

    dsid_odf = dsid_model.fit(signal).odf(sphere)








.. GENERATED FROM PYTHON SOURCE LINES 62-65

Finally, we can visualize the ground truth ODF, together with the DSI and DSI
with deconvolution ODFs and observe that with the deconvolved method it is
easier to resolve the correct fiber directions because the ODF is sharper.

.. GENERATED FROM PYTHON SOURCE LINES 65-83

.. code-block:: Python


    # Enables/disables interactive visualization
    interactive = False


    scene = window.Scene()

    # concatenate data as 4D array
    odfs = np.vstack((odf_gt, dsi_odf, dsid_odf))[:, None, None]
    odf_actor = actor.odf_slicer(odfs, sphere=sphere, scale=0.5, colormap="plasma")

    odf_actor.display(y=0)
    odf_actor.RotateX(90)
    scene.add(odf_actor)
    window.record(scene=scene, out_path="dsid.png", size=(300, 300))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/simulations/images/sphx_glr_reconst_dsid_1_001.png
   :alt: reconst dsid 1
   :srcset: /examples_built/simulations/images/sphx_glr_reconst_dsid_1_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 84-94

.. rst-class:: centered small fst-italic fw-semibold

Ground truth ODF (left), DSI ODF (middle), DSI with Deconvolution ODF (right).


References
----------

.. footbibliography::


.. GENERATED FROM PYTHON SOURCE LINES 96-98

.. include:: ../../links_names.inc



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.500 seconds)


.. _sphx_glr_download_examples_built_simulations_reconst_dsid_1.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: reconst_dsid_1.ipynb <reconst_dsid_1.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: reconst_dsid_1.py <reconst_dsid_1.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
