
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples_built\fiber_tracking\tracking_ptt.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_built_fiber_tracking_tracking_ptt.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_built_fiber_tracking_tracking_ptt.py:


===============================
Parallel Transport Tractography
===============================
Parallel Transport Tractography (PTT) [Aydogan2021]_

Let's start by importing the necessary modules.

.. GENERATED FROM PYTHON SOURCE LINES 9-47

.. code-block:: Python


    from dipy.io.streamline import save_trk
    from dipy.io.stateful_tractogram import Space, StatefulTractogram
    from dipy.data import get_sphere
    from dipy.direction import PTTDirectionGetter
    from dipy.reconst.shm import CsaOdfModel
    from dipy.core.gradients import gradient_table
    from dipy.data import get_fnames
    from dipy.io.gradients import read_bvals_bvecs
    from dipy.io.image import load_nifti, load_nifti_data
    from dipy.reconst.csdeconv import (ConstrainedSphericalDeconvModel,
                                       auto_response_ssst)
    from dipy.tracking import utils
    from dipy.tracking.local_tracking import LocalTracking
    from dipy.tracking.streamline import Streamlines
    from dipy.tracking.stopping_criterion import ThresholdStoppingCriterion
    from dipy.viz import window, actor, colormap, has_fury


    # Enables/disables interactive visualization
    interactive = False

    hardi_fname, hardi_bval_fname, hardi_bvec_fname = get_fnames('stanford_hardi')
    label_fname = get_fnames('stanford_labels')

    data, affine, hardi_img = load_nifti(hardi_fname, return_img=True)
    labels = load_nifti_data(label_fname)
    bvals, bvecs = read_bvals_bvecs(hardi_bval_fname, hardi_bvec_fname)
    gtab = gradient_table(bvals, bvecs)

    seed_mask = (labels == 2)
    white_matter = (labels == 1) | (labels == 2)
    seeds = utils.seeds_from_mask(seed_mask, affine, density=1)

    response, ratio = auto_response_ssst(gtab, data, roi_radii=10, fa_thr=0.7)
    csd_model = ConstrainedSphericalDeconvModel(gtab, response, sh_order=6)
    csd_fit = csd_model.fit(data, mask=white_matter)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                                                                                                                                  | 0/58788 [00:00<?, ?it/s]      1%|█▎                                                                                                                                    | 573/58788 [00:00<00:10, 5715.45it/s]      2%|███                                                                                                                                  | 1365/58788 [00:00<00:08, 6999.77it/s]      4%|████▉                                                                                                                                | 2186/58788 [00:00<00:07, 7535.00it/s]      5%|██████▊                                                                                                                              | 3011/58788 [00:00<00:07, 7794.18it/s]      7%|████████▋                                                                                                                            | 3860/58788 [00:00<00:06, 8033.55it/s]      8%|██████████▌                                                                                                                          | 4689/58788 [00:00<00:06, 8107.21it/s]      9%|████████████▌                                                                                                                        | 5550/58788 [00:00<00:06, 8259.81it/s]     11%|██████████████▍                                                                                                                      | 6396/58788 [00:00<00:06, 8311.69it/s]     12%|████████████████▍                                                                                                                    | 7251/58788 [00:00<00:06, 8373.80it/s]     14%|██████████████████▎                                                                                                                  | 8094/58788 [00:01<00:06, 8387.07it/s]     15%|████████████████████▏                                                                                                                | 8933/58788 [00:01<00:06, 8240.95it/s]     17%|██████████████████████                                                                                                               | 9758/58788 [00:01<00:05, 8183.52it/s]     18%|███████████████████████▋                                                                                                            | 10577/58788 [00:01<00:05, 8152.11it/s]     19%|█████████████████████████▌                                                                                                          | 11393/58788 [00:01<00:05, 8120.06it/s]     21%|███████████████████████████▍                                                                                                        | 12229/58788 [00:01<00:05, 8180.56it/s]     22%|█████████████████████████████▎                                                                                                      | 13055/58788 [00:01<00:05, 8196.16it/s]     24%|███████████████████████████████▏                                                                                                    | 13875/58788 [00:01<00:05, 8067.55it/s]     25%|█████████████████████████████████                                                                                                   | 14717/58788 [00:01<00:05, 8166.19it/s]     26%|██████████████████████████████████▉                                                                                                 | 15535/58788 [00:01<00:05, 8087.35it/s]     28%|████████████████████████████████████▊                                                                                               | 16389/58788 [00:02<00:05, 8211.93it/s]     29%|██████████████████████████████████████▋                                                                                             | 17211/58788 [00:02<00:05, 8203.08it/s]     31%|████████████████████████████████████████▍                                                                                           | 18032/58788 [00:02<00:05, 8146.35it/s]     32%|██████████████████████████████████████████▎                                                                                         | 18856/58788 [00:02<00:04, 8164.51it/s]     33%|████████████████████████████████████████████▏                                                                                       | 19673/58788 [00:02<00:04, 8158.40it/s]     35%|██████████████████████████████████████████████                                                                                      | 20497/58788 [00:02<00:04, 8174.43it/s]     36%|███████████████████████████████████████████████▉                                                                                    | 21335/58788 [00:02<00:04, 8230.25it/s]     38%|█████████████████████████████████████████████████▊                                                                                  | 22181/58788 [00:02<00:04, 8288.84it/s]     39%|███████████████████████████████████████████████████▋                                                                                | 23010/58788 [00:02<00:04, 8206.29it/s]     41%|█████████████████████████████████████████████████████▌                                                                              | 23849/58788 [00:02<00:04, 8254.11it/s]     42%|███████████████████████████████████████████████████████▍                                                                            | 24688/58788 [00:03<00:04, 8284.87it/s]     43%|█████████████████████████████████████████████████████████▎                                                                          | 25546/58788 [00:03<00:03, 8366.40it/s]     45%|███████████████████████████████████████████████████████████▎                                                                        | 26398/58788 [00:03<00:03, 8403.96it/s]     46%|█████████████████████████████████████████████████████████████▏                                                                      | 27239/58788 [00:03<00:03, 8397.43it/s]     48%|███████████████████████████████████████████████████████████████                                                                     | 28079/58788 [00:03<00:03, 8340.74it/s]     49%|████████████████████████████████████████████████████████████████▉                                                                   | 28914/58788 [00:03<00:03, 8284.46it/s]     51%|██████████████████████████████████████████████████████████████████▊                                                                 | 29743/58788 [00:03<00:03, 8213.58it/s]     52%|████████████████████████████████████████████████████████████████████▋                                                               | 30581/58788 [00:03<00:03, 8252.38it/s]     53%|██████████████████████████████████████████████████████████████████████▌                                                             | 31412/58788 [00:03<00:03, 8257.01it/s]     55%|████████████████████████████████████████████████████████████████████████▍                                                           | 32258/58788 [00:03<00:03, 8308.10it/s]     56%|██████████████████████████████████████████████████████████████████████████▎                                                         | 33094/58788 [00:04<00:03, 8316.79it/s]     58%|████████████████████████████████████████████████████████████████████████████▏                                                       | 33927/58788 [00:04<00:02, 8311.74it/s]     59%|██████████████████████████████████████████████████████████████████████████████                                                      | 34759/58788 [00:04<00:02, 8279.73it/s]     61%|███████████████████████████████████████████████████████████████████████████████▉                                                    | 35609/58788 [00:04<00:02, 8335.83it/s]     62%|█████████████████████████████████████████████████████████████████████████████████▊                                                  | 36452/58788 [00:04<00:02, 8352.15it/s]     63%|███████████████████████████████████████████████████████████████████████████████████▊                                                | 37312/58788 [00:04<00:02, 8417.19it/s]     65%|█████████████████████████████████████████████████████████████████████████████████████▋                                              | 38184/58788 [00:04<00:02, 8497.51it/s]     66%|███████████████████████████████████████████████████████████████████████████████████████▋                                            | 39067/58788 [00:04<00:02, 8587.85it/s]     68%|█████████████████████████████████████████████████████████████████████████████████████████▋                                          | 39932/58788 [00:04<00:02, 8583.17it/s]     69%|███████████████████████████████████████████████████████████████████████████████████████████▌                                        | 40801/58788 [00:04<00:02, 8606.12it/s]     71%|█████████████████████████████████████████████████████████████████████████████████████████████▌                                      | 41662/58788 [00:05<00:01, 8595.70it/s]     72%|███████████████████████████████████████████████████████████████████████████████████████████████▍                                    | 42526/58788 [00:05<00:01, 8585.54it/s]     74%|█████████████████████████████████████████████████████████████████████████████████████████████████▍                                  | 43398/58788 [00:05<00:01, 8614.23it/s]     75%|███████████████████████████████████████████████████████████████████████████████████████████████████▍                                | 44260/58788 [00:05<00:01, 8555.03it/s]     77%|█████████████████████████████████████████████████████████████████████████████████████████████████████▎                              | 45122/58788 [00:05<00:01, 8564.70it/s]     78%|███████████████████████████████████████████████████████████████████████████████████████████████████████▏                            | 45979/58788 [00:05<00:01, 8527.81it/s]     80%|█████████████████████████████████████████████████████████████████████████████████████████████████████████▏                          | 46852/58788 [00:05<00:01, 8583.86it/s]     81%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▏                        | 47729/58788 [00:05<00:01, 8629.61it/s]     83%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████                       | 48593/58788 [00:05<00:01, 8557.67it/s]     84%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████                     | 49478/58788 [00:05<00:01, 8634.40it/s]     86%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████                   | 50342/58788 [00:06<00:00, 8627.46it/s]     87%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                 | 51205/58788 [00:06<00:00, 8541.88it/s]     89%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉               | 52065/58788 [00:06<00:00, 8546.93it/s]     90%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊             | 52924/58788 [00:06<00:00, 8551.20it/s]     91%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊           | 53780/58788 [00:06<00:00, 8434.87it/s]     93%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋         | 54633/58788 [00:06<00:00, 8451.27it/s]     94%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌       | 55493/58788 [00:06<00:00, 8482.75it/s]     96%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌     | 56342/58788 [00:06<00:00, 8477.29it/s]     97%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍   | 57190/58788 [00:06<00:00, 8363.42it/s]     99%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎ | 58027/58788 [00:06<00:00, 8233.92it/s]    100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 58788/58788 [00:07<00:00, 8274.84it/s]




.. GENERATED FROM PYTHON SOURCE LINES 48-49

We use the GFA of the CSA model to build a stopping criterion.

.. GENERATED FROM PYTHON SOURCE LINES 49-54

.. code-block:: Python


    csa_model = CsaOdfModel(gtab, sh_order=6)
    gfa = csa_model.fit(data, mask=white_matter).gfa
    stopping_criterion = ThresholdStoppingCriterion(gfa, .25)








.. GENERATED FROM PYTHON SOURCE LINES 55-57

Prepare the PTT direction getter using the fiber ODF (FOD) obtain with CSD.
Start the local tractography using PTT direction getter.

.. GENERATED FROM PYTHON SOURCE LINES 57-82

.. code-block:: Python


    sphere = get_sphere(name='repulsion724')
    fod = csd_fit.odf(sphere)
    pmf = fod.clip(min=0)
    ptt_dg = PTTDirectionGetter.from_pmf(pmf, max_angle=15, probe_length=0.5,
                                         sphere=sphere)

    # Parallel Transport Tractography
    streamline_generator = LocalTracking(direction_getter=ptt_dg,
                                         stopping_criterion=stopping_criterion,
                                         seeds=seeds,
                                         affine=affine,
                                         step_size=0.2)
    streamlines = Streamlines(streamline_generator)
    sft = StatefulTractogram(streamlines, hardi_img, Space.RASMM)
    save_trk(sft, "tractogram_ptt_dg_pmf.trk")

    if has_fury:
        scene = window.Scene()
        scene.add(actor.line(streamlines, colormap.line_colors(streamlines)))
        window.record(scene, out_path='tractogram_ptt_dg_pmf.png',
                      size=(800, 800))
        if interactive:
            window.show(scene)




.. image-sg:: /examples_built/fiber_tracking/images/sphx_glr_tracking_ptt_001.png
   :alt: tracking ptt
   :srcset: /examples_built/fiber_tracking/images/sphx_glr_tracking_ptt_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 83-94

.. rst-class:: centered small fst-italic fw-semibold

Corpus Callosum using ptt direction getter from PMF



References
----------
.. [Aydogan2021] Aydogan DB, Shi Y. Parallel Transport Tractography. IEEE
    Trans Med Imaging. 2021 Feb;40(2):635-647. doi: 10.1109/TMI.2020.3034038.
    Epub 2021 Feb 2. PMID: 33104507; PMCID: PMC7931442.

.. GENERATED FROM PYTHON SOURCE LINES 96-98

.. include:: ../../links_names.inc



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 46.552 seconds)


.. _sphx_glr_download_examples_built_fiber_tracking_tracking_ptt.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tracking_ptt.ipynb <tracking_ptt.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tracking_ptt.py <tracking_ptt.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
