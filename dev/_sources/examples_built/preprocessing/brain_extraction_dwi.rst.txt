
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples_built\preprocessing\brain_extraction_dwi.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_built_preprocessing_brain_extraction_dwi.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_built_preprocessing_brain_extraction_dwi.py:


===================================
Brain segmentation with median_otsu
===================================

We show how to extract brain information and mask from a b0 image using DIPY_'s
``segment.mask`` module.

First import the necessary modules:

.. GENERATED FROM PYTHON SOURCE LINES 11-20

.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy as np

    from dipy.core.histeq import histeq
    from dipy.data import get_fnames
    from dipy.io.image import load_nifti, save_nifti
    from dipy.segment.mask import median_otsu








.. GENERATED FROM PYTHON SOURCE LINES 21-25

Download and read the data for this tutorial.

The ``scil_b0`` dataset contains different data from different companies and
models. For this example, the data comes from a 1.5 Tesla Siemens MRI.

.. GENERATED FROM PYTHON SOURCE LINES 25-30

.. code-block:: Python


    data_fnames = get_fnames(name="scil_b0")
    data, affine = load_nifti(data_fnames[1])
    data = np.squeeze(data)








.. GENERATED FROM PYTHON SOURCE LINES 31-38

Segment the brain using DIPY's ``mask`` module.

``median_otsu`` returns the segmented brain data and a binary mask of the
brain. It is possible to fine tune the parameters of ``median_otsu``
(``median_radius`` and ``num_pass``) if extraction yields incorrect results
but the default parameters work well on most volumes. For this example,
we used 2 as ``median_radius`` and 1 as ``num_pass``

.. GENERATED FROM PYTHON SOURCE LINES 38-41

.. code-block:: Python


    b0_mask, mask = median_otsu(data, median_radius=2, numpass=1)








.. GENERATED FROM PYTHON SOURCE LINES 42-46

Saving the segmentation results is very easy. We need the ``b0_mask``, and
the binary mask volumes. The affine matrix which transform the image's
coordinates to the world coordinates is also needed. Here, we choose to save
both images in ``float32``.

.. GENERATED FROM PYTHON SOURCE LINES 46-51

.. code-block:: Python


    fname = "se_1.5t"
    save_nifti(fname + "_binary_mask.nii.gz", mask.astype(np.float32), affine)
    save_nifti(fname + "_mask.nii.gz", b0_mask.astype(np.float32), affine)








.. GENERATED FROM PYTHON SOURCE LINES 52-53

Quick view of the results middle slice using ``matplotlib``.

.. GENERATED FROM PYTHON SOURCE LINES 53-63

.. code-block:: Python


    sli = data.shape[2] // 2
    plt.figure("Brain segmentation")
    plt.subplot(1, 2, 1).set_axis_off()
    plt.imshow(histeq(data[:, :, sli].astype("float")).T, cmap="gray", origin="lower")

    plt.subplot(1, 2, 2).set_axis_off()
    plt.imshow(histeq(b0_mask[:, :, sli].astype("float")).T, cmap="gray", origin="lower")
    plt.savefig(f"{fname}_median_otsu.png", bbox_inches="tight")




.. image-sg:: /examples_built/preprocessing/images/sphx_glr_brain_extraction_dwi_001.png
   :alt: brain extraction dwi
   :srcset: /examples_built/preprocessing/images/sphx_glr_brain_extraction_dwi_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 64-73

.. rst-class:: centered small fst-italic fw-semibold

An application of median_otsu for brain segmentation.


``median_otsu`` can also automatically crop the outputs to remove the largest
possible number of background voxels. This makes outputted data significantly
smaller. Auto-cropping in ``median_otsu`` is activated by setting the
``autocrop`` parameter to ``True``.

.. GENERATED FROM PYTHON SOURCE LINES 73-76

.. code-block:: Python


    b0_mask_crop, mask_crop = median_otsu(data, median_radius=4, numpass=4, autocrop=True)








.. GENERATED FROM PYTHON SOURCE LINES 77-78

Saving cropped data as demonstrated previously.

.. GENERATED FROM PYTHON SOURCE LINES 78-82

.. code-block:: Python


    save_nifti(fname + "_binary_mask_crop.nii.gz", mask_crop.astype(np.float32), affine)
    save_nifti(fname + "_mask_crop.nii.gz", b0_mask_crop.astype(np.float32), affine)








.. GENERATED FROM PYTHON SOURCE LINES 83-85

.. include:: ../../links_names.inc



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 16.826 seconds)


.. _sphx_glr_download_examples_built_preprocessing_brain_extraction_dwi.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: brain_extraction_dwi.ipynb <brain_extraction_dwi.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: brain_extraction_dwi.py <brain_extraction_dwi.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
