Search.setIndex({"docnames": ["api_changes", "cite", "devel/benchmarking", "devel/bibliography", "devel/coding_style_guideline", "devel/commit_codes", "devel/gitwash/configure_git", "devel/gitwash/development_workflow", "devel/gitwash/dot2_dot3", "devel/gitwash/following_latest", "devel/gitwash/forking_hell", "devel/gitwash/git_development", "devel/gitwash/git_install", "devel/gitwash/git_intro", "devel/gitwash/git_resources", "devel/gitwash/index", "devel/gitwash/maintainer_workflow", "devel/gitwash/patching", "devel/gitwash/set_up_fork", "devel/index", "devel/installation_from_source", "devel/intro", "devel/make_release", "devel/toolchain", "developers", "examples_built/contextual_enhancement/contextual_enhancement", "examples_built/contextual_enhancement/fiber_to_bundle_coherence", "examples_built/contextual_enhancement/index", "examples_built/contextual_enhancement/sg_execution_times", "examples_built/fiber_tracking/index", "examples_built/fiber_tracking/linear_fascicle_evaluation", "examples_built/fiber_tracking/sg_execution_times", "examples_built/fiber_tracking/surface_seed", "examples_built/fiber_tracking/tracking_bootstrap_peaks", "examples_built/fiber_tracking/tracking_deterministic", "examples_built/fiber_tracking/tracking_introduction_eudx_1", "examples_built/fiber_tracking/tracking_pft", "examples_built/fiber_tracking/tracking_probabilistic", "examples_built/fiber_tracking/tracking_ptt", "examples_built/fiber_tracking/tracking_rumba", "examples_built/fiber_tracking/tracking_sfm", "examples_built/fiber_tracking/tracking_stopping_criterion", "examples_built/file_formats/index", "examples_built/file_formats/sg_execution_times", "examples_built/file_formats/streamline_formats", "examples_built/index", "examples_built/multiprocessing/index", "examples_built/multiprocessing/reconst_csa_parallel", "examples_built/multiprocessing/reconst_csd_parallel", "examples_built/multiprocessing/sg_execution_times", "examples_built/multiprocessing/tracking_disco_phantom", "examples_built/multiprocessing/tracking_fast_tractography", "examples_built/preprocessing/brain_extraction_dwi", "examples_built/preprocessing/denoise_ascm", "examples_built/preprocessing/denoise_gibbs", "examples_built/preprocessing/denoise_localpca", "examples_built/preprocessing/denoise_mppca", "examples_built/preprocessing/denoise_nlmeans", "examples_built/preprocessing/denoise_patch2self", "examples_built/preprocessing/gradients_spheres", "examples_built/preprocessing/index", "examples_built/preprocessing/motion_correction", "examples_built/preprocessing/piesno", "examples_built/preprocessing/reslice_datasets", "examples_built/preprocessing/sg_execution_times", "examples_built/preprocessing/snr_in_cc", "examples_built/quick_start/index", "examples_built/quick_start/quick_start", "examples_built/quick_start/sg_execution_times", "examples_built/quick_start/tracking_introduction_eudx", "examples_built/reconstruction/histology_resdnn", "examples_built/reconstruction/index", "examples_built/reconstruction/kfold_xval", "examples_built/reconstruction/reconst_bingham", "examples_built/reconstruction/reconst_csa", "examples_built/reconstruction/reconst_csd", "examples_built/reconstruction/reconst_cti", "examples_built/reconstruction/reconst_dki", "examples_built/reconstruction/reconst_dki_micro", "examples_built/reconstruction/reconst_dsi", "examples_built/reconstruction/reconst_dsi_metrics", "examples_built/reconstruction/reconst_dsid", "examples_built/reconstruction/reconst_dti", "examples_built/reconstruction/reconst_forecast", "examples_built/reconstruction/reconst_fwdti", "examples_built/reconstruction/reconst_gqi", "examples_built/reconstruction/reconst_ivim", "examples_built/reconstruction/reconst_mapmri", "examples_built/reconstruction/reconst_mcsd", "examples_built/reconstruction/reconst_msdki", "examples_built/reconstruction/reconst_qtdmri", "examples_built/reconstruction/reconst_qti", "examples_built/reconstruction/reconst_qtiplus", "examples_built/reconstruction/reconst_rumba", "examples_built/reconstruction/reconst_sfm", "examples_built/reconstruction/reconst_sh", "examples_built/reconstruction/reconst_shore", "examples_built/reconstruction/reconst_shore_metrics", "examples_built/reconstruction/restore_dti", "examples_built/reconstruction/sg_execution_times", "examples_built/registration/affine_registration_3d", "examples_built/registration/affine_registration_masks", "examples_built/registration/bundle_group_registration", "examples_built/registration/bundle_registration", "examples_built/registration/bundlewarp_registration", "examples_built/registration/index", "examples_built/registration/register_binary_fuzzy", "examples_built/registration/sg_execution_times", "examples_built/registration/streamline_registration", "examples_built/registration/syn_registration_2d", "examples_built/registration/syn_registration_3d", "examples_built/segmentation/brain_extraction_dwi_1", "examples_built/segmentation/bundle_extraction", "examples_built/segmentation/fast_streamline_search", "examples_built/segmentation/index", "examples_built/segmentation/segment_clustering_features", "examples_built/segmentation/segment_clustering_metrics", "examples_built/segmentation/segment_extending_clustering_framework", "examples_built/segmentation/segment_quickbundles", "examples_built/segmentation/sg_execution_times", "examples_built/segmentation/tissue_classification", "examples_built/segmentation/tissue_classification_dam", "examples_built/sg_execution_times", "examples_built/simulations/index", "examples_built/simulations/reconst_dsid_1", "examples_built/simulations/sg_execution_times", "examples_built/simulations/simulate_dki", "examples_built/simulations/simulate_multi_tensor", "examples_built/streamline_analysis/afq_tract_profiles", "examples_built/streamline_analysis/bundle_assignment_maps", "examples_built/streamline_analysis/bundle_shape_similarity", "examples_built/streamline_analysis/cluster_confidence", "examples_built/streamline_analysis/index", "examples_built/streamline_analysis/path_length_map", "examples_built/streamline_analysis/sg_execution_times", "examples_built/streamline_analysis/streamline_length", "examples_built/streamline_analysis/streamline_tools", "examples_built/visualization/index", "examples_built/visualization/sg_execution_times", "examples_built/visualization/viz_advanced", "examples_built/visualization/viz_bundles", "examples_built/visualization/viz_roi_contour", "examples_built/visualization/viz_slice", "examples_built/workflows/combined_workflow_creation", "examples_built/workflows/index", "examples_built/workflows/sg_execution_times", "examples_built/workflows/workflow_creation", "faq", "gimbal_lock", "glossary", "index", "interfaces/basic_flow", "interfaces/buan_flow", "interfaces/bundle_segmentation_flow", "interfaces/bundlewarp_registration_flow", "interfaces/data_fetch", "interfaces/denoise_flow", "interfaces/gibbs_unringing_flow", "interfaces/index", "interfaces/motion_flow", "interfaces/reconstruction_flow", "interfaces/registration_flow", "interfaces/tracking_flow", "interfaces/viz_flow", "old_highlights", "old_news", "recipes", "reference/dipy", "reference/dipy.align", "reference/dipy.core", "reference/dipy.data", "reference/dipy.denoise", "reference/dipy.direction", "reference/dipy.io", "reference/dipy.nn", "reference/dipy.reconst", "reference/dipy.segment", "reference/dipy.sims", "reference/dipy.stats", "reference/dipy.tracking", "reference/dipy.version", "reference/dipy.viz", "reference/dipy.workflows", "reference/index", "reference_cmd/dipy_align_affine", "reference_cmd/dipy_align_syn", "reference_cmd/dipy_apply_transform", "reference_cmd/dipy_buan_lmm", "reference_cmd/dipy_buan_profiles", "reference_cmd/dipy_buan_shapes", "reference_cmd/dipy_bundlewarp", "reference_cmd/dipy_classify_tissue", "reference_cmd/dipy_concatenate_tractograms", "reference_cmd/dipy_convert_sh", "reference_cmd/dipy_convert_tensors", "reference_cmd/dipy_convert_tractogram", "reference_cmd/dipy_correct_biasfield", "reference_cmd/dipy_correct_motion", "reference_cmd/dipy_denoise_lpca", "reference_cmd/dipy_denoise_mppca", "reference_cmd/dipy_denoise_nlmeans", "reference_cmd/dipy_denoise_patch2self", "reference_cmd/dipy_evac_plus", "reference_cmd/dipy_extract_b0", "reference_cmd/dipy_extract_shell", "reference_cmd/dipy_extract_volume", "reference_cmd/dipy_fetch", "reference_cmd/dipy_fit_csa", "reference_cmd/dipy_fit_csd", "reference_cmd/dipy_fit_dki", "reference_cmd/dipy_fit_dsi", "reference_cmd/dipy_fit_dsid", "reference_cmd/dipy_fit_dti", "reference_cmd/dipy_fit_forecast", "reference_cmd/dipy_fit_gqi", "reference_cmd/dipy_fit_ivim", "reference_cmd/dipy_fit_mapmri", "reference_cmd/dipy_fit_opdt", "reference_cmd/dipy_fit_qball", "reference_cmd/dipy_fit_sdt", "reference_cmd/dipy_fit_sfm", "reference_cmd/dipy_gibbs_ringing", "reference_cmd/dipy_horizon", "reference_cmd/dipy_info", "reference_cmd/dipy_labelsbundles", "reference_cmd/dipy_mask", "reference_cmd/dipy_math", "reference_cmd/dipy_median_otsu", "reference_cmd/dipy_nifti2pam", "reference_cmd/dipy_pam2nifti", "reference_cmd/dipy_recobundles", "reference_cmd/dipy_reslice", "reference_cmd/dipy_sh_convert_mrtrix", "reference_cmd/dipy_slr", "reference_cmd/dipy_snr_in_cc", "reference_cmd/dipy_split", "reference_cmd/dipy_tensor2pam", "reference_cmd/dipy_track", "reference_cmd/dipy_track_pft", "reference_cmd/index", "release_notes/release0.10", "release_notes/release0.11", "release_notes/release0.12", "release_notes/release0.13", "release_notes/release0.14", "release_notes/release0.15", "release_notes/release0.16", "release_notes/release0.6", "release_notes/release0.7", "release_notes/release0.8", "release_notes/release0.9", "release_notes/release1.0", "release_notes/release1.1", "release_notes/release1.10", "release_notes/release1.11", "release_notes/release1.2", "release_notes/release1.3", "release_notes/release1.4", "release_notes/release1.4.1", "release_notes/release1.5", "release_notes/release1.6", "release_notes/release1.7", "release_notes/release1.8", "release_notes/release1.9", "sg_execution_times", "stateoftheart", "subscribe", "theory/b_and_q", "theory/bmatrix", "theory/gqi", "theory/index", "theory/sh_basis", "theory/spherical", "user_guide/bibliography", "user_guide/data", "user_guide/dataset_list", "user_guide/dependencies", "user_guide/getting_started", "user_guide/index", "user_guide/installation", "user_guide/introduction", "user_guide/mission"], "filenames": ["api_changes.rst", "cite.rst", "devel/benchmarking.rst", "devel/bibliography.rst", "devel/coding_style_guideline.rst", "devel/commit_codes.rst", "devel/gitwash/configure_git.rst", "devel/gitwash/development_workflow.rst", "devel/gitwash/dot2_dot3.rst", "devel/gitwash/following_latest.rst", "devel/gitwash/forking_hell.rst", "devel/gitwash/git_development.rst", "devel/gitwash/git_install.rst", "devel/gitwash/git_intro.rst", "devel/gitwash/git_resources.rst", "devel/gitwash/index.rst", "devel/gitwash/maintainer_workflow.rst", "devel/gitwash/patching.rst", "devel/gitwash/set_up_fork.rst", "devel/index.rst", "devel/installation_from_source.rst", "devel/intro.rst", "devel/make_release.rst", "devel/toolchain.rst", "developers.rst", "examples_built/contextual_enhancement/contextual_enhancement.rst", "examples_built/contextual_enhancement/fiber_to_bundle_coherence.rst", "examples_built/contextual_enhancement/index.rst", "examples_built/contextual_enhancement/sg_execution_times.rst", "examples_built/fiber_tracking/index.rst", "examples_built/fiber_tracking/linear_fascicle_evaluation.rst", "examples_built/fiber_tracking/sg_execution_times.rst", "examples_built/fiber_tracking/surface_seed.rst", "examples_built/fiber_tracking/tracking_bootstrap_peaks.rst", "examples_built/fiber_tracking/tracking_deterministic.rst", "examples_built/fiber_tracking/tracking_introduction_eudx_1.rst", "examples_built/fiber_tracking/tracking_pft.rst", "examples_built/fiber_tracking/tracking_probabilistic.rst", "examples_built/fiber_tracking/tracking_ptt.rst", "examples_built/fiber_tracking/tracking_rumba.rst", "examples_built/fiber_tracking/tracking_sfm.rst", "examples_built/fiber_tracking/tracking_stopping_criterion.rst", "examples_built/file_formats/index.rst", "examples_built/file_formats/sg_execution_times.rst", "examples_built/file_formats/streamline_formats.rst", "examples_built/index.rst", "examples_built/multiprocessing/index.rst", "examples_built/multiprocessing/reconst_csa_parallel.rst", "examples_built/multiprocessing/reconst_csd_parallel.rst", "examples_built/multiprocessing/sg_execution_times.rst", "examples_built/multiprocessing/tracking_disco_phantom.rst", "examples_built/multiprocessing/tracking_fast_tractography.rst", "examples_built/preprocessing/brain_extraction_dwi.rst", "examples_built/preprocessing/denoise_ascm.rst", "examples_built/preprocessing/denoise_gibbs.rst", "examples_built/preprocessing/denoise_localpca.rst", "examples_built/preprocessing/denoise_mppca.rst", "examples_built/preprocessing/denoise_nlmeans.rst", "examples_built/preprocessing/denoise_patch2self.rst", "examples_built/preprocessing/gradients_spheres.rst", "examples_built/preprocessing/index.rst", "examples_built/preprocessing/motion_correction.rst", "examples_built/preprocessing/piesno.rst", "examples_built/preprocessing/reslice_datasets.rst", "examples_built/preprocessing/sg_execution_times.rst", "examples_built/preprocessing/snr_in_cc.rst", "examples_built/quick_start/index.rst", "examples_built/quick_start/quick_start.rst", "examples_built/quick_start/sg_execution_times.rst", "examples_built/quick_start/tracking_introduction_eudx.rst", "examples_built/reconstruction/histology_resdnn.rst", "examples_built/reconstruction/index.rst", "examples_built/reconstruction/kfold_xval.rst", "examples_built/reconstruction/reconst_bingham.rst", "examples_built/reconstruction/reconst_csa.rst", "examples_built/reconstruction/reconst_csd.rst", "examples_built/reconstruction/reconst_cti.rst", "examples_built/reconstruction/reconst_dki.rst", "examples_built/reconstruction/reconst_dki_micro.rst", "examples_built/reconstruction/reconst_dsi.rst", "examples_built/reconstruction/reconst_dsi_metrics.rst", "examples_built/reconstruction/reconst_dsid.rst", "examples_built/reconstruction/reconst_dti.rst", "examples_built/reconstruction/reconst_forecast.rst", "examples_built/reconstruction/reconst_fwdti.rst", "examples_built/reconstruction/reconst_gqi.rst", "examples_built/reconstruction/reconst_ivim.rst", "examples_built/reconstruction/reconst_mapmri.rst", "examples_built/reconstruction/reconst_mcsd.rst", "examples_built/reconstruction/reconst_msdki.rst", "examples_built/reconstruction/reconst_qtdmri.rst", "examples_built/reconstruction/reconst_qti.rst", "examples_built/reconstruction/reconst_qtiplus.rst", "examples_built/reconstruction/reconst_rumba.rst", "examples_built/reconstruction/reconst_sfm.rst", "examples_built/reconstruction/reconst_sh.rst", "examples_built/reconstruction/reconst_shore.rst", "examples_built/reconstruction/reconst_shore_metrics.rst", "examples_built/reconstruction/restore_dti.rst", "examples_built/reconstruction/sg_execution_times.rst", "examples_built/registration/affine_registration_3d.rst", "examples_built/registration/affine_registration_masks.rst", "examples_built/registration/bundle_group_registration.rst", "examples_built/registration/bundle_registration.rst", "examples_built/registration/bundlewarp_registration.rst", "examples_built/registration/index.rst", "examples_built/registration/register_binary_fuzzy.rst", "examples_built/registration/sg_execution_times.rst", "examples_built/registration/streamline_registration.rst", "examples_built/registration/syn_registration_2d.rst", "examples_built/registration/syn_registration_3d.rst", "examples_built/segmentation/brain_extraction_dwi_1.rst", "examples_built/segmentation/bundle_extraction.rst", "examples_built/segmentation/fast_streamline_search.rst", "examples_built/segmentation/index.rst", "examples_built/segmentation/segment_clustering_features.rst", "examples_built/segmentation/segment_clustering_metrics.rst", "examples_built/segmentation/segment_extending_clustering_framework.rst", "examples_built/segmentation/segment_quickbundles.rst", "examples_built/segmentation/sg_execution_times.rst", "examples_built/segmentation/tissue_classification.rst", "examples_built/segmentation/tissue_classification_dam.rst", "examples_built/sg_execution_times.rst", "examples_built/simulations/index.rst", "examples_built/simulations/reconst_dsid_1.rst", "examples_built/simulations/sg_execution_times.rst", "examples_built/simulations/simulate_dki.rst", "examples_built/simulations/simulate_multi_tensor.rst", "examples_built/streamline_analysis/afq_tract_profiles.rst", "examples_built/streamline_analysis/bundle_assignment_maps.rst", "examples_built/streamline_analysis/bundle_shape_similarity.rst", "examples_built/streamline_analysis/cluster_confidence.rst", "examples_built/streamline_analysis/index.rst", "examples_built/streamline_analysis/path_length_map.rst", "examples_built/streamline_analysis/sg_execution_times.rst", "examples_built/streamline_analysis/streamline_length.rst", "examples_built/streamline_analysis/streamline_tools.rst", "examples_built/visualization/index.rst", "examples_built/visualization/sg_execution_times.rst", "examples_built/visualization/viz_advanced.rst", "examples_built/visualization/viz_bundles.rst", "examples_built/visualization/viz_roi_contour.rst", "examples_built/visualization/viz_slice.rst", "examples_built/workflows/combined_workflow_creation.rst", "examples_built/workflows/index.rst", "examples_built/workflows/sg_execution_times.rst", "examples_built/workflows/workflow_creation.rst", "faq.rst", "gimbal_lock.rst", "glossary.rst", "index.rst", "interfaces/basic_flow.rst", "interfaces/buan_flow.rst", "interfaces/bundle_segmentation_flow.rst", "interfaces/bundlewarp_registration_flow.rst", "interfaces/data_fetch.rst", "interfaces/denoise_flow.rst", "interfaces/gibbs_unringing_flow.rst", "interfaces/index.rst", "interfaces/motion_flow.rst", "interfaces/reconstruction_flow.rst", "interfaces/registration_flow.rst", "interfaces/tracking_flow.rst", "interfaces/viz_flow.rst", "old_highlights.rst", "old_news.rst", "recipes.rst", "reference/dipy.rst", "reference/dipy.align.rst", "reference/dipy.core.rst", "reference/dipy.data.rst", "reference/dipy.denoise.rst", "reference/dipy.direction.rst", "reference/dipy.io.rst", "reference/dipy.nn.rst", "reference/dipy.reconst.rst", "reference/dipy.segment.rst", "reference/dipy.sims.rst", "reference/dipy.stats.rst", "reference/dipy.tracking.rst", "reference/dipy.version.rst", "reference/dipy.viz.rst", "reference/dipy.workflows.rst", "reference/index.rst", "reference_cmd/dipy_align_affine.rst", "reference_cmd/dipy_align_syn.rst", "reference_cmd/dipy_apply_transform.rst", "reference_cmd/dipy_buan_lmm.rst", "reference_cmd/dipy_buan_profiles.rst", "reference_cmd/dipy_buan_shapes.rst", "reference_cmd/dipy_bundlewarp.rst", "reference_cmd/dipy_classify_tissue.rst", "reference_cmd/dipy_concatenate_tractograms.rst", "reference_cmd/dipy_convert_sh.rst", "reference_cmd/dipy_convert_tensors.rst", "reference_cmd/dipy_convert_tractogram.rst", "reference_cmd/dipy_correct_biasfield.rst", "reference_cmd/dipy_correct_motion.rst", "reference_cmd/dipy_denoise_lpca.rst", "reference_cmd/dipy_denoise_mppca.rst", "reference_cmd/dipy_denoise_nlmeans.rst", "reference_cmd/dipy_denoise_patch2self.rst", "reference_cmd/dipy_evac_plus.rst", "reference_cmd/dipy_extract_b0.rst", "reference_cmd/dipy_extract_shell.rst", "reference_cmd/dipy_extract_volume.rst", "reference_cmd/dipy_fetch.rst", "reference_cmd/dipy_fit_csa.rst", "reference_cmd/dipy_fit_csd.rst", "reference_cmd/dipy_fit_dki.rst", "reference_cmd/dipy_fit_dsi.rst", "reference_cmd/dipy_fit_dsid.rst", "reference_cmd/dipy_fit_dti.rst", "reference_cmd/dipy_fit_forecast.rst", "reference_cmd/dipy_fit_gqi.rst", "reference_cmd/dipy_fit_ivim.rst", "reference_cmd/dipy_fit_mapmri.rst", "reference_cmd/dipy_fit_opdt.rst", "reference_cmd/dipy_fit_qball.rst", "reference_cmd/dipy_fit_sdt.rst", "reference_cmd/dipy_fit_sfm.rst", "reference_cmd/dipy_gibbs_ringing.rst", "reference_cmd/dipy_horizon.rst", "reference_cmd/dipy_info.rst", "reference_cmd/dipy_labelsbundles.rst", "reference_cmd/dipy_mask.rst", "reference_cmd/dipy_math.rst", "reference_cmd/dipy_median_otsu.rst", "reference_cmd/dipy_nifti2pam.rst", "reference_cmd/dipy_pam2nifti.rst", "reference_cmd/dipy_recobundles.rst", "reference_cmd/dipy_reslice.rst", "reference_cmd/dipy_sh_convert_mrtrix.rst", "reference_cmd/dipy_slr.rst", "reference_cmd/dipy_snr_in_cc.rst", "reference_cmd/dipy_split.rst", "reference_cmd/dipy_tensor2pam.rst", "reference_cmd/dipy_track.rst", "reference_cmd/dipy_track_pft.rst", "reference_cmd/index.rst", "release_notes/release0.10.rst", "release_notes/release0.11.rst", "release_notes/release0.12.rst", "release_notes/release0.13.rst", "release_notes/release0.14.rst", "release_notes/release0.15.rst", "release_notes/release0.16.rst", "release_notes/release0.6.rst", "release_notes/release0.7.rst", "release_notes/release0.8.rst", "release_notes/release0.9.rst", "release_notes/release1.0.rst", "release_notes/release1.1.rst", "release_notes/release1.10.rst", "release_notes/release1.11.rst", "release_notes/release1.2.rst", "release_notes/release1.3.rst", "release_notes/release1.4.rst", "release_notes/release1.4.1.rst", "release_notes/release1.5.rst", "release_notes/release1.6.rst", "release_notes/release1.7.rst", "release_notes/release1.8.rst", "release_notes/release1.9.rst", "sg_execution_times.rst", "stateoftheart.rst", "subscribe.rst", "theory/b_and_q.rst", "theory/bmatrix.rst", "theory/gqi.rst", "theory/index.rst", "theory/sh_basis.rst", "theory/spherical.rst", "user_guide/bibliography.rst", "user_guide/data.rst", "user_guide/dataset_list.rst", "user_guide/dependencies.rst", "user_guide/getting_started.rst", "user_guide/index.rst", "user_guide/installation.rst", "user_guide/introduction.rst", "user_guide/mission.rst"], "titles": ["API changes", "Publications", "\ud83d\ude80 DIPY Benchmarks \ud83d\udcca", "\ud83d\udcd6 Bibliography", "\ud83d\udcbb DIPY Coding Style Guideline", "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-git-commit sd-text-info\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M10.5 7.75a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm1.43.75a4.002 4.002 0 01-7.86 0H.75a.75.75 0 110-1.5h3.32a4.001 4.001 0 017.86 0h3.32a.75.75 0 110 1.5h-3.32z\"></path></svg> Commit message codes", "Configure git", "Development workflow", "Two and three dots in difference specs", "Following the latest source", "Making your own copy (fork) of DIPY", "Git for development", "Install git", "Introduction", "git resources", "Working with DIPY source code", "Maintainer workflow", "Making a patch", "Set up your fork", "DIPY Developer Guide", "Installing from source", "Introduction", "A guide to making a DIPY release", "\ud83d\udee0\ufe0f Toolchain Roadmap", "Developers", "Crossing-preserving contextual enhancement", "Fiber to bundle coherence measures", "Contextual Enhancement", "Computation times", "Fiber Tracking", "Linear fascicle evaluation (LiFE)", "Computation times", "Surface seeding for tractography", "Bootstrap and Closest Peak Direction Getters Example", "An introduction to the Deterministic Tractography", "Introduction to Basic Tracking", "Particle Filtering Tractography", "An introduction to the Probabilistic Tractography", "Parallel Transport Tractography", "Tracking with Robust Unbiased Model-BAsed Spherical Deconvolution (RUMBA-SD)", "Tracking with the Sparse Fascicle Model", "Using Various Stopping Criterion for Tractography", "File Formats", "Computation times", "Read/Write streamline files", "Examples", "Multiprocessing", "Parallel reconstruction using Q-Ball", "Parallel reconstruction using CSD", "Computation times", "Tractography on the DiSCo Phantom", "An introduction to the Fast Tracking Module", "Brain segmentation with median_otsu", "Denoise images using Adaptive Soft Coefficient Matching (ASCM)", "Suppress Gibbs oscillations", "Denoise images using Local PCA via empirical thresholds", "Denoise images using the Marcenko-Pastur PCA algorithm", "Denoise images using Non-Local Means (NLMEANS)", "Patch2Self: Self-Supervised Denoising via Statistical Independence", "Gradients and Spheres", "Preprocessing", "Between-volumes Motion Correction on DWI datasets", "Noise estimation using PIESNO", "Reslice diffusion datasets", "Computation times", "SNR estimation for Diffusion-Weighted Images", "Quick Start", "Getting started with DIPY", "Computation times", "Introduction to Basic Tracking", "Local reconstruction using the Histological ResDNN", "Reconstruction", "K-fold cross-validation for model comparison", "Reconstruction of Bingham Functions from ODFs", "Reconstruct with Constant Solid Angle (Q-Ball)", "Reconstruction with Constrained Spherical Deconvolution model (CSD)", "Reconstruction of the diffusion signal with the correlation tensor model (CTI)", "Reconstruction of the diffusion signal with the kurtosis tensor model (DKI)", "Reconstruction of the diffusion signal with the WMTI model (DKI-MICRO)", "Reconstruct with Diffusion Spectrum Imaging (DSI)", "Calculate DSI-based scalar maps", "DSI Deconvolution (DSID) vs DSI", "Reconstruction of the diffusion signal with DTI (single tensor) model", "Crossing invariant fiber response function with FORECAST model", "Using the free water elimination model to remove DTI free water contamination", "Reconstruct with Generalized Q-Sampling Imaging", "Intravoxel incoherent motion (IVIM)", "Continuous and analytical diffusion signal modelling with MAP-MRI", "Reconstruction with Multi-Shell Multi-Tissue CSD", "Mean signal diffusion kurtosis imaging (MSDKI)", "Estimating diffusion time dependent q-space indices using qt-dMRI", "Reconstruct with Q-space Trajectory Imaging (QTI)", "Applying positivity constraints to Q-space Trajectory Imaging (QTI+)", "Reconstruction with Robust and Unbiased Model-BAsed Spherical Deconvolution (RUMBA)", "Reconstruction with the Sparse Fascicle Model (SFM)", "Signal Reconstruction Using Spherical Harmonics", "Continuous and analytical diffusion signal modelling with 3D-SHORE", "Calculate SHORE scalar maps", "Using the RESTORE algorithm for robust tensor fitting", "Computation times", "Affine Registration in 3D", "Affine Registration with Masks", "Groupwise Bundle Registration", "Direct Bundle Registration", "Nonrigid Bundle Registration with BundleWarp", "Registration", "Diffeomorphic Registration with binary and fuzzy images", "Computation times", "Applying image-based deformations to streamlines", "Symmetric Diffeomorphic Registration in 2D", "Symmetric Diffeomorphic Registration in 3D", "Brain segmentation with median_otsu", "Automatic Fiber Bundle Extraction with RecoBundles", "Fast Streamline Search", "Segmentation", "Tractography Clustering - Available Features", "Tractography Clustering - Available Metrics", "Enhancing QuickBundles with different metrics and features", "Tractography Clustering with QuickBundles", "Computation times", "Tissue Classification of a T1-weighted Structural Image", "Tissue Classification using Diffusion MRI with DAM", "Computation times", "Simulation", "DSI Deconvolution (DSID) vs DSI", "Computation times", "DKI MultiTensor Simulation", "MultiTensor Simulation", "Extracting AFQ tract profiles from segmented bundles", "BUAN Bundle Assignment Maps Creation", "BUAN Bundle Shape Similarity Score", "Calculation of Outliers with Cluster Confidence Index", "Streamlines Analysis and Connectivity", "Calculate Path Length Map", "Computation times", "Streamline length and size reduction", "Connectivity Matrices, ROI Intersections and Density Maps", "Visualization", "Computation times", "Advanced interactive visualization", "Visualize bundles and metrics on bundles", "Visualization of ROI Surface Rendered with Streamlines", "Simple volume slicing", "Creating a new combined workflow", "Workflows", "Computation times", "Creating a new workflow.", "Frequently Asked Questions", "Gimbal lock", "Glossary", "Diffusion Imaging In Python - Documentation", "Introduction to command line interfaces", "BUndle ANalytics (BUAN) framework", "White Matter Bundle Segmentation with RecoBundles", "Nonrigid White Matter Bundle Registration with BundleWarp", "Downloading DIPY datasets", "Denoising", "Gibbs Unringing", "DIPY Workflows Interfaces", "Between-Volumes Motion Correction", "Reconstruction", "Registration", "Tracking", "dMRI Visualization with Horizon", "Older Highlights", "Past Announcements", "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-mortar-board\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.693 1.066a.75.75 0 01.614 0l7.25 3.25a.75.75 0 010 1.368L13 6.831v2.794c0 1.024-.81 1.749-1.66 2.173-.893.447-2.075.702-3.34.702-.278 0-.55-.012-.816-.036a.75.75 0 01.133-1.494c.22.02.45.03.683.03 1.082 0 2.025-.221 2.67-.543.69-.345.83-.682.83-.832V7.503L8.307 8.934a.75.75 0 01-.614 0L4 7.28v1.663c.296.105.575.275.812.512.438.438.688 1.059.688 1.796v3a.75.75 0 01-.75.75h-3a.75.75 0 01-.75-.75v-3c0-.737.25-1.358.688-1.796.237-.237.516-.407.812-.512V6.606L.443 5.684a.75.75 0 010-1.368l7.25-3.25zM2.583 5L8 7.428 13.416 5 8 2.572 2.583 5zM2.5 11.25c0-.388.125-.611.25-.735a.704.704 0 01.5-.203c.19 0 .37.071.5.203.125.124.25.347.25.735v2.25H2.5v-2.25z\"></path></svg> Recipes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dipy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">align</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">denoise</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">reconst</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sims</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stats</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows</span></code>", "API Reference", "dipy_align_affine", "dipy_align_syn", "dipy_apply_transform", "dipy_buan_lmm", "dipy_buan_profiles", "dipy_buan_shapes", "dipy_bundlewarp", "dipy_classify_tissue", "dipy_concatenate_tractograms", "dipy_convert_sh", "dipy_convert_tensors", "dipy_convert_tractogram", "dipy_correct_biasfield", "dipy_correct_motion", "dipy_denoise_lpca", "dipy_denoise_mppca", "dipy_denoise_nlmeans", "dipy_denoise_patch2self", "dipy_evac_plus", "dipy_extract_b0", "dipy_extract_shell", "dipy_extract_volume", "dipy_fetch", "dipy_fit_csa", "dipy_fit_csd", "dipy_fit_dki", "dipy_fit_dsi", "dipy_fit_dsid", "dipy_fit_dti", "dipy_fit_forecast", "dipy_fit_gqi", "dipy_fit_ivim", "dipy_fit_mapmri", "dipy_fit_opdt", "dipy_fit_qball", "dipy_fit_sdt", "dipy_fit_sfm", "dipy_gibbs_ringing", "dipy_horizon", "dipy_info", "dipy_labelsbundles", "dipy_mask", "dipy_math", "dipy_median_otsu", "dipy_nifti2pam", "dipy_pam2nifti", "dipy_recobundles", "dipy_reslice", "dipy_sh_convert_mrtrix", "dipy_slr", "dipy_snr_in_cc", "dipy_split", "dipy_tensor2pam", "dipy_track", "dipy_track_pft", "Command Line Utilities Reference", "Release notes for DIPY version 0.10", "Release notes for DIPY version 0.11", "Release notes for DIPY version 0.12", "Release notes for DIPY version 0.13", "Release notes for DIPY version 0.14", "Release notes for DIPY version 0.15", "Release notes for DIPY version 0.16", "Release notes for DIPY version 0.6", "Release notes for DIPY version 0.7", "Release notes for DIPY version 0.8", "Release notes for DIPY version 0.9", "Release notes for DIPY version 1.0", "Release notes for DIPY version 1.1", "Release notes for DIPY version 1.10", "Release notes for DIPY version 1.11", "Release notes for DIPY version 1.2", "Release notes for DIPY version 1.3", "Release notes for DIPY version 1.4", "Release notes for DIPY version 1.4.1", "Release notes for DIPY version 1.5", "Release notes for DIPY version 1.6", "Release notes for DIPY version 1.7", "Release notes for DIPY version 1.8", "Release notes for DIPY version 1.9", "Computation times", "A quick overview of features", "Subscribe", "DIY Stuff about b and q", "The B matrix and Siemens DICOM", "Generalised Q-Sampling Imaging", "Theory and concepts", "Spherical Harmonic bases", "Spherical coordinates", "General bibliography", "Data", "&lt;no title&gt;", "Python versions and dependencies", "Getting Started", "DIPY User Guide", "Installation", "What is DIPY?", "Mission statement"], "terms": {"here": [0, 2, 6, 7, 10, 12, 13, 14, 17, 18, 20, 21, 22, 24, 25, 26, 30, 34, 35, 39, 40, 41, 45, 48, 52, 53, 62, 63, 65, 67, 69, 72, 73, 75, 77, 78, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 100, 102, 103, 104, 111, 112, 113, 115, 116, 118, 120, 126, 128, 133, 136, 139, 140, 141, 142, 148, 153, 154, 160, 163, 164, 166, 169, 173, 175, 176, 177, 179, 250, 260, 265, 268, 269, 272, 277], "we": [0, 4, 7, 10, 17, 18, 20, 21, 22, 24, 25, 26, 30, 33, 34, 35, 36, 37, 39, 40, 41, 44, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 181, 182, 233, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 272, 273, 276, 277, 279, 281], "provid": [0, 4, 23, 30, 34, 35, 39, 40, 44, 56, 58, 67, 69, 75, 76, 77, 78, 83, 86, 87, 88, 89, 90, 91, 92, 96, 100, 101, 103, 104, 108, 110, 112, 115, 116, 117, 118, 131, 133, 139, 140, 141, 150, 151, 152, 154, 160, 162, 163, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 192, 204, 205, 216, 222, 223, 237, 240, 247, 248, 249, 251, 253, 254, 256, 260, 265, 272], "inform": [0, 4, 7, 12, 20, 23, 35, 36, 41, 44, 52, 53, 55, 56, 58, 67, 69, 70, 73, 74, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 100, 101, 111, 115, 116, 117, 118, 126, 128, 135, 143, 146, 147, 151, 152, 153, 154, 156, 159, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 181, 182, 184, 185, 201, 223, 247, 251, 253, 254, 256, 265, 272, 273, 274, 275, 276], "about": [0, 4, 7, 17, 20, 30, 37, 39, 47, 48, 56, 67, 75, 77, 78, 79, 82, 86, 87, 88, 89, 90, 91, 92, 93, 100, 115, 116, 117, 118, 126, 133, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 163, 164, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 188, 189, 198, 199, 201, 202, 207, 208, 214, 217, 218, 219, 220, 221, 222, 223, 224, 230, 237, 238, 240, 244, 245, 249, 251, 255, 259, 262, 270, 274, 277], "function": [0, 1, 2, 4, 5, 23, 25, 30, 35, 37, 39, 40, 44, 45, 47, 48, 54, 56, 57, 59, 61, 62, 67, 69, 71, 74, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 110, 112, 115, 116, 126, 127, 135, 136, 139, 142, 147, 150, 151, 160, 162, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 208, 213, 219, 220, 226, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 271, 272, 273, 279], "class": [0, 2, 4, 30, 44, 73, 82, 84, 88, 98, 100, 109, 110, 113, 117, 120, 139, 143, 146, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 191, 240, 247, 248, 249], "have": [0, 2, 7, 9, 10, 12, 14, 16, 17, 18, 20, 21, 22, 23, 30, 33, 35, 37, 40, 44, 45, 57, 58, 59, 62, 63, 65, 67, 69, 71, 72, 73, 74, 75, 76, 77, 79, 82, 85, 86, 87, 88, 89, 91, 93, 94, 95, 97, 98, 100, 102, 103, 104, 108, 110, 115, 116, 117, 118, 120, 126, 128, 131, 133, 135, 136, 139, 140, 142, 143, 146, 147, 148, 149, 150, 152, 153, 154, 163, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 181, 182, 190, 191, 216, 222, 226, 230, 233, 240, 244, 247, 249, 250, 251, 256, 257, 263, 267, 268, 271, 279], "been": [0, 4, 7, 16, 22, 30, 55, 56, 72, 77, 82, 86, 87, 97, 102, 103, 108, 118, 120, 128, 160, 168, 169, 173, 175, 176, 179, 182, 192, 271], "remov": [0, 7, 20, 26, 30, 40, 44, 45, 52, 54, 55, 56, 71, 74, 78, 82, 89, 93, 99, 108, 109, 110, 111, 118, 131, 157, 164, 168, 169, 171, 173, 174, 175, 176, 179, 182, 210, 211, 221, 227, 233, 240, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 273, 279], "renam": [0, 17, 151, 241, 242, 247, 248, 249, 251, 254, 255], "ar": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 25, 26, 30, 34, 35, 37, 40, 41, 44, 45, 48, 51, 53, 54, 55, 56, 58, 59, 62, 65, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 112, 113, 115, 116, 117, 120, 121, 126, 127, 128, 130, 131, 135, 136, 139, 140, 142, 143, 147, 148, 149, 151, 152, 153, 154, 156, 157, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 191, 192, 194, 197, 198, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 223, 226, 227, 230, 231, 233, 237, 240, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 272, 274, 276, 277, 279, 280], "deprec": [0, 4, 150, 164, 173, 175, 240, 242, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262], "recommend": [0, 4, 44, 45, 54, 61, 71, 73, 75, 77, 79, 87, 90, 92, 93, 112, 113, 139, 142, 147, 156, 157, 159, 166, 168, 169, 174, 175, 178, 179, 182, 186, 191, 196, 209, 212, 246, 265, 276, 279], "dure": [0, 6, 7, 23, 30, 61, 84, 87, 92, 98, 101, 108, 159, 160, 161, 168, 169, 174, 175, 182, 207, 208, 210, 211, 217, 218, 240, 245, 253, 255], "differ": [0, 2, 13, 15, 19, 20, 25, 26, 30, 37, 40, 44, 45, 52, 53, 54, 56, 57, 58, 59, 62, 63, 72, 73, 75, 76, 77, 79, 84, 86, 87, 88, 89, 90, 91, 94, 95, 98, 101, 103, 104, 106, 108, 109, 111, 112, 114, 115, 118, 119, 120, 126, 128, 135, 139, 142, 143, 146, 147, 148, 152, 154, 157, 161, 162, 164, 168, 169, 170, 171, 174, 175, 176, 179, 181, 182, 185, 194, 195, 222, 223, 240, 244, 245, 248, 249, 251, 255, 256, 260, 263, 264, 265, 267, 268, 271, 272, 273], "releas": [0, 2, 19, 23, 150, 164, 165, 168, 175, 181, 265], "circl": [0, 109, 169, 179], "gener": [0, 1, 2, 4, 7, 10, 13, 17, 20, 21, 22, 24, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 146, 147, 150, 151, 152, 157, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 229, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 279], "pep": [0, 164, 249, 253], "3102": [0, 164, 253, 263], "keyword": [0, 4, 30, 164, 169, 173, 175, 178, 181, 253], "onli": [0, 3, 4, 7, 8, 10, 16, 18, 22, 25, 26, 30, 40, 41, 44, 47, 54, 56, 58, 63, 67, 72, 73, 75, 77, 79, 80, 82, 83, 84, 85, 87, 88, 89, 93, 94, 97, 98, 101, 103, 108, 109, 115, 116, 117, 118, 126, 127, 128, 136, 140, 147, 151, 152, 156, 157, 160, 161, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 191, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 231, 233, 240, 241, 242, 245, 247, 249, 251, 252, 253, 256, 261, 267, 268, 271, 279], "argument": [0, 30, 58, 86, 93, 102, 113, 136, 143, 146, 153, 154, 155, 156, 157, 159, 160, 161, 162, 164, 168, 169, 174, 175, 178, 181, 182, 245, 247, 251, 253, 254, 255, 257, 258, 260], "ha": [0, 4, 7, 14, 16, 22, 25, 30, 35, 37, 41, 48, 55, 56, 58, 61, 62, 65, 69, 72, 74, 75, 77, 78, 79, 82, 84, 85, 86, 87, 89, 91, 92, 93, 100, 103, 110, 115, 117, 118, 120, 128, 135, 136, 142, 147, 148, 149, 152, 160, 162, 163, 168, 169, 171, 173, 174, 175, 176, 177, 179, 182, 192, 210, 211, 237, 240, 242, 245, 247, 249, 253, 255, 261, 267, 271, 272, 279], "implement": [0, 6, 7, 25, 26, 30, 41, 51, 54, 59, 72, 77, 78, 83, 84, 87, 88, 93, 95, 98, 100, 101, 108, 109, 110, 117, 143, 149, 150, 161, 164, 168, 169, 171, 172, 173, 175, 179, 181, 182, 242, 245, 246, 247, 249, 250, 251, 252, 253, 254, 259, 261, 265, 271, 273], "codebas": [0, 1, 164], "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 16, 17, 18, 20, 22, 23, 25, 26, 30, 33, 34, 35, 36, 37, 39, 40, 41, 44, 47, 48, 50, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 142, 143, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 191, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 271, 272, 279, 280, 281], "mean": [0, 7, 18, 25, 30, 45, 53, 54, 56, 58, 60, 64, 65, 70, 71, 72, 76, 77, 78, 80, 82, 83, 84, 87, 90, 93, 97, 99, 100, 102, 103, 108, 112, 115, 117, 128, 130, 142, 148, 149, 156, 158, 164, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 181, 182, 190, 198, 200, 203, 204, 207, 209, 212, 213, 216, 217, 218, 221, 222, 237, 238, 249, 250, 251, 256, 264, 272, 273], "all": [0, 1, 2, 4, 5, 6, 7, 17, 18, 22, 23, 26, 30, 33, 35, 37, 40, 41, 44, 45, 50, 51, 54, 56, 58, 62, 65, 67, 69, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 86, 87, 88, 89, 90, 92, 93, 98, 100, 101, 102, 103, 108, 112, 113, 115, 116, 126, 128, 130, 135, 136, 139, 142, 143, 146, 148, 150, 152, 155, 157, 159, 163, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 192, 203, 206, 207, 216, 217, 218, 230, 233, 237, 238, 242, 244, 247, 251, 252, 253, 255, 258, 262, 264, 274, 279], "rais": [0, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 182, 207, 208, 210, 211, 217, 218, 221, 231, 233, 240, 242, 243, 244, 245, 247, 249, 253, 262, 263], "warn": [0, 20, 70, 77, 84, 87, 88, 92, 97, 164, 171, 175, 240, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263], "user": [0, 7, 14, 17, 18, 20, 22, 23, 41, 56, 67, 76, 77, 79, 84, 86, 87, 88, 91, 92, 93, 97, 100, 102, 104, 112, 139, 151, 152, 156, 157, 161, 163, 164, 169, 173, 174, 175, 176, 177, 179, 181, 182, 226, 240, 244, 245, 251, 259, 269], "tri": [0, 23, 112, 181, 253], "call": [0, 4, 6, 7, 20, 22, 35, 44, 48, 56, 57, 58, 59, 62, 67, 69, 75, 76, 77, 78, 79, 81, 82, 84, 86, 88, 89, 90, 92, 95, 98, 100, 103, 104, 109, 120, 124, 127, 128, 136, 140, 143, 146, 149, 151, 160, 161, 162, 163, 168, 169, 170, 174, 175, 177, 179, 182, 183, 242, 245, 246, 247, 253, 259, 272], "them": [0, 2, 3, 4, 7, 17, 22, 30, 44, 58, 59, 67, 73, 79, 80, 83, 86, 92, 97, 98, 100, 102, 109, 110, 112, 113, 117, 129, 131, 133, 135, 136, 139, 141, 147, 157, 163, 168, 169, 174, 175, 176, 177, 181, 182, 203, 248, 253], "posit": [0, 25, 26, 30, 36, 41, 45, 50, 51, 70, 71, 74, 82, 87, 89, 90, 96, 99, 112, 113, 115, 129, 135, 136, 139, 140, 142, 147, 153, 154, 160, 164, 168, 169, 172, 175, 177, 178, 179, 181, 182, 183, 213, 216, 244, 245, 249, 253, 259, 260, 264, 273], "standard": [0, 3, 4, 20, 26, 45, 53, 57, 62, 65, 71, 77, 78, 81, 84, 88, 89, 90, 95, 98, 109, 112, 124, 128, 142, 156, 164, 168, 169, 170, 171, 173, 175, 177, 178, 179, 181, 182, 185, 198, 199, 212, 214, 240, 245, 249, 251, 258, 260, 265, 267, 272, 273, 274, 275, 276], "symbol": [0, 4, 175, 253, 262], "spheric": [0, 4, 25, 26, 29, 31, 34, 36, 37, 41, 45, 47, 48, 56, 59, 70, 71, 72, 73, 74, 78, 83, 88, 89, 92, 94, 99, 127, 158, 164, 165, 166, 167, 169, 170, 172, 173, 179, 181, 182, 183, 207, 208, 210, 211, 213, 214, 217, 218, 219, 220, 228, 229, 236, 240, 245, 247, 248, 249, 251, 253, 255, 262, 263, 264, 270, 273], "harmon": [0, 7, 34, 37, 45, 47, 71, 73, 74, 83, 96, 99, 160, 164, 166, 167, 170, 172, 173, 175, 179, 181, 182, 207, 208, 210, 211, 213, 214, 217, 218, 219, 220, 228, 229, 236, 240, 245, 247, 249, 253, 263, 264, 270, 273], "concept": [0, 14, 103, 104, 130, 150, 175, 268], "order": [0, 4, 22, 25, 26, 30, 35, 44, 47, 48, 53, 57, 58, 69, 73, 74, 76, 77, 80, 82, 83, 86, 87, 90, 91, 92, 95, 96, 100, 101, 103, 108, 117, 136, 142, 155, 156, 160, 161, 162, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 181, 182, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 220, 231, 240, 243, 245, 247, 251, 253, 255, 259, 260, 262, 263, 271, 272, 273], "phase": [0, 58, 93, 171, 174, 175, 176, 271, 273], "factor": [0, 47, 48, 88, 93, 96, 100, 101, 108, 120, 136, 152, 168, 169, 171, 175, 182, 184, 185, 198, 216, 256, 267, 271, 273], "l_valu": [0, 175, 271], "m_valu": [0, 175, 271], "respect": [0, 20, 41, 65, 73, 76, 84, 87, 93, 96, 101, 103, 120, 136, 147, 164, 166, 168, 169, 175, 179, 181, 182, 207, 217, 218, 222, 255, 256, 273], "In": [0, 4, 11, 15, 20, 21, 22, 23, 25, 26, 30, 35, 36, 37, 40, 44, 47, 48, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 108, 109, 115, 124, 126, 127, 128, 133, 135, 136, 139, 140, 142, 143, 146, 147, 148, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 164, 165, 168, 169, 171, 174, 175, 176, 179, 181, 182, 200, 201, 207, 210, 211, 213, 216, 217, 218, 222, 233, 240, 256, 267, 268, 271, 273, 279, 280], "case": [0, 4, 7, 16, 20, 22, 23, 25, 30, 37, 40, 53, 58, 65, 73, 77, 83, 87, 88, 98, 100, 101, 112, 115, 133, 140, 143, 146, 147, 148, 153, 154, 156, 157, 159, 160, 161, 162, 168, 169, 171, 175, 176, 179, 181, 182, 185, 186, 240, 245, 248, 263, 267, 268, 271], "arrai": [0, 2, 4, 5, 6, 23, 41, 53, 55, 57, 58, 59, 62, 65, 67, 70, 73, 75, 77, 79, 81, 82, 86, 87, 88, 89, 90, 91, 93, 94, 95, 101, 106, 109, 110, 116, 117, 124, 126, 127, 128, 129, 135, 136, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 204, 205, 221, 227, 231, 240, 241, 242, 243, 244, 245, 249, 251, 252, 253, 255, 258, 259, 260, 262, 263, 267, 268, 273], "us": [0, 1, 2, 3, 5, 6, 7, 12, 14, 18, 20, 21, 22, 23, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 49, 50, 51, 52, 54, 58, 59, 60, 63, 64, 65, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 91, 92, 93, 94, 97, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 230, 231, 232, 233, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277], "more": [0, 4, 5, 10, 17, 20, 21, 23, 24, 26, 30, 39, 40, 41, 44, 45, 53, 56, 57, 70, 71, 72, 73, 77, 78, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 100, 103, 104, 112, 115, 116, 117, 121, 126, 130, 131, 133, 135, 136, 139, 141, 142, 147, 149, 151, 152, 153, 154, 159, 163, 164, 165, 166, 167, 168, 169, 171, 174, 175, 176, 179, 180, 181, 182, 191, 196, 198, 199, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 254, 260, 265, 272, 273, 276, 277, 280], "type": [0, 3, 4, 7, 17, 20, 33, 54, 58, 67, 79, 88, 89, 117, 120, 136, 148, 151, 157, 161, 162, 168, 169, 170, 173, 175, 176, 179, 181, 182, 186, 195, 206, 216, 222, 223, 226, 230, 240, 241, 244, 246, 247, 249, 253, 254, 259, 260, 262, 279], "variabl": [0, 20, 30, 45, 56, 71, 73, 82, 86, 94, 101, 108, 136, 139, 164, 168, 169, 170, 171, 174, 175, 176, 179, 182, 233, 240, 242, 245, 248, 249, 250, 253, 254, 255, 257, 258, 261, 262, 273], "For": [0, 2, 4, 6, 7, 13, 16, 20, 22, 30, 35, 39, 40, 48, 52, 53, 54, 56, 58, 59, 61, 62, 65, 67, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 108, 109, 111, 115, 116, 117, 118, 121, 124, 126, 127, 128, 131, 133, 136, 141, 146, 147, 149, 151, 152, 153, 154, 155, 156, 159, 160, 161, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 181, 182, 185, 186, 191, 198, 199, 204, 205, 206, 210, 211, 220, 222, 227, 233, 237, 238, 265, 267, 268, 271, 272, 279], "\ud835\udc4c\u2113\ud835\udc5a": 0, "\u2113": 0, "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 272, 273, 277, 279, 281], "refer": [0, 1, 3, 7, 13, 18, 19, 20, 22, 29, 44, 45, 50, 51, 71, 106, 141, 150, 158, 163, 164, 170, 171, 172, 176, 177, 178, 181, 182, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 255, 256, 262, 263, 269, 270, 272], "\ud835\udc5a": 0, "The": [0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 30, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 47, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 115, 117, 120, 121, 126, 127, 128, 131, 133, 135, 136, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 191, 192, 196, 198, 199, 201, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 226, 230, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 269, 270, 271, 273, 274, 281], "paramet": [0, 2, 4, 36, 41, 44, 48, 52, 53, 54, 55, 56, 58, 67, 72, 73, 76, 77, 78, 80, 82, 85, 86, 87, 88, 89, 91, 92, 94, 96, 98, 103, 104, 106, 109, 111, 112, 120, 121, 126, 143, 146, 147, 154, 156, 160, 161, 162, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 239, 241, 242, 243, 244, 245, 247, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 267, 273], "sh_order": [0, 174, 175, 182], "becam": 0, "sh_order_max": [0, 25, 26, 33, 34, 35, 37, 38, 50, 51, 69, 70, 73, 75, 83, 88, 93, 95, 131, 133, 141, 160, 172, 174, 175, 182, 207, 208, 210, 211, 213, 214, 217, 218, 219, 220], "align": [0, 3, 25, 26, 61, 63, 65, 70, 76, 77, 78, 89, 100, 101, 102, 103, 104, 106, 108, 109, 110, 112, 126, 139, 142, 147, 148, 154, 160, 161, 166, 167, 169, 173, 175, 176, 181, 183, 185, 233, 240, 242, 243, 249, 253, 255, 256, 257, 259, 261, 262, 273], "alpha": [0, 40, 78, 90, 94, 104, 148, 154, 168, 169, 170, 171, 175, 182, 190, 201, 220, 222, 253, 273], "bundlewarp": [0, 45, 105, 107, 158, 164, 181, 182, 183, 190, 253, 261, 262, 264, 273], "method": [0, 1, 2, 25, 30, 33, 35, 41, 54, 55, 56, 58, 61, 62, 69, 72, 73, 75, 76, 77, 81, 82, 86, 87, 88, 89, 90, 92, 93, 98, 102, 103, 104, 112, 113, 115, 116, 117, 118, 120, 124, 128, 131, 133, 135, 139, 140, 142, 143, 150, 154, 157, 158, 159, 160, 161, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 188, 189, 190, 191, 196, 198, 199, 200, 201, 207, 208, 214, 217, 218, 219, 220, 221, 224, 227, 230, 237, 238, 244, 245, 247, 248, 249, 252, 253, 254, 255, 257, 259, 260, 261, 262, 273, 274, 275, 279], "updat": [0, 6, 11, 15, 22, 59, 93, 95, 139, 150, 164, 168, 169, 173, 174, 175, 176, 181, 182, 183, 185, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 271], "better": [0, 7, 13, 17, 53, 54, 72, 73, 76, 77, 78, 84, 90, 100, 108, 164, 166, 175, 242, 244, 250, 252, 255, 256, 259, 273, 281], "result": [0, 4, 19, 25, 26, 30, 33, 35, 39, 52, 54, 56, 63, 67, 69, 70, 75, 77, 82, 86, 87, 88, 89, 90, 92, 93, 94, 98, 100, 101, 104, 106, 108, 109, 111, 113, 115, 117, 118, 120, 131, 136, 143, 146, 148, 149, 151, 156, 157, 158, 159, 164, 168, 169, 170, 171, 174, 175, 176, 179, 181, 182, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 203, 204, 205, 221, 222, 226, 227, 232, 234, 235, 245, 251, 258, 259, 271, 276, 277], "bundl": [0, 20, 27, 28, 34, 37, 45, 73, 90, 105, 107, 108, 113, 114, 115, 116, 117, 118, 119, 131, 132, 133, 134, 135, 137, 138, 139, 158, 161, 163, 164, 168, 170, 175, 178, 179, 181, 182, 183, 187, 188, 189, 190, 222, 224, 230, 233, 242, 244, 245, 246, 249, 251, 253, 255, 256, 258, 260, 261, 262, 264, 273, 274, 275], "warp": [0, 104, 106, 109, 110, 154, 161, 168, 170, 181, 182, 185, 190, 253, 258, 262], "default": [0, 7, 10, 17, 23, 25, 26, 35, 39, 40, 47, 52, 57, 58, 63, 67, 69, 70, 80, 82, 86, 92, 93, 94, 98, 100, 102, 106, 111, 112, 113, 115, 116, 120, 133, 139, 142, 143, 146, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 244, 245, 247, 248, 249, 251, 253, 254, 256, 257, 258, 259, 260, 261, 271], "valu": [0, 3, 23, 26, 30, 34, 35, 41, 44, 45, 47, 54, 55, 56, 58, 59, 61, 62, 65, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 103, 104, 106, 112, 120, 121, 126, 127, 128, 130, 131, 133, 136, 139, 143, 146, 147, 149, 151, 152, 154, 156, 157, 159, 160, 162, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 185, 190, 191, 196, 198, 199, 201, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 233, 234, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 271, 273, 274, 275, 277], "from": [0, 2, 4, 6, 8, 9, 12, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 186, 191, 196, 198, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 217, 218, 222, 226, 227, 231, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 271, 272, 273, 274, 275, 277, 279], "io": [0, 7, 23, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 91, 93, 94, 96, 97, 98, 100, 101, 104, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 126, 128, 129, 131, 133, 136, 141, 142, 147, 164, 166, 167, 168, 170, 175, 176, 177, 179, 183, 240, 242, 244, 246, 247, 251, 252, 253, 259, 260, 262, 263, 274, 275, 277], "peak": [0, 29, 30, 31, 34, 35, 37, 40, 45, 47, 69, 73, 74, 75, 85, 88, 93, 94, 136, 151, 158, 160, 164, 167, 175, 177, 178, 179, 182, 183, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 228, 229, 236, 237, 238, 242, 243, 244, 247, 248, 251, 252, 253, 263, 264, 267], "save_peak": [0, 183], "load_peak": [0, 183, 252], "pleas": [0, 1, 4, 5, 10, 17, 21, 23, 24, 47, 48, 54, 55, 57, 58, 62, 84, 86, 91, 92, 131, 133, 139, 141, 151, 152, 153, 154, 166, 167, 170, 173, 175, 182, 206, 246, 249, 279], "save_pam": [0, 183], "load_pam": [0, 183], "instead": [0, 16, 17, 20, 23, 39, 55, 58, 77, 93, 100, 112, 152, 168, 169, 171, 173, 174, 175, 176, 178, 179, 181, 241, 242, 243, 244, 246, 249, 250, 252, 253, 255, 258, 259, 260, 261, 271, 279], "reconstruct": [0, 26, 34, 35, 36, 37, 39, 40, 41, 46, 49, 54, 55, 62, 65, 67, 69, 81, 83, 84, 86, 87, 92, 96, 97, 99, 124, 147, 151, 156, 157, 158, 162, 164, 167, 169, 170, 171, 174, 175, 177, 179, 182, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 241, 242, 243, 244, 247, 249, 252, 253, 255, 256, 257, 258, 260, 262, 264, 265, 271, 273, 274, 275, 277], "appli": [0, 25, 26, 45, 48, 54, 55, 58, 71, 73, 74, 75, 77, 78, 79, 80, 85, 89, 93, 98, 99, 100, 103, 105, 107, 109, 110, 112, 118, 121, 135, 136, 142, 147, 156, 157, 158, 159, 164, 166, 168, 169, 171, 174, 175, 176, 177, 179, 181, 182, 185, 186, 187, 188, 189, 200, 201, 203, 221, 222, 227, 231, 233, 237, 245, 246, 249, 252, 253, 255, 259, 262, 264, 265, 268, 273], "cvxpy": [0, 77, 87, 88, 92, 164, 169, 175, 182, 213, 243, 244, 245, 246, 253, 255, 256, 262, 276], "solver": [0, 77, 87, 88, 92, 168, 175, 182, 220, 245, 253, 262], "eco": [0, 253], "clarabel": [0, 175, 253, 262], "start": [0, 3, 7, 13, 19, 20, 22, 23, 24, 33, 37, 38, 39, 40, 47, 48, 57, 59, 61, 62, 63, 68, 75, 84, 86, 90, 91, 93, 98, 100, 102, 103, 104, 116, 117, 121, 130, 133, 135, 136, 139, 141, 142, 148, 150, 160, 162, 168, 169, 174, 175, 179, 181, 182, 190, 205, 210, 211, 238, 249, 251, 253, 264, 265, 269, 279, 280], "cxvpy": 0, "longer": [0, 16, 73, 147, 168, 175, 179, 250], "instal": [0, 2, 4, 7, 9, 15, 19, 22, 23, 87, 146, 150, 163, 180, 240, 242, 243, 245, 248, 249, 250, 251, 252, 253, 254, 255, 262, 263, 280], "sinc": [0, 7, 17, 26, 30, 53, 54, 56, 57, 58, 65, 73, 77, 82, 86, 87, 92, 93, 100, 106, 108, 115, 116, 118, 126, 128, 131, 157, 168, 169, 171, 174, 177, 182, 253, 271], "do": [0, 2, 4, 5, 6, 9, 10, 11, 14, 16, 17, 19, 20, 21, 30, 35, 37, 44, 45, 55, 58, 61, 62, 65, 69, 71, 74, 75, 79, 87, 88, 89, 90, 95, 98, 100, 102, 108, 109, 110, 113, 115, 116, 117, 131, 133, 136, 147, 148, 149, 150, 151, 152, 156, 161, 163, 165, 166, 168, 169, 174, 175, 179, 182, 192, 222, 242, 244, 245, 249, 251, 253, 263, 268, 273, 274, 279, 281], "want": [0, 6, 9, 11, 17, 18, 20, 21, 22, 24, 45, 59, 63, 65, 76, 77, 79, 88, 98, 100, 101, 102, 103, 108, 109, 110, 115, 116, 117, 128, 130, 131, 133, 135, 136, 139, 140, 142, 143, 147, 148, 150, 152, 156, 157, 159, 168, 169, 173, 174, 176, 181, 182, 191, 224, 230, 231, 240, 263, 266, 268, 274, 279, 280], "add": [0, 4, 6, 7, 14, 16, 17, 18, 20, 22, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 59, 69, 70, 73, 74, 75, 76, 81, 82, 83, 87, 88, 93, 94, 95, 96, 98, 103, 112, 113, 115, 116, 117, 118, 124, 126, 127, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 146, 164, 169, 173, 175, 176, 177, 179, 181, 182, 183, 226, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "an": [0, 4, 6, 7, 14, 17, 20, 22, 23, 24, 25, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 65, 67, 69, 71, 72, 74, 75, 77, 79, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 106, 108, 109, 110, 111, 113, 115, 116, 117, 120, 124, 126, 127, 128, 131, 133, 136, 139, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 185, 201, 207, 208, 209, 210, 211, 212, 216, 217, 218, 220, 221, 222, 231, 233, 237, 240, 241, 244, 245, 247, 248, 249, 251, 252, 253, 255, 256, 259, 260, 261, 262, 264, 267, 268, 271, 273, 277, 279, 280], "explicit": [0, 58, 247, 253], "depend": [0, 1, 2, 4, 20, 23, 35, 37, 45, 58, 65, 69, 71, 75, 77, 86, 88, 89, 99, 101, 115, 120, 136, 147, 151, 156, 157, 160, 162, 164, 168, 169, 170, 171, 175, 176, 177, 179, 182, 215, 242, 245, 247, 249, 251, 252, 253, 257, 259, 262, 263, 264, 273, 279], "switch": [0, 17, 23, 58, 108, 109, 168, 175, 242, 245, 246, 249, 253, 260], "new": [0, 3, 4, 5, 9, 11, 16, 17, 18, 20, 21, 22, 24, 25, 26, 30, 44, 45, 58, 59, 61, 63, 67, 75, 90, 93, 101, 103, 117, 142, 144, 145, 150, 164, 165, 168, 169, 171, 174, 175, 176, 177, 179, 182, 201, 231, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 264, 265, 271, 273, 279], "workflow": [0, 4, 11, 13, 15, 17, 22, 145, 150, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 167, 183, 187, 188, 189, 198, 199, 200, 201, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 225, 226, 227, 237, 238, 241, 242, 243, 244, 245, 246, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 274], "vol_idx": [0, 47, 48, 54, 56, 65, 74, 77, 78, 82, 88, 89, 93, 108, 121, 151, 160, 176, 182, 205, 227, 235, 251, 253], "datatyp": [0, 173, 249], "dipy_median_otsu": [0, 151, 160, 239, 253], "int": [0, 4, 50, 51, 95, 139, 151, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 242, 253, 258, 260, 262, 267, 269], "str": [0, 142, 151, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 181, 182, 226], "allow": [0, 4, 10, 22, 25, 36, 41, 47, 48, 51, 73, 87, 88, 90, 135, 136, 139, 142, 143, 147, 157, 160, 161, 164, 168, 169, 175, 176, 179, 181, 182, 226, 230, 238, 241, 242, 245, 247, 249, 252, 253, 254, 256, 257, 258, 259, 260, 263], "rang": [0, 4, 26, 45, 47, 48, 53, 54, 71, 74, 78, 82, 86, 87, 89, 91, 92, 112, 113, 129, 152, 164, 169, 172, 173, 174, 175, 176, 179, 181, 182, 204, 205, 237, 238, 245, 253, 254, 255, 267], "e": [0, 2, 3, 4, 7, 8, 14, 22, 24, 26, 30, 34, 36, 41, 54, 56, 58, 67, 70, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 94, 96, 97, 98, 101, 106, 115, 116, 117, 126, 128, 133, 139, 147, 148, 153, 156, 157, 159, 160, 161, 162, 164, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 247, 249, 265, 266, 267, 268, 271, 273, 274, 275, 279, 280], "g": [0, 3, 4, 7, 8, 14, 22, 30, 33, 34, 39, 41, 54, 67, 70, 74, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 93, 94, 96, 97, 98, 101, 106, 115, 117, 124, 128, 131, 133, 135, 139, 141, 147, 148, 153, 156, 157, 159, 160, 161, 162, 164, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 196, 200, 212, 221, 226, 237, 238, 265, 267, 268, 273], "20": [0, 2, 23, 26, 36, 37, 38, 45, 50, 58, 71, 73, 75, 80, 82, 88, 89, 90, 93, 94, 97, 98, 103, 104, 106, 112, 113, 120, 121, 126, 127, 140, 142, 168, 169, 170, 175, 176, 177, 179, 182, 185, 190, 204, 233, 238, 240, 247, 273, 274, 275], "22": [0, 23, 45, 58, 71, 87, 88, 90, 96, 99, 100, 101, 121, 165, 168, 174, 175, 179, 182, 196, 247, 250, 252, 259, 271, 273], "odf_to_sh_ord": 0, "multipl": [0, 2, 3, 4, 23, 45, 51, 54, 62, 65, 71, 72, 74, 75, 76, 77, 80, 82, 84, 86, 90, 93, 97, 106, 142, 143, 146, 147, 150, 151, 156, 157, 159, 160, 161, 162, 164, 168, 169, 170, 171, 174, 175, 176, 177, 179, 181, 182, 186, 187, 188, 189, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 226, 227, 228, 229, 231, 232, 234, 236, 237, 238, 241, 244, 249, 253, 255, 256, 260, 267, 273, 274, 275], "wa": [0, 3, 7, 8, 22, 23, 24, 30, 44, 53, 54, 56, 57, 62, 65, 70, 73, 74, 77, 78, 83, 84, 86, 87, 88, 89, 92, 93, 94, 98, 100, 103, 108, 126, 133, 136, 143, 148, 151, 160, 164, 165, 168, 169, 170, 171, 173, 174, 175, 176, 181, 182, 247, 248, 249, 250, 251], "being": [0, 4, 23, 65, 90, 93, 147, 152, 162, 168, 169, 171, 173, 175, 176, 178, 179, 181, 182, 186, 242, 243, 246, 251, 253, 254, 258, 265, 271, 279], "caus": [0, 44, 77, 148, 169, 171, 175, 176, 182, 210, 211, 240, 248, 249], "confus": [0, 7, 175, 249, 259], "sh_order_ord": 0, "nn": [0, 70, 164, 167, 175, 183, 253, 259, 262], "A": [0, 3, 4, 7, 8, 14, 19, 23, 26, 30, 35, 40, 41, 58, 59, 61, 62, 69, 70, 72, 73, 75, 77, 78, 83, 84, 87, 88, 89, 90, 92, 93, 94, 100, 103, 117, 120, 122, 128, 131, 133, 135, 139, 140, 141, 142, 143, 146, 147, 149, 150, 159, 160, 162, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 245, 246, 247, 248, 250, 251, 263, 267, 268, 271, 273, 274, 275, 279], "backend": [0, 150, 164, 175], "ad": [0, 3, 4, 5, 6, 7, 17, 20, 25, 41, 47, 48, 56, 70, 76, 77, 87, 88, 98, 104, 142, 148, 150, 151, 152, 164, 171, 173, 175, 176, 177, 179, 182, 183, 185, 209, 212, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 273], "pytorch": [0, 150, 164, 170, 174, 253, 254], "becom": [0, 59, 90, 103, 135, 142, 148, 169, 175, 181], "modul": [0, 2, 4, 20, 30, 33, 35, 38, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 69, 72, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 111, 112, 113, 115, 116, 117, 118, 121, 126, 129, 130, 133, 136, 139, 141, 142, 143, 146, 147, 164, 167, 180, 183, 240, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 267, 269, 271, 276, 279], "tensorflow": [0, 150, 164, 170, 174, 252, 253, 254, 263, 276], "still": [0, 7, 20, 22, 35, 39, 58, 65, 69, 79, 82, 87, 90, 92, 106, 136, 160, 163, 169, 173, 175, 176, 179, 241, 242, 249, 256, 271, 279], "avail": [0, 2, 12, 41, 48, 62, 67, 76, 88, 89, 90, 92, 100, 104, 114, 117, 119, 120, 136, 139, 140, 143, 146, 147, 150, 151, 155, 156, 157, 160, 161, 162, 164, 165, 166, 168, 170, 171, 173, 174, 175, 176, 179, 181, 182, 185, 206, 233, 237, 238, 240, 242, 247, 249, 260, 264, 267, 268, 271], "boot": [0, 242, 263], "resampl": [0, 63, 100, 101, 103, 104, 110, 116, 117, 118, 142, 147, 160, 167, 175, 176, 178, 179, 182, 183, 231, 240, 242, 249, 263, 265], "move": [0, 15, 25, 26, 44, 59, 86, 95, 98, 100, 101, 102, 103, 104, 108, 109, 110, 112, 127, 136, 139, 142, 151, 153, 154, 160, 161, 164, 166, 168, 169, 176, 179, 181, 182, 184, 185, 186, 190, 197, 233, 240, 242, 243, 245, 246, 249, 251, 253, 255, 256, 258, 259, 262, 263], "stat": [0, 6, 50, 51, 72, 128, 129, 164, 167, 168, 169, 183, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "packag": [0, 4, 19, 20, 22, 35, 56, 69, 77, 79, 84, 86, 87, 88, 91, 92, 93, 95, 98, 104, 168, 170, 179, 182, 240, 244, 246, 248, 249, 251, 253, 256, 258, 262, 267, 268, 280], "furi": [0, 32, 35, 69, 70, 93, 139, 147, 163, 164, 181, 245, 251, 252, 253, 255, 259, 273, 276, 279], "minimum": [0, 26, 45, 71, 90, 103, 112, 117, 164, 168, 169, 172, 174, 175, 176, 179, 181, 182, 207, 208, 210, 211, 216, 217, 218, 237, 238, 245, 249, 252, 262, 276], "version": [0, 7, 19, 20, 22, 25, 26, 53, 54, 55, 56, 57, 58, 84, 85, 106, 108, 126, 136, 147, 150, 151, 162, 163, 164, 165, 167, 168, 170, 171, 173, 175, 179, 182, 183, 201, 265, 271, 274, 275], "bvectxt": [0, 164, 259, 260, 263], "gradient": [0, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 47, 48, 50, 51, 53, 55, 56, 58, 60, 61, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 108, 109, 121, 124, 126, 127, 131, 133, 136, 141, 147, 151, 156, 160, 164, 167, 168, 170, 171, 174, 175, 177, 178, 182, 183, 185, 215, 216, 240, 241, 244, 245, 247, 249, 252, 253, 255, 256, 260, 261, 262, 264, 267, 268, 269, 273, 274, 275, 277], "core": [0, 6, 12, 24, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 50, 51, 52, 53, 55, 56, 59, 61, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 108, 111, 121, 124, 126, 127, 128, 131, 133, 136, 141, 157, 164, 167, 168, 170, 171, 172, 175, 177, 178, 179, 182, 183, 207, 208, 210, 211, 217, 218, 221, 231, 240, 242, 244, 247, 248, 249, 251, 252, 253, 255, 258, 261, 262, 276, 277], "reorient_bvec": [0, 183, 255], "now": [0, 2, 6, 7, 9, 10, 16, 17, 18, 20, 22, 26, 30, 35, 39, 40, 44, 48, 53, 54, 58, 59, 62, 65, 67, 69, 73, 75, 76, 77, 79, 80, 82, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 100, 101, 102, 103, 104, 108, 109, 110, 112, 117, 120, 121, 127, 130, 131, 133, 136, 139, 142, 143, 146, 148, 150, 151, 164, 165, 169, 175, 240, 241, 247, 248, 249, 271, 279], "requir": [0, 4, 20, 23, 25, 26, 30, 40, 44, 58, 63, 70, 73, 77, 78, 83, 87, 89, 90, 91, 92, 93, 94, 101, 112, 113, 115, 117, 118, 121, 126, 139, 142, 151, 152, 153, 154, 156, 160, 161, 162, 168, 169, 173, 174, 175, 181, 182, 184, 191, 205, 227, 235, 242, 249, 251, 253, 255, 256, 257, 261, 262, 276, 279], "affin": [0, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 87, 88, 89, 91, 93, 94, 96, 97, 98, 102, 103, 104, 105, 107, 108, 111, 112, 121, 128, 131, 133, 136, 139, 140, 141, 142, 147, 149, 151, 159, 161, 164, 166, 169, 170, 172, 173, 174, 176, 178, 179, 181, 182, 183, 184, 185, 186, 190, 197, 233, 240, 242, 244, 245, 246, 249, 250, 251, 253, 255, 259, 262, 264, 273, 277], "shape": [0, 25, 26, 30, 35, 36, 39, 41, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 67, 69, 70, 71, 73, 74, 75, 78, 79, 80, 82, 83, 85, 86, 87, 88, 90, 91, 93, 95, 96, 97, 100, 101, 103, 104, 106, 108, 110, 111, 112, 115, 117, 120, 121, 127, 129, 132, 134, 135, 136, 139, 140, 142, 149, 154, 158, 161, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 188, 189, 208, 210, 211, 212, 219, 226, 230, 240, 241, 242, 247, 249, 251, 255, 256, 259, 260, 262, 264, 273], "n": [0, 2, 4, 22, 25, 30, 39, 40, 41, 45, 53, 54, 55, 56, 57, 58, 61, 62, 71, 72, 73, 76, 77, 81, 86, 89, 91, 92, 93, 94, 95, 101, 103, 117, 118, 120, 122, 124, 127, 129, 135, 156, 159, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 181, 182, 184, 198, 220, 267, 268, 273, 274, 275], "direct": [0, 4, 25, 26, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 45, 47, 48, 50, 51, 55, 56, 58, 62, 65, 71, 72, 73, 74, 75, 76, 77, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 104, 105, 107, 109, 110, 121, 124, 126, 128, 131, 133, 136, 141, 147, 150, 156, 160, 162, 163, 164, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 181, 182, 183, 191, 193, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 228, 229, 232, 233, 237, 240, 241, 242, 243, 244, 247, 248, 249, 251, 253, 255, 259, 262, 264, 267, 268, 271, 272, 273, 274, 275], "bootstrap_direction_gett": 0, "parent": [0, 169, 182, 183], "pmfgendirectiongett": [0, 261], "directiongett": [0, 244, 259], "bootpmfgen": 0, "were": [0, 30, 45, 55, 58, 71, 75, 77, 84, 86, 89, 90, 91, 104, 108, 131, 136, 147, 168, 169, 170, 171, 175, 182, 247, 248, 271], "merg": [0, 11, 14, 16, 18, 22, 58, 150, 164, 176, 182, 242, 244, 245, 248, 249, 251, 253, 261], "bootdirectiongett": [0, 262], "constructor": [0, 93, 244, 252], "pmfgen": [0, 172, 262, 263], "data": [0, 4, 6, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 147, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 249, 250, 251, 252, 253, 255, 256, 258, 259, 260, 261, 262, 263, 273, 275, 277, 279, 280], "model": [0, 17, 25, 26, 29, 30, 31, 34, 35, 36, 37, 41, 45, 47, 48, 52, 54, 56, 57, 58, 65, 67, 69, 70, 71, 73, 74, 79, 80, 85, 86, 88, 89, 90, 91, 92, 97, 98, 99, 111, 112, 113, 120, 121, 126, 128, 129, 131, 133, 136, 151, 152, 153, 160, 162, 164, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 187, 188, 191, 201, 207, 213, 216, 217, 218, 220, 224, 230, 233, 237, 242, 243, 244, 246, 247, 248, 249, 251, 253, 254, 255, 256, 259, 260, 262, 263, 264, 273, 274, 275, 277], "from_data": 0, "pmf": [0, 33, 37, 38, 39, 162, 179, 242, 245, 253, 259], "its": [0, 3, 22, 23, 25, 39, 56, 58, 62, 77, 80, 87, 88, 89, 90, 93, 94, 97, 98, 100, 108, 117, 120, 126, 139, 140, 142, 148, 149, 152, 153, 155, 164, 168, 169, 170, 171, 175, 176, 177, 178, 179, 182, 193, 223, 232, 249, 255, 256, 258, 273, 274, 275, 276], "denois": [0, 20, 25, 26, 45, 54, 60, 62, 64, 77, 88, 89, 98, 121, 143, 158, 164, 167, 170, 183, 198, 199, 200, 201, 221, 242, 249, 251, 253, 256, 257, 259, 260, 261, 262, 264, 273, 274, 275], "localpca": [0, 56, 77, 88, 183, 243, 251, 256], "genpca": [0, 183], "can": [0, 4, 6, 7, 14, 16, 17, 18, 20, 21, 22, 24, 25, 26, 30, 34, 35, 36, 37, 39, 40, 41, 44, 48, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 69, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 186, 193, 198, 201, 204, 205, 207, 208, 209, 212, 214, 217, 218, 222, 223, 228, 230, 232, 236, 241, 245, 249, 251, 253, 254, 256, 259, 260, 262, 263, 265, 266, 267, 268, 271, 272, 273, 274, 276, 277, 279, 280], "fewer": [0, 112], "imag": [0, 1, 4, 22, 23, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 47, 48, 50, 51, 52, 54, 58, 59, 60, 61, 62, 63, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 90, 93, 94, 96, 97, 98, 99, 100, 101, 104, 105, 107, 109, 110, 111, 114, 119, 121, 124, 126, 128, 131, 133, 135, 136, 139, 140, 141, 142, 147, 149, 151, 156, 157, 158, 159, 162, 164, 166, 168, 169, 170, 171, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 191, 196, 197, 198, 199, 200, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 222, 223, 225, 226, 227, 237, 238, 241, 242, 245, 246, 249, 251, 253, 254, 255, 259, 262, 263, 264, 265, 267, 270, 271, 273, 274, 275, 277, 280, 281], "than": [0, 2, 4, 16, 17, 18, 20, 23, 24, 26, 41, 53, 56, 58, 61, 70, 73, 75, 77, 78, 82, 84, 86, 87, 88, 89, 90, 92, 94, 97, 100, 101, 112, 115, 126, 131, 133, 135, 136, 142, 148, 149, 160, 164, 165, 168, 169, 171, 172, 175, 176, 177, 178, 179, 181, 182, 198, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 220, 222, 230, 233, 237, 238, 240, 241, 244, 247, 255, 259, 260, 273, 279], "patch": [0, 15, 16, 19, 53, 55, 58, 156, 171, 182, 198, 199, 200, 201, 244, 251, 255, 258, 260], "voxel": [0, 25, 26, 30, 34, 35, 36, 37, 40, 41, 44, 45, 48, 52, 54, 55, 56, 58, 62, 63, 65, 67, 69, 71, 72, 73, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 108, 110, 111, 121, 124, 126, 127, 133, 135, 136, 139, 142, 147, 151, 156, 160, 161, 162, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 191, 198, 199, 201, 208, 209, 212, 213, 215, 219, 227, 231, 237, 238, 240, 241, 242, 247, 249, 250, 251, 254, 255, 256, 262, 265, 274, 275], "pca_noise_estim": [0, 55, 261], "images_as_sampl": 0, "distutil": [0, 255, 259], "drop": [0, 23, 150, 241, 242, 246, 251, 259], "option": [0, 2, 7, 16, 17, 20, 35, 47, 54, 56, 58, 69, 74, 77, 86, 87, 88, 93, 100, 103, 140, 143, 146, 151, 155, 156, 157, 159, 160, 161, 162, 163, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 239, 240, 241, 242, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 276], "command": [0, 2, 6, 7, 9, 14, 17, 20, 22, 26, 54, 67, 142, 143, 146, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 170, 175, 182, 184, 208, 227, 242, 247, 248, 249, 251, 255, 259, 279], "line": [0, 2, 3, 4, 6, 7, 9, 16, 17, 20, 22, 26, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 50, 51, 56, 61, 63, 65, 69, 73, 76, 77, 89, 90, 92, 103, 112, 113, 129, 131, 133, 136, 139, 140, 141, 142, 143, 146, 149, 150, 152, 153, 154, 158, 160, 162, 163, 164, 167, 174, 175, 179, 181, 182, 184, 208, 227, 240, 241, 242, 244, 245, 248, 249, 250, 251, 252, 253, 255, 259, 272, 279], "patch2self": [0, 45, 60, 64, 77, 121, 164, 182, 183, 201, 253, 257, 258, 259, 260, 262, 263, 264, 273], "ridg": [0, 58, 171, 182, 201, 259], "ol": [0, 58, 171, 175, 182, 201, 209, 212, 259, 262], "track": [0, 1, 4, 6, 16, 26, 30, 31, 32, 33, 34, 36, 37, 38, 41, 44, 46, 49, 50, 66, 68, 82, 94, 103, 104, 108, 115, 116, 117, 128, 131, 133, 135, 136, 139, 140, 141, 150, 151, 158, 164, 167, 168, 169, 170, 173, 175, 176, 178, 183, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 273], "mandatori": [0, 143, 146, 168], "sphere": [0, 25, 26, 33, 34, 36, 37, 38, 39, 40, 41, 45, 47, 48, 50, 51, 60, 64, 70, 71, 73, 74, 75, 79, 81, 82, 83, 85, 87, 88, 89, 90, 93, 94, 95, 96, 98, 124, 127, 136, 162, 167, 170, 172, 173, 175, 177, 179, 181, 182, 183, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 228, 229, 236, 237, 238, 240, 242, 245, 247, 249, 251, 252, 264, 271, 272], "vertic": [0, 26, 32, 40, 59, 73, 75, 79, 81, 89, 93, 94, 95, 124, 127, 169, 170, 173, 175, 177, 179, 181, 182, 183, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 228, 229, 236, 245, 272], "correspond": [0, 1, 4, 20, 25, 44, 50, 51, 54, 56, 58, 65, 67, 72, 73, 80, 86, 88, 89, 90, 91, 92, 93, 96, 97, 109, 110, 115, 126, 128, 135, 140, 147, 162, 168, 169, 171, 172, 174, 175, 176, 179, 181, 182, 184, 190, 221, 262, 265, 273], "distribut": [0, 2, 23, 25, 26, 30, 34, 35, 37, 40, 45, 47, 56, 58, 59, 62, 69, 70, 71, 72, 73, 74, 75, 82, 83, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 100, 120, 136, 151, 156, 160, 162, 164, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 182, 198, 199, 201, 208, 213, 219, 237, 238, 249, 252, 253, 269, 271, 273, 279], "get_pmf_valu": [0, 253], "point": [0, 4, 7, 17, 18, 22, 25, 26, 30, 35, 37, 39, 40, 45, 54, 59, 69, 71, 72, 85, 87, 88, 89, 90, 94, 95, 103, 104, 108, 115, 116, 117, 118, 127, 135, 147, 148, 149, 154, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 190, 195, 216, 221, 231, 233, 237, 238, 240, 242, 245, 246, 247, 251, 252, 253, 255, 256, 258, 259, 260, 269, 272], "xyz": [0, 59, 95, 169, 173, 175, 179, 255], "which": [0, 1, 2, 4, 5, 6, 7, 20, 22, 25, 26, 30, 33, 34, 37, 39, 40, 41, 44, 45, 47, 48, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 65, 67, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 101, 103, 104, 106, 109, 110, 111, 112, 117, 118, 124, 126, 127, 128, 133, 135, 136, 139, 140, 141, 142, 147, 151, 153, 156, 157, 160, 161, 162, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 191, 198, 199, 206, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 220, 222, 244, 251, 254, 256, 265, 268, 271, 277, 279], "return": [0, 17, 34, 36, 47, 52, 55, 56, 74, 75, 76, 77, 80, 82, 86, 87, 88, 90, 93, 94, 97, 102, 104, 106, 109, 110, 111, 113, 115, 116, 117, 121, 127, 128, 135, 136, 139, 143, 160, 162, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 199, 204, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 220, 226, 241, 242, 245, 248, 250, 252, 253, 254, 259, 261, 262, 263], "locat": [0, 4, 62, 82, 98, 101, 109, 128, 136, 143, 152, 156, 160, 161, 168, 169, 170, 179, 182, 253, 263], "orient": [0, 25, 26, 32, 34, 35, 37, 47, 65, 69, 70, 73, 74, 75, 77, 82, 83, 85, 87, 88, 89, 90, 91, 93, 94, 96, 100, 103, 115, 116, 128, 136, 147, 151, 160, 162, 164, 168, 169, 170, 172, 175, 177, 178, 179, 181, 182, 207, 208, 213, 217, 218, 219, 244, 245, 251, 253, 262, 271, 273], "segment": [0, 4, 25, 35, 36, 40, 47, 48, 54, 56, 60, 64, 65, 69, 70, 72, 74, 77, 78, 82, 88, 89, 93, 103, 104, 108, 109, 110, 112, 113, 115, 116, 117, 118, 119, 120, 121, 129, 130, 132, 134, 135, 143, 152, 158, 162, 164, 167, 168, 170, 175, 177, 179, 183, 191, 222, 224, 227, 230, 233, 237, 238, 242, 247, 248, 251, 253, 255, 258, 259, 260, 261, 262, 264, 273], "metric": [0, 45, 54, 76, 78, 82, 84, 89, 92, 93, 100, 101, 102, 103, 106, 109, 110, 114, 115, 118, 119, 128, 130, 131, 137, 138, 139, 160, 161, 162, 164, 166, 167, 170, 172, 173, 174, 175, 178, 181, 182, 183, 184, 185, 187, 209, 212, 215, 216, 233, 237, 238, 240, 242, 245, 246, 247, 248, 251, 253, 256, 258, 259, 260, 264, 273], "import": [0, 2, 5, 20, 23, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 146, 147, 166, 168, 169, 170, 172, 173, 175, 176, 177, 178, 181, 183, 240, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 267, 273, 274, 277, 279], "resamplefeatur": [0, 115, 128, 176], "replac": [0, 6, 44, 61, 63, 98, 133, 156, 164, 171, 172, 175, 176, 179, 181, 242, 243, 244, 245, 247, 248, 249, 251, 252, 254, 255, 256, 258, 262, 263, 277], "featurespe": [0, 115, 116, 117, 128, 176, 242], "name": [0, 3, 4, 7, 10, 16, 17, 18, 20, 21, 22, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 100, 108, 109, 110, 111, 115, 116, 117, 118, 120, 121, 124, 126, 127, 131, 133, 136, 141, 143, 146, 148, 152, 153, 154, 155, 156, 160, 161, 164, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 240, 242, 243, 245, 246, 249, 251, 252, 253, 255, 256, 258, 262, 263, 267, 274, 275], "number": [0, 22, 23, 32, 36, 37, 44, 47, 48, 52, 54, 56, 58, 59, 61, 62, 67, 72, 73, 75, 77, 82, 84, 86, 88, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 106, 111, 115, 116, 117, 118, 120, 133, 135, 136, 149, 151, 157, 161, 162, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 187, 188, 190, 191, 194, 195, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 231, 233, 235, 237, 238, 240, 242, 245, 246, 249, 250, 251, 253, 256, 258, 259, 260, 262, 265, 269, 273], "thread": [0, 50, 51, 166, 168, 171, 174, 175, 176, 179, 182, 233, 237, 238, 240, 241, 245, 246, 258, 260, 279], "num_thread": [0, 168, 171, 176, 182, 233, 257, 258], "openmp": [0, 164, 168, 171, 176, 182, 233, 240, 242, 243, 263], "parallel": [0, 29, 31, 37, 40, 45, 46, 49, 50, 51, 62, 75, 83, 87, 90, 93, 142, 160, 164, 168, 169, 171, 172, 175, 176, 177, 179, 182, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 220, 233, 237, 241, 242, 245, 249, 251, 253, 254, 256, 259, 260, 261, 264, 273], "num_process": [0, 37, 40, 47, 48, 54, 75, 93, 157, 168, 171, 172, 175, 182, 207, 208, 210, 211, 213, 214, 217, 218, 219, 220, 221, 231, 253], "multiprocess": [0, 47, 48, 164, 172, 175, 182, 207, 208, 210, 211, 217, 218, 241, 242, 245, 249, 250, 253, 254, 258, 264], "logic": [0, 100, 175, 179, 240, 247, 253], "when": [0, 3, 4, 5, 6, 7, 8, 17, 20, 22, 23, 36, 41, 44, 73, 77, 79, 84, 87, 92, 93, 98, 102, 103, 115, 116, 117, 126, 128, 135, 136, 140, 143, 146, 147, 148, 162, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 185, 203, 207, 210, 211, 217, 218, 240, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 267, 271, 273, 279], "If": [0, 1, 3, 4, 7, 10, 16, 17, 20, 21, 22, 24, 30, 33, 35, 36, 44, 45, 47, 48, 58, 69, 75, 76, 79, 86, 88, 90, 92, 93, 94, 98, 100, 110, 112, 115, 116, 131, 133, 135, 139, 141, 142, 147, 152, 153, 154, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 190, 191, 198, 199, 200, 201, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 227, 228, 231, 233, 236, 237, 238, 240, 263, 266, 267, 268, 272, 274, 279, 280], "none": [0, 30, 35, 45, 47, 48, 53, 55, 56, 58, 67, 69, 71, 74, 75, 79, 80, 81, 82, 85, 89, 93, 95, 96, 97, 98, 100, 101, 103, 108, 110, 124, 126, 127, 130, 142, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 190, 191, 192, 195, 196, 198, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 226, 227, 228, 230, 233, 236, 237, 238, 248, 249, 257, 258], "omp_num_thread": [0, 168, 171, 176, 182, 233], "environ": [0, 2, 20, 23, 70, 168, 170, 171, 176, 182, 233, 242], "set": [0, 2, 4, 6, 7, 11, 15, 16, 17, 22, 23, 25, 26, 30, 32, 33, 36, 39, 40, 41, 47, 48, 52, 53, 55, 56, 58, 59, 62, 63, 65, 72, 73, 76, 77, 84, 86, 87, 88, 90, 92, 93, 94, 95, 100, 101, 102, 103, 104, 106, 108, 111, 112, 115, 117, 118, 120, 127, 128, 130, 131, 133, 135, 136, 139, 140, 141, 142, 148, 154, 156, 157, 161, 162, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 185, 190, 191, 192, 198, 201, 203, 206, 210, 211, 216, 220, 233, 240, 241, 242, 244, 245, 246, 249, 253, 255, 256, 259, 260, 261, 262, 267, 268, 273, 274, 275, 279], "maximum": [0, 2, 34, 41, 45, 71, 73, 85, 90, 93, 95, 102, 113, 117, 157, 162, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 185, 190, 191, 213, 214, 216, 219, 220, 237, 238, 244, 245, 249, 259, 271], "num_cpu_cor": 0, "select": [0, 7, 25, 26, 30, 40, 50, 51, 54, 56, 65, 70, 72, 77, 78, 86, 87, 88, 89, 90, 92, 94, 109, 112, 130, 162, 168, 169, 175, 176, 179, 181, 182, 185, 186, 203, 204, 237, 240, 265, 271, 273], "error": [0, 20, 22, 30, 44, 47, 48, 72, 80, 82, 84, 97, 163, 168, 169, 170, 171, 172, 174, 175, 176, 182, 185, 207, 208, 210, 211, 217, 218, 220, 221, 227, 231, 233, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 279], "same": [0, 2, 3, 4, 7, 14, 20, 21, 30, 33, 35, 44, 48, 55, 58, 62, 63, 69, 75, 78, 82, 84, 85, 86, 87, 89, 90, 93, 98, 100, 101, 103, 104, 108, 110, 112, 113, 115, 116, 117, 118, 128, 129, 130, 133, 135, 136, 140, 142, 147, 148, 152, 153, 156, 162, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 226, 237, 238, 241, 242, 247, 251, 255, 256, 258, 260, 262, 263, 265, 266, 268, 279], "directli": [0, 6, 7, 16, 35, 37, 69, 72, 88, 89, 103, 104, 147, 153, 161, 169, 175, 182, 241, 243, 263, 271], "closest_peak_direction_gett": 0, "basedirectiongett": 0, "basepmfdirectiongett": 0, "reconst": [0, 25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 50, 51, 54, 56, 65, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 124, 126, 131, 133, 136, 141, 166, 167, 179, 183, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 259, 277], "eudxdirectiongett": [0, 172], "eudx_direction_gett": 0, "migrat": [0, 164, 253, 259], "tavi": 0, "azur": [0, 164, 252, 255, 256, 257, 259], "tqdm": [0, 164, 256, 276], "registr": [0, 20, 61, 107, 108, 112, 113, 130, 158, 159, 164, 166, 167, 168, 170, 173, 176, 181, 182, 184, 190, 224, 230, 233, 240, 242, 244, 245, 246, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 273, 274, 275], "interp": [0, 256], "imaffin": [0, 100, 101, 110, 183, 242, 251, 259], "affinemap": [0, 100, 101, 110, 183, 240, 244, 252, 256, 261], "transform": [0, 25, 30, 44, 52, 54, 61, 63, 75, 76, 82, 86, 93, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 128, 136, 139, 140, 142, 147, 148, 149, 153, 154, 158, 164, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 190, 197, 207, 217, 218, 219, 230, 233, 240, 245, 246, 248, 249, 250, 251, 253, 255, 256, 260, 261, 262, 267, 273], "interpol": [0, 36, 41, 44, 50, 51, 53, 55, 56, 58, 63, 70, 78, 80, 83, 86, 90, 97, 103, 106, 109, 136, 142, 149, 164, 168, 175, 179, 182, 231, 242, 247, 251, 257, 259, 261], "transform_invers": [0, 109, 110, 168, 183], "tissu": [0, 35, 36, 45, 54, 69, 71, 73, 76, 77, 79, 82, 84, 86, 87, 89, 90, 91, 92, 99, 108, 114, 119, 126, 136, 157, 160, 162, 164, 168, 170, 174, 175, 177, 182, 183, 191, 212, 241, 242, 250, 251, 252, 253, 254, 255, 256, 264, 273, 274, 275], "tissueclassifierhmrf": [0, 88, 120, 183, 253, 256], "check": [0, 4, 7, 17, 20, 22, 58, 63, 67, 75, 77, 82, 87, 93, 109, 116, 117, 151, 156, 157, 159, 160, 161, 162, 169, 170, 173, 176, 181, 182, 191, 197, 198, 204, 206, 212, 223, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 253, 254, 255, 256, 259, 262, 263, 265, 279], "toler": [0, 102, 131, 168, 169, 171, 172, 175, 176, 179, 182, 191, 204, 213, 214, 219, 220, 240, 242, 245, 259, 262], "base": [0, 3, 7, 23, 26, 29, 30, 31, 45, 47, 48, 54, 55, 56, 71, 72, 74, 75, 76, 77, 78, 79, 83, 86, 89, 95, 96, 97, 99, 101, 103, 104, 105, 107, 112, 121, 128, 131, 133, 136, 143, 146, 151, 156, 157, 158, 164, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 183, 190, 199, 201, 213, 219, 221, 224, 226, 230, 233, 240, 241, 242, 244, 245, 248, 249, 251, 252, 253, 255, 256, 259, 261, 262, 264, 268, 270, 273, 274, 275], "stop": [0, 7, 26, 29, 31, 33, 34, 39, 45, 136, 162, 175, 176, 179, 182, 185, 191, 237, 238, 245, 249, 251, 255, 264], "criterion": [0, 4, 26, 29, 31, 33, 34, 39, 45, 136, 161, 162, 171, 175, 176, 179, 182, 191, 237, 264], "everi": [0, 20, 22, 23, 30, 37, 40, 44, 59, 87, 90, 94, 103, 115, 116, 127, 135, 136, 139, 143, 146, 147, 170, 174, 175, 176, 178, 179, 181, 182, 226, 245, 247, 265], "iter": [0, 50, 51, 59, 61, 65, 72, 75, 79, 88, 93, 95, 100, 101, 102, 106, 108, 109, 110, 120, 127, 143, 146, 164, 168, 169, 171, 174, 175, 176, 179, 182, 183, 184, 185, 190, 191, 227, 240, 244, 251, 253, 258, 273], "previous": [0, 52, 59, 80, 84, 88, 89, 90, 100, 111, 115, 116, 117, 120, 127, 143, 146, 161, 175], "10th": [0, 262], "mai": [0, 1, 4, 6, 7, 9, 13, 20, 23, 25, 58, 63, 73, 75, 76, 77, 82, 87, 88, 89, 92, 97, 100, 101, 103, 106, 108, 128, 140, 143, 146, 156, 157, 159, 162, 165, 168, 169, 173, 175, 176, 179, 181, 182, 187, 188, 189, 191, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 240, 242, 243, 244, 245, 246, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 267, 268, 271, 273, 279], "earlier": [0, 153], "termin": [0, 20, 128, 150, 151, 155, 163, 168, 175, 176, 182, 191, 279], "previou": [0, 7, 62, 78, 88, 100, 104, 150, 151, 152, 162, 163, 168, 169, 172, 175, 179, 182, 241, 254, 262, 271, 279], "csdeconv": [0, 25, 26, 33, 34, 36, 37, 38, 39, 40, 41, 48, 50, 51, 72, 73, 75, 93, 94, 183, 241, 243, 248, 255], "auto_respons": [0, 243], "auto_response_ssst": [0, 25, 26, 33, 34, 36, 37, 38, 39, 40, 41, 48, 50, 51, 72, 73, 75, 93, 94, 183], "response_from_mask": [0, 88], "response_from_mask_ssst": [0, 75, 183], "sim": [0, 25, 75, 81, 83, 89, 93, 95, 124, 126, 127, 128, 167, 169, 170, 183, 242, 245, 247, 251, 253, 273], "multi_shell_fiber_respons": [0, 88, 183, 262, 263], "mcsd": [0, 88, 183, 252, 259, 262], "prior": [0, 55, 56, 131, 156, 169, 176, 250], "scipi": [0, 4, 20, 50, 51, 65, 70, 72, 78, 84, 86, 136, 147, 164, 169, 175, 176, 179, 180, 240, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 259, 262, 263, 271, 276, 279], "memori": [0, 30, 37, 40, 73, 74, 79, 97, 113, 147, 164, 168, 173, 174, 175, 179, 182, 227, 237, 238, 240, 241, 243, 245, 249, 251, 255, 257, 259, 263, 265], "overlap": [0, 90, 103, 109, 110, 164, 255], "bug": [0, 5, 6, 7, 17, 150, 164, 240, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 259, 261, 262], "occur": [0, 84, 92, 175, 179], "multi_median": [0, 164, 183, 255], "overli": 0, "smooth": [0, 25, 26, 53, 55, 70, 78, 87, 88, 90, 93, 100, 106, 120, 168, 175, 176, 179, 182, 184, 185, 191, 207, 217, 218, 231, 247, 273], "output": [0, 4, 7, 8, 26, 35, 41, 52, 53, 55, 56, 57, 58, 69, 73, 77, 95, 106, 111, 112, 117, 130, 139, 143, 146, 152, 153, 156, 157, 159, 160, 161, 162, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 182, 239, 240, 241, 242, 245, 248, 249, 251, 253, 255, 256, 257, 259, 263, 273], "fix": [0, 5, 6, 7, 17, 22, 26, 36, 41, 86, 103, 146, 154, 164, 168, 169, 174, 175, 176, 181, 182, 191, 233, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 273], "regardless": [0, 175], "": [0, 2, 4, 6, 7, 13, 14, 16, 17, 20, 22, 23, 24, 25, 26, 30, 33, 35, 38, 39, 40, 44, 45, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 65, 67, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 121, 124, 126, 127, 128, 129, 130, 133, 135, 136, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 160, 161, 163, 165, 168, 169, 170, 171, 174, 175, 176, 177, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 245, 248, 250, 251, 253, 254, 256, 259, 261, 262, 263, 265, 267, 268, 269, 271, 273, 274, 275], "via": [0, 7, 20, 22, 25, 26, 30, 45, 60, 64, 77, 89, 94, 96, 131, 143, 146, 150, 168, 171, 174, 175, 176, 182, 185, 196, 201, 240, 244, 264, 267, 268, 273, 279], "median_otsu": [0, 25, 45, 47, 48, 54, 56, 60, 64, 65, 70, 74, 77, 78, 82, 88, 89, 93, 108, 109, 110, 114, 119, 121, 182, 183, 227, 251, 253, 255, 264], "threshold": [0, 5, 26, 35, 36, 45, 58, 60, 64, 65, 69, 75, 84, 86, 87, 88, 89, 93, 112, 115, 116, 117, 118, 121, 128, 130, 131, 152, 156, 160, 162, 168, 169, 171, 173, 174, 175, 179, 181, 182, 183, 185, 189, 191, 196, 197, 198, 201, 203, 204, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 230, 233, 234, 237, 238, 242, 245, 248, 249, 250, 251, 255, 262, 264], "should": [0, 2, 3, 4, 5, 6, 7, 10, 13, 16, 20, 22, 23, 30, 41, 45, 56, 58, 61, 70, 71, 73, 74, 75, 76, 77, 82, 86, 87, 88, 89, 90, 92, 93, 106, 115, 133, 135, 136, 143, 146, 147, 151, 159, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 186, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 220, 222, 240, 242, 243, 245, 250, 251, 252, 256, 258, 259, 260, 261, 277, 279], "process": [0, 4, 25, 26, 30, 47, 48, 53, 57, 58, 67, 73, 75, 76, 77, 78, 84, 86, 89, 90, 100, 102, 108, 109, 115, 117, 121, 128, 130, 135, 139, 143, 146, 150, 152, 156, 157, 159, 160, 161, 162, 164, 168, 169, 170, 171, 174, 175, 177, 179, 181, 182, 187, 188, 189, 190, 191, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 227, 228, 229, 231, 232, 234, 236, 237, 238, 242, 251, 253, 255, 259, 271, 273, 279], "pipelin": [0, 40, 58, 100, 101, 108, 139, 142, 164, 168, 170, 174, 255, 256, 259, 273], "after": [0, 3, 7, 10, 20, 25, 26, 36, 54, 57, 58, 75, 86, 90, 102, 103, 104, 109, 112, 118, 120, 121, 129, 135, 139, 142, 146, 149, 153, 154, 156, 157, 168, 169, 171, 173, 174, 175, 176, 177, 181, 182, 185, 201, 230, 238, 242, 247, 248, 249, 255, 258], "make": [0, 2, 4, 5, 6, 11, 14, 15, 16, 18, 19, 20, 23, 47, 52, 58, 62, 74, 80, 82, 86, 87, 88, 90, 101, 103, 106, 109, 111, 112, 115, 116, 117, 128, 131, 133, 136, 139, 140, 143, 147, 152, 154, 163, 168, 169, 170, 173, 175, 177, 178, 179, 181, 182, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 253, 254, 256, 259, 260, 262, 266, 268, 271, 279, 281], "sure": [0, 2, 4, 6, 7, 20, 22, 74, 82, 101, 109, 115, 116, 117, 128, 139, 152, 153, 154, 163, 178, 181, 279], "oper": [0, 3, 4, 25, 26, 44, 47, 65, 100, 139, 146, 166, 168, 173, 175, 179, 182, 213, 226, 240, 253, 262, 265, 273, 276, 279], "expect": [0, 30, 41, 73, 77, 84, 98, 120, 147, 157, 161, 168, 170, 171, 173, 174, 175, 176, 179, 182, 183, 185, 242, 267, 268, 273], "try": [0, 4, 18, 20, 22, 77, 82, 87, 88, 92, 95, 101, 109, 117, 118, 131, 151, 156, 157, 159, 160, 161, 162, 163, 164, 168, 171, 243, 247, 248, 249, 251, 267, 268, 277, 279, 280, 281], "readjust": 0, "median_radiu": [0, 47, 48, 52, 54, 56, 74, 77, 78, 82, 88, 89, 93, 109, 110, 111, 121, 151, 176, 182, 227], "peak_direction_gett": [0, 251], "dipy_track_loc": [0, 251], "dipy_track": [0, 151, 162, 239, 255], "other": [0, 4, 5, 11, 14, 16, 19, 20, 21, 23, 26, 30, 35, 40, 47, 53, 56, 58, 63, 65, 67, 69, 72, 73, 75, 77, 78, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 98, 100, 101, 102, 103, 108, 109, 110, 115, 120, 126, 130, 131, 136, 139, 143, 146, 147, 156, 157, 159, 160, 162, 168, 169, 170, 171, 173, 175, 176, 178, 179, 181, 182, 201, 212, 237, 238, 243, 247, 248, 251, 253, 256, 258, 262, 267, 268, 273, 279], "unique_bv": 0, "unique_bvals_magnitud": [0, 183], "visual": [0, 2, 7, 20, 23, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 50, 51, 54, 56, 58, 59, 67, 69, 70, 73, 74, 75, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 102, 104, 106, 108, 109, 110, 112, 113, 115, 116, 117, 118, 121, 124, 126, 127, 129, 130, 131, 133, 135, 136, 138, 142, 147, 149, 150, 151, 152, 153, 154, 158, 164, 167, 168, 171, 172, 173, 175, 176, 182, 183, 222, 242, 243, 244, 245, 247, 248, 251, 253, 254, 256, 258, 259, 262, 264, 265, 273, 279], "window": [0, 5, 12, 22, 23, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 50, 51, 56, 59, 69, 70, 73, 74, 75, 81, 82, 83, 87, 88, 93, 94, 95, 96, 98, 103, 104, 108, 109, 112, 113, 115, 116, 117, 118, 124, 127, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 147, 151, 152, 163, 164, 168, 175, 181, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 259, 261, 265], "scene": [0, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 59, 69, 70, 73, 74, 75, 81, 82, 83, 87, 88, 93, 94, 95, 96, 98, 103, 112, 113, 115, 116, 117, 118, 124, 127, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 181, 182, 222, 255], "render": [0, 4, 45, 131, 133, 137, 138, 139, 181, 240, 242, 243, 244, 245, 246, 249, 253, 255, 258, 263, 264], "clear": [0, 4, 58, 59, 75, 82, 87, 94, 95, 98, 115, 116, 118, 140, 142, 175, 176, 183, 249, 255], "rm_all": 0, "img": [0, 54, 63, 67, 74, 79, 80, 83, 84, 85, 97, 106, 166, 168, 170, 173, 174, 181, 251], "get_data": [0, 245, 251, 252], "nibabel": [0, 4, 20, 23, 44, 63, 67, 74, 76, 77, 79, 80, 82, 83, 84, 85, 97, 147, 164, 168, 170, 173, 243, 245, 249, 252, 256, 260, 262, 265, 276, 279], "np": [0, 4, 25, 26, 30, 32, 36, 41, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 65, 70, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 100, 101, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 124, 126, 127, 128, 129, 130, 133, 135, 136, 139, 140, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 201, 226, 240, 242, 247, 253, 256, 258, 260, 263], "asanyarrai": 0, "dataobj": [0, 54, 83, 84], "tractogram": [0, 39, 44, 50, 51, 108, 112, 113, 128, 153, 158, 162, 164, 166, 168, 170, 173, 176, 179, 181, 182, 192, 195, 222, 230, 233, 237, 238, 251, 258, 259, 260, 263, 273, 274, 275], "streamlin": [0, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 69, 102, 103, 104, 105, 107, 112, 114, 115, 116, 117, 118, 119, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 152, 158, 162, 163, 164, 166, 167, 168, 170, 175, 176, 178, 182, 183, 190, 222, 224, 230, 233, 237, 238, 240, 241, 242, 243, 244, 245, 248, 249, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 264, 265, 273, 274, 275], "statefultractogram": [0, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 50, 51, 69, 104, 108, 112, 136, 164, 181, 183, 255, 259, 262], "creat": [0, 2, 4, 6, 11, 25, 26, 30, 32, 33, 35, 36, 40, 41, 44, 45, 54, 59, 67, 69, 75, 77, 78, 81, 82, 84, 86, 88, 92, 95, 97, 100, 101, 102, 110, 115, 116, 117, 124, 127, 128, 129, 130, 135, 136, 139, 140, 141, 144, 145, 148, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 164, 165, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 225, 240, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 258, 262, 264, 279, 280], "anoth": [0, 2, 6, 22, 26, 30, 44, 73, 77, 86, 87, 88, 92, 113, 146, 168, 169, 173, 175, 176, 182, 191, 248, 249, 252, 261, 267, 273], "one": [0, 4, 5, 7, 10, 17, 20, 22, 26, 30, 35, 44, 45, 53, 55, 56, 58, 59, 61, 62, 65, 67, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 82, 84, 85, 86, 88, 89, 90, 93, 94, 96, 97, 98, 100, 103, 108, 110, 113, 115, 117, 126, 127, 128, 135, 136, 141, 143, 147, 148, 149, 157, 161, 162, 164, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 181, 182, 184, 192, 201, 207, 209, 212, 217, 218, 220, 222, 226, 240, 242, 244, 246, 249, 251, 252, 253, 256, 258, 261, 267, 268, 271, 273, 279], "dipy_nlmean": [0, 146], "dipy_denoise_nlmean": [0, 156, 239], "get_fdata": [0, 61, 83, 84, 92, 108, 252], "modif": [0, 115, 168, 169, 176, 182, 242, 243], "float64": [0, 25, 53, 57, 168, 240, 245, 251, 260], "some": [0, 1, 6, 10, 11, 14, 16, 17, 20, 21, 22, 30, 35, 44, 45, 59, 61, 62, 67, 69, 71, 72, 73, 76, 77, 84, 86, 87, 88, 89, 90, 92, 93, 95, 98, 101, 106, 108, 110, 112, 115, 116, 127, 128, 131, 133, 135, 136, 139, 140, 141, 143, 146, 147, 148, 150, 151, 152, 161, 168, 169, 170, 171, 175, 176, 179, 182, 209, 212, 227, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 258, 261, 262, 263, 265, 268, 276, 279], "introduc": [0, 4, 23, 39, 54, 75, 77, 86, 88, 92, 93, 103, 104, 160, 171, 175, 241, 249, 253, 254, 262], "break": [0, 5, 103, 142, 169, 170, 171, 240, 245, 247, 249, 251, 252, 259, 261, 273], "backward": [0, 5, 25, 110, 166, 168, 172, 175, 179, 249, 259, 262, 263], "compat": [0, 5, 23, 76, 164, 172, 173, 175, 179, 241, 245, 246, 247, 248, 249, 250, 251, 253, 256, 259, 262, 263], "python": [0, 2, 4, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 146, 147, 164, 168, 169, 173, 175, 181, 182, 183, 208, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 273, 280], "mrtrix": [0, 166, 170, 172, 173, 175, 176, 179, 182, 194, 251, 255, 256, 271, 273], "fibernav": 0, "tournier07": [0, 172, 174, 175, 179, 271], "descoteaux07": [0, 95, 172, 175, 179, 271], "cycl": [0, 168, 169, 265], "default_spher": [0, 25, 26, 34, 35, 36, 37, 38, 41, 48, 50, 51, 69, 74, 75, 98, 131, 133, 136, 141, 177, 181, 182, 228, 236], "symmetric724": [0, 88, 95, 170, 182, 228, 236, 251], "repulsion724": [0, 47, 70, 79, 81, 82, 83, 85, 87, 93, 96, 124, 127, 170, 182, 228, 236, 251], "evenli": [0, 40, 45, 59, 71, 89, 95, 169, 175, 179], "mask": [0, 7, 25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 56, 57, 62, 65, 69, 70, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 105, 107, 108, 109, 110, 111, 121, 131, 133, 136, 141, 143, 151, 160, 162, 164, 168, 169, 170, 171, 172, 174, 175, 178, 179, 181, 183, 202, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 225, 227, 234, 237, 238, 240, 241, 242, 245, 246, 247, 248, 249, 251, 255, 257, 259, 261, 262, 263, 264, 274, 275], "follow": [0, 3, 4, 5, 6, 7, 15, 17, 18, 19, 20, 21, 22, 23, 24, 30, 34, 35, 37, 41, 44, 54, 55, 56, 58, 59, 61, 63, 65, 67, 69, 73, 76, 77, 78, 79, 82, 86, 88, 89, 90, 91, 92, 94, 98, 100, 103, 113, 115, 127, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 156, 160, 161, 162, 163, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 182, 198, 201, 207, 209, 212, 217, 218, 220, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 271, 274, 276, 279, 281], "wai": [0, 3, 4, 6, 7, 13, 14, 16, 17, 20, 21, 22, 32, 34, 35, 37, 53, 54, 59, 61, 67, 69, 72, 75, 76, 77, 78, 79, 82, 84, 87, 88, 89, 90, 93, 117, 127, 128, 136, 139, 140, 142, 143, 147, 150, 151, 159, 160, 162, 168, 169, 175, 176, 179, 181, 182, 216, 237, 238, 250, 253, 268, 279], "you": [0, 1, 2, 4, 5, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 33, 35, 40, 44, 45, 47, 48, 54, 56, 57, 58, 59, 61, 63, 67, 69, 72, 73, 74, 75, 76, 77, 79, 82, 84, 85, 86, 87, 88, 89, 90, 94, 95, 98, 100, 103, 104, 108, 110, 112, 115, 116, 117, 131, 133, 135, 139, 140, 141, 142, 143, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 166, 168, 169, 170, 173, 174, 175, 176, 177, 178, 181, 182, 191, 204, 205, 222, 224, 230, 231, 241, 245, 247, 260, 265, 266, 274, 277, 279, 280, 281], "4d": [0, 55, 57, 58, 67, 75, 81, 82, 86, 93, 124, 150, 156, 158, 160, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 203, 204, 205, 221, 227, 231, 235, 245, 251, 254, 255, 263], "volum": [0, 25, 26, 30, 36, 39, 41, 44, 45, 52, 55, 56, 58, 60, 63, 64, 67, 71, 72, 75, 78, 79, 82, 84, 86, 87, 88, 89, 91, 92, 93, 94, 96, 98, 100, 101, 102, 108, 109, 110, 111, 120, 128, 133, 137, 138, 147, 151, 156, 157, 158, 160, 162, 163, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 191, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 231, 234, 235, 236, 237, 238, 240, 242, 244, 248, 251, 254, 255, 256, 259, 262, 263, 264, 269, 273, 274, 275], "also": [0, 1, 4, 6, 7, 18, 20, 35, 37, 39, 40, 41, 44, 52, 53, 54, 56, 57, 58, 59, 61, 62, 65, 67, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 100, 101, 102, 104, 108, 109, 110, 111, 115, 117, 118, 120, 126, 127, 130, 133, 135, 136, 139, 140, 142, 143, 146, 147, 148, 149, 152, 156, 157, 159, 160, 161, 162, 163, 168, 169, 171, 173, 174, 175, 176, 177, 179, 181, 182, 204, 205, 222, 227, 240, 262, 263, 265, 271, 272, 277, 281], "load": [0, 32, 33, 34, 35, 36, 37, 39, 41, 44, 50, 51, 53, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 69, 70, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 89, 91, 92, 93, 96, 97, 98, 102, 103, 104, 109, 112, 115, 116, 117, 118, 121, 136, 139, 142, 147, 163, 166, 167, 169, 170, 173, 174, 182, 222, 240, 245, 247, 251, 253, 260, 262, 263], "save": [0, 2, 6, 7, 35, 40, 44, 52, 53, 55, 56, 58, 61, 63, 65, 67, 69, 70, 73, 74, 75, 76, 79, 80, 82, 83, 85, 88, 93, 95, 97, 98, 103, 104, 108, 110, 111, 112, 116, 118, 126, 127, 130, 133, 136, 139, 142, 143, 146, 147, 152, 153, 154, 156, 157, 159, 160, 161, 162, 164, 166, 167, 170, 171, 172, 173, 174, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 191, 193, 196, 197, 200, 201, 202, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 226, 227, 228, 229, 231, 232, 234, 236, 237, 238, 242, 245, 246, 249, 251, 252, 253, 255, 256, 258, 260, 262, 277], "load_tractogram": [0, 44, 50, 51, 108, 115, 116, 117, 118, 166, 176, 183, 252], "save_tractogram": [0, 44, 104, 108, 166, 183], "trk": [0, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 50, 51, 69, 104, 108, 112, 128, 136, 147, 151, 152, 153, 154, 163, 166, 170, 173, 182, 190, 195, 222, 224, 230, 233, 237, 238, 248, 251, 252, 256, 274, 275], "tck": [0, 44, 50, 51, 163, 173, 182, 192, 195, 222, 223, 245, 251, 252, 255, 263, 274, 275], "vtk": [0, 20, 44, 163, 164, 182, 183, 192, 195, 223, 240, 242, 243, 244, 245, 249, 250, 255, 259, 261], "fib": [0, 44, 163, 166, 173, 182, 192, 195, 223, 274, 275], "dpy": [0, 44, 147, 163, 167, 182, 183, 192, 195, 222, 223, 242, 265, 274, 275], "nifti": [0, 44, 61, 63, 67, 82, 133, 147, 152, 160, 161, 163, 166, 168, 170, 173, 175, 178, 179, 182, 183, 186, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 226, 228, 229, 244, 246, 251, 253, 265, 277], "file": [0, 3, 4, 6, 7, 17, 20, 22, 23, 28, 30, 31, 35, 40, 43, 49, 53, 58, 61, 63, 64, 67, 68, 69, 76, 82, 86, 97, 99, 100, 101, 107, 108, 110, 112, 119, 122, 125, 128, 134, 136, 138, 143, 145, 146, 147, 151, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 273, 274, 275, 276, 277, 279], "need": [0, 2, 3, 4, 6, 7, 9, 10, 16, 19, 20, 23, 30, 33, 35, 44, 45, 47, 52, 53, 56, 57, 58, 59, 65, 69, 71, 72, 73, 74, 76, 77, 79, 82, 86, 87, 88, 89, 90, 94, 95, 98, 100, 101, 102, 108, 109, 110, 111, 113, 115, 116, 117, 126, 127, 128, 131, 133, 135, 136, 139, 140, 141, 142, 143, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 201, 220, 222, 231, 237, 238, 240, 241, 242, 243, 244, 245, 247, 249, 251, 252, 254, 255, 260, 262, 266, 268, 277, 279], "guarante": [0, 44, 87, 115, 175], "proper": [0, 93, 175, 182, 240, 253], "spatial": [0, 25, 30, 39, 44, 56, 82, 84, 86, 93, 96, 108, 115, 136, 150, 160, 164, 169, 171, 173, 175, 179, 182, 247, 251, 253, 254, 260, 269, 273], "handl": [0, 7, 44, 54, 67, 73, 139, 164, 170, 173, 175, 181, 182, 241, 242, 243, 244, 245, 248, 249, 251, 252, 254, 255, 256, 257, 260, 273, 276], "modifi": [0, 7, 44, 100, 101, 102, 118, 133, 136, 169, 170, 175, 176, 182, 190, 248, 255, 256, 271, 273], "enforc": [0, 6, 23, 77, 87, 92, 135, 164, 169, 170, 173, 175, 254, 258, 273], "uniform": [0, 53, 62, 73, 164, 168, 169, 175, 263, 273], "docstr": [0, 4, 23, 143, 146, 182, 240, 241, 242, 243, 246, 247, 249, 250, 252, 253, 254, 256, 257, 259, 260, 262, 263, 272], "deform_streamlin": [0, 183, 259, 260], "select_by_roi": [0, 183], "orient_by_roi": [0, 183, 242, 245], "_extract_v": 0, "values_from_volum": [0, 183, 242], "util": [0, 23, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 50, 51, 69, 82, 86, 98, 112, 131, 133, 135, 136, 141, 151, 160, 164, 166, 168, 169, 183, 241, 242, 243, 245, 247, 249, 251, 252, 253, 255, 259, 261, 262, 263, 271], "density_map": [0, 44, 136, 183, 255], "connectivity_matrix": [0, 50, 51, 136, 183, 245, 249, 252, 262], "seeds_from_mask": [0, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 69, 131, 133, 136, 141, 183], "random_seeds_from_mask": [0, 183], "target": [0, 41, 58, 102, 103, 108, 112, 136, 153, 168, 169, 174, 176, 178, 182, 183, 190, 233, 242, 245, 249], "target_line_bas": [0, 183, 255], "near_roi": [0, 26, 183, 259], "length": [0, 45, 86, 87, 103, 104, 115, 116, 117, 128, 131, 132, 134, 139, 140, 147, 149, 168, 169, 170, 173, 175, 176, 177, 178, 181, 182, 183, 184, 185, 214, 222, 230, 233, 237, 240, 242, 245, 249, 250, 259, 262, 264, 272], "path_length": [0, 133, 183], "affine_for_trackvi": 0, "move_streamlin": 0, "flexi_tvis_affin": 0, "get_flexi_tvis_affin": [0, 260], "delet": [0, 2, 11, 20, 22, 85, 168, 170, 182, 192, 240, 244, 248, 249, 251, 253, 262], "life": [0, 23, 29, 31, 45, 76, 164, 169, 183, 241, 249, 250, 251, 252, 255, 256, 264], "voxel2streamlin": [0, 183], "setup": [0, 2, 23, 163, 166, 168, 179, 183, 241, 242, 249, 253, 261, 262], "fit": [0, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 48, 50, 51, 54, 56, 58, 65, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 121, 124, 160, 164, 168, 169, 172, 174, 175, 176, 179, 181, 182, 183, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 253, 255, 259, 260, 261, 262, 263, 264, 277, 281], "fibermodel": [0, 30, 183], "afq_profil": [0, 128, 183, 253, 258], "analysi": [0, 4, 21, 35, 36, 40, 41, 54, 56, 61, 65, 67, 69, 73, 76, 77, 80, 83, 84, 87, 88, 89, 90, 96, 97, 104, 108, 109, 110, 128, 129, 133, 150, 151, 152, 153, 154, 156, 159, 160, 161, 162, 164, 168, 169, 170, 171, 175, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 246, 251, 255, 260, 262, 267, 273], "similarli": [0, 3, 86, 90, 92, 168, 170, 182, 185], "simul": [0, 59, 81, 87, 89, 95, 98, 124, 125, 135, 167, 169, 170, 171, 175, 177, 240, 247, 253, 256, 264], "singletensor": [0, 251], "single_tensor": [0, 126, 183, 242, 251], "multitensor": [0, 45, 89, 95, 123, 125, 177, 264], "multi_tensor": [0, 81, 89, 124, 127, 183, 242], "sticksandbal": 0, "sticks_and_bal": [0, 183], "voxel_s": [0, 36, 44, 50, 51, 63, 79, 85, 173, 179, 183, 251], "stremline_map": 0, "_util": [0, 183], "_mapping_to_voxel": 0, "peaksandmetricsdirectiongett": [0, 244, 251], "localtrack": [0, 26, 41, 131, 133, 136, 141, 183, 242, 251, 259], "particlefilteringtrack": [0, 183], "local": [0, 2, 4, 7, 15, 18, 20, 22, 26, 29, 34, 35, 36, 38, 45, 53, 54, 56, 58, 60, 64, 69, 71, 73, 75, 77, 79, 82, 84, 86, 87, 88, 89, 91, 92, 93, 99, 100, 104, 109, 112, 133, 153, 158, 160, 164, 168, 170, 171, 172, 174, 175, 176, 177, 179, 182, 198, 199, 200, 201, 221, 224, 230, 233, 237, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 262, 264, 269, 273, 274, 275], "local_track": [0, 26, 131, 133, 136, 141, 183], "thei": [0, 4, 7, 18, 36, 44, 55, 63, 65, 72, 76, 77, 82, 90, 93, 96, 100, 102, 103, 104, 115, 116, 117, 118, 131, 136, 139, 143, 146, 149, 151, 152, 156, 160, 168, 169, 170, 175, 176, 179, 181, 182, 251, 267, 268], "tissue_classifi": [0, 182, 191], "stopping_criterion": [0, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 69, 131, 133, 136, 141, 179, 182, 238], "tissueclassifi": 0, "stoppingcriterion": [0, 179], "binarytissueclassifi": [0, 245, 246], "binarystoppingcriterion": [0, 34, 37, 38, 41, 50, 51, 136], "thresholdtissueclassifi": 0, "thresholdstoppingcriterion": [0, 26, 33, 35, 39, 40, 41, 69, 131, 133, 141], "constrainedtissueclassifi": 0, "anatomicalstoppingcriterion": 0, "acttissueclassifi": 0, "actstoppingcriterion": [0, 41], "cmctissueclassifi": 0, "cmcstoppingcriterion": [0, 36], "tissueclass": 0, "streamlinestatu": 0, "eudx": [0, 29, 34, 35, 45, 69, 136, 151, 158, 179, 182, 237, 248, 249, 251, 256], "tractographi": [0, 26, 30, 31, 33, 35, 39, 44, 46, 49, 51, 63, 69, 77, 87, 89, 102, 103, 104, 108, 113, 114, 117, 119, 126, 128, 131, 133, 147, 151, 153, 160, 162, 164, 167, 169, 173, 175, 176, 177, 178, 179, 182, 219, 237, 238, 242, 244, 249, 250, 254, 258, 260, 261, 264, 271, 273, 274, 275, 280], "perform": [0, 2, 4, 25, 26, 35, 44, 50, 51, 53, 54, 56, 58, 61, 65, 69, 70, 72, 73, 76, 77, 81, 86, 88, 89, 92, 100, 102, 104, 106, 108, 109, 110, 112, 115, 117, 118, 120, 121, 124, 126, 150, 151, 156, 157, 159, 160, 161, 162, 164, 168, 169, 171, 173, 174, 175, 176, 177, 179, 181, 182, 185, 191, 209, 212, 215, 226, 255, 259, 262, 267, 273], "trackvi": [0, 35, 44, 69, 136, 147, 170, 173, 183, 244, 246, 251, 256, 265], "extern": [0, 75, 88, 181, 182, 242, 251, 265], "quickbund": [0, 251], "welcom": [0, 4, 21], "viz": [0, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 59, 69, 70, 73, 74, 75, 77, 81, 82, 83, 87, 88, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 112, 113, 115, 116, 117, 118, 121, 124, 127, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 147, 167, 183, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 255, 259, 261, 263], "integr": [0, 4, 11, 35, 65, 69, 78, 80, 82, 97, 162, 164, 175, 244, 245, 250, 261, 262, 267, 273], "variou": [0, 29, 30, 31, 36, 45, 77, 86, 170, 175, 179, 181, 182, 237, 238, 242, 262, 264, 267, 268], "analys": [0, 54, 171], "adjust": [0, 55, 58, 70, 77, 87, 88, 89, 92, 121, 139, 142, 168, 171, 175, 176, 181, 182, 198, 242, 246, 249], "slr": [0, 102, 103, 104, 112, 153, 161, 164, 168, 176, 182, 233, 241, 245, 246, 249, 252, 259], "recobundl": [0, 45, 114, 119, 158, 164, 183, 243, 244, 245, 246, 252, 255, 256, 258, 262, 264], "algorithm": [0, 26, 30, 35, 36, 45, 50, 51, 54, 55, 58, 60, 62, 63, 64, 69, 71, 77, 81, 82, 83, 84, 86, 89, 93, 94, 99, 103, 104, 108, 109, 110, 115, 117, 118, 120, 121, 124, 135, 151, 156, 161, 164, 165, 167, 168, 169, 171, 175, 176, 178, 179, 181, 182, 185, 191, 198, 200, 201, 213, 220, 251, 252, 253, 260, 261, 264, 265, 273], "exclud": [0, 16, 41, 65, 78, 84, 98, 131, 136, 175, 256], "insid": [0, 4, 32, 67, 87, 117, 168, 171, 175, 176, 179, 182, 237, 238, 247], "note": [0, 4, 6, 7, 16, 17, 18, 22, 23, 25, 30, 58, 72, 73, 75, 77, 78, 82, 87, 88, 89, 90, 92, 101, 104, 106, 110, 115, 116, 121, 133, 143, 146, 150, 152, 154, 156, 157, 160, 169, 170, 171, 173, 174, 175, 176, 177, 178, 181, 182, 183, 190, 192, 221, 265, 267, 268, 269, 271], "nose": [0, 148, 164, 245, 259], "pytest": [0, 20, 21, 22, 23, 164, 245, 246, 253, 256, 259, 263], "load_tck": [0, 44, 183], "save_tck": [0, 183], "highli": [0, 20, 61, 65, 77, 89, 115, 156, 159, 178, 182, 190], "manag": [0, 2, 3, 20, 23, 135, 142, 164, 167, 173, 181, 244, 249, 253, 259, 262, 263], "tabl": [0, 20, 23, 25, 26, 30, 45, 55, 59, 70, 71, 76, 87, 88, 90, 91, 92, 98, 100, 142, 164, 167, 169, 170, 171, 175, 177, 178, 179, 181, 182, 216, 243, 245, 247, 249, 253, 254, 255, 256, 260, 262, 274], "b0_thresold": 0, "50": [0, 30, 31, 40, 45, 47, 48, 54, 55, 58, 71, 73, 74, 75, 81, 82, 83, 84, 85, 86, 87, 93, 94, 95, 96, 98, 102, 106, 109, 121, 124, 126, 127, 133, 135, 141, 151, 160, 164, 165, 168, 169, 171, 175, 176, 177, 182, 191, 197, 198, 201, 203, 204, 207, 208, 209, 212, 213, 214, 216, 217, 218, 219, 220, 223, 230, 233, 247, 264, 273], "impact": [0, 33, 77, 89, 115, 126, 160, 175, 176, 177, 182, 200, 273], "your": [0, 1, 2, 4, 5, 6, 11, 14, 15, 16, 17, 20, 21, 22, 24, 35, 45, 47, 48, 57, 59, 61, 63, 67, 69, 74, 76, 77, 80, 82, 86, 97, 98, 115, 116, 143, 146, 147, 150, 152, 153, 156, 157, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 175, 242, 263, 265, 266, 277, 279, 280], "assur": [0, 35, 65, 69, 130, 173], "code": [0, 2, 3, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 146, 150, 164, 169, 173, 176, 182, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 253, 255, 256, 258, 259, 260, 262, 263, 265, 271, 276, 280], "run": [0, 4, 5, 6, 19, 20, 22, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 146, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 167, 168, 169, 174, 175, 176, 183, 191, 238, 240, 241, 242, 245, 249, 251, 253, 254, 258, 260, 263, 265, 267, 272, 274], "exactli": [0, 4, 33, 35, 69, 104, 148, 169, 175, 249], "manner": [0, 75, 161, 170, 179, 182], "befor": [0, 2, 4, 7, 22, 30, 35, 36, 55, 57, 61, 65, 69, 73, 74, 76, 77, 78, 89, 93, 100, 102, 103, 104, 106, 109, 112, 113, 117, 120, 129, 149, 153, 154, 156, 157, 159, 168, 169, 173, 174, 175, 177, 178, 179, 182, 238, 244, 246, 247, 248, 249, 251, 253, 259, 260, 279], "initi": [0, 6, 9, 25, 30, 32, 35, 39, 40, 48, 50, 51, 69, 72, 78, 84, 86, 87, 90, 93, 94, 95, 98, 100, 101, 103, 113, 118, 135, 139, 141, 142, 152, 168, 169, 171, 172, 174, 175, 176, 179, 181, 182, 196, 240, 247, 250, 253, 255, 259, 262, 273], "b0_threshold": [0, 58, 86, 160, 169, 171, 176, 182, 191, 197, 198, 201, 203, 204, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 245], "fvtk": [0, 164, 240, 241, 242, 244, 245, 247, 248, 249], "impli": [0, 16, 53, 61, 130, 159, 168, 169, 170, 175, 176, 177, 182, 184, 249, 272], "actor": [0, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 59, 69, 70, 73, 74, 75, 81, 82, 83, 87, 88, 93, 94, 95, 96, 98, 103, 112, 113, 115, 116, 117, 118, 124, 127, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 147, 181, 183, 240, 244, 245, 253, 254, 255, 263], "ren": [0, 142, 242, 245], "ui": [0, 139, 142, 181, 242, 243, 244, 245], "element": [0, 26, 62, 72, 75, 76, 77, 82, 86, 91, 92, 93, 103, 116, 126, 142, 160, 168, 169, 171, 173, 175, 176, 177, 179, 181, 182, 183, 192, 212, 242, 245, 253, 273], "To": [0, 2, 6, 7, 20, 23, 39, 40, 44, 53, 54, 55, 56, 58, 67, 70, 73, 76, 77, 86, 88, 90, 92, 93, 94, 95, 97, 98, 100, 102, 103, 104, 108, 109, 110, 117, 118, 126, 127, 128, 130, 136, 153, 156, 157, 159, 160, 161, 162, 163, 168, 169, 170, 174, 175, 179, 182, 206, 274, 279], "learn": [0, 13, 14, 21, 58, 67, 70, 72, 83, 86, 128, 150, 155, 164, 170, 171, 174, 175, 182, 183, 196, 201, 246, 257, 263, 273, 276, 277, 280], "go": [0, 6, 7, 10, 16, 17, 18, 20, 21, 22, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 146, 147, 148, 152, 169, 176, 179, 242, 244, 251], "http": [0, 7, 10, 20, 22, 23, 25, 26, 30, 32, 33, 36, 39, 40, 41, 53, 54, 55, 56, 57, 58, 59, 61, 62, 65, 67, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 102, 103, 104, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 128, 129, 130, 131, 133, 139, 147, 148, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 182, 188, 189, 190, 191, 196, 198, 199, 201, 202, 208, 209, 212, 213, 214, 215, 219, 220, 221, 224, 230, 233, 238, 256, 262, 263, 271, 273, 274, 275], "gl": 0, "furthermor": [0, 77, 147], "load_trk": [0, 30, 44, 104, 112, 113, 128, 129, 183, 255], "save_trk": [0, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 69, 112, 136, 183], "object": [0, 4, 6, 7, 30, 35, 40, 44, 47, 55, 59, 67, 69, 73, 74, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 92, 93, 94, 96, 97, 98, 100, 109, 110, 115, 116, 117, 118, 136, 139, 140, 141, 142, 143, 146, 147, 148, 149, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 201, 222, 242, 243, 245, 252, 253, 255, 256, 260], "much": [0, 4, 5, 7, 72, 86, 92, 97, 100, 104, 131, 168, 174, 175, 176, 179, 241], "less": [0, 4, 53, 61, 77, 79, 90, 93, 115, 133, 135, 147, 149, 164, 168, 169, 171, 172, 175, 178, 179, 181, 182, 207, 217, 218, 222, 230, 233, 241, 259, 260], "easier": [0, 5, 7, 81, 124, 136, 151, 182, 281], "No": [0, 4, 20, 44, 45, 71, 169, 170, 182, 207, 208, 209, 213, 215, 217, 218, 219, 242, 243, 252, 261], "major": [0, 23, 148, 168, 175, 247], "support": [0, 21, 23, 44, 63, 93, 131, 147, 150, 151, 163, 164, 168, 169, 173, 175, 176, 179, 181, 182, 192, 195, 223, 226, 240, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 259, 261, 262, 263, 276], "It": [0, 6, 7, 13, 16, 17, 23, 25, 34, 36, 44, 52, 55, 59, 62, 65, 74, 75, 76, 77, 82, 85, 86, 87, 88, 89, 90, 94, 103, 104, 109, 111, 112, 113, 115, 116, 118, 121, 130, 136, 140, 142, 143, 146, 147, 148, 152, 161, 162, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 181, 182, 186, 190, 200, 201, 214, 220], "year": [0, 3, 22, 246, 249], "As": [0, 4, 23, 30, 34, 36, 56, 63, 72, 73, 77, 78, 84, 86, 87, 88, 89, 90, 91, 95, 103, 110, 112, 128, 156, 157, 159, 160, 162, 168, 175, 179, 277], "far": [0, 22, 87, 100, 128], "know": [0, 7, 21, 24, 30, 44, 62, 65, 100, 149, 168, 169, 175, 176, 181, 256, 279, 280, 281], "work": [0, 3, 4, 7, 13, 14, 17, 19, 21, 22, 23, 52, 58, 62, 65, 73, 84, 86, 88, 93, 95, 100, 101, 108, 111, 112, 136, 143, 146, 148, 156, 160, 164, 169, 174, 175, 179, 182, 216, 240, 241, 242, 245, 247, 249, 251, 252, 253, 255, 259, 260, 262, 263, 279], "well": [0, 4, 6, 7, 13, 23, 30, 37, 52, 53, 65, 76, 78, 88, 89, 90, 93, 94, 95, 102, 103, 111, 128, 147, 156, 160, 162, 168, 169, 175, 176, 177, 182, 192, 245, 271, 279], "test": [0, 2, 4, 5, 6, 7, 17, 19, 21, 22, 72, 77, 82, 86, 88, 90, 98, 101, 104, 133, 152, 167, 169, 170, 171, 174, 175, 176, 181, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 273, 274, 275], "upgrad": [0, 150, 163, 245, 246, 252], "newer": [0, 23, 242, 244, 245, 279], "probabilistic_direction_gett": 0, "probabilisticdirectiongett": [0, 26, 39], "input": [0, 26, 33, 35, 44, 47, 53, 55, 56, 62, 69, 74, 86, 88, 95, 98, 100, 102, 103, 106, 109, 112, 116, 117, 120, 133, 139, 140, 143, 146, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 239, 240, 241, 242, 245, 248, 249, 251, 256, 258, 259, 267, 268], "pmf_threshold": [0, 162, 179, 182, 237, 238], "probabl": [0, 17, 20, 25, 34, 36, 37, 80, 87, 90, 97, 100, 120, 160, 162, 168, 172, 174, 175, 176, 177, 179, 182, 207, 217, 218, 269, 273], "lower": [0, 23, 26, 35, 39, 41, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 67, 69, 73, 75, 76, 77, 78, 80, 83, 84, 86, 88, 89, 90, 93, 97, 101, 104, 110, 111, 147, 154, 168, 169, 173, 174, 175, 176, 182, 190, 216, 225], "mass": [0, 37, 100, 101, 161, 162, 168, 172, 179, 182, 184], "dki": [0, 45, 56, 71, 76, 89, 99, 123, 125, 158, 164, 177, 182, 183, 209, 210, 211, 240, 241, 242, 244, 245, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265], "wl": [0, 45, 71, 98, 175, 182, 209, 212, 213], "max_kurtosi": [0, 56, 78, 89, 175], "axial_kurtosi": [0, 183], "mean_kurtosi": [0, 183], "radial_kuroti": 0, "prefer": [0, 2, 7, 45, 71, 103, 104, 112, 142, 147, 152, 176, 240, 246, 253, 259, 262], "rather": [0, 2, 16, 18, 20, 23, 77, 98, 101, 106, 148, 169, 175, 176, 240, 244], "widget": [0, 139, 242], "slicer": [0, 26, 30, 39, 40, 70, 136, 139, 142, 181, 242, 243, 244, 245, 248, 255, 262], "power": [0, 2, 45, 71, 86, 88, 157, 164, 170, 175, 179, 240, 242, 273, 274, 275], "rgb": [0, 82, 140, 151, 152, 173, 175, 181, 182, 183, 209, 212, 222, 248, 262], "too": [0, 20, 77, 97, 109, 115, 172, 182, 207, 208, 210, 211, 216, 217, 218, 241, 251, 262, 279], "see": [0, 2, 5, 7, 10, 12, 13, 17, 18, 20, 21, 22, 26, 30, 39, 40, 41, 44, 45, 47, 50, 51, 53, 54, 55, 56, 58, 65, 67, 71, 72, 73, 76, 77, 78, 79, 82, 84, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 103, 104, 109, 110, 115, 116, 117, 118, 135, 136, 139, 140, 142, 143, 146, 148, 149, 150, 151, 152, 156, 157, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 188, 189, 196, 198, 199, 201, 202, 206, 207, 208, 214, 217, 218, 219, 220, 221, 222, 224, 230, 233, 237, 238, 253, 267, 272, 279, 281], "tutori": [0, 15, 33, 39, 45, 52, 71, 73, 74, 76, 77, 79, 80, 83, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 100, 101, 104, 110, 111, 112, 113, 116, 117, 129, 131, 133, 139, 141, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 169, 240, 241, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 262, 263], "viz_slic": [0, 138, 142, 264], "py": [0, 2, 4, 17, 20, 22, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 169, 182, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264], "behavior": [0, 142, 168, 175, 182, 244, 245, 251, 263], "interp_rbf": [0, 242, 248, 253], "addit": [0, 4, 23, 25, 56, 73, 76, 77, 84, 88, 92, 102, 139, 147, 156, 160, 165, 168, 170, 173, 174, 175, 178, 242, 247, 251, 262, 265, 266], "norm": [0, 4, 25, 50, 51, 58, 70, 73, 75, 87, 88, 93, 117, 149, 168, 169, 182, 183, 197, 198, 204, 207, 212, 216, 217, 218, 223, 248], "angl": [0, 26, 34, 35, 45, 47, 69, 71, 73, 81, 87, 89, 95, 99, 117, 124, 126, 127, 148, 149, 151, 158, 162, 169, 175, 177, 179, 181, 182, 207, 213, 214, 217, 218, 219, 220, 237, 238, 248, 259, 260, 264, 272, 273], "euclidean_norm": 0, "discourag": [0, 242], "11": [0, 1, 20, 23, 30, 31, 37, 47, 53, 58, 64, 77, 78, 81, 88, 93, 98, 99, 112, 113, 118, 120, 121, 124, 128, 129, 136, 150, 164, 165, 169, 170, 171, 175, 178, 179, 182, 200, 204, 205, 240, 242, 247, 250, 251, 252, 256, 257, 258, 260, 262, 265, 273], "vector_field": [0, 242], "warp_2d_affin": 0, "transform_2d_affin": 0, "warp_2d_affine_nn": 0, "transform_2d_affine_nn": 0, "warp_3d_affin": 0, "transform_3d_affin": 0, "warp_3d_affine_nn": 0, "transform_3d_affine_nn": 0, "gqi": [0, 45, 71, 85, 147, 170, 182, 183, 214, 247, 265, 269], "calcul": [0, 26, 30, 33, 35, 45, 47, 48, 54, 69, 71, 72, 74, 75, 76, 77, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 98, 99, 128, 130, 132, 134, 135, 151, 152, 160, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 182, 184, 198, 208, 213, 216, 221, 231, 240, 245, 247, 248, 249, 255, 264, 265, 267, 268, 277], "gqi2": [0, 45, 71, 175, 182, 214, 250], "match": [0, 2, 45, 57, 60, 64, 93, 102, 104, 108, 112, 154, 161, 162, 168, 169, 170, 171, 173, 174, 175, 176, 182, 190, 230, 233, 261, 264, 271], "either": [0, 4, 16, 30, 35, 40, 41, 58, 69, 87, 88, 93, 100, 104, 115, 136, 154, 168, 169, 170, 171, 173, 175, 177, 179, 181, 182, 193, 198, 199, 203, 216, 232, 242, 271], "doc": [0, 4, 5, 20, 22, 23, 45, 92, 97, 164, 169, 170, 173, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "therein": 0, "access": [0, 10, 16, 17, 20, 22, 44, 53, 67, 86, 88, 91, 128, 139, 142, 169, 170, 171, 175, 182, 206, 221, 243, 252], "complet": [0, 16, 20, 22, 35, 39, 67, 69, 87, 92, 104, 118, 131, 133, 141, 151, 152, 154, 162, 168, 175, 242, 247, 248, 253, 259], "aniso2iso": [0, 147, 240, 242], "reslic": [0, 45, 60, 64, 79, 85, 108, 182, 183, 231, 240, 242, 249, 259, 264, 265], "peaks_from_model": [0, 26, 35, 37, 40, 47, 48, 69, 73, 74, 75, 85, 88, 93, 94, 131, 133, 136, 141, 181, 183, 242, 247, 248, 249, 251, 253, 259, 263], "like": [0, 5, 6, 7, 8, 16, 18, 20, 22, 23, 37, 44, 62, 67, 75, 76, 86, 93, 94, 97, 100, 101, 103, 104, 110, 112, 118, 121, 128, 139, 142, 143, 146, 147, 148, 152, 161, 162, 169, 170, 171, 173, 174, 175, 176, 177, 179, 181, 182, 184, 191, 227, 240, 251, 258, 260, 271, 274, 275, 277], "odf": [0, 25, 26, 33, 35, 37, 38, 39, 45, 47, 48, 50, 51, 69, 70, 71, 74, 75, 79, 81, 82, 83, 85, 87, 88, 90, 93, 94, 95, 96, 98, 99, 124, 127, 160, 164, 172, 173, 177, 181, 182, 183, 207, 210, 211, 214, 216, 217, 218, 237, 238, 241, 242, 247, 248, 249, 253, 254, 255, 257, 262, 264, 265, 271, 273], "take": [0, 2, 7, 17, 20, 21, 23, 25, 26, 37, 39, 40, 53, 55, 58, 75, 76, 77, 79, 84, 86, 88, 90, 92, 93, 94, 98, 100, 103, 115, 116, 117, 136, 147, 152, 168, 169, 171, 174, 175, 178, 179, 182, 198, 199, 207, 217, 218, 244, 247, 256, 257, 271], "size": [0, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 50, 51, 53, 56, 57, 58, 59, 63, 67, 69, 70, 71, 73, 74, 75, 77, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 103, 106, 108, 109, 110, 112, 113, 115, 116, 117, 118, 124, 127, 129, 130, 131, 132, 133, 134, 136, 139, 140, 141, 142, 147, 151, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 190, 192, 200, 210, 211, 222, 227, 231, 237, 238, 244, 245, 249, 251, 255, 260, 262, 263, 264, 273], "similar": [0, 10, 22, 45, 47, 62, 71, 74, 76, 77, 79, 87, 89, 90, 92, 100, 101, 103, 109, 110, 112, 113, 120, 128, 131, 132, 134, 135, 158, 164, 168, 169, 170, 171, 175, 176, 178, 179, 181, 182, 184, 189, 192, 201, 230, 233, 249, 251, 264, 271], "nib": [0, 4, 44, 63, 83, 84, 168, 173], "anat": 0, "voxel_dim": 0, "header": [0, 44, 67, 108, 128, 166, 170, 173, 182, 222, 242, 251, 254, 256, 258, 263, 267, 268], "pixdim": 0, "someth": [0, 5, 6, 7, 17, 18, 20, 22, 87, 90, 151, 173, 179, 181, 182, 184, 222, 227, 253], "garyfallidi": [1, 4, 21, 24, 25, 26, 29, 35, 45, 58, 69, 77, 78, 84, 85, 86, 89, 102, 103, 104, 112, 113, 115, 116, 117, 118, 121, 128, 129, 130, 139, 151, 152, 153, 154, 161, 162, 168, 170, 171, 174, 175, 176, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 273, 274, 275], "et": [1, 24, 29, 41, 45, 47, 55, 59, 71, 74, 76, 78, 88, 91, 92, 93, 98, 103, 108, 109, 110, 120, 160, 161, 164, 168, 170, 171, 175, 178, 179, 182, 198, 209, 212, 244, 271, 274, 275], "al": [1, 29, 41, 45, 47, 55, 59, 71, 74, 76, 78, 86, 88, 91, 92, 93, 98, 103, 108, 109, 110, 120, 160, 161, 164, 168, 170, 171, 175, 178, 179, 181, 182, 198, 209, 212, 222, 244, 271, 273, 274, 275], "gba": [1, 273], "14": [1, 7, 20, 23, 26, 45, 48, 56, 58, 64, 71, 86, 88, 90, 92, 99, 118, 120, 121, 164, 165, 170, 175, 176, 182, 243, 245, 246, 247, 254, 256, 258, 263, 265, 273], "gbns10": [1, 273], "gbt": [1, 273], "10": [1, 20, 23, 25, 26, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 45, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 128, 129, 130, 131, 133, 135, 139, 142, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 164, 165, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 185, 188, 189, 190, 191, 196, 198, 199, 200, 202, 204, 205, 207, 208, 209, 212, 213, 214, 215, 217, 218, 219, 220, 221, 224, 226, 230, 233, 238, 241, 242, 243, 244, 245, 246, 251, 252, 254, 255, 259, 260, 261, 262, 265, 271, 273, 274, 275], "correia": [1, 77, 78, 84, 89, 102, 115, 116, 117, 118, 126, 128, 160, 170, 175, 176, 177, 179, 273], "cwy": [1, 273], "chamberlain": [1, 273], "chm": [1, 273], "yeh": [1, 45, 71, 85, 129, 130, 152, 153, 175, 176, 178, 182, 188, 189, 214, 230, 269, 271, 273, 274, 275], "ywt10": [1, 45, 71, 273], "gbc": [1, 273], "12": [1, 20, 23, 32, 45, 54, 56, 58, 62, 64, 71, 72, 73, 77, 84, 88, 90, 91, 93, 101, 103, 106, 108, 109, 110, 112, 115, 116, 118, 120, 121, 135, 150, 161, 164, 165, 168, 169, 171, 173, 175, 176, 179, 182, 204, 205, 230, 241, 243, 245, 246, 247, 248, 249, 250, 253, 254, 255, 260, 262, 263, 265, 273], "gcoter": [1, 273], "18": [1, 26, 31, 45, 50, 51, 58, 64, 65, 71, 80, 88, 90, 99, 112, 113, 118, 120, 121, 129, 139, 140, 165, 169, 171, 175, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 247, 250, 252, 254, 255, 262, 273], "gowd15": [1, 273], "rokem": [1, 4, 21, 24, 30, 40, 45, 71, 72, 77, 78, 83, 84, 89, 94, 128, 129, 130, 151, 152, 153, 154, 170, 175, 176, 178, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 273, 274, 275], "ryp": [1, 45, 71, 273], "15": [1, 20, 23, 26, 36, 45, 54, 58, 65, 71, 73, 75, 76, 77, 80, 88, 90, 92, 93, 97, 99, 101, 104, 106, 112, 118, 120, 121, 128, 139, 142, 150, 151, 164, 165, 168, 169, 174, 175, 176, 177, 178, 179, 181, 182, 190, 208, 222, 230, 233, 238, 240, 246, 247, 260, 262, 265, 273], "ocegueda": [1, 24, 102, 103, 112, 153, 161, 168, 170, 182, 233, 240, 241, 242, 249, 250, 260, 273], "odg": [1, 273], "16": [1, 20, 23, 34, 45, 52, 58, 64, 71, 73, 87, 88, 90, 93, 96, 107, 111, 119, 120, 121, 128, 134, 164, 165, 174, 175, 179, 181, 182, 240, 241, 242, 248, 249, 251, 253, 261, 265, 273], "neto": [1, 24, 45, 54, 56, 71, 73, 76, 77, 78, 84, 89, 126, 160, 171, 175, 177, 182, 221, 240, 242, 243, 251, 252, 253, 255, 256, 259, 262, 273], "henriqu": [1, 24, 45, 54, 56, 71, 73, 76, 77, 78, 84, 89, 126, 160, 164, 170, 171, 175, 177, 182, 221, 240, 242, 243, 251, 252, 253, 255, 256, 259, 262, 273], "netohenriquesrg": [1, 45, 71, 273], "17": [1, 20, 23, 45, 50, 51, 58, 71, 79, 86, 88, 90, 96, 104, 107, 120, 121, 169, 174, 175, 182, 210, 211, 247, 251, 263, 273], "netohenriquescm": [1, 273], "21": [1, 23, 45, 58, 64, 71, 76, 86, 88, 91, 92, 99, 121, 165, 170, 175, 182, 241, 242, 247, 261, 273, 274, 275], "main": [1, 4, 16, 17, 18, 21, 22, 47, 48, 55, 56, 57, 73, 76, 85, 87, 89, 90, 168, 175, 182, 259, 279], "citat": [1, 164, 240, 242, 243, 249, 253, 256, 257, 259, 274, 275], "dipi": [1, 3, 7, 9, 11, 13, 16, 17, 18, 20, 21, 24, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 146, 147, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 264, 265, 266, 269, 271, 273, 276, 277, 279, 281], "quickbundl": [1, 45, 102, 112, 114, 115, 116, 119, 128, 164, 168, 179, 183, 240, 241, 243, 244, 247, 248, 264, 265, 273], "q": [1, 33, 45, 46, 49, 58, 59, 65, 71, 76, 79, 80, 87, 88, 96, 97, 99, 147, 151, 156, 164, 168, 169, 170, 175, 177, 178, 182, 207, 210, 211, 214, 217, 218, 251, 254, 257, 259, 264, 268, 270, 271, 273], "sampl": [1, 25, 36, 37, 39, 45, 71, 73, 76, 77, 87, 89, 92, 95, 98, 99, 100, 101, 106, 110, 126, 131, 146, 147, 152, 168, 169, 171, 174, 175, 178, 179, 182, 210, 211, 214, 240, 242, 246, 259, 261, 262, 264, 270, 273], "free": [1, 4, 45, 71, 72, 73, 82, 90, 92, 99, 100, 101, 126, 147, 157, 159, 160, 164, 168, 170, 175, 242, 244, 251, 256, 260, 264, 273, 280], "water": [1, 35, 45, 69, 71, 77, 78, 89, 92, 99, 126, 131, 147, 160, 164, 170, 175, 177, 182, 209, 242, 251, 256, 260, 264, 273], "dti": [1, 41, 45, 56, 65, 67, 71, 72, 75, 76, 77, 87, 88, 90, 91, 92, 98, 99, 126, 128, 147, 151, 152, 158, 164, 168, 169, 170, 178, 182, 183, 212, 240, 241, 242, 243, 247, 248, 249, 251, 253, 255, 256, 259, 260, 262, 263, 264, 265, 273, 277], "diffusion": [1, 77, 78, 89, 160, 175, 182, 209, 273], "kurtosi": [1, 45, 54, 56, 71, 76, 78, 88, 99, 126, 151, 158, 164, 175, 177, 182, 209, 240, 241, 253, 256, 264, 273, 274, 275], "research": [1, 24, 54, 83, 128, 147, 170, 255, 273, 281], "topic": [1, 8, 90], "appropri": [1, 4, 70, 108, 109, 139, 142, 157, 169, 170, 173, 175, 181, 259, 273, 274, 275], "relat": [1, 4, 5, 7, 16, 44, 76, 77, 87, 90, 147, 173, 175, 179, 240, 242, 245, 246, 247, 253, 259, 271, 272], "paper": [1, 4, 45, 56, 58, 62, 65, 71, 77, 78, 88, 89, 90, 98, 151, 152, 153, 154, 164, 165, 171, 175, 182, 190, 201, 244, 249, 251, 255, 273], "list": [1, 2, 7, 17, 21, 22, 39, 40, 90, 100, 102, 113, 115, 116, 117, 131, 135, 140, 141, 143, 146, 155, 160, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 181, 182, 189, 204, 205, 206, 209, 212, 215, 216, 233, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 279, 280], "document": [1, 2, 5, 19, 21, 22, 45, 143, 146, 164, 166, 168, 169, 170, 173, 176, 179, 182, 240, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 280], "string": [1, 100, 143, 146, 151, 164, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 201, 226, 245, 246, 253, 255, 256, 262], "relev": [1, 4, 20, 26, 45, 73, 76, 77, 78, 84, 86, 89, 92, 126, 141, 142, 151, 152, 153, 154, 164, 174, 175, 178, 179, 182, 253], "collect": [1, 7, 26, 93, 166, 168, 170, 173, 175, 178, 179, 245, 259, 271, 274, 275], "bibliographi": [1, 19, 253], "airspe": [2, 23], "veloc": [2, 23], "asv": [2, 23, 254], "measur": [2, 27, 28, 45, 54, 56, 59, 71, 72, 75, 76, 77, 78, 80, 82, 83, 84, 86, 87, 89, 90, 92, 93, 94, 97, 98, 112, 147, 152, 157, 160, 164, 168, 169, 170, 171, 174, 175, 177, 178, 179, 182, 209, 213, 215, 242, 256, 258, 264, 267, 269, 273, 274, 275], "easili": [2, 5, 44, 65, 67, 82, 117, 143, 146, 169, 175, 176], "pip": [2, 4, 20, 22, 163, 241, 242, 249, 262], "virtualenv": [2, 249], "easi": [2, 14, 52, 82, 111, 136, 139, 140, 142, 147, 148, 150, 259, 272, 279], "piec": [2, 4, 168], "don": [2, 7, 9, 10, 17, 20, 22, 24, 47, 65, 77, 88, 90, 100, 117, 136, 139, 142, 152, 168, 169, 179, 182, 230, 231, 242, 244, 247, 249, 250, 251, 260, 263, 273, 279], "t": [2, 4, 7, 9, 10, 17, 18, 20, 22, 24, 25, 26, 33, 35, 39, 41, 47, 52, 53, 54, 55, 56, 57, 58, 62, 65, 67, 69, 73, 75, 77, 78, 79, 80, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 97, 100, 101, 103, 108, 111, 112, 116, 117, 128, 135, 136, 139, 142, 147, 149, 152, 153, 160, 168, 169, 170, 174, 175, 176, 177, 179, 181, 182, 185, 222, 224, 230, 231, 233, 240, 241, 242, 244, 245, 247, 249, 250, 251, 253, 255, 256, 259, 260, 262, 263, 267, 268, 273, 274, 275, 279, 280], "develop": [2, 4, 9, 14, 15, 16, 21, 22, 23, 26, 55, 77, 89, 126, 150, 151, 160, 164, 165, 169, 175, 177, 240, 242, 243, 244, 245, 249, 253, 262, 273, 279], "current": [2, 6, 7, 16, 18, 22, 23, 25, 41, 51, 88, 90, 101, 109, 135, 139, 156, 157, 159, 160, 161, 163, 165, 168, 170, 173, 175, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 245, 246, 262, 274, 275, 279], "virtual": [2, 20], "build": [2, 19, 35, 58, 69, 88, 100, 109, 110, 143, 146, 151, 162, 164, 168, 175, 181, 182, 183, 184, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 253, 254, 255, 256, 257, 262, 281], "automat": [2, 4, 16, 20, 45, 48, 52, 56, 94, 98, 111, 114, 118, 119, 156, 164, 170, 171, 174, 175, 176, 182, 198, 208, 219, 220, 240, 242, 243, 244, 245, 246, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 273], "navig": 2, "root": [2, 20, 22, 30, 90, 176, 182, 226, 268], "directori": [2, 4, 6, 7, 9, 18, 20, 22, 67, 143, 146, 152, 155, 156, 157, 159, 160, 161, 162, 163, 170, 171, 172, 178, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 245, 247, 248, 257, 279], "execut": [2, 4, 20, 23, 28, 31, 33, 40, 43, 47, 48, 49, 61, 64, 68, 99, 107, 109, 110, 119, 122, 125, 133, 134, 138, 145, 147, 156, 157, 159, 160, 168, 169, 171, 175, 176, 182, 249, 253, 264, 273], "spin": [2, 45, 71, 86, 87, 147, 160, 170, 174, 175, 177, 182, 212, 215, 216, 267, 269, 273], "bench": 2, "defin": [2, 4, 26, 34, 36, 40, 41, 54, 56, 65, 73, 76, 77, 78, 82, 84, 86, 89, 90, 91, 92, 96, 98, 101, 102, 103, 106, 109, 110, 115, 116, 117, 120, 126, 131, 136, 149, 168, 169, 173, 174, 175, 176, 177, 179, 181, 182, 191, 220, 222, 227, 228, 231, 236, 242, 244, 250, 253, 254, 255, 259, 261, 262, 271], "Be": [2, 44, 113, 154, 179], "patient": [2, 92, 98, 152, 170, 178, 182], "could": [2, 23, 65, 75, 77, 89, 90, 92, 106, 108, 115, 117, 120, 133, 135, 168, 169, 175, 176, 177, 182, 190, 221, 227, 241, 251, 255], "while": [2, 7, 8, 23, 25, 44, 53, 54, 56, 72, 77, 82, 84, 86, 89, 92, 93, 95, 126, 154, 160, 168, 169, 174, 175, 176, 178, 179, 181, 182, 191, 241, 242, 244, 253, 258, 263, 271], "each": [2, 3, 7, 21, 23, 25, 26, 30, 32, 34, 35, 37, 40, 41, 45, 55, 58, 61, 62, 65, 67, 69, 71, 72, 73, 76, 79, 82, 86, 87, 88, 89, 90, 93, 94, 95, 98, 100, 102, 103, 109, 110, 113, 115, 116, 117, 120, 126, 127, 128, 131, 133, 135, 136, 139, 143, 146, 147, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 198, 199, 200, 201, 203, 209, 212, 222, 227, 233, 242, 248, 251, 259, 262, 271], "time": [2, 4, 7, 9, 20, 22, 23, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 146, 147, 152, 160, 168, 169, 170, 171, 173, 175, 176, 177, 179, 182, 185, 201, 215, 219, 243, 245, 247, 248, 249, 255, 263, 267, 269, 273, 274, 275, 279], "without": [2, 7, 20, 22, 30, 37, 48, 53, 54, 55, 58, 67, 77, 80, 84, 90, 91, 92, 93, 98, 101, 135, 169, 170, 174, 175, 176, 179, 182, 245, 247, 251, 252, 265, 273], "replic": [2, 45, 169], "unleash": 2, "cd": [2, 9, 17, 18, 20, 22, 151], "export": [2, 20, 181, 253], "regexp": 2, "ufunc": [2, 6, 240, 259], "dry": 2, "show": [2, 7, 16, 18, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 67, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 103, 104, 106, 108, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 129, 130, 131, 133, 135, 136, 139, 141, 142, 148, 151, 163, 171, 179, 181, 182, 201, 210, 211, 222, 237, 238, 242, 245, 247, 251, 252, 253, 259, 262, 267, 277], "stderr": 2, "quick": [2, 17, 52, 82, 86, 111, 253, 277], "b": [2, 3, 4, 7, 8, 22, 25, 26, 45, 54, 55, 56, 58, 59, 61, 62, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 108, 109, 110, 115, 116, 117, 118, 120, 126, 127, 128, 135, 136, 141, 147, 151, 156, 159, 160, 161, 164, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 247, 249, 250, 251, 254, 255, 259, 260, 262, 270, 273, 274, 275, 277], "regular": [2, 4, 39, 87, 90, 93, 94, 96, 104, 109, 154, 160, 164, 168, 169, 170, 171, 175, 177, 181, 182, 190, 201, 207, 213, 216, 217, 218, 219, 220, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 271, 273, 274, 275], "express": [2, 76, 77, 84, 86, 94, 95, 148, 149, 169, 170, 175, 176, 179, 182, 245, 253, 271], "avoid": [2, 3, 4, 7, 25, 37, 54, 58, 73, 76, 77, 82, 84, 89, 100, 116, 169, 174, 175, 179, 182, 207, 217, 218, 242, 244, 246, 247, 249, 251, 252, 253, 254, 259, 260, 273], "repetit": [2, 171], "particular": [2, 3, 7, 23, 44, 45, 58, 72, 77, 82, 90, 94, 168, 169, 173, 175, 176, 179, 182, 274], "bench_seg": 2, "simpli": [2, 44, 82, 88, 90, 100, 115, 168, 179], "append": [2, 26, 90, 95, 129, 131, 135, 143, 146, 176, 182], "filenam": [2, 4, 44, 67, 73, 77, 79, 80, 85, 86, 87, 97, 151, 170, 173, 181, 182, 190, 192, 222, 233, 245], "extens": [2, 3, 4, 25, 33, 34, 36, 37, 39, 41, 53, 90, 149, 163, 173, 175, 177, 182, 192, 223, 242, 244, 248, 249, 252, 253], "benchquickbundl": 2, "ninja": 2, "skill": [2, 262], "commit": [2, 4, 6, 8, 14, 17, 19, 21, 22, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "branch": [2, 6, 8, 11, 14, 16, 17, 18, 22, 176, 241, 242, 252], "c": [2, 6, 7, 8, 17, 20, 23, 54, 56, 67, 73, 77, 78, 79, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 97, 101, 104, 108, 109, 110, 112, 120, 128, 139, 147, 151, 152, 153, 161, 168, 169, 170, 175, 176, 178, 179, 181, 182, 213, 222, 224, 230, 233, 243, 246, 248, 249, 250, 251, 253, 273, 274, 275, 279], "v1": [2, 22, 26, 100, 108, 109, 110, 117, 161, 169, 273, 274, 275], "7": [2, 7, 22, 23, 25, 26, 30, 33, 34, 36, 37, 38, 39, 40, 41, 45, 48, 50, 51, 56, 58, 62, 71, 72, 73, 75, 77, 78, 80, 83, 84, 86, 88, 89, 90, 93, 94, 106, 108, 112, 113, 118, 120, 121, 128, 134, 140, 147, 160, 164, 165, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 182, 191, 208, 219, 227, 241, 245, 249, 250, 251, 254, 255, 262, 265, 273, 279], "0": [2, 4, 7, 20, 22, 23, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 154, 159, 160, 161, 162, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 190, 191, 196, 197, 198, 200, 201, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 230, 231, 233, 234, 235, 237, 238, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 271, 273, 274, 275, 276], "20d03bcfd": 2, "master": [2, 6, 8, 11, 16, 17, 18, 22, 77, 240, 242, 245, 247, 249, 252, 273], "These": [2, 4, 9, 13, 22, 26, 39, 41, 44, 54, 55, 65, 72, 73, 77, 78, 82, 84, 86, 87, 90, 93, 100, 120, 126, 128, 131, 136, 160, 168, 169, 170, 175, 240, 242, 243, 244, 245, 246, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 271, 272], "displai": [2, 4, 25, 26, 30, 35, 39, 40, 69, 73, 74, 81, 83, 87, 89, 96, 113, 124, 136, 139, 140, 141, 142, 181, 182, 222, 242, 246, 252, 253], "consol": [2, 147, 279], "futur": [2, 22, 110, 173, 251, 255], "comparison": [2, 30, 45, 53, 62, 65, 71, 78, 84, 89, 90, 92, 98, 99, 103, 126, 158, 168, 175, 182, 212, 226, 233, 242, 253, 255, 264, 273, 274, 275], "greater": [2, 4, 58, 73, 86, 112, 147, 160, 168, 169, 172, 179, 181, 182, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 220, 222, 230, 233, 237, 238], "control": [2, 4, 7, 36, 83, 94, 97, 104, 121, 128, 147, 152, 154, 162, 170, 174, 175, 176, 178, 179, 181, 182, 251, 253, 273], "publish": [2, 3, 25, 78, 83, 84, 92, 175, 182, 213, 251, 273], "preview": [2, 247], "machin": [2, 14, 22, 86, 150, 175, 240, 273], "tag": [2, 22, 175, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "tag_commit": 2, "txt": [2, 4, 20, 50, 51, 136, 146, 161, 173, 182, 184, 186, 197, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 229, 233, 241, 249, 255], "re": [2, 7, 10, 16, 17, 18, 44, 84, 110, 136, 139, 168, 174, 175, 176, 244, 268, 271, 273, 279], "gtag": 2, "git": [2, 4, 7, 8, 9, 13, 15, 16, 17, 18, 19, 20, 22, 244], "sort": [2, 3, 161, 170, 175, 179, 181, 182, 222, 249, 253, 263], "taggerd": 2, "grep": 2, "v": [2, 4, 6, 18, 20, 29, 45, 53, 55, 56, 57, 58, 71, 78, 83, 89, 91, 99, 123, 125, 128, 152, 156, 168, 169, 170, 171, 172, 174, 175, 176, 181, 182, 198, 202, 242, 243, 251, 255, 264, 267, 268, 273, 274, 275], "log": [2, 7, 10, 14, 16, 22, 72, 76, 77, 78, 93, 102, 136, 143, 146, 168, 170, 175, 176, 182, 207, 217, 218, 226, 242, 252, 254, 267, 268, 273], "onelin": [2, 7, 16], "n1": [2, 169, 179], "decor": [2, 77, 86, 88, 104, 169, 175, 240, 242, 244, 245, 247, 252, 253, 260], "awk": 2, "print": [2, 20, 44, 47, 48, 50, 51, 53, 55, 56, 57, 59, 62, 63, 65, 67, 72, 73, 74, 75, 79, 80, 82, 83, 85, 86, 87, 88, 91, 93, 94, 95, 96, 97, 98, 104, 115, 116, 118, 120, 127, 130, 135, 139, 140, 168, 169, 173, 179, 182, 196, 243, 244, 245, 252, 258, 260, 279], "1": [2, 4, 7, 22, 23, 25, 26, 30, 32, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 265, 267, 268, 269, 271, 273, 274, 275], "done": [2, 7, 13, 17, 20, 22, 26, 30, 35, 54, 58, 62, 63, 69, 72, 76, 78, 82, 87, 88, 89, 90, 93, 101, 103, 104, 110, 115, 117, 128, 136, 168, 169, 171, 175, 176, 179, 182, 198, 207, 217, 218], "last": [2, 3, 7, 20, 22, 23, 67, 82, 86, 90, 98, 115, 118, 136, 142, 147, 152, 160, 164, 168, 169, 170, 171, 173, 174, 175, 176, 179, 182, 212, 243, 246, 260, 262], "tail": [2, 148], "20_ver": 2, "hashfil": 2, "view": [2, 52, 111, 133, 140, 141, 169, 175, 181, 240, 241, 251, 254, 263], "tbd": 2, "basic": [2, 16, 29, 31, 33, 37, 45, 53, 56, 63, 66, 68, 75, 84, 117, 150, 151, 156, 160, 163, 166, 173, 177, 245, 251, 255, 264], "how": [2, 4, 14, 16, 17, 21, 22, 23, 30, 33, 35, 41, 44, 48, 52, 54, 55, 56, 58, 59, 63, 65, 67, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 143, 148, 150, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 174, 175, 176, 179, 245, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 267, 273, 277, 279, 280], "thing": [2, 11, 14, 17, 20, 22, 35, 69, 90, 98, 100, 101, 136, 162, 169, 171, 175, 179, 240, 249, 250], "consid": [2, 11, 16, 17, 30, 44, 58, 75, 76, 83, 86, 94, 97, 136, 161, 168, 169, 171, 172, 173, 174, 175, 176, 179, 181, 182, 185, 191, 201, 253, 263, 272], "suit": [2, 247, 249, 253], "keep": [2, 5, 7, 17, 23, 33, 35, 41, 44, 69, 85, 88, 93, 118, 136, 168, 175, 182, 230, 233, 240, 245, 259], "runtim": [2, 47, 48, 77, 87, 240, 242, 249], "reason": [2, 7, 44, 79, 84, 87, 98, 100, 106, 109, 116, 136, 170, 175, 182, 216, 247, 271, 279], "time_": 2, "prepar": [2, 35, 38, 50, 51, 69, 70, 82, 86, 100, 168, 169, 174, 175, 253, 263], "mind": [2, 4, 79, 118, 135], "larg": [2, 5, 23, 30, 53, 77, 100, 113, 136, 147, 150, 152, 163, 164, 168, 173, 175, 179, 182, 230, 244, 248, 262, 263, 265, 276, 279], "watch": 2, "reach": [2, 16, 23, 36, 41, 75, 84, 93, 102, 113, 120, 136, 148, 162, 171, 179, 182, 238], "star": 2, "happi": [2, 7, 21, 24, 65, 240, 249, 266], "sphinxcontrib": [3, 23, 253], "bibtex": [3, 23, 253], "sphinx": [3, 4, 20, 23, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 146, 164, 245, 246, 253, 255, 256, 261, 262], "across": [3, 4, 23, 56, 58, 62, 73, 76, 82, 86, 89, 93, 129, 130, 148, 158, 160, 169, 174, 175, 176, 178, 182, 188, 189, 230, 245, 266, 267, 268, 273], "format": [3, 4, 6, 17, 44, 55, 63, 67, 73, 76, 88, 126, 136, 147, 152, 163, 166, 168, 169, 170, 173, 174, 175, 181, 182, 193, 194, 195, 212, 216, 226, 232, 240, 242, 243, 244, 246, 249, 251, 253, 255, 260, 262, 263, 265, 273, 274, 275, 276, 279], "gather": [3, 147, 182, 184], "bib": 3, "convent": [3, 4, 44, 89, 148, 149, 164, 168, 169, 170, 173, 175, 179, 270, 271], "entri": [3, 94, 169, 175, 179, 240, 253, 267], "group": [3, 4, 22, 30, 62, 84, 98, 102, 103, 136, 158, 164, 168, 169, 176, 178, 182, 192, 203, 204, 205, 233, 253, 255, 257, 259, 273], "accord": [3, 55, 78, 86, 89, 115, 116, 117, 126, 160, 164, 168, 169, 170, 171, 175, 177, 178, 179, 182, 231, 240, 241, 255], "natur": [3, 30, 53, 62, 162, 175, 179, 182, 226, 267, 268, 273, 281], "articl": [3, 73, 78, 91, 92, 104, 152, 153, 154, 169, 175, 273, 274, 275], "appear": [3, 16, 77, 87, 139, 170], "first": [3, 4, 7, 16, 18, 20, 22, 23, 26, 30, 32, 35, 40, 44, 47, 52, 53, 54, 55, 57, 58, 59, 62, 65, 67, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 108, 109, 110, 111, 112, 113, 115, 116, 118, 120, 121, 126, 127, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 146, 151, 152, 153, 154, 155, 160, 161, 162, 168, 169, 171, 174, 175, 176, 177, 179, 181, 182, 192, 203, 243, 253, 262, 266, 279], "dataset": [3, 25, 26, 30, 44, 45, 48, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 65, 67, 70, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 97, 98, 100, 101, 104, 108, 110, 111, 118, 120, 121, 126, 131, 135, 136, 139, 140, 141, 142, 147, 151, 154, 156, 157, 158, 159, 160, 162, 163, 164, 167, 168, 169, 170, 171, 173, 174, 175, 176, 179, 182, 206, 231, 244, 245, 247, 248, 249, 251, 252, 255, 256, 259, 260, 262, 263, 264, 265, 273, 276, 277, 279, 280], "electron": 3, "etc": [3, 4, 5, 58, 98, 139, 147, 156, 167, 168, 169, 175, 182, 231, 247, 250], "alphabet": [3, 240], "within": [3, 5, 34, 37, 45, 58, 71, 73, 74, 75, 77, 82, 88, 113, 117, 131, 151, 160, 162, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 182, 204, 253, 273], "kei": [3, 4, 10, 44, 112, 139, 143, 146, 150, 154, 168, 169, 170, 173, 175, 178, 179, 181, 182, 192, 237, 238, 245, 246, 247, 249, 253, 259, 262, 274], "built": [3, 22, 23, 58, 76, 93, 100, 173], "author": [3, 22, 170, 174, 176, 182, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "garyfallidis2012": 3, "letter": [3, 4, 109, 179, 273], "distinguish": [3, 78, 169, 179, 181, 182, 222, 223, 273], "garyfallidis2012a": 3, "garyfallidis2012b": 3, "least": [3, 23, 45, 58, 71, 77, 86, 88, 89, 92, 93, 98, 100, 109, 164, 168, 169, 174, 175, 176, 179, 182, 209, 212, 213, 220, 253, 255, 267, 268, 273, 279], "recent": [3, 12, 20, 23, 65, 90, 170, 179, 242, 248, 260, 265], "includ": [3, 4, 7, 16, 20, 25, 26, 30, 41, 67, 72, 77, 87, 90, 93, 98, 108, 117, 121, 128, 136, 147, 150, 161, 164, 165, 168, 169, 170, 171, 174, 175, 176, 178, 179, 181, 182, 184, 206, 240, 242, 249, 253, 255, 261, 263, 271, 276, 279], "put": [3, 4, 94, 143, 146, 168, 175, 176, 182, 191, 249], "closest": [3, 29, 31, 45, 65, 158, 169, 175, 176, 179, 249, 253, 264], "end": [3, 7, 16, 20, 23, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 146, 148, 152, 160, 169, 174, 175, 179, 255, 267, 268, 271], "month": 3, "venu": 3, "rule": [3, 4, 14, 112, 164, 168, 240], "describ": [3, 4, 13, 33, 35, 40, 41, 53, 69, 72, 77, 78, 82, 86, 87, 90, 92, 94, 98, 108, 128, 133, 160, 162, 168, 170, 175, 177, 179, 273, 274], "strictli": [3, 39, 130, 175, 176], "unnecessari": [3, 54, 76, 77, 84, 89, 169, 174, 242, 245, 253, 259, 260], "abstract": [3, 168, 169, 175, 176, 181, 182], "non": [3, 6, 25, 26, 30, 39, 45, 50, 51, 53, 55, 56, 58, 60, 62, 64, 67, 70, 71, 73, 75, 76, 77, 78, 84, 86, 87, 88, 89, 90, 93, 100, 101, 104, 108, 126, 140, 142, 147, 156, 160, 164, 168, 169, 170, 171, 172, 174, 175, 176, 179, 181, 182, 200, 201, 208, 209, 212, 216, 242, 244, 246, 247, 248, 249, 250, 255, 259, 260, 261, 262, 264, 267, 268, 271, 273, 274, 275], "field": [3, 22, 25, 35, 44, 69, 80, 86, 88, 97, 98, 104, 108, 120, 147, 160, 161, 162, 166, 168, 170, 174, 175, 176, 177, 179, 181, 182, 185, 186, 191, 196, 215, 241, 242, 247, 253, 267, 268, 273], "issn": [3, 274, 275], "full": [3, 21, 22, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 146, 161, 168, 169, 170, 173, 175, 182, 184, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 271], "link": [3, 7, 14, 16, 22, 152, 163, 169, 175, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 255, 256, 259, 260, 262, 263], "lowercas": [3, 4, 252, 255], "conjunct": [3, 36, 169, 182, 203], "blank": [3, 246, 249], "between": [3, 4, 20, 25, 30, 44, 45, 54, 55, 56, 57, 60, 64, 70, 75, 76, 77, 78, 80, 82, 84, 86, 87, 88, 90, 92, 93, 94, 101, 102, 103, 104, 109, 110, 113, 116, 117, 120, 128, 130, 136, 141, 147, 150, 152, 154, 158, 161, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 181, 182, 186, 190, 191, 192, 193, 194, 195, 198, 201, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 220, 222, 232, 237, 238, 245, 249, 256, 260, 262, 263, 264, 265, 267, 268, 271, 272, 273], "two": [3, 15, 19, 20, 22, 26, 30, 33, 45, 53, 54, 56, 59, 62, 65, 67, 70, 71, 72, 73, 75, 76, 78, 80, 82, 84, 86, 88, 89, 90, 92, 94, 96, 97, 100, 101, 103, 104, 108, 109, 110, 115, 116, 117, 120, 126, 127, 130, 135, 136, 142, 147, 148, 152, 153, 154, 160, 161, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 190, 207, 208, 210, 211, 215, 216, 217, 218, 226, 248, 267, 268, 271, 273], "consecut": [3, 168, 251, 262], "brace": 3, "hold": [3, 4, 30, 37, 58, 67, 103, 139, 142, 168, 169, 173, 175, 253], "whitespac": [3, 4, 5, 245, 253], "around": [3, 55, 65, 75, 86, 148, 156, 169, 171, 175, 181, 182, 198, 199, 201, 240, 249, 271], "equal": [3, 6, 25, 26, 30, 37, 75, 80, 82, 87, 90, 97, 103, 106, 135, 160, 168, 169, 172, 175, 177, 179, 181, 182, 193, 207, 217, 218, 232, 238, 244, 247, 249, 255, 267, 268], "readabl": [3, 4, 7], "contain": [3, 4, 6, 20, 23, 25, 26, 30, 44, 45, 52, 56, 58, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 103, 111, 116, 118, 128, 139, 142, 143, 146, 150, 151, 157, 159, 160, 161, 164, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 191, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 226, 227, 228, 229, 231, 232, 234, 236, 237, 238, 240, 242, 243, 244, 245, 246, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 272, 279], "ascii": [3, 242, 244, 248, 249], "charact": [3, 242, 244, 248, 249], "whenev": [3, 36, 41, 175], "edit": [3, 4, 6, 11, 14, 17, 22, 45, 72, 263, 273], "chang": [3, 4, 5, 6, 9, 11, 17, 18, 20, 25, 45, 58, 71, 75, 76, 80, 84, 86, 87, 88, 95, 98, 102, 112, 130, 135, 139, 142, 147, 150, 154, 164, 168, 169, 170, 171, 172, 173, 175, 176, 179, 181, 182, 191, 198, 209, 212, 240, 241, 242, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 262, 263, 271, 273], "abov": [3, 4, 6, 7, 16, 20, 22, 23, 35, 41, 45, 47, 48, 53, 54, 56, 58, 59, 69, 71, 73, 75, 76, 77, 82, 84, 85, 86, 88, 89, 92, 101, 120, 126, 135, 136, 142, 148, 152, 164, 168, 169, 170, 173, 174, 175, 176, 182, 267, 271, 279], "must": [3, 4, 36, 37, 39, 44, 62, 70, 73, 75, 76, 80, 87, 88, 97, 100, 115, 116, 152, 162, 168, 169, 171, 173, 174, 175, 176, 178, 179, 182, 185, 192, 216, 226, 237, 238, 273], "principl": [4, 63, 175, 177], "behind": [4, 14, 56, 150, 156, 253, 272, 279], "robust": [4, 29, 31, 35, 45, 56, 61, 69, 71, 73, 75, 77, 87, 88, 89, 90, 99, 102, 103, 112, 126, 153, 159, 160, 161, 162, 164, 168, 170, 175, 176, 177, 182, 208, 209, 212, 233, 251, 253, 259, 264, 271, 273], "verifi": [4, 44, 58, 67, 75, 77, 109, 110, 169, 173, 182, 192, 240, 249], "systemat": [4, 169], "henc": [4, 20, 23, 65, 86, 161, 175, 176, 179, 268], "stabil": [4, 175, 254, 262], "ensur": [4, 7, 23, 25, 26, 76, 77, 87, 89, 136, 168, 169, 173, 175, 182, 253, 255], "reduc": [4, 7, 20, 23, 25, 36, 41, 44, 61, 87, 90, 102, 112, 135, 136, 148, 162, 164, 168, 169, 170, 176, 178, 179, 182, 227, 230, 237, 238, 242, 248, 249, 255, 273], "redund": [4, 30, 55, 56, 156, 175, 273], "written": [4, 7, 44, 92, 94, 169, 175, 176, 177, 181, 251, 281], "read": [4, 7, 14, 16, 17, 18, 25, 26, 30, 40, 42, 43, 45, 47, 48, 52, 67, 74, 79, 80, 82, 83, 85, 87, 90, 91, 92, 96, 97, 108, 110, 111, 112, 113, 115, 127, 128, 129, 142, 147, 151, 164, 166, 168, 169, 170, 173, 174, 182, 183, 240, 244, 249, 250, 254, 255, 256, 259, 263, 264, 265, 277, 279, 280], "human": [4, 24, 26, 30, 73, 76, 77, 78, 82, 89, 91, 92, 152, 153, 164, 168, 170, 174, 175, 179, 273, 274, 275], "frequent": [4, 44, 280], "consist": [4, 24, 44, 62, 73, 77, 78, 89, 90, 93, 136, 164, 168, 170, 171, 173, 174, 175, 181, 242, 245, 247, 251, 253, 259, 262, 273], "eas": [4, 90], "prone": [4, 98], "essenti": [4, 23, 61, 87, 101, 268], "adopt": [4, 23, 65, 164, 175, 253], "toolkit": 4, "choic": [4, 6, 26, 33, 87, 93, 100, 101, 109, 121, 156, 176, 182, 191, 240, 268, 271], "diffus": [4, 21, 25, 26, 30, 33, 36, 37, 39, 40, 41, 45, 54, 55, 56, 58, 59, 60, 62, 64, 67, 70, 71, 72, 73, 74, 75, 80, 81, 83, 84, 85, 86, 88, 91, 92, 93, 94, 97, 98, 99, 100, 108, 113, 114, 119, 124, 126, 128, 131, 136, 139, 147, 151, 152, 153, 154, 157, 158, 162, 164, 165, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 247, 253, 257, 259, 262, 264, 267, 268, 269, 271, 273, 274, 275, 279, 280, 281], "scientif": [4, 23, 56, 77, 78, 83, 86, 88, 89, 96, 128, 129, 130, 139, 151, 152, 170, 175, 176, 178, 182, 188, 189, 230, 253, 263, 273, 276, 279], "commun": [4, 14, 83, 90, 128, 150, 164, 170, 174, 175, 182, 202, 250, 258, 266, 273], "help": [4, 5, 7, 10, 12, 14, 21, 24, 90, 101, 112, 143, 146, 150, 159, 163, 166, 168, 169, 175, 176, 179, 241, 245, 249, 253, 265, 266, 269, 280], "clarifi": [4, 90, 164, 248, 249, 251, 253, 256, 259], "certain": [4, 58, 65, 77, 98, 175], "obscur": 4, "place": [4, 30, 98, 101, 153, 163, 165, 168, 169, 179, 181, 182, 198, 199, 240, 251, 255], "member": [4, 260], "decod": 4, "effort": 4, "languag": [4, 147, 244, 249, 252, 276], "english": 4, "spell": [4, 254, 255], "abid": 4, "pep8": [4, 5, 21, 240, 241, 242, 243, 250, 253, 256, 262], "autom": [4, 22, 94, 108, 109, 110, 128, 161, 178, 242, 273], "framework": [4, 25, 58, 62, 83, 86, 87, 90, 91, 92, 96, 102, 115, 116, 120, 129, 130, 158, 164, 171, 175, 176, 177, 178, 181, 182, 188, 189, 213, 222, 230, 243, 244, 245, 246, 249, 251, 254, 255, 271, 273], "pre": [4, 7, 22, 53, 58, 76, 77, 78, 84, 89, 103, 104, 110, 130, 168, 174, 175, 182, 185, 242, 244, 245, 246, 253, 255, 256, 262], "ruff": [4, 164, 253], "conform": [4, 5, 175, 256], "specifi": [4, 20, 35, 44, 54, 69, 73, 86, 88, 92, 93, 100, 101, 136, 143, 147, 152, 155, 156, 157, 159, 160, 161, 162, 168, 169, 174, 175, 176, 177, 179, 181, 182, 187, 188, 189, 191, 200, 201, 204, 209, 212, 215, 216, 227, 228, 236, 242, 251, 253, 267, 272], "toml": [4, 20, 22, 143, 146, 182, 253, 263], "configur": [4, 7, 11, 15, 20, 77, 100, 106, 109, 164, 174, 175, 252, 258], "request": [4, 6, 7, 16, 100, 150, 164, 168, 169, 170, 181, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268], "push": [4, 7, 14, 17, 18, 22, 262], "complianc": 4, "github": [4, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 30, 147, 163, 164, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "action": [4, 10, 22, 23, 44, 164, 181, 182, 253, 259, 260, 262, 263], "hook": [4, 174], "script": [4, 22, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 146, 151, 182, 184, 208, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 272, 279], "most": [4, 7, 12, 20, 23, 26, 30, 34, 47, 52, 62, 63, 65, 73, 74, 90, 93, 100, 101, 103, 104, 109, 110, 111, 120, 162, 170, 173, 175, 176, 179, 265, 279], "text": [4, 6, 7, 16, 22, 30, 45, 67, 86, 90, 91, 92, 103, 139, 142, 143, 146, 147, 161, 175, 181, 182, 185, 186, 240, 245, 262, 277], "editor": [4, 7, 25, 26, 58, 83, 147, 171, 175, 182, 200, 201, 213, 273], "beyond": [4, 73, 87, 90, 175, 273], "aspect": [4, 77], "contributor": [4, 21, 22, 24, 139, 151, 152, 153, 154, 169, 176, 240, 242, 273], "comment": [4, 23, 240, 244, 247, 251, 255, 262], "shorthand": [4, 246], "increas": [4, 82, 86, 87, 90, 112, 164, 174, 175, 245, 249, 251, 256, 262], "numpi": [4, 20, 21, 25, 26, 30, 32, 36, 39, 40, 41, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 65, 70, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 95, 97, 98, 100, 101, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 124, 126, 127, 128, 129, 130, 133, 135, 136, 139, 140, 147, 164, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 276, 279], "npt": [4, 256], "sp": [4, 179, 255], "alia": [4, 6, 7, 259], "h5py": [4, 20, 147, 164, 173, 243, 245, 276], "write": [4, 6, 7, 10, 16, 17, 18, 19, 23, 42, 43, 45, 67, 74, 79, 80, 85, 87, 96, 97, 139, 146, 156, 157, 159, 163, 168, 173, 175, 181, 182, 249, 255, 264, 279], "specif": [4, 10, 20, 23, 59, 65, 67, 73, 76, 77, 79, 83, 85, 87, 88, 89, 90, 93, 102, 115, 126, 127, 135, 139, 143, 147, 151, 155, 156, 158, 169, 170, 173, 174, 175, 176, 179, 181, 243, 245, 246, 247, 254, 259, 265, 273, 276], "syntax": [4, 175, 246, 256], "cimport": 4, "prefix": [4, 5], "usual": [4, 7, 20, 59, 63, 67, 101, 142, 143, 146, 175, 176, 179], "cnp": [4, 253, 258], "compar": [4, 16, 19, 30, 48, 50, 51, 53, 56, 72, 77, 80, 86, 87, 92, 93, 98, 126, 130, 131, 147, 152, 168, 173, 176, 181, 241, 259], "separ": [4, 7, 39, 58, 75, 76, 86, 88, 90, 120, 160, 168, 169, 170, 175, 177, 181, 182, 204, 205, 215, 234, 247, 259, 273, 279], "cdef": [4, 263], "cpdef": [4, 263], "ctypedef": 4, "statement": [4, 242, 249, 252, 253, 255, 259], "space": [4, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 50, 51, 54, 58, 69, 71, 75, 76, 77, 79, 80, 82, 87, 89, 96, 97, 99, 100, 102, 103, 104, 108, 109, 112, 128, 136, 139, 140, 147, 152, 153, 156, 157, 160, 161, 164, 168, 169, 170, 172, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 210, 211, 224, 230, 233, 242, 243, 244, 254, 257, 259, 262, 264, 265, 267, 268, 269, 273, 274, 275], "turn": [4, 7, 39, 80, 147, 148, 156, 173, 175, 179, 253], "per": [4, 35, 40, 45, 69, 71, 83, 88, 95, 102, 103, 104, 112, 136, 140, 152, 153, 154, 162, 168, 170, 171, 174, 175, 178, 179, 181, 182, 185, 201, 212, 213, 237, 238, 245, 248, 249, 267, 269, 273], "long": [4, 36, 44, 85, 151, 168, 174, 177, 182, 242, 252, 253], "simpl": [4, 17, 21, 35, 45, 62, 69, 75, 78, 79, 82, 84, 86, 93, 96, 102, 103, 115, 116, 117, 135, 137, 138, 141, 162, 164, 169, 174, 175, 176, 181, 182, 249, 256, 264, 265, 273, 279], "assign": [4, 30, 45, 132, 134, 168, 169, 176, 178, 183, 240, 249, 253, 264], "exampl": [4, 6, 7, 16, 17, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 151, 152, 153, 155, 160, 161, 163, 164, 165, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 181, 182, 185, 198, 199, 204, 205, 206, 208, 210, 211, 221, 222, 227, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 264, 265, 274, 275, 277, 280], "good": [4, 6, 7, 12, 14, 16, 22, 26, 35, 65, 69, 72, 75, 87, 88, 94, 98, 100, 108, 109, 120, 121, 135, 156, 168, 169, 175, 176, 179, 182, 191, 242, 249, 252, 258, 272, 273, 281], "char": 4, "doubl": [4, 75, 76, 147, 171, 176, 177, 240, 246, 253, 256, 263], "xf": 4, "3": [4, 6, 23, 25, 26, 30, 36, 41, 44, 45, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 67, 70, 71, 74, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 106, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 125, 127, 128, 129, 130, 133, 135, 136, 139, 142, 143, 147, 148, 149, 150, 151, 152, 153, 156, 160, 161, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 186, 189, 190, 198, 200, 201, 208, 209, 212, 213, 219, 221, 222, 227, 233, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 271, 273, 274, 275, 279], "d": [4, 6, 7, 8, 22, 25, 30, 40, 53, 55, 56, 57, 58, 70, 72, 76, 77, 78, 82, 83, 84, 86, 89, 90, 91, 92, 93, 94, 101, 102, 103, 113, 117, 128, 148, 152, 156, 160, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 181, 182, 183, 198, 215, 220, 248, 254, 256, 262, 263, 267, 269, 271, 273, 274, 275], "j": [4, 25, 26, 32, 33, 36, 39, 41, 54, 55, 58, 62, 65, 67, 70, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 102, 103, 108, 109, 110, 112, 120, 121, 124, 126, 128, 142, 147, 152, 153, 157, 160, 161, 162, 166, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 182, 191, 208, 212, 224, 230, 233, 238, 247, 260, 267, 269, 271, 273, 274, 275], "k": [4, 25, 26, 30, 45, 54, 59, 65, 67, 71, 73, 77, 83, 87, 91, 92, 98, 99, 100, 101, 103, 110, 115, 117, 128, 142, 147, 157, 166, 168, 169, 170, 175, 176, 177, 179, 181, 182, 209, 212, 264, 267, 269, 271, 273, 274, 275], "clustermapcentroid": [4, 183], "cluster": [4, 45, 102, 103, 112, 114, 119, 128, 130, 132, 134, 151, 153, 163, 164, 168, 169, 170, 175, 179, 182, 183, 189, 222, 224, 230, 233, 240, 242, 253, 255, 261, 264, 265, 273, 274, 275], "p": [4, 7, 16, 25, 26, 33, 83, 89, 98, 128, 152, 154, 168, 169, 170, 171, 172, 175, 176, 179, 182, 198, 220, 269, 271, 272, 273], "pyarray_data": [4, 258], "seed": [4, 26, 29, 31, 33, 34, 36, 37, 38, 39, 40, 41, 45, 50, 51, 72, 131, 133, 136, 141, 151, 162, 164, 169, 170, 175, 177, 179, 182, 220, 237, 238, 240, 241, 242, 245, 248, 249, 251, 252, 253, 254, 255, 258, 262, 264], "npy_intp": [4, 242, 253, 258, 262], "pstr": 4, "qa": [4, 173, 175, 178, 182, 207, 208, 210, 211, 212, 213, 214, 217, 218, 219, 220, 229], "stride": [4, 174, 175], "cnt": [4, 142], "tmp": [4, 7, 181, 182, 222, 248, 249, 262], "ftmp": [4, 249], "get_direction_c": 4, "self": [4, 44, 45, 60, 62, 64, 77, 86, 91, 92, 113, 117, 143, 146, 164, 168, 169, 171, 173, 175, 176, 179, 182, 201, 212, 245, 251, 257, 264, 273], "bad": [4, 147, 242, 244, 245, 248, 252], "u": [4, 7, 14, 16, 17, 21, 24, 25, 30, 35, 53, 57, 67, 69, 73, 74, 83, 86, 104, 128, 130, 147, 149, 150, 165, 168, 169, 171, 175, 245, 266, 272, 273, 281], "x": [4, 22, 23, 25, 26, 30, 39, 40, 44, 65, 83, 86, 91, 92, 94, 96, 103, 110, 117, 126, 128, 136, 139, 142, 147, 148, 149, 150, 161, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 186, 200, 226, 240, 243, 247, 251, 253, 255, 258, 265, 267, 272, 273, 279], "42": [4, 7, 25, 26, 50, 51, 54, 58, 59, 65, 68, 69, 82, 86, 91, 92, 99, 120, 121, 140, 160, 168, 175, 177, 182, 215, 220, 249, 264, 273], "y": [4, 22, 25, 26, 30, 65, 81, 86, 87, 92, 94, 96, 110, 120, 124, 139, 142, 147, 148, 149, 161, 166, 168, 169, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 186, 196, 258, 267, 272, 273], "z": [4, 25, 26, 30, 39, 40, 65, 74, 76, 86, 91, 92, 96, 110, 126, 136, 139, 142, 147, 148, 149, 161, 166, 168, 169, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 186, 254, 267, 272, 273], "top": [4, 7, 16, 25, 30, 78, 100, 109, 110, 133, 141, 148, 169, 181, 241, 247, 251], "bodi": [4, 45, 58, 161, 182, 184], "void": 4, "estimate_kernel_s": 4, "verbos": [4, 70, 77, 87, 88, 92, 93, 102, 112, 168, 171, 173, 174, 175, 176, 182, 196, 201, 241, 249], "true": [4, 6, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 62, 63, 65, 67, 69, 70, 74, 75, 77, 79, 82, 85, 86, 87, 88, 90, 92, 93, 95, 100, 101, 102, 103, 104, 108, 111, 112, 117, 118, 128, 129, 130, 131, 133, 136, 139, 141, 147, 161, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 181, 182, 184, 185, 190, 192, 199, 200, 201, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 226, 227, 233, 237, 238, 244, 253, 255], "kernelmax": 4, "k2": [4, 175], "r": [4, 7, 20, 24, 25, 50, 51, 65, 72, 73, 83, 84, 90, 93, 98, 100, 101, 103, 106, 128, 135, 141, 148, 149, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 181, 182, 185, 196, 219, 241, 242, 249, 253, 254, 262, 267, 269, 272, 273, 274, 275], "both": [4, 23, 36, 52, 53, 54, 55, 56, 59, 62, 73, 75, 76, 77, 84, 86, 87, 88, 89, 90, 92, 93, 94, 101, 102, 103, 104, 108, 111, 113, 115, 128, 135, 139, 141, 165, 168, 169, 170, 174, 175, 179, 181, 182, 216, 222, 249, 251, 271], "come": [4, 7, 14, 17, 52, 62, 93, 111, 165, 175, 182, 247], "libc": 4, "stdlib": 4, "calloc": 4, "realloc": 4, "except": [4, 6, 101, 152, 168, 169, 170, 175, 176, 182, 244, 248, 250], "side": [4, 168, 182, 240], "definit": [4, 77, 82, 86, 92, 94, 101, 149, 160, 164, 169, 172, 175, 176, 177, 179, 242, 245, 247, 249, 253, 256, 259, 271], "colon": [4, 7], "unless": [4, 65, 115, 168, 169, 176, 179, 182, 191, 260], "bar": [4, 140, 164, 174, 175, 181, 242, 245, 256, 259], "c_extract": 4, "featur": [4, 5, 6, 11, 16, 17, 23, 39, 45, 53, 76, 101, 114, 116, 118, 119, 126, 128, 150, 164, 165, 169, 173, 174, 175, 176, 177, 182, 202, 207, 212, 217, 218, 240, 242, 253, 254, 257, 260, 261, 262, 263, 264, 273, 274, 275], "data2d": 4, "datum": [4, 117], "out": [4, 17, 20, 22, 30, 45, 48, 58, 65, 72, 86, 95, 108, 112, 128, 136, 142, 156, 160, 168, 169, 171, 174, 175, 176, 179, 182, 198, 242, 245, 247, 248, 249, 251, 255, 265, 267, 268], "noexcept": 4, "nogil": [4, 175, 254], "front": [4, 143, 146, 179, 249, 251], "hat": [4, 94, 149, 183], "zero": [4, 25, 26, 30, 44, 45, 50, 51, 56, 71, 73, 77, 78, 84, 88, 89, 90, 91, 93, 101, 106, 113, 126, 133, 135, 141, 164, 168, 169, 171, 173, 175, 177, 179, 182, 207, 217, 218, 242, 243, 244, 245, 251, 253, 259, 261, 267, 268], "awai": [4, 148, 244, 263], "ani": [4, 6, 7, 9, 16, 17, 22, 23, 25, 37, 44, 45, 58, 61, 63, 65, 71, 82, 86, 90, 93, 95, 97, 101, 102, 103, 117, 136, 142, 143, 147, 148, 149, 151, 152, 153, 154, 156, 157, 159, 160, 162, 168, 169, 170, 173, 174, 175, 176, 179, 181, 182, 194, 195, 205, 206, 222, 223, 226, 231, 235, 242, 244, 249, 253, 260, 265, 271, 279], "open": [4, 7, 22, 26, 65, 83, 90, 97, 120, 128, 133, 136, 139, 143, 146, 163, 169, 170, 173, 175, 181, 252, 254, 255, 257, 258, 259, 271, 273, 279, 280], "There": [4, 7, 12, 13, 14, 22, 75, 88, 93, 112, 117, 147, 152, 162, 168, 170, 175, 267, 272], "close": [4, 5, 7, 16, 22, 26, 50, 51, 65, 77, 79, 86, 88, 97, 98, 100, 104, 130, 136, 140, 150, 154, 156, 162, 164, 168, 169, 172, 173, 179, 182, 183, 190, 207, 208, 210, 211, 216, 217, 218, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 276], "float": [4, 41, 52, 80, 106, 111, 113, 147, 151, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 208, 226, 243, 249, 253, 255, 258, 260, 262], "nrow": [4, 89, 90, 181], "construct": [4, 23, 40, 70, 93, 100, 168, 169, 175, 179, 251], "contribut": [4, 19, 21, 24, 26, 30, 78, 84, 86, 89, 90, 101, 126, 127, 128, 150, 166, 168, 174, 175, 177, 179, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 269], "suggest": [4, 10, 45, 71, 87, 92, 171, 174, 247, 249, 262, 266, 279], "properli": [4, 44, 73, 80, 87, 95, 139, 143, 146, 173, 175, 182, 244, 247, 249, 255, 260], "html": [4, 20, 22, 23, 92, 147, 169, 173, 175, 179, 242, 244, 256, 274, 275], "websit": [4, 22, 153, 154, 170, 240, 241, 244, 245, 246, 247, 249, 250, 252, 257, 262, 263, 266], "store": [4, 30, 79, 89, 90, 94, 102, 140, 141, 147, 149, 168, 173, 175, 179, 181, 244, 247], "folder": [4, 45, 67, 100, 101, 151, 152, 153, 155, 163, 170, 182, 186, 188, 189, 206, 241, 246, 251, 262, 274], "interleav": 4, "multi": [4, 45, 54, 55, 56, 58, 59, 71, 77, 78, 81, 83, 86, 87, 89, 93, 97, 99, 100, 106, 109, 110, 121, 124, 151, 156, 164, 168, 170, 174, 175, 177, 182, 185, 202, 213, 240, 241, 242, 245, 247, 248, 249, 250, 252, 255, 256, 258, 260, 262, 264, 273, 274, 275], "explan": [4, 7, 8, 65, 175, 245], "block": [4, 22, 70, 164, 171, 175, 182, 183, 198, 199, 200, 243, 246], "demonstr": [4, 30, 33, 39, 40, 52, 58, 62, 72, 77, 82, 89, 95, 98, 101, 106, 108, 111, 121, 128, 131, 133, 136, 160, 162], "intermix": 4, "former": [4, 20, 174], "rational": 4, "aim": [4, 23, 25, 77, 161, 175, 281], "extend": [4, 14, 36, 76, 88, 139, 143, 146, 151, 162, 169, 175, 176, 181, 243, 249, 251, 259, 262], "exist": [4, 21, 22, 87, 115, 116, 117, 126, 170, 174, 175, 181, 182, 192, 224, 240, 241, 244, 245, 249, 250, 256], "otherwis": [4, 30, 88, 115, 142, 151, 168, 169, 170, 171, 173, 175, 176, 178, 179, 181, 182, 200, 201, 226, 233, 242], "valid_exampl": 4, "addition": [4, 23, 41, 45, 56, 71, 77, 82, 150], "reli": [4, 23, 36, 58, 102, 162, 175, 179, 242, 249], "restructuredtext": [4, 244, 256], "rst": [4, 22, 242, 243, 244, 245, 248, 249, 253, 255, 262, 263], "theoret": [4, 77, 92, 96, 103, 175, 273], "background": [4, 41, 52, 54, 62, 65, 70, 74, 76, 77, 78, 82, 84, 89, 90, 91, 111, 133, 136, 142, 171, 175, 176, 181, 182, 222, 254], "instruct": [4, 7, 9, 10, 12, 16, 18, 20, 22, 92, 109, 110, 240, 243, 245, 246, 249, 251, 256, 262, 263, 279], "descript": [4, 7, 22, 45, 71, 115, 116, 131, 133, 141, 150, 170, 173, 175, 182, 251, 253, 262], "again": [4, 6, 7, 22, 35, 69, 90, 93, 100, 148, 169, 175, 176, 242, 244, 247, 249, 272], "markup": [4, 244, 254], "pars": [4, 182, 253, 258], "produc": [4, 30, 74, 76, 77, 84, 87, 88, 89, 90, 92, 100, 126, 147, 169, 170, 175, 179, 182, 237, 238], "content": [4, 6, 11, 15, 58, 78, 171, 173, 182, 201, 242, 243, 247, 252, 262, 273], "later": [4, 26, 77, 78, 86, 90, 93, 128, 169, 248], "compil": [4, 20, 22, 164, 174, 175, 183, 240, 241, 244, 249, 250, 253, 260], "so": [4, 5, 7, 16, 17, 18, 20, 22, 35, 37, 39, 40, 44, 58, 59, 69, 72, 79, 82, 86, 87, 88, 90, 93, 95, 98, 100, 103, 104, 109, 110, 112, 115, 116, 117, 118, 127, 128, 131, 135, 136, 139, 140, 142, 148, 151, 157, 160, 161, 164, 168, 169, 170, 173, 175, 176, 179, 181, 182, 207, 217, 218, 241, 247, 248, 249, 267, 272, 279], "web": [4, 22, 170, 247, 249, 255], "page": [4, 7, 10, 12, 13, 15, 16, 22, 86, 115, 116, 152, 166, 169, 240, 242, 245, 249, 251, 253, 260, 263, 274, 275], "enrich": 4, "particularli": [4, 40, 56, 84, 89, 98], "encourag": [4, 24, 156], "observ": [4, 25, 37, 53, 54, 62, 70, 81, 84, 89, 92, 93, 104, 120, 124, 148, 162, 169, 175, 263], "acronym": 4, "referenc": [4, 168, 170, 175, 176, 249, 253, 262], "invert": [4, 30, 65, 109, 110, 175, 181, 182, 222, 247], "comma": [4, 182, 204, 205, 234, 259], "gradientt": [4, 59, 67, 74, 76, 77, 79, 80, 82, 85, 86, 87, 89, 96, 97, 126, 127, 168, 170, 174, 175, 177, 178, 179, 183, 241, 242, 247, 249, 253, 255, 258], "acquisit": [4, 30, 45, 58, 59, 61, 62, 65, 67, 71, 77, 81, 87, 89, 90, 91, 92, 98, 124, 156, 159, 164, 169, 170, 171, 174, 175, 182, 267, 268, 273], "vector": [4, 25, 59, 61, 67, 76, 77, 82, 86, 91, 92, 103, 104, 116, 117, 126, 127, 136, 140, 147, 149, 151, 156, 159, 160, 167, 168, 169, 170, 173, 175, 177, 179, 181, 182, 185, 196, 197, 198, 208, 212, 213, 214, 219, 220, 223, 236, 240, 242, 245, 249, 263, 267, 268, 271, 277], "cite": [4, 54, 84, 151, 152, 153, 154, 170, 253], "nameyear": 4, "cross": [4, 26, 27, 28, 30, 45, 71, 73, 76, 77, 82, 86, 87, 89, 90, 93, 98, 99, 108, 109, 110, 126, 160, 161, 164, 168, 169, 175, 179, 182, 185, 240, 242, 245, 249, 251, 252, 259, 262, 264, 271, 273], "garyfallidis2014": 4, "under": [4, 23, 87, 88, 103, 109, 110, 168, 169, 175, 181, 182, 185, 251, 252, 258, 265, 279], "section": [4, 6, 7, 16, 22, 23, 65, 76, 80, 86, 97, 117, 143, 146, 150, 152, 163, 164, 169, 170, 175, 246, 248, 250, 255, 256, 262, 273], "_specific_filenam": 4, "label": [4, 5, 6, 17, 22, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 69, 70, 72, 86, 89, 90, 98, 108, 109, 110, 118, 126, 127, 131, 133, 135, 136, 139, 141, 161, 170, 174, 179, 181, 182, 224, 230, 240, 243, 245, 251, 253, 255, 262, 273, 274, 275], "thu": [4, 22, 26, 62, 65, 77, 78, 84, 86, 88, 108, 116, 156, 169, 174], "abl": [4, 6, 16, 20, 84, 87, 139, 142, 143, 146, 160, 242, 247], "ref": [4, 7, 30, 77, 101, 113, 168, 175, 176, 244, 253], "specific_filenam": 4, "cap": 4, "scheme": [4, 30, 45, 55, 59, 71, 81, 82, 90, 124, 168, 171, 174, 175, 273], "capit": 4, "constrain": [4, 25, 26, 34, 36, 37, 41, 45, 48, 70, 71, 72, 73, 83, 84, 87, 88, 92, 93, 94, 99, 158, 164, 169, 170, 175, 182, 208, 216, 248, 249, 250, 255, 264, 271, 273], "deconvolut": [4, 25, 26, 29, 31, 34, 36, 37, 41, 45, 48, 56, 70, 71, 72, 73, 83, 88, 94, 99, 123, 125, 158, 164, 165, 175, 182, 208, 213, 219, 247, 248, 251, 255, 264, 271, 273], "csd": [4, 25, 26, 34, 36, 37, 38, 41, 45, 46, 49, 71, 72, 73, 83, 93, 94, 99, 152, 158, 164, 175, 182, 213, 240, 242, 244, 245, 248, 249, 250, 251, 252, 255, 256, 260, 262, 264, 265], "those": [4, 7, 14, 16, 26, 30, 34, 35, 41, 50, 51, 65, 67, 69, 74, 82, 88, 90, 108, 116, 136, 142, 162, 169, 171, 175, 182, 279], "where": [4, 7, 14, 17, 20, 22, 23, 25, 26, 30, 35, 36, 41, 47, 48, 55, 67, 69, 74, 75, 76, 77, 82, 84, 86, 88, 89, 91, 92, 93, 94, 96, 98, 101, 103, 104, 108, 109, 117, 130, 131, 135, 136, 140, 143, 146, 147, 148, 149, 152, 154, 156, 160, 162, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 184, 185, 193, 196, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 224, 226, 230, 232, 234, 237, 238, 252, 267, 268, 271, 279], "common": [4, 6, 14, 23, 39, 44, 61, 63, 74, 77, 87, 89, 93, 98, 102, 108, 112, 143, 146, 152, 159, 166, 167, 169, 170, 173, 175, 178, 182, 247, 273], "superior": [4, 30, 65, 108, 136, 169], "longitudin": [4, 65, 175], "fasciculu": [4, 65, 104, 112, 113, 128, 139, 152, 153, 154, 170], "slf": [4, 65], "customari": 4, "word": [4, 6, 7, 75, 90, 115, 162, 168, 175, 178, 181, 240, 246, 262], "underscor": [4, 253], "figur": [4, 26, 30, 35, 39, 41, 48, 52, 53, 54, 56, 58, 65, 67, 69, 73, 78, 80, 83, 84, 86, 88, 89, 90, 91, 97, 100, 101, 108, 109, 110, 111, 120, 126, 133, 135, 136, 164, 169, 174, 181, 182, 222, 240, 242, 243, 244, 251, 262], "font": [4, 181, 256], "caption": [4, 262], "bold": [4, 6, 139, 181], "face": [4, 73, 169, 170, 173, 175, 177, 181, 183, 247, 249], "part": [4, 20, 25, 26, 35, 45, 50, 51, 58, 67, 69, 72, 73, 75, 82, 83, 87, 89, 92, 93, 94, 100, 117, 143, 147, 149, 150, 152, 165, 168, 169, 171, 173, 174, 175, 176, 179, 182, 209, 212, 226, 242, 249, 253, 266, 271], "rel": [4, 6, 7, 22, 26, 30, 40, 72, 82, 98, 128, 131, 154, 169, 172, 175, 178, 182, 216, 240, 242, 245, 246, 247, 254], "path": [4, 20, 30, 37, 44, 45, 50, 51, 61, 63, 67, 76, 77, 83, 84, 100, 101, 104, 108, 128, 132, 134, 142, 143, 146, 156, 157, 159, 160, 161, 162, 168, 169, 170, 172, 173, 174, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 242, 245, 249, 252, 253, 255, 262, 264], "backquot": 4, "inlin": [4, 240, 244], "devel": [4, 20, 97, 252], "sign": [4, 77, 168, 179, 249, 255, 268, 271], "enclos": 4, "brett": [4, 6, 21, 22, 24, 102, 115, 116, 117, 118, 128, 151, 152, 153, 154, 176, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 247, 248, 249, 250, 273], "m": [4, 7, 17, 22, 25, 26, 30, 39, 45, 71, 75, 77, 78, 79, 83, 86, 87, 89, 90, 91, 93, 94, 96, 102, 103, 115, 116, 117, 118, 128, 131, 135, 136, 152, 153, 160, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 271, 273, 274, 275], "amirbekian": [4, 21, 24, 33, 86, 131, 133, 151, 152, 153, 154, 175, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 247, 248, 249, 250, 273], "van": [4, 21, 24, 40, 77, 79, 85, 91, 92, 94, 151, 152, 153, 154, 175, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 247, 248, 249, 250, 273, 274, 275], "der": [4, 21, 24, 40, 77, 94, 151, 152, 153, 154, 175, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 247, 248, 249, 250, 273, 274, 275], "walt": [4, 21, 24, 40, 94, 151, 152, 153, 154, 175, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 247, 248, 249, 250, 273, 274, 275], "descoteaux": [4, 24, 32, 36, 41, 45, 65, 71, 80, 83, 97, 102, 103, 112, 151, 152, 153, 154, 161, 162, 168, 170, 172, 175, 176, 177, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 245, 247, 248, 249, 250, 271, 273], "nimmo": [4, 21, 24, 102, 115, 116, 117, 118, 128, 151, 152, 153, 154, 175, 176, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 247, 273], "smith": [4, 21, 24, 36, 41, 61, 102, 115, 116, 117, 118, 120, 128, 151, 152, 153, 154, 159, 174, 175, 176, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 247, 271, 273], "2014": [4, 30, 36, 41, 72, 73, 75, 84, 88, 93, 98, 103, 151, 152, 153, 154, 162, 165, 168, 175, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 249, 252, 273, 274, 275], "mri": [4, 21, 25, 26, 30, 33, 35, 36, 39, 40, 41, 45, 52, 54, 56, 58, 62, 65, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 101, 111, 113, 114, 119, 131, 133, 147, 151, 152, 153, 154, 156, 157, 158, 162, 164, 165, 167, 168, 170, 171, 174, 175, 176, 177, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 253, 255, 257, 259, 262, 264, 271, 273, 274, 275, 280], "frontier": [4, 77, 78, 89, 102, 115, 116, 117, 118, 128, 133, 151, 152, 153, 154, 164, 165, 175, 176, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 273], "neuroinformat": [4, 24, 113, 120, 151, 152, 153, 154, 164, 165, 174, 176, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 273], "vol": [4, 53, 57, 151, 169, 171, 176, 177, 274, 275], "8": [4, 22, 23, 25, 26, 30, 35, 45, 50, 51, 55, 56, 58, 61, 62, 65, 69, 70, 71, 73, 75, 77, 78, 87, 88, 90, 93, 94, 95, 96, 101, 102, 112, 118, 120, 121, 131, 133, 136, 141, 142, 150, 160, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 191, 198, 202, 204, 205, 207, 208, 210, 211, 213, 214, 217, 218, 219, 220, 230, 237, 238, 240, 244, 245, 247, 250, 251, 252, 255, 257, 263, 265, 269, 273], "summari": [5, 6, 11, 15, 21, 22, 140, 164, 173, 174, 183, 251], "classifi": [5, 36, 41, 56, 88, 120, 121, 164, 176, 183, 241, 242, 250, 251, 254, 256], "meaning": [5, 78, 87, 175], "categori": 5, "bf": [5, 17, 25, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 261, 262, 263], "rf": [5, 147, 164, 175, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 269], "refactor": [5, 7, 150, 164, 240, 241, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 262], "nf": [5, 6, 7, 150, 164, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "bw": [5, 242, 263], "address": [5, 6, 77, 243, 246, 253], "opt": [5, 20, 30, 182, 245, 248, 249, 252, 259, 262, 263], "optim": [5, 30, 45, 56, 57, 58, 59, 61, 71, 78, 84, 86, 87, 88, 89, 90, 94, 100, 101, 103, 106, 108, 109, 110, 120, 151, 156, 161, 164, 166, 168, 171, 172, 173, 174, 175, 176, 182, 183, 185, 201, 240, 245, 249, 251, 252, 258, 259, 262, 273, 274, 275], "bk": 5, "fail": [5, 22, 77, 95, 101, 173, 175, 240, 241, 242, 244, 245, 249, 250, 251, 253, 254, 255, 256, 259, 260, 262, 263, 281], "pl": [5, 24], "pylint": 5, "happier": 5, "kind": [5, 58, 72, 90, 98, 136, 168, 175, 179, 249], "style": [5, 19, 21, 45, 71, 164, 181, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 256, 257, 259, 260, 262], "affect": [5, 7, 54, 56, 88, 90, 157, 174], "might": [5, 6, 11, 20, 22, 23, 77, 87, 88, 98, 113, 136, 152, 168, 169, 171, 174, 175, 182, 198, 199, 245, 255], "look": [5, 7, 8, 12, 16, 20, 21, 22, 44, 59, 67, 75, 92, 93, 94, 98, 100, 104, 106, 112, 120, 135, 147, 148, 151, 152, 166, 175, 179, 181, 241, 242, 244, 247, 249, 253, 265, 273, 277, 280], "relax": [5, 241, 249], "slightli": [5, 73, 90, 101, 175, 271], "attempt": [5, 101, 252, 253, 262], "failur": [5, 240, 241, 242, 244, 245, 246, 247, 249, 250, 251, 253, 255, 256, 259], "fact": [5, 58, 149, 160], "veri": [5, 6, 10, 52, 58, 62, 63, 65, 67, 77, 82, 86, 87, 94, 98, 100, 103, 104, 111, 127, 140, 143, 146, 147, 154, 160, 168, 169, 175, 179, 182, 190, 263, 271], "6": [5, 23, 25, 26, 33, 34, 35, 37, 38, 45, 53, 54, 56, 57, 58, 61, 62, 65, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 102, 103, 106, 108, 110, 112, 113, 115, 116, 117, 118, 120, 121, 128, 129, 131, 133, 136, 139, 141, 156, 159, 160, 164, 165, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 182, 184, 189, 209, 210, 211, 212, 216, 230, 234, 240, 242, 243, 245, 246, 248, 249, 253, 259, 261, 262, 265, 267, 268, 273, 279], "dp": [5, 88, 182, 192, 259], "up": [5, 6, 11, 14, 15, 17, 20, 22, 33, 37, 40, 45, 62, 71, 77, 90, 92, 93, 95, 102, 112, 131, 133, 135, 140, 141, 142, 147, 148, 163, 164, 168, 169, 174, 175, 179, 181, 182, 183, 227, 240, 241, 242, 245, 247, 249, 250, 251, 252, 253, 255, 259, 262, 267, 268, 279, 281], "habit": [5, 21], "becaus": [5, 7, 16, 22, 30, 35, 37, 41, 55, 62, 69, 77, 81, 89, 101, 108, 116, 124, 127, 130, 133, 136, 139, 142, 147, 156, 160, 162, 168, 169, 175, 176, 182, 193, 232, 244, 267], "glanc": 5, "sourc": [5, 19, 21, 22, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 146, 147, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 247, 253, 273, 279], "person": [6, 263], "gitconfig": 6, "home": [6, 10, 20, 67, 163, 170, 254, 281], "yourdomain": [6, 17], "com": [6, 7, 9, 10, 16, 17, 18, 20, 22, 23, 58, 73, 74, 77, 87, 89, 92, 104, 151, 152, 153, 154, 160, 161, 163, 169, 171, 175, 177, 179, 182, 184, 201, 209, 271, 273, 274, 275], "ci": [6, 23, 164, 241, 242, 245, 251, 252, 253, 254, 255, 256, 261, 262, 263], "co": [6, 22, 59, 82, 101, 135, 148, 168, 169, 177, 179, 182, 226, 271, 272, 273], "checkout": [6, 7, 14, 16, 17, 22], "st": [6, 24, 32, 84, 113, 175, 176, 181, 182, 222, 240, 241, 242, 247, 248, 249, 250, 258, 261, 262, 273], "statu": [6, 7, 14, 17, 109, 240, 252, 259], "br": 6, "wdiff": 6, "diff": [6, 7, 8, 14, 16, 65, 168], "color": [6, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 54, 59, 65, 69, 72, 82, 86, 90, 98, 102, 103, 104, 106, 109, 110, 112, 113, 115, 116, 117, 118, 120, 129, 130, 131, 133, 135, 136, 139, 141, 142, 152, 153, 164, 168, 173, 175, 176, 181, 182, 209, 212, 222, 240, 242, 244, 245, 249, 259, 263, 273, 277], "vim": [6, 147], "config": [6, 14, 17, 182, 240, 245, 249, 250, 253, 261, 262], "global": [6, 17, 29, 39, 45, 61, 87, 93, 101, 112, 139, 153, 159, 168, 175, 176, 177, 182, 224, 230, 233, 249, 273, 274, 275], "comput": [6, 18, 20, 25, 26, 32, 35, 39, 44, 47, 48, 50, 51, 53, 54, 55, 56, 58, 65, 69, 70, 73, 75, 76, 77, 78, 80, 82, 83, 84, 86, 87, 88, 89, 93, 96, 97, 100, 101, 102, 104, 108, 113, 115, 116, 117, 126, 129, 130, 141, 150, 152, 157, 160, 161, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 185, 188, 189, 200, 201, 208, 209, 212, 213, 214, 215, 219, 230, 234, 242, 245, 253, 255, 262, 271, 273, 276, 279], "copi": [6, 7, 11, 15, 17, 18, 30, 39, 40, 41, 45, 78, 98, 101, 112, 113, 136, 139, 142, 146, 168, 170, 173, 175, 176, 179, 244, 249, 252, 253], "practic": [6, 25, 54, 65, 73, 75, 77, 84, 87, 94, 96, 133, 157, 169, 175, 244, 256, 271, 273], "tell": [6, 17, 18, 67, 115, 117, 176, 178, 182], "who": [6, 16, 17, 21, 22, 59, 67, 86, 168, 169, 175, 273], "simplest": [6, 17], "Of": [6, 77], "cours": [6, 14, 21, 77, 85, 90, 165, 267], "ll": [6, 7, 16, 18, 20, 21, 22, 30, 35, 37, 69, 76, 77, 93, 94, 108, 128, 136, 139, 142, 175, 279], "actual": [6, 7, 45, 98, 135, 146, 168, 169, 175, 176, 241, 242, 267, 268], "benefit": [6, 45, 54, 71, 93], "shorten": [6, 75, 93], "Or": [6, 7, 20, 35, 63, 67, 69, 75, 147, 175], "give": [6, 7, 10, 14, 18, 21, 22, 35, 44, 53, 58, 62, 65, 69, 74, 75, 86, 92, 108, 117, 128, 130, 147, 156, 169, 171, 175, 179, 182, 201, 241, 242, 243, 251, 259], "nice": [6, 14, 17, 59, 70, 95, 175, 177, 182, 273], "get": [6, 7, 12, 13, 14, 15, 17, 18, 19, 21, 22, 26, 32, 33, 41, 45, 47, 48, 56, 58, 59, 66, 68, 73, 79, 80, 85, 86, 87, 88, 93, 97, 100, 101, 102, 104, 108, 109, 110, 112, 115, 116, 128, 131, 133, 136, 139, 142, 143, 146, 150, 152, 153, 156, 160, 162, 163, 168, 169, 170, 171, 174, 175, 176, 179, 181, 182, 241, 244, 245, 247, 251, 254, 255, 258, 259, 262, 264, 267, 268, 279], "lg": [6, 7], "graph": [6, 7, 8, 16, 183, 251], "pretti": [6, 72, 108], "cred": 6, "h": [6, 25, 26, 77, 78, 83, 87, 89, 90, 101, 128, 143, 146, 151, 159, 160, 169, 170, 171, 177, 182, 183, 209, 249, 273], "creset": 6, "yellow": [6, 120, 136, 152], "cgreen": 6, "cr": 6, "blue": [6, 32, 59, 65, 72, 78, 104, 120, 133, 140, 141, 175], "abbrev": 6, "date": [6, 23, 173, 241, 242], "6d8e1e": 6, "head": [6, 7, 16, 30, 53, 57, 62, 98, 249, 273], "origin": [6, 7, 17, 18, 25, 26, 35, 39, 41, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 67, 69, 71, 76, 78, 80, 83, 84, 86, 87, 89, 90, 92, 93, 95, 97, 98, 100, 101, 108, 111, 112, 115, 121, 139, 153, 154, 156, 168, 169, 171, 174, 175, 176, 177, 179, 182, 183, 190, 230, 240, 249, 251, 252, 253, 255, 262, 271, 272], "my": [6, 7, 16, 147, 166, 241, 242, 247, 255, 259], "45": [6, 26, 28, 31, 35, 41, 54, 58, 69, 73, 106, 120, 121, 131, 133, 136, 141, 142, 168, 170, 175, 247, 250, 264, 273], "minut": [6, 20, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 146], "ago": 6, "matthew": [6, 21, 22, 24, 83, 102, 115, 116, 117, 118, 128, 151, 152, 153, 154, 170, 175, 176, 177, 179, 240, 241, 242, 244, 245, 247, 248, 249, 250, 253, 263, 273], "d304a73": 6, "placehold": [6, 168, 253], "pull": [6, 7, 9, 14, 16, 17, 128, 150, 164, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "48": [6, 58, 121, 170, 175, 242, 247], "hhuuggoo": 6, "2": [6, 7, 22, 23, 25, 26, 28, 30, 32, 34, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 65, 67, 68, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 115, 117, 120, 121, 124, 126, 127, 128, 131, 133, 135, 136, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 159, 160, 161, 162, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 196, 198, 199, 200, 201, 204, 205, 209, 210, 211, 212, 213, 214, 215, 216, 219, 221, 222, 227, 230, 233, 237, 238, 240, 241, 242, 245, 246, 248, 249, 251, 252, 253, 254, 256, 259, 261, 262, 263, 265, 267, 269, 271, 272, 273, 274, 275, 276, 279], "week": [6, 262], "jonathan": [6, 83, 128, 170, 273], "terhorst": 6, "4aff2a8": 6, "35": [6, 25, 26, 30, 39, 40, 58, 73, 75, 78, 80, 88, 90, 96, 100, 101, 102, 108, 109, 110, 113, 118, 119, 121, 133, 136, 139, 161, 170, 175, 177, 182, 208, 247, 250, 271, 273], "test_bugfix": 6, "hugo": [6, 58, 77, 89, 126, 160, 171, 175, 177, 182, 201, 273], "a7ff2e5": 6, "discuss": [6, 59, 73, 76, 77, 108, 127, 166, 169, 175, 272, 279], "propos": [6, 30, 41, 53, 55, 81, 82, 84, 86, 90, 92, 98, 108, 109, 110, 120, 121, 124, 151, 160, 161, 168, 175, 182, 191, 271], "made": [6, 7, 16, 17, 21, 44, 75, 87, 115, 116, 143, 146, 175, 179, 250, 267, 268, 271, 272], "summit": 6, "corran": 6, "webster": 6, "68f6752": 6, "axisindex": 6, "index_bi": 6, "ax": [6, 30, 53, 54, 55, 56, 57, 58, 62, 65, 72, 73, 78, 79, 84, 86, 89, 90, 91, 92, 93, 98, 100, 101, 108, 109, 110, 121, 127, 131, 133, 135, 148, 168, 169, 181], "sketchi": 6, "right": [6, 7, 16, 22, 25, 26, 30, 41, 50, 51, 54, 55, 56, 57, 58, 62, 65, 67, 73, 76, 78, 81, 86, 87, 89, 91, 92, 98, 100, 103, 108, 121, 124, 128, 133, 136, 139, 140, 142, 147, 148, 152, 168, 169, 170, 173, 175, 176, 181], "corr": 6, "376adbd": 6, "46": [6, 49, 50, 51, 58, 94, 99, 112, 113, 121, 129, 175, 247, 264], "b605216": 6, "joshu": 6, "api": [6, 20, 44, 128, 150, 164, 168, 173, 175, 178, 240, 243, 244, 245, 247, 249, 253, 256], "2e991e8": 6, "outer": [6, 91, 92, 175], "7beda5a": 6, "prevent": [6, 44, 77, 175, 176, 182, 186, 191], "axi": [6, 50, 51, 54, 56, 58, 59, 65, 70, 73, 79, 80, 84, 85, 87, 90, 96, 97, 101, 106, 108, 120, 126, 127, 148, 149, 160, 168, 169, 171, 173, 175, 176, 177, 179, 181, 182, 184, 221, 227, 245, 247, 251, 256, 267, 272], "throw": [6, 244, 251, 254], "65af65": 6, "convert": [6, 22, 25, 77, 89, 95, 126, 166, 169, 172, 173, 174, 175, 181, 182, 193, 194, 195, 208, 228, 229, 232, 236, 241, 245, 251, 255, 261, 262, 263], "unit": [6, 24, 35, 45, 54, 56, 69, 71, 73, 77, 82, 86, 89, 90, 135, 149, 151, 160, 162, 169, 170, 171, 175, 177, 179, 181, 182, 197, 198, 204, 208, 212, 213, 214, 219, 220, 221, 223, 237, 267, 268, 269, 271, 273], "assert": [6, 136, 244, 249, 256], "956fbab": 6, "remot": [6, 7, 14, 16, 17, 18, 170], "upstream": [6, 7, 14, 16, 17, 22], "thank": [6, 8, 17, 175], "yuri": 6, "zaytsev": 6, "post": [6, 14, 168, 266], "alreadi": [7, 16, 17, 20, 22, 30, 35, 39, 63, 69, 86, 87, 106, 108, 110, 112, 113, 116, 128, 129, 152, 163, 168, 169, 170, 174, 176, 178, 182, 192], "own": [7, 11, 13, 14, 15, 16, 17, 18, 44, 59, 67, 76, 115, 147, 153, 156, 157, 159, 160, 161, 162, 163, 164, 175, 182, 193, 232, 249, 256, 258, 259], "fork": [7, 11, 15, 17, 247, 253], "readi": [7, 14, 22, 48, 75, 83, 109, 117, 128, 170, 241, 273, 279], "real": [7, 76, 89, 135, 147, 149, 164, 168, 169, 175, 177, 179, 182, 226, 271, 273], "what": [7, 18, 22, 35, 62, 65, 67, 69, 87, 90, 93, 98, 100, 104, 106, 109, 112, 115, 116, 135, 139, 142, 147, 150, 151, 152, 168, 173, 176, 177, 182, 263, 270, 273, 277, 281], "anyth": [7, 17, 146, 169, 249, 258], "fetch": [7, 16, 18, 30, 32, 44, 47, 48, 54, 56, 57, 62, 65, 70, 72, 76, 77, 82, 87, 88, 89, 98, 100, 101, 108, 110, 112, 113, 120, 121, 129, 130, 139, 155, 156, 157, 159, 160, 161, 162, 170, 240, 242, 247, 250, 251, 252, 254, 256], "task": [7, 120, 167, 179], "ipython": [7, 20, 30, 147, 242, 251, 261, 265, 276], "purpos": [7, 40, 45, 54, 59, 61, 67, 73, 75, 77, 84, 87, 88, 94, 98, 101, 103, 117, 118, 126, 156, 160, 162, 169, 170, 175, 176, 181, 182, 242, 268, 281], "bugfix": [7, 240, 253, 262, 263], "issu": [7, 22, 23, 61, 73, 77, 89, 108, 109, 110, 130, 139, 150, 159, 161, 164, 175, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 273, 274, 275], "databas": 7, "possibli": [7, 82, 168, 178, 240], "find": [7, 10, 13, 17, 20, 22, 26, 30, 36, 47, 62, 75, 82, 85, 87, 94, 103, 108, 109, 110, 112, 113, 120, 128, 135, 136, 139, 147, 155, 160, 162, 168, 169, 175, 176, 178, 179, 182, 197, 198, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 223, 242, 247, 249, 253, 279, 280], "yourself": [7, 10, 18, 166], "mail": [7, 17, 22, 24, 169, 240, 266, 279, 280], "stuck": [7, 100], "organ": [7, 26, 110, 143, 166, 168, 170, 273, 274, 275], "project": [7, 10, 13, 14, 22, 23, 45, 71, 77, 78, 86, 89, 90, 142, 143, 146, 147, 164, 168, 169, 175, 179, 183, 240, 247, 249, 253, 262, 272, 273, 274, 275, 280], "maintain": [7, 11, 15, 23, 25, 44, 75, 151], "ve": [7, 16, 17, 18, 20, 35, 69, 76, 136, 169, 179, 268], "why": [7, 17, 22, 44, 82, 92, 100, 147, 160, 259], "did": [7, 82, 98, 110, 161, 164, 169, 258], "linux": [7, 14, 22, 23, 151, 163, 245, 250, 256, 257, 265], "sound": [7, 92, 103], "strang": [7, 245, 256], "repo": [7, 16, 17, 22, 249, 255, 258], "down": [7, 9, 115, 135, 142, 148, 169, 174, 175, 183, 249, 257, 267, 268], "branchnam": 7, "often": [7, 22, 62, 63, 82, 93, 98, 133, 135, 136, 149, 169, 175], "someon": [7, 16, 127], "choos": [7, 32, 52, 53, 61, 82, 87, 111, 140, 156, 161, 165, 175, 179, 182, 196, 259], "remind": [7, 16, 148, 245], "rest": [7, 16, 24, 58, 87, 88, 168], "abil": [7, 93, 104, 142, 157, 164, 252], "fly": [7, 115, 116, 148], "public": [7, 21, 22, 120, 148, 150, 164, 170, 242, 273], "correctli": [7, 36, 76, 173, 240, 244, 245, 249, 258], "hack": [7, 17], "my_new_fil": 7, "am": [7, 17, 22], "messag": [7, 17, 19, 21, 22, 139, 142, 168, 169, 171, 182, 183, 243, 245, 251, 252, 253, 256, 259, 260], "On": [7, 26, 87, 115, 168, 169, 175, 245, 273, 279], "ny": [7, 24, 100, 175], "discard": [7, 22, 26, 136, 169, 175, 241, 259], "readm": [7, 22, 240, 241, 242, 243, 244, 245, 249, 251, 252, 255, 259, 263], "untrack": 7, "new_file_nam": 7, "flag": [7, 17, 86, 112, 136, 151, 164, 168, 175, 182, 186, 243, 244, 249, 253, 259], "just": [7, 8, 9, 10, 13, 16, 17, 18, 21, 22, 65, 67, 73, 79, 80, 82, 85, 86, 87, 94, 97, 100, 104, 106, 108, 140, 143, 146, 147, 159, 168, 173, 174, 175, 179, 181, 182, 222, 240, 250, 251, 265, 279], "signal": [7, 17, 30, 40, 45, 48, 54, 55, 58, 62, 65, 67, 70, 71, 72, 75, 80, 81, 84, 86, 88, 90, 91, 92, 93, 94, 97, 98, 99, 121, 124, 126, 127, 147, 150, 156, 160, 164, 167, 171, 174, 175, 176, 177, 179, 181, 182, 191, 207, 209, 210, 211, 212, 215, 216, 217, 218, 234, 245, 247, 251, 253, 255, 256, 258, 264, 267, 269, 271, 273], "faith": [7, 17], "tangl": 7, "problem": [7, 23, 63, 77, 86, 87, 88, 92, 98, 100, 103, 109, 135, 147, 161, 164, 168, 169, 175, 179, 241, 242, 244, 245, 249, 256, 259, 260, 262], "manual": [7, 15, 16, 22, 44, 48, 65, 116, 118, 168, 170, 171, 255], "url": [7, 18, 23, 25, 26, 30, 32, 33, 35, 36, 39, 40, 41, 53, 54, 55, 56, 57, 58, 59, 61, 62, 65, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 102, 103, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 128, 129, 130, 131, 133, 139, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 182, 188, 189, 191, 196, 198, 199, 201, 202, 208, 209, 212, 213, 214, 215, 219, 220, 221, 224, 230, 233, 237, 238, 242, 249, 253, 255, 262, 271, 273], "sai": [7, 16, 20, 22, 59, 65, 83, 90, 103, 128, 153, 154, 169, 170, 174, 175, 248, 267, 268, 273], "dropdown": 7, "menu": [7, 245, 254], "left": [7, 25, 26, 30, 41, 50, 51, 53, 54, 55, 56, 57, 58, 62, 65, 67, 72, 73, 76, 78, 81, 87, 89, 90, 91, 92, 94, 100, 101, 102, 103, 104, 108, 112, 113, 121, 124, 128, 129, 133, 136, 139, 140, 142, 147, 148, 152, 153, 154, 168, 169, 170, 175, 176, 181, 262, 273], "click": [7, 10, 142, 156, 157, 163, 244], "button": [7, 10, 139, 142, 181, 242, 251, 254], "enter": [7, 22, 26, 30, 168, 171, 172, 175, 176, 182, 207, 208, 210, 211, 217, 218, 221, 231, 233, 244], "titl": [7, 50, 51, 65, 73, 80, 83, 90, 97, 113, 181, 182, 183, 240, 253, 254, 255], "attent": 7, "complic": 7, "think": [7, 17, 85, 131, 147, 177, 267], "preliminari": [7, 175], "unwant": 7, "stuff": [7, 13, 16, 19, 247, 249, 251, 258, 270], "even": [7, 17, 62, 79, 89, 92, 100, 106, 115, 117, 156, 166, 168, 169, 175, 176, 179, 182, 216, 271, 279], "account": [7, 11, 22, 25, 55, 76, 84, 92, 93, 98, 126, 168, 169, 175, 241, 256, 257, 271], "Then": [7, 8, 17, 18, 20, 22, 25, 26, 55, 57, 62, 63, 65, 86, 88, 102, 108, 113, 120, 139, 160, 161, 162, 166, 168, 169, 175, 179, 181, 182, 267, 268, 271, 279, 280], "collabor": [7, 24, 26, 266, 280, 281], "anyon": [7, 136], "els": [7, 17, 65, 113, 139, 147, 168, 173, 175, 179, 181], "clone": [7, 9, 14, 17, 20, 22], "githhub": 7, "rememb": [7, 16], "ssh": [7, 10, 22], "protocol": [7, 87], "enh": [7, 240, 242, 243, 244, 245, 247, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262], "graphic": 7, "represent": [7, 16, 34, 35, 37, 69, 73, 76, 87, 90, 92, 98, 103, 118, 131, 136, 149, 162, 168, 169, 170, 173, 175, 179, 182, 193, 194, 228, 232, 236, 245, 271, 273, 274, 275], "gitk": 7, "linear": [7, 29, 31, 45, 58, 70, 71, 77, 78, 86, 87, 91, 92, 96, 102, 103, 104, 106, 109, 110, 112, 149, 152, 154, 158, 161, 164, 168, 169, 170, 171, 172, 176, 179, 182, 183, 187, 201, 212, 220, 230, 233, 242, 246, 247, 249, 256, 260, 261, 262, 264, 273], "network": [7, 33, 70, 83, 86, 108, 128, 152, 153, 160, 164, 167, 170, 174, 182, 237, 273, 274, 275], "final": [7, 17, 22, 35, 40, 55, 67, 69, 75, 81, 82, 86, 87, 89, 90, 91, 93, 94, 100, 101, 102, 108, 109, 118, 124, 126, 135, 136, 139, 168, 169, 174, 175, 176, 182, 196, 277, 279], "fanci": 7, "let": [7, 16, 21, 25, 30, 33, 35, 38, 44, 53, 54, 55, 56, 57, 58, 59, 61, 63, 65, 67, 69, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 89, 91, 92, 95, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 112, 113, 115, 116, 117, 118, 121, 124, 127, 129, 130, 133, 135, 136, 139, 140, 141, 142, 143, 146, 148, 151, 152, 153, 154, 155, 163, 179, 243, 271, 279, 281], "thought": [7, 135, 149], "cool": [7, 16, 133], "At": [7, 22, 45, 71, 72, 88, 108, 168, 169], "stage": [7, 86, 100, 109, 160, 169, 175, 182, 215], "mayb": [7, 252], "back": [7, 17, 22, 30, 109, 110, 133, 139, 148, 150, 166, 175, 179, 182, 238, 240, 247, 249, 255, 258, 262], "meantim": 7, "progress": [7, 17, 78, 90, 93, 112, 152, 161, 164, 168, 171, 174, 182, 184, 201, 233, 242, 256, 259, 273], "f": [7, 8, 30, 47, 48, 50, 51, 52, 63, 65, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 91, 93, 96, 97, 103, 106, 111, 120, 128, 135, 142, 164, 169, 170, 171, 175, 177, 178, 179, 183, 253, 262, 271, 273, 274, 275], "sternli": 7, "advis": [7, 88, 169, 175, 176, 182], "messi": 7, "worri": [7, 37, 152], "got": [7, 16, 58], "littl": [7, 14, 58, 253, 256], "ahead": [7, 100, 139, 243], "But": [7, 21, 30, 58, 59, 98, 148, 169], "sometim": [7, 20, 47, 58, 135, 136, 147, 251], "situat": [7, 148], "replai": [7, 181], "had": [7, 62, 67], "state": [7, 22, 41, 44, 87, 89, 92, 98, 115, 164, 169, 173, 182, 192, 249, 251, 252, 256, 259, 263, 265], "repres": [7, 25, 26, 37, 47, 54, 73, 74, 82, 84, 89, 90, 91, 92, 94, 95, 115, 117, 118, 126, 131, 135, 136, 147, 149, 152, 154, 160, 162, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 181, 182, 184, 190, 216, 227, 245, 254, 271, 272, 273], "tear": 7, "backup": 7, "onto": [7, 25, 148, 169, 175, 181, 272], "succinctli": 7, "doesn": [7, 22, 93, 169, 240, 241, 242, 244, 249, 260, 262, 263, 280], "conflict": [7, 20, 22, 244], "resolv": [7, 73, 75, 76, 81, 88, 124, 160, 166, 175, 182, 208, 245, 246, 261, 271, 273], "man": 7, "luckili": 7, "straightforward": [7, 174], "mistak": [7, 147, 173, 251, 255], "abort": [7, 245], "notic": [7, 90, 103, 136, 148, 156, 169, 170, 176, 182], "reset": [7, 169, 182, 183, 254], "hard": [7, 54, 77, 175, 253, 256], "forgot": 7, "reflog": 7, "8630830": 7, "immedi": [7, 20, 148], "278dd2a": 7, "finish": [7, 17, 103, 109, 174, 249, 279], "11ee694744f2552d": 7, "26aa21a": 7, "lib": [7, 20, 56, 67, 77, 79, 84, 86, 87, 88, 91, 92, 93, 104, 139, 170], "seek_gzip_factori": 7, "leak": [7, 240, 249], "gzip": 7, "obj": [7, 139, 142, 168, 170, 173, 176, 181, 183, 255], "botch": 7, "embarrass": 7, "typo": [7, 150, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 259, 260, 261, 262, 263], "perhap": [7, 256], "fals": [7, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 54, 56, 58, 59, 69, 70, 73, 74, 75, 77, 78, 80, 81, 82, 85, 87, 88, 89, 93, 94, 95, 96, 98, 102, 103, 104, 108, 112, 113, 115, 116, 117, 118, 121, 124, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 161, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 184, 185, 190, 192, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 227, 230, 237, 238, 240, 259, 261, 262, 273], "would": [7, 8, 22, 23, 30, 62, 75, 77, 87, 94, 98, 101, 103, 104, 110, 128, 139, 142, 143, 146, 147, 154, 155, 161, 169, 175, 179, 182, 221, 222], "poster": 7, "interact": [7, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 50, 51, 59, 69, 70, 73, 74, 75, 81, 82, 87, 88, 93, 94, 95, 96, 98, 102, 104, 108, 112, 113, 115, 116, 117, 118, 124, 127, 129, 131, 133, 135, 136, 137, 138, 141, 142, 152, 163, 164, 168, 175, 176, 179, 181, 182, 190, 222, 245, 253, 262, 264, 265, 273, 276], "suppos": [7, 110, 249], "eadc391": 7, "remain": [7, 136, 168, 169, 175, 253, 254, 267], "a815645": 7, "2dec1ac": 7, "few": [7, 20, 37, 47, 98, 139, 151, 179, 241, 242, 246, 247, 248, 249, 250, 265, 276], "disabl": [7, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 59, 69, 70, 74, 75, 81, 82, 87, 93, 94, 95, 96, 98, 115, 116, 117, 118, 124, 127, 135, 136, 142, 171, 176, 182, 184, 191, 247, 262], "13d7934": 7, "6ad92e5": 7, "instanc": [7, 30, 58, 67, 73, 76, 77, 78, 82, 89, 91, 98, 109, 110, 115, 116, 120, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 254], "maskedconst": 7, "29001ed": 7, "nep": [7, 256], "copul": 7, "structured_array_extens": 7, "sensibl": [7, 16], "combin": [7, 25, 26, 35, 40, 45, 53, 62, 69, 73, 87, 88, 90, 91, 93, 94, 96, 106, 136, 144, 145, 168, 169, 171, 174, 175, 179, 182, 220, 242, 262, 264, 273], "pick": [7, 20, 22, 58, 142, 243], "reword": [7, 248], "amend": 7, "squash": [7, 247], "meld": 7, "fixup": [7, 247], "THAT": 7, "WILL": 7, "BE": [7, 24, 169, 176, 182], "lost": [7, 44], "howev": [7, 23, 37, 39, 44, 47, 56, 61, 73, 76, 77, 80, 84, 87, 88, 89, 90, 92, 93, 108, 115, 135, 136, 139, 142, 147, 162, 169, 171, 174, 175, 176, 182, 191, 198, 199, 271, 279], "everyth": [7, 21, 22, 44, 139, 143, 146, 247], "achiev": [7, 25, 53, 88, 91, 101, 103, 115, 120, 161], "ii": [7, 169], "collaps": [7, 148], "three": [7, 15, 19, 35, 45, 67, 69, 71, 77, 82, 86, 87, 88, 89, 90, 93, 96, 100, 101, 106, 109, 117, 120, 136, 147, 148, 149, 160, 162, 169, 175, 177, 179, 181, 273], "quit": [7, 62, 87, 135, 175], "bring": [7, 35, 69, 108, 110, 139, 161, 168, 256, 262], "revis": [7, 22], "detach": 7, "721fc64": 7, "foo": 7, "199": [7, 62, 121, 171, 248, 273], "insert": [7, 59, 127, 140], "66": [7, 58, 82, 87, 118, 121, 160, 175, 179, 247, 271, 273], "0f22701": 7, "79": [7, 58, 98, 121, 175, 247, 273], "61": [7, 58, 73, 91, 115, 121, 164, 169, 175, 176, 247, 258, 273], "successfulli": [7, 22, 271], "sophist": 7, "went": 7, "wrong": [7, 98, 169, 175, 241, 242, 243, 245, 247, 249, 250, 253, 259, 262], "recoveri": [7, 274, 275], "possibl": [7, 14, 22, 23, 37, 44, 52, 59, 74, 75, 79, 80, 85, 87, 88, 96, 97, 100, 111, 118, 142, 147, 148, 162, 168, 169, 171, 172, 175, 176, 179, 182, 185, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 221, 228, 231, 233, 236, 240, 244, 251, 253, 256, 258, 259, 268, 276], "explain": [7, 14, 17, 23, 30, 86, 87, 100, 101, 102, 103, 104, 109, 110, 112, 113, 115, 116, 118, 120, 129, 130, 153, 154, 171, 250, 267, 268, 281], "yarik": 8, "halchenko": [8, 170, 242, 247, 261, 273], "imagin": [8, 148, 151, 169, 175], "seri": [8, 14, 22, 94, 95, 101, 143, 146, 168, 177, 182, 212, 245, 249, 252, 255, 271, 273], "off": [8, 16, 39, 50, 51, 56, 65, 84, 90, 104, 106, 120, 154, 168, 175, 182, 190, 242, 253, 262], "effect": [8, 23, 25, 36, 39, 41, 54, 55, 76, 77, 84, 89, 90, 93, 98, 108, 109, 148, 156, 157, 162, 168, 169, 175, 176, 179, 181, 182, 212, 222, 267, 268, 271, 273, 274, 275], "step": [9, 22, 25, 30, 37, 40, 45, 48, 53, 54, 55, 58, 61, 62, 67, 71, 77, 78, 84, 86, 88, 94, 98, 103, 106, 112, 121, 128, 131, 133, 135, 141, 151, 152, 156, 157, 159, 160, 161, 162, 163, 168, 169, 171, 174, 175, 179, 182, 185, 210, 211, 237, 238, 241, 242, 251, 253, 259, 261, 273], "repositori": [9, 16, 17, 20, 21, 279], "tree": [9, 20, 113, 176, 182], "onc": [10, 22, 44, 56, 77, 82, 85, 87, 88, 89, 90, 93, 98, 136, 140, 143, 146, 147, 157, 159, 168, 169, 175, 176, 182, 187, 188, 189, 191, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 227, 228, 229, 231, 232, 234, 236, 237, 238, 251, 267, 268, 271], "detail": [10, 11, 14, 15, 20, 23, 26, 30, 41, 44, 50, 51, 54, 56, 57, 58, 62, 77, 78, 84, 86, 88, 89, 91, 96, 100, 131, 147, 150, 151, 155, 163, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 188, 189, 196, 198, 199, 201, 202, 207, 208, 214, 217, 218, 219, 220, 221, 222, 224, 230, 233, 237, 238, 240, 249, 255, 273, 274], "repeat": [10, 33, 35, 37, 69, 75, 92, 93, 100, 179, 259, 274, 275], "short": [10, 44, 89, 101, 131, 168, 177, 179, 182, 249, 262, 267, 268], "paus": 10, "hardcor": 10, "overview": [11, 15, 45, 71, 158, 256], "mirror": [11, 149, 169, 183], "trunk": [11, 18, 22], "ask": [11, 22, 44, 150, 166, 280], "review": [11, 22, 77, 259], "debian": [12, 249, 279], "ubuntu": [12, 23, 242, 245, 255, 259, 279], "sudo": [12, 20, 22, 279], "apt": [12, 20, 279], "fedora": [12, 263, 279], "yum": [12, 20], "download": [12, 22, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 146, 147, 151, 152, 153, 154, 158, 163, 164, 165, 169, 170, 182, 206, 242, 244, 245, 248, 249, 250, 259, 260, 262, 263, 274], "msysgit": 12, "maco": [12, 22, 23, 163, 164, 253, 255, 262, 263, 279], "osx": [12, 23, 240, 242, 245, 252, 256, 262], "sever": [13, 17, 22, 23, 65, 73, 84, 87, 91, 92, 136, 162, 168, 179, 271], "comprehens": [13, 76], "our": [13, 16, 18, 21, 22, 33, 47, 56, 61, 65, 74, 75, 77, 78, 82, 83, 86, 88, 90, 93, 95, 98, 100, 102, 103, 109, 115, 116, 117, 131, 133, 136, 139, 143, 146, 147, 150, 153, 154, 163, 164, 168, 169, 170, 175, 243, 245, 256, 258, 262, 277, 279, 280], "tailor": [13, 139], "host": [13, 253], "servic": [13, 22, 169, 176, 182], "quicker": 13, "resourc": [13, 15, 19, 47, 83, 128, 168, 170, 244, 273], "excel": [14, 17, 169], "guid": [14, 23, 77, 94, 117, 150, 169, 174, 244, 251, 253, 256], "pro": [14, 241], "book": [14, 244], "depth": [14, 168, 181, 182, 222], "cheat": 14, "sheet": 14, "cast": [14, 173, 182, 240, 242, 253, 262], "video": [14, 21, 118, 164, 273], "snippet": [14, 246, 277], "tos": 14, "magic": 14, "introduct": [14, 15, 19, 20, 29, 30, 31, 33, 36, 39, 41, 44, 45, 46, 49, 50, 66, 68, 133, 136, 158, 255, 262, 264, 267], "intermedi": [14, 82, 175, 179], "parabl": 14, "foundat": 14, "expand": [14, 84, 93, 168, 242, 258], "fernando": [14, 36, 41, 73, 75, 88, 175, 179, 182, 208, 271, 273], "perez": 14, "mani": [14, 20, 30, 34, 40, 44, 59, 72, 75, 77, 87, 92, 100, 103, 131, 139, 140, 147, 164, 168, 169, 171, 172, 173, 174, 175, 176, 179, 182, 207, 208, 210, 211, 217, 218, 221, 231, 233, 251, 259, 265, 279], "tip": [14, 148, 256], "technic": [14, 44], "svn": 14, "crash": [14, 242, 244, 245, 251, 254], "subvers": 14, "thumb": [14, 112], "linu": 14, "torvald": 14, "tool": [14, 20, 22, 23, 33, 44, 67, 75, 100, 101, 108, 109, 110, 133, 136, 151, 161, 164, 175, 176, 179, 181, 182, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 273, 279], "histori": [14, 174, 249], "clean": [14, 20, 22, 26, 164, 173, 174, 176, 182, 196, 242, 244, 245, 246, 247, 248, 250, 251, 253, 259, 263, 273], "activ": [14, 52, 111, 140, 174, 181, 182, 222, 279], "conveni": [14, 101, 143, 146, 175, 182], "latest": [15, 19, 20, 23, 92, 163, 164, 175, 241, 259, 271, 279], "dot": [15, 19, 32, 90, 117, 168, 169, 171, 172, 175, 179, 247, 259, 260, 262], "spec": [15, 19, 23, 276], "advanc": [15, 45, 54, 56, 58, 73, 77, 78, 89, 100, 101, 108, 109, 110, 137, 138, 143, 146, 151, 161, 164, 166, 168, 171, 175, 182, 201, 207, 217, 218, 221, 243, 264, 273, 274, 275], "onlin": [15, 104, 241, 248, 265, 273], "peopl": [16, 147, 268], "Being": 16, "scari": 16, "rw": [16, 22], "incorpor": [16, 23, 77, 168], "assum": [16, 30, 39, 58, 59, 62, 82, 86, 88, 93, 98, 103, 106, 108, 115, 116, 117, 126, 160, 168, 169, 171, 175, 177, 181, 182, 198, 199, 200, 208, 219, 241, 242], "rebas": [16, 22, 242, 243, 244, 245, 246, 248, 253], "detect": [16, 20, 62, 93, 98, 169, 175, 179], "ff": [16, 176], "forc": [16, 22, 143, 146, 151, 153, 154, 169, 182, 253, 254, 259, 262], "fast": [16, 25, 35, 45, 46, 49, 56, 69, 77, 78, 86, 88, 89, 90, 100, 114, 117, 119, 120, 136, 151, 160, 164, 168, 175, 176, 177, 181, 182, 222, 240, 242, 247, 254, 261, 264, 271, 273, 274, 275, 279], "forward": [16, 25, 30, 76, 77, 82, 86, 89, 110, 166, 168, 174, 175, 179, 183, 248, 253], "rejoin": 16, "compact": [16, 149], "second": [16, 22, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 146, 160, 168, 169, 174, 175, 176, 179, 181, 182, 247, 252, 262, 267, 273], "uniqu": [16, 37, 70, 73, 76, 88, 91, 92, 104, 113, 168, 169, 175, 176, 179, 256, 259, 262, 263], "form": [16, 20, 22, 25, 82, 83, 100, 101, 160, 168, 169, 170, 175, 176, 177, 182, 253, 267, 268, 273], "discov": 17, "best": [17, 65, 75, 87, 147, 161, 168, 169, 179, 256], "easiest": [17, 20, 22, 53], "quickest": 17, "email": [17, 240], "im": [17, 30, 84, 86, 106, 117, 133, 135, 175, 271], "somewher": 17, "test_my_bug": 17, "funni": 17, "send": [17, 21, 24, 279, 280], "warmli": 17, "safe": [17, 44, 164, 168, 173, 255], "leav": [17, 22, 80, 169, 171, 253], "unmodifi": 17, "0001": [17, 175, 178], "0002": [17, 93, 175], "mode": [17, 20, 101, 120, 151, 160, 168, 173, 174, 176, 179, 181, 182, 183, 207, 209, 212, 217, 218, 222, 231, 240, 243, 248, 249, 253, 273], "refresh": 17, "pointer": [17, 253], "investig": [18, 129, 130, 152, 154, 175, 176, 178, 182, 188, 189, 230, 273], "connect": [18, 30, 35, 36, 37, 41, 44, 50, 51, 69, 94, 103, 108, 131, 133, 134, 139, 162, 170, 179, 182, 238, 242, 259, 262, 264, 272, 273, 274, 275], "arbitrari": [18, 179, 249, 268, 273], "accident": [18, 241], "deliber": [18, 169], "satisfact": 18, "checklist": 19, "upload": [19, 242, 244, 253, 261, 263], "binari": [19, 45, 52, 90, 105, 107, 109, 111, 121, 136, 162, 169, 173, 174, 175, 176, 179, 181, 182, 222, 225, 226, 227, 237, 238, 242, 245, 251, 254, 259, 262, 264], "guidelin": [19, 21, 164, 243, 244, 246, 259, 280], "cython": [19, 20, 23, 147, 164, 169, 175, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 258, 260, 261, 263, 276, 279], "benchmark": [19, 242, 247, 254], "prerequisit": 19, "embrac": 19, "speed": [19, 20, 40, 90, 92, 115, 147, 164, 168, 175, 176, 179, 182, 227, 249, 250, 252, 262, 276], "toolchain": [19, 263, 276], "roadmap": [19, 263, 276], "pyproject": [20, 22, 143, 146, 182, 253, 262, 263], "among": [20, 179], "temporari": [20, 171, 172, 173, 175, 178, 260], "fxd": [20, 22], "present": [20, 22, 25, 26, 44, 45, 75, 77, 82, 89, 142, 174, 175, 252, 259], "isol": [20, 22, 26, 65, 87, 93], "old": [20, 164, 245, 247, 249, 253, 255, 256, 263], "pythonpath": 20, "search": [20, 45, 65, 73, 112, 114, 119, 164, 175, 176, 182, 230, 259, 260, 261, 262, 264, 273], "googl": [20, 24, 164, 252], "bashrc": 20, "bash_profil": 20, "retyp": 20, "user_dir": 20, "restart": 20, "python3": [20, 22, 242, 243, 252, 253, 254, 262, 279], "dev": [20, 22, 175, 182, 185, 241, 242, 243, 245, 249, 250, 253, 262], "setuptool": [20, 164, 261], "matplotlib": [20, 30, 35, 39, 41, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 65, 67, 69, 72, 76, 78, 79, 80, 82, 83, 84, 86, 88, 89, 90, 91, 93, 97, 98, 101, 106, 111, 120, 121, 126, 127, 128, 131, 133, 135, 136, 147, 181, 242, 245, 247, 249, 253, 276], "necessari": [20, 22, 23, 33, 35, 38, 39, 40, 44, 52, 53, 55, 56, 57, 58, 59, 62, 63, 65, 67, 69, 74, 77, 79, 80, 82, 83, 85, 87, 90, 92, 96, 97, 102, 111, 112, 113, 115, 116, 117, 118, 120, 121, 129, 130, 133, 135, 136, 139, 168, 170, 175, 179, 182, 256, 273], "exact": [20, 22, 25, 55, 94, 113, 169, 171, 175, 176, 177, 179, 258, 273], "shell": [20, 45, 54, 56, 58, 59, 62, 65, 70, 71, 74, 77, 78, 80, 83, 87, 89, 90, 93, 96, 97, 99, 121, 127, 151, 164, 169, 170, 175, 176, 177, 182, 191, 204, 213, 223, 251, 252, 254, 255, 256, 258, 259, 260, 264, 273, 274, 275, 279], "cmd": [20, 163, 245], "powershel": [20, 163], "platform": [20, 23, 157, 249, 279], "python_compil": 20, "msc": 20, "1900": [20, 252], "64": [20, 45, 54, 55, 58, 59, 65, 71, 74, 87, 95, 96, 102, 106, 115, 118, 121, 127, 131, 139, 151, 170, 174, 175, 177, 179, 241, 242, 249, 273, 274, 275], "bit": [20, 169, 241, 242, 244, 245, 249, 250, 267], "amd64": 20, "visualstudiobuildtool": 20, "2008": [20, 33, 57, 58, 80, 96, 97, 108, 109, 110, 156, 161, 168, 171, 175, 182, 200, 219, 242, 245, 252, 273], "9": [20, 23, 26, 30, 33, 44, 45, 48, 53, 55, 56, 58, 62, 71, 73, 75, 77, 78, 83, 84, 85, 86, 88, 89, 90, 91, 107, 110, 119, 120, 121, 128, 150, 164, 165, 166, 168, 170, 171, 174, 175, 177, 179, 182, 196, 198, 214, 240, 241, 247, 253, 254, 258, 261, 262, 265, 273], "msc_ver": 20, "1500": [20, 45, 57, 71, 96, 169, 245, 274, 275], "2010": [20, 25, 26, 47, 65, 74, 80, 81, 85, 97, 103, 124, 151, 160, 168, 169, 170, 175, 177, 182, 214, 252, 273, 274, 275], "1600": [20, 151, 245, 274, 275], "2012": [20, 35, 36, 41, 53, 57, 65, 69, 73, 75, 77, 78, 85, 87, 88, 102, 103, 115, 116, 117, 118, 128, 151, 156, 162, 171, 175, 176, 177, 178, 179, 182, 208, 237, 252, 271, 273], "1700": [20, 246], "2013": [20, 55, 56, 58, 65, 75, 77, 78, 87, 90, 93, 96, 98, 164, 165, 170, 171, 175, 182, 198, 247, 248, 249, 252, 273, 274, 275], "1800": [20, 84, 151, 251, 274, 275], "2015": [20, 25, 26, 39, 40, 54, 77, 89, 93, 94, 102, 103, 112, 126, 153, 157, 160, 161, 164, 165, 168, 170, 175, 177, 179, 182, 220, 233, 240, 241, 242, 250, 252, 273, 274, 275], "2017": [20, 32, 83, 84, 90, 112, 128, 153, 165, 168, 170, 175, 176, 182, 224, 230, 233, 242, 243, 244, 252, 273, 274, 275], "1910": [20, 251], "2019": [20, 23, 70, 77, 86, 87, 89, 92, 133, 165, 170, 174, 175, 178, 181, 182, 222, 246, 251, 252, 255, 271, 273, 274, 275], "1920": [20, 251], "2022": [20, 23, 76, 83, 102, 113, 128, 165, 170, 174, 176, 252, 259, 260, 273], "1930": [20, 252], "inplac": [20, 54, 171, 256, 261], "unabl": [20, 242, 249, 256, 262], "vcvarsal": 20, "bat": 20, "reinstal": [20, 262], "xcode": [20, 23, 279], "librari": [20, 23, 54, 67, 92, 98, 139, 147, 150, 151, 152, 153, 154, 164, 169, 175, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 244, 249, 260, 273, 276, 279], "effici": [20, 39, 73, 93, 102, 103, 112, 142, 153, 161, 164, 168, 169, 170, 179, 182, 233, 256, 273], "multithread": [20, 164, 254], "applic": [20, 25, 26, 33, 47, 52, 54, 56, 62, 73, 77, 78, 82, 87, 89, 93, 111, 135, 168, 171, 175, 182, 221, 237, 273], "enabl": [20, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 59, 67, 69, 74, 75, 81, 82, 87, 91, 92, 93, 94, 95, 96, 98, 115, 116, 117, 118, 124, 127, 135, 136, 168, 175, 181, 182, 184, 213, 222, 230, 233, 243, 252, 253, 262, 263], "advantag": [20, 39, 58, 72, 85, 89, 94, 103, 128, 168], "next": [20, 21, 22, 30, 33, 35, 40, 59, 65, 67, 69, 72, 82, 86, 88, 90, 92, 95, 98, 100, 127, 128, 135, 136, 141, 143, 169, 174, 181, 245, 253, 254, 279], "gcc": [20, 23], "clang": [20, 23, 263], "llvm": [20, 23], "conda": [20, 23, 240, 242, 243, 245, 250, 262, 279], "forg": [20, 23, 279], "cc": [20, 44, 58, 65, 72, 74, 82, 106, 110, 161, 168, 171, 182, 185, 201, 234, 248, 273, 274, 275], "omp": [20, 242, 253, 263], "brew": [20, 163, 263], "libomp": 20, "bin": [20, 30, 100, 131, 168, 169, 176, 182, 184], "cxx": 20, "ldflag": 20, "l": [20, 25, 26, 47, 58, 72, 74, 77, 78, 80, 83, 84, 86, 87, 90, 96, 97, 108, 109, 110, 128, 151, 152, 160, 161, 168, 169, 170, 172, 174, 175, 176, 177, 179, 181, 182, 196, 207, 208, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 249, 271, 273, 274, 275], "cppflag": 20, "cflag": 20, "whether": [20, 22, 82, 117, 160, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 181, 182, 206, 207, 208, 210, 211, 212, 213, 214, 217, 218, 219, 220, 227], "faster": [20, 87, 112, 115, 164, 168, 171, 174, 175, 179, 182, 198, 199, 237, 238, 241, 242, 247, 249, 253, 266], "svv": [20, 22], "entir": [20, 34, 40, 53, 58, 86, 87, 90, 112, 140, 162, 168, 173, 175, 176, 179, 182, 237, 238, 252], "hour": [20, 170], "skip": [20, 58, 73, 77, 163, 168, 169, 170, 171, 172, 181, 182, 201, 207, 217, 218, 242, 247, 249, 251, 253, 254, 260, 262, 263, 279], "encount": [20, 23, 56, 79, 88, 91, 92, 93], "build_modref_templ": 20, "docgen_cmd": 20, "reference_cmd": 20, "cannot": [20, 72, 84, 89, 93, 169, 179, 240, 246, 249, 251, 253, 259, 260, 261, 262], "examples_built": [20, 122], "make_exampl": 20, "traceback": [20, 170, 179], "33": [20, 25, 26, 45, 48, 58, 71, 86, 90, 106, 118, 121, 168, 169, 171, 175, 182, 201, 212, 240, 247, 273, 274, 275], "modulenotfounderror": [20, 252], "due": [20, 54, 55, 77, 84, 86, 89, 93, 98, 171, 248, 253, 255, 256, 271, 273], "happen": [20, 35, 69, 87, 106, 140, 141, 169, 182, 251], "live": [20, 252], "solv": [20, 25, 61, 77, 84, 87, 88, 91, 92, 93, 159, 164, 168, 169, 171, 174, 175, 176, 179, 182, 183, 201, 220, 227, 242, 250, 253, 273], "sphinxbuild": 20, "path_to_sphinx": 20, "alwai": [21, 34, 44, 62, 65, 75, 77, 82, 87, 89, 90, 94, 147, 162, 171, 175, 177, 179, 247, 255, 267], "seek": 21, "courag": 21, "scientist": [21, 59, 165], "dmri": [21, 45, 61, 63, 67, 71, 78, 82, 98, 99, 147, 158, 159, 164, 165, 170, 171, 175, 178, 245, 253, 264, 271, 273, 274, 275], "level": [21, 56, 61, 86, 90, 91, 92, 100, 101, 102, 106, 108, 109, 110, 147, 152, 154, 160, 168, 169, 171, 174, 176, 181, 182, 185, 241, 247, 251, 252, 253, 273], "share": [21, 24, 44, 76, 249, 266, 280], "vision": [21, 25, 26, 58, 168, 171, 175, 182, 201, 273], "willing": 21, "lead": [21, 76, 77, 82, 98, 108, 148, 169, 175, 253, 267], "eleftherio": [21, 22, 24, 25, 26, 35, 58, 69, 77, 78, 84, 86, 89, 102, 103, 104, 112, 113, 115, 116, 117, 118, 121, 128, 129, 130, 139, 151, 152, 153, 154, 161, 162, 168, 170, 171, 174, 175, 176, 178, 179, 181, 182, 188, 189, 190, 191, 196, 201, 202, 222, 224, 230, 233, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 273], "ian": [21, 24, 102, 115, 116, 117, 118, 128, 151, 152, 153, 154, 169, 176, 179, 247, 273], "bago": [21, 24, 86, 175, 240, 241, 242, 244, 247, 248, 249, 250, 273], "ariel": [21, 24, 30, 40, 72, 77, 78, 83, 84, 89, 94, 128, 129, 130, 151, 152, 153, 154, 170, 175, 176, 178, 179, 182, 188, 189, 220, 230, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 273], "stefan": [21, 24, 40, 94, 151, 152, 153, 154, 175, 182, 220, 240, 247, 248, 249, 250, 251, 273], "primari": [21, 23, 175], "idea": [21, 35, 56, 58, 69, 75, 86, 101, 109, 147, 156, 160, 162, 175, 249, 253, 258, 262, 266, 281], "nipi": [21, 22, 150, 169, 242, 247, 248, 255, 258, 266, 279, 281], "pitch": [21, 148, 169], "feedback": 21, "And": [21, 24, 44, 98, 100, 101, 108, 109, 110, 120, 128, 152, 179, 182, 237, 238], "hope": [21, 279, 281], "enjoi": 21, "apologi": 21, "low": [21, 26, 41, 45, 53, 71, 77, 86, 87, 88, 89, 94, 98, 115, 131, 147, 156, 160, 168, 171, 174, 175, 176, 178, 179, 182, 191, 273], "resolut": [21, 45, 63, 71, 81, 83, 95, 100, 108, 109, 110, 124, 127, 147, 168, 171, 173, 174, 175, 176, 177, 182, 185, 213, 227, 231, 245, 255, 259, 273, 274, 275], "outstand": 22, "delai": [22, 173], "inde": 22, "doe": [22, 30, 34, 58, 86, 87, 89, 90, 108, 115, 116, 133, 135, 147, 162, 168, 170, 171, 173, 174, 175, 176, 179, 240, 241, 242, 244, 245, 248, 249, 251, 253, 256, 258, 259, 260, 271, 273], "pr": [22, 79, 171, 175, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 271], "github_stat": [22, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "release_not": 22, "release1": [22, 263], "changelog": [22, 240, 249, 250, 255], "partial": [22, 25, 36, 41, 84, 93, 104, 158, 162, 173, 175, 179, 182, 238, 273, 274, 275], "shortlog": 22, "over": [22, 23, 25, 26, 30, 44, 55, 87, 90, 91, 92, 101, 104, 110, 147, 148, 149, 156, 168, 169, 170, 173, 175, 179, 181, 242, 252, 253, 258, 262, 267, 273], "recogn": [22, 112, 113, 176, 182, 183, 224, 230], "opportun": [22, 147], "mailmap": 22, "duplic": [22, 169, 240, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263], "nse": 22, "copyright": [22, 168, 169, 170, 176, 182, 241, 242, 245, 249], "conf": [22, 242, 253], "licens": [22, 168, 170, 249], "realli": [22, 53, 79, 257], "pyx": [22, 164, 169, 242, 243, 248, 249, 253, 258], "doctest": [22, 169, 241, 243, 247, 248, 253], "doctest_extmod": 22, "buildbot": [22, 240, 242, 248, 249, 250, 256, 265], "haven": [22, 67, 135], "yet": [22, 23, 45, 67, 71, 94, 168], "valid": [22, 30, 36, 41, 44, 45, 70, 71, 75, 87, 90, 94, 99, 130, 164, 168, 170, 173, 174, 175, 179, 181, 182, 194, 240, 241, 249, 252, 255, 259, 263, 264, 273], "green": [22, 32, 54, 59, 65, 83, 86, 90, 104, 108, 109, 110, 113, 128, 141, 153, 154, 170, 175, 181, 251, 273], "distclean": 22, "pass": [22, 86, 100, 136, 143, 169, 173, 174, 175, 176, 178, 179, 181, 182, 200, 227, 246, 253], "pyarg": 22, "moment": [22, 175], "lot": [22, 37, 62, 87, 136, 147, 174, 175, 279], "autodoc": 22, "wheel": [22, 23, 142, 244, 245, 253, 256, 258, 259, 260, 262, 263], "builder": [22, 23], "yml": [22, 242], "trigger": [22, 169, 181, 247], "interfac": [22, 36, 97, 100, 139, 146, 150, 160, 162, 163, 164, 169, 171, 182, 201, 242, 248, 252, 253, 258, 259], "macpython": 22, "privileg": 22, "trick": [22, 175, 182], "pypi": 22, "until": [22, 36, 75, 93, 97, 162, 168, 175, 176, 253], "correct": [22, 45, 54, 55, 59, 60, 64, 77, 81, 84, 87, 92, 120, 124, 136, 147, 158, 164, 168, 169, 170, 171, 174, 175, 176, 181, 182, 196, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 253, 255, 259, 262, 263, 264, 273, 274, 275], "continu": [22, 23, 36, 41, 45, 71, 99, 151, 162, 164, 169, 175, 179, 182, 203, 213, 242, 248, 264, 273], "artifact": [22, 54, 77, 157, 168, 170, 171, 175, 182, 221, 263, 273], "sdist": [22, 260], "twine": 22, "dist": [22, 104, 117, 168, 169, 179, 182, 190], "annot": [22, 54, 254, 262], "mainten": [22, 241, 256], "further": [22, 23, 35, 39, 40, 65, 69, 73, 86, 87, 98, 112, 168, 169, 170, 171, 175, 176, 177, 178, 179, 181, 182, 188, 189, 198, 199, 201, 202, 207, 208, 214, 217, 218, 219, 220, 221, 222, 224, 230, 233, 237, 238, 276], "substanti": [22, 30, 56, 72, 98], "maint": [22, 240, 242, 248, 249, 251, 252, 253, 255, 257, 259, 260, 262], "_version_extra": 22, "bump": [22, 253, 254, 259, 262, 263], "_version_micro": 22, "restor": [22, 45, 71, 93, 99, 156, 164, 175, 182, 209, 212, 240, 242, 248, 249, 259, 264, 273], "_version_minor": 22, "strategi": [22, 56, 59, 65, 73, 75, 77, 78, 87, 88, 89, 93, 98, 100, 101, 108, 128, 143, 146, 151, 168, 169, 175, 182, 203, 237, 273, 274, 275], "info": [22, 67, 84, 102, 151, 169, 180, 183, 240, 245, 246, 249, 254, 256, 258], "seen": [22, 25, 87, 90, 106, 169, 175, 271], "spuriou": [22, 26, 87, 98, 103, 175, 273], "By": [22, 25, 26, 37, 44, 58, 67, 80, 82, 88, 93, 98, 102, 115, 116, 120, 142, 146, 148, 154, 168, 169, 174, 175, 176, 177, 179, 181, 182, 237, 238, 267, 271], "usernam": 22, "password": 22, "ex": [22, 174, 179, 182, 234], "obvious": [22, 82], "admin": 22, "hand": [22, 72, 165, 168], "egg": 22, "dmg": [22, 248], "mpkg": [22, 248], "permiss": [22, 169, 170, 176], "disk": [22, 59, 67, 73, 139, 147, 169, 170, 173, 178, 181, 182, 187, 188, 259], "build_dmg": 22, "box": [22, 173, 176, 182, 227, 234, 244, 262], "server": 22, "bic": [22, 274, 275], "berkelei": [22, 24, 165], "edu": [22, 67, 139, 147, 170, 274, 275], "bdist_mpkg": 22, "reown_mpkg": 22, "announc": [22, 245], "With": [22, 67, 85, 87, 93, 102, 139, 168, 175, 245, 265], "fear": 22, "trembl": 22, "notabl": 23, "broader": [23, 266], "evolv": 23, "outlin": [23, 178], "usag": [23, 39, 79, 151, 164, 174, 175, 179, 182, 239, 249, 262], "dynam": [23, 168], "strive": 23, "compon": [23, 40, 53, 55, 56, 76, 77, 84, 86, 87, 93, 126, 148, 156, 168, 171, 173, 175, 177, 179, 182, 198, 199, 242, 244, 245, 251], "significantli": [23, 52, 76, 111, 128], "nevertheless": [23, 78], "retain": [23, 97, 169, 176, 181, 182], "older": [23, 150, 242, 244, 245, 247, 249], "toolset": 23, "boundari": [23, 25, 41, 168, 174, 176, 179, 181, 182, 231], "capabl": [23, 117, 139, 169, 181, 253, 255], "moder": 23, "conserv": 23, "approach": [23, 35, 37, 58, 62, 69, 70, 78, 86, 87, 90, 93, 106, 108, 109, 110, 162, 171, 175, 176, 178, 182, 191, 212, 273], "stanc": 23, "constraint": [23, 34, 39, 45, 71, 75, 77, 87, 88, 94, 99, 162, 164, 169, 170, 175, 182, 213, 249, 253, 254, 260, 261, 264, 273], "illustr": [23, 26, 54, 59, 73, 74, 75, 76, 77, 82, 84, 87, 88, 89, 90, 93, 95, 98, 127, 156, 260, 272], "foremost": 23, "along": [23, 25, 26, 32, 35, 37, 45, 69, 71, 73, 76, 77, 82, 87, 104, 128, 133, 136, 143, 146, 147, 153, 160, 162, 168, 169, 171, 173, 175, 178, 179, 181, 182, 256, 277], "sphinx_design": 23, "galleri": [23, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 146, 150, 164, 165, 242, 248, 251, 261, 262, 264, 265], "pydata": [23, 262], "grg": [23, 253], "theme": [23, 164, 181, 253, 262], "guidanc": 23, "2018": [23, 32, 54, 56, 70, 73, 77, 83, 89, 90, 108, 112, 131, 152, 153, 165, 168, 170, 171, 175, 176, 179, 182, 213, 221, 224, 230, 233, 244, 245, 246, 252, 273, 274, 275], "py2": 23, "py3": [23, 248], "4": [23, 25, 26, 30, 32, 36, 40, 44, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 62, 63, 65, 73, 74, 75, 76, 77, 78, 80, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 101, 103, 104, 108, 109, 110, 111, 113, 115, 116, 118, 120, 121, 128, 129, 130, 131, 136, 138, 139, 142, 147, 149, 151, 152, 153, 156, 157, 160, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 188, 189, 202, 208, 212, 213, 220, 230, 240, 241, 242, 245, 251, 253, 256, 259, 262, 263, 265, 267, 271, 273, 274, 275, 276, 279], "5": [23, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 52, 53, 54, 56, 57, 58, 61, 63, 65, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 102, 104, 106, 108, 109, 110, 111, 112, 115, 120, 121, 124, 130, 131, 133, 135, 136, 139, 140, 141, 142, 151, 152, 154, 156, 159, 160, 162, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 184, 185, 189, 191, 196, 199, 200, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 227, 230, 231, 237, 238, 241, 242, 245, 247, 249, 251, 253, 255, 260, 262, 263, 265, 273, 274, 275], "mid": [23, 30, 62, 65, 70, 168], "2020": [23, 38, 58, 76, 77, 87, 104, 121, 129, 130, 152, 165, 170, 171, 174, 175, 176, 178, 182, 188, 189, 191, 201, 230, 252, 255, 256, 257, 273], "2023": [23, 104, 165, 168, 182, 190, 252, 260, 261, 262, 263, 273], "2024": [23, 58, 150, 170, 171, 174, 182, 196, 201, 202, 253, 254, 255, 263, 273], "2025": [23, 150, 254, 256], "bound": [23, 26, 86, 168, 169, 173, 175, 176, 177, 182, 225, 227, 234, 242, 245, 255], "four": [23, 45, 71, 89, 90, 96, 126, 162, 169, 174, 175], "preced": 23, "necessit": 23, "sole": 23, "13": [23, 45, 58, 71, 74, 77, 82, 87, 88, 90, 92, 99, 118, 119, 120, 121, 150, 164, 165, 175, 181, 182, 244, 247, 251, 253, 254, 255, 256, 257, 258, 262, 265, 273], "23": [23, 45, 58, 71, 88, 90, 121, 160, 165, 168, 175, 182, 247, 248, 261, 262, 273], "24": [23, 45, 58, 63, 65, 71, 115, 121, 165, 168, 169, 174, 175, 176, 182, 243, 244, 245, 247, 249, 273], "19": [23, 45, 56, 58, 71, 82, 87, 88, 99, 112, 113, 120, 121, 129, 151, 164, 175, 182, 240, 247, 249, 257, 273], "26": [23, 26, 40, 58, 62, 65, 94, 102, 108, 109, 110, 118, 121, 134, 136, 161, 165, 175, 182, 220, 242, 247, 249, 273], "27": [23, 48, 56, 57, 58, 64, 65, 78, 80, 97, 99, 121, 156, 171, 175, 182, 243, 247, 255, 273, 274, 275], "exhaust": 23, "architectur": [23, 33, 79, 90, 174, 182, 202, 237, 251, 273], "vari": [23, 45, 56, 62, 71, 86, 90, 171, 273], "transpil": 23, "especi": [23, 63, 179], "channel": [23, 62, 109, 110, 175, 176, 181, 182, 222, 254, 263, 266], "anaconda": [23, 242, 243, 245, 256], "below": [23, 26, 32, 41, 44, 45, 54, 55, 56, 58, 71, 73, 76, 77, 78, 82, 84, 88, 89, 117, 131, 133, 135, 140, 142, 148, 152, 162, 163, 168, 173, 174, 175, 176, 177, 178, 179, 182, 185, 191, 246, 271, 274, 279], "minim": [23, 59, 87, 95, 103, 106, 127, 168, 174, 175, 245, 254, 259, 262, 273], "secondari": 23, "untest": 23, "aix": 23, "alpin": 23, "freebsd": 23, "msvc": [23, 249], "studio": [23, 242], "vc142": 23, "regularli": [23, 182, 237, 238, 255], "x86": 23, "04": [23, 36, 41, 43, 58, 86, 87, 88, 90, 99, 104, 119, 121, 125, 138, 162, 168, 175, 182, 190, 238, 261, 262, 273], "cibuildwheel": 23, "arm": [23, 240], "docker": 23, "arm64": [23, 253, 260], "monterei": 23, "microsoft": [23, 24], "org": [23, 25, 26, 30, 32, 33, 36, 39, 40, 41, 53, 54, 55, 56, 57, 58, 61, 62, 65, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 102, 103, 104, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 128, 129, 130, 131, 133, 139, 147, 148, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 182, 188, 189, 190, 191, 196, 198, 199, 202, 208, 209, 212, 213, 214, 215, 219, 220, 221, 224, 230, 233, 238, 248, 256, 271, 273, 274, 275, 280], "en": [23, 24, 117, 148, 169, 175, 182, 245], "readthedoc": [23, 175, 179], "whatev": [23, 179], "design": [23, 30, 45, 58, 59, 71, 76, 90, 94, 139, 147, 164, 168, 169, 171, 173, 175, 179, 246, 252, 273], "numpydoc": [23, 182, 253], "implic": 23, "seamlessli": 23, "meson": [23, 164, 262], "pythonwheel": 23, "stabl": [23, 131, 175, 249, 259], "runner": 23, "cirru": 23, "vm": [23, 241], "hood": 23, "cirruslab": 23, "team": [24, 165, 174, 176, 182, 196, 273], "individu": [24, 89, 102, 103, 128, 130, 169, 174, 175, 177, 179, 182, 203, 242, 260], "indiana": 24, "univers": [24, 33, 35, 54, 56, 57, 69, 73, 77, 89, 151, 162, 170, 171, 175, 182, 221, 237, 273, 274, 275], "IN": [24, 169, 175, 176, 182], "usa": [24, 33, 96, 175, 182, 237, 273], "washington": [24, 67, 139, 170], "birmingham": 24, "uk": [24, 102, 175, 273], "databrick": 24, "san": [24, 33, 169, 182, 237, 273], "francisco": [24, 33, 83, 128, 170, 182, 237, 273], "ca": [24, 33, 147, 165, 182, 237, 273, 274, 275], "omar": [24, 102, 103, 112, 153, 161, 168, 170, 182, 233, 240, 241, 242, 249, 250, 260, 273], "marc": [24, 58, 112, 139, 153, 168, 169, 171, 176, 179, 181, 182, 201, 222, 224, 230, 233, 240, 241, 242, 243, 244, 245, 249, 250, 251, 273], "alexandr": [24, 77, 83, 89, 112, 126, 128, 139, 153, 160, 168, 170, 175, 176, 177, 179, 181, 182, 222, 224, 230, 233, 240, 241, 242, 243, 244, 245, 249, 250, 251, 273], "c\u00f4t\u00e9": [24, 240, 241, 242, 243, 244, 245, 250, 251], "montreal": [24, 165, 170], "qc": [24, 183, 253], "serg": [24, 77, 78, 89, 102, 129, 130, 139, 152, 175, 176, 178, 181, 182, 188, 189, 222, 230, 242, 243, 244, 245, 246, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 273], "koudoro": [24, 77, 78, 89, 102, 129, 130, 139, 152, 175, 176, 178, 181, 182, 188, 189, 222, 230, 242, 243, 244, 245, 246, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 273], "gabriel": [24, 25, 26, 32, 36, 41, 83, 128, 162, 170, 182, 238, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 253, 254, 255, 258, 259, 261, 262, 263, 273], "girard": [24, 25, 26, 29, 32, 36, 41, 45, 162, 182, 238, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 253, 254, 255, 258, 259, 261, 262, 263, 273], "swiss": 24, "feder": 24, "institut": [24, 54, 170, 175, 245, 273], "technologi": [24, 175, 179, 265, 271, 273], "epfl": [24, 96, 274, 275], "lausann": 24, "ch": [24, 96, 274, 275], "rafael": [24, 54, 56, 73, 76, 77, 78, 84, 89, 93, 126, 160, 164, 171, 175, 177, 182, 221, 240, 242, 243, 245, 251, 252, 253, 255, 256, 259, 262, 273], "cambridg": [24, 35, 54, 56, 69, 73, 77, 89, 151, 162, 171, 175, 182, 221, 237, 273], "matthieu": [24, 241, 242, 243, 248, 249], "dumont": [24, 241, 242, 243, 248, 249], "imeka": 24, "sherbrook": [24, 53, 170, 274, 275], "ranveer": [24, 181, 182, 222, 242, 243, 273], "aggarw": [24, 181, 182, 222, 242, 243, 273], "hyderabad": 24, "telangana": 24, "india": 24, "wonder": [24, 140], "retir": [24, 240, 245], "formerli": 24, "mrc": 24, "cognit": 24, "brain": [24, 26, 30, 35, 41, 44, 45, 54, 56, 60, 61, 64, 65, 69, 70, 71, 72, 73, 75, 76, 77, 78, 82, 83, 84, 89, 91, 92, 93, 94, 98, 104, 108, 109, 110, 112, 113, 114, 119, 120, 121, 128, 129, 130, 133, 136, 151, 152, 153, 154, 158, 159, 161, 162, 164, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 188, 189, 191, 202, 213, 221, 222, 224, 230, 233, 234, 237, 244, 249, 251, 253, 257, 259, 264, 273, 274, 275], "scienc": [24, 73, 83, 128, 170, 175, 177, 273], "maxim": [24, 32, 36, 41, 65, 80, 83, 97, 100, 101, 102, 103, 106, 108, 112, 120, 151, 152, 153, 154, 161, 162, 168, 169, 170, 171, 172, 175, 176, 177, 179, 182, 183, 185, 200, 207, 208, 210, 211, 213, 217, 218, 219, 221, 224, 230, 231, 233, 238, 240, 247, 248, 249, 250, 271, 273], "california": [24, 33, 182, 237, 273], "jean": [24, 25, 39, 65, 80, 84, 93, 97, 152, 153, 170, 175, 179, 182, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 255, 262, 273], "christoph": [24, 33, 74, 83, 86, 128, 133, 151, 169, 170, 175, 177, 179, 182, 207, 217, 218, 240, 241, 242, 244, 245, 246, 248, 249, 251, 255, 273], "houd": [24, 179, 240, 241, 242, 244, 245, 246, 248, 249, 251, 255, 273], "francoi": [24, 245, 246, 251, 252, 255, 259, 260, 261, 262], "rh\u00e9ault": 24, "samuel": [24, 84, 175, 177, 240, 241, 242, 247, 248, 249, 250, 262, 273], "medic": [24, 38, 57, 58, 61, 65, 80, 85, 90, 96, 97, 100, 101, 104, 108, 109, 110, 120, 150, 151, 156, 159, 161, 164, 168, 170, 171, 175, 176, 181, 182, 200, 214, 219, 222, 223, 242, 243, 245, 271, 273, 274, 275], "center": [24, 26, 30, 58, 73, 75, 86, 89, 93, 100, 106, 121, 133, 136, 139, 141, 147, 156, 161, 162, 168, 169, 173, 174, 175, 177, 179, 182, 184, 208, 219, 237, 238, 240, 252], "umc": [24, 26], "utrecht": 24, "nl": [24, 175], "michael": [24, 83, 120, 128, 133, 170, 174, 182, 196, 240, 247, 249, 253, 254, 262, 273], "paquett": [24, 240, 247, 249], "max": [24, 34, 45, 61, 65, 67, 70, 71, 74, 75, 77, 82, 90, 93, 100, 101, 108, 113, 131, 140, 142, 151, 162, 169, 172, 174, 175, 176, 182, 183, 216, 247, 249, 267, 273], "planck": 24, "leipzig": 24, "de": [24, 77, 83, 128, 152, 170, 175, 253, 273], "nguyen": [24, 273], "massachusett": [24, 175, 273], "hospit": [24, 274, 275], "ma": [24, 133], "emanuel": [24, 104, 168, 182, 190, 247, 273], "olivetti": [24, 104, 168, 182, 190, 247, 273], "laboratori": 24, "nilab": 24, "trento": 24, "IT": 24, "yaroslav": [24, 170, 242, 247, 261, 273], "halchenco": 24, "pb": 24, "depart": 24, "dartmouth": 24, "nh": 24, "emmanuel": [24, 39, 87, 93, 170, 175, 182, 248, 260, 262, 273], "caruy": [24, 39, 87, 93, 175, 182, 248, 273], "recherch": 24, "informatiqu": 24, "syst\u00e8m": 24, "al\u00e9atoir": 24, "irisa": 24, "renn": 24, "fr": 24, "sylvain": [24, 57, 58, 96, 156, 169, 171, 175, 182, 200, 248, 273], "merlet": [24, 45, 71, 96, 175, 248, 273], "inria": 24, "sophia": [24, 174, 175, 177, 273], "antipoli": [24, 175, 177, 273], "erick": [24, 39, 81, 93, 124, 175, 182, 273], "ziegler": [24, 248], "universit\u00e9": 24, "li\u00e8g": 24, "kimberli": [24, 72, 174, 175, 182, 196, 248, 273], "chan": [24, 72, 83, 128, 170, 175, 248, 273], "stanford": [24, 25, 26, 30, 35, 40, 57, 65, 69, 94, 100, 101, 108, 110, 136, 170, 240, 250, 256, 274, 275], "chantal": [24, 75, 77, 83, 93, 175, 182, 213, 250, 273], "tax": [24, 75, 77, 83, 93, 175, 182, 213, 250, 273], "cardiff": 24, "demian": [24, 87, 90, 102, 103, 112, 153, 161, 168, 170, 175, 182, 233, 245, 249, 273], "wassermann": [24, 87, 90, 102, 103, 112, 153, 161, 168, 170, 175, 182, 233, 245, 249, 273, 274, 275], "mauro": [24, 83, 87, 175, 182, 213, 240, 244, 248, 249, 273], "zucchelli": [24, 83, 87, 175, 182, 213, 240, 244, 248, 249, 273], "franc": [24, 70, 175, 177, 273], "rutger": [24, 25, 26, 87, 90, 170, 175, 242, 243, 245, 273], "fick": [24, 25, 26, 45, 71, 87, 90, 170, 175, 242, 243, 245, 273, 274, 275], "gregori": [24, 83, 128, 170, 241, 242, 249, 255, 256, 273], "lee": [24, 83, 128, 170, 174, 175, 182, 196, 241, 242, 249, 255, 256, 273], "cincinnati": 24, "children": [24, 98, 168, 169, 171, 175, 182, 183, 221, 231], "oh": 24, "endolith": [24, 247], "york": 24, "matthia": [24, 248, 249], "ekman": [24, 248, 249], "donder": 24, "behaviour": [24, 77, 115, 179, 247], "nijmegen": 24, "andrew": [24, 59, 70, 80, 83, 84, 87, 88, 97, 128, 152, 170, 175, 249, 273], "lawrenc": [24, 175, 249, 252, 273], "kesshi": [24, 131, 133, 179, 242, 244, 245, 246, 249, 273], "jordan": [24, 131, 133, 179, 242, 244, 245, 246, 249, 273], "maria": [24, 58, 78, 171, 182, 201, 247, 273], "luisa": [24, 247], "mandelli": [24, 247], "adam": [24, 70, 83, 128, 170, 174, 175, 182, 196, 213, 251, 273], "rybinski": 24, "jagiellonian": 24, "krakow": 24, "qiyuan": [24, 250], "tian": [24, 83, 128, 170, 250, 273], "jon": [24, 83, 128, 131, 170, 179, 242, 243, 244, 245, 246, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 273], "haitz": [24, 242, 243, 244, 245, 246, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263], "legarreta": [24, 242, 243, 244, 245, 246, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263], "gorro\u00f1o": [24, 243, 244, 245, 246, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263], "brigham": 24, "women": 24, "harvard": 24, "school": [24, 165], "boston": 24, "champalimaud": 24, "neurosci": [24, 45, 77, 78, 89, 102, 108, 115, 116, 117, 118, 128, 175, 176, 179, 273], "programm": 24, "centr": [24, 101, 147, 169, 170], "unknown": [24, 25, 175], "lisbon": 24, "pt": [24, 77, 135, 179, 181, 251, 273], "stephan": [24, 25, 26, 90, 170, 175, 241, 242, 273], "meester": [24, 25, 26, 241, 242, 273], "eindhoven": 24, "himanshu": [24, 241], "mishra": [24, 241], "indian": 24, "karaghpur": 24, "alexand": [24, 25, 26, 45, 54, 71, 73, 75, 77, 80, 83, 84, 87, 89, 93, 97, 128, 157, 169, 170, 175, 182, 213, 273], "gauvin": [24, 240, 242], "oscar": [24, 240, 273], "esteban": [24, 240], "bishakh": [24, 241, 242], "ghosh": [24, 170, 241, 242, 273], "nation": [24, 274, 275], "durgapur": 24, "dimitri": [24, 182, 200, 240, 262, 273], "rozaki": [24, 240], "tomotech": 24, "athen": 24, "gr": 24, "rohan": [24, 240], "prinja": [24, 240], "bombai": 24, "sagun": [24, 241], "pai": [24, 241], "vatsala": [24, 241], "swaroop": [24, 241], "mombai": 24, "shahnawaz": [24, 242], "ahm": [24, 242], "birla": 24, "pilani": 24, "goa": 24, "nil": [24, 242, 244], "goyett": [24, 242, 244], "scott": [24, 92, 108, 251, 273], "trinkl": [24, 251], "chicago": 24, "il": 24, "kevin": [24, 36, 41, 162, 170, 182, 238, 251, 273], "sitek": [24, 251], "mit": [24, 168], "mcgovern": 24, "derek": [24, 59, 65, 98, 169, 174, 175, 182, 196, 209, 212, 252, 255, 259, 273], "pisner": [24, 252, 255, 259], "texa": 24, "austin": 24, "ross": [24, 252], "john": [24, 77, 78, 83, 86, 89, 128, 152, 160, 170, 175, 177, 182, 215, 258, 262, 263, 273], "hopkin": 24, "eric": [24, 33, 84, 86, 160, 175, 182, 215, 242, 252, 253, 256, 259, 260, 262, 273, 274, 275], "larson": [24, 252, 253, 256, 259, 260, 262], "jakob": [24, 245], "wasserth": [24, 245], "german": 24, "cancer": 24, "bramsh": [24, 102, 104, 129, 130, 152, 168, 176, 178, 181, 182, 188, 189, 190, 222, 230, 245, 246, 253, 255, 256, 257, 258, 261, 262, 273], "qamar": [24, 102, 104, 129, 130, 152, 168, 176, 178, 181, 182, 188, 189, 190, 222, 230, 245, 246, 253, 255, 256, 257, 258, 261, 262, 273], "chandio": [24, 102, 104, 129, 130, 152, 168, 176, 178, 181, 182, 188, 189, 190, 222, 230, 258, 273], "javier": [24, 139, 181, 182, 222, 245, 259, 261, 262, 273], "guaj": [24, 139, 181, 182, 222, 245, 259, 261, 262, 273], "shreya": [24, 58, 86, 102, 121, 171, 174, 175, 176, 181, 182, 191, 201, 202, 222, 244, 245, 246, 251, 252, 257, 258, 259, 260, 273], "fadnavi": [24, 45, 58, 71, 86, 102, 121, 171, 174, 175, 176, 181, 182, 191, 201, 202, 222, 244, 245, 246, 251, 252, 257, 258, 259, 260, 273], "matt": [24, 100, 101, 108, 168, 243, 245, 251, 253, 273], "cieslak": [24, 83, 108, 128, 170, 245, 251, 253, 273], "pennsylvania": 24, "sven": [24, 242], "dorkenwald": [24, 242], "princeton": 24, "boundless": 24, "heart": [24, 101], "everyon": 24, "anywher": [24, 143, 146, 175], "world": [24, 30, 52, 61, 63, 82, 111, 135, 139, 140, 147, 168, 172, 173, 179, 181], "join": [24, 30, 67, 83, 84, 100, 101, 104, 108, 128, 142, 248], "area": [24, 26, 35, 40, 41, 69, 74, 82, 86, 104, 112, 139, 142, 152, 169, 175, 179, 182, 222, 254], "focu": [24, 30, 86, 98], "demo": [25, 26, 61, 262], "fod": [25, 26, 34, 37, 38, 170, 174, 175, 241, 243, 251], "pde": [25, 26, 273], "hardi": [25, 26, 30, 35, 40, 45, 69, 71, 88, 94, 96, 100, 101, 108, 110, 136, 165, 170, 175, 182, 200, 271, 273, 274, 275], "elong": 25, "structur": [25, 30, 35, 45, 54, 56, 58, 65, 69, 70, 73, 76, 82, 90, 101, 108, 114, 119, 136, 139, 143, 146, 150, 152, 153, 154, 158, 160, 162, 170, 171, 175, 176, 179, 250, 259, 264, 273, 274, 275], "junction": 25, "nois": [25, 39, 45, 53, 57, 58, 60, 64, 65, 77, 89, 92, 93, 98, 126, 127, 156, 164, 170, 171, 174, 175, 177, 179, 182, 198, 199, 200, 209, 212, 234, 240, 243, 247, 249, 251, 258, 264, 273], "small": [25, 26, 30, 34, 37, 53, 63, 73, 74, 75, 82, 83, 86, 90, 92, 93, 94, 98, 101, 103, 106, 115, 116, 117, 118, 136, 160, 167, 168, 169, 170, 171, 175, 176, 179, 181, 182, 216, 222, 230, 233, 240, 242, 243, 247, 248, 249, 250, 251, 252, 254, 255, 256, 259, 260, 262], "incoher": [25, 45, 71, 99, 158, 175, 182, 215, 264, 273], "hypo": 25, "ellipt": [25, 175, 273], "2nd": [25, 76, 151, 262], "domain": [25, 26, 30, 109, 110, 117, 168, 182, 252], "coupl": [25, 72, 109, 182, 249, 255], "mathbb": [25, 58, 91, 92, 103, 169, 175], "rtime": 25, "carri": 25, "flat": [25, 26, 54, 56, 58, 78, 84, 89, 175, 182], "geometr": [25, 45, 71, 148, 168, 175, 245, 273], "differenti": [25, 76, 86, 175, 178, 179, 273], "notion": 25, "neighbor": [25, 26, 93, 112, 164, 168, 176, 178, 253], "denot": [25, 30, 86, 91, 92, 103, 147, 168, 175, 271], "angular": [25, 45, 71, 81, 83, 96, 124, 126, 169, 173, 175, 177, 182, 213, 273, 274, 275], "w": [25, 70, 73, 75, 77, 83, 93, 94, 101, 128, 149, 168, 169, 170, 174, 175, 177, 178, 179, 182, 185, 213, 244, 249, 273], "evolut": [25, 86, 109, 168, 169, 175, 183, 249], "geq": 25, "given": [25, 26, 73, 76, 77, 87, 88, 90, 91, 92, 93, 98, 100, 103, 113, 117, 130, 133, 142, 149, 161, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 181, 182, 222, 231, 237, 238, 240, 245, 246, 267, 271], "begin": [25, 34, 36, 37, 40, 41, 59, 73, 76, 77, 82, 91, 92, 93, 115, 117, 127, 136, 148, 160, 162, 169, 175, 182, 255, 266, 267, 268, 271], "frac": [25, 76, 77, 82, 91, 92, 103, 147, 149, 160, 169, 175, 177, 271, 272], "cdot": [25, 30, 149, 175, 179, 269], "nabla": 25, "44": [25, 58, 74, 77, 82, 99, 100, 107, 112, 113, 115, 121, 129, 170, 175, 273], "delta_": [25, 90], "coeffici": [25, 45, 54, 57, 60, 64, 78, 83, 86, 88, 90, 95, 97, 157, 160, 164, 168, 169, 170, 171, 172, 173, 174, 175, 177, 181, 182, 213, 237, 248, 264, 271, 273], "goe": [25, 88, 90, 181], "laplac": [25, 175], "beltrami": [25, 175, 182, 213], "condit": [25, 36, 41, 92, 103, 120, 169, 174, 175, 176, 179, 182, 226, 243, 245, 249], "noisi": [25, 53, 55, 65, 87, 98, 156, 160, 171, 174, 175, 176, 177, 273], "equat": [25, 30, 55, 77, 91, 147, 169, 171, 175, 177, 179, 182, 201, 220, 242, 267, 268], "shift": [25, 54, 168, 169, 171, 173, 175, 182, 201, 221, 258, 273], "twist": 25, "convolut": [25, 93, 174, 175, 182, 210, 211, 273], "ast_": 25, "kernel": [25, 26, 93, 94, 100, 109, 168, 174, 175, 182, 185, 190, 259, 273], "p_t": [25, 26], "int_": [25, 175, 271], "t_": [25, 175], "prime": [25, 86, 179], "r_": [25, 90], "3d": [25, 30, 32, 35, 45, 53, 55, 56, 57, 58, 69, 71, 72, 73, 77, 88, 89, 98, 99, 101, 103, 105, 107, 126, 135, 139, 141, 142, 147, 150, 156, 158, 160, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 198, 199, 205, 221, 235, 240, 241, 245, 255, 259, 260, 264, 273], "rotat": [25, 26, 90, 100, 136, 148, 149, 160, 161, 168, 169, 173, 175, 176, 177, 182, 184, 244, 250, 251, 254, 273], "map": [25, 26, 30, 35, 36, 39, 40, 41, 44, 45, 56, 58, 61, 63, 65, 67, 69, 70, 71, 73, 76, 77, 78, 79, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 99, 104, 106, 108, 109, 110, 113, 115, 116, 118, 120, 121, 132, 134, 139, 140, 151, 158, 161, 162, 164, 166, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 185, 186, 191, 199, 213, 216, 240, 242, 244, 245, 250, 253, 255, 256, 258, 259, 260, 262, 264, 273, 274, 275, 277], "euclidean": [25, 149, 168, 169, 175, 176, 179, 272, 273], "stochast": [25, 58, 175], "interpret": [25, 78, 82, 89, 90, 98, 136, 168, 175, 179, 242, 246], "limit": [25, 37, 73, 75, 86, 89, 160, 169, 175, 176, 181, 182, 244, 245, 259, 273], "obtain": [25, 26, 38, 41, 56, 58, 62, 74, 75, 77, 80, 83, 84, 85, 86, 88, 89, 92, 100, 102, 108, 117, 121, 126, 147, 159, 160, 168, 170, 174, 175, 176, 181, 267, 273], "accumul": 25, "random": [25, 26, 37, 40, 56, 58, 59, 72, 88, 89, 95, 112, 118, 120, 127, 129, 130, 135, 140, 162, 164, 168, 169, 171, 174, 176, 177, 179, 181, 182, 191, 199, 220, 222, 237, 238, 240, 241, 242, 245, 246, 251, 252, 259, 262, 273], "walk": [25, 100, 152, 156, 157, 159, 160, 161, 162], "particl": [25, 29, 31, 45, 86, 90, 158, 160, 164, 179, 182, 238, 244, 264], "randomli": [25, 86, 130, 160, 176, 179], "contour": [25, 106, 133, 181, 182, 222, 242, 244, 245], "2d": [25, 26, 45, 71, 98, 101, 105, 107, 110, 147, 156, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 181, 182, 242, 243, 247, 260, 264], "motion": [25, 45, 60, 64, 71, 98, 99, 158, 164, 168, 169, 170, 175, 182, 215, 259, 262, 264, 273], "shown": [25, 26, 54, 56, 75, 77, 84, 87, 89, 92, 98, 126, 151, 152, 175, 181, 182, 222, 254], "adapt": [25, 26, 39, 45, 54, 57, 60, 64, 84, 86, 93, 108, 151, 156, 160, 171, 175, 181, 182, 200, 213, 222, 242, 244, 255, 264, 273], "analyt": [25, 45, 55, 71, 85, 97, 99, 129, 130, 158, 160, 171, 175, 176, 177, 178, 182, 188, 189, 230, 255, 264, 271, 273], "formula": [25, 147, 169, 175, 267, 268, 272], "approxim": [25, 65, 72, 86, 87, 91, 92, 156, 168, 175, 177, 178, 179, 253, 268, 273], "gradient_t": [25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 50, 51, 53, 55, 56, 59, 61, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 96, 97, 98, 108, 121, 124, 126, 127, 131, 133, 136, 141, 177, 178, 183, 244, 277], "get_fnam": [25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 65, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 91, 93, 94, 96, 97, 98, 108, 109, 110, 111, 115, 116, 117, 118, 120, 121, 124, 126, 131, 133, 136, 141, 168, 174, 176, 177, 183, 252], "enhancement_kernel": [25, 26], "enhancementkernel": [25, 26], "shift_twist_convolut": 25, "convolv": 25, "read_bvals_bvec": [25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 53, 55, 56, 61, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 91, 93, 94, 96, 97, 98, 108, 121, 126, 131, 133, 136, 141, 177, 183, 240, 244, 248, 256, 263, 277], "load_nifti_data": [25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 54, 69, 86, 109, 120, 131, 133, 136, 141, 142, 183, 252], "constrainedsphericaldeconvmodel": [25, 26, 33, 34, 36, 37, 38, 41, 48, 50, 51, 72, 73, 75, 183], "odf_sh_to_sharp": [25, 183], "shm": [25, 26, 33, 35, 47, 69, 70, 74, 88, 95, 131, 133, 136, 141, 166, 173, 179, 182, 183, 207, 208, 210, 211, 213, 214, 217, 218, 219, 220, 229, 240, 245, 247, 248, 249, 255, 262, 271], "sf_to_sh": [25, 95, 183], "sh_to_sf": [25, 95, 183], "add_nois": [25, 183], "evalu": [25, 26, 29, 31, 40, 45, 47, 50, 51, 56, 72, 74, 77, 78, 88, 89, 90, 94, 108, 109, 110, 117, 120, 151, 161, 162, 164, 168, 169, 170, 172, 173, 174, 175, 177, 179, 182, 183, 220, 256, 264, 273, 274, 275], "150": [25, 26, 58, 73, 75, 93, 94, 121, 177], "2000": [25, 26, 45, 54, 56, 67, 71, 73, 75, 77, 83, 87, 88, 89, 93, 94, 151, 169, 170, 175, 178, 182, 216, 252, 273, 274, 275], "mm": [25, 26, 36, 45, 59, 61, 63, 71, 84, 89, 90, 94, 96, 104, 108, 112, 113, 127, 135, 147, 168, 169, 175, 176, 177, 179, 181, 182, 216, 222, 227, 230, 237, 238, 267, 274, 275], "rician": [25, 39, 53, 55, 57, 62, 93, 126, 127, 170, 171, 175, 177, 182, 200, 273], "fiber": [25, 27, 28, 30, 33, 34, 35, 37, 38, 39, 65, 69, 70, 71, 72, 73, 77, 78, 81, 82, 86, 88, 89, 94, 98, 99, 103, 114, 119, 124, 126, 128, 136, 158, 160, 164, 168, 174, 175, 178, 179, 182, 208, 213, 214, 233, 237, 242, 245, 251, 253, 256, 259, 260, 262, 264, 265, 271, 273, 274, 275], "hardi_fnam": [25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 58, 65, 69, 70, 72, 73, 74, 75, 82, 93, 94, 98, 108, 110, 131, 133, 136, 141], "hardi_bval_fnam": [25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 58, 65, 69, 70, 72, 73, 74, 75, 82, 93, 94, 98, 108, 110, 131, 133, 136, 141], "hardi_bvec_fnam": [25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 58, 65, 69, 70, 72, 73, 74, 75, 82, 93, 94, 98, 108, 110, 131, 133, 136, 141], "stanford_hardi": [25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 58, 65, 69, 70, 72, 73, 74, 75, 82, 93, 94, 98, 108, 110, 131, 133, 136, 141, 156, 160, 162, 163, 274, 275], "bval": [25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 50, 51, 53, 54, 55, 56, 58, 59, 61, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 96, 97, 98, 100, 121, 126, 127, 131, 133, 136, 141, 151, 156, 159, 160, 168, 169, 170, 171, 173, 175, 176, 177, 182, 183, 196, 201, 206, 215, 216, 223, 234, 240, 247, 256, 261, 263, 267, 277], "bvec": [25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 50, 51, 53, 55, 56, 59, 61, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 96, 97, 98, 100, 108, 121, 124, 126, 127, 131, 133, 136, 141, 151, 156, 159, 160, 168, 169, 170, 171, 173, 175, 177, 178, 179, 182, 183, 196, 197, 198, 204, 206, 207, 208, 212, 213, 214, 216, 217, 218, 219, 220, 223, 234, 244, 249, 251, 254, 255, 263, 267, 277], "gtab": [25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 50, 51, 53, 54, 55, 56, 59, 61, 65, 67, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 108, 121, 124, 126, 127, 131, 133, 136, 141, 168, 169, 170, 171, 174, 175, 177, 178, 179, 245, 256, 258, 261, 277], "b0_slice": 25, "b0_mask": [25, 52, 65, 88, 93, 109, 111, 121, 169, 176], "rng": [25, 26, 59, 72, 89, 95, 112, 127, 129, 130, 135, 140, 168, 176, 177, 179, 183, 253, 255], "default_rng": [25, 26, 59, 72, 89, 95, 112, 127, 129, 130, 135, 140], "data_noisi": 25, "noise_typ": [25, 177], "pad": [25, 26, 101, 174, 181, 183], "larger": [25, 37, 53, 56, 73, 75, 78, 93, 103, 106, 112, 118, 126, 158, 168, 169, 172, 174, 175, 177, 179, 182, 185, 207, 208, 210, 211, 216, 217, 218, 240, 244, 279], "region": [25, 26, 30, 35, 36, 41, 65, 69, 72, 73, 75, 77, 78, 84, 86, 89, 93, 98, 101, 112, 133, 135, 136, 170, 171, 175, 179, 262, 271, 273, 274, 275], "data_smal": [25, 26, 61, 73, 74, 75, 83, 84, 87, 93, 94, 96], "25": [25, 26, 33, 35, 37, 39, 40, 47, 48, 58, 59, 69, 74, 75, 78, 83, 85, 87, 88, 90, 91, 92, 93, 94, 99, 106, 109, 112, 121, 131, 133, 135, 141, 142, 161, 162, 168, 170, 172, 174, 175, 177, 179, 182, 185, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 220, 247, 253, 273], "40": [25, 30, 31, 35, 38, 39, 40, 45, 54, 58, 63, 65, 71, 72, 87, 88, 93, 96, 106, 109, 112, 113, 121, 129, 131, 135, 136, 168, 169, 175, 176, 182, 233, 247, 264, 273, 274, 275], "65": [25, 26, 58, 77, 86, 87, 106, 118, 121, 175, 177, 182, 209, 247, 273], "80": [25, 53, 58, 75, 80, 86, 89, 90, 93, 97, 121, 133, 135, 140, 160, 170, 175, 247, 250, 273, 274, 275], "data_noisy_smal": 25, "respons": [25, 26, 33, 34, 36, 37, 38, 39, 40, 41, 45, 48, 50, 51, 71, 72, 73, 88, 94, 99, 126, 160, 164, 170, 175, 179, 182, 208, 213, 219, 220, 240, 248, 249, 250, 251, 255, 256, 260, 264, 273], "ratio": [25, 26, 33, 34, 36, 37, 38, 39, 40, 41, 48, 65, 72, 73, 75, 87, 93, 94, 147, 168, 175, 176, 177, 181, 182, 219, 234, 273], "roi_radii": [25, 26, 33, 34, 36, 37, 38, 39, 40, 41, 48, 50, 51, 72, 73, 75, 88, 93, 94, 175, 182, 208, 219], "fa_thr": [25, 26, 33, 34, 36, 37, 38, 39, 40, 41, 48, 50, 51, 72, 73, 75, 93, 94, 160, 175, 182, 208, 219], "csd_model_orig": 25, "csd_fit_orig": 25, "csd_shm_orig": 25, "shm_coeff": [25, 26, 34, 36, 37, 41, 73, 88, 172, 173, 175, 183, 255], "csd_model_noisi": 25, "csd_fit_noisi": 25, "csd_shm_noisi": 25, "inspir": [25, 26, 88, 176], "lookup": [25, 26, 142, 179, 181], "discret": [25, 26, 37, 39, 47, 74, 87, 100, 161, 162, 168, 169, 170, 172, 173, 175, 176, 179, 182, 184, 233, 247, 273], "rotation": [25, 26, 87, 90, 169], "invari": [25, 26, 45, 71, 87, 90, 99, 117, 160, 169, 175, 179, 181, 242, 264, 273], "100": [25, 26, 30, 44, 45, 54, 58, 59, 61, 71, 73, 81, 86, 89, 90, 95, 100, 101, 106, 108, 109, 118, 120, 121, 124, 127, 128, 129, 131, 135, 168, 170, 171, 175, 176, 177, 178, 179, 181, 182, 184, 187, 188, 191, 223, 247, 273, 274, 275], "d33": [25, 26], "d44": [25, 26], "02": [25, 26, 28, 44, 58, 64, 73, 75, 77, 80, 88, 89, 90, 91, 92, 96, 97, 99, 107, 110, 119, 121, 126, 160, 175, 176, 177, 182, 191, 208, 241, 242, 247, 256, 271, 273], "delta": [25, 76, 106, 109, 147, 160, 169, 178, 181, 182, 183, 216, 249, 260, 267, 269], "spike": 25, "get_orient": 25, "dtype": [25, 73, 78, 106, 108, 109, 113, 140, 168, 171, 173, 175, 178, 179, 181, 182, 226, 240, 247, 248, 251, 255, 260, 263], "spike_shm_conv": 25, "get_spher": [25, 40, 47, 70, 79, 81, 82, 83, 85, 87, 88, 93, 94, 95, 96, 124, 127, 175, 183], "test_mod": 25, "spike_sf_conv": 25, "model_kernel": 25, "odf_slic": [25, 50, 51, 70, 73, 74, 75, 81, 82, 83, 87, 88, 93, 94, 95, 96, 124, 127, 245, 253, 254, 263], "scale": [25, 50, 51, 70, 73, 74, 75, 81, 82, 83, 87, 88, 89, 93, 94, 96, 98, 100, 106, 109, 124, 136, 149, 161, 168, 169, 172, 173, 174, 175, 176, 177, 179, 181, 182, 184, 185, 202, 216, 230, 246, 253, 256, 259, 267, 269, 273], "set_camera": [25, 26, 32, 70, 112, 113, 129, 135, 136, 140], "30": [25, 26, 33, 34, 39, 41, 45, 54, 58, 71, 72, 79, 80, 81, 83, 90, 96, 97, 99, 112, 113, 118, 121, 124, 129, 135, 140, 152, 153, 165, 168, 169, 170, 175, 179, 182, 233, 237, 245, 247, 253, 273, 274, 275], "focal_point": [25, 26, 70, 112, 113, 129, 135, 136, 140], "view_up": [25, 26, 32, 70, 112, 113, 129, 136, 140], "record": [25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 59, 69, 70, 72, 73, 74, 75, 81, 82, 83, 87, 88, 90, 93, 94, 95, 96, 98, 103, 112, 113, 115, 116, 117, 118, 124, 127, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 170, 174, 176, 181, 244, 245, 246, 249, 251, 255, 261, 273], "out_path": [25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 59, 69, 70, 73, 74, 75, 81, 82, 83, 87, 88, 93, 94, 95, 96, 98, 103, 112, 113, 115, 116, 117, 118, 124, 127, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142], "png": [25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 65, 67, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 124, 126, 127, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 181, 182, 222, 246, 255, 262], "900": [25, 26, 35, 40, 69, 103, 130, 135, 139, 141, 142, 241, 274, 275], "csd_shm_enh": 25, "sharpen": [25, 87, 175, 248], "csd_shm_enh_sharp": 25, "lambda_": [25, 175, 182, 219], "raw": [25, 53, 74, 79, 80, 82, 85, 97, 98, 147, 163, 170, 249], "csd_sf_orig": 25, "csd_sf_noisi": 25, "csd_sf_enh": 25, "csd_sf_enh_sharp": 25, "normal": [25, 32, 80, 82, 84, 89, 93, 100, 101, 108, 109, 110, 117, 143, 149, 150, 161, 168, 169, 171, 175, 176, 179, 181, 182, 183, 196, 207, 210, 211, 214, 217, 218, 249, 250, 255, 271, 273], "amax": 25, "closer": [25, 102, 110, 161, 168, 256], "noiseless": [25, 98, 126, 127], "fodf_spheres_org": 25, "setposit": [25, 135, 142], "fodf_spher": [25, 73, 75, 88, 93, 94], "fodf_spheres_enh": 25, "fodf_spheres_enh_sharp": 25, "bottom": [25, 26, 83, 128, 148, 170, 273], "snr": [25, 45, 56, 57, 60, 62, 64, 81, 89, 124, 126, 127, 156, 170, 177, 242, 249, 255, 264], "gonzalo": [25, 26, 240, 273], "sanguinetti": [25, 26, 240, 273], "jorg": [25, 26, 76, 175, 272, 273], "portegi": [25, 26, 273], "remco": [25, 26, 273], "duits1": [25, 26, 273], "ismrm": [25, 70, 72, 78, 86, 88, 96, 102, 103, 165, 168, 175, 176, 179, 181, 182, 222, 233, 249, 255, 273], "24th": [25, 176, 179, 273], "annual": [25, 26, 70, 72, 78, 86, 88, 96, 102, 103, 168, 170, 175, 176, 179, 181, 182, 222, 233, 273, 274, 275], "meet": [25, 26, 70, 72, 75, 78, 86, 88, 96, 102, 103, 104, 165, 168, 170, 174, 175, 176, 179, 181, 182, 222, 233, 251, 252, 255, 256, 257, 259, 273, 274, 275], "exhibit": [25, 58, 65, 73, 77, 78, 86, 96, 175, 176, 179, 181, 182, 222, 273], "smrt": [25, 70, 72, 78, 86, 88, 96, 103, 168, 175, 176, 179, 181, 182, 222, 233, 273], "25th": [25, 176, 273], "singapor": [25, 176, 273], "2016": [25, 26, 33, 54, 56, 58, 73, 77, 78, 83, 86, 87, 88, 89, 91, 92, 151, 157, 165, 169, 170, 171, 175, 176, 182, 198, 199, 213, 221, 237, 241, 242, 252, 273, 274, 275], "intern": [25, 26, 37, 44, 56, 70, 72, 78, 83, 86, 87, 88, 96, 102, 103, 108, 109, 110, 112, 116, 118, 161, 168, 169, 175, 176, 179, 181, 182, 207, 213, 217, 218, 222, 233, 247, 262, 271, 273], "societi": [25, 70, 72, 78, 86, 88, 93, 94, 96, 102, 103, 168, 169, 175, 176, 179, 181, 182, 222, 233, 273], "magnet": [25, 54, 55, 56, 57, 58, 59, 62, 70, 72, 74, 76, 77, 78, 79, 80, 82, 83, 84, 86, 88, 89, 93, 96, 97, 98, 102, 103, 121, 147, 151, 156, 157, 160, 168, 169, 170, 171, 174, 175, 176, 177, 179, 181, 182, 191, 198, 199, 209, 212, 213, 221, 222, 233, 269, 271, 273], "reson": [25, 54, 55, 56, 57, 58, 59, 62, 70, 72, 74, 76, 77, 78, 79, 80, 82, 83, 84, 86, 88, 89, 93, 96, 97, 98, 102, 103, 121, 151, 156, 157, 160, 168, 169, 171, 174, 175, 176, 177, 179, 181, 182, 191, 198, 199, 209, 212, 213, 221, 222, 233, 271, 273], "medicin": [25, 26, 54, 56, 58, 59, 70, 72, 74, 77, 78, 79, 82, 83, 84, 86, 88, 89, 93, 96, 98, 102, 103, 151, 157, 160, 168, 169, 171, 174, 175, 176, 177, 179, 181, 182, 198, 199, 202, 209, 212, 213, 221, 222, 233, 271, 273], "duit": [25, 26, 273], "improv": [25, 26, 30, 36, 41, 53, 56, 57, 88, 92, 93, 104, 108, 150, 154, 161, 164, 168, 169, 175, 182, 240, 242, 243, 244, 247, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 273], "flow": [25, 26, 168, 182, 244, 245, 252, 260, 263, 273], "plo": [25, 26, 39, 40, 55, 56, 58, 93, 94, 128, 170, 171, 174, 175, 178, 182, 198, 220, 273, 274, 275], "ONE": [25, 26, 39, 40, 55, 56, 58, 93, 94, 128, 170, 171, 174, 175, 178, 182, 198, 220, 273, 274, 275], "octob": [25, 26, 83, 89, 128, 129, 130, 152, 165, 168, 170, 175, 176, 178, 182, 188, 189, 230, 273], "doi": [25, 26, 30, 32, 33, 35, 36, 38, 39, 40, 41, 53, 54, 55, 56, 57, 58, 59, 61, 62, 65, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 102, 103, 104, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 128, 129, 130, 131, 133, 139, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 182, 188, 189, 190, 191, 196, 198, 199, 200, 202, 207, 208, 209, 212, 213, 214, 215, 217, 218, 219, 220, 221, 224, 230, 233, 237, 238, 246, 271, 273, 274, 275], "1371": [25, 26, 39, 40, 55, 56, 58, 93, 94, 128, 170, 171, 174, 175, 178, 182, 198, 220, 244, 273, 274, 275], "journal": [25, 26, 39, 40, 55, 56, 58, 62, 78, 82, 86, 93, 94, 100, 108, 109, 110, 128, 131, 139, 160, 161, 165, 170, 171, 174, 175, 177, 178, 179, 182, 198, 212, 215, 220, 271, 273, 274, 275], "pone": [25, 26, 39, 40, 55, 56, 58, 93, 94, 128, 170, 171, 174, 175, 178, 182, 198, 220, 273, 274, 275], "0138122": [25, 26, 273], "erik": [25, 26, 248, 273], "franken": [25, 26, 273], "92": [25, 26, 45, 58, 71, 93, 121, 175, 249, 273], "231": [25, 26, 121, 169, 273], "264": [25, 26, 121, 248, 273], "2011": [25, 26, 53, 57, 58, 65, 77, 78, 80, 96, 97, 101, 103, 120, 152, 156, 160, 169, 170, 171, 175, 176, 182, 209, 247, 252, 273, 274, 275], "1007": [25, 26, 72, 113, 120, 174, 175, 176, 182, 196, 200, 242, 273], "s11263": [25, 26, 273], "010": [25, 26, 96, 121, 175, 176, 182, 191, 273], "0332": [25, 26, 273], "se": [25, 83, 84, 128, 273], "neuroimag": [25, 32, 33, 36, 41, 54, 65, 67, 73, 75, 76, 77, 78, 80, 81, 84, 87, 88, 89, 90, 91, 92, 93, 97, 98, 102, 103, 112, 124, 126, 131, 150, 152, 153, 157, 160, 161, 162, 168, 170, 171, 174, 175, 176, 177, 178, 179, 182, 196, 208, 212, 224, 230, 233, 238, 240, 266, 271, 273, 274, 275, 279, 280], "fran": [25, 65, 80, 97, 112, 153, 168, 175, 176, 182, 224, 230, 233, 273], "\u00e7": [25, 65, 80, 97, 112, 153, 168, 175, 176, 182, 224, 230, 233, 273], "oi": [25, 65, 80, 97, 112, 153, 168, 175, 176, 182, 224, 230, 233, 273], "aujol": [25, 273], "mila": [25, 273], "nikolova": [25, 273], "nicola": [25, 83, 128, 170, 182, 200, 262, 273], "papadaki": [25, 273], "5th": [25, 90, 175, 182, 212, 273], "confer": [25, 58, 168, 169, 171, 179, 182, 201, 273], "variat": [25, 30, 58, 93, 168, 175, 182, 273], "52": [25, 58, 79, 121, 140, 175, 177, 247, 252, 273], "cham": [25, 83, 175, 182, 213, 273], "springer": [25, 72, 83, 175, 182, 200, 213, 273], "paulo": [25, 26, 152, 273], "rodrigu": [25, 26, 169, 273], "bart": [25, 26, 273], "ter": [25, 26, 273], "haar": [25, 26, 273], "romeni": [25, 26, 273], "anna": [25, 26, 83, 128, 170, 273], "vilanova": [25, 26, 273], "acceler": [25, 26, 45, 70, 71, 93, 100, 157, 168, 175, 182, 273], "dw": [25, 26, 65, 70, 126, 133, 175, 273], "dirk": [25, 26, 77, 273], "bartz": [25, 26, 273], "charl": [25, 26, 57, 58, 108, 109, 110, 156, 161, 171, 253, 255, 256, 261, 262, 273], "botha": [25, 26, 273], "joachim": [25, 26, 168, 273], "hornegg": [25, 26, 273], "raghu": [25, 26, 273], "machiraju": [25, 26, 273], "wiebel": [25, 26, 273], "bernhard": [25, 26, 273], "preim": [25, 26, 273], "eurograph": [25, 26, 273], "workshop": [25, 26, 96, 104, 108, 109, 110, 161, 165, 175, 246, 262, 273], "biologi": [25, 26, 136, 169, 273], "associ": [25, 26, 58, 76, 78, 84, 142, 168, 169, 170, 171, 173, 175, 176, 179, 182, 201, 237, 238, 247, 271, 273], "2312": [25, 26, 259, 273], "vcbm": [25, 26, 273], "vcbm10": [25, 26, 273], "049": [25, 26, 175, 273], "056": [25, 26, 273], "total": [25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 145, 146, 151, 169, 173, 174, 175, 177, 179, 182, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 273], "56": [25, 28, 45, 58, 71, 121, 138, 140, 175, 247, 273], "328": [25, 28, 121, 242, 264], "jupyt": [25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 146, 261], "notebook": [25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 146, 242, 244, 251, 255, 261], "contextual_enhanc": [25, 28, 264], "ipynb": [25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 146], "fbc": [26, 164, 242, 256], "quantit": [26, 36, 41, 77, 83, 162, 173, 175, 178, 182, 207, 208, 210, 211, 212, 213, 214, 217, 218, 219, 220, 229, 238, 273, 274, 275], "surround": [26, 90, 98], "indic": [26, 32, 45, 47, 56, 65, 71, 74, 77, 78, 82, 83, 87, 98, 99, 109, 113, 115, 116, 117, 118, 130, 133, 160, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 181, 182, 184, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 224, 227, 228, 229, 230, 248, 256, 258, 259, 264, 273], "poorli": [26, 175], "densiti": [26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 50, 51, 69, 73, 77, 82, 93, 108, 131, 132, 133, 134, 141, 160, 164, 168, 175, 177, 179, 182, 207, 217, 218, 237, 238, 249, 253, 264, 269, 273], "estim": [26, 34, 35, 36, 37, 41, 45, 50, 51, 53, 54, 57, 58, 60, 64, 69, 71, 72, 76, 77, 78, 82, 83, 84, 86, 87, 88, 89, 91, 92, 94, 96, 98, 99, 106, 136, 147, 156, 157, 160, 162, 164, 168, 169, 171, 172, 175, 176, 177, 179, 182, 185, 198, 199, 200, 209, 212, 213, 215, 216, 219, 238, 240, 241, 242, 243, 249, 251, 255, 256, 257, 262, 264, 267, 268, 273], "sum": [26, 30, 65, 73, 75, 77, 79, 80, 85, 87, 88, 89, 91, 93, 94, 97, 106, 109, 115, 117, 148, 161, 168, 169, 170, 174, 175, 176, 177, 178, 179, 182, 185, 191, 273], "One": [26, 30, 37, 39, 54, 58, 62, 65, 72, 75, 82, 88, 93, 98, 128, 140, 151, 168, 169, 175, 178, 179, 181, 241, 243, 245, 260, 268, 279], "badli": [26, 65], "identifi": [26, 36, 39, 45, 65, 71, 98, 136, 139, 162, 169, 170, 171, 175, 181, 182, 206, 223, 237, 267], "lfbc": 26, "deviat": [26, 53, 57, 62, 65, 76, 90, 98, 109, 126, 156, 168, 171, 175, 177, 179, 181, 182, 185, 198, 199, 249, 259], "5d": [26, 173, 175], "induc": [26, 77, 175], "lift": 26, "whole": [26, 75, 90, 93, 133, 171, 176, 179, 274, 275], "rfbc": 26, "averag": [26, 36, 53, 73, 75, 77, 86, 89, 91, 92, 93, 94, 103, 104, 112, 121, 147, 152, 153, 156, 168, 169, 170, 171, 174, 175, 176, 177, 178, 181, 182, 191, 203, 222, 242, 269, 273, 274, 275], "found": [26, 36, 54, 87, 90, 92, 100, 131, 133, 143, 146, 150, 162, 164, 169, 171, 172, 173, 175, 178, 179, 182, 200, 201, 203, 216, 227, 240, 242, 261, 262, 266, 267, 268, 276], "load_nifti": [26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 87, 88, 89, 91, 93, 94, 96, 97, 98, 100, 101, 108, 110, 111, 121, 128, 131, 133, 136, 141, 142, 166, 168, 170, 183, 263, 277], "csaodfmodel": [26, 33, 35, 47, 69, 74, 131, 133, 136, 141, 183], "fbcmeasur": 26, "label_fnam": [26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 69, 131, 133, 136, 141], "stanford_label": [26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 69, 131, 133, 136, 141, 274, 275], "t1_fname": [26, 30, 39, 40, 54, 57, 77, 78, 87, 88, 89, 110, 120, 121, 133, 136], "stanford_t1": [26, 30, 39, 40, 57, 133, 136, 274, 275], "t1_data": [26, 30, 39, 40, 133, 136], "hemispher": [26, 37, 59, 89, 95, 104, 127, 154, 172, 175, 183, 247, 253], "coordin": [26, 30, 32, 52, 59, 61, 63, 67, 73, 82, 86, 89, 93, 95, 111, 115, 126, 127, 128, 135, 136, 139, 140, 147, 149, 151, 160, 164, 167, 168, 169, 172, 173, 175, 176, 177, 178, 179, 181, 182, 222, 237, 238, 240, 241, 251, 254, 258, 260, 270, 271], "dshape": 26, "xa": 26, "xb": 26, "ya": 26, "yb": 26, "za": [26, 182], "zb": 26, "selectionmask": 26, "bool": [26, 62, 78, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 226, 258, 259], "constant": [26, 34, 35, 45, 47, 69, 71, 86, 96, 99, 101, 147, 151, 158, 168, 175, 177, 182, 207, 217, 218, 231, 248, 264, 267, 273], "solid": [26, 34, 35, 45, 47, 69, 71, 99, 151, 158, 169, 175, 177, 182, 207, 217, 218, 264, 273], "cda": 26, "csa": [26, 30, 33, 34, 45, 47, 71, 74, 131, 141, 151, 152, 158, 162, 175, 178, 182, 207, 208, 217, 218, 242, 267, 268], "fraction": [26, 35, 39, 40, 41, 69, 73, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 98, 124, 126, 127, 128, 140, 164, 174, 175, 176, 177, 178, 179, 182, 209, 212, 215, 237, 238, 251, 273, 274, 275], "anisotropi": [26, 35, 39, 40, 41, 69, 73, 76, 77, 79, 82, 83, 84, 87, 88, 89, 90, 91, 98, 128, 140, 164, 169, 173, 175, 176, 178, 182, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 229, 250, 251, 255, 273, 274, 275], "gfa": [26, 33, 35, 39, 40, 47, 69, 74, 79, 85, 131, 133, 141, 162, 172, 173, 178, 182, 183, 207, 208, 210, 211, 213, 214, 217, 218, 219, 220, 229, 247, 248, 249, 255], "restrict": [26, 35, 37, 44, 69, 76, 77, 78, 87, 90, 92, 133, 162, 173, 175, 177, 265, 273], "signific": [26, 35, 69, 77, 87, 152, 175, 179], "interest": [26, 35, 59, 62, 65, 69, 73, 77, 78, 98, 101, 108, 127, 133, 136, 156, 160, 170, 175, 179, 256, 262], "csa_model": [26, 33, 35, 69, 131, 133, 141], "csa_peak": [26, 35, 69, 131, 133, 141, 152], "relative_peak_threshold": [26, 35, 40, 47, 48, 69, 74, 75, 85, 88, 93, 94, 131, 133, 136, 141, 172, 182, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 220, 248], "min_separation_angl": [26, 35, 40, 47, 48, 69, 74, 75, 85, 88, 93, 94, 131, 133, 136, 141, 172, 182, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 220], "probabilist": [26, 29, 30, 31, 33, 34, 36, 39, 45, 50, 51, 62, 131, 133, 141, 158, 164, 171, 175, 177, 179, 182, 219, 237, 246, 248, 251, 264, 265, 273], "white": [26, 33, 35, 36, 37, 39, 40, 41, 54, 62, 65, 69, 70, 72, 73, 77, 78, 82, 83, 86, 87, 88, 89, 90, 92, 93, 94, 98, 101, 102, 103, 104, 112, 115, 118, 120, 121, 128, 131, 133, 135, 136, 140, 152, 158, 160, 161, 162, 168, 170, 174, 175, 176, 177, 178, 179, 182, 190, 191, 213, 220, 224, 230, 233, 237, 238, 242, 243, 247, 254, 261, 273, 274, 275], "matter": [26, 33, 35, 36, 37, 39, 40, 41, 44, 54, 62, 65, 69, 70, 72, 73, 77, 78, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 98, 102, 103, 104, 112, 120, 121, 128, 131, 133, 136, 152, 158, 160, 161, 162, 168, 170, 173, 174, 175, 176, 177, 178, 179, 182, 190, 191, 213, 220, 224, 230, 233, 237, 238, 247, 261, 267, 273, 274, 275], "known": [26, 35, 69, 72, 73, 75, 77, 84, 89, 94, 115, 117, 118, 162, 170, 175, 182, 209, 212, 277], "csd_model": [26, 33, 34, 36, 37, 38, 41, 48, 50, 51, 72, 73, 75], "csd_fit": [26, 33, 34, 36, 37, 38, 41, 50, 51, 73, 75], "csd_fit_shm": 26, "prob_dg": 26, "from_shcoeff": [26, 261], "max_angl": [26, 33, 34, 36, 37, 38, 39, 41, 50, 179, 182, 237, 238, 261], "optic": [26, 93, 168, 170, 175, 273], "radiat": [26, 133, 170, 273], "calcarin": 26, "sulcu": 26, "cortex": [26, 30, 108], "genicul": 26, "nucleu": 26, "lgn": [26, 170, 273], "roi": [26, 30, 44, 45, 65, 75, 83, 88, 93, 96, 98, 108, 128, 131, 132, 133, 134, 137, 138, 164, 170, 175, 176, 179, 182, 183, 208, 219, 222, 240, 245, 253, 259, 264, 273], "cube": [26, 45, 71, 90, 175, 273], "dimens": [26, 30, 44, 62, 67, 82, 86, 93, 100, 109, 117, 142, 147, 160, 162, 168, 169, 171, 173, 174, 175, 176, 179, 182, 183, 192, 212, 237, 238, 244, 251, 273], "3x3x3": 26, "rad": [26, 169, 175], "29": [26, 58, 70, 74, 82, 85, 99, 119, 121, 174, 175, 182, 202, 214, 247, 248, 260, 273], "31": [26, 58, 87, 121, 140, 151, 169, 175, 182, 249, 273], "getter": [26, 29, 31, 34, 36, 38, 39, 41, 45, 162, 173, 182, 237, 243, 244, 249, 251, 253, 255, 262, 264], "streamlines_gener": [26, 35, 69], "step_siz": [26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 69, 131, 133, 136, 141, 169, 179, 182, 237, 238], "5x5x5": [26, 56, 171, 182, 198, 199], "travers": [26, 30, 175], "through": [26, 30, 36, 40, 41, 62, 77, 79, 86, 87, 88, 93, 94, 97, 100, 108, 117, 120, 131, 136, 147, 152, 156, 157, 159, 160, 161, 162, 168, 170, 175, 179, 242, 247, 249, 253, 256, 272, 273], "mask_lgn": 26, "28": [26, 58, 73, 74, 77, 82, 91, 99, 107, 109, 121, 131, 164, 174, 175, 176, 179, 182, 219, 244, 247, 257, 258, 262, 273], "filtered_fibers2": 26, "tol": [26, 168, 169, 175, 179, 182, 204], "sfil": 26, "len": [26, 32, 44, 67, 113, 115, 116, 117, 118, 129, 135, 136, 169, 170, 174, 175, 176, 177, 179, 181, 240, 256], "propag": [26, 65, 80, 81, 87, 90, 97, 124, 158, 162, 164, 175, 177, 182, 210, 211, 216, 249, 267, 269, 273], "preserv": [26, 27, 28, 45, 53, 56, 58, 149, 154, 169, 179, 264, 273], "contextu": [26, 28, 164, 182, 241, 242, 264, 273], "enhanc": [26, 28, 32, 114, 119, 156, 164, 241, 242, 249, 252, 253, 264, 273], "regard": [26, 89, 96, 168, 242, 253, 263], "electrostat": [26, 59, 95, 127, 169, 260], "repuls": [26, 59, 169, 242, 260], "chosen": [26, 35, 37, 69, 73, 90, 95, 162, 175, 179, 268], "recal": [26, 148, 175], "percent": [26, 176], "fbc_sl_orig": 26, "clrs_orig": 26, "rfbc_orig": 26, "get_points_rfbc_threshold": 26, "emphasi": 26, "01": [26, 31, 44, 55, 58, 61, 64, 73, 75, 86, 88, 93, 99, 104, 110, 112, 119, 121, 134, 151, 154, 159, 168, 169, 171, 175, 182, 190, 197, 198, 204, 207, 208, 212, 213, 214, 217, 218, 219, 220, 223, 244, 245, 250, 252, 255, 260, 261, 264, 273], "fbc_sl_thre": 26, "clrs_thre": 26, "rfbc_thre": 26, "125": [26, 45, 47, 56, 58, 71, 118, 121, 142, 247, 273], "procedur": [26, 30, 53, 54, 77, 84, 89, 90, 126, 157, 159, 160, 168, 169, 175, 177, 182, 207, 208, 210, 211, 217, 218, 242, 244, 273], "lineactor": 26, "vstack": [26, 30, 59, 81, 89, 95, 124, 127, 135, 179], "linewidth": [26, 39, 40, 89, 103, 118, 129, 130, 131, 135, 140, 181, 183], "horizont": [26, 181, 272], "axial": [26, 53, 56, 57, 62, 67, 74, 75, 76, 77, 82, 83, 88, 89, 93, 94, 120, 136, 142, 164, 175, 179, 181, 182, 209, 212, 213, 273], "slice": [26, 35, 39, 45, 52, 53, 54, 56, 57, 58, 62, 65, 67, 69, 70, 74, 77, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 97, 98, 101, 109, 110, 111, 120, 131, 136, 137, 138, 139, 151, 164, 168, 169, 170, 171, 173, 175, 176, 182, 183, 221, 242, 244, 245, 251, 253, 254, 255, 259, 261, 263, 264, 277], "t1": [26, 40, 45, 54, 57, 88, 114, 119, 133, 136, 139, 146, 151, 156, 170, 171, 174, 182, 196, 226, 240, 262, 264, 273, 274, 275], "vol_actor1": 26, "sagitt": [26, 35, 65, 69, 136, 142, 181], "vol_actor2": [26, 30, 39, 40, 136], "285": [26, 121, 248], "155": [26, 58, 86, 121, 177, 249, 273], "n_frame": [26, 30, 74, 82, 103, 115, 130, 133, 136, 240], "or_befor": 26, "rm": [26, 30, 73, 75, 93, 273], "or_aft": 26, "tau": [26, 90, 169, 170, 171, 175, 177, 179, 182, 183, 198, 219, 256, 267], "techniqu": [26, 39, 41, 54, 56, 77, 78, 88, 89, 93, 113, 161, 174, 175, 176, 182, 213, 249, 253, 273], "pauli": [26, 182, 273], "ossenblok": [26, 273], "academ": [26, 92], "epileptologi": 26, "kempenhaegh": 26, "maastricht": 26, "geneva": [26, 273], "switzerland": [26, 273], "june": [26, 121, 165, 169, 170, 176, 182, 191, 273], "ohbm": [26, 164, 165, 273], "110": [26, 28, 58, 121, 247], "fiber_to_bundle_coher": [26, 28, 244, 264], "coher": [27, 28, 39, 45, 75, 90, 93, 164, 170, 173, 175, 242, 264, 273], "03": [28, 29, 45, 56, 58, 62, 64, 71, 73, 86, 87, 88, 99, 107, 110, 112, 113, 121, 125, 129, 134, 138, 169, 171, 175, 240, 241, 246, 247, 248, 250, 251, 253, 254, 257, 258, 259, 260, 263, 273], "41": [28, 58, 107, 108, 109, 110, 118, 121, 161, 164, 175, 179, 246, 247, 260, 273], "438": [28, 121, 249, 269], "examples_builtcontextual_enhanc": 28, "mem": [28, 31, 43, 49, 64, 68, 99, 107, 119, 122, 125, 134, 138, 145, 181, 264], "mb": [28, 31, 43, 49, 64, 68, 99, 107, 119, 122, 125, 134, 138, 145, 170, 264], "00": [28, 31, 43, 44, 49, 58, 64, 68, 99, 107, 119, 121, 122, 125, 134, 138, 140, 145, 264, 273], "determinist": [29, 31, 33, 35, 37, 41, 45, 50, 51, 69, 158, 164, 175, 179, 182, 219, 237, 245, 249, 259, 264, 265, 273], "gar12": [29, 45, 273], "behren": [29, 45, 71, 177, 273], "bwmj": [29, 45, 71, 273], "bjbj": [29, 45, 273], "07": [29, 45, 58, 65, 70, 75, 80, 88, 93, 97, 99, 107, 112, 121, 138, 153, 168, 170, 172, 174, 175, 176, 182, 212, 224, 230, 233, 263, 273, 274, 275], "bootstrap": [29, 31, 45, 164, 175, 179, 182, 212, 244, 247, 262, 264, 273], "berman": [29, 33, 45, 175, 273], "bcm": [29, 45, 273], "08": [29, 33, 45, 58, 64, 71, 75, 87, 93, 107, 121, 171, 175, 251, 252, 253, 255, 273], "filter": [29, 30, 31, 45, 53, 55, 57, 58, 89, 93, 106, 108, 112, 136, 156, 158, 164, 168, 169, 171, 174, 175, 176, 179, 182, 200, 210, 211, 227, 238, 242, 244, 253, 259, 262, 264, 273], "pft": [29, 36, 45, 158, 164, 179, 245, 246, 262], "gwdd14": [29, 45, 273], "transport": [29, 31, 45, 50, 51, 164, 169, 179, 182, 237, 260, 261, 264, 273], "ptt": [29, 38, 45, 50, 51, 164, 170, 179, 182, 237, 260, 261, 262], "aydogan": [29, 38, 45, 261, 273], "shi": [29, 38, 45, 273], "as47": [29, 45, 273], "surfac": [29, 31, 40, 45, 94, 131, 133, 137, 138, 158, 164, 169, 170, 175, 183, 242, 244, 258, 263, 264, 271, 273], "spars": [29, 30, 31, 45, 71, 87, 92, 99, 101, 164, 168, 169, 175, 176, 182, 220, 249, 253, 264, 273], "fascicl": [29, 31, 45, 71, 99, 102, 103, 112, 153, 161, 164, 168, 170, 175, 179, 182, 220, 233, 249, 264, 273], "unbias": [29, 31, 45, 71, 99, 102, 164, 168, 170, 175, 182, 260, 264, 273, 274, 275], "rumba": [29, 31, 45, 71, 99, 164, 182, 183, 259, 260, 261, 264], "sd": [29, 31, 45, 71, 93, 160, 164, 175, 182, 260, 261, 264, 271], "biggest": 30, "challeng": [30, 90, 128, 165, 253, 274, 275], "predict": [30, 58, 70, 72, 86, 88, 94, 162, 168, 169, 174, 175, 179, 183, 240, 241, 242, 248, 249, 250, 255, 273], "simultan": [30, 86, 93, 102, 164, 175, 262], "breviti": [30, 40, 86, 108], "corpu": [30, 33, 34, 35, 36, 37, 38, 41, 65, 69, 70, 72, 74, 75, 82, 87, 90, 93, 94, 98, 108, 131, 133, 136, 141, 170, 175, 176, 179, 182, 234, 274, 275], "callosum": [30, 33, 34, 35, 36, 37, 38, 41, 65, 69, 70, 72, 74, 75, 82, 87, 90, 93, 94, 98, 108, 131, 133, 136, 141, 170, 175, 176, 179, 182, 234, 274, 275], "frontal": [30, 108, 136], "fulli": [30, 45, 77, 104, 108, 158, 175], "matric": [30, 45, 102, 108, 132, 134, 149, 168, 169, 170, 175, 179, 242, 245, 264], "intersect": [30, 45, 86, 89, 108, 132, 134, 179, 264], "o": [30, 44, 50, 51, 54, 67, 70, 72, 76, 83, 84, 86, 91, 92, 100, 101, 104, 108, 128, 142, 143, 157, 160, 163, 170, 173, 175, 176, 177, 182, 198, 199, 215, 241, 249, 251, 253, 265, 273, 279], "pjoin": [30, 100, 101, 104, 108], "pyplot": [30, 35, 39, 41, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 65, 67, 69, 72, 76, 78, 79, 80, 83, 84, 86, 88, 89, 90, 91, 93, 97, 98, 101, 106, 111, 120, 121, 126, 127, 128, 131, 133, 135, 136, 170, 181], "plt": [30, 35, 39, 41, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 65, 67, 69, 72, 76, 78, 79, 80, 83, 84, 86, 88, 89, 90, 91, 93, 97, 98, 101, 106, 111, 120, 121, 126, 127, 128, 131, 135, 136], "mpl_toolkit": [30, 133], "axes_grid1": [30, 133], "axesgrid": [30, 133], "fetch_stanford_track": [30, 108, 183], "colormap": [30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 69, 73, 74, 75, 81, 82, 83, 86, 87, 88, 93, 94, 96, 115, 116, 117, 118, 124, 127, 133, 136, 141, 175, 181, 182, 222, 242, 244, 245, 249, 251], "cmap": [30, 35, 39, 41, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 67, 69, 76, 78, 83, 84, 86, 87, 88, 89, 90, 91, 101, 111, 113, 115, 117, 120, 121, 133, 136, 141, 181], "hardi_img": [30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 69, 133, 136, 141], "return_img": [30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 67, 69, 100, 101, 108, 133, 136, 141, 166, 173], "cc_slice": [30, 136], "sphx_glr_examples_built_streamline_analysis_streamline_tool": 30, "candid": [30, 45, 71, 179], "streamlines_fil": [30, 108], "lr_superiorfrontal_path": [30, 108], "lr": [30, 108, 136, 175], "superiorfront": [30, 108, 136], "candidate_sl_sft": 30, "to_vox": [30, 44, 173, 183], "candidate_sl": 30, "term": [30, 77, 86, 87, 92, 93, 115, 120, 147, 160, 168, 174, 175, 248, 270], "connectom": [30, 50, 51, 152, 153, 164, 179, 273, 274, 275], "anatom": [30, 36, 41, 56, 58, 108, 131, 133, 136, 152, 154, 162, 164, 179, 182, 250, 265, 273], "candidate_streamlines_actor": 30, "streamtub": [30, 39, 40, 103, 115, 116, 117, 118, 130, 135, 139, 140, 240, 244, 245, 248], "line_color": [30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 69, 133, 136, 141], "cc_roi_actor": [30, 136], "contour_from_roi": [30, 133, 136, 141], "opac": [30, 70, 90, 115, 118, 133, 136, 139, 141, 142, 240, 244, 245, 262], "vol_actor": [30, 39, 40, 136], "canva": [30, 136], "life_candid": 30, "800": [30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 69, 131, 133, 136, 151, 177, 274, 275], "fiber_model": [30, 179], "scanner": [30, 39, 53, 57, 76, 93, 147, 169, 170, 171, 175, 182, 267, 268, 273, 274, 275], "iso": [30, 84, 91, 175, 183], "ac": [30, 175], "pc": 30, "inv_affin": [30, 174], "linalg": [30, 39, 40, 91, 108, 139, 140, 175, 256, 260], "inv": [30, 39, 40, 108, 139, 140, 168, 175], "invers": [30, 87, 90, 108, 109, 110, 139, 149, 168, 169, 172, 175, 178, 179, 181, 182, 183, 185, 193, 226, 232, 243, 251], "fiberfit": [30, 183], "beta": [30, 88, 91, 94, 104, 120, 148, 168, 175, 176, 179, 182, 190, 191], "weight": [30, 40, 45, 54, 55, 56, 58, 60, 62, 64, 67, 70, 71, 72, 73, 76, 77, 82, 84, 86, 87, 89, 90, 91, 92, 93, 94, 98, 103, 114, 119, 128, 131, 147, 156, 157, 160, 169, 170, 171, 173, 175, 177, 178, 179, 182, 183, 196, 198, 209, 212, 213, 216, 262, 264, 267, 268, 273, 274, 275], "matrix": [30, 44, 50, 51, 52, 54, 56, 58, 61, 63, 76, 77, 82, 89, 93, 94, 103, 108, 110, 111, 113, 136, 140, 142, 148, 149, 151, 156, 160, 161, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 190, 197, 199, 201, 207, 208, 210, 211, 213, 214, 217, 218, 219, 220, 229, 240, 241, 242, 245, 246, 249, 251, 252, 254, 255, 256, 257, 259, 262, 270, 273], "n_": [30, 77, 175], "th": [30, 72, 103, 109, 110, 168, 175, 179, 181, 263, 271], "column": [30, 91, 92, 94, 103, 136, 142, 149, 168, 169, 175, 176, 177, 179, 181], "arbitrarili": [30, 73], "percentag": [30, 77, 100, 126, 127, 169, 176, 177, 182, 191], "node": [30, 128, 176, 178, 179, 260], "cylindr": [30, 177, 273], "compart": [30, 39, 76, 77, 78, 84, 86, 88, 89, 93, 126, 160, 175, 177, 182, 273], "gaussian": [30, 39, 55, 57, 62, 65, 72, 76, 77, 87, 89, 93, 100, 106, 109, 110, 120, 126, 160, 168, 171, 175, 177, 182, 185, 190, 200, 209, 216, 240, 244, 249, 273], "tensor": [30, 45, 65, 67, 71, 72, 75, 78, 81, 83, 84, 87, 88, 89, 91, 92, 93, 94, 99, 124, 126, 127, 128, 147, 151, 158, 164, 166, 167, 168, 169, 170, 173, 175, 177, 179, 182, 194, 209, 212, 213, 236, 240, 242, 244, 245, 247, 248, 249, 250, 251, 253, 255, 256, 258, 260, 262, 263, 264, 267, 268, 273, 277], "fiber_fit": 30, "ey": [30, 44, 100, 101, 136, 139, 175, 179, 250], "properti": [30, 47, 58, 73, 74, 82, 85, 87, 89, 90, 98, 103, 117, 121, 126, 128, 148, 160, 168, 169, 170, 173, 175, 176, 178, 181, 182, 240, 253, 271, 273], "beta_i": 30, "fig": [30, 41, 53, 54, 55, 57, 62, 65, 72, 76, 80, 83, 86, 90, 91, 93, 97, 101, 106, 120, 121, 128, 131, 133, 135, 175, 181], "subplot": [30, 35, 39, 41, 52, 53, 54, 55, 56, 57, 58, 62, 65, 67, 69, 72, 76, 78, 79, 84, 86, 89, 90, 91, 93, 98, 101, 106, 111, 128, 131, 135, 181], "hist": [30, 98, 131, 135, 174], "histtyp": [30, 98, 131, 135], "set_xlabel": [30, 72, 86, 89, 90, 98, 128, 131, 135], "set_ylabel": [30, 72, 86, 89, 90, 98, 128, 131, 135], "savefig": [30, 35, 39, 41, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 65, 67, 69, 72, 78, 79, 80, 83, 84, 86, 88, 89, 90, 93, 97, 98, 101, 106, 111, 120, 126, 127, 128, 131, 133, 135, 136], "beta_histogram": 30, "optimized_sl": 30, "life_optim": 30, "presum": 30, "quantifi": [30, 72, 73, 76, 77, 87, 160, 175, 273], "unseen": 30, "fold": [30, 45, 71, 99, 175, 264], "s0": [30, 56, 67, 72, 75, 81, 86, 89, 93, 94, 124, 126, 127, 175, 177, 179, 182, 215, 242, 248, 263], "baselin": [30, 98], "model_predict": [30, 72], "squar": [30, 58, 72, 77, 80, 86, 87, 90, 92, 93, 94, 97, 98, 101, 109, 149, 161, 164, 168, 169, 170, 175, 177, 179, 181, 182, 185, 209, 212, 213, 220, 226, 253, 255, 267, 268, 273], "model_error": 30, "model_rms": 30, "sqrt": [30, 55, 56, 58, 78, 79, 80, 82, 85, 90, 91, 92, 97, 117, 149, 169, 171, 175, 177, 179, 182, 226, 271, 272], "against": [30, 81, 93, 124, 168, 169, 170, 175, 176], "naiv": [30, 106, 175], "beta_baselin": 30, "pred_weight": 30, "reshap": [30, 172, 173, 174, 175, 177, 262], "spdot": [30, 183], "life_matrix": [30, 179], "vox_coord": [30, 179], "b0s_mask": [30, 67, 70, 72, 108, 169, 175, 183], "mean_pr": 30, "empti": [30, 89, 152, 176, 179, 251, 253, 255, 259, 261, 262], "b0_signal": [30, 179], "demean": 30, "multipli": [30, 88, 95, 126, 135, 168, 175, 176, 182, 208], "mean_sign": [30, 56, 65], "mean_error": 30, "mean_rms": 30, "overal": [30, 87, 135, 175], "altern": [30, 34, 36, 39, 48, 73, 75, 81, 92, 100, 106, 115, 124, 135, 161, 162, 168, 169, 175, 182, 212, 248, 271], "median": [30, 88, 121, 160, 169, 176, 178, 182, 227, 242, 248, 258], "rmse": 30, "2f": [30, 44, 89], "horizontalalign": [30, 86], "verticalalign": [30, 86], "transax": [30, 86], "error_histogram": 30, "vol_model": 30, "ones": [30, 41, 50, 51, 59, 78, 89, 113, 115, 116, 117, 118, 127, 143, 146, 169], "nan": [30, 78, 82, 168, 175, 240, 241, 245, 246, 249, 255, 256], "vol_mean": 30, "vol_improv": 30, "sl_idx": 30, "49": [30, 58, 75, 99, 121, 126, 164, 175, 247, 256, 273], "subplots_adjust": [30, 54, 56, 58, 84, 89, 133], "05": [30, 45, 56, 58, 59, 71, 84, 87, 88, 89, 99, 102, 103, 107, 112, 115, 118, 119, 121, 133, 152, 153, 161, 168, 169, 170, 171, 174, 175, 176, 182, 185, 191, 207, 216, 217, 218, 233, 244, 245, 251, 257, 258, 259, 273], "95": [30, 58, 121, 133, 152, 169, 247, 273], "111": [30, 58, 77, 89, 106, 121, 126, 133, 160, 175, 177, 182, 212, 247, 273], "nrows_ncol": [30, 133], "label_mod": 30, "share_al": 30, "cbar_loc": [30, 133], "cbar_mod": [30, 133], "cbar_siz": [30, 133], "cbar_pad": [30, 133], "matshow": [30, 88, 133], "rot90": [30, 54, 65, 88, 91, 120, 133], "cm": [30, 78, 83, 88, 133], "bone": [30, 88, 133], "hot": [30, 90], "cbar_ax": [30, 133], "colorbar": [30, 54, 78, 80, 83, 86, 89, 90, 93, 97, 106, 133, 181, 245], "rdbu": 30, "lax": [30, 133], "set_xtick": [30, 91, 133], "set_ytick": [30, 91, 133], "spatial_error": 30, "reduct": [30, 45, 102, 132, 134, 148, 175, 176, 182, 230, 264, 273], "amount": [30, 82, 87, 98, 113, 135, 169, 176, 179, 181, 182, 222], "profil": [30, 45, 54, 62, 73, 104, 112, 129, 130, 132, 134, 158, 164, 168, 170, 171, 176, 178, 181, 182, 183, 185, 188, 189, 206, 230, 240, 243, 253, 262, 264, 268, 273], "matlab": [30, 147, 169, 250, 256, 270], "franco": [30, 40, 72, 83, 94, 128, 129, 130, 152, 170, 174, 175, 176, 178, 179, 182, 188, 189, 220, 230, 273], "pestilli": [30, 40, 72, 94, 129, 130, 152, 174, 175, 176, 178, 179, 182, 188, 189, 220, 230, 273, 274, 275], "webpag": 30, "jason": [30, 40, 72, 77, 78, 83, 89, 94, 128, 170, 175, 178, 179, 182, 220, 273], "yeatman": [30, 40, 72, 77, 78, 83, 89, 94, 128, 170, 175, 178, 179, 182, 220, 273, 274, 275], "kendrick": [30, 40, 94, 175, 179, 182, 220, 273], "kai": [30, 40, 94, 175, 179, 182, 220, 273, 274, 275], "brian": [30, 40, 56, 72, 77, 78, 83, 88, 89, 94, 100, 108, 109, 110, 120, 128, 151, 161, 169, 170, 175, 178, 179, 182, 220, 273], "wandel": [30, 40, 72, 94, 128, 175, 178, 179, 182, 220, 273, 274, 275], "statist": [30, 45, 60, 64, 72, 76, 77, 82, 84, 94, 98, 108, 128, 150, 164, 168, 169, 175, 178, 179, 182, 188, 240, 248, 258, 264, 273], "infer": [30, 72, 77, 82, 117, 160, 179, 182, 259, 273], "1058": [30, 179, 242, 273], "1063": [30, 86, 160, 177, 179, 182, 215, 242, 273], "1038": [30, 56, 77, 78, 83, 86, 88, 89, 128, 129, 130, 151, 152, 170, 174, 175, 176, 178, 179, 182, 188, 189, 202, 230, 242, 273, 274, 275], "nmeth": [30, 179, 273], "3098": [30, 179, 263, 273], "906": [30, 241], "linear_fascicle_evalu": [30, 31, 246, 264], "82": [58, 118, 121, 247], "38": [58, 72, 73, 75, 82, 93, 94, 98, 102, 106, 109, 112, 119, 121, 139, 175, 247, 273], "716": 240, "examples_builtfiber_track": 31, "tracking_sfm": [31, 40, 264], "74": [58, 74, 82, 118, 121, 175, 247], "275": [121, 248], "tracking_rumba": [31, 39, 264], "59": [31, 39, 54, 58, 82, 93, 121, 175, 247, 264, 273], "861": 258, "tracking_probabilist": [31, 37, 264], "579": [37, 250], "tracking_stopping_criterion": [31, 41, 264], "845": 241, "tracking_bootstrap_peak": [31, 33, 264], "311": [121, 249], "tracking_pft": [31, 36, 264], "094": [], "tracking_ptt": [31, 38, 264], "47": [38, 44, 54, 58, 64, 65, 115, 121, 150, 164, 170, 175, 176, 247, 254, 257, 264, 273, 274, 275], "215": [31, 33, 38, 121, 175, 244, 264, 273], "tracking_introduction_eudx_1": [31, 35, 264], "216": [45, 71, 121, 248], "tracking_determinist": [31, 34, 264], "055": 34, "surface_se": [31, 32, 264], "361": [32, 121, 246, 249], "cortic": [32, 36, 128], "load_polydata": [32, 183], "get_actor_from_polydata": 32, "get_polydata_triangl": 32, "get_polydata_vertic": 32, "normals_from_v_f": 32, "mesh": [32, 164, 167, 169, 183, 258], "random_coordinates_from_surfac": [32, 183], "seeds_from_surface_coordin": [32, 183], "brain_lh": 32, "fury_surfac": 32, "polydata": [32, 173, 255], "extract": [32, 40, 45, 52, 55, 58, 73, 76, 77, 78, 84, 89, 93, 94, 111, 113, 114, 115, 117, 119, 130, 132, 134, 152, 153, 164, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 191, 202, 203, 204, 205, 224, 235, 241, 242, 245, 247, 248, 249, 251, 256, 262, 264, 273], "triangl": [32, 103, 127, 169, 179, 242], "vt": [32, 179], "surface_actor": 32, "500": [32, 45, 54, 71, 124, 125, 179, 182, 237, 249, 274, 275], "uncom": [32, 140, 141, 142], "600": [32, 50, 51, 73, 74, 75, 77, 82, 83, 87, 88, 93, 96, 98, 112, 113, 115, 116, 117, 118, 129, 140, 142, 151, 175, 176, 182, 240, 274, 275], "reset_camera": [32, 70, 139, 140, 142], "surface_seed1": 32, "nb_seed": [32, 179], "100000": 32, "nb_triangl": [32, 179], "trilinear": [32, 36, 41, 63, 168, 182, 231], "tri_idx": 32, "trilin_co": 32, "cartesian": [32, 45, 71, 73, 79, 89, 93, 127, 160, 169, 175, 177, 182, 210, 211, 272], "seed_pt": 32, "seed_n": 32, "seed_actor": 32, "dot_siz": 32, "outsid": [32, 41, 65, 92, 168, 171, 174, 179, 182, 231, 245, 246, 251, 259], "red": [32, 54, 59, 65, 72, 78, 103, 104, 109, 110, 113, 120, 135, 140, 152, 175, 181, 182, 222], "normal_length": 32, "normal_in": 32, "tile": [32, 90], "newaxi": [32, 251], "normal_out": 32, "normal_in_actor": 32, "normal_out_actor": 32, "visualis": [32, 44, 172, 173, 175, 242, 245, 271, 273, 276], "surface_seed2": 32, "etienn": [32, 113, 176, 181, 182, 222, 242, 258, 261, 273], "ong": [32, 113, 176, 181, 182, 222, 242, 258, 261, 273], "alessandro": [32, 39, 93, 175, 182, 273], "daducci": [32, 39, 93, 175, 182, 273, 274, 275], "169": [32, 121, 175, 242, 248, 273], "524": [32, 249, 273], "539": [32, 240, 273], "1016": [32, 33, 36, 41, 54, 55, 61, 62, 65, 70, 73, 75, 76, 77, 78, 80, 81, 82, 84, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 102, 103, 108, 109, 110, 112, 121, 124, 126, 152, 153, 157, 159, 160, 161, 162, 168, 169, 170, 171, 174, 175, 176, 177, 178, 182, 191, 208, 212, 224, 230, 233, 238, 242, 271, 273, 274, 275], "036": [32, 273], "small_spher": [33, 37, 39], "closestpeakdirectiongett": [], "stateful_tractogram": [33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 50, 51, 69, 104, 108, 112, 136, 183], "has_furi": [33, 34, 35, 36, 37, 38, 40, 41, 50, 51, 69, 108], "seed_mask": [33, 34, 35, 36, 37, 38, 39, 41, 50, 51, 69, 131, 133, 141, 151], "white_matt": [33, 34, 35, 37, 38, 39, 40, 41, 69, 131, 133, 136, 141], "serv": [33, 112, 130, 143, 175], "boot_dg_csd": [], "boot_streamline_gener": 33, "sft": [33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 69, 108, 136, 173, 252, 255, 260, 261, 262], "rasmm": [33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 50, 51, 69, 104, 108, 112, 173, 176, 183], "tractogram_bootstrap_dg": 33, "NOT": [33, 169, 176, 182, 242, 251, 253], "clip": [33, 74, 82, 93, 171, 174, 175, 182, 201, 207, 217, 218, 245, 246, 255], "min": [33, 65, 67, 90, 93, 103, 113, 131, 140, 142, 151, 168, 169, 172, 174, 175, 176, 183, 259, 262, 263], "peak_dg": [], "from_pmf": [], "peak_streamline_gener": 33, "closest_peak_dg_csd": 33, "tractogram_closest_peak_dg": 33, "jeffrei": [33, 175, 273], "sungwon": [33, 175, 182, 212, 273], "chung": [33, 45, 71, 87, 175, 182, 212, 256, 273], "pratik": [33, 133, 175, 273], "mukherje": [33, 133, 175, 273], "hess": [33, 169, 175, 273], "han": [33, 91, 92, 175, 182, 210, 211, 273], "roland": [33, 131, 133, 175, 179, 182, 212, 273], "henri": [33, 83, 128, 131, 133, 170, 175, 179, 182, 212, 273], "ball": [33, 45, 46, 49, 71, 79, 88, 99, 151, 175, 177, 182, 207, 217, 218, 264, 271, 273], "residu": [33, 53, 54, 55, 56, 58, 70, 164, 168, 174, 175, 259, 262, 273], "39": [33, 45, 58, 71, 73, 75, 82, 90, 93, 94, 98, 99, 101, 107, 121, 131, 133, 134, 138, 141, 169, 175, 243, 247, 273], "222": [33, 121, 175, 248, 264, 273], "2007": [33, 57, 58, 73, 75, 80, 88, 93, 97, 108, 109, 110, 156, 161, 171, 172, 175, 177, 182, 208, 255, 271, 273], "021": [33, 175, 273], "bagrat": [33, 131, 133, 151, 152, 153, 154, 179, 182, 237, 273], "phd": [33, 35, 54, 56, 69, 73, 77, 85, 89, 151, 162, 171, 175, 177, 182, 221, 237, 273], "thesi": [33, 35, 54, 56, 69, 73, 77, 85, 89, 151, 162, 171, 175, 177, 182, 221, 237, 273], "trajectori": [34, 36, 37, 45, 50, 51, 71, 76, 99, 128, 162, 164, 170, 175, 179, 182, 237, 238, 259, 264, 273], "pathwai": [34, 35, 37, 69, 129, 130, 131, 152, 162, 176, 178, 179, 182, 188, 189, 230, 273], "highest": [34, 65, 152, 162, 168, 169, 175, 176, 245, 273], "oppos": [34, 86, 162, 168, 179], "draw": [34, 76, 100, 106, 109, 162, 181, 254], "therefor": [34, 54, 58, 62, 77, 79, 80, 82, 84, 85, 87, 102, 103, 139, 140, 142, 147, 149, 162, 168, 169, 175, 271], "equival": [34, 82, 148, 162, 168, 169, 175, 177], "unlik": [34, 37, 162, 175], "tracker": [33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 69, 183], "deterministic_track": [34, 41, 50, 51, 183], "sc": [34, 37, 38, 50, 51, 92, 147, 175, 179], "streamline_gener": [34, 37, 38, 39, 40, 41, 50, 51, 136], "sh": [34, 36, 37, 41, 88, 95, 164, 172, 173, 174, 175, 179, 182, 193, 232, 237, 245, 251, 253, 255, 256, 259, 260, 262, 263, 271], "random_se": [34, 37, 38, 50, 51, 179, 182, 237, 238], "tractogram_determinist": 34, "direction": [35, 69, 90, 162], "tract": [35, 45, 65, 69, 78, 82, 104, 112, 113, 132, 134, 152, 162, 168, 175, 176, 178, 181, 182, 190, 222, 251, 253, 255, 261, 264, 273], "wide": [35, 69, 117, 162, 267], "internet": [35, 69, 94], "qualiti": [35, 53, 54, 65, 69, 83, 115, 128, 130, 161, 164, 168, 170, 173, 175, 176, 178, 179, 181, 182, 184, 245, 246, 251, 273], "basi": [35, 37, 69, 83, 87, 90, 95, 96, 160, 162, 164, 169, 170, 172, 175, 179, 182, 183, 193, 216, 232, 245, 247, 248, 251, 253, 255, 256, 258, 263, 271, 273], "peak_slic": [35, 69, 75, 93, 94, 245], "peak_dir": [35, 69, 73, 75, 93, 94, 173], "peaks_valu": [35, 69, 75, 93, 94, 173, 181, 182, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 229], "peak_valu": [35, 69, 74, 75, 85, 93, 94, 172, 173, 183, 249], "csa_direction_field": [35, 69], "sli": [35, 39, 52, 55, 56, 58, 69, 111], "set_axis_off": [35, 39, 52, 53, 55, 62, 67, 69, 79, 80, 83, 97, 111], "imshow": [35, 39, 41, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 65, 67, 69, 76, 78, 79, 80, 82, 83, 84, 86, 89, 90, 91, 93, 97, 101, 106, 111, 120, 136, 181], "grai": [35, 36, 39, 41, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 67, 69, 76, 77, 78, 83, 84, 86, 88, 89, 91, 101, 111, 120, 121, 136, 162, 168, 175, 181, 274, 275], "gfa_tracking_mask": [35, 69], "deriv": [35, 36, 54, 69, 73, 77, 78, 83, 84, 92, 98, 128, 147, 152, 157, 160, 168, 169, 170, 175, 176, 177, 179, 181, 182, 185, 206, 209, 272, 273], "grid": [35, 44, 45, 47, 69, 71, 74, 75, 87, 100, 110, 140, 142, 168, 175, 177, 179, 181, 182, 210, 211, 242, 249, 259], "togeth": [35, 55, 69, 81, 87, 88, 90, 101, 103, 124, 136, 139, 143, 148, 168, 169, 173, 175, 176, 179, 182, 203, 226, 251, 256], "streamlines_actor": [35, 39, 40, 69, 133, 141], "static": [35, 69, 96, 100, 101, 103, 104, 108, 109, 110, 153, 154, 161, 166, 168, 169, 173, 175, 181, 182, 184, 185, 186, 190, 233, 262, 274, 275], "tractogram_eudx": [35, 69], "softwar": [35, 40, 44, 69, 108, 109, 110, 139, 161, 169, 170, 175, 176, 182, 212, 267, 268, 271, 273, 281], "toward": [35, 36, 41, 69, 87, 100, 110, 148, 151, 162, 168, 169, 175, 181, 182, 237, 238, 272, 273], "accur": [35, 39, 69, 70, 77, 82, 93, 100, 151, 160, 162, 169, 171, 174, 175, 179, 182, 198, 199, 237, 260, 273], "kingdom": [35, 54, 56, 69, 73, 77, 89, 151, 162, 171, 175, 182, 221, 237, 273], "pve": [36, 41, 88, 120, 162, 176, 182, 191, 238, 250, 274, 275], "incorrectli": [36, 162], "corticospin": [36, 41, 65, 88, 112, 113, 120, 128, 152, 162, 175], "fluid": [36, 41, 84, 86, 88, 93, 120, 162, 169, 175, 182, 238, 273, 274, 275], "kept": [36, 75, 131, 162, 168, 169, 172, 179], "invalidpoint": [36, 41], "f_pve_csf": [36, 41], "f_pve_gm": [36, 41], "f_pve_wm": [36, 41], "stanford_pve_map": [36, 41, 162], "pve_csf_data": [36, 41], "pve_gm_data": [36, 41], "pve_wm_data": [36, 41], "_": [36, 41, 50, 51, 56, 70, 76, 81, 91, 92, 93, 96, 101, 103, 104, 108, 120, 121, 124, 130, 136, 169, 175, 179, 267, 268], "return_voxs": [36, 63, 79, 85, 168, 173], "dg": 245, "sh_to_pmf": [], "determin": [36, 41, 65, 73, 75, 86, 87, 88, 120, 136, 149, 171, 177, 179, 182, 183, 201, 208, 220, 271, 273], "invalid": [36, 41, 44, 79, 88, 89, 91, 92, 93, 168, 169, 173, 240, 244, 259], "cmc_criterion": 36, "from_pv": 36, "average_voxel_s": 36, "pft_back_tracking_dist": [36, 179], "distanc": [36, 102, 103, 104, 112, 113, 116, 117, 118, 133, 135, 147, 168, 169, 172, 173, 175, 176, 178, 179, 181, 182, 183, 190, 207, 208, 210, 211, 216, 217, 218, 222, 230, 238, 252, 258, 265, 272], "backtrack": [36, 41], "wm": [36, 54, 75, 88, 120, 121, 162, 175, 182, 219, 241, 260, 262, 274, 275], "csf": [36, 62, 84, 86, 87, 88, 93, 120, 175, 182, 244, 274, 275], "pft_front_tracking_dist": [36, 179], "event": [36, 96, 139, 169, 176, 181, 182, 242, 245, 274, 275], "particle_count": [36, 179], "min_wm_pve_before_stop": [36, 179, 182, 238], "gm": [36, 54, 88, 93, 120, 121, 169, 175, 182, 274, 275], "wm_pve": 36, "particularlyuseful": 36, "sub": [36, 40, 45, 54, 71, 72, 83, 84, 100, 128, 143, 168, 169, 175, 182, 245], "exit": [36, 41, 136, 245], "deep": [36, 70, 77, 164, 174, 182, 202, 255, 259, 263, 273], "pft_streamline_gen": 36, "max_cross": [36, 179], "maxlen": [179, 182, 237], "1000": [36, 40, 44, 45, 54, 56, 59, 61, 67, 70, 71, 73, 77, 79, 83, 88, 89, 94, 100, 101, 108, 127, 151, 168, 169, 170, 174, 175, 177, 178, 181, 182, 184, 222, 242, 267, 268, 273, 274, 275], "return_al": [36, 41, 179], "tractogram_pft": 36, "prob_streamline_gener": 36, "tractogram_probabilistic_cmc": 36, "whittingstal": [36, 41, 162, 170, 182, 238, 273], "rachid": [36, 41, 65, 80, 87, 90, 96, 97, 162, 170, 175, 177, 182, 200, 219, 238, 271, 273], "derich": [36, 41, 45, 65, 71, 80, 87, 90, 96, 97, 162, 170, 175, 177, 182, 200, 219, 238, 271, 273, 274, 275], "bias": [36, 41, 77, 102, 162, 169, 179, 182, 238, 273], "98": [36, 41, 58, 121, 140, 162, 164, 182, 238, 247, 273], "266": [36, 41, 121, 162, 182, 238, 248, 273], "278": [36, 41, 121, 162, 182, 238, 249, 273], "septemb": [36, 41, 90, 96, 108, 162, 165, 170, 174, 175, 182, 238, 273], "074": [36, 41, 162, 182, 238, 273], "robert": [36, 41, 65, 72, 78, 79, 83, 89, 128, 152, 170, 175, 178, 260, 271, 273], "jacqu": [36, 41, 73, 75, 88, 175, 179, 182, 208, 271, 273], "donald": [36, 41, 73, 75, 88, 175, 179, 182, 208, 271, 273], "tournier": [36, 41, 45, 71, 73, 75, 88, 172, 175, 179, 182, 208, 245, 271, 273], "calamant": [36, 41, 73, 75, 88, 175, 179, 182, 208, 271, 273], "alan": [36, 41, 73, 75, 88, 170, 175, 179, 182, 208, 271, 273], "connelli": [36, 41, 73, 75, 88, 175, 179, 182, 208, 271, 273], "62": [36, 41, 58, 70, 74, 82, 84, 93, 121, 151, 174, 175, 246, 247, 273], "1924": [36, 41, 251, 273], "1938": [36, 41, 255, 273], "06": [36, 41, 54, 58, 65, 73, 75, 77, 78, 86, 88, 89, 99, 108, 109, 110, 121, 134, 140, 157, 160, 161, 169, 175, 182, 208, 242, 243, 250, 252, 259, 271, 273], "005": [36, 41, 62, 73, 75, 88, 90, 152, 171, 175, 177, 182, 208, 271, 273], "mr": [37, 53, 54, 55, 57, 59, 65, 82, 86, 93, 120, 147, 156, 157, 159, 160, 162, 169, 170, 171, 175, 182, 215, 247, 263, 267, 273, 281], "probabilistic_track": [36, 37, 39, 50, 51, 183], "sf": [33, 37, 38, 39, 50, 51, 95, 169, 172, 175, 179, 245], "tractogram_probabilistic_sf": 37, "disadvantag": 37, "tend": [37, 58, 87], "ram": [37, 93, 175], "81": [37, 54, 57, 58, 74, 82, 89, 106, 118, 121, 140, 170, 175, 247, 252, 263, 273], "106": [37, 57, 58, 74, 82, 106, 121, 247], "76": [37, 54, 56, 57, 58, 72, 74, 82, 121, 140, 157, 171, 175, 182, 198, 199, 221, 243, 247, 273], "181": [37, 83, 118, 121, 128, 170, 248, 249, 273], "362": [37, 40, 91, 92, 94, 108, 121, 170, 175, 249, 273], "tractogram_probabilistic_sh": 37, "Not": [37, 150, 240], "attribut": [37, 44, 74, 75, 76, 77, 82, 86, 91, 118, 128, 168, 169, 170, 172, 173, 174, 175, 176, 177, 181, 182, 242, 244, 245, 252, 255, 257, 261], "return_sh": [37, 48, 94, 172], "fod_coeff": 37, "tractogram_probabilistic_sh_pfm": 37, "ptt_track": [38, 50, 51, 183], "tractogram_ptt": 38, "dogu": [38, 261, 273], "baran": [38, 261, 273], "yonggang": [38, 273], "ieee": [38, 57, 58, 80, 85, 87, 93, 97, 100, 101, 120, 156, 165, 168, 169, 171, 175, 182, 201, 207, 214, 217, 218, 219, 273, 274, 275], "transact": [38, 57, 58, 80, 85, 93, 97, 100, 101, 120, 156, 168, 171, 175, 182, 214, 219, 273, 274, 275], "2021": [38, 76, 77, 78, 89, 92, 139, 165, 170, 175, 252, 257, 258, 259, 273], "635": [38, 152, 240, 273], "647": [38, 245, 273], "1109": [38, 57, 58, 80, 85, 87, 93, 97, 100, 120, 156, 168, 169, 171, 175, 182, 207, 214, 217, 218, 219, 242, 273], "tmi": [38, 57, 58, 80, 85, 97, 100, 156, 168, 171, 175, 182, 214, 219, 273], "3034038": [38, 273], "richardson": [39, 81, 93, 124, 175, 178, 273], "luci": [39, 81, 93, 124, 175], "noncentr": [39, 93, 175, 182], "chi": [39, 62, 93, 169, 175, 182], "reflect": [39, 93, 131, 136, 149, 168, 175, 182, 231], "rumbasdmodel": [39, 93, 183], "transform_streamlin": [39, 40, 108, 139, 140, 183, 260, 261], "t1_aff": [39, 40], "voxelwis": [39, 93, 175, 182, 242], "tv": [39, 93, 171, 175, 182, 221], "use_tv": [39, 93, 175, 182], "although": [39, 54, 73, 76, 77, 87, 89, 90, 103, 157, 174, 175, 179], "wm_respons": [39, 93, 175], "n_iter": [39, 93, 175, 182], "200": [39, 45, 54, 58, 71, 75, 86, 90, 93, 109, 118, 121, 126, 139, 151, 170, 175, 182, 215, 242, 259, 261, 274, 275], "rumba_fit": [39, 93], "fodf": [39, 70, 73, 83, 88, 94, 160, 174, 175, 182, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 220, 240], "f_wm": [39, 93, 175, 183], "establish": [39, 77, 98, 168], "caution": [39, 90], "isotrop": [39, 45, 63, 71, 84, 87, 88, 93, 108, 135, 147, 168, 176, 177, 182, 183, 184, 185, 253, 255, 265], "bia": [39, 55, 87, 120, 164, 169, 171, 174, 182, 196, 240, 246, 251, 263, 273], "f_wm_tracking_mask": 39, "neg": [39, 44, 54, 58, 73, 74, 75, 77, 87, 88, 89, 133, 168, 169, 170, 171, 173, 175, 176, 182, 201, 208, 240, 242, 248, 254, 255, 257, 271, 273], "adher": 39, "manipul": [39, 44, 146, 167, 173], "tractogram_probabilistic_rumba": 39, "canal": [39, 45, 71, 81, 93, 124, 175, 182, 247, 273], "rodr": [39, 45, 71, 81, 93, 124, 175, 182, 273], "\u00ed": [39, 45, 71, 76, 81, 93, 124, 175, 182, 273], "guez": [39, 45, 71, 81, 93, 124, 175, 182, 273], "stamatio": [39, 93, 175, 182, 273], "sotiropoulo": [39, 45, 71, 93, 175, 182, 273], "santiago": [39, 93, 175, 182, 273], "aja": [39, 93, 175, 182, 273], "fern": [39, 93, 175, 182, 273], "\u00e1": [39, 45, 71, 81, 83, 93, 124, 128, 170, 175, 177, 182, 200, 273], "ndez": [39, 93, 175, 182, 273], "joaquim": [39, 93, 175, 182, 273], "radua": [39, 93, 175, 182, 273], "je": [39, 93, 175, 182, 273], "\u00fa": [39, 93, 169, 175, 182, 273], "yurramendi": [39, 93, 175, 182, 273], "mendizab": [39, 93, 175, 182, 273], "yasser": [39, 81, 93, 124, 175, 182, 273], "iturria": [39, 81, 93, 124, 175, 182, 273], "medina": [39, 81, 93, 124, 175, 182, 273], "lester": [39, 81, 93, 124, 175, 182, 273], "meli": [39, 81, 93, 124, 175, 182, 273], "garc": [39, 81, 93, 124, 175, 182, 273], "alem": [39, 81, 93, 124, 175, 182, 273], "\u00f3": [39, 53, 55, 56, 57, 58, 81, 93, 124, 156, 171, 175, 182, 198, 273], "mez": [39, 81, 93, 124, 175, 182, 273], "philipp": [39, 90, 93, 170, 175, 182, 255, 256, 257, 262, 263, 273, 274, 275], "thiran": [39, 93, 175, 182, 273], "salvador": [39, 93, 175, 182, 273], "sarr": [39, 93, 175, 182, 273], "edith": [39, 93, 175, 182, 273], "pomarol": [39, 93, 175, 182, 273], "clotet": [39, 93, 175, 182, 273], "raymond": [39, 93, 169, 175, 182, 273], "multichannel": [39, 93, 175, 182, 273], "e0138910": [39, 93, 175, 182, 273], "0138910": [39, 93, 175, 182, 273], "sfm": [40, 45, 71, 99, 182, 183, 213, 214, 220, 241, 242, 244, 250, 254, 255, 259, 262, 264], "select_random_set_of_streamlin": [40, 44, 130, 183], "freesurf": [40, 136, 170], "canon": [40, 175, 179], "deconvolv": [40, 75, 81, 124, 160, 175], "symmetr": [40, 45, 83, 94, 95, 103, 105, 107, 108, 117, 158, 164, 166, 168, 169, 173, 175, 179, 181, 182, 213, 230, 245, 246, 249, 255, 264, 267, 268, 271, 273], "sf_model": [40, 94], "sparsefasciclemodel": [40, 94, 183], "l1_ratio": [40, 94, 175, 182, 220], "001": [40, 65, 75, 80, 86, 88, 93, 94, 97, 104, 168, 169, 173, 175, 179, 182, 185, 212, 213, 220, 273], "pnm": 40, "suffici": [40, 45, 47, 71, 93, 175, 249], "high": [40, 45, 53, 54, 58, 65, 71, 75, 77, 83, 84, 86, 87, 88, 95, 98, 115, 127, 147, 168, 171, 174, 175, 176, 177, 179, 182, 190, 213, 244, 254, 273, 274, 275], "sake": [40, 56, 73, 88], "subject": [40, 61, 82, 84, 90, 92, 98, 103, 104, 112, 128, 136, 139, 147, 152, 153, 156, 159, 169, 170, 174, 175, 176, 178, 182, 187, 188, 189, 206, 262, 266, 273, 274, 275, 279, 280], "anatomi": [40, 44, 112, 131, 133, 150, 164, 182, 190, 192, 195, 222, 223], "throughout": [40, 104, 168], "subset": [40, 168, 174], "plot_streamlin": 40, "tractogram_sfm": 40, "tractogram_sfm_detr": 40, "aviv": [40, 94, 175, 182, 220, 273], "mezer": [40, 94, 175, 182, 220, 273, 274, 275], "accuraci": [40, 72, 75, 77, 87, 92, 94, 108, 168, 174, 175, 176, 182, 220, 258, 273, 274, 275], "april": [40, 55, 83, 87, 94, 112, 153, 165, 168, 171, 174, 175, 176, 182, 196, 213, 220, 224, 230, 233, 273], "0123272": [40, 94, 175, 182, 220, 273, 274, 275], "fa": [41, 47, 56, 65, 67, 74, 75, 77, 82, 83, 84, 88, 90, 91, 92, 93, 98, 108, 128, 139, 140, 151, 152, 160, 168, 169, 170, 173, 175, 178, 181, 182, 183, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 228, 229, 237, 245, 247, 249, 250, 252, 253, 274, 275, 277], "endpoint": [41, 103, 117, 136, 182, 183, 210, 211], "outsideimag": [41, 242], "trackpoint": [41, 251], "deterministicmaximumdirectiongett": [], "tensormodel": [41, 65, 72, 75, 77, 82, 84, 90, 98, 183, 242, 247, 253, 260, 277], "fractional_anisotropi": [41, 75, 82, 83, 183], "scalar": [41, 45, 71, 79, 83, 87, 99, 117, 128, 140, 160, 168, 174, 175, 179, 181, 240, 262, 264, 273], "metric_map": 41, "tensor_model": 41, "tenfit": [41, 75, 77, 82, 90, 249, 277], "eval": [41, 75, 81, 82, 93, 98, 124, 126, 151, 173, 175, 177, 179, 182, 183, 209, 212, 236], "threshold_criterion": 41, "mask_fa": 41, "xtick": [41, 54, 56, 58, 78, 84, 89], "ytick": [41, 54, 56, 58, 78, 84, 89], "nearest": [41, 50, 51, 70, 78, 80, 83, 86, 90, 97, 113, 136, 168, 169, 176, 178, 179, 182, 231, 261], "tight_layout": [41, 76, 90, 91, 106], "threshold_fa": 41, "tractogram_probabilistic_thresh_al": 41, "tractogram_deterministic_thresh_al": 41, "neighborhood": [41, 112, 176, 178, 182, 185], "binary_criterion": 41, "white_matter_mask": 41, "tractogram_deterministic_binary_al": 41, "include_map": [41, 182, 238], "exclude_map": [41, 182, 238], "stem": 41, "plausibl": [41, 77, 175], "act_criterion": 41, "121": [41, 58, 106, 121, 247], "122": [41, 58, 91, 106, 118, 121, 175, 182, 200, 247, 273], "act_map": 41, "tractogram_deterministic_act_al": 41, "tractogram_deterministic_act_valid": 41, "cut": [41, 174, 175, 181, 273], "subcort": 41, "986": [43, 44, 242], "examples_builtfile_format": 43, "streamline_format": [43, 44, 264], "complex": [44, 79, 131, 149, 164, 175, 182, 219, 226, 259, 269, 271, 273], "question": [44, 65, 136, 166, 179, 244, 255, 261, 262, 266, 280], "fetcher": [44, 78, 86, 90, 100, 108, 139, 164, 174, 183, 241, 242, 245, 248, 249, 251, 253, 254, 255, 256, 258, 260, 262], "fetch_file_format": [44, 183], "get_file_format": [44, 183], "create_nifti_head": [44, 183], "get_reference_info": [44, 183], "is_header_compat": [44, 183], "cc_m_sub": 44, "laf_m_sub": 44, "lpt_m_sub": 44, "raf_m_sub": 44, "rpt_m_sub": 44, "template0": 44, "nii": [44, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 65, 67, 70, 82, 83, 84, 100, 101, 110, 111, 128, 133, 136, 142, 143, 146, 147, 151, 152, 156, 157, 159, 160, 161, 162, 163, 166, 173, 182, 184, 185, 186, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 229, 231, 232, 234, 235, 240, 244, 255, 260, 277], "gz": [44, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 65, 67, 70, 82, 83, 84, 100, 101, 110, 111, 128, 133, 136, 139, 142, 143, 146, 151, 152, 156, 157, 159, 160, 161, 162, 163, 166, 173, 182, 184, 185, 186, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 229, 231, 232, 234, 235, 255, 260, 277], "bundles_filenam": 44, "ref_anat_filenam": 44, "basenam": [44, 50, 51, 143, 173], "reference_anatomi": 44, "cc_trk": 44, "cc_sft": 44, "laf_sft": 44, "raf_sft": 44, "998783": 44, "041415": 44, "026771": 44, "109": [44, 58, 121, 247, 273], "003548": 44, "044491": 44, "990912": 44, "126939": 44, "126": [44, 58, 65, 106, 109, 118, 121, 164, 247], "781647": 44, "021270": 44, "127975": 44, "991549": 44, "033348": 44, "000000": [44, 67, 80, 97], "224": [44, 118, 121], "140": [44, 56, 58, 90, 102, 103, 112, 121, 139, 153, 161, 168, 170, 182, 233, 247, 273, 274, 275], "voxel_ord": [44, 173, 183], "ra": [44, 108, 139, 151, 169, 173, 273], "streamline_count": 44, "6276": 44, "point_count": 44, "205884": 44, "data_per_streamlin": [44, 173, 182, 183, 237, 238, 262], "data_per_point": [44, 173, 183, 259], "anywai": [44, 267, 268], "lpt_sft": 44, "bbox_valid_check": [44, 104, 108, 112, 113, 115, 116, 117, 118, 128, 129, 173, 176], "rpt_sft": 44, "nifti1": [44, 170, 182, 205, 206, 223, 226, 235], "nifti1imag": [44, 74, 76, 77, 79, 80, 85, 97, 168, 170, 173], "trkfile": [44, 173], "nifti1head": [44, 173], "dict": [44, 168, 169, 170, 171, 173, 174, 175, 179, 181, 182], "9878335e": 44, "1415159e": 44, "6770778e": 44, "0900355e": 44, "4491168e": 44, "9091226e": 44, "2693870e": 44, "2678165e": 44, "1270305e": 44, "2797531e": 44, "9154925e": 44, "7033348e": 44, "0000000e": 44, "accept": [44, 165, 176, 247, 253], "varieti": [44, 87, 101, 117, 160], "fake": 44, "wish": [44, 93, 110], "freedom": [44, 100, 148, 168], "beginn": [44, 255], "create_tractogram_head": [44, 112, 183], "nifti_head": 44, "lpt": 44, "rpt": 44, "safer": [44, 100], "laf": 44, "raf": 44, "is_bbox_in_vox_valid": [44, 173, 183], "remove_invalid_streamlin": [44, 173, 183], "removing_invalid_coordin": 44, "to_voxmm": [44, 173, 183], "to_rasmm": [44, 173, 183], "voxmm": [44, 173, 176, 179, 183], "subsampl": [44, 92, 168, 179], "mi": [44, 100, 101, 168, 173, 182, 184, 259], "corner": [44, 101, 169, 173, 174, 179, 245, 252], "to_corn": [44, 173, 183], "cc_streamlines_vox": 44, "laf_streamlines_vox": 44, "raf_streamlines_vox": 44, "lpt_streamlines_vox": 44, "rpt_streamlines_vox": 44, "reus": [44, 65, 175, 252], "space_attribut": [44, 112, 173, 183], "cc_densiti": 44, "laf_dens": 44, "raf_dens": 44, "lpt_densiti": 44, "rpt_densiti": 44, "explicitli": [44, 87, 97, 168, 169, 175, 176, 182, 191, 241, 242, 251, 253, 262], "care": [44, 65, 79, 89, 93, 115, 164, 174, 175, 179, 182, 207, 217, 218], "metadata": [44, 173], "mention": [44, 56, 73, 77, 86, 88, 128, 152, 163, 242], "vox": [44, 136, 173, 183], "cc_1000": 44, "laf_1000": 44, "raf_1000": 44, "lpt_1000": 44, "rpt_1000": 44, "experi": [45, 86, 90, 109, 152, 170, 273], "synthet": [45, 50, 51, 164, 170, 274, 275], "alter": [45, 77, 179], "dwi": [45, 58, 60, 62, 64, 65, 70, 83, 84, 87, 89, 90, 100, 121, 147, 151, 156, 160, 164, 168, 169, 170, 171, 174, 175, 176, 178, 179, 181, 182, 191, 234, 253, 255, 256, 261, 263, 264, 273, 277], "piesno": [45, 60, 64, 164, 183, 240, 241, 242, 244, 249, 264, 273], "nlmean": [45, 53, 60, 64, 89, 143, 158, 182, 183, 200, 240, 241, 242, 249, 253, 258, 262, 264], "supervis": [45, 60, 64, 77, 164, 171, 182, 201, 257, 264, 273], "independ": [45, 60, 64, 77, 89, 115, 171, 175, 182, 256, 263, 264], "pca": [45, 58, 60, 64, 77, 88, 89, 158, 164, 171, 179, 182, 198, 199, 242, 243, 245, 251, 256, 260, 261, 262, 264, 273], "empir": [45, 53, 60, 64, 89, 179, 264], "soft": [45, 57, 60, 64, 171, 264], "ascm": [45, 57, 60, 64, 264], "marcenko": [45, 55, 60, 64, 77, 158, 171, 182, 198, 199, 264], "pastur": [45, 55, 60, 64, 77, 158, 171, 182, 198, 199, 264], "suppress": [45, 53, 56, 60, 64, 77, 84, 87, 156, 158, 171, 242, 243, 244, 245, 264], "gibb": [45, 60, 64, 77, 158, 164, 182, 183, 198, 199, 221, 251, 252, 253, 255, 256, 258, 261, 264, 273], "oscil": [45, 60, 64, 77, 87, 96, 158, 175, 264, 273], "singl": [45, 54, 65, 67, 70, 71, 73, 74, 75, 77, 79, 83, 84, 89, 92, 93, 94, 98, 99, 101, 103, 104, 106, 126, 127, 128, 133, 136, 147, 149, 151, 153, 154, 160, 164, 168, 169, 171, 173, 174, 175, 176, 177, 179, 182, 186, 191, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 228, 240, 245, 251, 253, 254, 256, 260, 264, 265, 273], "sl": [45, 71, 131, 241], "nnl": [45, 71, 169, 182, 220], "ye": [45, 71, 147], "typic": [45, 71, 77, 92, 94, 100, 108, 136, 156, 173, 175, 176, 177, 178, 179, 182, 267, 268], "1200": [45, 71, 88, 139, 141, 142, 151, 242, 274, 275], "success": [45, 71, 173, 174, 175, 279], "basser": [45, 55, 71, 82, 87, 90, 96, 160, 171, 175, 177, 182, 212, 267, 273], "bmlebihan94b": [45, 71, 273], "cjp05": [45, 71, 273], "clh06": [45, 71, 273], "yendiki": [45, 71, 98, 273], "ykk": [45, 71, 273], "fwdti": [45, 71, 84, 183, 242, 243, 251, 254], "32": [45, 55, 57, 58, 64, 71, 87, 90, 92, 99, 100, 101, 106, 121, 168, 169, 174, 175, 177, 181, 182, 184, 210, 211, 240, 244, 247, 249, 250, 273], "pasternak": [45, 71, 84, 91, 92, 175, 273], "psg": [45, 71, 273], "09": [31, 45, 58, 71, 84, 90, 121, 134, 152, 170, 175, 177, 253, 255, 256, 264, 273, 274, 275], "dual": [45, 71], "echo": [45, 71, 86, 147, 160, 170, 177, 182, 212, 215, 267, 269, 273], "epi": [45, 71], "acquir": [45, 53, 54, 55, 57, 58, 61, 62, 67, 71, 75, 76, 77, 78, 83, 84, 86, 89, 91, 92, 96, 126, 147, 157, 159, 160, 169, 170, 171, 175, 182, 221], "2500": [45, 59, 71, 96, 127, 175, 259, 274, 275], "jensen": [45, 71, 77, 78, 89, 160, 175, 182, 209, 273], "jhr": [45, 71, 273], "dela": [45, 71, 77, 87, 92, 170, 175, 260, 261, 273], "haij": [45, 71, 77, 87, 92, 170, 175, 260, 261, 273], "delahaijeozarslanf20": [45, 71, 273], "micro": [45, 71, 82, 99, 160, 242, 264], "wmti": [45, 71, 99, 251, 264], "increment": [45, 71, 169], "fiereman": [45, 54, 56, 58, 71, 78, 157, 160, 171, 175, 182, 198, 199, 273], "fjh11": [45, 71, 273], "tabesh": [45, 71, 77, 78, 175, 182, 209, 273], "tjah11": [45, 71, 273], "netohenriques18": [45, 71, 273], "7t": [45, 58, 71], "3000": [45, 71, 151, 170, 262, 274, 275], "aganj": [45, 47, 71, 74, 151, 175, 177, 182, 207, 217, 218, 273], "westin": [45, 71, 91, 92, 169, 170, 175, 248, 273], "ivim": [45, 71, 99, 158, 164, 170, 182, 183, 215, 242, 245, 246, 251, 252, 255, 259, 260, 264, 274, 275], "le": [45, 65, 71, 80, 82, 86, 97, 152, 160, 169, 175, 179, 182, 212, 215, 273], "bihan": [45, 65, 71, 80, 82, 86, 97, 160, 175, 182, 212, 215, 273], "lebihanbl": [45, 71, 273], "88": [45, 54, 58, 71, 74, 82, 98, 102, 118, 121, 136, 247, 273], "frf": [45, 71, 182, 208, 273], "sdt": [45, 71, 175, 182, 219, 240, 241, 248, 251], "qbi": [45, 71, 147, 265, 271], "60": [45, 53, 58, 67, 71, 79, 80, 81, 83, 85, 89, 91, 93, 95, 97, 121, 124, 127, 130, 133, 135, 147, 164, 170, 175, 179, 247, 263, 273, 274, 275], "ddknoschea09": [45, 71, 273], "dsi": [45, 71, 85, 97, 99, 123, 125, 147, 164, 170, 182, 183, 210, 211, 240, 242, 247, 248, 249, 263, 264, 265, 273, 274, 275], "515": [45, 59, 71, 90, 170, 249, 273], "encod": [45, 71, 76, 89, 91, 92, 164, 168, 169, 170, 173, 174, 175, 262, 267, 273], "000": [31, 45, 49, 68, 71, 122, 145, 175, 264], "subsequ": [45, 71, 94, 171, 175], "studi": [45, 71, 78, 83, 87, 90, 98, 128, 169, 170, 174, 175, 182, 196, 206, 255, 273, 274, 275], "half": [45, 71, 72, 91, 169, 175, 179, 182, 237, 238], "wedeen": [45, 71, 79, 85, 175, 182, 214, 273], "ww": [45, 71, 273], "sjx": [45, 71, 273], "dsid": [45, 71, 99, 123, 125, 264], "203": [45, 71, 79, 80, 85, 97, 121, 170, 248, 273, 274, 275], "radiu": [45, 53, 55, 71, 109, 113, 156, 168, 169, 171, 175, 176, 177, 179, 181, 182, 185, 198, 199, 201, 227, 258, 259, 267, 272], "4000": [45, 71, 274, 275], "crodriguezimalemangomezmgarcia10": [45, 71, 273], "258": [45, 71, 121, 253], "opdt": [45, 71, 182, 207, 217, 218], "tuch": [45, 71, 79, 175, 273], "tuc04": [45, 71, 273], "dafd07": [45, 71, 273], "trist": [45, 71, 175, 273], "vega": [45, 71, 83, 128, 170, 175, 273], "tristanvafernandezw09": [45, 71, 273], "shore": [45, 71, 99, 183, 245, 248, 249, 252, 259, 264, 265, 273], "514": [45, 71, 81, 124, 249], "five": [45, 71, 73, 174, 175], "lattic": [45, 71, 109, 181], "md13": [45, 71, 273], "\u00f6": [45, 62, 65, 71, 77, 83, 87, 90, 91, 92, 96, 128, 170, 171, 175, 177, 182, 219, 273], "zarslan": [45, 62, 71, 77, 83, 87, 90, 91, 92, 96, 128, 170, 171, 175, 273], "ozarslankb08": [45, 71, 273], "ozarslank": [45, 71, 273], "six": [45, 71, 82, 96, 160, 175, 248, 251], "5000": [45, 59, 71, 89, 95, 127, 169, 175], "6000": [45, 71], "87": [45, 55, 58, 71, 82, 98, 121, 179, 247, 261], "170": [45, 71, 86, 90, 112, 121, 153, 168, 176, 182, 224, 230, 233, 248, 273, 274, 275], "olson": [45, 71, 273], "oam19": [45, 71, 273], "mapl": [45, 71, 87, 164, 175, 243, 244, 273], "wu": [45, 71, 80, 87, 97, 120, 175, 273], "minn": [45, 71], "hcp": [45, 58, 70, 71, 87, 121, 164, 170, 175, 182, 191, 206, 240, 245, 249, 254, 259, 260, 262, 273, 274, 275], "fwcd16": [45, 71, 273], "tcgc04": [45, 71, 273], "tcc07": [45, 71, 273], "sm": [45, 71], "mt": [45, 71, 90, 169, 170], "jeurissen": [45, 54, 71, 75, 77, 88, 93, 157, 175, 271, 273], "jtd": [45, 71, 273], "forecast": [45, 71, 99, 164, 182, 183, 213, 244, 245, 264], "aea": [45, 71, 273], "1480": [45, 71, 244], "36": [45, 58, 64, 71, 80, 89, 91, 97, 99, 121, 169, 175, 182, 247, 273], "anderson": [45, 70, 71, 83, 128, 170, 174, 175, 182, 196, 213, 273], "and05": [45, 71, 273], "256": [45, 71, 86, 101, 107, 118, 120, 121, 151, 164, 168, 169, 174, 176, 182, 185, 249, 255], "crodriguezd": [45, 71, 273], "qti": [45, 71, 76, 99, 164, 181, 183, 260, 264, 273], "250": [45, 71, 121, 142, 160, 164, 168, 175, 182, 233], "stick": [45, 71, 89, 127, 175, 177], "prolat": [45, 71, 75, 94, 175, 177, 247], "plane": [45, 71, 87, 90, 126, 139, 142, 149, 160, 169, 175, 179, 251, 267, 272], "wkp": [45, 71, 273], "120": [45, 54, 58, 71, 77, 100, 101, 121, 139, 157, 168, 247, 254, 273, 274, 275], "morez": [45, 71, 273], "msdendekk": [45, 71, 273], "ideal": [45, 58, 71, 175, 271], "217": [45, 71, 92, 121, 170, 248], "herberthson": [45, 71, 92, 273], "hbh": [45, 71, 273], "jone": [45, 59, 65, 71, 98, 169, 175, 182, 209, 212, 273], "jhs99": [45, 71, 273], "qtau": [45, 71, 90, 164, 245], "strength": [45, 71, 82, 90, 147, 160, 168, 169, 170, 175, 177, 182, 190, 210, 211, 273, 274, 275], "fp": [45, 71, 273], "dell": [45, 71, 88, 93, 175, 273], "acqua": [45, 71, 88, 93, 175, 273], "dellacqualcs14": [45, 71, 273], "smt": [45, 71, 83, 89, 175, 182, 213, 273], "smt2": [45, 71, 164, 175, 256], "72": [45, 56, 58, 71, 77, 78, 82, 88, 89, 106, 121, 151, 164, 175, 176, 247, 259, 273, 274, 275], "\u03bcm": [45, 71], "rapid": [45, 71, 149], "kaden": [45, 71, 83, 89, 175, 182, 213, 273], "kkc": [45, 71, 273], "netohenriquesjs19": [45, 71, 273], "cti": [45, 71, 99, 164, 170, 183, 262, 264], "netohenriquesjs20": [45, 71, 273], "netohenriquesjs21": [45, 71, 273], "novello": [45, 71, 76, 273], "nnetohenriquesi": [45, 71, 273], "spectrum": [45, 71, 81, 99, 124, 167, 182, 210, 211, 264, 273], "correl": [45, 50, 51, 71, 99, 108, 109, 110, 156, 161, 164, 168, 169, 175, 178, 182, 185, 242, 253, 262, 264, 273], "histolog": [45, 71, 99, 174, 264], "resdnn": [45, 71, 99, 164, 170, 174, 259, 264], "elimin": [45, 71, 99, 175, 242, 251, 256, 264, 273], "contamin": [45, 71, 99, 175, 264], "intravoxel": [45, 71, 99, 158, 175, 182, 215, 264, 273], "bingham": [45, 71, 99, 164, 183, 253, 264, 273], "msdki": [45, 54, 71, 77, 99, 183, 262, 264], "qt": [45, 71, 99, 170, 175, 264, 273, 274, 275], "buan": [45, 104, 132, 134, 158, 164, 168, 181, 182, 222, 253, 255, 256, 257, 264], "score": [45, 72, 131, 132, 134, 152, 176, 179, 245, 264], "creation": [45, 117, 132, 134, 164, 176, 240, 245, 247, 253, 264], "afq": [45, 132, 134, 251, 253, 258, 264], "outlier": [45, 77, 98, 112, 132, 134, 168, 175, 182, 209, 212, 245, 264, 273], "confid": [45, 132, 134, 169, 179, 264, 273], "index": [45, 50, 51, 73, 79, 87, 90, 98, 108, 132, 134, 168, 169, 175, 176, 177, 178, 179, 181, 182, 205, 235, 242, 247, 248, 251, 253, 254, 259, 260, 262, 264, 273], "groupwis": [45, 105, 107, 164, 168, 260, 264], "diffeomorph": [45, 105, 107, 108, 158, 164, 166, 168, 181, 182, 185, 186, 246, 249, 256, 260, 264, 273], "fuzzi": [45, 105, 107, 245, 264], "nonrigid": [45, 105, 107, 158, 182, 190, 264], "deform": [45, 100, 101, 104, 105, 106, 107, 109, 158, 168, 179, 181, 182, 185, 190, 244, 252, 255, 262, 264, 273], "classif": [45, 56, 88, 114, 119, 156, 164, 170, 176, 242, 253, 254, 255, 264], "dam": [45, 114, 119, 164, 182, 191, 253, 254, 264], "examples_built_python": 45, "zip": [45, 90, 115, 116, 117, 118, 262], "examples_built_jupyt": 45, "mrm": [47, 54, 56, 58, 74, 77, 79, 83, 84, 89, 93, 98, 151, 157, 160, 169, 170, 171, 175, 177, 182, 198, 199, 209, 212, 213, 221, 271, 273], "maskdata": [47, 48, 54, 56, 74, 78, 82, 89], "numpass": [47, 48, 52, 54, 56, 74, 77, 78, 82, 88, 89, 93, 108, 109, 110, 111, 121, 151, 176, 182, 227], "autocrop": [47, 48, 52, 54, 56, 74, 77, 78, 82, 89, 111, 176, 182, 227], "dilat": [47, 48, 54, 56, 74, 77, 78, 82, 89, 136, 176, 182, 227], "instanti": [47, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 96, 97, 100, 109, 182], "csamodel": [47, 74, 136], "mainli": [47, 65, 74, 75, 116, 160, 174], "start_tim": [47, 48], "processor": 47, "system": [47, 48, 58, 59, 93, 131, 133, 135, 136, 139, 151, 163, 164, 168, 169, 170, 171, 172, 175, 179, 181, 182, 201, 248, 253, 255, 262, 271, 272, 273, 279], "sens": [47, 62, 87, 90, 93, 96, 106, 133, 171, 175, 182, 266, 268, 273], "csapeaks_parallel": 47, "return_odf": [47, 48, 74, 85, 172], "normalize_peak": [47, 48, 74, 85, 93, 172, 175, 182, 210, 211, 214, 216], "npeak": [47, 48, 93, 172, 173, 175, 182, 209, 212, 216, 251], "time_parallel": [47, 48], "ran": [47, 48], "63": [47, 54, 55, 58, 83, 102, 121, 175, 182, 213, 247, 273], "82968807220459": 47, "csapeak": [47, 74, 136], "time_singl": [47, 48], "speedup": [47, 48, 117, 164], "22465348243713": 47, "961855952370974": 47, "frozen": [47, 48, 249], "__name__": [47, 48], "__main__": [47, 48], "freeze_support": [47, 48], "672": [47, 240], "reconst_csa_parallel": [47, 49, 264], "37": [48, 58, 64, 90, 121, 170, 175, 182, 247, 273], "cpu": [48, 50, 51, 157, 248], "durat": [48, 82, 90, 147, 160, 169], "csd_peaks_parallel": 48, "csd_peak": [48, 75], "81443166732788": 48, "509785413742065": 48, "478413208789762": 48, "610": [48, 138, 142, 240], "reconst_csd_parallel": [48, 49, 264], "163": [121, 248, 255], "examples_builtmultiprocess": 49, "tracking_fast_tractographi": [49, 51, 264], "881": [51, 242, 243, 273], "ndimag": [50, 51, 65, 70, 78, 136, 259], "binary_eros": [50, 51], "pearsonr": [50, 51, 72], "disco": [45, 46, 49, 51, 170, 174, 253, 264, 273], "ground": [50, 51, 70, 81, 89, 92, 124, 174, 181], "truth": [50, 51, 70, 81, 89, 92, 124, 174, 181], "fname": [50, 51, 52, 100, 101, 103, 104, 106, 108, 109, 110, 111, 115, 116, 117, 118, 130, 143, 168, 169, 170, 173, 176, 181, 182], "disco1": [50, 51], "disco1_fnam": [50, 51], "gt_connectome_fnam": [50, 51], "disco1_connectivity_matrix_cross": [50, 51], "sectional_area": [50, 51], "gt_connectom": [50, 51], "loadtxt": [50, 51, 58, 81, 124, 170, 244], "upper": [50, 51, 56, 72, 75, 77, 84, 86, 89, 106, 169, 175, 176, 182, 225, 242], "triangular": [50, 51, 82, 169, 173, 175], "connectome_mask": [50, 51], "tril": [50, 51], "labels_fnam": [50, 51], "highres_disco1_roi": [50, 51], "labels_img": [50, 51, 136], "astyp": [50, 51, 52, 53, 57, 62, 65, 70, 80, 82, 101, 106, 111, 133, 136, 262], "tracks_fnam": [50, 51], "disco1_strands_trajectori": [50, 51], "gt_stream": [50, 51], "tractogram_ground_truth": [50, 51], "viridi": [50, 51], "connectome_ground_truth": [50, 51], "mask_fnam": [50, 51], "highres_disco1_mask": [50, 51], "seed_fnam": [50, 51], "seeding_mask": [50, 51], "tracking_mask": [50, 51], "data_fnam": [50, 51, 52, 111], "highres_disco1_dwi_riciannois": [50, 51], "snr10": [50, 51], "disco_gradients_dipi": [50, 51], "disco_gradi": [50, 51], "odf_spher": [50, 51], "plasma": [50, 51, 73, 74, 75, 81, 83, 87, 88, 93, 94, 96, 124, 127], "gt_odf": [50, 51], "nbr_thread": [50, 51, 179, 182, 237, 238], "det_stream": [50, 51], "tractogram_fast_determinist": 51, "flatten": [50, 51, 169, 171, 175], "connectome_determinist": [50, 51], "8666522736708173": [50, 51], "prob_stream": [50, 51], "tractogram_fast_probabilist": 51, "connectome_probabilist": [50, 51], "8712155682513311": [50, 51], "ptt_stream": [50, 51], "tractogram_fast_ptt": 51, "connectome_ptt": [50, 51], "8732068660131755": [50, 51], "b0": [52, 54, 56, 58, 59, 65, 67, 70, 73, 75, 77, 80, 89, 93, 100, 101, 108, 109, 110, 111, 121, 127, 151, 160, 164, 168, 169, 170, 171, 174, 175, 177, 182, 196, 197, 198, 201, 203, 204, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 240, 241, 245, 249, 262, 273, 274, 275], "histeq": [52, 111, 183], "save_nifti": [52, 53, 55, 56, 57, 58, 61, 62, 63, 65, 67, 70, 82, 111, 133, 136, 166, 183, 277], "scil_b0": [52, 111, 274, 275], "compani": [52, 111], "tesla": [52, 111, 170], "siemen": [52, 53, 62, 93, 111, 147, 170, 171, 176, 182, 270, 274, 275], "squeez": [52, 70, 100, 101, 110, 111, 250], "fine": [52, 73, 101, 106, 111], "tune": [52, 111], "num_pass": [52, 111], "yield": [52, 62, 111], "incorrect": [52, 111, 242, 254, 257, 262, 263], "float32": [52, 82, 106, 109, 111, 133, 172, 173, 182, 195, 258], "se_1": [52, 111], "5t": [52, 53, 111, 170, 176], "_binary_mask": [52, 111], "_mask": [52, 111], "middl": [52, 53, 54, 55, 56, 58, 67, 81, 90, 100, 110, 111, 115, 124, 135, 142, 170, 179, 181], "_median_otsu": [52, 111], "bbox_inch": [52, 53, 55, 57, 62, 65, 67, 79, 83, 101, 111, 120, 126, 127], "tight": [52, 53, 55, 57, 62, 65, 67, 79, 83, 101, 111, 120, 126, 127], "crop": [52, 82, 111, 174, 182, 183, 227], "largest": [52, 73, 111, 168, 172, 175, 182, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 220], "smaller": [52, 53, 75, 86, 87, 90, 92, 111, 112, 126, 129, 147, 168, 169, 171, 175, 176, 179, 181, 182, 198, 222, 237, 238], "auto": [52, 88, 111, 112, 169, 174, 181, 182, 227, 242, 249, 251, 255, 261], "b0_mask_crop": [52, 111], "mask_crop": [52, 111], "_binary_mask_crop": [52, 111], "_mask_crop": [52, 111], "826": [52, 64, 241], "brain_extraction_dwi": [52, 64, 264], "degre": [53, 73, 77, 81, 82, 87, 89, 100, 124, 148, 160, 168, 169, 175, 176, 177, 179, 253, 263, 271, 273], "sharp": [53, 175], "non_local_mean": [53, 57, 183, 251, 253], "radii": [53, 75, 169, 175, 177, 182, 208, 219, 245, 255], "involv": [53, 55, 75, 77, 88, 121, 156, 160, 161, 168, 182, 267], "wavelet": [53, 183], "decomposit": [53, 171, 175, 182, 198, 199, 259, 267, 268], "frequenc": [53, 54, 77], "adaptive_soft_match": [53, 183, 261], "noise_estim": [53, 57, 62, 98, 183, 253], "estimate_sigma": [53, 57, 98, 183, 240, 249, 253], "dwi_fnam": [53, 55, 56, 61, 62], "dwi_bval_fnam": [53, 55, 56, 61, 62], "dwi_bvec_fnam": [53, 55, 56, 61, 62], "sherbrooke_3shel": [53, 61, 62, 67, 155, 156, 159, 274, 275], "128": [53, 58, 67, 100, 118, 120, 121, 140, 168, 174, 247, 259, 273], "denoin": 53, "noqa": [53, 94, 118, 175], "e501": [53, 94, 118], "coil": [53, 57, 62, 93, 171, 175, 182], "sigma": [53, 55, 56, 57, 62, 65, 78, 98, 100, 101, 106, 108, 156, 168, 171, 175, 177, 182, 184, 198, 199, 200, 209, 212, 242, 259], "sharper": [53, 81, 124], "den_smal": 53, "patch_radiu": [53, 55, 56, 57, 77, 88, 156, 171, 182, 198, 199, 200, 201, 255, 262], "block_radiu": [53, 57, 171, 182, 200], "den_larg": 53, "varianc": [53, 55, 56, 76, 82, 87, 90, 156, 160, 168, 175, 182, 209, 212, 249, 251, 258], "itself": [53, 76, 90, 92, 117, 152, 170, 174, 175, 279], "den_fin": 53, "443907260894775": 53, "plot": [53, 54, 55, 56, 57, 72, 73, 77, 78, 84, 86, 87, 89, 90, 92, 94, 104, 109, 110, 120, 121, 126, 127, 128, 135, 152, 168, 175, 182, 183, 242, 244, 247, 249, 251, 276], "axial_middl": [53, 57, 67], "final_output": 53, "ab": [53, 54, 57, 74, 77, 84, 89, 101, 151, 160, 169, 175, 177, 179, 182, 209, 226, 247, 271, 273], "set_titl": [53, 54, 55, 56, 57, 58, 62, 76, 84, 86, 89, 90, 91, 93, 101, 106, 120], "denoised_ascm": 53, "dictat": [53, 92], "ascm_comparison": 53, "outperform": 53, "pierrick": [53, 55, 56, 57, 58, 156, 171, 182, 198, 273], "coup": [53, 55, 56, 57, 58, 156, 171, 176, 182, 198, 273], "\u00e9": [53, 55, 56, 57, 58, 86, 112, 139, 153, 156, 168, 169, 171, 175, 176, 177, 181, 182, 198, 200, 222, 224, 230, 233, 273], "jo": [53, 55, 56, 57, 58, 156, 169, 171, 182, 198, 273], "manj": [53, 55, 56, 57, 58, 156, 171, 182, 198, 273], "montserrat": [53, 55, 56, 57, 58, 156, 171, 182, 198, 273], "robl": [53, 55, 56, 57, 58, 156, 171, 182, 198, 273], "loui": [53, 55, 56, 57, 58, 113, 156, 170, 171, 176, 182, 198, 273], "collin": [53, 55, 56, 57, 58, 113, 152, 156, 170, 171, 176, 182, 198, 273, 274, 275], "multiresolut": [53, 57, 156, 171, 273], "iet": [53, 57, 156, 171, 273], "558": [53, 57, 156, 171, 245, 273], "568": [53, 57, 156, 171, 250, 273], "juli": [53, 54, 57, 62, 77, 78, 87, 89, 96, 100, 108, 109, 110, 156, 157, 161, 170, 171, 174, 175, 182, 198, 199, 273, 274, 275], "1049": [53, 57, 156, 171, 242, 273], "ipr": [53, 57, 156, 171, 273], "0161": [53, 57, 156, 171, 273], "980": [53, 64, 242], "denoise_ascm": [53, 64, 264], "fourier": [54, 87, 157, 175, 267, 273], "finit": [54, 90, 157], "corrupt": [54, 77, 84, 87, 89, 98, 157, 175], "artefact": [54, 58, 84, 89, 157, 159, 171, 175, 252], "manifest": [54, 77, 157, 249], "intens": [54, 62, 126, 157, 168, 171, 174, 175, 176, 179, 182, 191, 201, 242, 254], "adjac": [54, 93, 117, 157, 175, 176, 181, 262], "edg": [54, 77, 157, 169, 175, 179, 183, 247, 249, 279], "context": [54, 117, 120, 133, 157, 174], "magnifi": [54, 157], "chapter": 54, "read_cenir_multib": [54, 183], "gibbs_remov": [54, 183, 253, 256, 261], "t1_denoised_fnam": 54, "ap_fnam": 54, "tissue_data": [54, 120, 157, 274, 275], "axial_slic": [54, 78, 89], "t1_slice": 54, "figsiz": [54, 56, 58, 73, 76, 78, 80, 83, 84, 89, 90, 91, 93, 97, 106, 121, 181], "wspace": [54, 56, 58, 84, 89], "vmin": [54, 56, 73, 76, 77, 78, 84, 87, 89, 91, 97, 133, 181], "vmax": [54, 56, 73, 76, 77, 78, 84, 87, 89, 91, 133, 181], "400": [54, 86, 120, 121, 151, 170, 175, 176, 182, 215, 245, 273, 274, 275], "evid": [54, 251, 273], "artifici": [54, 98, 126, 174, 273], "fft": [54, 175, 256], "fft2": 54, "fftshift": 54, "c_crop": 54, "192": [54, 56, 77, 86, 88, 89, 104, 121, 170, 251, 273], "t1_gibb": 54, "ifft2": 54, "t1_unr": 54, "fig1": [54, 56, 58, 78, 84, 89], "subplot_kw": [54, 56, 58, 78, 84, 89], "ring": [54, 77, 157, 164, 171, 182, 198, 199, 221, 252, 258, 273], "fontsiz": [54, 90], "xy": [54, 82, 160, 169, 251, 267, 268], "70": [54, 58, 72, 80, 92, 97, 106, 118, 121, 126, 160, 170, 174, 175, 244, 247, 273], "xycoord": 54, "xytext": 54, "textcoord": 54, "offset": [54, 104, 168, 179, 181, 182, 195], "arrowprop": 54, "arrowstyl": 54, "75": [54, 58, 83, 106, 118, 121, 139, 142, 164, 169, 175, 179, 182, 213, 247, 260, 273], "gibbs_suppression_structur": 54, "uncorrect": 54, "panel": [54, 55, 56, 77, 78, 84, 89, 139, 142, 163, 183], "characterist": [54, 65, 154, 169], "appreci": [54, 56], "arrow": 54, "artefactu": 54, "compromis": [54, 56, 77], "contrast": [54, 56, 77, 78, 80, 82, 86, 87, 88, 89, 108, 135, 151, 156, 170, 175, 254, 273, 274, 275], "grei": [54, 88, 90, 93, 121, 136, 162, 175, 176, 182, 238], "highlight": [54, 152, 182, 222, 245, 249, 256], "kindli": [54, 56, 77, 78, 88, 89, 151, 272], "suppli": [54, 170, 175, 181], "romain": [54, 273], "valabr\u00e8gu": 54, "cenir": [54, 170, 240, 241, 244, 259, 274, 275], "icm": [54, 120, 176, 182, 191, 262], "pari": [54, 70, 273], "asarrai": [54, 83, 84, 115, 140, 253], "data_slic": [54, 86], "data_correct": [54, 61], "slice_axi": [54, 171, 182, 221], "dimension": [54, 55, 87, 90, 96, 117, 149, 156, 168, 169, 171, 174, 175, 176, 177, 179, 182, 212, 240, 242, 249, 262, 273], "fig2": [54, 56, 89], "10000": [54, 61, 86, 100, 101, 108, 168, 175, 181, 182, 184, 246, 251], "gibbs_suppression_b0": 54, "dki_model": [54, 89], "meandiffusionkurtosismodel": [54, 89, 183], "dki_fit": [54, 89, 253], "mskini": 54, "msk": [54, 89, 175, 183], "mskgib": 54, "fig3": [54, 56, 89], "gibbs_suppression_msdki": 54, "black": [54, 91, 140, 181, 249, 254, 255, 263], "ventricl": [54, 84, 101], "seem": [54, 89, 243, 244, 247, 249, 254], "jell": [54, 56, 58, 77, 83, 157, 171, 175, 182, 198, 199, 213, 273], "veraart": [54, 56, 58, 77, 83, 157, 171, 175, 182, 198, 199, 213, 273], "el": [54, 56, 58, 78, 157, 160, 171, 175, 182, 198, 199, 273], "ileana": [54, 157, 182, 198, 199, 273], "jelescu": [54, 157, 182, 198, 199, 273], "florian": [54, 58, 157, 182, 198, 199, 273], "knoll": [54, 58, 157, 182, 198, 199, 273], "dmitri": [54, 56, 58, 78, 157, 171, 182, 198, 199, 273], "novikov": [54, 56, 58, 78, 157, 171, 182, 198, 199, 273], "301": [54, 94, 121, 157, 182, 198, 199, 249, 273], "314": [54, 121, 157, 182, 198, 199, 249, 273], "1002": [54, 56, 58, 59, 74, 77, 79, 82, 83, 84, 89, 93, 98, 151, 157, 160, 168, 169, 171, 175, 177, 179, 182, 198, 199, 209, 212, 213, 221, 242, 271, 273], "25866": [54, 157, 182, 198, 199, 273], "daniel": [54, 73, 77, 83, 86, 89, 91, 92, 128, 129, 130, 152, 157, 169, 170, 174, 175, 176, 178, 182, 188, 189, 196, 213, 230, 245, 273], "perron": [54, 77, 157, 175, 273], "jan": [54, 73, 77, 88, 157, 171, 175, 273], "aelterman": [54, 77, 157, 273], "aleksandra": [54, 77, 157, 273], "pi\u017eurica": [54, 77, 157, 273], "ben": [54, 75, 77, 88, 93, 157, 175, 271, 273], "wilfri": [54, 77, 157, 273], "philip": [54, 77, 93, 120, 157, 170, 171, 176, 182, 273, 274, 275], "leeman": [54, 75, 77, 93, 157, 169, 175, 273], "441": [54, 57, 58, 77, 121, 156, 157, 171, 175, 273], "455": [54, 77, 121, 157, 249, 273], "068": [54, 77, 157, 273], "elia": [54, 171, 182, 221, 273], "kellner": [54, 171, 182, 221, 273], "bibek": [54, 171, 182, 221, 273], "dhital": [54, 171, 182, 221, 273], "valerij": [54, 171, 182, 221, 273], "kiselev": [54, 171, 182, 221, 273], "marco": [54, 86, 87, 88, 171, 175, 182, 221, 273], "reisert": [54, 86, 171, 175, 182, 221, 256, 273], "subvoxel": [54, 171, 182, 221, 273], "1574": [54, 171, 182, 221, 245, 273], "1581": [54, 171, 182, 221, 245, 273], "26054": [54, 171, 182, 221, 273], "healthi": [54, 56, 73, 77, 83, 89, 92, 120, 128, 152, 164, 170, 171, 175, 182, 221, 273], "ag": [54, 56, 73, 77, 84, 89, 170, 171, 175, 182, 221, 273, 274, 275], "17863": [54, 56, 73, 77, 89, 171, 175, 182, 221, 273], "cam": [54, 56, 73, 77, 89, 171, 175, 182, 221, 273], "29356": [54, 56, 73, 77, 89, 171, 175, 182, 221, 273], "valabr": [54, 273], "\u00e8": [54, 273], "gue": [54, 273], "escienc": [54, 273], "faculti": [54, 273], "hdl": [54, 175, 273], "net": [54, 94, 169, 174, 175, 179, 182, 202, 248, 273], "1773": [54, 67, 139, 170, 273], "33311": [54, 170, 273], "559": [54, 64, 250], "denoise_gibb": [54, 64, 264], "explor": [55, 56, 77, 78, 88, 89, 108, 126, 151, 156, 160, 163, 175, 177, 273, 274, 275], "eigenvalu": [55, 75, 82, 93, 94, 126, 127, 156, 168, 171, 173, 175, 177, 179, 182, 198, 199, 209, 212, 219, 245, 267], "isbi2013_2shel": [55, 96, 274, 275], "koai": [55, 62, 84, 87, 90, 96, 171, 175, 273], "correct_bia": [55, 171], "9994478225708008": 55, "lowest": [55, 65, 152], "relationship": [55, 90, 136, 170, 171, 175, 179, 182, 198, 267, 268, 273], "tau_factor": [55, 171, 182, 198, 256], "denoised_arr": [55, 56, 58, 88, 121, 171], "taken": [55, 56, 104, 126, 168, 169, 170, 171, 175, 182, 198, 199, 201, 271], "slow": [55, 86, 115, 147, 160, 245], "76140713691711": 55, "gra": [55, 56, 58], "orig": [55, 56, 58], "den": [55, 56, 57, 58, 175, 273], "rms_diff": [55, 56, 58], "denoised_localpca": 55, "lui": [55, 56, 58, 88, 171, 175, 182, 198, 273], "concha": [55, 56, 58, 171, 182, 198, 273], "antonio": [55, 56, 58, 152, 153, 171, 175, 182, 198, 242, 273], "buad": [55, 56, 58, 171, 182, 198, 273], "overcomplet": [55, 56, 58, 158, 171, 182, 198, 273], "e73021": [55, 56, 58, 171, 182, 198, 273], "0073021": [55, 56, 58, 171, 182, 198, 273], "cheng": [55, 62, 84, 85, 86, 87, 90, 96, 121, 129, 130, 152, 153, 171, 174, 175, 176, 177, 178, 182, 188, 189, 191, 214, 230, 273], "guan": [55, 62, 84, 87, 90, 96, 171, 175, 273], "peter": [55, 82, 83, 87, 90, 96, 128, 160, 170, 171, 175, 177, 182, 212, 273], "magnitud": [55, 93, 104, 168, 169, 171, 175, 179, 181, 273], "179": [55, 121, 171, 248, 273], "317": [55, 121, 171, 249, 273], "322": [55, 121, 171, 243, 273], "2006": [55, 93, 108, 109, 110, 161, 169, 171, 175, 177, 182, 212, 252, 273], "jmr": [55, 62, 171, 273], "016": [55, 73, 75, 87, 88, 90, 102, 103, 112, 153, 161, 168, 170, 171, 175, 182, 208, 233, 271, 273], "087": [55, 64], "denoise_localpca": [55, 56, 64, 264], "exploit": [56, 157], "loss": [56, 58, 78, 94, 115, 169, 170, 174, 176, 182, 273], "princip": [56, 82, 90, 126, 127, 156, 169, 171, 175, 177, 179, 182, 198, 199, 212], "auxiliari": 56, "mppca": [56, 77, 88, 156, 164, 183, 252], "hansen": [56, 70, 77, 78, 88, 89, 151, 164, 174, 175, 273, 274, 275], "jespersen": [56, 76, 77, 78, 88, 89, 151, 175, 273, 274, 275], "mbyte": [56, 77, 79, 82, 87, 88, 89, 98], "cfin_multib": [56, 77, 78, 87, 88, 89, 121, 151, 156, 160, 274, 275], "simplic": [56, 73, 88, 117], "sel_b": [56, 88], "logical_or": [56, 75, 88], "96": [56, 58, 79, 80, 85, 87, 88, 97, 106, 121, 151, 247], "67": [56, 58, 75, 88, 93, 94, 121, 175, 249, 261, 273], "mp": [56, 77, 88, 148, 164, 179, 258], "6593279838562": 56, "slide": [56, 181], "compris": [56, 92, 179], "assess": [56, 77, 175, 181, 182, 184, 251, 273], "hspace": [56, 58, 84, 89], "denoised_mppca": 56, "dkimodel": [56, 77, 78], "diffusionkurtosismodel": [56, 77, 78, 89, 183], "dki_orig": 56, "dki_den": 56, "skoudoro": [56, 67, 77, 79, 84, 86, 87, 88, 91, 92, 93, 97, 104, 139], "appdata": [56, 77, 79, 84, 86, 87, 88, 91, 92, 93, 104], "continuum": [56, 77, 79, 84, 86, 87, 88, 91, 92, 93, 104], "anaconda3": [56, 77, 79, 84, 86, 87, 88, 91, 92, 93, 104], "env": [56, 77, 79, 84, 86, 87, 88, 91, 92, 93, 104], "py310": [56, 77, 79, 84, 86, 87, 88, 91, 92, 93, 104], "site": [56, 77, 79, 84, 86, 87, 88, 91, 92, 93, 104, 170, 249, 252], "2628": [56, 261], "runtimewarn": [56, 79, 84, 88, 91, 92, 93, 97, 249, 255], "overflow": [56, 240, 245, 249], "exp": [56, 91, 92, 175, 182, 226, 269], "md": [56, 75, 76, 77, 82, 83, 84, 88, 89, 91, 151, 152, 160, 169, 170, 175, 177, 178, 182, 183, 209, 212, 241, 242, 244, 252, 255], "mk": [56, 76, 77, 78, 89, 91, 175, 182, 183, 209], "fa_orig": 56, "fa_den": 56, "md_orig": 56, "md_den": 56, "mk_orig": 56, "min_kurtosi": [56, 78, 89, 175], "mk_den": 56, "0e": [56, 93, 106], "denoised_dki": 56, "std": [56, 62, 65, 90, 142, 175, 181, 182, 185, 209, 212, 240, 249], "return_sigma": [56, 171, 182, 199], "pca_sigma": 56, "mean_sigma": 56, "6833844": 56, "nomin": [56, 169], "34": [56, 58, 78, 84, 86, 99, 106, 121, 164, 175, 177, 182, 247, 256, 261, 273], "56180377412377": 56, "theori": [56, 58, 80, 97, 150, 169, 171, 175, 176, 182, 199, 254, 260, 273], "1582": [56, 58, 171, 182, 199, 245, 273], "1593": [56, 58, 171, 182, 199, 245, 273], "novemb": [56, 58, 128, 165, 169, 171, 175, 178, 182, 199, 271, 273], "26059": [56, 58, 171, 182, 199, 273], "sune": [56, 76, 77, 78, 88, 89, 151, 175, 273], "n\u00f8rh\u00f8j": [56, 77, 78, 88, 89, 151, 175, 273], "160072": [56, 77, 78, 88, 89, 151, 273, 274, 275], "august": [56, 77, 78, 88, 89, 102, 103, 112, 151, 153, 161, 165, 168, 170, 175, 182, 233, 273], "sdata": [56, 77, 78, 83, 88, 89, 128, 151, 170, 273, 274, 275], "847": [56, 64, 241], "denoise_mppca": [56, 64, 264], "boost": [57, 266], "decid": [57, 61, 87, 112, 139, 176], "3t": [57, 76, 170, 175, 176, 273], "ge": [57, 62, 93, 170, 171, 176, 182, 274, 275], "24268555641174316": 57, "pierr": [57, 58, 156, 171, 175, 273], "yger": [57, 58, 156, 171, 273], "prima": [57, 58, 156, 171, 182, 200, 273], "hellier": [57, 58, 156, 171, 273], "kervrann": [57, 58, 156, 171, 273], "christian": [57, 58, 83, 128, 156, 170, 171, 182, 200, 273], "barillot": [57, 58, 156, 171, 182, 200, 273], "blockwis": [57, 58, 156, 171, 273], "nonloc": [57, 58, 156, 171, 273], "425": [57, 58, 121, 156, 171, 249, 273], "2008967": [57, 58, 156, 171, 273], "906087": [57, 58, 156, 171, 273], "951": [57, 64, 242], "denoise_nlmean": [57, 64, 264], "rank": [58, 91, 156, 168, 175, 251, 267, 268], "oversampl": [58, 156], "classic": [58, 65, 109, 147, 267, 268, 269], "assumpt": [58, 62, 77, 86, 87, 90, 103, 256], "fluctuat": 58, "regressor": [58, 169], "train": [58, 70, 171, 174], "mathcal": [58, 176], "phi_": [58, 175], "y_": [58, 271], "fed": [58, 182], "phi": [58, 59, 89, 95, 126, 127, 168, 169, 175, 183, 247, 271, 272], "held": [58, 72, 174, 182, 196, 273], "mere": [58, 151], "nor": [58, 169, 176], "shift_intens": [58, 171], "clip_negative_v": [58, 171, 182, 201], "160": [58, 74, 82, 90, 121, 170, 248, 274, 275], "43": [58, 74, 82, 90, 121, 170, 175, 249, 273], "55it": 58, "03it": [58, 121], "38it": 58, "58": [58, 63, 65, 78, 121, 151, 160, 168, 175, 176, 177, 247, 271, 273], "65it": 58, "54": [58, 79, 83, 86, 90, 93, 121, 136, 170, 175, 182, 213, 248, 273, 274, 275], "85it": 58, "01it": 58, "10it": [58, 121], "12it": [58, 121], "19it": [58, 121], "83it": 58, "84it": 58, "86it": 58, "88it": 58, "90it": 58, "87it": 58, "89it": 58, "91it": 58, "92it": 58, "77it": 58, "80it": 58, "79it": 58, "81it": 58, "57": [58, 65, 102, 119, 120, 121, 152, 153, 175, 247, 273, 274, 275], "51": [58, 83, 84, 87, 102, 121, 169, 175, 182, 213, 247, 273], "53": [31, 36, 58, 77, 89, 90, 98, 119, 120, 121, 160, 164, 170, 175, 179, 182, 209, 212, 249, 261, 264, 271, 273], "55": [58, 73, 75, 82, 90, 93, 94, 98, 121, 139, 140, 142, 175, 241, 247, 273], "93it": 58, "68": [58, 121, 152, 153, 175, 247, 273, 274, 275], "69": [58, 77, 90, 102, 121, 131, 175, 176, 179, 182, 191, 247, 273], "71": [58, 74, 82, 121, 175, 247], "73": [58, 65, 77, 121, 150, 175, 247, 254, 273], "77": [58, 63, 118, 121, 168, 169, 174, 175, 247], "78": [58, 87, 90, 118, 121, 175, 247, 273], "83": [58, 121, 247, 273], "84": [58, 118, 121, 247, 248], "85": [58, 70, 73, 75, 77, 82, 86, 89, 93, 94, 98, 102, 118, 121, 126, 160, 169, 175, 177, 247, 256, 273], "86": [58, 75, 93, 97, 118, 121, 175, 247, 273], "89": [58, 106, 112, 113, 118, 120, 121, 129, 151, 175, 241, 247, 258, 273], "90": [58, 81, 86, 87, 89, 93, 95, 96, 98, 103, 121, 124, 126, 127, 130, 172, 175, 177, 182, 237, 238, 247, 273], "91": [58, 89, 90, 102, 121, 170, 174, 247], "93": [58, 118, 121, 164, 241, 245], "94": [58, 62, 82, 106, 121, 160, 164, 171, 177, 240, 247, 255, 264, 273], "94it": 58, "97": [58, 118, 121, 140, 175, 177, 247, 251, 261, 273], "99": [58, 77, 89, 102, 106, 121, 126, 160, 169, 175, 177, 178, 247, 273], "101": [58, 118, 121, 170, 247], "102": [58, 118, 121, 170, 247], "103": [58, 62, 84, 88, 121, 164, 171, 182, 212, 246, 247, 273], "104": [58, 106, 121, 151, 247], "105": [58, 118, 121, 247], "107": [58, 106, 118, 121, 247], "108": [58, 83, 121, 171, 247, 273], "112": [58, 106, 118, 121, 140, 247], "113": [58, 90, 106, 121, 140, 151, 247], "114": [58, 121, 247], "115": [58, 106, 118, 121, 140, 243, 273], "116": [58, 118, 121, 247, 260], "117": [58, 102, 103, 106, 112, 118, 121, 153, 161, 168, 170, 177, 182, 233, 247, 273], "118": [58, 121, 140, 247], "119": [58, 118, 121, 171, 247, 257, 273], "123": [58, 106, 118, 121, 169, 247], "124": [58, 102, 103, 106, 112, 118, 121, 153, 161, 168, 170, 182, 233, 247, 273], "127": [58, 106, 109, 121, 140, 247], "129": [58, 83, 99, 118, 121, 164, 247, 262], "130": [58, 121, 164, 182, 200, 247, 252, 262, 273], "131": [58, 121, 151, 247], "132": [58, 121, 247], "133": [58, 73, 121, 175, 247, 273], "134": [58, 87, 121, 164, 175, 247, 256, 273], "135": [58, 91, 92, 118, 121, 175, 247, 273], "136": [58, 81, 121, 124, 175, 247, 273], "137": [58, 121, 247], "138": [58, 77, 121, 140, 151, 240, 247, 273], "139": [58, 89, 118, 121, 175, 247, 263, 273], "141": [58, 121, 247], "142": [58, 118, 121, 151, 164, 171, 175, 176, 247, 273], "143": [58, 61, 118, 121, 159, 175, 247, 273], "144": [58, 118, 121, 177, 241, 247, 273], "145": [58, 67, 77, 121, 244, 247, 273], "146": [58, 121, 175, 247, 273], "147": [58, 121], "148": [58, 118, 121], "149": [58, 81, 121, 124, 273], "151": [58, 118, 121], "152": [58, 121, 274, 275], "153": [58, 121, 241, 258], "154": [58, 121], "156": [58, 61, 121, 159, 273], "157": [58, 121], "158": [58, 121], "159": [58, 118, 121, 175, 248, 273], "ordinari": [58, 77, 175, 182, 209, 212], "regress": [58, 70, 171, 175, 182, 201, 241], "slower": [58, 92, 161, 169, 182], "hamper": 58, "attenu": [58, 65, 126, 175, 177, 245], "b0_denois": [58, 121, 171, 254], "higher": [58, 75, 77, 81, 84, 87, 88, 94, 104, 121, 124, 130, 142, 147, 154, 168, 169, 175, 176, 182, 191, 227, 276], "accordingli": [58, 112, 151, 168], "denoised_patch2self": 58, "inspect": [58, 70, 109, 143, 146, 182, 244], "underli": [58, 65, 75, 76, 90, 131, 136, 160, 171, 181, 182, 201, 220, 249, 273, 281], "rid": [58, 262], "lastli": [58, 143, 146], "batch": [58, 169, 174, 182, 203], "300": [58, 59, 81, 83, 95, 121, 124, 127, 139, 170, 181, 249, 274, 275], "split": [58, 160, 168, 171, 174, 175, 179, 182, 215, 221, 231, 235, 242, 251, 253], "denoised_batch1": 58, "denoised_batch2": 58, "denoised_p2": 58, "concaten": [58, 81, 124, 126, 176, 177, 182, 192, 253, 263], "joshua": [58, 83, 128, 170, 171, 182, 201, 259, 273], "batson": [58, 171, 182, 201, 273], "larochel": [58, 171, 182, 201, 273], "aurelio": [58, 171, 182, 201, 273], "ranzato": [58, 171, 182, 201, 273], "raia": [58, 171, 182, 201, 273], "hadsel": [58, 171, 182, 201, 273], "florina": [58, 171, 182, 201, 273], "balcan": [58, 171, 182, 201, 273], "hsuan": [58, 171, 182, 201, 273], "tien": [58, 171, 182, 201, 273], "lin": [58, 98, 171, 175, 182, 201, 209, 212, 273], "neural": [58, 70, 164, 167, 171, 174, 175, 182, 201, 273], "16293": [58, 171, 182, 201, 273], "16303": [58, 171, 182, 201, 273], "curran": [58, 171, 182, 201, 273], "inc": [58, 171, 182, 201, 273], "proceed": [58, 171, 182, 201, 273], "neurip": [58, 104, 171, 182, 201, 273], "paper_fil": [58, 171, 182, 201, 273], "bc047286b224b7bfa73d4cb02de1238d": [58, 171, 182, 201, 273], "pdf": [58, 77, 79, 80, 100, 148, 168, 171, 175, 177, 182, 183, 184, 201, 210, 211, 249, 260, 273], "agniva": [58, 171, 182, 201, 273], "chowdhuri": [58, 152, 171, 182, 201, 273], "petro": [58, 171, 182, 201, 273], "drinea": [58, 171, 182, 201, 273], "patch2self2": [58, 171, 182, 201, 273], "coreset": [58, 171, 182, 201, 273], "sketch": [58, 171, 182, 183, 201, 273], "cvf": [58, 171, 182, 201, 273], "pattern": [58, 72, 120, 169, 171, 182, 201, 273], "recognit": [58, 112, 153, 168, 171, 176, 182, 201, 224, 230, 233, 244, 273, 274, 275], "27641": [58, 171, 182, 201, 273], "27651": [58, 171, 182, 201, 273], "openaccess": [58, 170, 171, 182, 201, 206, 273], "thecvf": [58, 171, 182, 201, 273], "cvpr2024": [58, 171, 182, 201, 273], "fadnavis_patch2self2_self": [58, 171, 182, 201, 273], "supervised_denoising_on_coresets_via_matrix_sketching_cvpr_2024_pap": [58, 171, 182, 201, 273], "kristian": [58, 273], "bredi": [58, 273], "thoma": [58, 65, 73, 83, 84, 100, 128, 152, 168, 170, 175, 182, 219, 273], "pock": [58, 273], "rudolf": [58, 273], "stollberg": [58, 273], "tgv": [58, 273], "480": [58, 121, 249, 273], "491": [58, 90, 121, 170, 249, 255, 273], "22595": [58, 273], "999": [58, 64, 175, 242], "denoise_patch2self": [58, 64, 264], "saw": [59, 150], "physicist": 59, "disperse_charg": [59, 89, 95, 127, 183, 242, 248, 252], "polar": [59, 95, 126, 127, 169, 175, 177, 272], "n_pt": [59, 89, 95, 127, 135], "theta": [59, 88, 89, 95, 101, 126, 127, 149, 169, 171, 175, 179, 247, 271, 272], "pi": [59, 89, 90, 95, 117, 127, 135, 147, 148, 169, 175, 177, 179, 267, 269, 271], "hsph_initi": [59, 89, 95, 127], "potenti": [59, 77, 89, 93, 95, 127, 131, 169, 174, 175, 176, 182, 227, 243, 245, 253], "energi": [59, 86, 95, 127, 160, 168, 175, 176, 182, 185, 191], "hsph_updat": [59, 89, 95, 127], "setbackground": [59, 95, 103, 112, 113, 115, 116, 117, 118, 129, 130, 135], "point_radiu": [59, 115], "initial_vs_upd": 59, "sph": [59, 248, 255], "full_spher": 59, "fill": [59, 168, 175, 182, 231, 240, 267, 268], "stack": [59, 101, 127, 255], "hstack": [59, 89, 127], "62840912": 59, "77023529": 59, "1088098": 59, "45508617": 59, "8611993": 59, "22634564": 59, "32473383": 59, "11911651": 59, "93827459": 59, "12027212": 59, "02644471": 59, "99238868": 59, "74898275": 59, "57572682": 59, "3279687": 59, "45859234": 59, "84960412": 59, "26051086": 59, "04051051": 59, "68126793": 59, "73091238": 59, "0735906": 59, "91534536": 59, "39588797": 59, "99890043": 59, "025384": 59, "03941549": 59, "1019989": 59, "29394083": 59, "95036573": 59, "21406095": 59, "42504593": 59, "87949637": 59, "90337243": 59, "23238568": 59, "36043743": 59, "68031972": 59, "26206651": 59, "68446053": 59, "31937068": 59, "2676325": 59, "90905182": 59, "34248427": 59, "32023336": 59, "8832639": 59, "7999869": 59, "3489196": 59, "48813531": 59, "57951898": 59, "22899749": 59, "78212397": 59, "63088504": 59, "7758749": 59, "00148495": 59, "41767139": 59, "57622315": 59, "702508": 59, "10130929": 59, "99375547": 59, "04675989": 59, "80237762": 59, "41516512": 59, "42875177": 59, "23477878": 59, "06221913": 59, "97005552": 59, "19783062": 59, "52356388": 59, "82870013": 59, "47380843": 59, "57212817": 59, "66945868": 59, "08704282": 59, "21194403": 59, "9733978": 59, "30874652": 59, "23012033": 59, "92288689": 59, "53845368": 59, "70344577": 59, "46393069": 59, "29774511": 59, "05346423": 59, "95314712": 59, "77124701": 59, "63444946": 59, "05149692": 59, "62559748": 59, "48947088": 59, "60749161": 59, "40408541": 59, "61550491": 59, "67665995": 59, "17520779": 59, "51319826": 59, "84019627": 59, "89088902": 59, "43819093": 59, "11960543": 59, "768878": 59, "11427646": 59, "62910056": 59, "39575616": 59, "20260836": 59, "89572703": 59, "58890776": 59, "32655201": 59, "73929117": 59, "1143085": 59, "17441955": 59, "978014": 59, "95974854": 59, "27018392": 59, "07670325": 59, "1154149": 59, "26996102": 59, "9559291": 59, "60984466": 59, "07009174": 59, "78941538": 59, "98237224": 59, "09391583": 59, "16163104": 59, "84609345": 59, "06482304": 59, "5290783": 59, "22448816": 59, "53299048": 59, "8157979": 59, "12146282": 59, "99224489": 59, "02639829": 59, "19591098": 59, "86261727": 59, "46638004": 59, "81558403": 59, "54079301": 59, "20582907": 59, "25885426": 59, "90287368": 59, "34323984": 59, "53492121": 59, "02637249": 59, "84449026": 59, "53964131": 59, "43449257": 59, "72111266": 59, "19449693": 59, "6806217": 59, "70634626": 59, "98053881": 59, "15801018": 59, "11651794": 59, "7317953": 59, "30771257": 59, "60810248": 59, "52046223": 59, "33241611": 59, "78652311": 59, "21408979": 59, "80786826": 59, "54910331": 59, "93116942": 59, "16113451": 59, "32704613": 59, "35270264": 59, "63898144": 59, "68359606": 59, "69371315": 59, "46840791": 59, "54713445": 59, "68109784": 59, "53997035": 59, "4945076": 59, "16962453": 59, "72131562": 59, "67151418": 59, "00393353": 59, "41503663": 59, "9097962": 59, "87506372": 59, "34938832": 59, "33494968": 59, "9594481": 59, "08153172": 59, "26983683": 59, "06967638": 59, "06917517": 59, "99516833": 59, "50608658": 59, "10979243": 59, "85546595": 59, "cyan": 59, "colors_b1000": 59, "colors_b2500": 59, "ascontiguousarrai": [59, 135], "mark": [59, 61, 83, 89, 92, 106, 128, 152, 159, 170, 175, 177, 178, 179, 244, 262, 273], "horsfield": [59, 273], "simmon": [59, 88, 175, 273], "anisotrop": [59, 73, 75, 79, 82, 85, 87, 88, 133, 147, 164, 168, 170, 175, 255, 265, 273], "1999": [59, 82, 168, 245, 252, 273], "www": [59, 73, 77, 78, 87, 92, 147, 148, 169, 173, 175, 179, 273, 274, 275], "ncbi": [59, 273], "nlm": [59, 175, 273], "nih": [59, 173, 246, 273], "gov": [59, 173, 273], "pubm": [59, 273], "10467296": [59, 273], "sici": [59, 82, 168, 273], "1522": [59, 82, 168, 245, 273], "2594": [59, 82, 168, 260, 273], "199909": [59, 82, 168, 273], "aid": [59, 82, 168, 273], "mrm14": [59, 273], "969": [59, 64], "gradients_spher": [59, 64, 244, 264], "inevit": [61, 159], "misalign": [61, 101, 159, 168], "preprocess": [61, 83, 117, 121, 159, 170, 262, 264], "motion_correct": [61, 64, 183, 264], "193": [61, 67, 121, 174, 182, 196, 273, 274, 275], "bvals_smal": 61, "bvecs_smal": 61, "reg_affin": [61, 100, 101], "jenkinson": [61, 159, 273], "stephen": [61, 96, 112, 120, 153, 159, 168, 176, 182, 224, 230, 233, 273], "optimis": [61, 159, 249, 273], "2001": [61, 112, 120, 159, 255, 273], "s1361": [61, 159, 273], "8415": [61, 159, 273], "00036": [61, 159, 273], "691": [61, 64, 240], "identif": [62, 171, 273], "grappa": [62, 171], "intuit": [62, 90, 131, 149, 182], "fourth": [62, 77, 86, 91, 92, 169, 175, 177], "central": [62, 80, 97, 168, 169, 178, 179], "tim": 62, "trio": [62, 170, 267, 268, 274, 275], "receiv": [62, 109, 171, 175], "distinct": 62, "return_mask": [62, 171], "axial_piesno": 62, "mask_piesno": 62, "uint8": [62, 65, 70, 82, 136, 173], "263329": 62, "933178": 62, "5934806": 62, "708311737182022": 62, "evren": [62, 77, 83, 87, 90, 91, 92, 96, 128, 170, 171, 175, 273], "carlo": [62, 82, 87, 90, 98, 168, 171, 175, 182, 209, 212, 273], "pierpaoli": [62, 82, 87, 90, 98, 168, 171, 175, 182, 209, 212, 273], "2009": [62, 65, 72, 80, 81, 84, 96, 97, 100, 108, 109, 110, 124, 161, 168, 169, 170, 171, 175, 182, 207, 217, 218, 219, 252, 273, 274, 275], "901": [31, 62, 64, 242], "facilit": [63, 173, 174], "fimg": [63, 126, 170, 177], "aniso_vox": [63, 168, 170], "new_voxel_s": [63, 108], "data2": [63, 168], "affine2": [63, 168], "iso_vox": 63, "analyz": [63, 79, 91, 169, 175, 178, 179, 252, 280], "img3": 63, "spm2analyzeimag": 63, "realiz": [63, 171], "165": [63, 64, 121], "reslice_dataset": [63, 64, 264], "662": [64, 243], "examples_builtpreprocess": 64, "snr_in_cc": [64, 65, 245, 251, 264], "687": [64, 65], "divid": [65, 72, 79, 80, 88, 90, 93, 103, 117, 129, 168, 169, 175, 176, 178, 182, 187, 188, 243, 244, 251, 253], "worst": 65, "cst": [65, 128, 129, 133, 139, 140, 170, 245, 258], "cfa": [65, 82, 176], "binary_dil": [65, 136], "bounding_box": [65, 183, 255], "segment_from_cfa": [65, 183], "tenmodel": [65, 75, 77, 82, 249, 277], "tensorfit": [65, 82, 176, 183, 247], "cc_box": 65, "zeros_lik": [65, 77, 101, 179], "bounds_min": 65, "bounds_max": 65, "mask_cc_part": 65, "return_cfa": [65, 176], "cfa_cc_part": 65, "255": [65, 82, 121, 136, 142, 173, 248], "cc_segment": 65, "crude": 65, "catch": [65, 240, 243], "manufactur": 65, "mask_nois": [65, 182, 234], "noise_std": 65, "17113266785504": 65, "report": [65, 86, 129, 130, 152, 175, 176, 178, 182, 188, 189, 230, 242, 249, 258, 273], "li": [65, 72, 83, 128, 160, 168, 170, 182, 273], "null": [65, 169, 171, 182, 198, 259], "idx": [65, 93, 169, 174, 175], "inf": [65, 86, 128, 168, 174, 175, 182, 225], "axis_x": 65, "argmin": [65, 92, 103, 179], "axis_i": 65, "axis_z": 65, "366354266706736": 65, "98875": 65, "1177": [65, 242], "09229": 65, "918432129721111": 65, "05039": 65, "99871": 65, "0054406": 65, "72068171809924": 65, "11825": 65, "039925": 65, "99218": 65, "592653853373644": 65, "perpendicular": [65, 83, 87, 90, 93, 160, 169, 175, 177, 182, 216, 240], "deni": [65, 80, 82, 86, 97, 160, 175, 182, 212, 215, 273], "mangin": [65, 80, 97, 175, 273], "cyril": [65, 80, 97, 175, 273], "poupon": [65, 80, 97, 175, 273], "603": [65, 80, 97, 175, 250, 273], "621": [65, 80, 97, 175, 240, 273], "special": [65, 80, 97, 108, 109, 110, 150, 161, 168, 169, 175, 176, 182, 254, 263, 273], "ipmi": [65, 80, 97, 175, 273], "media": [65, 80, 90, 96, 97, 108, 109, 110, 126, 161, 170, 175, 273], "kn": [65, 175, 182, 219, 273], "sche": [65, 175, 182, 219, 273], "turner": [65, 170, 273], "count": [65, 70, 98, 135, 136, 176, 178, 179, 181, 248, 273], "fallaci": [65, 273], "239": [65, 121, 248, 273], "254": [65, 76, 121, 182, 212, 273], "081": [65, 273], "publicli": [67, 170, 247], "expandus": [67, 142], "fetch_sherbrooke_3shel": [67, 183], "hardi193": [67, 156, 159], "digit": [67, 139, 170, 179, 273], "researchwork": [67, 139, 170], "bitstream": [67, 77, 139, 273], "38475": 67, "0b735e8f16695a37bfbd66aab136eb66": 67, "e9b9bb56252503ea49d31fb30a0ac637": 67, "0c83f7e8b917cd677ad58a078658ebb7": 67, "dname": 67, "fdwi": [67, 277], "fbval": [67, 77, 78, 79, 80, 85, 86, 87, 88, 89, 91, 96, 97, 121, 126, 168, 170, 173, 177, 277], "fbvec": [67, 77, 78, 79, 80, 85, 86, 87, 88, 89, 91, 96, 97, 121, 126, 168, 170, 173, 177, 277], "get_zoom": [67, 108], "quickli": [67, 166, 175, 246], "3500": [67, 274, 275], "964050": 67, "999992": 67, "999979": 67, "00504001": 67, "00402795": 67, "00398794": 67, "0257055": 67, "653861": 67, "756178": 67, "589518": 67, "769236": 67, "246462": 67, "235785": 67, "529095": 67, "815147": 67, "893578": 67, "263559": 67, "363394": 67, "79784": 67, "133726": 67, "587851": 67, "232937": 67, "931884": 67, "278087": 67, "93672": 67, "144139": 67, "31903": 67, "fun": [67, 169], "hardi193_s0": 67, "quick_start": [67, 68, 245, 264], "788": [], "examples_builtquick_start": 68, "tracking_introduction_eudx": [68, 69, 253, 264], "643": 245, "driven": [70, 75, 93], "sequenti": [70, 93, 117, 176, 253, 273], "histologi": [70, 174], "squirrel": 70, "monkei": 70, "third": [70, 108, 109, 110, 161, 169, 175, 182, 221, 253, 273], "ndi": 70, "histo_resdnn": [70, 183], "historesdnn": [70, 183], "sh_to_sf_matrix": [70, 183], "onednn": 70, "tf_cpp_min_log_level": 70, "mean_b0": [70, 108], "mask_label": 70, "return_count": 70, "val": [70, 93, 101, 169, 181, 241, 260, 262, 274, 275], "argmax": 70, "resdnn_model": 70, "fetch_default_weight": [70, 174, 183], "predicted_sh": 70, "coron": [70, 120, 181, 251], "invb": [70, 172, 175], "basis_typ": [70, 95, 174, 175, 179], "0006": 70, "fod_spher": 70, "b_matrix": [70, 267, 268], "mean_sh": 70, "background_img": 70, "ori_shap": [70, 174], "slice_index": [70, 100, 101, 108, 110, 181], "display_ext": [70, 139, 181, 183], "camera": [70, 140], "zoom": [70, 139, 142, 156, 157, 168, 173, 245, 254], "screenshot": [70, 139, 142], "curvatur": [70, 179, 259, 261], "popul": [70, 72, 73, 75, 82, 89, 93, 102, 126, 129, 130, 153, 158, 160, 175, 176, 178, 182, 188, 189, 230, 273, 274, 275], "visibl": [70, 156, 181, 183, 244, 247, 251, 257, 263], "zoom_factor": 70, "view_posit": 70, "view_cent": 70, "up_vector": 70, "pred_fodf": 70, "vishwesh": [70, 174, 273], "nath": [70, 170, 174, 273], "kurt": [70, 83, 128, 170, 174, 182, 196, 273], "schill": [70, 170, 174, 182, 196, 273], "prasanna": [70, 174, 273], "parvathaneni": [70, 174, 273], "allison": [70, 174, 273], "hainlin": [70, 174, 273], "colin": [70, 174, 273], "camilo": [70, 273], "bermudez": [70, 273], "plassard": [70, 273], "justin": [70, 174, 273], "blaber": [70, 174, 273], "vaibhav": [70, 83, 128, 170, 174, 273], "janv": [70, 174, 273], "yurui": [70, 174, 273], "gao": [70, 174, 182, 196, 273], "iwona": [70, 174, 273], "stepniewska": [70, 174, 273], "bennett": [70, 83, 128, 170, 174, 182, 196, 273], "landman": [70, 174, 182, 196, 273], "captur": [70, 76, 77, 89, 126, 147, 273], "joint": [70, 72, 88, 100, 102, 103, 168, 175, 182, 184, 233, 269, 273], "esmrmb": [70, 72, 88, 102, 103, 168, 175, 182, 233, 273], "27th": [70, 86, 175, 181, 182, 222, 273], "yuankai": [70, 174, 273], "huo": [70, 174, 273], "ilwoo": [70, 174, 273], "lyu": [70, 174, 273], "reveal": [70, 76, 88, 89, 126, 174, 175, 273], "untap": [70, 174, 273], "220": [70, 94, 99, 121, 174, 249, 273], "227": [70, 80, 99, 121, 174, 248, 273], "012": [70, 174, 273], "693": [70, 99, 240], "histology_resdnn": [70, 99, 264], "nest": [72, 142, 147, 179], "likelihood": [72, 93, 120, 175], "imprevi": 72, "math": [72, 89, 90, 91, 96, 126, 169, 170, 175, 241, 242, 245, 246, 249, 253, 259], "rac": 72, "conduct": [72, 82, 160, 175, 246, 258], "cross_valid": [72, 183, 249], "dpd": [72, 94, 98, 175], "xval": [72, 249], "centrum": [72, 94], "semioval": [72, 94], "cso": 72, "cc_vox": 72, "cso_vox": 72, "dti_model": 72, "dti_cc": 72, "kfold_xval": [72, 99, 183, 264], "csd_cc": 72, "dti_cso": 72, "csd_cso": 72, "scatter": [72, 86], "focus": [72, 73, 165], "set_size_inch": 72, "legend": [72, 86, 89, 90, 98, 126, 127, 135], "loc": [72, 86, 89], "this_ax": 72, "cc_dti_r2": 72, "cc_csd_r2": 72, "cso_dti_r2": 72, "cso_csd_r2": 72, "r2": [72, 175, 248], "7828795917129804": 72, "8051656184264907": 72, "43192536287688327": 72, "6038698891074342": 72, "trevor": [72, 94, 273], "hasti": [72, 94, 273], "tibshirani": [72, 273], "jerom": [72, 259, 273], "friedman": [72, 273], "mine": [72, 273], "978": [72, 177, 182, 200, 242, 273], "387": [72, 107, 121, 240, 245, 273], "84858": [72, 273], "23rd": [72, 88, 103, 168, 175, 179, 182, 233, 273], "milan": [72, 88, 103, 168, 175, 182, 233, 273], "itali": [72, 88, 103, 168, 175, 182, 233, 273], "919": [72, 99, 241], "dispers": [73, 77, 87, 89, 175, 273], "mm2": 73, "unit_icosahedron": [73, 169], "sf_to_bingham": [73, 183], "sh_to_bingham": [73, 183], "image_mosa": [73, 121, 183], "icosahedron": [73, 175], "subdivid": [73, 81, 95, 124, 127, 169, 175, 182, 183, 247], "10242": [73, 175], "nd": [73, 172, 176, 179, 242], "csd_odf": [73, 75], "lobe": [73, 175], "max_search_angl": [73, 175], "binghammetr": [73, 183], "amplitude_lob": [73, 175, 183], "f_0": [73, 175], "fd_lobe": [73, 175, 183], "densitii": 73, "fs_lobe": [73, 175, 183], "spread": [73, 164, 170, 175, 253], "fd_voxel": [73, 175, 183], "fd": [73, 173, 175], "fs_voxel": [73, 175, 183], "odi1_lob": [73, 175, 183], "odi2_lob": [73, 175, 183], "odi_total_lob": [73, 175, 183], "odi1_voxel": [73, 175, 183], "odi2_voxel": [73, 175, 183], "odi_total_voxel": [73, 175, 183], "mu_0": 73, "bim_odf": 73, "bingham_odf": 73, "heavili": 73, "feel": 73, "sh_coeff": [73, 88, 95, 166, 175, 183], "proport": [73, 147, 168, 174], "fd_odf_l1": 73, "fd_odf_l2": 73, "fd_imag": 73, "fd_label": 73, "kwarg": [73, 77, 86, 88, 104, 168, 169, 170, 173, 175, 182, 240, 253, 256, 260], "bingham_fd": 73, "ax_label": [73, 121, 181], "ax_kwarg": [73, 121, 181], "1600x400": 73, "quantiti": [73, 77, 82, 87, 89, 90, 175, 273], "odi_tot": 73, "quantif": [73, 77, 89, 128, 160, 175, 178, 182, 209, 273], "odi_1": 73, "odi_2": 73, "offer": [73, 77, 169, 271], "odi": [73, 175], "odit": 73, "odi1": [73, 175], "odi2": [73, 175], "odi_imag": 73, "odi_label": 73, "bingham_odi_lobe1": 73, "1500x500": 73, "lesser": 73, "pronounc": [73, 77], "methodologi": [73, 77, 78, 89, 94, 175, 273], "singular": [73, 169, 171, 182, 198, 199, 268], "analog": [73, 77, 78], "lack": 73, "odi_voxel": 73, "bingham_odi_lobe2": 73, "quantitati": 73, "weigth": 73, "bingham_odi": 73, "bingham_odi_voxel": 73, "till": [73, 175, 273], "riffert": [73, 175, 273], "schreiber": [73, 175, 273], "alfr": [73, 175, 182, 219, 273], "anwand": [73, 175, 182, 219, 273], "kn\u00f6sche": [73, 175, 273], "176": [73, 120, 121, 140, 151, 175, 248, 273], "191": [73, 115, 121, 175, 176, 248, 273], "sciencedirect": [73, 175, 273], "pii": [73, 175, 273], "s1053811914004923": [73, 175, 273], "015": [73, 112, 153, 168, 171, 175, 176, 182, 224, 230, 233, 273], "fibr": [73, 75, 83, 88, 128, 170, 175, 177, 182, 208, 219, 271, 273], "super": [73, 75, 88, 117, 164, 175, 182, 208, 271, 273], "1459": [73, 75, 88, 175, 182, 208, 244, 271, 273], "1472": [73, 75, 88, 175, 182, 208, 244, 271, 273], "hui": [73, 94, 175, 273], "zhang": [73, 120, 152, 175, 273], "torben": [73, 77, 175, 273], "schneider": [73, 83, 128, 170, 175, 273], "claudia": [73, 83, 128, 170, 175, 273], "wheeler": [73, 175, 273], "kingshott": [73, 175, 273], "noddi": [73, 175, 253, 273], "vivo": [73, 76, 84, 89, 174, 175, 273], "neurit": [73, 175, 273], "072": [73, 87, 175, 273], "maira": [73, 175, 273], "tariq": [73, 175, 255, 256, 257, 273], "gandini": [73, 175, 273], "207": [73, 121, 175, 248, 273], "223": [73, 121, 175, 248, 273], "046": [73, 87, 175, 273], "875": [73, 99, 175, 242, 273], "reconst_bingham": [73, 99, 264], "apart": [74, 169, 267], "peak_indic": [74, 85, 172, 173], "maxima": [74, 75, 172, 175, 247], "enough": [74, 169, 179, 279], "rectangular": [74, 82, 103, 267, 268], "splenium": [74, 82], "csaodf": 74, "csa_odfs_actor": 74, "csa_odf": 74, "iman": [74, 151, 175, 177, 182, 207, 217, 218, 273], "lenglet": [74, 86, 151, 175, 177, 182, 207, 217, 218, 273], "guillermo": [74, 151, 175, 177, 182, 207, 217, 218, 273], "sapiro": [74, 151, 175, 177, 182, 207, 217, 218, 273], "essa": [74, 86, 151, 175, 177, 273], "yacoub": [74, 86, 151, 175, 177, 273], "kamil": [74, 151, 175, 177, 273], "ugurbil": [74, 151, 175, 177, 273], "noam": [74, 76, 89, 151, 175, 177, 273], "harel": [74, 83, 128, 151, 170, 175, 177, 273], "554": [74, 151, 175, 177, 250, 273], "566": [74, 151, 175, 177, 250, 273], "onlinelibrari": [74, 77, 89, 151, 160, 175, 177, 179, 182, 209, 271, 273], "wilei": [74, 77, 89, 151, 160, 175, 177, 179, 182, 209, 271, 273], "22365": [74, 151, 175, 177, 273], "657": [74, 99, 240], "reconst_csa": [74, 99, 244, 264], "mask_for_response_ssst": [75, 183], "recursive_respons": [75, 93, 183], "mean_diffus": [75, 82, 83, 183, 242], "single_tensor_odf": [75, 93, 183], "proce": [75, 94, 175], "cuboid": [75, 88, 175, 182, 208, 219], "ident": [75, 82, 85, 90, 100, 103, 136, 148, 149, 168, 173, 175, 181, 183, 240, 255, 259], "nvoxel": 75, "1254": [75, 242], "tupl": [75, 100, 129, 143, 146, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 245, 248, 272], "00139919": [75, 93, 94], "0003007": [75, 93, 94], "416": [75, 93, 94, 121, 249], "7372408293461": [75, 93, 94], "radial": [75, 76, 77, 87, 89, 94, 96, 164, 175, 179, 182, 209, 210, 211, 212, 247, 253, 272, 273], "21491283972217437": 75, "evec": [75, 82, 93, 98, 126, 151, 173, 175, 177, 182, 183, 209, 212, 236], "response_odf": [75, 93], "1d": [75, 93, 96, 116, 164, 168, 169, 171, 174, 175, 176, 177, 178, 179, 182, 184, 227, 261, 273], "response_actor": [75, 93], "csd_respons": 75, "calibr": [75, 93, 112, 160, 164, 175, 182, 207, 208, 210, 211, 217, 218, 250, 273], "eigenvector": [75, 87, 126, 168, 175, 177, 179, 182, 209, 212, 240, 245, 267], "fat": [75, 93, 175], "converg": [75, 77, 86, 87, 93, 100, 120, 168, 169, 171, 175, 176], "wm_mask": [75, 92, 121, 176], "logical_and": 75, "0011": 75, "peak_thr": [75, 93, 175], "init_fa": [75, 93, 175], "init_trac": [75, 93, 175], "0021": [75, 93, 175], "pancak": [75, 93], "response_sign": 75, "on_spher": [75, 93, 175, 183], "csd_recursive_respons": 75, "recurs": [75, 93, 164, 168, 169, 175, 273], "portion": [75, 86, 93, 175], "30x30": 75, "fodf_peak": [75, 93, 94], "getproperti": [75, 94], "setopac": [75, 94], "csd_both": 75, "sjoerd": [75, 93, 175, 273], "vo": [75, 93, 175, 273], "viergev": [75, 77, 93, 175, 273], "067": [75, 93, 151, 175, 273], "581": [75, 99, 250], "reconst_csd": [75, 99, 244, 264], "k_aniso": [76, 175, 183], "k_iso": [76, 175, 183], "microscop": [76, 77, 89, 91, 169, 175, 273], "k_micro": [76, 175, 183], "exchang": [76, 93, 175], "disord": [76, 83, 128, 170, 273], "correlationtensormodel": [76, 183], "diffusionkurtosistensorfit": 76, "necess": 76, "e_": 76, "q_1": 76, "q_2": 76, "q_": 76, "1i": 76, "1j": 76, "2i": 76, "2j": 76, "d_": [76, 77, 82, 84, 103, 160, 175, 267, 268], "ij": [76, 77, 175, 267, 268], "1k": 76, "1l": 76, "2k": 76, "2l": [76, 175, 271], "quad": [76, 175], "w_": [76, 77, 175], "ijkl": [76, 77, 175], "z_": 76, "s_": [76, 77, 86, 103, 175, 177], "dt": [76, 77, 78, 126, 128, 160, 173, 175, 177, 178, 267], "kt": [76, 77, 78, 126, 160, 175, 177, 183], "4th": [76, 169], "displac": [76, 80, 86, 87, 90, 97, 104, 147, 160, 161, 168, 175, 177, 179, 181, 182, 185, 186, 267], "diffusionkurtosi": 76, "pair": [76, 102, 136, 168, 179, 181, 182, 190], "epoch": [76, 174, 175], "magn": [76, 183], "med": 76, "netohe2021": 76, "dde": [76, 170, 175], "fdata": [76, 91], "fbvals1": 76, "fbvecs1": 76, "fbvals2": 76, "fbvecs2": 76, "fmask": [76, 91], "cti_rat1": 76, "bvals1": 76, "bvecs1": 76, "bvals2": 76, "bvecs2": 76, "filefdata": 76, "bvec1": 76, "bvec2": 76, "gtab1": [76, 175], "gtab2": [76, 175], "mask_affin": 76, "ctimodel": 76, "ctifit": 76, "correlationtensorfit": [76, 183], "upon": [76, 168, 175, 179, 182, 247, 248], "inher": 76, "rd": [76, 77, 151, 152, 175, 182, 183, 209, 212], "ak": [76, 77, 169, 175, 182, 183, 209], "rk": [76, 77, 175, 182, 183, 209], "exclus": [76, 168, 179], "kiso_map": 76, "kaniso_map": 76, "kmicro_map": 76, "slice_idx": 76, "axarr": [76, 106], "kiso": 76, "kaniso": 76, "kmicro": 76, "shemesh": [76, 89, 175, 273], "211": [76, 121, 175, 248, 273], "116605": [76, 175, 273], "lisa": [76, 273], "andrada": [76, 273], "ianu\u015f": [76, 273], "thorsten": [76, 273], "feiweier": [76, 273], "jovicich": [76, 273], "clinic": [76, 92, 169, 175, 273], "119137": [76, 273], "rita": [76, 77, 89, 126, 160, 175, 177, 273], "alv": [76, 273], "leevi": [76, 255, 259, 273], "kerkel\u00e4": [76, 273], "cristina": [76, 273], "chavarr": [76, 273], "deciph": [76, 273], "stroke": [76, 273], "247": [76, 121, 182, 212, 248, 273], "118833": [76, 273], "956": [76, 99, 242, 249], "reconst_cti": [76, 99, 264], "expans": [77, 87, 91, 92, 160, 169, 175, 177], "biolog": [77, 86, 90, 152, 160, 273], "extra": [77, 78, 84, 89, 101, 126, 143, 146, 148, 173, 175, 176, 181, 262, 276], "microstructur": [77, 78, 83, 84, 86, 87, 89, 90, 91, 92, 160, 164, 174, 175, 182, 212, 213, 242, 273], "health": [77, 83, 128, 170, 273], "diseas": [77, 78, 152, 174, 182, 196, 273], "moreov": [77, 84, 89, 117, 160, 271], "heterogen": [77, 126, 160, 169, 273], "sensit": [77, 78, 86, 87, 89, 98, 121, 147, 175, 249, 273], "confound": [77, 89, 98], "character": [77, 78, 82, 84, 89, 160, 175, 177, 273], "fan": [77, 82, 83, 103, 128, 170, 273], "primarili": [77, 103, 182, 207, 217, 218], "concret": [77, 78, 160, 182], "biophys": [77, 78, 82, 89, 90, 160, 175, 179, 273], "axon": [77, 78, 82, 83, 87, 89, 90, 126, 160, 175, 182, 213, 251, 273], "sphx_glr_examples_built_reconstruction_reconst_dki_micro": 77, "concis": 77, "insight": [77, 96, 100, 108, 109, 110, 161, 175, 273], "implaus": [77, 89], "solut": [77, 79, 87, 88, 92, 100, 120, 139, 151, 164, 168, 169, 175, 179], "reliabl": [77, 82], "bd": [77, 86, 175, 177], "mathbf": [77, 82, 84, 86, 91, 92, 103, 147, 149, 160, 169, 175, 179, 267, 268, 269], "s_0": [77, 82, 84, 86, 91, 92, 160, 175, 177], "absenc": [77, 86], "sum_": [77, 92, 94, 103, 175, 271], "antipod": [77, 82, 160, 169, 175, 247], "symmetri": [77, 82, 160, 169, 175, 271], "wijkl": [77, 177], "xxxx": [77, 175], "yyyi": [77, 175], "zzzz": [77, 175], "xxxy": [77, 175], "xxxz": [77, 175], "xyyi": [77, 175], "yyyz": [77, 175], "xzzz": [77, 175], "yzzz": [77, 175], "xxyi": [77, 175], "xxzz": [77, 175], "yyzz": [77, 175], "xxyz": [77, 175], "xyyz": [77, 175], "xyzz": [77, 175], "compare_map": [77, 87, 183], "fraw": [77, 78, 79, 80, 85, 86, 87, 88, 89, 96, 97, 121], "unusu": [77, 169, 251], "extent": 77, "bval_sel": 77, "datamask": 77, "favor": [77, 150, 253], "sphx_glr_examples_built_preprocessing_denoise_mppca": 77, "dkifit": [77, 78], "diffusionkurtosisfit": [77, 183], "diffusionkurtosisifit": 77, "decoupl": [77, 89], "fit_label": [77, 87, 181], "map_kwarg": [77, 87, 181], "2e": [77, 93], "diffusion_tensor_measures_from_dti_and_dki": 77, "underestim": [77, 84], "dki_standard_measur": 77, "confin": [77, 169, 175, 273], "compartment": [77, 89, 126, 175], "myelin": [77, 78, 82], "sheath": 77, "perpendicularli": 77, "amplitud": [77, 84, 147, 175, 267], "band": [77, 175], "dark": 77, "artifactu": 77, "decai": [77, 86, 175, 267], "consequ": [77, 86, 98, 126, 160], "tendenc": [77, 178], "inadequ": 77, "parametr": [77, 90, 147, 168, 170, 175, 176, 247, 273, 274, 275], "physiolog": [77, 98, 175, 182, 212, 273], "concav": 77, "convex": [77, 86, 87, 100, 175], "unring": [77, 158, 164, 253], "powder": [77, 89], "mkt": [77, 175, 183], "rtk": [77, 175, 183], "physic": [77, 86, 87, 92, 98, 148, 160, 168, 169, 175, 177, 181, 182, 215, 270, 273], "trace": [77, 169, 183, 253, 267], "kfa": [77, 175, 183, 255, 259], "alternative_dki_metr": 77, "fit_method": [77, 86, 92, 98, 175, 182, 209, 212, 253, 259], "cl": [77, 78], "cwl": 77, "unconstrain": [77, 92, 169], "mosek": [77, 87, 92], "cvxpy_solv": [77, 87, 92, 175], "greatli": [77, 87], "atyp": 77, "scenario": [77, 106], "counterpart": 77, "unexpect": [77, 84, 244], "qualit": [77, 251], "dkimodel_plu": 77, "dkifit_plu": 77, "1403": [77, 87, 88, 92, 244], "userwarn": [77, 86, 87, 88, 92, 104, 245, 251, 253], "inaccur": [77, 87, 88, 92, 253, 260], "optimum": [77, 169, 175], "optimal_inaccur": 77, "func": [77, 86, 88, 104, 168, 169, 175, 177, 182], "arg": [77, 86, 88, 104, 168, 169, 170, 173, 175, 182, 246], "pure": [77, 149, 171], "alternative_dki_measures_comparison_to_dkiplu": 77, "jen": [77, 78, 89, 152, 160, 175, 182, 209, 273], "joseph": [77, 78, 89, 152, 160, 175, 178, 182, 209, 273], "helpern": [77, 78, 89, 160, 175, 182, 209, 273], "anita": [77, 83, 89, 128, 160, 170, 175, 182, 209, 273], "ramani": [77, 89, 160, 175, 182, 209, 273], "hanzhang": [77, 89, 160, 175, 182, 209, 273], "lu": [77, 87, 89, 90, 160, 175, 182, 209, 212, 273], "kyle": [77, 89, 160, 175, 182, 209, 273], "kaczynski": [77, 89, 160, 175, 182, 209, 273], "1432": [77, 89, 160, 175, 182, 209, 251, 273], "1440": [77, 89, 160, 175, 182, 209, 244, 273], "2005": [77, 79, 83, 89, 94, 98, 160, 168, 175, 182, 209, 212, 213, 252, 273], "20508": [77, 89, 160, 175, 182, 209, 273], "marta": [77, 78, 84, 89, 102, 115, 116, 117, 118, 126, 128, 160, 175, 176, 177, 179, 273], "maurizio": [77, 78, 89, 175, 273], "marral": [77, 78, 89, 175, 273], "elizabeth": [77, 78, 83, 89, 128, 170, 175, 273], "huber": [77, 78, 89, 175, 273], "kruper": [77, 78, 83, 89, 128, 170, 175, 258, 262, 273], "sec": [77, 78, 89, 175, 262, 273], "stimul": [77, 78, 89, 175, 273], "3389": [77, 78, 89, 102, 115, 116, 117, 118, 128, 133, 151, 152, 153, 154, 175, 176, 179, 253, 273], "fnhum": [77, 78, 89, 175, 273], "675433": [77, 78, 89, 175, 273], "morgado": [77, 84, 89, 126, 160, 175, 177, 273], "gouveia": [77, 89, 126, 160, 175, 177, 273], "nune": [77, 89, 126, 160, 175, 177, 273], "ferreira": [77, 89, 126, 160, 175, 177, 273], "geometri": [77, 89, 126, 160, 167, 175, 177, 179, 183, 244, 249, 273], "novel": [77, 78, 87, 89, 90, 126, 160, 164, 175, 177, 273], "biomark": [77, 89, 126, 160, 175, 177, 178, 273], "004": [77, 89, 108, 109, 110, 126, 160, 161, 175, 177, 273], "willem": [77, 273], "ott": [77, 273], "rick": [77, 273], "dijkhuizen": [77, 273], "rekindl": [77, 273], "794": [77, 241, 273], "808": [77, 241, 273], "25165": [77, 273], "universidad": [77, 273], "lisboa": [77, 273], "portug": [77, 273], "repositorio": [77, 273], "ul": [77, 273], "10451": [77, 273], "8511": [77, 273], "ulfc104137_tm_rafael_henriqu": [77, 273], "ali": [77, 78, 175, 182, 209, 273], "babak": [77, 175, 182, 209, 273], "ardekani": [77, 175, 182, 209, 273], "823": [77, 175, 182, 209, 273], "836": [77, 175, 182, 209, 241, 273], "22655": [77, 175, 182, 209, 273], "poot": [77, 273], "wim": [77, 273], "heck": [77, 273], "Ines": [77, 273], "blockx": [77, 273], "annemi": [77, 273], "linden": [77, 83, 128, 170, 273], "marleen": [77, 273], "verhoy": [77, 273], "sijber": [77, 88, 171, 175, 273], "22603": [77, 273], "tom": [77, 87, 92, 152, 168, 170, 175, 242, 260, 261, 273], "aasa": [77, 87, 92, 170, 175, 273], "feragen": [77, 87, 92, 170, 175, 273], "program": [77, 87, 92, 147, 170, 175, 182, 223, 273], "209": [77, 87, 121, 170, 175, 182, 212, 248, 273], "116405": [77, 87, 170, 175, 273], "lund": [77, 175, 273], "ryan": [77, 83, 128, 170, 175, 273], "sangil": [77, 175, 273], "experiment": [77, 164, 175, 177, 273], "computation": [77, 163, 168, 175, 273], "1754": [77, 175, 246, 273], "1760": [77, 175, 251, 273], "24743": [77, 175, 273], "russel": [77, 83, 128, 152, 170, 175, 273], "glenn": [77, 164, 175, 273], "nmr": [77, 93, 160, 169, 175, 182, 212, 273], "biomedicin": [77, 160, 175, 273], "448": [77, 121, 175, 249, 273], "459": [77, 121, 175, 240, 273], "nbm": [77, 160, 175, 273], "3271": [77, 175, 253, 273], "741": [77, 99, 240], "reconst_dki": [77, 99, 242, 264], "hinder": [78, 87, 175, 177, 273], "influenc": [78, 84, 178], "intra": [78, 89, 126, 175, 182, 215, 274, 275], "cellular": [78, 89, 126, 175], "tortuos": [78, 160, 183, 242], "latter": [78, 160, 168, 174], "degener": [78, 169], "gaussian_filt": 78, "dki_micro": [78, 183], "fwhm": 78, "gauss_std": 78, "data_smooth": 78, "kurtosismicrostructuremodel": [78, 183], "dki_micro_model": 78, "planar": [78, 91, 92, 169, 170, 179, 183, 262, 273], "criteria": [78, 179], "predefin": [78, 167, 171, 176], "well_aligned_mask": 78, "cp": [78, 162, 182, 237], "isnan": [78, 82, 247], "dki_micro_fit": 78, "kurtosismicrostructurefit": 78, "awf": [78, 175, 183], "tort": [78, 169, 176, 182], "im0": [78, 89], "im1": [78, 89], "kurtosis_microstructural_measur": 78, "overlaid": [78, 94, 181], "177": [78, 121, 160, 175, 249, 273], "188": [78, 85, 99, 121, 125, 126, 160, 175, 273], "006": [78, 160, 175, 182, 207, 217, 218, 273], "andreana": [78, 273], "benitez": [78, 273], "falangola": [78, 273], "rachael": [78, 273], "deardorff": [78, 273], "vittoria": [78, 273], "spampinato": [78, 273], "jame": [78, 82, 83, 108, 109, 110, 120, 128, 160, 161, 170, 182, 212, 273], "babb": [78, 273], "steven": [78, 83, 84, 128, 170, 273], "ferri": [78, 273], "alzheim": [78, 174, 182, 196, 273], "american": [78, 273], "neuroradiologi": [78, 273], "2105": [78, 255, 273], "2112": [78, 255, 273], "ajnr": [78, 273], "3174": [78, 253, 273], "a3553": [78, 273], "sungheon": [78, 273], "kim": [78, 152, 174, 182, 196, 273], "grossman": [78, 108, 109, 110, 161, 273], "matild": [78, 273], "ingles": [78, 273], "demyelin": [78, 273], "20th": [78, 273], "21st": [78, 273], "melbourn": [78, 273], "australia": [78, 273], "642": [78, 99, 245], "reconst_dki_micro": [78, 99, 264], "keyhol": 79, "ndindex": [79, 93, 183, 247, 249], "diffusionspectrummodel": [79, 80, 81, 124, 183, 241], "taiwan_ntu_dsi": [79, 80, 85, 97, 274, 275], "dsmodel": [79, 80], "dataslic": [79, 80, 85, 97], "dsfit": 79, "172": [79, 98, 99, 120, 121, 248], "724": [79, 83, 85, 87, 88, 96, 113, 119, 179, 240, 245], "fashion": [79, 86, 160, 168, 174], "345": [79, 91, 92, 121, 175, 249, 273], "disc": [79, 169], "memmap": [79, 171, 178], "gbyte": 79, "fig_hist": [79, 98, 135], "dsi_gfa": 79, "jai": [79, 85, 175, 182, 214, 273], "patric": [79, 273], "hagmann": [79, 273], "wen": [79, 85, 174, 175, 182, 214, 273], "yih": [79, 85, 175, 182, 214, 273], "tseng": [79, 85, 175, 182, 214, 273], "timothi": [79, 87, 90, 96, 152, 153, 174, 175, 177, 182, 196, 273], "rees": [79, 273], "weisskoff": [79, 273], "1377": [79, 244, 273], "1386": [79, 244, 273], "20642": [79, 273], "david": [79, 83, 100, 102, 104, 112, 128, 139, 152, 153, 168, 169, 170, 174, 175, 176, 178, 181, 182, 190, 222, 224, 230, 233, 240, 242, 243, 244, 245, 258, 259, 260, 271, 273], "1358": [79, 175, 244, 273], "1372": [79, 175, 262, 273], "2004": [79, 170, 175, 177, 259, 273], "20279": [79, 175, 273], "412": [79, 99, 121, 249], "reconst_dsi": [79, 99, 264], "rtop": [80, 87, 90, 97, 175, 177, 181, 182, 183, 216, 240, 262], "msd": [80, 87, 89, 90, 97, 175, 177, 182, 183, 216], "qgrid_siz": [80, 175, 182, 210, 211], "filter_width": [80, 175, 182, 210, 211], "rtop_sign": [80, 97, 175, 183], "rtop_pdf": [80, 97, 175, 183], "mse": [80, 97], "rtop_pdf_norm": 80, "msd_norm": 80, "msd_discret": [80, 175, 183], "ax1": [80, 83, 93, 97, 128], "add_subplot": [80, 83, 97, 120], "ind": [80, 83, 97, 175, 178], "ax2": [80, 83, 97, 128], "ax3": [80, 83, 97], "yu": [80, 87, 97, 175, 273], "chien": [80, 87, 97, 175, 273], "hybrid": [80, 87, 97, 175, 273], "617": [80, 97, 175, 240, 273], "629": [80, 97, 152, 175, 240, 273], "050": [80, 97, 175, 273], "aaron": [80, 97, 175, 273], "858": [80, 97, 175, 241, 273], "865": [80, 97, 175, 242, 273], "922696": [80, 97, 175, 273], "reconst_dsi_metr": [80, 99, 264], "goal": [81, 124, 151, 161], "diffusionspectrumdeconvmodel": [81, 124, 183], "multi_tensor_odf": [81, 95, 124, 127, 183], "btabl": [81, 124], "dsi515btabl": [81, 124], "0015": [81, 95, 124, 127, 175, 177], "0003": [81, 95, 124, 127, 175, 177], "odf_gt": [81, 124], "dsi_model": [81, 124], "dsi_odf": [81, 124], "dsid_model": [81, 124], "dsid_odf": [81, 124], "odf_actor": [81, 82, 83, 95, 124, 127], "rotatex": [81, 87, 95, 96, 103, 124, 127, 130], "066": [81, 124, 273], "419": [81, 99, 121, 249], "reconst_dsid": [81, 99, 242, 264], "colleagu": [82, 160], "influenti": [82, 160], "commonli": [82, 160], "quadrat": [82, 160, 175], "pmatrix": [82, 91, 92, 160, 169, 175, 267, 268], "xx": [82, 160, 267, 268], "xz": [82, 160, 267, 268], "yx": [82, 160, 268], "yy": [82, 160, 267, 268], "yz": [82, 160, 267, 268, 273], "zx": [82, 160], "zy": [82, 160], "zz": [82, 160, 267, 268], "covari": [82, 91, 92, 160, 175], "diagon": [82, 152, 160, 175, 182, 230], "numer": [82, 147, 164, 168, 169, 175, 177, 181, 256, 258, 267, 273, 276], "recov": [82, 90, 98, 113, 174, 175, 268, 271], "dxx": [82, 160, 175, 182, 212], "dxy": [82, 160, 175, 182, 212], "dyi": [82, 160, 175, 182, 212], "dxz": [82, 160, 175, 182, 212], "dyz": [82, 160, 175, 182, 212], "dzz": [82, 160, 175, 182, 212], "tensor_v": 82, "lower_triangular": [82, 183], "quadratic_form": [82, 175, 183], "eigen": [82, 173, 175, 177, 182, 212, 236], "That": [82, 86, 143, 146, 148, 149, 168, 175], "unrestrict": 82, "mathemat": [82, 92, 103, 168, 175, 179, 182, 226, 245, 270, 271, 273, 276], "lambda_1": [82, 175, 267, 268], "lambda_2": [82, 175, 267, 268], "lambda_3": [82, 175, 267, 268], "carefulli": [82, 156], "pack": 82, "wrap": [82, 168, 175, 179, 182, 198, 199, 200, 227, 231, 240, 250], "decreas": [82, 87, 90, 102, 106, 242, 245], "color_fa": [82, 98, 183, 277], "tensor_fa": 82, "viewer": [82, 142, 148, 272], "tensor_evec": 82, "complimentari": 82, "md1": 82, "tensors_md": 82, "md2": 82, "tensor_rgb": 82, "ellipsoid": [82, 98, 169, 244], "tensor_slic": [82, 98], "scalar_color": [82, 98], "tensor_ellipsoid": 82, "tensor_odf": 82, "drawback": 82, "mislead": [82, 242, 255], "fortun": [82, 95], "mattiello": [82, 160, 182, 212, 273], "spectroscopi": [82, 160, 267, 273], "259": [82, 93, 121, 160, 175, 248, 273], "267": [82, 118, 121, 160, 248, 273], "januari": [82, 86, 93, 160, 165, 177, 182, 215, 273, 274, 275], "1994": [82, 160, 182, 212, 252, 267, 273], "dx": [82, 86, 160, 177, 182, 215, 273], "s0006": [82, 160, 273], "3495": [82, 160, 273], "80775": [82, 160, 273], "sinisa": [82, 168, 273], "pajev": [82, 168, 273], "526": [82, 168, 249, 273], "540": [82, 168, 182, 200, 249, 273], "mrm15": [82, 168, 273], "249": [82, 99, 118, 121, 248], "reconst_dti": [82, 99, 242, 264], "op": [83, 84, 128, 249, 272], "fetch_hbn": [83, 84, 128, 183], "forecastmodel": [83, 183], "hbn": [83, 128, 164, 182, 206, 262], "pod2": [83, 170], "data_path": [83, 84], "ndaraa948vfh": [83, 84, 128, 170, 182, 206], "dwi_path": [83, 84], "qsiprep": [83, 84], "hbnsiteru": [83, 84, 128], "ndaraa948vfh_s": [83, 84], "hbnsiteru_acq": [83, 84], "64dir_spac": [83, 84, 128], "t1w_desc": [83, 84, 128], "preproc_dwi": [83, 84], "mask_img": [83, 84, 92, 170], "brain_mask": [83, 84, 143, 151, 160, 182, 202, 227], "mask_smal": [83, 84], "dec_alg": [83, 175, 182, 213], "fm": 83, "f_fit": 83, "d_par": [83, 175], "dpar": [83, 175, 183], "d_perp": [83, 175], "dperp": [83, 175, 183], "forecast_indic": 83, "shrink": 83, "ax4": 83, "dpi": [83, 181], "magnif": 83, "1194": [83, 175, 182, 213, 242, 273], "1206": [83, 175, 182, 213, 242, 273], "20667": [83, 175, 182, 213, 273], "enrico": [83, 89, 175, 182, 213, 245, 273], "frithjof": [83, 175, 182, 213, 273], "kruggel": [83, 175, 182, 213, 273], "1752": [83, 175, 182, 213, 251, 273], "1763": [83, 175, 182, 213, 251, 273], "25734": [83, 175, 182, 213, 273], "gloria": [83, 87, 175, 182, 213, 273], "menegaz": [83, 87, 175, 182, 213, 273], "francesco": [83, 175, 182, 213, 273], "grussu": [83, 175, 182, 213, 273], "lipeng": [83, 175, 182, 213, 273], "ning": [83, 175, 182, 213, 273], "lindsai": [83, 128, 170, 175, 273], "jasmin": [83, 128, 170, 273], "escalera": [83, 128, 170, 273], "lei": [83, 128, 170, 273], "ai": [83, 128, 169, 170, 273], "charissa": [83, 128, 170, 273], "andreotti": [83, 128, 170, 273], "karina": [83, 128, 170, 273], "febr": [83, 128, 170, 273], "mangon": [83, 128, 170, 273], "natan": [83, 128, 170, 273], "potler": [83, 128, 170, 273], "langer": [83, 128, 170, 273], "alexi": [83, 128, 170, 273], "meagan": [83, 128, 170, 273], "kovac": [83, 128, 170, 273], "shannon": [83, 128, 129, 130, 152, 170, 176, 178, 182, 188, 189, 230, 273], "litk": [83, 128, 170, 273], "bridget": [83, 128, 170, 273], "hagan": [83, 128, 170, 273], "jennif": [83, 128, 170, 273], "andersen": [83, 128, 170, 273], "batya": [83, 128, 170, 273], "bronstein": [83, 128, 170, 273], "anastasia": [83, 98, 128, 170, 273], "bui": [83, 128, 170, 273], "marijayn": [83, 128, 170, 273], "bushei": [83, 128, 170, 273], "butler": [83, 128, 170, 273], "victoria": [83, 128, 170, 273], "castagna": [83, 128, 170, 273], "camacho": [83, 128, 170, 262, 273], "elisha": [83, 128, 170, 273], "citera": [83, 128, 170, 273], "cluca": [83, 128, 170, 273], "samantha": [83, 128, 170, 273], "cohen": [83, 128, 170, 175, 273], "sarah": [83, 128, 170, 175, 273], "dufek": [83, 128, 170, 273], "megan": [83, 128, 170, 273], "eav": [83, 128, 170, 273], "fradera": [83, 128, 170, 273], "judith": [83, 128, 170, 273], "gardner": [83, 128, 170, 273], "natali": [83, 128, 170, 273], "grant": [83, 128, 170, 273], "villega": [83, 128, 170, 273], "gabriella": [83, 128, 170, 273], "camil": [83, 128, 170, 273], "emili": [83, 128, 152, 170, 273], "hart": [83, 128, 170, 273], "shana": [83, 128, 170, 273], "harri": [83, 128, 170, 273], "horton": [83, 128, 170, 273], "kahn": [83, 128, 170, 273], "katherin": [83, 128, 152, 170, 273], "kabotyanski": [83, 128, 170, 273], "bernard": [83, 128, 152, 170, 273], "karmel": [83, 128, 170, 273], "simon": [83, 128, 170, 273], "kelli": [83, 128, 170, 273], "kayla": [83, 128, 170, 273], "kleinman": [83, 128, 170, 273], "bonhwang": [83, 128, 170, 273], "koo": [83, 128, 170, 273], "eliza": [83, 128, 170, 273], "kramer": [83, 128, 170, 273], "lennon": [83, 128, 170, 273], "catherin": [83, 128, 170, 273], "lord": [83, 128, 170, 273], "ginni": [83, 128, 170, 273], "mantello": [83, 128, 170, 273], "ami": [83, 128, 170, 273], "margoli": [83, 128, 170, 273], "kathleen": [83, 128, 170, 273], "merikanga": [83, 128, 170, 273], "milham": [83, 128, 170, 273], "giusepp": [83, 93, 128, 170, 273], "minniti": [83, 128, 170, 273], "rebecca": [83, 128, 170, 273], "neuhau": [83, 128, 170, 273], "alexandra": [83, 90, 128, 170, 175, 273], "levin": [83, 128, 170, 273], "yael": [83, 128, 170, 273], "osman": [83, 128, 170, 273], "luca": [83, 128, 170, 259, 273], "parra": [83, 128, 170, 273], "ken": [83, 128, 170, 273], "pugh": [83, 128, 170, 273], "racanello": [83, 128, 170, 273], "restrepo": [83, 128, 170, 273], "saltzman": [83, 128, 170, 273], "septimu": [83, 128, 170, 273], "tobe": [83, 128, 170, 273], "rachel": [83, 128, 170, 273], "waltz": [83, 128, 170, 273], "william": [83, 93, 100, 102, 115, 116, 117, 118, 128, 152, 168, 170, 174, 175, 176, 179, 273], "yeo": [83, 128, 170, 273], "castellano": [83, 128, 170, 273], "arno": [83, 128, 170, 175, 273], "klein": [83, 128, 170, 273], "toma": [83, 128, 170, 273], "pau": [83, 128, 170, 273], "leventh": [83, 128, 170, 273], "cameron": [83, 128, 170, 273], "craddock": [83, 128, 170, 273], "harold": [83, 128, 170, 273], "koplewicz": [83, 128, 170, 273], "transdiagnost": [83, 128, 170, 273], "pediatr": [83, 128, 170, 273, 274, 275], "mental": [83, 128, 170, 273], "170181": [83, 128, 170, 273], "decemb": [83, 86, 88, 102, 104, 115, 116, 117, 118, 128, 150, 165, 169, 170, 175, 176, 179, 273], "richi": [83, 128, 170, 251, 273], "halford": [83, 128, 170, 251, 273], "sendi": [83, 128, 170, 273], "caffarra": [83, 128, 170, 273], "sydnei": [83, 128, 170, 273], "covitz": [83, 128, 170, 273], "iliana": [83, 128, 170, 273], "karipidi": [83, 128, 170, 273], "rbara": [83, 128, 170, 273], "avelar": [83, 128, 170, 273], "pereira": [83, 128, 170, 273], "ethan": [83, 128, 170, 273], "valeri": [83, 128, 170, 178, 273], "sydnor": [83, 128, 170, 273], "nichola": [83, 120, 128, 168, 170, 175, 273], "abbott": [83, 128, 170, 273], "gagana": [83, 128, 170, 273], "marylena": [83, 128, 170, 273], "bleil": [83, 128, 170, 273], "bloomfield": [83, 128, 170, 273], "vinc": [83, 128, 170, 273], "josian": [83, 128, 170, 273], "bourqu": [83, 128, 170, 273], "rori": [83, 128, 170, 273], "boyl": [83, 128, 170, 273], "julia": [83, 128, 133, 170, 273], "brynildsen": [83, 128, 170, 273], "navona": [83, 128, 170, 273], "calarco": [83, 128, 170, 273], "jaim": [83, 128, 170, 273], "castrellon": [83, 128, 170, 273], "natasha": [83, 128, 170, 175, 273], "chaku": [83, 128, 170, 273], "bosi": [83, 128, 170, 273], "chen": [83, 128, 170, 240, 273], "sidhant": [83, 128, 170, 273], "chopra": [83, 128, 170, 273], "coffei": [83, 128, 152, 170, 273], "nigel": [83, 128, 170, 273], "colenbi": [83, 128, 170, 273], "cox": [83, 128, 170, 273], "elliott": [83, 128, 170, 273], "crippen": [83, 128, 170, 273], "jacob": [83, 128, 170, 260, 273], "crous": [83, 128, 170, 273], "szabolc": [83, 128, 170, 273], "benjamin": [83, 128, 170, 171, 273], "leener": [83, 128, 170, 273], "gwyneth": [83, 128, 170, 273], "delap": [83, 128, 170, 273], "zhi": [83, 128, 170, 273], "deng": [83, 128, 170, 273], "jule": [83, 128, 170, 273], "roger": [83, 128, 170, 174, 273], "dugr": [83, 128, 170, 273], "ander": [83, 128, 170, 273], "eklund": [83, 128, 170, 273], "kirsten": [83, 128, 170, 273], "elli": [83, 128, 170, 273], "er": [83, 128, 170, 273], "farmer": [83, 128, 170, 273], "faskowitz": [83, 128, 170, 273], "jodi": [83, 128, 170, 273], "finch": [83, 128, 170, 273], "guillaum": [83, 128, 170, 242, 243, 245, 273], "flandin": [83, 128, 170, 273], "flounder": [83, 128, 170, 273], "leon": [83, 128, 170, 174, 182, 196, 200, 255, 259, 273], "fonvil": [83, 128, 170, 273], "summer": [83, 128, 164, 165, 170, 252, 273], "frandsen": [83, 128, 170, 273], "dea": [83, 128, 170, 273], "garic": [83, 128, 170, 273], "patricia": [83, 128, 170, 273], "garrido": [83, 128, 170, 273], "squez": [83, 128, 170, 273], "gonzalez": [83, 128, 170, 242, 273], "escamilla": [83, 128, 170, 273], "grogan": [83, 128, 170, 273], "mareik": [83, 128, 170, 273], "grotheer": [83, 128, 170, 273], "gruskin": [83, 128, 170, 273], "guido": [83, 128, 170, 273], "guberman": [83, 128, 170, 273], "edda": [83, 128, 170, 273], "briana": [83, 128, 170, 273], "haggerti": [83, 128, 170, 273], "younghe": [83, 128, 170, 273], "hahn": [83, 128, 170, 273], "hall": [83, 128, 170, 273], "jami": [83, 128, 152, 170, 273], "hanson": [83, 128, 170, 273], "yann": [83, 128, 170, 273], "bruno": [83, 128, 170, 273], "hebl": [83, 128, 170, 273], "vieira": [83, 128, 170, 273], "meik": [83, 128, 170, 273], "hettwer": [83, 128, 170, 273], "harriet": [83, 128, 170, 273], "hobdai": [83, 128, 170, 273], "corei": [83, 128, 170, 273], "horien": [83, 128, 170, 273], "huang": [83, 128, 170, 273], "zeeshan": [83, 128, 170, 273], "huqu": [83, 128, 170, 273], "anthoni": [83, 128, 170, 273], "isabella": [83, 128, 170, 273], "kahhal": [83, 128, 170, 273], "kamhout": [83, 128, 170, 273], "keller": [83, 128, 170, 273], "harmandeep": [83, 128, 170, 273], "singh": [83, 128, 170, 181, 182, 222, 242, 244, 273], "khera": [83, 128, 170, 273], "kiar": [83, 128, 170, 273], "kirk": [83, 128, 170, 273], "kohl": [83, 128, 170, 273], "stephani": [83, 128, 152, 170, 273], "koren": [83, 128, 170, 273], "cole": [83, 128, 170, 273], "korponai": [83, 128, 170, 273], "alyssa": [83, 128, 170, 273], "kozlowski": [83, 128, 170, 273], "nevena": [83, 128, 170, 273], "kraljev": [83, 128, 170, 273], "alberto": [83, 128, 170, 273], "lazari": [83, 128, 170, 273], "mackenzi": [83, 128, 170, 273], "leavitt": [83, 128, 170, 273], "zhaolong": [83, 128, 170, 273], "giulia": [83, 128, 170, 259, 273], "liberati": [83, 128, 170, 273], "lorenc": [83, 128, 170, 273], "annabel": [83, 128, 170, 273], "julina": [83, 128, 170, 273], "lossin": [83, 128, 170, 273], "lotter": [83, 128, 170, 273], "lydon": [83, 128, 170, 273], "stalei": [83, 128, 170, 273], "madan": [83, 128, 170, 273], "nevil": [83, 128, 170, 273], "magiels": [83, 128, 170, 273], "hilari": [83, 128, 170, 273], "marusak": [83, 128, 170, 273], "julien": [83, 128, 170, 175, 273], "mayor": [83, 128, 170, 273], "amanda": [83, 128, 170, 273], "mcgowan": [83, 128, 170, 273], "kahini": [83, 128, 170, 273], "mehta": [83, 128, 170, 255, 273], "meisler": [83, 128, 170, 273], "cleanthi": [83, 128, 170, 273], "mitchel": [83, 128, 170, 273], "morand": [83, 128, 170, 273], "beaulieu": [83, 128, 170, 273], "newman": [83, 121, 128, 170, 174, 176, 182, 191, 273], "jare": [83, 128, 170, 273], "nielsen": [83, 128, 170, 273], "shane": [83, 128, 170, 273], "mara": [83, 128, 170, 273], "amar": [83, 128, 170, 273], "ojha": [83, 128, 170, 273], "omari": [83, 128, 170, 273], "park": [83, 102, 128, 170, 174, 182, 202, 253, 254, 261, 262, 263, 273], "madelin": [83, 128, 170, 273], "peterson": [83, 84, 128, 170, 175, 242, 273, 274, 275], "pine": [83, 128, 170, 273], "pisanu": [83, 128, 170, 273], "rich": [83, 92, 128, 170, 273], "sacchet": [83, 128, 170, 273], "ashish": [83, 128, 170, 273], "sahoo": [83, 128, 170, 273], "amjad": [83, 128, 170, 273], "samara": [83, 128, 170, 273], "farah": [83, 128, 170, 273], "thore": [83, 128, 170, 273], "shaffer": [83, 128, 170, 273], "ekaterina": [83, 128, 170, 273], "shatalina": [83, 128, 170, 273], "sara": [83, 128, 170, 273], "skyler": [83, 128, 170, 273], "sinclair": [83, 128, 170, 273], "jae": [83, 128, 170, 273], "song": [83, 100, 101, 108, 109, 110, 128, 161, 170, 273], "griffin": [83, 128, 170, 273], "stockton": [83, 128, 170, 273], "hogrogian": [83, 128, 170, 273], "tamn": [83, 128, 170, 273], "ursula": [83, 128, 170, 273], "toolei": [83, 128, 170, 273], "tripathi": [83, 128, 170, 273], "hamid": [83, 128, 170, 273], "turker": [83, 128, 170, 273], "sofi": [83, 128, 170, 273], "louis": [83, 128, 170, 273], "valk": [83, 128, 170, 273], "wall": [83, 128, 170, 273], "cheryl": [83, 128, 152, 170, 273], "walther": [83, 128, 170, 273], "yuchao": [83, 128, 170, 273], "wang": [83, 128, 170, 174, 273], "bertil": [83, 128, 170, 273], "wegmann": [83, 128, 170, 273], "welton": [83, 128, 170, 273], "alex": [83, 128, 170, 253, 273], "wiesman": [83, 128, 170, 273], "drew": [83, 128, 170, 273], "winter": [83, 128, 152, 170, 255, 273], "ruiyi": [83, 128, 170, 273], "yuan": [83, 128, 170, 273], "sadi": [83, 128, 170, 273], "zacharek": [83, 128, 170, 273], "chri": [83, 93, 128, 147, 152, 170, 245, 273], "zajner": [83, 128, 170, 273], "ilya": [83, 128, 170, 273], "zakharov": [83, 128, 170, 273], "gianpaolo": [83, 128, 170, 273], "zammarchi": [83, 128, 170, 273], "dale": [83, 128, 170, 273], "zhou": [83, 128, 170, 273], "zimmerman": [83, 128, 170, 273], "zoner": [83, 128, 170, 273], "theodor": [83, 128, 170, 262, 273], "satterthwait": [83, 128, 170, 273], "consortium": [83, 128, 170, 273], "616": [83, 128, 170, 240, 273], "s41597": [83, 128, 170, 273], "022": [83, 113, 128, 170, 175, 176, 273], "01695": [83, 128, 170, 273], "376": [83, 99, 121, 249], "reconst_forecast": [83, 99, 244, 264], "parenchyma": 84, "cerebr": [84, 86], "spinal": [84, 86, 133, 171], "morphologi": 84, "enlarg": 84, "atrophi": 84, "pathologi": 84, "s_0fe": 84, "thebdiffus": 84, "freewatertensormodel": [84, 183], "fwdtimodel": 84, "fwdtifit": 84, "_minpack_pi": 84, "492": [84, 121, 249], "maxfev": 84, "freewatertensorfit": [84, 183], "dtimodel": 84, "dtifit": [84, 267, 268], "dti_fa": [84, 128], "dti_md": 84, "fadiff": 84, "5e": [84, 91], "mddiff": 84, "in_vivo_free_water_dti_and_standard_dti_measur": 84, "periventricular": 84, "problemat": 84, "reproduc": [84, 90, 91, 131, 158, 169, 170, 174, 176, 179, 182, 245, 249, 254, 255, 273], "inflat": [84, 131], "in_vivo_free_water_dti_and_standard_dti_correct": 84, "dismiss": 84, "ofer": [84, 91, 92, 175, 273], "nir": [84, 273], "sochen": [84, 273], "yaniv": [84, 177, 273], "gur": [84, 273], "nathan": [84, 273], "intrat": [84, 273], "assaf": [84, 177, 273], "717": [84, 259, 273], "730": [84, 240, 273], "22055": [84, 273], "hoi": [84, 273], "kecskemeti": [84, 273], "323": [84, 121, 249, 273], "333": [84, 121, 249, 273], "053": [84, 273], "biorxiv": [84, 104, 168, 175, 182, 190, 273], "1101": [84, 104, 168, 175, 182, 190, 242, 273], "108795": [84, 175, 273], "686": [84, 99, 240], "reconst_fwdti": [84, 99, 243, 264], "generalizedqsamplingmodel": [85, 183], "gqmodel": 85, "sampling_length": [85, 175, 182, 214], "gqfit": 85, "gqpeak": 85, "gqpeak_valu": 85, "gqpeak_indic": 85, "fang": [85, 129, 130, 152, 153, 175, 176, 178, 182, 188, 189, 214, 230, 273], "isaac": [85, 175, 182, 214, 273], "1626": [85, 175, 182, 214, 245, 273], "1635": [85, 175, 182, 214, 258, 273], "2045126": [85, 175, 182, 214, 273], "reconst_gqi": [85, 99, 242, 264], "perfus": [86, 150, 160, 164, 175, 182, 215, 273], "sequenc": [86, 103, 116, 117, 128, 147, 148, 149, 160, 168, 169, 170, 174, 176, 177, 179, 181, 182, 184, 253, 255, 267, 268, 269], "understood": [86, 160, 179], "stejskal": [86, 147, 160, 177, 182, 215, 267, 268, 269, 273], "tanner": [86, 147, 152, 160, 177, 182, 215, 267, 268, 269, 273], "brownian": [86, 160], "thermal": [86, 98, 160], "vascular": [86, 160], "blood": [86, 160], "pressur": [86, 160], "pseudo": [86, 88, 160, 169, 175, 181, 182, 215, 273], "laid": [86, 160, 175], "macroscop": [86, 160, 175], "fe": 86, "weigh": 86, "ivimmodel": [86, 175], "read_ivim": [86, 183], "regist": [86, 100, 101, 102, 103, 104, 108, 109, 110, 112, 139, 153, 154, 161, 168, 173, 174, 182, 183, 190, 233, 245, 246, 255, 263], "bvalu": [86, 88, 89, 121, 126, 169, 175, 182, 197, 198, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220], "midwai": 86, "axhlin": 86, "axvlin": 86, "ivim_data_slic": 86, "heat": 86, "hair": 86, "medial": 86, "mixtur": [86, 168], "x1": [86, 175, 181], "x2": [86, 175, 181], "y1": [86, 169, 181], "y2": [86, 169, 181], "csf_slice": 86, "exponenti": [86, 175, 182, 226, 249], "trr": [86, 175], "guess": [86, 168, 175], "split_b_d": [86, 160, 175, 182, 215], "mono": [86, 168], "logarithm": [86, 92, 175, 182, 226], "split_b_s0": [86, 175, 182, 215], "s0_": 86, "d_star": [86, 175, 182, 183, 215], "two_stag": [86, 175], "literatur": [86, 136, 175, 271], "survei": 86, "ivimfit": [86, 183], "332": [86, 121, 242], "x0": [86, 112, 168, 169, 176, 182, 233, 251], "feasibl": [86, 175, 273], "leastsq": 86, "estimate_f_d_star": [86, 175, 183], "params_f_d_star": [86, 175], "336": [86, 121, 249], "unfeas": 86, "params_two_stag": 86, "_leastsq": 86, "params_linear": 86, "multi_voxel": [86, 183, 247, 255], "violat": [86, 92], "svf": 86, "single_voxel_fit": [86, 175], "ijk": 86, "model_param": [86, 175, 242], "arrang": [86, 170, 177, 179], "ivimparam": 86, "20x20": 86, "height": [86, 244], "estimated_param": 86, "97863107e": 86, "00000000e": 86, "69393990e": 86, "71052513e": 86, "heatmap": [86, 93], "def": [86, 90, 101, 103, 106, 109, 115, 116, 117, 130, 135, 139, 142, 143, 146, 169, 175, 177, 249], "plot_map": 86, "raw_data": 86, "clim": 86, "s0_predict": [86, 175, 182, 183, 215], "predicted_s0": 86, "measured_s0": 86, "perfusion_fract": [86, 175, 182, 183, 215], "perfusion_coeff": 86, "diffusion_coeff": 86, "refin": [86, 100, 112, 168, 175, 176, 182, 183, 230], "varpro": [86, 175, 251, 252, 260], "mix": [86, 152, 164, 175, 182, 186, 187, 220, 243, 244, 246, 273], "basin": 86, "ivimmodel_vp": 86, "ivimfit_vp": 86, "15609783e": 86, "09732577e": 86, "86659300e": 86, "19170291e": 86, "ivim_trr_predict": 86, "s0_est": 86, "f_est": 86, "d_star_est": 86, "d_est": 86, "trr_pro_param_est": 86, "3f": 86, "4f": [86, 169], "5f": 86, "text_fit": 86, "param": [86, 143, 146, 168, 175, 179, 182, 240, 245, 249, 253, 261], "gca": 86, "ivim_predict_vp": 86, "var_pro_param_est": 86, "ivim_voxel_plot": 86, "edward": [86, 160, 175, 177, 182, 215, 273], "presenc": [86, 92, 98, 160, 175, 177, 182, 215, 253, 271, 273], "chemic": [86, 160, 177, 182, 215, 273], "288": [86, 121, 160, 177, 182, 215, 248, 273], "292": [86, 121, 160, 177, 182, 215, 248, 273], "1965": [86, 160, 177, 179, 182, 215, 252, 273], "1695690": [86, 160, 177, 182, 215, 273], "breton": [86, 160, 182, 215, 273], "lallemand": [86, 160, 182, 215, 273], "aubin": [86, 160, 182, 215, 273], "jacquelin": [86, 160, 182, 215, 273], "vignaud": [86, 160, 182, 215, 273], "mauric": [86, 160, 182, 215, 273], "laval": [86, 160, 182, 215, 273], "jeantet": [86, 160, 182, 215, 273], "radiologi": [86, 160, 182, 215, 273], "168": [86, 121, 160, 182, 215, 248, 273], "497": [86, 119, 160, 175, 177, 182, 215, 249, 271, 273], "505": [86, 160, 182, 215, 249, 273], "1988": [86, 160, 169, 182, 215, 252, 267, 273], "1148": [86, 160, 182, 215, 242, 273], "3393671": [86, 160, 182, 215, 273], "hamza": [86, 175, 273], "farooq": [86, 175, 273], "junqian": [86, 175, 273], "xu": [86, 175, 273], "jung": [86, 175, 273], "nam": [86, 175, 273], "keef": [86, 175, 273], "tryphon": [86, 175, 273], "georgiou": [86, 175, 273], "38927": [86, 175, 273], "srep38927": [86, 175, 273], "maryam": [86, 121, 175, 176, 182, 191, 273], "afzali": [86, 121, 175, 176, 182, 191, 273], "hu": [86, 121, 174, 175, 176, 182, 191, 273], "microlearn": [86, 175, 246, 273], "28th": [86, 175, 181, 182, 222, 273], "montr": [86, 175, 181, 182, 222, 273], "canada": [86, 96, 165, 175, 179, 181, 182, 222, 273], "670": [86, 87, 99, 175, 242, 273], "reconst_ivim": [86, 99, 264], "qiv": [87, 90, 175, 182, 183, 216], "teturn": 87, "ng": [87, 175, 182, 183, 216, 244], "interestingli": 87, "rtap": [87, 90, 160, 175, 182, 183, 216, 240, 262], "rtpp": [87, 90, 160, 175, 182, 183, 216, 240, 262], "laplacian": [87, 90, 164, 175, 182, 213, 216, 242, 273], "mapmri": [87, 90, 160, 182, 183, 216, 240, 242, 243, 244, 245, 246, 255, 262, 265], "187": [87, 121, 129, 134, 253], "big_delta": [87, 90, 169, 175, 182, 216, 243], "small_delta": [87, 90, 169, 175, 182, 216, 243], "0365": [87, 160], "0157": [87, 160], "496": [87, 121, 151, 249, 261, 274, 275], "radial_ord": [87, 90, 96, 175, 182, 216], "anisotropic_sc": [87, 175], "laplacian_regular": [87, 90, 175, 255], "regularization_weight": 87, "gcv": [87, 90, 175, 251], "omit": [87, 168, 175, 179], "custom": [87, 88, 168, 174, 175, 182, 184, 242, 256, 262], "positivity_constraint": [87, 175], "global_constraint": [87, 175], "everywher": [87, 164], "pos_grid": [87, 175], "pos_radiu": [87, 175], "job": [87, 147, 245, 262], "viabl": 87, "impos": [87, 90, 92, 175], "extrapol": [87, 90, 175], "desir": [87, 112, 117, 133, 168, 169, 173, 175, 176, 177, 182, 191], "map_model_laplacian_aniso": 87, "mapmrimodel": [87, 183], "laplacian_weight": [87, 90, 175, 182, 216], "map_model_positivity_aniso": 87, "map_model_both_aniso": 87, "map_model_plus_aniso": 87, "preset": [87, 90], "mapfit_laplacian_aniso": [87, 244], "mapfit_positivity_aniso": 87, "mapfit_both_aniso": 87, "mapfit_plus_aniso": 87, "cmapl": 87, "map_label": [87, 181], "mapmri_rtop": 87, "smoother": [87, 168, 175, 176, 182, 185, 191], "norm_of_laplacian_sign": [87, 175, 183], "mapmri_norm_laplacian": 87, "mapmri_map": 87, "proton": [87, 147, 269], "said": 87, "composit": [87, 168, 273], "puls": [87, 90, 147, 169, 170, 175, 177, 267, 269], "appar": [87, 90, 156, 158, 164, 171, 175, 273], "diamet": [87, 273], "strong": 87, "pore": [87, 175], "realist": 87, "map_model_both_ng": 87, "bval_threshold": [87, 175, 182, 216], "map_model_plus_ng": 87, "mapfit_both_ng": 87, "mapfit_plus_ng": 87, "ng_perpendicular": [87, 175, 183], "ng_parallel": [87, 175, 183], "mapmri_ng": 87, "clue": 87, "map_model_both_iso": 87, "mapfit_both_iso": 87, "noisier": 87, "sfu": [87, 96], "shepherd": [87, 90, 96, 175, 273], "michal": [87, 90, 175, 273], "komlosh": [87, 90, 175, 273], "okan": [87, 90, 175, 273], "i\u0307": [87, 90, 175, 273], "rfano": [87, 90, 175, 273], "\u01e7": [87, 90, 175, 273], "365": [87, 100, 108, 109, 110, 121, 161, 175, 259, 273], "385": [87, 121, 175, 249, 273], "craven": [87, 175, 273], "grace": [87, 175, 273], "wahba": [87, 175, 273], "spline": [87, 168, 175, 183, 273], "numerisch": [87, 175, 273], "mathematik": [87, 175, 273], "377": [87, 88, 121, 151, 175, 249, 273], "403": [87, 121, 175, 249, 273], "1979": [87, 175, 252, 273], "pasha": [87, 175, 273], "hosseinbor": [87, 175, 273], "moo": [87, 175, 273], "bessel": [87, 175, 273], "bfor": [87, 175, 273], "650": [87, 125, 127, 175, 240, 273], "pizzolato": [87, 175, 273], "13th": [87, 273], "symposium": [87, 175, 182, 207, 217, 218, 273], "biomed": [87, 93, 108, 109, 110, 161, 175, 182, 207, 217, 218, 273, 274, 275], "isbi": [87, 96, 165, 170, 175, 182, 207, 217, 218, 247, 273, 274, 275], "1241": [87, 242, 273], "1244": [87, 242, 273], "7493491": [87, 273], "549": [87, 99, 250], "reconst_mapmri": [87, 99, 244, 264], "msmt": [88, 164, 175, 251, 252, 256, 262], "cerebrospin": [88, 93, 162, 182, 238, 274, 275], "overestim": 88, "ssst": [88, 175], "otsu": [88, 121, 143, 160, 183, 242, 248], "powermap": 88, "unavail": 88, "unique_bvals_toler": [88, 175, 183], "multishelldeconvmodel": [88, 183], "auto_response_msmt": [88, 183], "mask_for_response_msmt": [88, 183], "response_from_mask_msmt": [88, 183, 257], "thetax": 88, "qball_model": 88, "qballmodel": [88, 183], "ap": [88, 175, 179], "anisotropic_pow": [88, 183, 242], "anisotropic_power_map": 88, "treat": [88, 168, 169, 182], "hidden": [88, 120, 168, 170, 175, 244, 255, 273], "markov": [88, 120, 176, 182, 191, 247, 248, 273], "hmrf": [88, 120, 182, 191], "nclass": [88, 120, 176, 182, 191], "initial_segment": [88, 120, 176], "final_segment": [88, 120, 176], "precis": [88, 89, 117, 147, 169, 175, 242, 244, 249, 250], "mask_wm": [88, 175], "mask_gm": [88, 175], "mask_csf": [88, 175], "wm_fa_thr": [88, 175], "gm_fa_thr": [88, 175], "csf_fa_thr": [88, 175], "gm_md_thr": [88, 175], "csf_md_thr": [88, 175], "0032": [88, 175], "nvoxels_wm": 88, "nvoxels_gm": 88, "nvoxels_csf": 88, "1407": [88, 244], "precalcul": [88, 182, 190], "response_wm": [88, 175], "response_gm": [88, 175], "response_csf": [88, 175], "auto_response_wm": 88, "auto_response_gm": 88, "auto_response_csf": 88, "overcom": [88, 89, 128], "56692320e": 88, "46085143e": 88, "62131485e": 88, "34276461e": 88, "52534556e": 88, "72067588e": 88, "03258278e": 88, "83944994e": 88, "84867552e": 88, "24112459e": 88, "48269864e": 88, "33687318e": 88, "54087379e": 88, "19307328e": 88, "03487796e": 88, "70814058e": 88, "99497542e": 88, "66589967e": 88, "37647490e": 88, "22844899e": 88, "02876747e": 88, "64284096e": 88, "90155949e": 88, "05450074e": 88, "52760292e": 88, "33298612e": 88, "19461602e": 88, "31346774e": 88, "09567957e": 88, "48548376e": 88, "multishellrespons": [88, 183], "ubval": [88, 169, 175], "response_mcsd": 88, "wm_rf": [88, 175], "gm_rf": [88, 175], "csf_rf": [88, 175], "mcsd_model_simple_respons": 88, "mcsd_model": 88, "mcsd_fit": 88, "all_shm_coeff": [88, 175, 183], "vf": 88, "volume_fract": [88, 175, 183], "csf_sh_coeff": 88, "gm_sh_coeff": 88, "wm_sh_coeff": 88, "mcsd_pred": 88, "mcsd_odf": 88, "reset_camera_tight": 88, "msdodf": 88, "07819397e": 88, "48056889e": 88, "86317738e": 88, "80318112e": 88, "13450501e": 88, "90510861e": 88, "91056542e": 88, "78808950e": 88, "18908921e": 88, "61958970e": 88, "17237838e": 88, "23186090e": 88, "38676232e": 88, "99152866e": 88, "14832163e": 88, "06892957e": 88, "41825726e": 88, "65070379e": 88, "38250941e": 88, "38942356e": 88, "67702568e": 88, "34357229e": 88, "36801020e": 88, "26912924e": 88, "69950448e": 88, "43861871e": 88, "76332334e": 88, "76965057e": 88, "30105513e": 88, "04356019e": 88, "12702942e": 88, "57674067e": 88, "04510936e": 88, "23442424e": 88, "49056228e": 88, "99149700e": 88, "66042016e": 88, "10946414e": 88, "39300078e": 88, "83495625e": 88, "67843779e": 88, "53254789e": 88, "33471409e": 88, "11565718e": 88, "00278023e": 88, "98227330e": 88, "41515801e": 88, "36097977e": 88, "15859621e": 88, "28331076e": 88, "97839734e": 88, "42637736e": 88, "32416120e": 88, "95430344e": 88, "73620758e": 88, "07359260e": 88, "61738361e": 88, "29678673e": 88, "62750988e": 88, "58723140e": 88, "94548779e": 88, "10784012e": 88, "20042914e": 88, "50135856e": 88, "07379628e": 88, "28699862e": 88, "87638912e": 88, "55356793e": 88, "39732048e": 88, "96030402e": 88, "09439424e": 88, "07074878e": 88, "64342252e": 88, "94125547e": 88, "86817699e": 88, "04562301e": 88, "90321192e": 88, "46903789e": 88, "94198316e": 88, "67351437e": 88, "07922379e": 88, "42989381e": 88, "02894434e": 88, "06017373e": 88, "00443786e": 88, "01026621e": 88, "62710991e": 88, "05185017e": 88, "29846537e": 88, "48944537e": 88, "69262470e": 88, "72415715e": 88, "83042591e": 88, "02239573e": 88, "61051689e": 88, "71427461e": 88, "70664466e": 88, "20885237e": 88, "81182893e": 88, "72282936e": 88, "35450334e": 88, "03993364e": 88, "83646689e": 88, "88310692e": 88, "98688769e": 88, "12299493e": 88, "16502966e": 88, "87089565e": 88, "11524042e": 88, "34079283e": 88, "65542623e": 88, "88922363e": 88, "12219624e": 88, "70655936e": 88, "23346100e": 88, "43813347e": 88, "15633085e": 88, "97143551e": 88, "90622199e": 88, "01889036e": 88, "93710007e": 88, "52279438e": 88, "17271730e": 88, "25254560e": 88, "87380649e": 88, "43598600e": 88, "60994960e": 88, "65058430e": 88, "63470182e": 88, "22384636e": 88, "12773778e": 88, "85653822e": 88, "14586308e": 88, "77664617e": 88, "21709957e": 88, "36277507e": 88, "00149315e": 88, "15089758e": 88, "70157210e": 88, "43197131e": 88, "28292374e": 88, "31501996e": 88, "25902169e": 88, "38710836e": 88, "73876799e": 88, "15229642e": 88, "47936185e": 88, "56338317e": 88, "83792975e": 88, "77440136e": 88, "96635855e": 88, "26243670e": 88, "85722562e": 88, "64078001e": 88, "06838050e": 88, "04555163e": 88, "53992561e": 88, "45864228e": 88, "04756400e": 88, "09634648e": 88, "54845037e": 88, "48961940e": 88, "38681294e": 88, "19466814e": 88, "19583387e": 88, "42192035e": 88, "49746735e": 88, "49303974e": 88, "41843434e": 88, "33030323e": 88, "63123941e": 88, "10201510e": 88, "68332713e": 88, "72911840e": 88, "44350286e": 88, "39052455e": 88, "86860441e": 88, "73857661e": 88, "33382036e": 88, "02057132e": 88, "03885597e": 88, "29565370e": 88, "82095643e": 88, "01674891e": 88, "40213897e": 88, "21585971e": 88, "75680535e": 88, "81140382e": 88, "34829726e": 88, "39614203e": 88, "33580077e": 88, "94860840e": 88, "65061333e": 88, "70904466e": 88, "38132479e": 88, "45167177e": 88, "18533114e": 88, "13296334e": 88, "50528233e": 88, "23909465e": 88, "07433362e": 88, "45461738e": 88, "95002361e": 88, "10818063e": 88, "53487264e": 88, "02700617e": 88, "42558305e": 88, "29635527e": 88, "63540384e": 88, "46209339e": 88, "24832761e": 88, "35102386e": 88, "88873403e": 88, "82259677e": 88, "01056189e": 88, "98621188e": 88, "64901754e": 88, "95809057e": 88, "06006364e": 88, "48670256e": 88, "63229030e": 88, "61980546e": 88, "67269383e": 88, "00770942e": 88, "80023822e": 88, "02478689e": 88, "59898050e": 88, "19738552e": 88, "13595424e": 88, "04725397e": 88, "31177763e": 88, "03230831e": 88, "00851960e": 88, "63056657e": 88, "32697472e": 88, "46096185e": 88, "48486417e": 88, "25061276e": 88, "11447111e": 88, "54846471e": 88, "66207618e": 88, "69827448e": 88, "88722223e": 88, "62563824e": 88, "45950496e": 88, "50953589e": 88, "06737025e": 88, "63297210e": 88, "05470615e": 88, "54984383e": 88, "20058485e": 88, "53633515e": 88, "93584964e": 88, "00639040e": 88, "04792098e": 88, "22611069e": 88, "35319468e": 88, "34433859e": 88, "25263335e": 88, "55943878e": 88, "72215430e": 88, "38473404e": 88, "31554116e": 88, "29384830e": 88, "74368496e": 88, "71571848e": 88, "98499400e": 88, "77486229e": 88, "76454989e": 88, "38067351e": 88, "90919442e": 88, "26599617e": 88, "27656479e": 88, "24225059e": 88, "30608450e": 88, "83647236e": 88, "39530201e": 88, "23380689e": 88, "02865238e": 88, "60562810e": 88, "71004378e": 88, "55224326e": 88, "17127333e": 88, "57579584e": 88, "33600452e": 88, "51661163e": 88, "63708142e": 88, "99784929e": 88, "82597409e": 88, "44015531e": 88, "19105865e": 88, "07878237e": 88, "10037403e": 88, "87524277e": 88, "63229514e": 88, "18749803e": 88, "56688954e": 88, "79054622e": 88, "10357390e": 88, "45220433e": 88, "85215698e": 88, "51322362e": 88, "20937098e": 88, "85036124e": 88, "66356111e": 88, "13196136e": 88, "16839829e": 88, "33405933e": 88, "49660975e": 88, "33779555e": 88, "62828367e": 88, "43129847e": 88, "14112316e": 88, "27402686e": 88, "17155893e": 88, "94753072e": 88, "09286280e": 88, "61274058e": 88, "80868616e": 88, "55720392e": 88, "38598149e": 88, "84370835e": 88, "10953917e": 88, "72244551e": 88, "11560295e": 88, "28019034e": 88, "27587415e": 88, "83522763e": 88, "39934601e": 88, "66755842e": 88, "42426690e": 88, "12527850e": 88, "83709433e": 88, "57704045e": 88, "48342871e": 88, "04452619e": 88, "09923080e": 88, "60720306e": 88, "72655725e": 88, "45779054e": 88, "54721773e": 88, "73331175e": 88, "52938382e": 88, "17779632e": 88, "58762993e": 88, "04042480e": 88, "07066651e": 88, "70571341e": 88, "25624177e": 88, "14091580e": 88, "35477744e": 88, "99773766e": 88, "17731612e": 88, "65009051e": 88, "12298936e": 88, "90775556e": 88, "60863347e": 88, "51733843e": 88, "28036399e": 88, "78310481e": 88, "35960381e": 88, "46777795e": 88, "thij": [88, 175, 271, 273], "dholland": [88, 175, 271, 273], "411": [88, 121, 175, 249, 273], "426": [88, 121, 249, 273], "061": [88, 273], "flavio": [88, 93, 175, 273], "lacerda": [88, 175, 273], "catani": [88, 175, 273], "564": [88, 99, 250], "reconst_mcsd": [88, 99, 264], "mesoscop": 89, "contrari": [89, 115], "secondli": 89, "meval": [89, 95, 126, 127, 177], "00099": [89, 126, 177], "00226": [89, 126, 169, 177, 273], "00087": [89, 126, 177], "loop": [89, 93, 120, 142, 143, 146, 147, 169, 175, 176, 179, 182, 191, 245, 251, 253, 259], "linspac": [89, 90, 135, 177, 179], "num": [89, 169, 241], "ang": 89, "f_i": 89, "a_i": 89, "msdki_model": 89, "msdki_fit": 89, "ncol": [89, 90, 106, 181], "bbox_to_anchor": 89, "msdki_simul": 89, "curv": [89, 179], "art": [89, 164, 265], "im2": 89, "im3": 89, "msdki_invivo": 89, "intrins": [89, 175], "di": [89, 259], "smt2f": [89, 175, 183], "smt2di": [89, 175, 183], "ufa2": 89, "smt2ufa": [89, 175, 183], "ufa": [89, 91, 92, 175, 181, 183], "msdki_smt2_invivo": 89, "confirm": [89, 91, 102], "rescal": [89, 175], "footcit": [89, 98, 154, 171, 172, 175, 182, 198, 220], "netohenriques2019": 89, "misestim": [89, 175, 273], "3245": [89, 175, 253, 273], "3261": [89, 175, 253, 273], "27606": [89, 175, 273], "nathaniel": [89, 128, 175, 178, 273], "kelm": [89, 175, 273], "carson": [89, 175, 273], "346": [89, 119, 120, 121, 175, 249, 273], "359": [31, 36, 89, 121, 175, 249, 264, 273], "002": [89, 90, 145, 146, 170, 175, 273], "388": [89, 99, 121, 249], "reconst_msdki": [89, 99, 264], "sought": 90, "unsolv": 90, "terminologi": [90, 253, 263], "au": 90, "graphnet": [90, 170, 175, 273, 274, 275], "sparsiti": [90, 94, 175], "drastic": 90, "nervou": 90, "mous": [90, 142], "fetch_qtdmri_test_retest_2subject": [90, 183], "read_qtdmri_test_retest_2subject": [90, 183], "qtdmri": [90, 183, 262], "retest": [90, 170, 273, 274, 275], "mice": [90, 170, 274, 275], "freeli": 90, "citeabl": 90, "cc_mask": [90, 170], "5m": [90, 170], "visualise_gradient_table_g_delta_rainbow": [90, 183], "dmri_acquisition_schem": 90, "isolin": [90, 175], "subplot_titl": 90, "subject1": 90, "subject2": 90, "data_": 90, "mask_": 90, "gtab_": 90, "enumer": [90, 91, 103, 130, 131, 135], "data_middle_slic": 90, "mask_middle_slic": 90, "tenmod": 90, "overlai": [90, 109, 164], "mask_templ": 90, "greys_r": 90, "dmri_datasets_fa_with_ccmask": 90, "tau_min": 90, "tau_max": 90, "qtdmri_fit": 90, "cc_voxel": 90, "time_ord": [90, 175], "l1": [90, 94, 175, 176, 182, 220], "cv": [90, 175], "qtdmri_mod": 90, "qtdmrimodel": [90, 183], "l1_regular": [90, 175], "l1_weight": [90, 175], "trend": 90, "plot_mean_with_std": 90, "ind1": 90, "plotcolor": 90, "std_mult": 90, "lw": 90, "fill_between": 90, "msd_": 90, "4e": 90, "10e": 90, "delta_grid": 90, "msd_grid": 90, "meshgrid": 90, "d_grid": 90, "d_level": 90, "1e": [90, 91, 96, 168, 169, 171, 172, 173, 175, 176, 182, 185, 191, 207, 217, 218, 251, 273], "contourf": 90, "1e3": 90, "1e5": 90, "dashdot": 90, "marker": [90, 152, 273], "0091": 90, "14e": 90, "set_ylim": 90, "set_xlim": 90, "009": [90, 273], "0185": 90, "cb": [90, 168], "set_label": 90, "qt_indices_msd": 90, "slowli": 90, "nearli": 90, "perfectli": [90, 104], "rtxp_": 90, "rtxp_grid": 90, "d_color": 90, "162": [90, 121, 248], "3e": [90, 91, 175], "6e": 90, "qt_indices_rtop": 90, "experienc": 90, "odd": [90, 175, 182, 210, 211, 256, 271], "arriv": 90, "qt_indices_rtap": 90, "9e": 90, "15e": 90, "qt_indices_rtpp": 90, "bigger": [90, 169], "asid": 90, "sharpening_factor": 90, "conclud": 90, "tempor": [90, 147, 175, 267, 268, 273], "petiet": [90, 170, 175, 273, 274, 275], "mathieu": [90, 170, 175, 273], "santin": [90, 170, 175, 273, 274, 275], "ann": [90, 152, 170, 175, 273], "charlott": [90, 170, 175, 273], "leherici": [90, 170, 175, 273, 274, 275], "zenodo": [90, 170, 273, 274, 275], "996889": [90, 170, 273, 274, 275], "5281": [90, 170, 273, 274, 275], "265": [90, 99, 121, 248, 273], "reconst_qtdmri": [90, 99, 264], "briefli": [91, 92], "summar": [91, 92, 178], "dtd": [91, 92, 175], "langl": [91, 92, 175], "rangl": [91, 92, 175], "otim": [91, 92, 175], "product": [91, 92, 168, 169, 171, 175, 176, 182, 234], "cumul": [91, 92, 175, 179], "approx": [91, 92], "inner": [91, 92, 168, 169, 175, 179], "ln": [91, 92], "s_1": [91, 92], "vdot": [91, 92, 175], "s_n": [91, 92], "_1": [91, 92, 175, 267, 268], "_n": [91, 92, 169, 175], "_i": [91, 92, 94, 175], "voigt": [91, 92, 175], "notat": [91, 92, 175, 246], "qte": [91, 170, 175], "qte_lte_pt": 91, "bten": [91, 169, 175, 177, 255, 256, 257, 262], "lte": [91, 169, 175], "pte": [91, 169, 175], "matrix_rank": 91, "ell": [91, 175], "qtimodel": [91, 92, 183], "qtifit": [91, 92, 183], "\u03bcfa": 91, "1072": [91, 92, 242], "c_mu": [91, 92, 175, 183], "v_md": [91, 175, 183], "v_shear": [91, 175, 183], "shear": [91, 100, 136, 149, 161, 168, 169, 174, 175, 176, 182, 184, 242], "v_iso": [91, 175, 183], "c_md": [91, 175, 183], "\u03bc": 91, "c_m": [91, 175, 183], "c_c": [91, 175, 183], "k_bulk": [91, 175, 183], "bulk": [91, 175], "k_shear": [91, 175, 183], "k_mu": [91, 175, 183], "carl": [91, 92, 169, 175, 273], "fredrik": [91, 92, 169, 175, 273], "knutsson": [91, 92, 175, 273], "filip": [91, 92, 175, 273], "szczepankiewicz": [91, 92, 170, 175, 273], "westen": [91, 92, 175, 273], "cecilia": [91, 92, 175, 273], "mattisson": [91, 92, 175, 273], "mat": [91, 92, 168, 169, 175, 179, 248, 263, 273], "bogren": [91, 92, 175, 273], "lauren": [91, 92, 175, 273], "donnel": [91, 92, 175, 273], "marek": [91, 92, 152, 175, 273], "kubicki": [91, 92, 175, 273], "topgaard": [91, 92, 169, 175, 273], "marku": [91, 92, 175, 273], "nilsson": [91, 92, 175, 273], "multidimension": [91, 92, 175, 255, 273], "039": [91, 92, 175, 273], "758": [91, 99, 241], "reconst_qti": [91, 99, 264], "heteroskedast": 92, "mathrm": [92, 169, 175, 179, 267], "s_k": 92, "ldot": [92, 103], "ddot": 92, "semi": [92, 169, 170, 179, 273], "succeq": 92, "unreli": [92, 174], "enfoc": 92, "semidefinit": [92, 170], "sdp": [92, 175], "readili": 92, "licenc": 92, "routin": [92, 179, 181, 260], "read_dib_70_lte_pte_st": [92, 183], "read_dib_217_lte_pte_st": [92, 183], "compare_qti_map": [92, 183], "showcas": [92, 93, 156, 157, 159, 160, 162, 255], "richer": 92, "emul": 92, "shorter": [92, 131, 179, 182], "scan": [92, 174, 273], "szczepankiewicz_dib_2019": 92, "_217": 92, "suffix": 92, "data_img": [92, 170], "gtab_217": 92, "data_217": 92, "downsampl": [92, 118, 135, 247, 259], "_70": 92, "gtab_70": 92, "data_70": 92, "consider": [92, 103, 135, 175, 182, 207, 217, 218, 273], "qtimodel_217": 92, "qtifit_217": 92, "qtimodel_unconstrain": 92, "qtifit_unconstrain": 92, "sdpdc": 92, "qtimodel_constrain": 92, "qtifit_constrain": 92, "\u00b5fa": 92, "clearli": [92, 281], "fall": [92, 168, 176, 179, 182, 185, 191, 252, 257], "despit": 92, "cost": [92, 94, 103, 168, 175, 176], "dens": [92, 113, 168, 169, 174, 260], "magnu": [92, 273], "deneb": [92, 260, 273], "boito": [92, 260, 273], "238": [92, 121, 251, 273], "118198": [92, 273], "hoge": [92, 170, 273], "waveform": [92, 170, 273], "oil": [92, 170, 273], "liquid": [92, 170, 273], "crystal": [92, 170, 273], "brief": [92, 115, 116, 170, 273], "104208": [92, 170, 273], "dib": [92, 170, 273], "601": [92, 99, 250], "reconst_qtiplu": [92, 99, 264], "priori": [93, 120], "rl": 93, "promot": [93, 169, 175, 176, 244, 249], "wise": [93, 131, 175, 176, 177, 179, 182, 273, 274, 275], "peak_direct": [93, 172, 251, 254, 261], "symmetric362": [93, 170, 175, 182, 228, 236], "7e": [93, 175], "csf_respons": [93, 175, 182], "gm_respons": [93, 175, 182], "8e": 93, "adequ": [93, 175], "impuls": 93, "imprecis": 93, "0017": [93, 175], "003": [93, 175, 182], "0008": [93, 175, 182], "default_respons": 93, "auto_response_sst": 93, "estimated_respons": 93, "arang": [93, 115, 116, 117, 118, 177], "rec_respons": 93, "1127": [93, 242], "single_peak_mask": 93, "rec_response_sign": 93, "bear": 93, "recon_typ": [93, 175, 182], "n_coil": [93, 175, 182], "suitabl": [93, 121, 170, 175, 182, 191, 267, 268], "smf": [93, 175, 182], "isn": [93, 147, 169], "ipat": [93, 182], "asset": [93, 182], "cover": [93, 101, 136, 173, 242], "wherein": 93, "inclus": [93, 168, 179], "neither": [93, 169, 176], "f_iso": [93, 175, 183], "ax0": 93, "wm_iso_partit": 93, "rumbafit": [93, 183], "combined_odf_iso": [93, 175, 183], "rumba_odf": 93, "rumba_peak": 93, "demand": 93, "gb": [93, 175], "singleton": [93, 152, 175, 182, 241, 244, 273], "data_tv": 93, "rumba_global_odf": 93, "pk": 93, "rumba_global_peak": 93, "hadlei": [93, 273], "bayesian": [93, 120, 164, 242, 273], "america": [93, 273], "1972": [93, 252, 273], "1364": [93, 175, 255, 273], "josa": [93, 273], "000055": [93, 273], "constantinid": [93, 273], "ergin": [93, 273], "atalar": [93, 273], "elliot": [93, 273], "mcveigh": [93, 273], "852": [93, 242, 245, 273], "857": [93, 241, 273], "1997": [93, 175, 245, 252, 273], "1910380524": [93, 273], "leonid": [93, 175, 273], "rudin": [93, 175, 273], "stanlei": [93, 175, 273], "osher": [93, 175, 273], "emad": [93, 175, 273], "fatemi": [93, 175, 273], "nonlinear": [93, 104, 164, 168, 170, 175, 182, 190, 253, 258, 261, 273, 274, 275], "physica": [93, 175, 273], "phenomena": [93, 175, 273], "268": [93, 121, 175, 248, 273], "1992": [93, 175, 252, 273], "0167": [93, 175, 273], "2789": [93, 175, 263, 273], "90242": [93, 175, 273], "giovanna": [93, 273], "rizzo": [93, 273], "paola": [93, 273], "scifo": [93, 273], "alonso": [93, 273], "clark": [93, 273], "scotti": [93, 273], "ferruccio": [93, 273], "fazio": [93, 273], "engin": [93, 169, 273], "462": [93, 121, 249, 273], "472": [93, 121, 249, 273], "tbme": [93, 273], "888830": [93, 273], "357": [93, 99, 121, 249], "reconst_rumba": [93, 99, 264], "dpp": [94, 259], "examin": [94, 106, 265], "elast": [94, 175, 273], "y_i": [94, 173, 271], "lambda": [94, 168, 175, 181, 240], "w_j": 94, "2_j": 94, "balanc": [94, 182, 220], "l2": [94, 149, 169, 176, 182, 220], "sf_fit": 94, "sf_odf": 94, "sf_peak": 94, "sf_both": 94, "zou": [94, 273], "royal": [94, 169, 273], "320": [94, 121, 249, 273], "march": [94, 150, 165, 175, 182, 212, 273], "1111": [94, 131, 175, 179, 245, 273], "1467": [94, 244, 273], "9868": [94, 273], "00503": [94, 273], "reconst_sfm": [94, 99, 264], "00015": 95, "symm_sign": 95, "sh_basi": [95, 175], "reproject": 95, "high_res_sph": 95, "symm_reconst": 95, "asymmetr": [95, 164, 168, 182, 230, 259, 261, 271], "odf2": 95, "n_pts_hemispher": 95, "asym_odf": 95, "asym_sign": 95, "asym_reconst": 95, "deal": [95, 98, 176, 258, 259, 265], "full_basi": [95, 175], "asym_reconst_ful": 95, "312": [95, 99, 121, 249], "reconst_sh": [95, 99, 259, 264], "shoremodel": [96, 97, 183], "fetch_isbi2013_2shel": [96, 183], "contest": 96, "2013_isbi": [96, 274, 275], "xmin": 96, "xmax": 96, "ymin": 96, "ymax": 96, "zmin": 96, "zmax": 96, "zeta": [96, 175], "lambdan": [96, 175], "lambdal": [96, 175], "700": [96, 175, 240, 274, 275], "asm": [96, 97], "asmfit": [96, 97], "eap": [96, 169, 175, 273], "compress": [96, 135, 163, 173, 175, 179, 240, 273], "556": [96, 175, 250, 273], "572": [96, 175, 240, 273], "16th": [96, 175, 273], "17th": [96, 175, 273], "toronto": [96, 175, 179, 273], "blackband": [96, 273], "18th": [96, 273], "honolulu": [96, 273], "hi": [96, 169, 175, 273], "jian": [96, 174, 175, 177, 273], "tianzi": [96, 175, 273], "jiang": [96, 175, 273], "unifi": [96, 169, 175, 181, 182, 222, 273], "miccai": [96, 175, 182, 200, 273], "cdmri": [96, 175, 273], "452": [96, 99, 121, 249], "reconst_shor": [96, 99, 264], "shore_map": 97, "examples_revamp": [97, 264], "reconst_shore_metr": [97, 99, 264], "consum": [97, 100, 175], "rcparam": 97, "max_open_warn": 97, "486": [97, 99, 121, 151, 249], "pernici": 98, "particip": 98, "young": 98, "refit": 98, "intermitt": [98, 245, 251, 259], "ne": 98, "fetch_stanford_hardi": [98, 100, 101, 183], "dti_wl": 98, "roi_idx": 98, "fit_wl": 98, "fa1": 98, "evals1": 98, "evecs1": 98, "cfa1": 98, "tensor_ellipsoids_wl": 98, "noisy_data": 98, "noisy_idx": 98, "fit_wls_noisi": 98, "fa2": 98, "evals2": 98, "evecs2": 98, "cfa2": 98, "tensor_ellipsoids_wls_noisi": 98, "distort": [98, 156, 174, 262, 273], "dti_restor": 98, "fit_restore_noisi": 98, "fa3": 98, "evals3": 98, "evecs3": 98, "cfa3": 98, "tensor_ellipsoids_restore_noisi": 98, "convinc": 98, "ourselv": [98, 148], "chung2006": 98, "ravel": [98, 115, 117, 247], "dti_fa_distribut": 98, "resembl": [98, 170], "importantli": 98, "believ": 98, "kami": [98, 273], "koldewyn": [98, 273], "sita": [98, 273], "kakunoori": [98, 273], "nanci": [98, 174, 182, 196, 273], "kanwish": [98, 273], "bruce": [98, 273], "fischl": [98, 273], "027": [98, 152, 153, 273], "ching": [98, 175, 182, 209, 212, 273], "reject": [98, 175, 182, 209, 212, 273], "1088": [98, 175, 182, 209, 212, 242, 273], "1095": [98, 175, 182, 209, 212, 273], "20426": [98, 175, 182, 209, 212, 273], "restore_dti": [98, 99, 242, 264], "414": [99, 121, 250], "examples_builtreconstruct": 99, "mutual": [100, 101, 161, 168, 182, 184], "ant": [100, 101, 108, 109, 110, 120, 161, 168, 175, 182, 194], "twice": [100, 148, 169, 171, 179, 242, 245], "simplifi": [100, 118, 148, 164, 168, 173, 175, 179, 244, 248, 253, 254, 256, 265], "affine_registr": [100, 101, 108, 183, 253], "register_dwi_to_templ": [100, 183], "affineregistr": [100, 101, 183, 241, 259], "mutualinformationmetr": [100, 101, 183], "transform_centers_of_mass": [100, 183], "affinetransform3d": 100, "rigidtransform3d": [100, 101], "translationtransform3d": [100, 101], "fetch_syn_data": [100, 183], "regtool": [100, 101, 106, 108, 109, 110, 183, 249, 250, 255], "static_data": [100, 101], "static_affin": [100, 101, 108, 110, 168], "static_img": [100, 101], "hardi150": [100, 101, 156, 160, 163], "static_grid2world": [100, 101, 110, 168], "folder2": 100, "moving_data": 100, "moving_affin": [100, 101, 108, 110, 168], "moving_img": 100, "moving_grid2world": [100, 101, 110, 168], "affine_map": [100, 101, 110, 168], "domain_grid_shap": [100, 101, 110, 168], "domain_grid2world": [100, 101, 110, 168], "codomain_grid_shap": [100, 101, 110, 168], "codomain_grid2world": [100, 101, 110, 168], "overlay_slic": [100, 101, 108, 110, 183], "slice_typ": [100, 101, 108, 110, 181], "ltitl": [100, 101, 108, 110, 181], "rtitl": [100, 101, 108, 110, 181], "resampled_0": 100, "resampled_1": 100, "resampled_2": 100, "640x480": [100, 101, 108, 109, 110], "rough": [100, 103], "c_of_mass": 100, "occupi": 100, "roughli": [100, 108, 110, 168], "transformed_com_0": 100, "transformed_com_1": 100, "transformed_com_2": 100, "translat": [100, 101, 108, 136, 149, 161, 169, 174, 176, 179, 182, 183, 184, 230, 251], "margin": [100, 168, 182, 184], "integ": [100, 135, 136, 147, 168, 169, 170, 174, 175, 176, 178, 179, 181, 182, 240, 242, 249, 253, 255, 258], "nbin": [100, 101, 168, 176, 182, 184], "sampling_prop": [100, 101, 182, 184], "sampling_proport": [100, 101, 168], "optima": 100, "pyramid": [100, 109, 110, 168, 182, 185], "flexibl": [100, 117, 175, 242, 271, 273], "indirectli": 100, "coarsest": [100, 168, 182, 184], "medium": [100, 126, 182, 230], "finest": [100, 109, 110, 168, 182, 184], "level_it": [100, 101, 106, 108, 109, 110, 166, 168, 182, 184, 185], "nx": [100, 175], "nz": [100, 175], "affreg": [100, 101], "dictionari": [100, 139, 143, 146, 170, 171, 173, 174, 181, 182, 237, 238, 245, 262], "regtransform": 100, "params0": [100, 168], "starting_affin": [100, 101, 168, 182, 259], "transformed_trans_0": 100, "transformed_trans_1": 100, "transformed_trans_2": 100, "rigid": [100, 101, 103, 104, 108, 161, 176, 182, 183, 184, 190, 230, 233, 245, 251, 256, 259, 273], "slight": [100, 148], "transformed_rigid_0": 100, "transformed_rigid_1": 100, "transformed_rigid_2": 100, "transformed_affine_0": 100, "transformed_affine_1": 100, "transformed_affine_2": 100, "center_of_mass": [100, 108, 183], "rigid_isosc": [100, 108, 182, 183, 184], "rigid_sc": [100, 108, 182, 183, 184], "xformed_img": [100, 101], "xformed_affine_0": 100, "xformed_affine_1": 100, "xformed_affine_2": 100, "bvals_fil": [100, 182, 191, 216, 234], "bvecs_fil": [100, 182, 216, 234], "opposit": [100, 128, 168, 175, 244], "revers": [100, 117, 174, 176, 272, 273], "xformed_dwi": 100, "templat": [100, 106, 108, 168, 170, 175, 181, 240, 242, 253, 255, 262, 273, 274, 275], "reg_method": [100, 168], "aff": [100, 102, 168], "xformed_dwi_0": 100, "xformed_dwi_1": 100, "xformed_dwi_2": 100, "dwi_to_templ": 100, "haynor": [100, 101, 168, 273], "hubert": [100, 152, 168, 273], "vessel": [100, 101, 168, 273], "lewellen": [100, 101, 168, 273], "eubank": [100, 101, 168, 273], "pet": [100, 101, 168, 273], "ct": [100, 101, 168, 175, 179, 183, 259, 263, 273], "chest": [100, 101, 168, 273], "2003": [100, 101, 168, 252, 273], "809072": [100, 168, 273], "avant": [100, 101, 108, 109, 110, 120, 161, 168, 273], "nick": [100, 108, 109, 110, 161, 273], "tustison": [100, 101, 108, 109, 110, 120, 161, 273], "gang": [100, 108, 109, 110, 161, 273], "854": [100, 107, 245], "affine_registration_3d": [100, 107, 264], "mattes03": 101, "avants11": 101, "pixel": [101, 106, 156, 168, 171, 176, 179, 181], "circumst": 101, "cardiac": 101, "priorit": 101, "register_seri": [101, 183], "pad_bi": 101, "constant_valu": 101, "affmat": 101, "sin": [101, 148, 169, 177, 179, 182, 226, 272], "deregist": 101, "transl": 101, "static_mask": [101, 168], "moving_mask": [101, 168], "reg_func": 101, "fignam": 101, "scope": 101, "hopefulli": 101, "transformed_pipelin": 101, "border": [101, 142, 249], "troublesom": 101, "sz": [101, 174, 182, 200, 273], "pd": 101, "squares_st": 101, "int32": [101, 181], "squares_mv": 101, "deregistered_squar": 101, "masked_stat": 101, "transformed_squar": 101, "pin": [101, 251, 253, 260, 262, 263], "transformed_squares_mask": 101, "transformed_squares_mask_2": 101, "transformed_squares_mask_3": 101, "xform": [101, 168], "series_affin": [101, 168], "series_mask_1": 101, "series_mask_2": 101, "affine_registration_mask": [101, 107, 264], "coregist": 102, "atla": [102, 112, 113, 128, 129, 152, 153, 170, 178, 253, 263, 273, 274, 275], "shuffl": [102, 174], "pairwis": [102, 103, 131, 168], "centroid": [102, 112, 115, 117, 118, 128, 130, 168, 176, 178, 181, 182, 183, 233], "streamlinear": [102, 103, 112, 183, 245, 249], "groupwise_slr": [102, 183], "read_five_af_bundl": [102, 183], "show_bundl": [102, 183], "basicconfig": 102, "arcuat": [102, 112, 113, 128, 129, 139, 152, 153, 170], "fasciculi": 102, "save_a": [102, 181], "before_group_registr": 102, "nativ": [102, 103, 135, 139, 140, 151, 152, 153, 168, 173, 181, 182, 222, 233, 273], "bundles_reg": 102, "after_group_registr": 102, "romero": [102, 104, 168, 182, 190, 258, 259, 260, 273], "bascon": [102, 104, 168, 182, 190, 258, 259, 260, 273], "jong": [102, 174, 182, 202, 253, 254, 261, 262, 263, 273], "sung": [102, 174, 182, 202, 253, 254, 261, 262, 263, 273], "unai": [102, 273], "ayala": [102, 273], "maitan": [102, 273], "barrenechea": [102, 273], "bundleatlas": [102, 273], "atlas": [102, 168, 170, 273, 274, 275], "ismrt": [102, 273], "31st": [102, 273], "london": [102, 273], "gui": [102, 115, 116, 117, 118, 128, 167, 175, 176, 179, 273], "simplif": [102, 103, 115, 116, 117, 118, 128, 176, 179, 273], "175": [102, 115, 116, 117, 118, 121, 128, 176, 179, 254, 263, 273], "fnin": [102, 115, 116, 117, 118, 128, 176, 179, 273], "00175": [102, 115, 116, 117, 118, 128, 176, 179, 273], "297": [102, 107, 118, 121, 274, 275], "bundle_group_registr": [102, 107, 264], "cingulum": [103, 130, 140, 170], "sleep": 103, "streamlinelinearregistr": [103, 183], "two_cingulum_bundl": [103, 130, 183], "set_number_of_point": [103, 104, 115, 116, 135, 240, 242, 243, 245, 249, 262], "cb_subj1": [103, 130], "cb_subj2": 103, "nb_point": [103, 104, 115, 116, 128, 135, 176, 242], "srr": 103, "srm": 103, "cb_subj2_align": 103, "show_both_bundl": [103, 130], "lines_actor": 103, "rotatez": [103, 130], "orang": [103, 140], "before_registr": 103, "after_registr": 103, "stai": [103, 117, 267, 268], "bmd": [103, 168], "operatornam": [103, 148, 269, 272], "flip": [103, 112, 176, 243, 255, 271], "mdf": [103, 104, 112, 115, 118, 168, 179, 182, 183, 190, 230, 255], "eq": [103, 168, 169, 175, 243], "row": [103, 113, 117, 135, 136, 142, 149, 168, 169, 170, 175, 176, 177, 178, 179, 181, 251], "visser": 103, "intact": [103, 168], "x_": 103, "prove": [103, 121, 182, 191], "nonneg": [103, 175], "satisfi": [103, 169, 179], "inequ": [103, 175], "formul": [103, 120, 175, 267, 269], "underset": 103, "compos": [103, 168, 169, 175, 182], "251": [103, 107, 118, 121, 136, 248], "bundle_registr": [103, 107, 264], "nonlinearli": [104, 154, 168, 182, 190], "uncin": [104, 152, 154], "streamwarp": [104, 183], "bundlewarp_shape_analysi": [104, 183], "bundlewarp_vector_fil": [104, 183], "fetch_bundle_warp_dataset": [104, 183], "unlist_streamlin": [104, 168, 183], "viz_displacement_mag": [104, 183], "viz_two_bundl": [104, 183], "viz_vector_field": [104, 183], "uf_l": [104, 152], "figshar": [104, 152, 153, 154, 274, 275], "test_bundles_for_dipi": [104, 154], "22557733": [104, 154], "bundle_warp_fil": 104, "s_uf_l_path": 104, "s_uf_l": [104, 154], "m_uf_l_path": 104, "m_uf_l": [104, 154], "uf_subj1": 104, "uf_subj2": 104, "static_and_mov": 104, "trade": [104, 154, 168, 182, 190], "deformed_bundl": [104, 168], "moving_align": [104, 168], "match_pair": 104, "warp_map": 104, "max_it": [104, 168, 176, 182, 190, 191], "768532037734985": 104, "static_and_partially_deform": 104, "linearli": [104, 168, 182, 190, 262], "linearly_and_nonlinearly_mov": 104, "c1": [104, 170, 181], "points_align": [104, 181], "partially_vectorfield": 104, "partially_vectorfield_over_linearly_mov": 104, "partially_deformation_magnitude_over_linearly_mov": 104, "new_tractogram": 104, "partially_deformed_bundl": 104, "deformed_bundle2": 104, "extrem": [104, 115, 117, 130, 168, 182, 190], "92172646522522": 104, "static_and_fully_deform": 104, "fully_vectorfield": 104, "fully_vectorfield_over_linearly_mov": 104, "fully_deformation_magnitude_over_linearly_mov": 104, "no_disk": [104, 168, 178, 182, 187, 188], "fully_deformed_bundl": 104, "jaroslaw": [104, 129, 130, 152, 168, 176, 178, 182, 188, 189, 190, 230, 273], "harezlak": [104, 129, 130, 152, 168, 176, 178, 182, 188, 189, 190, 230, 273], "522802": [104, 168, 182, 190, 273], "stnd": [104, 273], "863": [104, 107, 241], "bundlewarp_registr": [104, 107, 264], "skimag": [106, 176, 240, 242], "imwarp": [106, 109, 110, 166, 183, 242, 253], "symmetricdiffeomorphicregistr": [106, 109, 110, 166, 183, 253], "ssdmetric": [106, 109, 183], "ellips": [106, 169], "draw_ellips": 106, "rr": 106, "img_ref": 106, "img_in": 106, "show_imag": 106, "img_warp": 106, "fig_nam": 106, "ssd": [106, 109, 161, 168, 175, 182, 185], "02f": 106, "step_length": [106, 168, 182, 185], "sdr": [106, 109, 110, 166, 244, 245, 260], "ndim": [106, 109, 175, 251], "inv_it": [106, 109, 168, 182, 185], "ss_sigma_factor": [106, 168, 182, 185], "opt_tol": [106, 168, 182, 185], "plot_2d_diffeomorphic_map": [106, 109, 183, 249], "38297": 106, "57499": 106, "00001": [106, 109], "71281": 106, "99999": [106, 109], "51155": 106, "138626": 106, "743256": 106, "57159": 106, "77189": 106, "51843": 106, "39175": 106, "77338": 106, "40704": 106, "40047": 106, "26481": 106, "818726": 106, "22971": 106, "945564": 106, "12815": 106, "529335": 106, "99735": 106, "59097": 106, "39428": 106, "35901": 106, "08593": 106, "9184668": 106, "04836": 106, "811745": 106, "though": [106, 168, 175, 179, 267, 268], "83968": 106, "33975": 106, "619865": 106, "683014": 106, "771965": 106, "96909": 106, "14295": 106, "97683": 106, "927216": 106, "678276": 106, "898346": 106, "99135": 106, "97298": 106, "460953": 106, "87729": 106, "2770734": 106, "384": [106, 107, 121, 249, 274, 275], "register_binary_fuzzi": [106, 107, 264], "examples_builtregistr": 107, "streamline_registr": [107, 108, 183, 264], "970": [107, 108, 242], "syn_registration_3d": [107, 110, 240, 264], "026": [107, 110], "syn_registration_2d": [107, 109, 264], "485": [107, 109, 121, 249], "syn_registr": [108, 183, 249], "fetch_mni_templ": [108, 183], "read_mni_templ": [108, 183], "horizon": [108, 150, 158, 164, 182, 183, 222, 246, 251, 252, 253, 254, 255, 256, 259, 261, 262, 263, 273], "dwi_data": [108, 178], "dwi_affin": [108, 168], "dwi_img": 108, "dwi_vox_s": 108, "dwi_bval": 108, "dwi_bvec": 108, "t2": [108, 170, 171, 240, 274, 275], "mni": [108, 112, 152, 153, 170, 240, 242, 253, 274, 275], "1x1x1": [108, 171, 176, 182, 227], "2x2x2": 108, "img_t2_mni": 108, "t2_mni_data": 108, "t2_mni_affin": 108, "t2_mni_voxel_s": 108, "t2_resliced_data": 108, "t2_resliced_affin": 108, "skull": [108, 109, 110, 120, 121], "b0_idx_stanford": 108, "tolist": 108, "dwi_data_noskul": 108, "b0_data_stanford": 108, "mean_b0_masked_stanford": 108, "rigidli": 108, "eventu": 108, "syn": [108, 109, 110, 120, 161, 168, 240, 242, 259, 274, 275], "warped_b0": [108, 168], "warped_b0_affin": 108, "final_warped_b0": 108, "prealign": [108, 110, 168], "transformed_sagitt": 108, "transformed_coron": 108, "transformed_axi": 108, "forget": 108, "warp_b0_affin": 108, "undo": 108, "mni_t2_streamlines_using_affine_reg": 108, "sft_in_t2_using_aff_reg": 108, "world_coord": [108, 139, 181], "out_png": [108, 181], "streamlines_dsn_mni_aff_reg": 108, "197": [108, 121, 164, 171, 249, 262, 273], "233": [108, 121, 240, 249], "189": [108, 121, 248, 273], "resiz": 108, "mni_t2_streamlines_using_syn": 108, "transform_points_invers": [108, 168, 183], "sft_in_t2_using_syn": 108, "streamlines_dsn_mni_syn": 108, "superiorfrontal_aff_reg": 108, "superiorfrontal_syn": 108, "clint": [108, 251, 273], "grafton": [108, 273], "380": [108, 121, 249, 273], "1162": [108, 242, 273], "netn": [108, 273], "_a": [108, 273], "_00035": [108, 273], "netn_a_00035": [108, 273], "epstein": [108, 109, 110, 161, 273], "murrai": [108, 109, 110, 161, 273], "gee": [108, 109, 110, 120, 161, 273], "elderli": [108, 109, 110, 161, 273], "neurodegen": [108, 109, 110, 152, 161, 273], "wbir": [108, 109, 110, 161, 273], "ccmetric": [109, 110, 183, 242, 251], "fname_mov": 109, "reg_o": [109, 170], "fname_stat": 109, "reg_c": [109, 170], "overlay_imag": [109, 183], "title0": [109, 181], "title_mid": [109, 181], "title1": [109, 181], "input_imag": 109, "decis": [109, 271], "dim": [109, 164, 168, 244, 260, 263], "n_0": [109, 110], "n_1": [109, 110], "n_k": [109, 110, 175], "diffeomorphicmap": [109, 110, 166, 181, 183, 253, 256, 260], "forth": [109, 110], "diffeomorphic_map": 109, "88535": 109, "92105": 109, "85171": 109, "warped_mov": [109, 110, 161, 168, 182, 185], "direct_warp_result": 109, "warped_stat": [109, 110], "inverse_warp_result": 109, "callback_cc": 109, "react": [109, 244], "registrationstag": 109, "scale_end": 109, "wmove": 109, "moving_imag": [109, 168], "wstatic": 109, "static_imag": [109, 168], "t1_name": 109, "b0_name": 109, "syn_data": [109, 110, 274, 275], "sigma_diff": [109, 168, 259], "callback": [109, 139, 142, 168, 169, 174, 181], "t1_slices_input": 109, "t1_slices_r": 109, "inv_warp": 109, "t1_slices_res2": 109, "diffeomorphic_map_b0": 109, "99708": 109, "999725": 109, "99444": 109, "modal": [110, 168, 182, 185], "read_map": [110, 166, 183], "write_map": [110, 166, 183, 260], "stanford_b0": 110, "stanford_b0_affin": 110, "b0_fname": 110, "syn_b0": 110, "syn_b0_affin": 110, "stanford_b0_mask": 110, "syn_b0_mask": 110, "pre_align": 110, "02783543e00": 110, "83019053e": 110, "07735639e": 110, "57654118e00": 110, "34051706e": 110, "41918267e": 110, "66525861e": 110, "23579799e01": 110, "34288908e": 110, "90262026e": 110, "80820307e": 110, "46216651e01": 110, "00000000e00": 110, "input_3d": 110, "saved_map": 110, "641": [111, 119, 151, 245], "brain_extraction_dwi_1": [111, 119, 264], "whole_brain_slr": 112, "fetch_bundle_atlas_hcp842": [112, 113, 129, 183], "fetch_target_tractogram_hcp": [112, 113, 183], "get_bundle_atlas_hcp842": [112, 183], "get_target_tractogram_hcp": [112, 113, 183], "get_two_hcp842_bundl": [112, 113, 128, 129, 183], "target_fil": 112, "target_fold": 112, "atlas_fil": [112, 129], "atlas_fold": [112, 129], "all_bundles_fil": 112, "sft_atla": 112, "atlas_head": 112, "sft_target": 112, "target_head": 112, "tractograms_initi": [112, 113], "qb_centroids1": 112, "qb_centroids2": 112, "1984": [112, 169, 252], "slr_transform": [112, 182, 230], "npy": [112, 147, 152, 153, 173, 182, 190, 230, 240], "tractograms_after_registr": 112, "millimet": [112, 135, 147, 168, 176], "model_clust_thr": [112, 176, 182, 230], "reduction_thr": [112, 176, 182, 230], "pruning_thr": [112, 176, 182, 230], "reduction_dist": [112, 176, 182, 230], "pruning_dist": [112, 176, 182, 230], "diferect": 112, "mam": [112, 176, 182, 230, 252], "neighbour": [112, 171, 175, 182, 221], "model_af_l_fil": [112, 113, 129], "model_cst_l_fil": [112, 113, 128, 129], "sft_af_l": [112, 113, 129], "model_af_l": [112, 113, 129], "17281532": [112, 113, 129], "55606842": [112, 113, 129], "92485857": [112, 113, 129], "360": [112, 113, 121, 129, 249], "028": [112, 113, 129, 134, 136, 175, 273], "af_l_model_bundl": [112, 113], "rb": [112, 257], "recognized_af_l": [112, 113], "af_l_label": 112, "model_bundl": [112, 176, 178], "af_l_recognized_bundl": [112, 113], "reco_af_l": 112, "af_l_rec_1": 112, "af_l_org_1": 112, "af_l_recognized_bundle2": 112, "af_l_rec_2": 112, "af_l_org_2": 112, "af_l_recognized_bundle3": 112, "af_l_rec_3": 112, "af_l_org_3": 112, "r_recognized_af_l": 112, "r_af_l_label": 112, "pruned_streamlin": [112, 176], "af_l_refine_recognized_bundl": 112, "af_l_rec_refin": 112, "af_l_org_refin": 112, "sft_cst_l": 112, "model_cst_l": [112, 128], "cst_l_model_bundl": 112, "recognized_cst_l": 112, "cst_l_label": 112, "cst_l_recognized_bundl": 112, "reco_cst_l": 112, "cst_l_rec_1": 112, "cst_l_org_1": 112, "cst_l_recognized_bundle2": 112, "cst_l_rec_2": 112, "cst_l_org_2": 112, "cst_l_recognized_bundle3": 112, "cst_l_rec_3": 112, "cst_l_org_3": 112, "r_recognized_cst_l": 112, "r_cst_l_label": 112, "cst_l_refine_recognized_bundl": 112, "cst_l_rec_refin": 112, "cst_l_org_refin": 112, "\u00f4": [112, 139, 153, 168, 176, 181, 182, 222, 224, 230, 233, 273], "rheault": [112, 153, 168, 176, 182, 224, 230, 233, 245, 246, 251, 252, 255, 259, 260, 261, 262, 273, 274, 275], "jasmeen": [112, 153, 168, 176, 182, 224, 230, 233, 273], "sidhu": [112, 153, 168, 176, 182, 224, 230, 233, 273], "janic": [112, 153, 168, 176, 182, 224, 230, 233, 273], "hau": [112, 153, 168, 176, 182, 224, 230, 233, 273], "laurent": [112, 153, 168, 176, 182, 224, 230, 233, 273], "petit": [112, 153, 168, 176, 182, 224, 230, 233, 273], "fortin": [112, 153, 168, 176, 182, 224, 230, 233, 273], "cunann": [112, 153, 168, 176, 182, 224, 230, 233, 273], "283": [112, 121, 153, 168, 176, 182, 224, 230, 233, 251, 273, 274, 275], "295": [112, 121, 153, 168, 176, 182, 224, 230, 233, 273], "358": [112, 119, 121, 249], "bundle_extract": [112, 119, 245, 252, 264], "fss": [113, 183], "faststreamlinesearch": [113, 183], "nearest_from_matrix_row": [113, 183], "hcp_file": 113, "faststreamlinessearch": 113, "ref_streamlin": [113, 176], "max_radiu": [113, 176], "radius_search": [113, 176, 183], "cautiou": [113, 154], "fs_tree_af": 113, "coo_mdist_mtx": 113, "ids_": 113, "ids_ref": 113, "col": [113, 142], "af": [113, 128, 129, 139, 169, 170], "nn_": 113, "nn_ref": 113, "nn_dist": 113, "colormap_lookup_t": [113, 131, 140, 142, 181], "scale_rang": [113, 131, 140, 142], "lookup_colormap": [113, 131, 140, 142, 181], "scalar_bar": [113, 131, 140], "lookup_t": [113, 131, 140], "af_l_recognized_bundle_dist": 113, "ref_color": 113, "af_l_model_bundle_reach": 113, "1093": [113, 176, 245, 273], "1104": [113, 176, 242, 273], "s12021": [113, 120, 174, 176, 182, 196, 273], "09590": [113, 176, 273], "fast_streamline_search": [113, 119, 264], "familiar": [115, 116], "arclengthfeatur": [115, 117], "centerofmassfeatur": 115, "identityfeatur": [115, 116], "midpointfeatur": 115, "vectorofendpointsfeatur": [115, 116, 117], "averagepointwiseeuclideanmetr": [115, 116, 128, 176], "cosinemetr": [115, 116, 117], "euclideanmetr": 115, "get_streamlin": [115, 116], "fornix": [115, 116, 117, 118, 164, 170, 176], "unalt": 115, "qb": [115, 116, 117, 118, 128, 176, 244], "nb": [115, 116, 118, 175, 179, 182, 237], "predetermin": 115, "perman": 115, "graviti": [115, 168], "wiki": [115, 116, 117, 148, 169, 170, 175], "belong": [115, 116, 117, 136, 152, 178, 182], "create_colormap": [115, 116, 117, 118], "colormap_ful": [115, 116, 117, 118], "center_of_mass_featur": 115, "halfwai": [115, 168], "midpoint_featur": 115, "arclength_featur": 115, "ambigu": 115, "vector_of_endpoints_featur": 115, "287": [115, 119, 121, 164, 240, 245], "segment_clustering_featur": [115, 119, 264], "sumpointwiseeuclideanmetr": [116, 117], "won": [116, 245, 251, 255], "0x0000020a12d48ca0": 116, "0x0000020a12d137c0": 116, "cosine_metr": 116, "350": [116, 119, 121, 249], "segment_clustering_metr": [116, 119, 264], "n_i": [117, 135, 175], "modular": [117, 181, 182, 222, 273], "subclass": [117, 174, 175, 176], "hierarch": [117, 173], "clustermap": [117, 118, 183], "arc": [117, 128, 273], "redefin": 117, "infer_shap": 117, "__init__": [117, 169, 242], "is_order_invari": 117, "educ": [117, 118, 175, 273], "neuroanatomi": [117, 118], "fornix_clusters_arclength": 117, "cosin": [117, 135, 169, 182, 226], "minu": [117, 168, 169, 171, 172, 175, 176, 182, 207, 208, 210, 211, 217, 218, 221, 226, 231, 233], "wikipedia": [117, 148, 149, 169, 175, 271, 272], "cosine_similar": 117, "are_compat": [117, 173, 183, 259], "shape1": 117, "shape2": 117, "v2": [117, 169], "cos_theta": 117, "arccosin": 117, "arcco": [117, 169, 182, 226, 246, 253, 272], "fornix_clusters_cosin": 117, "825": [117, 119, 241], "segment_extending_clustering_framework": [117, 119, 264], "pickl": [118, 147, 183, 242], "save_pickl": [118, 147, 183], "10mm": [118, 176], "upsampl": [118, 176], "0x0000020a138dfbe0": 118, "167": [118, 121, 175, 248, 273], "180": [118, 121, 248, 274, 275], "185": [118, 121, 164, 248], "208": [118, 121, 248], "210": [118, 121, 248], "237": [118, 121, 140, 175, 248, 273], "246": [118, 121], "270": [118, 121, 248], "280": [118, 121], "284": [118, 121, 256], "293": [118, 121], "296": [118, 121], "299": [118, 121, 249], "83774": 118, "9259": 118, "322784": 118, "108505": 118, "84363": 118, "91885": 118, "40357": 118, "25677": 118, "7293": 118, "48337": 118, "60328": 118, "137825": 118, "238976": 118, "51007": 118, "29447": 118, "04564": 118, "460205": 118, "542404": 118, "6024": 118, "14851": 118, "84209": 118, "98937": 118, "57682": 118, "63652": 118, "72344": 118, "60828": 118, "939186": 118, "40846": 118, "158745": 118, "4484": 118, "745346": 118, "002625": 118, "82582": 118, "02451": 118, "43942": 118, "06974": 118, "fornix_initi": 118, "fornix_centroid": 118, "fornix_clust": 118, "pkl": 118, "972": [118, 119, 242, 247], "segment_quickbundl": [118, 119, 240, 244, 248, 264], "examples_builtsegment": 119, "tissue_classification_dam": [119, 121, 264], "994": [119, 121, 242], "tissue_classif": [119, 120, 264], "mrf": [120, 164, 242], "fsl": [120, 166, 170, 175, 182, 194, 212, 255, 267, 268], "atropo": 120, "strip": [120, 121, 251], "img_ax": 120, "imgplot": 120, "img_cor": 120, "t1_imag": 120, "pad_inch": 120, "adult": 120, "100th": 120, "t0": [120, 169], "total_tim": 120, "final_seg": 120, "73706483840942": 120, "light": 120, "yongyu": [120, 273], "bradi": [120, 273], "906424": [120, 273], "jue": [120, 273], "cook": [120, 273], "multivari": [120, 273], "381": [120, 121, 175, 249, 273], "011": [120, 273], "9109": [120, 273], "polynomi": [121, 271], "dam_classifi": [121, 183], "bvector": [121, 169, 175, 182, 197, 198, 204, 207, 208, 210, 211, 212, 213, 217, 218, 241], "cfin": [121, 170, 182, 191, 244, 274, 275], "48it": 121, "67it": 121, "47it": 121, "31it": 121, "22it": 121, "18it": 121, "17it": 121, "15it": 121, "14it": 121, "11it": 121, "13it": 121, "09it": 121, "07it": 121, "04it": 121, "08it": 121, "05it": 121, "16it": 121, "97it": 121, "00it": 121, "95it": 121, "06it": 121, "161": [121, 169, 248], "164": [121, 138, 248, 255], "166": [121, 248], "171": [121, 249], "173": [121, 248], "174": [121, 248], "178": [121, 152, 153, 175, 248, 273, 274, 275], "182": [121, 248, 273], "183": [121, 169, 248], "184": [121, 252], "186": 121, "190": [121, 248], "194": [121, 133, 134, 245], "195": 121, "196": [121, 248], "198": 121, "02it": 121, "201": [121, 248], "202": [121, 175, 178, 248, 271, 273, 274, 275], "204": [121, 248, 274, 275], "205": [121, 174, 182, 196, 248, 273], "206": [121, 248, 274, 275], "212": [121, 243, 248], "213": [121, 248], "214": 121, "218": [121, 255], "219": [121, 182, 212, 248, 273], "221": [31, 121, 175, 248, 273], "225": [121, 175, 247, 248, 273], "226": [121, 248], "228": [121, 249, 273], "229": [121, 248], "230": [121, 248], "232": [121, 240, 248], "234": [121, 151, 248], "235": [121, 249, 250], "236": 121, "240": [121, 168, 248, 273], "241": [121, 249], "242": [121, 248, 260], "243": [121, 248], "244": [121, 273], "245": [121, 248], "248": [121, 249], "252": [121, 248], "253": [121, 248, 249], "257": [121, 248], "260": [121, 248], "261": [121, 248], "262": [31, 33, 121, 248, 264], "263": [121, 248], "269": [121, 175, 182, 219, 273], "271": [121, 241], "272": 121, "273": [121, 248], "274": [121, 248], "276": 121, "277": [121, 249], "279": [121, 248], "281": 121, "282": [121, 249], "286": [121, 175, 182, 219, 240, 273], "289": [121, 151, 164, 248, 251], "290": [121, 249], "291": 121, "294": 121, "298": [121, 249], "302": [121, 249], "303": [121, 249], "304": [121, 249], "305": [121, 249], "306": [121, 249], "307": [121, 249], "308": [121, 249, 274, 275], "309": [121, 249], "310": [121, 249], "313": [121, 170, 255, 273], "315": [121, 249], "316": [121, 249], "318": [121, 249], "319": [121, 249], "321": [121, 242], "324": [121, 249], "325": [121, 256], "326": [121, 249], "327": [121, 170, 249, 262, 273], "329": [121, 249], "330": [121, 249], "331": [49, 50, 121, 249, 264], "334": [121, 249], "335": [121, 175, 249, 273], "337": [121, 249], "338": [121, 125, 249], "339": [121, 249], "340": [121, 249], "341": [121, 249], "342": [121, 242, 256], "343": [121, 249], "344": [121, 242], "347": [121, 249], "348": [31, 40, 121, 249, 264], "349": [121, 249], "351": [121, 242], "352": [121, 249], "353": [121, 245], "354": [121, 250], "355": [121, 249], "356": [121, 249], "363": [121, 249], "364": [121, 249], "366": [121, 258], "367": [121, 242, 249], "368": [121, 249], "369": [121, 242], "370": [121, 249], "371": [121, 249], "372": [121, 249], "373": [121, 249], "374": [121, 249], "375": [121, 243], "378": [121, 249], "379": [121, 249], "382": [121, 249], "383": [121, 249], "386": [121, 249], "389": [121, 251], "390": [121, 240], "391": [121, 249], "392": [121, 252, 256], "393": [121, 175, 249, 273], "394": [121, 171, 242, 273], "395": 121, "396": [121, 249], "397": [121, 134, 249], "398": [121, 249], "399": [121, 249, 274, 275], "401": [121, 249], "402": [121, 249], "404": [121, 240, 250, 252], "405": [121, 249], "406": [121, 171, 249, 273], "407": [121, 249], "408": [121, 249], "409": [121, 249], "410": [121, 249], "413": [121, 249], "415": [121, 249, 273], "417": [121, 249], "418": [121, 249], "420": [121, 249], "421": [121, 175, 249, 273], "422": [121, 249, 273], "423": [121, 258], "424": [121, 249], "427": [121, 249], "428": [121, 249], "429": [121, 175, 249, 273], "430": [121, 249], "431": [121, 249], "432": [121, 249], "433": [121, 249], "434": [121, 249], "435": [121, 249], "436": [121, 251], "437": [121, 249], "439": [121, 249], "440": [121, 249], "442": [121, 245], "443": [121, 249], "444": [121, 249], "445": [121, 249, 253], "446": [121, 249], "447": [121, 249], "449": [121, 249], "450": [121, 181, 249], "451": [121, 151, 249], "453": [121, 249], "454": [121, 249], "456": [121, 249], "457": 121, "458": [121, 249], "460": [121, 249], "461": [121, 175, 249, 273], "463": [121, 249], "464": [121, 249], "465": [121, 249], "466": [121, 249], "467": [121, 249], "468": 121, "469": [121, 249], "470": [121, 249], "471": [121, 249], "473": [121, 249], "474": [121, 249], "475": [121, 249], "476": [121, 249], "477": [121, 249], "478": [121, 249], "479": [121, 175, 249, 273], "481": [121, 249], "482": [121, 249], "483": [121, 249], "484": [121, 249], "487": [121, 249], "488": [121, 151, 249], "489": [121, 249], "490": [121, 249], "493": [121, 249], "494": [121, 249], "495": [121, 249], "wm_threshold": [121, 176, 182, 191], "gm_mask": [121, 176], "sharlen": [121, 174, 176, 182, 191, 273], "reconst_dsid_1": [124, 125, 264], "examples_builtsimul": 125, "simulate_multi_tensor": [125, 127, 264], "simulate_dki": [125, 126, 264], "barrier": 126, "decompose_tensor": [126, 183], "from_lower_triangular": [126, 183], "multi_tensor_dki": [126, 183], "small_64d": [126, 170, 177], "circ": [126, 175], "fie": 126, "signal_dki": 126, "signal_noisi": [126, 127], "decompos": 126, "dt_eval": 126, "dt_evec": 126, "signal_dti": 126, "simulated_dki_sign": 126, "simulated_sign": 127, "cach": [127, 179, 183, 247], "multi_tensor_simul": 127, "diverg": 128, "metricspe": [128, 176], "dsa": 128, "session": [128, 170], "fdict": 128, "include_afq": [128, 170, 182, 206], "afq_path": 128, "cst_l_file": 128, "clean_bundl": 128, "_se": 128, "_acq": 128, "preproc_dwi_spac": 128, "rasmm_model": 128, "csd_desc": 128, "prob": [128, 162, 182, 237, 251], "cst_l_tractographi": 128, "arc_l_fil": 128, "arc_l_tractographi": 128, "cst_l": [128, 152, 258], "arc_l": 128, "model_arc_l_fil": 128, "model_arc_l": 128, "cluster_cst_l": 128, "standard_cst_l": 128, "cluster_af_l": 128, "standard_af_l": 128, "oriented_cst_l": 128, "orient_by_streamlin": [128, 178, 183], "oriented_arc_l": 128, "volumetr": 128, "fa_affin": 128, "preproc_dwi_model": 128, "outset": 128, "downweight": 128, "w_cst_l": 128, "gaussian_weight": [128, 183], "w_arc_l": 128, "profile_cst_l": 128, "profile_af_l": 128, "tract_profil": 128, "dougherti": [128, 178, 273], "myall": [128, 178, 273], "heidi": [128, 177, 178, 273], "feldman": [128, 178, 273], "0049790": [128, 178, 273], "812": [128, 134, 241], "afq_tract_profil": [128, 134, 264], "assignment_map": [129, 168, 183], "fasiculu": 129, "af_l": [129, 152, 153, 170, 176, 182], "fake_tub": 129, "af_l_before_assignment_map": 129, "indx": [129, 178], "si": 129, "disks_color": 129, "af_l_after_assignment_map": 129, "leigh": [129, 130, 152, 176, 178, 182, 188, 189, 230, 273], "risach": [129, 130, 152, 176, 178, 182, 188, 189, 230, 273], "bullock": [129, 130, 152, 176, 178, 182, 188, 189, 230, 259, 273], "17149": [129, 130, 152, 176, 178, 182, 188, 189, 230, 273], "s41598": [129, 130, 152, 176, 178, 182, 188, 189, 230, 273], "020": [129, 130, 152, 176, 178, 182, 188, 189, 230, 273], "74054": [129, 130, 152, 176, 178, 182, 188, 189, 230, 273], "bundle_assignment_map": [129, 134, 264], "whatsoev": 130, "dissimilar": 130, "bundle_shape_similar": [130, 134, 183, 256, 264], "bundle1": [130, 140, 176, 179], "bundle2": [130, 140, 176, 179], "streamtube_actor": 130, "two_bundl": 130, "cluster_thr": [130, 151, 181, 182, 222], "clust_thr": [130, 176, 182, 189, 230], "ba_scor": 130, "6583333333333333": 130, "9916666666666667": 130, "lenient": 130, "532": [130, 134, 250], "cluster_confid": [131, 134, 183, 264], "40mm": 131, "cci": [131, 179], "long_streamlin": 131, "hue": [131, 140], "satur": [131, 140], "lut_cmap": [131, 140], "hue_rang": [131, 140, 142], "saturation_rang": [131, 140, 142], "bar3": [131, 140], "stream_actor": [131, 139, 140], "pop": [131, 133, 141], "cci_streamlin": 131, "landscap": 131, "probe": [131, 179], "phenomenon": 131, "lone": 131, "vote": 131, "lend": 131, "cci_histogram": 131, "histogram": [131, 135, 168, 169, 176, 181], "keep_streamlin": 131, "keep_streamlines_actor": 131, "filtered_cci_streamlin": 131, "anisha": [131, 179, 273], "keshavan": [131, 179, 273], "12467": [131, 179, 273], "894": [131, 134, 241], "therapi": [133, 273], "shortest": [133, 179], "treatment": [133, 148], "gross": 133, "tumor": [133, 259], "gtv": 133, "mpl": [133, 181, 242, 249], "lesion": 133, "electrod": 133, "surface_opac": [133, 141], "surface_color": [133, 141, 181], "seedroi_actor": [133, 141], "plm_roi_sl": 133, "transpar": [133, 141, 181, 182, 222], "hypothesi": 133, "motor": 133, "cortico": 133, "path_length_map_base_roi": 133, "wmpl": 133, "example_cc_path_length_map": 133, "ignor": [133, 174, 175, 176, 178, 182, 222, 245, 249, 253, 255], "wmpl_show": 133, "masked_wher": 133, "slx": 133, "sly": 133, "slz": 133, "path_length_map": [133, 134, 264], "olivi": [133, 273], "morin": [133, 273], "wahl": [133, 273], "chapman": [133, 273], "owen": [133, 174, 273], "steve": [133, 273], "braunstein": [133, 273], "plan": [133, 149, 245, 251, 267, 268, 273], "neuro": [133, 273], "oncologi": [133, 273], "fonc": [133, 273], "00810": [133, 273], "examples_builtstreamline_analysi": 134, "streamline_tool": [134, 136, 242, 244, 249, 251, 253, 264], "streamline_length": [134, 135, 264], "750": 134, "approx_polygon_track": [135, 259], "simulated_bundl": 135, "no_streamlin": 135, "retriev": [135, 143, 173, 175, 176, 274], "burlywood": 135, "length_histogram": 135, "2mm": 135, "bundle_downsampl": 135, "n_pts_d": 135, "curvi": 135, "bundle_downsampled2": 135, "n_pts_ds2": 135, "lossi": 135, "bundle_actor": 135, "bundle_actor2": 135, "bundle_actor3": 135, "simulated_cosine_bundl": 135, "equidist": 135, "obviou": 135, "great": [135, 169], "n_pts_histogram": 135, "lengths_downsampl": 135, "lengths_downsampled2": 135, "id": [135, 176, 181, 182], "lengths_plot": 135, "751": [135, 240], "meant": [136, 169, 175], "cc_streamlin": 136, "other_streamlin": 136, "cc_streamlines_actor": 136, "corpuscallosum_axi": 136, "corpuscallosum_sagitt": 136, "return_map": [136, 169, 179], "mapping_as_streamlin": [136, 179], "log1p": [136, 182, 226], "gyru": 136, "surpris": 136, "tricki": 136, "lr_superiorfrontal_track": 136, "dm": 136, "int16": [136, 151, 173], "lr_sf_trk": 136, "footnot": [136, 253], "aparc": [136, 170, 255], "aseg": 136, "mgz": 136, "lie": [136, 169, 179], "label_info": 136, "4x4": [136, 168, 169, 173, 181], "examples_builtvisu": 138, "viz_roi_contour": [138, 141, 264], "887": [138, 141, 242], "viz_bundl": [138, 140, 264], "737": [138, 140, 240], "viz_advanc": [138, 139, 245, 264], "930": [138, 139, 175, 242, 273], "thin": 139, "fetch_bundles_2_subject": [139, 140, 142, 183], "read_bundles_2_subject": [139, 140, 183, 242], "dialog": 139, "snapshot": [139, 152], "primit": 139, "slider": [139, 181, 242, 244, 245, 253, 254, 259, 262], "lineslider2d": [139, 181], "bundles_2_subject": [139, 142, 170, 274, 275], "tar": 139, "38477": 139, "97756fbef11ce2df31f1bedf1fc7aac7": 139, "exp_bundles_and_map": [139, 142], "subj_id": [139, 140, 170], "subj_1": [139, 140, 142, 170], "cc_1": [139, 170], "1mm": 139, "image_actor_z": 139, "slicer_opac": 139, "image_actor_x": 139, "x_midpoint": 139, "round": [139, 169, 174, 241, 244, 249, 250], "image_actor_i": 139, "y_midpoint": 139, "image_actor": 139, "showmanag": [139, 142, 181], "show_m": [139, 142], "line_slider_z": 139, "min_valu": [139, 181], "max_valu": [139, 175, 181], "initial_valu": [139, 181], "text_templ": [139, 181], "0f": 139, "line_slider_x": 139, "line_slider_i": 139, "opacity_slid": 139, "change_slice_z": 139, "change_slice_x": 139, "change_slice_i": 139, "change_opac": 139, "on_chang": [139, 181], "build_label": [139, 183], "textblock2d": [139, 142, 181, 244], "font_siz": [139, 181], "font_famili": 139, "arial": 139, "justif": 139, "ital": 139, "shadow": 139, "background_color": 139, "line_slider_label_z": 139, "line_slider_label_x": 139, "line_slider_label_i": 139, "opacity_slider_label": 139, "panel2d": [139, 142, 244], "1030": [139, 242], "add_el": [139, 142], "screen": [139, 148, 170], "re_align": 139, "getsiz": 139, "win_callback": 139, "size_old": 139, "size_chang": 139, "reset_clipping_rang": 139, "add_window_callback": 139, "bundles_and_3_slic": 139, "del": 139, "soham": [139, 273], "biswa": [139, 273], "reagan": [139, 181, 182, 222, 242, 243, 244, 245, 273], "nasim": [139, 258, 259, 273], "anousheh": [139, 258, 259, 273], "filipi": [139, 273], "silva": [139, 273], "geoffrei": [139, 175, 273], "fox": [139, 273], "3384": [139, 253, 273], "21105": [139, 273], "joss": [139, 251, 273], "03384": [139, 273], "dix": [140, 170, 173], "cg": 140, "bundle_n": 140, "knew": 140, "camera_info": 140, "focal": 140, "stream_actor2": 140, "stream_actor3": 140, "bar2": 140, "bundle3": 140, "stream_actor4": 140, "bundle4": 140, "stream_actor5": 140, "bundle5": 140, "stream_actor6": 140, "bundle6": 140, "decim": [141, 243], "contour_from_roi_tutori": 141, "fname_t1": 142, "t1_warp": 142, "value_rang": [142, 256], "slice_actor": [142, 181, 183], "slice_actor2": 142, "hsv": 142, "fname_fa": 142, "fa_1x1x1": 142, "lut": 142, "fa_actor": 142, "slices_lut": 142, "label_posit": 142, "label_valu": 142, "result_posit": 142, "result_valu": 142, "panel_pick": 142, "left_click_callback": 142, "ev": 142, "event_po": 142, "iren": [142, 152, 181, 273], "geteventposit": 142, "picker": [142, 245], "getpointijk": 142, "8f": 142, "setinterpol": 142, "addobserv": 142, "leftbuttonpressev": 142, "perspect": [142, 169], "show_m_mosa": 142, "left_click_callback_mosa": 142, "slice_mosa": 142, "drag": 142, "scroll": [142, 245], "combinedworkflow": [143, 183], "combined_workflow": [143, 183], "nlmeansflow": [143, 183], "medianotsuflow": [143, 183], "denoiseandseg": 143, "_get_sub_flow": 143, "commandlin": [143, 152, 182], "input_fil": [143, 146, 151, 182, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 231, 232, 235], "out_dir": [143, 146, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 170, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 274], "out_denois": [143, 182, 198, 199, 200, 201], "out_mask": [143, 151, 182, 202, 225, 227], "dwi_mask": [143, 182, 202, 227], "wildcard": [143, 146, 157, 159, 182, 187, 188, 189, 191, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 227, 228, 229, 231, 232, 234, 236, 237, 238], "out_": [143, 146], "parser": [143, 146], "io_it": [143, 146, 182], "get_io_iter": [143, 146, 182, 183, 245], "in_fnam": 143, "_out_denois": 143, "_out_mask": 143, "nl_flow": 143, "run_sub_flow": [143, 182, 183], "last_generated_output": 143, "me_flow": 143, "ioiter": [143, 146, 183], "globbin": 143, "dipy_root": [143, 146], "dipy_denoise_seg": 143, "cli": [143, 146, 164, 183, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262], "cli_flow": [143, 146], "my_combined_workflow": 143, "argpars": [143, 146, 182], "overwrit": [143, 146, 174, 256], "wrote": [143, 146], "combined_workflow_cr": [143, 145, 264], "examples_builtworkflow": 145, "workflow_cr": [145, 146, 264], "callabl": [146, 168, 170, 172, 175, 178, 181, 249, 255], "t1_denois": 146, "my_workflow": 146, "shutil": 146, "Will": [146, 170, 173, 174, 175, 182, 206], "appendtextflow": 146, "text_to_append": 146, "out_fil": [146, 182, 186, 193, 226, 232, 234], "in_fil": 146, "myfil": 146, "glob": 146, "dipy_append_text": 146, "paradigm": [147, 267], "bloch": 147, "torrei": 147, "pgse": [147, 267, 268, 269], "readout": 147, "gamma": [147, 148, 171, 175, 267], "gyromagnet": [147, 267], "width": [147, 168, 175, 181, 267], "wave": [147, 170, 175, 269, 273], "stand": [147, 174], "mobil": 147, "molecul": 147, "movement": 147, "counterintuit": 147, "dephas": 147, "dwmri": 147, "speak": 147, "plenti": 147, "nonisotrop": [147, 249], "textrm": [147, 175], "uncertainti": [147, 175, 182, 212, 273], "batteri": 147, "painless": 147, "noth": [147, 168, 175, 251], "ever": 147, "dicom": [147, 251, 270], "npz": [147, 170, 245], "pydicom": 147, "v4": 147, "v6": 147, "v7": 147, "loadmat": 147, "pytabl": [147, 164, 242, 243], "hdf5": [147, 164, 173, 174, 242, 252, 253], "serial": [147, 175], "load_pickl": [147, 183], "huge": [147, 182, 230, 265], "pycharm": 147, "sublim": 147, "aptana": 147, "emac": 147, "eclips": 147, "pydev": 147, "rorden": 147, "dcm2nii": 147, "mricron": 147, "reader": [147, 183], "openli": 147, "grade": 147, "fcon_1000": 147, "nitrc": 147, "humanconnectom": [147, 170], "openneuro": 147, "gimbal_lock": [148, 255], "euler": [148, 149, 169, 255], "defici": 148, "indistinguish": 148, "spitfir": 148, "aircraft": 148, "wing": 148, "roll": [148, 169], "tilt": 148, "violent": 148, "straight": [148, 179], "wait": 148, "pm": [148, 175, 267, 268], "radian": [148, 169, 175, 179, 267], "smallmatrix": 148, "pm1": 148, "proof": 148, "mathworld": [148, 149, 169, 272], "rewrit": [148, 253], "v_": [148, 169, 175], "v_1": 148, "v_2": 148, "conclus": 148, "gregslabaugh": 148, "homogen": [149, 168, 169], "theorem": 149, "boldsymbol": 149, "x_1": 149, "x_n": 149, "pythagora": 149, "gimbal": 149, "lock": [149, 175], "quaternion": 149, "suffer": [149, 175], "orthogon": [149, 175, 271, 272, 273], "transpos": [149, 168, 169, 175, 181, 263], "synonym": 149, "paragon": 150, "ecosystem": 150, "brows": 150, "recip": [150, 174, 253], "dedic": 150, "answer": [150, 166, 179], "comfort": 150, "patch2self3": [164, 253, 254], "reweight": [164, 175, 253, 273], "ndc": [164, 178, 253], "rai": [164, 179, 260], "joblib": [164, 175, 254, 259], "dask": 164, "transit": [164, 254, 269], "polici": [164, 255], "past": 150, "mac": [151, 241, 245, 256, 260, 265, 279], "mkdir": [151, 152, 153, 155, 156, 157, 159, 160, 161, 162], "data_fold": [151, 155], "dipy_fetch": [151, 155, 163, 239, 252, 254], "__dti_ax_ep2d_2_5_iso_33d_20141015095334_4": [151, 156, 160], "mv": 151, "dipy_info": [151, 239, 263], "uint16": [151, 240], "888": [151, 242], "avg": [151, 179], "940581408413976": 151, "percentil": [151, 181], "98th": 151, "psr": 151, "569": [151, 250], "1257": [151, 242], "62918037280702": 151, "la": 151, "498": [151, 249], "084": 151, "069": 151, "082": 151, "504": [151, 249], "elef": 151, "1400": [151, 244, 274, 275], "2200": [151, 255, 274, 275], "2400": [151, 262, 274, 275], "2600": [151, 260, 274, 275], "2800": [151, 262, 274, 275], "b0_thr": 151, "dipy_horizon": [151, 152, 153, 154, 163, 239, 251, 256, 259, 262, 263], "out_work": 151, "dipy_fit_dti": [151, 160, 239, 251, 253, 260], "ga": [151, 170, 175, 182, 183, 209, 212, 273], "dec": [151, 173, 181, 245, 277], "fastest": 151, "dipy_fit_csa": [151, 160, 239, 251], "dipy_mask": [151, 162, 239], "pam5": [151, 152, 162, 164, 173, 182, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 228, 229, 236, 252, 263], "out_tractogram": [151, 182, 192, 195, 237, 238], "tracks_from_peak": 151, "tracking_method": [151, 162, 182, 237], "random_color": [151, 153, 154, 181, 182, 222, 259], "length_gt": [151, 181, 182, 222], "length_lt": [151, 181, 182, 222], "clusters_gt": [151, 181, 182, 222], "clusters_lt": [151, 181, 182, 222], "native_coord": [151, 182, 222], "stealth": [151, 181, 182, 222], "emergency_head": [151, 182, 222], "bg_color": [151, 181, 182, 222], "disable_order_transpar": [151, 182, 222], "out_stealth_png": [151, 182, 222], "out_strat": 151, "mix_nam": [151, 153, 182], "log_level": 151, "log_fil": 151, "stretch": 151, "nonetheless": 151, "februari": [151, 152, 153, 154, 165, 174, 175, 182, 202, 219, 273], "fninf": [151, 152, 153, 154, 273], "00008": [151, 152, 153, 154, 273], "parkinson": [152, 273], "ppmi": [152, 273], "atlas_of_30_human_brain_bundles_in_mni_spac": [152, 153], "12089652": [152, 153], "35092": 152, "yhjc": 152, "12098397": 152, "h5": [152, 173], "subjects_smal": 152, "af_r": 152, "ccmid": 152, "cc_forcepsmajor": [152, 170], "cc_forcepsminor": 152, "cst_r": [152, 170], "emc_l": 152, "emc_r": 152, "fpt_l": 152, "fpt_r": 152, "ifof_l": 152, "ifof_r": 152, "ilf_l": 152, "ilf_r": 152, "mlf_l": 152, "mlf_r": 152, "ml_l": 152, "ml_r": 152, "mdlf_l": 152, "mdlf_r": 152, "opt_l": 152, "opt_r": 152, "or_l": 152, "or_r": 152, "stt_l": 152, "stt_r": 152, "uf_r": 152, "3805": 152, "anatomical_measur": [152, 183], "org_bundl": 152, "rec_bundl": 152, "3806": 152, "3809": 152, "3850": 152, "3851": 152, "3383": 152, "3385": [152, 274, 275], "3387": [152, 253], "3392": [152, 253], "3552": 152, "streamlines_moved_af_l__labels__recognized_orig": 152, "streamlines_moved_af_r__labels__recognized_orig": 152, "streamlines_moved_ccmid__labels__recognized_orig": 152, "streamlines_moved_uf_l__labels__recognized_orig": 152, "streamlines_moved_uf_r__labels__recognized_orig": 152, "streamlines_moved_v__labels__recognized_orig": 152, "moved_af_l__recogn": 152, "moved_af_r__recogn": 152, "moved_ccmid__recogn": 152, "moved_uf_l__recogn": 152, "moved_uf_r__recogn": 152, "moved_v__recogn": 152, "overridden": [152, 174], "eg": [152, 176, 178, 182, 248, 261], "bundle_profil": 152, "dipy_buan_profil": [152, 239, 253], "lmm": [152, 182], "lmm_plot": 152, "dipy_buan_lmm": [152, 239], "buan_thr": [152, 182, 222], "buan_highlight": [152, 182, 222], "af_l_fa_pvalu": 152, "pvalu": [152, 182, 222], "cst_l_fa_pvalu": 152, "sm_plot": 152, "dipy_buan_shap": [152, 239, 255], "12033390": 152, "kenneth": [152, 273], "danna": [152, 273], "shirlei": [152, 273], "lasch": [152, 273], "siderowf": [152, 273], "carolin": [152, 175, 273], "tanya": [152, 273], "simuni": [152, 273], "karl": [152, 175, 273], "kieburtz": [152, 273], "flagg": [152, 273], "sohini": [152, 273], "werner": [152, 273], "poew": [152, 273], "brit": [152, 273], "mollenhau": [152, 273], "paracelsu": [152, 273], "elena": [152, 273], "klinik": [152, 273], "todd": [152, 273], "sherer": [152, 273], "frasier": [152, 273], "clair": [152, 273], "meunier": [152, 273], "alic": [152, 273], "rudolph": [152, 273], "cindi": [152, 273], "casac": [152, 273], "seibyl": [152, 273], "susan": [152, 174, 182, 196, 273], "mendick": [152, 273], "norbert": [152, 273], "schuff": [152, 273], "ying": [152, 175, 182, 212, 273], "arthur": [152, 175, 273], "toga": [152, 175, 273], "karen": [152, 273], "crawford": [152, 273], "alison": [152, 273], "ansbach": [152, 273], "pasqual": [152, 273], "blasio": [152, 273], "michel": [152, 273], "piovella": [152, 273], "trojanowski": [152, 273], "shaw": [152, 273], "keith": [152, 273], "hawkin": [152, 273], "eberl": [152, 273], "deborah": [152, 273], "brook": [152, 273], "laura": [152, 273], "leari": [152, 273], "stewart": [152, 273], "barbara": [152, 273], "sommerfeld": [152, 273], "penelop": [152, 273], "hogarth": [152, 273], "pighetti": [152, 273], "standaert": [152, 273], "guthri": [152, 273], "hauser": [152, 273], "holli": [152, 273], "delgado": [152, 273], "jankov": [152, 273], "christin": [152, 273], "hunter": [152, 273], "stern": [152, 273], "baochan": [152, 273], "tran": [152, 169, 182, 184, 273], "jim": [152, 273], "leverenz": [152, 273], "marn": [152, 273], "baca": [152, 273], "sam": [152, 253, 254, 259, 260, 261, 262, 263, 273], "frank": [152, 269, 273], "cathi": [152, 273], "richard": [152, 273], "deelei": [152, 273], "linda": [152, 273], "ree": [152, 273], "fabienn": [152, 273], "sprenger": [152, 273], "elisabeth": [152, 273], "lang": [152, 273], "shill": [152, 273], "sanja": [152, 273], "obradov": [152, 273], "fernandez": [152, 153, 273], "adrienna": [152, 273], "daniela": [152, 273], "berg": [152, 177, 273], "katharina": [152, 273], "gauss": [152, 168, 182, 185, 273], "dougla": [152, 273], "galasko": [152, 273], "fontain": [152, 273], "zoltan": [152, 273], "mari": [152, 273], "melissa": [152, 273], "gerstenhab": [152, 273], "sophi": [152, 273], "malloi": [152, 273], "paolo": [152, 273], "baron": [152, 273], "katia": [152, 273], "longo": [152, 273], "comeri": [152, 273], "ravina": [152, 273], "igor": [152, 273], "grachev": [152, 273], "gallagh": [152, 273], "widnel": [152, 273], "suzann": [152, 273], "ostrowizki": [152, 273], "fontoura": [152, 273], "toni": [152, 273], "ho": [152, 174, 182, 196, 273], "johan": [152, 273], "luthman": [152, 273], "marcel": [152, 273], "brug": [152, 273], "alastair": [152, 273], "reith": [152, 273], "peggi": [152, 273], "taylor": [152, 169, 177, 273], "neurobiologi": [152, 273], "pneurobio": [152, 273], "sandip": [152, 153, 273], "panesar": [152, 153, 273], "fernand": [152, 153, 273], "meola": [152, 153, 273], "masanori": [152, 153, 273], "yoshino": [152, 153, 273], "juan": [152, 153, 273], "miranda": [152, 153, 273], "vettel": [152, 153, 273], "verstynen": [152, 153, 273], "macroscal": [152, 153, 273, 274, 275], "topologi": [152, 153, 273, 274, 275], "hcp_tractogram_zip": 153, "7013003": 153, "whole_brain_mni": [153, 163], "dipy_slr": [153, 161, 164, 239], "rb_output": 153, "dipy_recobundl": [153, 239], "pink": [153, 154], "org_output": 153, "dipy_labelsbundl": [153, 239], "visit": [153, 154, 167, 176], "chandio2023": 154, "m_uf": 154, "s_uf_li": 154, "capac": 154, "\u03bb": [154, 182, 190], "dipy_bundlewarp": [154, 239], "nonlinearly_mov": [154, 182, 190], "destin": 155, "specific_dataset": 155, "specific_data_out_fold": 155, "eigenspectrum": 156, "lpca": [156, 164, 182, 198, 251, 252, 259], "ow": 156, "denoise_lpca_output": 156, "suffic": [156, 157, 159], "dipy_denoise_lpca": [156, 239], "dwi_lpca": [156, 182, 198], "subtl": 156, "hardli": 156, "denoise_mppca_output": 156, "dipy_denoise_mppca": [156, 239], "textur": 156, "denoise_nlmeans_output": 156, "lcpa": 156, "gibbs_ringing_output": 157, "dipy_gibbs_ring": [157, 239], "t1_brain_denois": 157, "motion_output": 159, "dipy_correct_mot": [159, 239], "recons_csd_output": 160, "stanford_hardi_mask": 160, "dipy_fit_csd": [160, 239, 251], "recons_mapmri_output": 160, "big": [160, 169, 175, 182, 216, 243, 249, 251, 253, 279], "dipy_fit_mapmri": [160, 239], "recons_dti_output": 160, "save_metr": [160, 182, 184, 209, 212, 215, 216], "out_tensor": [160, 182, 194, 212], "dti_tensor": [160, 182, 209], "recons_dki_output": 160, "cfin_multib_mask": 160, "dipy_fit_dki": [160, 239], "recons_csa_output": 160, "pam": [35, 40, 69, 160, 172, 173, 179, 181, 182, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 237, 238, 245], "extract_pam_valu": [160, 182, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220], "recons_ivim_output": 160, "ivim_mask": 160, "dipy_fit_ivim": [160, 239], "698": [160, 240, 273], "710": [160, 240, 273], "1518": [160, 245, 273], "meanwhil": 161, "image_reg_output": 161, "dipy_align_affin": [161, 239], "path_to_static_fil": 161, "path_to_moving_fil": 161, "affine_reg_output": 161, "out_affin": [161, 182, 184, 197, 233], "affine_reg": 161, "syn_reg_output": 161, "out_warp": [161, 182, 185], "em": [161, 168, 182, 185], "dipy_align_syn": [161, 239, 256, 262], "syn_reg_warp": 161, "transform_typ": [161, 182, 186], "transform_reg_output": 161, "dipy_apply_transform": [161, 239], "path_to_transform_map_fil": 161, "nb_pt": [161, 168, 176, 182, 233], "sl_reg_output": 161, "stop_fil": 162, "seed_dens": [162, 182, 237, 238], "recon": [162, 242, 251], "pve_wm": 162, "eudx_tracking_output": 162, "det_tracking_output": 162, "det": [162, 169, 175, 182, 237, 243, 244], "prob_tracking_output": 162, "closest_peaks_output": 162, "prematur": 162, "pft_output": 162, "dipy_track_pft": [162, 239], "pve_gm": 162, "pve_csf": 162, "talk": 163, "mni_templ": [163, 274, 275], "mni_icbm152_t1_tal_nlin_asym_09a": 163, "mni_icbm152_t2_tal_nlin_asym_09a": 163, "userprofil": 163, "invok": 163, "your_file_nam": 163, "your_fist_file_nam": 163, "bundle_atlas_hcp842": [163, 274, 275], "trx": [163, 173, 182, 192, 261, 262, 263, 276], "vtp": [163, 164, 173, 259, 260], "atlas_80_bundl": 163, "whole_brain": 163, "expens": [163, 175], "wget": 163, "maharshi": [163, 253, 254, 262, 263], "gor": [163, 253, 254, 262, 263], "dipy_data": 163, "surface_data": 163, "lh": 163, "pial": [163, 173], "path_to_your_directori": 163, "deepn4": [164, 170, 182, 183, 196, 254, 273], "dl": [164, 263], "n4": [164, 182, 196, 246, 254, 263], "evac": [164, 170, 182, 183, 202, 261, 262], "10x": 164, "synb0": [164, 170, 183, 261, 262, 273], "cnn": [164, 183, 261], "dtiflow": 164, "lpcaflow": [164, 183], "rumbaflow": 164, "dkiflow": 164, "imageregistrationflow": [164, 183], "motioncorrectionflow": [164, 183], "parallelis": 164, "govern": [164, 175, 258], "multiplatform": [164, 265], "vtk9": [164, 255], "typographi": 164, "appveyor": [164, 245, 252, 255], "smarter": 164, "critic": 164, "mtm": [164, 251], "fetchflow": [164, 183, 251, 252, 274], "quickbundlesx": [164, 168, 181, 182, 183, 189, 222, 233, 244, 273], "tractometri": [164, 167, 246], "almost": [164, 175, 247], "cvxopt": [164, 243, 249, 251], "reorient": [164, 169, 179, 240, 241, 245], "64bit": [164, 279], "cleaner": 164, "offici": [164, 165], "exhibitor": [164, 165], "massiv": 164, "geodes": [164, 175, 182, 209, 212, 250, 273], "robustli": 164, "magazin": 165, "nov": 165, "22nd": 165, "3x": 165, "teach": 165, "fundament": 165, "seminar": 165, "neuroscientist": 165, "qbin": 165, "dont": 165, "creator": 165, "attend": 165, "hbm": [165, 175, 240, 249, 273], "0dev": 165, "win": 165, "took": 165, "mia": 165, "mcgill": [165, 170, 274, 275], "3rd": [165, 179, 262], "sprint": 165, "my_fib_file_path": 166, "my_fold": 166, "my_path": 166, "my_tractogram": 166, "my_trk_file_path": 166, "my_trk": 166, "mrtrix3": [166, 175, 182, 193, 232, 251, 263, 271, 273], "convert_sh_descoteaux_tourni": [166, 183], "convert_tensor": [166, 183], "my_data": 166, "otensor": 166, "outputfield": 166, "static_filenam": 166, "moving_filenam": 166, "phantom": [45, 46, 49, 167, 170, 183, 264, 274, 275], "unittest": [167, 249], "__version__": [167, 279], "pycpd": 168, "siavashk": 168, "encapsul": 168, "codomain": 168, "parzenjointhistogram": 168, "parzen": [168, 273], "cubic": [168, 179, 182, 185], "annal": [168, 273], "1065": [168, 242, 273], "1076": [168, 242, 273], "1962": [168, 252, 273], "1214": [168, 242, 273], "aom": [168, 273], "1177704472": [168, 273], "kwd": 168, "metric_kwarg": 168, "ride": [168, 173], "ndarrai": [168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 256], "template_affin": 168, "reg_kwarg": 168, "disp": 168, "domain_img": 168, "codomain_img": 168, "between_affin": 168, "ret_metr": 168, "gradual": 168, "boolean": [168, 169, 171, 174, 175, 179, 181, 182, 262], "interv": [168, 273], "final_affin": 168, "xopt": [168, 169, 173, 183], "fopt": [168, 169, 173, 183], "isosc": [168, 256, 259], "ref_affin": 168, "b0_ref": 168, "xform_img": 168, "affine_arrai": 168, "n_point": [168, 169, 171, 178, 179, 182, 221, 255], "native_resampl": 168, "sigma2": 168, "low_rank": 168, "num_eig": 168, "max_iter": 168, "cloud": 168, "nxd": 168, "mxd": 168, "ty": 168, "span": [168, 169], "absolut": [168, 169, 173, 174, 175, 182, 226, 242, 246, 254, 255, 271], "mxn": 168, "pt1": 168, "nx1": 168, "p1": 168, "mx1": 168, "likelihoo": 168, "lowrank": 168, "get_registration_paramet": [168, 183], "registration_paramet": 168, "transform_point_cloud": [168, 183], "update_transform": [168, 183], "arxiv": 168, "0905": 168, "2635": [168, 260], "update_vari": [168, 183], "eig_fgt": 168, "get_affin": [168, 183, 242], "set_affin": [168, 183], "affine_inv": 168, "unchang": [168, 179], "image_grid2world": 168, "sampling_grid_shap": 168, "sampling_grid2world": 168, "resample_onli": 168, "domain_shap": 168, "codomain_shap": 168, "neg_mi": 168, "distance_and_gradi": [168, 183], "neg_mi_grad": 168, "grad": [168, 179], "whose": [168, 169], "bfg": [168, 169, 176, 249], "accomplish": [168, 175, 182], "disp_shap": 168, "disp_grid2world": 168, "alloc": [168, 183, 279], "compute_inversion_error": [168, 183], "perfect": 168, "comp": 168, "dinv": 168, "expand_field": [168, 183], "expand_factor": 168, "new_shap": 168, "get_backward_field": [168, 183], "is_invers": 168, "get_forward_field": [168, 183], "get_simplified_transform": [168, 183], "diffeomorh": 168, "interpret_matrix": [168, 183], "shallow_copi": [168, 183], "shallow": 168, "new_map": 168, "image_world2grid": 168, "out_shap": 168, "out_grid2world": 168, "_warp_forward": 168, "_warp_backward": 168, "transform_point": [168, 183], "coord2world": 168, "world2coord": 168, "warp_endomorph": [168, 183], "endomorph": 168, "inherit": [168, 171, 182, 201, 253], "costli": 168, "simpler": [168, 247], "get_map": [168, 183, 256], "set_level_it": [168, 183], "inv_tol": [168, 182, 185], "static_to_ref": 168, "current_displac": 168, "new_displac": 168, "disp_world2grid": 168, "time_sc": 168, "intend": [168, 174, 181, 182, 216, 260], "d2": [168, 173, 175], "d1": [168, 175], "mean_norm": 168, "compute_backward": [168, 183], "compute_forward": [168, 183], "free_iter": [168, 183], "registrationoptim": 168, "get_energi": [168, 183], "initialize_iter": [168, 183], "unpract": 168, "set_levels_abov": [168, 183], "set_levels_below": [168, 183], "set_moving_imag": [168, 183], "moving_spac": 168, "moving_direct": 168, "set_static_imag": [168, 183], "static_spac": 168, "static_direct": 168, "use_moving_image_dynam": [168, 183], "original_moving_imag": 168, "diffeomorficmap": 168, "use_static_image_dynam": [168, 183], "original_static_imag": 168, "inner_it": 168, "q_level": 168, "double_gradi": 168, "step_typ": 168, "gauss_newton": [168, 182, 185], "compute_demons_step": [168, 183], "forward_step": 168, "demon": [168, 182, 185, 244, 245, 273], "compute_gauss_newton_step": [168, 183], "newton": [168, 174, 259, 273], "seidel": [168, 182, 185], "bruhn": [168, 273], "weickert": [168, 273], "andr": [168, 273], "ultim": [168, 273], "tenth": [168, 273], "iccv": [168, 273], "749": [168, 169, 240, 273], "755": [168, 240, 273], "transfer": [168, 246], "use_double_gradi": 168, "originalstaticimag": 168, "vercauteren": [168, 273], "xavier": [168, 175, 273], "pennec": [168, 175, 273], "aymer": [168, 273], "perchant": [168, 273], "ayach": [168, 175, 273], "supplement": [168, 169, 273, 274, 275], "s61": [168, 273], "s72": [168, 273], "040": [168, 273], "delta_field": 168, "sigma_sq_field": 168, "gradient_field": 168, "lambda_param": 168, "coarser": 168, "infinit": [168, 177, 251], "sigmafield": 168, "new_zoom": 168, "cval": [168, 182, 231], "pool": [168, 171, 174, 175, 182, 221, 231, 248], "f_name": 168, "num_level": 168, "input_spac": 168, "sigma_factor": 168, "mask0": 168, "from_level": 168, "get_affine_inv": [168, 183], "get_domain_shap": [168, 183], "get_expand_factor": [168, 183], "to_level": 168, "get_imag": [168, 183], "get_scal": [168, 183], "get_sigma": [168, 183], "get_spac": [168, 183], "print_level": [168, 183], "aka": 168, "hungri": [168, 241], "matopt": 168, "matopt_histori": 168, "matrix1": 168, "matrix2": 168, "block_siz": 168, "min_siz": [168, 176], "default_bound": 168, "l_bfgs_b": [168, 176], "powel": [168, 176], "rm_small_clust": [168, 182, 233, 261], "maxit": [168, 175], "select_random": 168, "greater_than": [168, 176, 182, 230, 233], "less_than": [168, 175, 176, 182, 230, 233], "qbx_thr": [168, 182, 233], "n_bundl": 168, "lst": 168, "unmatch": 168, "precomput": [168, 175, 176], "ml": [168, 182, 190], "matched_pair": [168, 182, 190], "unitari": [168, 181], "shape_profil": [168, 181], "stdv": 168, "algebra": 169, "descriptor": 169, "reserv": [169, 176], "redistribut": [169, 176, 182], "permit": [169, 175, 176, 182], "met": [169, 176, 182, 191], "disclaim": [169, 176, 182], "materi": [169, 176, 182, 273], "endors": [169, 176], "BY": [169, 176, 182], "THE": [169, 176, 182], "holder": 169, "AND": [169, 173, 176, 182], "AS": [169, 176, 182], "OR": [169, 176, 182], "warranti": [169, 170, 176, 182], "BUT": [169, 176, 182], "TO": [169, 176, 182], "OF": [169, 176, 182], "merchant": [169, 176, 182], "FOR": [169, 176, 182], "NO": [169, 176, 182], "shall": [169, 176, 182], "owner": 169, "liabl": [169, 176, 182], "indirect": [169, 176, 182], "incident": [169, 176, 182], "exemplari": [169, 176, 182], "consequenti": [169, 176, 182], "damag": [169, 170, 176, 182], "procur": [169, 176, 182], "substitut": [169, 175, 176, 182], "profit": [169, 176, 182], "busi": [169, 176, 182], "interrupt": [169, 176, 182], "ON": [169, 176, 182], "liabil": [169, 176, 182], "contract": [169, 176, 182], "strict": [169, 176, 182], "neglig": [169, 176, 182], "aris": [169, 176, 182], "IF": [169, 176, 182], "SUCH": [169, 176, 182], "declar": [169, 174, 246, 247, 251, 253], "overhead": [169, 175], "untrigg": 169, "hetting": 169, "rcn": 169, "htm": 169, "datamodel": 169, "debug": [169, 242], "octahedron": [169, 247], "modulu": 169, "lon": 169, "lat": 169, "parameter": [169, 260], "inclin": [169, 272], "azimuth": [169, 175, 272], "south": [169, 272], "north": [169, 272], "west": [169, 272], "east": [169, 272], "posterior": 169, "anterior": 169, "zenith": [169, 272], "counter": [169, 253], "clockwis": 169, "geograph": 169, "nomenclatur": [169, 252], "latitud": [169, 272], "longitud": [169, 272], "array_lik": [169, 175, 178, 179], "spherical_coordinate_system": 169, "wolfram": 169, "sphericalcoordin": 169, "hypotenus": 169, "sph2cart": [169, 272], "trivial": [169, 246], "vec": [169, 175], "nvec": 169, "l2n": 169, "allclos": [169, 179, 247], "keepdim": 169, "sn": 169, "instabl": 169, "_r": 169, "ur": 169, "rad2deg": 169, "npd": [169, 182], "niethamm": [169, 273], "estepar": [169, 273], "bouix": [169, 175, 273], "martha": [169, 175, 273], "shenton": [169, 175, 273], "2622": [169, 260, 273], "2625": [169, 261, 273], "iemb": [169, 273], "259826": [169, 273], "diag": [169, 175], "pts1": 169, "pts2": 169, "check_radiu": 169, "broadcast": [169, 175, 176, 251, 260], "5708": 169, "7124": 169, "vecs1": 169, "vecs2": 169, "v_co": 169, "vco": 169, "lambert": 169, "mardia": 169, "jupp": 169, "y_1": 169, "y_2": 169, "annulu": 169, "vice": [169, 175, 182, 193, 232, 255], "versa": [169, 175, 182, 193, 232, 255], "aj": 169, "sxyz": 169, "gohlk": 169, "cgohlk": 169, "yaw": 169, "syxz": 169, "34786452": 169, "383436184": 169, "_axes2tupl": 169, "_tuple2ax": 169, "partit": 169, "persp": 169, "m0": 169, "valueerror": [169, 179, 240, 249, 251, 261], "smallest": [169, 175, 176, 179, 182, 219], "collinear": [169, 240], "furthest": 169, "3x3": [169, 171, 175], "ru": 169, "sv": [169, 170], "mat1": 169, "mat2": 169, "matn": 169, "circumfer": 169, "otherw": 169, "psampl": 169, "frame": [169, 179, 182, 253], "a_": [169, 175], "is_hemi": 169, "pole": [169, 175], "rstudio": 169, "pub": 169, "s3": [169, 170, 182, 206], "amazonaw": 169, "27121_a22e51b47c544980bad594d5e0bb2d04": 169, "qval": [169, 175, 183], "ie": [169, 175], "gradient_strength": [169, 183], "immut": 169, "factori": [169, 244], "slice_start": 169, "atol": 169, "ste": [169, 175], "cte": [169, 175], "cigar": [169, 175], "bo_threshold": 169, "30m": 169, "10m": 169, "sq2": 169, "gt": [169, 176, 181], "03e": 169, "compens": 169, "1336": [169, 243, 273], "1349": [169, 243, 273], "21890": [169, 273], "bmag": [169, 175], "bmagmax": 169, "bmaxmag": 169, "rbval": 169, "gap": [169, 175], "regroup": 169, "log_": [169, 175], "n_bval": 169, "non_zero": 169, "ztol": 169, "asymmetri": 169, "bdelta": 169, "b_eta": 169, "porou": [169, 273], "chemistri": [169, 273], "1039": [169, 242, 273], "9781782623779": [169, 273], "ornt1": 169, "ornt2": 169, "orn1": 169, "orn2": 169, "current_ornt": 169, "new_ornt": 169, "stort": 169, "lp": [169, 173], "inferior": 169, "string_ornt": 169, "ornt": 169, "group_contiguous_b0": [169, 182, 203], "contigu": [169, 182, 203], "b0_data": 169, "bvals_to_extract": [169, 182, 204], "group_shel": [169, 182, 204], "shell_data": 169, "output_bv": 169, "output_bvec": 169, "add_edg": [169, 183], "add_nod": [169, 183], "all_path": [169, 183], "del_nod": [169, 183], "del_node_and_edg": [169, 183], "down_short": [169, 183], "shortest_path": [169, 183], "up_short": [169, 183], "wp": 169, "attr": [169, 242], "arr": [169, 171, 179], "num_bin": 169, "janeriksolem": 169, "mixin": 169, "accessor": 169, "uniformtimeseri": 169, "sampling_r": 169, "sampling_interv": 169, "lose": [169, 258], "circular": [169, 177, 242, 243], "chain": 169, "_no_reset": 169, "protect": 169, "caveat": 169, "emptor": 169, "recomput": 169, "fire": 169, "mostli": [169, 175, 179, 240, 247, 250], "afterward": [169, 174], "magicprop": 169, "__dict__": 169, "jac": [169, 175], "hessp": 169, "nfev": [169, 183], "nit": [169, 183, 249], "print_summari": [169, 183], "sklearn": [169, 171, 182, 201, 252, 259, 262], "signatur": [169, 250, 253, 261], "coef_": 169, "y_hat": 169, "n_sampl": 169, "n_featur": 169, "design_matrix": [169, 183, 256], "pipermail": 169, "027700": 169, "momentum": 169, "non_neg": [169, 175], "check_error_it": 169, "max_error_check": 169, "converge_on_ss": 169, "xh": 169, "descent": 169, "persist": [169, 242], "sse": [169, 175], "h_best": 169, "caller": 169, "print_stat": [169, 183], "prin": 169, "src": 169, "profiling_tutori": 169, "rkern": 169, "line_profil": 169, "rand": [169, 181], "1000000": [169, 176, 182, 230], "pstat": 169, "slowest": 169, "function_nam": 169, "ix": 169, "100001": 169, "200002": 169, "iz": 169, "300003": 169, "400004": 169, "wichmann": [169, 273], "hill": [169, 273], "advic": [169, 245, 263], "r_number": 169, "uniformli": 169, "1614": [169, 245, 273], "1622": [169, 245, 273], "csda": [169, 273], "019": [169, 273], "appl": [169, 279], "1982": [169, 252], "rectangularli": 169, "95e": 169, "claim": [169, 175], "30000": 169, "arithmet": [169, 182, 226], "5212632": 169, "s1": [169, 176], "s2": [169, 176], "ecuy": 169, "portabl": 169, "742": [169, 241, 245], "774": 169, "30584e": 169, "unspecifi": [169, 181], "delaunai": [169, 247, 254], "triangul": [169, 170, 181], "find_closest": [169, 183], "vertex": [169, 175, 179, 249], "____": 169, "subdivis": 169, "new_spher": 169, "remap": [169, 251], "classmethod": [169, 182], "from_spher": [169, 183], "__________": 169, "return_invers": 169, "hemi": 169, "const": 169, "charg": 169, "felt": 169, "unstabl": [169, 245], "fibonacci": [169, 253, 263], "spiral": [169, 179, 263], "init_pointset": 169, "reimplement": 169, "fmin_slsqp": 169, "number_of_edg": 169, "unit_octahedron": 169, "coord": [169, 241], "spherepointpick": 169, "fisher": 169, "lewi": 169, "embleton": [169, 175, 273], "coverag": [169, 242, 249, 251, 253, 258, 259, 273], "b1": [169, 181, 252], "max_mean_cosin": 169, "max_cosine_dist": 169, "7071067811865475": 169, "unimport": 169, "12f": 169, "707106781187": 169, "recursion_level": 169, "n2": 169, "n3": [169, 246], "perm": 169, "permut": [169, 175], "bank": 169, "n1xn2xn2": 169, "ni": [169, 240, 246, 262], "lowpass": 169, "highpass": 169, "lo": 169, "subband": 169, "synthesi": 169, "n1xn2xn3": 169, "sf1": 169, "sf2": 169, "sf3": 169, "sfi": 169, "af1": 169, "af2": 169, "af3": 169, "afi": 169, "cell": [169, 240], "byte_data": 170, "fib1": 170, "fib0": 170, "fib2": 170, "sv2": 170, "skeleton": [170, 250], "lsc": 170, "c3": 170, "symmetric642": [170, 182, 228, 236], "repulsion100": [170, 175, 182, 228, 236], "repulsion200": [170, 182, 228, 236, 237, 238], "vert": [170, 181], "720": [170, 242, 251, 261], "func_coef": 170, "func_discret": 170, "dwi2sh": 170, "maptlotlib": 170, "model_nam": 170, "unsign": [170, 175, 182, 255], "sdp_constraint": 170, "id_constraint_ord": 170, "fsrc": 170, "fdst": 170, "total_length": 170, "16384": 170, "stored_md5": 170, "md5": [170, 182, 206, 242, 248], "data_s": 170, "use_head": 170, "checksum": [170, 182, 206], "fetchererror": 170, "include_opt": [170, 182, 206], "3shell": 170, "kanakaraj": [170, 174, 182, 196, 263, 273], "2009a": [170, 274, 275], "2009c": [170, 242, 274, 275], "fonov": [170, 273, 274, 275], "1993": [170, 252], "mcconnel": 170, "neurolog": 170, "fee": 170, "herebi": 170, "equip": 170, "injuri": [170, 178, 273], "misus": [170, 242], "vladimir": [170, 273], "evan": [170, 273, 274, 275], "botteron": [170, 273, 274, 275], "almli": [170, 273, 274, 275], "mckinstri": [170, 273, 274, 275], "033": [170, 273, 274, 275], "birth": [170, 273, 274, 275], "adulthood": [170, 273, 274, 275], "s102": [170, 273, 274, 275], "s1053": [170, 273, 274, 275], "8119": [170, 273, 274, 275], "70884": [170, 273, 274, 275], "snail": [170, 274, 275], "hcp842": [170, 274, 275], "c57bl6": [170, 274, 275], "gold": [170, 274, 275], "rat": 170, "17632": 170, "fgf86jdfg6": 170, "small_101d": [170, 177], "pittsburgh": 170, "competit": 170, "gqi_vector": [170, 250], "small_25": 170, "10x8x2": 170, "test_piesno": 170, "cb_2": 170, "wild": 170, "bruker": 170, "80x160x5": 170, "110x110x500\u03bcm": 170, "eddi": [170, 244, 262, 274, 275], "drawn": [170, 181], "subject1_test": 170, "subject1_retest": 170, "subject2_test": 170, "subject2_retest": 170, "scil": [170, 245, 274, 275], "taiwan": [170, 274, 275], "ntu": [170, 274, 275], "with_raw": 170, "meta": 170, "uw": 170, "subj_2": 170, "exp_bundles_map": 170, "dipy_hom": [170, 242], "renauld": [170, 260, 262, 273], "micha": [170, 273], "\u00eb": [170, 273], "bernier": [170, 273], "Their": [170, 271, 273], "eeg": [170, 246, 273], "0156436": [170, 273], "bundles_list": 170, "ref_anat": 170, "file1": 170, "file2": 170, "arraysequ": [170, 173, 179, 242, 243, 261], "dataset_descript": [170, 262], "json": [170, 182, 234], "bidsvers": 170, "dump": [170, 261], "bid": [170, 262], "hcp_bucket": [170, 182, 206], "profile_nam": [170, 182, 206], "hcp_1200": [170, 182, 206], "aws_access_key_id": 170, "aws_secret_access_kei": 170, "item": [170, 173, 179, 181, 259], "bucket": [170, 182, 206], "aw": [170, 182, 206], "grab": [170, 182, 206, 262], "credenti": [170, 182, 206], "xxxxxxxxxxxxxxxx": 170, "20to": 170, "20get": 170, "20access": 170, "20the": 170, "20hcp": 170, "20openaccess": 170, "20amazon": 170, "20s3": 170, "20bucket": 170, "krzysztof": [170, 273], "gorgolewski": [170, 245, 273], "tibor": [170, 273], "auer": [170, 273], "calhoun": [170, 273], "samir": [170, 273], "da": [170, 240, 259, 273], "eugen": [170, 273], "duff": [170, 273], "satrajit": [170, 273], "tristan": [170, 273], "glatard": [170, 273], "handwerk": [170, 273], "hank": [170, 273], "keator": [170, 273], "xiangrui": [170, 273], "zachari": [170, 273], "maumet": [170, 273], "nolan": [170, 273], "nichol": [170, 273], "pellman": [170, 273], "baptist": [170, 273], "polin": [170, 273], "gunnar": [170, 273], "schaefer": [170, 273], "vanessa": [170, 273], "sochat": [170, 273], "triplett": [170, 273], "jessica": [170, 178, 273], "varoquaux": [170, 273], "poldrack": [170, 273], "160044": [170, 273], "ndarek918ec2": [170, 182, 206], "pyafq": [170, 182, 206, 260], "ima": [171, 179, 271, 273], "fimau": 171, "fimao": 171, "unfilt": 171, "5x5": 171, "fima": 171, "num_sampl": 171, "spr": 171, "plu": [171, 175], "patch_siz": [171, 260], "pca_method": [171, 182, 198, 199], "eig": [171, 182, 198, 199], "out_dtyp": 171, "suppress_warn": 171, "svd": [171, 182, 198, 199, 242, 243], "occasion": [171, 182, 198, 199], "tau_": [171, 182, 198], "daan": [171, 175, 271, 273], "christiaen": [171, 175, 271, 273], "aron": [171, 273], "patch_radius_sigma": 171, "descoteaux2008a": 171, "itermax": 171, "ep": [171, 175, 179], "realis": 171, "fmri": 171, "cord": 171, "floor": [171, 273], "disable_background_mask": 171, "ok": 171, "oversmooth": 171, "un": [171, 244, 249], "inaccuraci": 171, "data_dict": 171, "b0_idx": 171, "dwi_idx": 171, "tmp_dir": [171, 178], "data_nam": [171, 182, 206], "data_dtyp": 171, "data_shap": [171, 181, 183], "data_b0": 171, "data_dwi": 171, "regressormixin": [171, 182, 201], "_fit_denoising_model": 171, "lasso": [171, 182, 201], "sklearnlinearsolv": [171, 182, 183, 201], "scikit": [171, 176, 182, 201, 276], "linear_model": [171, 182, 201, 252], "linearregress": [171, 182, 201], "ang_thr": [172, 173], "qa_thr": 172, "total_weight": [172, 173], "generate_streamlin": [172, 259], "get_direct": 172, "sphere_ev": 172, "xtol": [172, 175], "finder": [172, 247], "gfa_thr": 172, "sh_basis_typ": 172, "legaci": [172, 175, 179, 243, 244, 251, 253, 259, 261, 262, 263, 271], "tournier2007": 172, "descoteaux2007": 172, "tempfil": [172, 173, 260], "tempdir": [172, 249], "subprocess": [172, 175, 182, 207, 208, 210, 211, 213, 214, 217, 218, 219, 220], "cpu_count": [172, 175, 182, 207, 208, 210, 211, 217, 218], "fibernavig": [172, 173, 175, 242], "pmf_gen": [172, 253, 254], "is_symmetr": 172, "peaks_arr": 172, "hdfgroup": 173, "intro": [173, 245], "read_track": [173, 183], "read_tracksi": [173, 183], "write_track": [173, 183], "as_ndarrai": 173, "arrayproxi": 173, "return_coord": 173, "aff2axcod": 173, "vox_siz": 173, "hdr": 173, "peaksandmetr": [173, 181, 183, 242], "usedipi": 173, "expireddeprecationerror": [173, 175], "fname_shm": 173, "fname_dir": 173, "fname_valu": 173, "fname_indic": 173, "fname_gfa": 173, "reshape_dir": 173, "fname_peaks_dir": 173, "peaks_dir": [173, 181, 182, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 229], "fname_peaks_valu": 173, "fname_peaks_indic": 173, "peaks_indic": [173, 182, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 229], "fname_spher": 173, "fname_b": 173, "fname_qa": 173, "pam_fil": [173, 182, 229, 237, 238], "generate_peaks_indic": 173, "mkstemp": 173, "attach": 173, "fh": 173, "neat": 173, "enum": [173, 263], "dtype_dict": [173, 183], "sft_1": 173, "sft_2": 173, "verif": 173, "compute_bounding_box": [173, 183], "from_sft": [173, 183], "get_data_per_point_kei": [173, 183], "get_data_per_streamline_kei": [173, 183], "get_streamlines_copi": [173, 183], "epsilon": [173, 255], "indices_to_remov": 173, "indices_to_keep": 173, "to_cent": [173, 183], "to_origin": [173, 183], "target_origin": 173, "to_spac": [173, 183], "target_spac": 173, "trk_header_check": 173, "ttype": 173, "loader": 173, "saver": 173, "return_meta": 173, "gifti": [173, 255], "image_data": 173, "intent": 173, "img_orig": 173, "compliant": 173, "incom": 173, "nimh": 173, "nifti1field": 173, "nifti1fields_pag": 173, "ext": 173, "trxfile": [173, 182, 192], "reference_1": 173, "reference_2": 173, "tractogram_typ": 173, "datafram": [173, 178], "panda": [173, 276], "rootnam": 173, "helper": [173, 174, 175, 179], "file_nam": [173, 181, 183], "ply": 173, "stl": 173, "xml": 173, "vtkpolydata": 173, "color_array_nam": 173, "to_lp": 173, "mitkdiffus": 173, "crucial": 174, "advers": 174, "layer": [174, 175, 176, 182, 202, 255, 273], "speech": 174, "relu": 174, "vinci": [174, 273], "booher": [174, 273], "bradlei": [174, 273], "caron": [174, 273], "qiut": [174, 273], "0274396": [174, 273], "sig_length": 174, "mean_squared_error": 174, "loss_weight": 174, "batch_siz": 174, "return_dict": 174, "silent": 174, "max_queue_s": 174, "queue": [174, 255], "worker": [174, 175], "use_multiprocess": 174, "validation_split": 174, "validation_data": 174, "initial_epoch": 174, "steps_per_epoch": 174, "validation_step": 174, "validation_batch_s": 174, "validation_freq": 174, "kera": 174, "x_val": 174, "y_val": 174, "Its": [174, 175, 177, 273], "load_weight": [174, 183], "filepath": [174, 277], "save_weight": [174, 183], "textual": 174, "nonetyp": 174, "train_test_split": [174, 183], "test_siz": 174, "train_siz": 174, "random_st": 174, "stratifi": 174, "complement": 174, "glossari": 174, "x_train": 174, "x_test": 174, "y_train": 174, "y_test": 174, "out_channel": 174, "kernel_s": 174, "inhomogen": 174, "load_resampl": [174, 183], "praitayini": [174, 182, 196, 263, 273], "tianyuan": [174, 182, 196, 273], "yao": [174, 182, 196, 273], "cai": [174, 182, 196, 273], "hin": [174, 182, 196, 273], "newlin": [174, 182, 196, 273], "chenyu": [174, 182, 196, 273], "pechman": [174, 182, 196, 273], "archer": [174, 182, 196, 273], "hohman": [174, 182, 196, 273], "angela": [174, 182, 196, 273], "jefferson": [174, 182, 196, 273], "lori": [174, 182, 196, 273], "beason": [174, 182, 196, 273], "resnick": [174, 182, 196, 273], "moyer": [174, 182, 196, 273], "adni": [174, 182, 196, 273], "biocard": [174, 182, 196, 273], "n4itk": [174, 182, 196, 273], "024": [174, 182, 196, 202, 273], "09655": [174, 182, 196, 273], "load_model_weight": [174, 183], "weights_path": 174, "subj": 174, "img_affin": 174, "voxsiz": 174, "wrapper": [174, 175, 247], "assembl": 174, "final_correct": 174, "input_shap": 174, "drop_r": 174, "n_layer": 174, "layer_typ": 174, "crf": [174, 182, 202, 273], "recurr": 174, "supplementari": 174, "dice": 174, "s43856": [174, 182, 202, 273], "00452": [174, 182, 202, 273], "return_affin": 174, "return_prob": 174, "finalize_mask": [174, 176, 182, 227], "hole": [174, 176, 182, 227], "island": [174, 176, 182, 227], "minor": [150, 174, 175, 176, 182, 227, 242, 245, 246, 247, 248, 249, 250, 252, 255, 256, 257], "pred_output": 174, "input_data": 174, "model_scal": 174, "emploi": 174, "primat": 174, "histo_resdnn_tf_weight": 174, "chunk_siz": 174, "nonzero": [174, 176], "pred_sh_coef": 174, "num_hidden": 174, "act_hidden": 174, "dropout": 174, "num_out": 174, "act_out": 174, "softmax": 174, "sparse_categorical_crossentropi": 174, "batchsiz": 174, "testsiz": 174, "outputs": 174, "synthes": [174, 273], "alon": 174, "allen": [174, 273], "andrea": [174, 273], "shafer": [174, 273], "baxter": [174, 273], "intellig": [174, 273], "008": [174, 273], "seth": [174, 273], "tonia": [174, 273], "rex": [174, 273], "lauri": [174, 273], "neil": [174, 175, 273], "woodward": [174, 273], "zald": [174, 273], "0236418": [174, 273], "n_in": 174, "n_out": 174, "__call__": 174, "decoder_block": [174, 183], "encoder_block": [174, 183], "in_channel": 174, "use_cuda": [174, 182, 196, 254], "source_dim": 174, "dest_dim": 174, "passed_channel": 174, "raw_input_2": 174, "raw_input_3": 174, "raw_input_4": 174, "raw_input_5": 174, "pth": 174, "sh_size": 174, "histo_resdnn_torch_weight": 174, "min_v": 174, "max_v": 174, "new_min": 174, "new_max": 174, "norm_min": 174, "norm_max": 174, "considered_point": 174, "init_shap": 174, "voxelspac": 174, "mid_shap": 174, "offset_arrai": 174, "crop_v": 174, "pad_v": 174, "image2": 174, "target_shap": 174, "nano": [175, 182, 207, 217, 218, 230, 273], "macro": [175, 182, 207, 217, 218, 273], "1398": [175, 182, 207, 217, 218, 244, 273], "1401": [175, 182, 207, 217, 218, 252, 273], "5193327": [175, 182, 207, 217, 218, 273], "elain": [175, 177, 271, 273], "angelino": [175, 177, 271, 273], "shaun": [175, 177, 271, 273], "fitzgibbon": [175, 177, 271, 273], "510": [175, 177, 249, 271, 273], "21277": [175, 177, 271, 273], "638": [175, 240, 273], "funk": [175, 273], "radon": [175, 273], "1301": [175, 244, 273], "1315": [175, 243, 273], "070": [175, 273], "bx": 175, "plug": 175, "rewritten": 175, "sh_coef": 175, "f0": 175, "wider": 175, "kappa1_lob": [175, 183], "concentr": 175, "k1": 175, "kappa2_lob": [175, 183], "kappa_total_lob": [175, 183], "k_": 175, "k_1": 175, "k_2": 175, "n_direct": 175, "kappa1": 175, "kappa2": 175, "k_total": [175, 183], "odf_tot": 175, "bingham_param": 175, "watson": 175, "arctan": [175, 182, 226], "bmetric": 175, "bfd": 175, "wmetric": 175, "min_sep_angl": 175, "rel_th": 175, "ndir": 175, "mymodel": 175, "mymodelfit": 175, "cache_get": [175, 183], "odf_basis_matrix": 175, "_compute_basis_matrix": 175, "cache_set": [175, 183], "cache_clear": [175, 183], "compute_expensive_matrix": 175, "expensive_matrix": 175, "cod": 175, "coefficient_of_determin": 175, "model_arg": 175, "model_kwarg": 175, "divis": [175, 242, 245, 249], "dwi_respons": 175, "reg_spher": 175, "pred_sig": 175, "r2_term": 175, "frt": 175, "universit": [175, 177, 273], "valbonn": [175, 177, 273], "theses": [175, 177, 273], "hal": [175, 177, 273], "tel": [175, 177, 273], "00457458": [175, 177, 273], "dwsignal": 175, "b_reg": 175, "r_rh": 175, "fodf_sh": 175, "_num_it": 175, "minimis": 175, "f_n": 175, "xf_n": 175, "h_": 175, "b_": [175, 267, 268], "reg": 175, "hf_": 175, "rightarrow": 175, "2x": 175, "th_": 175, "tx": 175, "regularis": 175, "superresolut": 175, "mu": 175, "qf_n": 175, "choleski": [175, 250], "l_y": 175, "tf_n": 175, "rankn": 175, "pf_0": 175, "l_": 175, "h_n": 175, "f_": 175, "odf_sh": [175, 183], "num_it": 175, "2004424": [175, 182, 219, 273], "odfs_sh": 175, "plai": 175, "odfdeconv": [175, 249], "roi_cent": [175, 182, 208, 219], "20x20x20": 175, "gadian": [175, 273], "1176": [175, 242, 249, 273], "1185": [175, 242, 273], "037": [175, 273], "versu": 175, "cti_param": 175, "fifteen": 175, "twenti": 175, "aniso": 175, "s0_hat": [175, 183], "columnwis": 175, "d_c": 175, "overlin": [175, 271], "excess": 175, "psi": 175, "2d_": 175, "2222": [175, 256], "3333": [175, 253], "2w_": 175, "1122": [175, 242], "1133": 175, "2233": [175, 256], "ccti": 175, "columnar": 175, "min_diffus": [175, 247], "inverse_design_matrix": 175, "return_s0_hat": 175, "iterative_fit": [175, 183], "data_thr": 175, "leverag": [175, 262], "multi_fit": [175, 183], "dki_param": 175, "model_s0": 175, "42857142857142855": 175, "e1": [175, 177], "analogi": 175, "akc": [175, 183], "adc": [175, 183, 248], "equiv": 175, "_f": 175, "frobeniu": 175, "kmax": [175, 183], "gtol": 175, "omega_": 175, "f_1": 175, "f_2": 175, "r_f": 175, "r_d": 175, "carlson": [175, 273], "ronald": [175, 273], "hardin": [175, 273], "sloan": [175, 273], "mclaren": [175, 273], "snub": [175, 273], "1996": [175, 182, 212, 255, 258, 273], "bf02711518": [175, 273], "mathnbf": 175, "n_j": 175, "n_l": 175, "tr": 175, "omega": 175, "bot": [175, 240, 244, 245, 249, 251, 262, 263], "g_1": 175, "g_2": 175, "escal": 175, "rkt": 175, "orthonorm": [175, 271], "errtol": 175, "incomplet": [175, 240, 242, 243, 244, 245, 246, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263], "infti": [175, 271], "billi": [175, 273], "1995": [175, 177, 252, 273], "bf02198293": [175, 273], "adv": 175, "biologicali": 175, "pluasibl": 175, "advc": 175, "eingenvalu": 175, "max_dir": 175, "return_lower_triangular": 175, "return_leverag": 175, "sum_i": 175, "w_i": 175, "r_i": 175, "sunaert": [175, 273], "pitfal": [175, 273], "positivedefiniteleastsquar": [175, 183], "wrot": 175, "cheung": [175, 273], "liqun": [175, 273], "qi": [175, 273], "ed": [175, 273], "indi": 175, "indj": 175, "indk": 175, "indl": 175, "wre": 175, "ind_i": [175, 177], "ind_j": [175, 177], "ind_k": [175, 177], "ind_l": [175, 177], "k_element": 175, "eigval": 175, "eigvec": 175, "awf_onli": 175, "optiom": 175, "axonal_diffus": [175, 183], "hindered_ad": [175, 183], "hindered_ev": [175, 183], "hindered_rd": [175, 183], "restricted_ev": [175, 183], "rde": 175, "adc_": 175, "edt": 175, "idt": 175, "r_start": [175, 182, 210, 211], "r_end": [175, 182, 210, 211], "r_step": [175, 182, 210, 211], "dr_x": 175, "dr_y": 175, "dr_z": 175, "psi_": 175, "dr": 175, "2002": [175, 252, 273], "1721": [175, 251, 273], "8348": [175, 273], "qspace": 175, "qgrid": 175, "qtabl": 175, "premultipli": 175, "rradiu": 175, "interp_coord": 175, "diffusionspectrum": 175, "new_data": 175, "new_gtab": 175, "estimated_snr": 175, "qgrid_sampl": 175, "siz_x": 175, "siz_i": 175, "siz_z": 175, "psf": 175, "ifft": 175, "truncat": [175, 181, 182, 210, 211, 271], "prop": 175, "numit": 175, "acc_factor": 175, "bigg": [175, 273], "1766": [175, 251, 273], "1775": [175, 251, 273], "ao": [175, 273], "001766": [175, 273], "dti_param": 175, "sharon": [175, 273], "pele": [175, 273], "kon": [175, 177, 273], "gudbjartsson": [175, 177, 273], "ron": [175, 273], "kikini": [175, 273], "ferenc": [175, 273], "jolesz": [175, 273], "vancouv": [175, 273], "dodf": 175, "scratch": [175, 242, 251], "chunk": [175, 176, 279], "consumpt": 175, "infin": 175, "lambda_i": [175, 267, 268], "denomin": 175, "wherea": [175, 182], "appendix": 175, "phillipp": [175, 273], "batchelor": [175, 273], "maher": [175, 273], "moakher": [175, 273], "atkinson": [175, 273], "rigor": [175, 273], "calculu": [175, 273], "20334": [175, 273], "virginia": [175, 273], "newcomb": [175, 273], "1103": [175, 242, 273], "1115": [175, 242, 273], "agatha": [175, 273], "lepor": [175, 273], "marina": [175, 273], "barysheva": [175, 273], "yi": [175, 273], "chou": [175, 273], "brun": [175, 273], "madsen": [175, 273], "kati": [175, 273], "mcmahon": [175, 273], "greig": [175, 273], "zubicarai": [175, 273], "meredith": [175, 273], "margaret": [175, 273], "wright": [175, 242, 273], "paul": [175, 262, 273], "thompson": [175, 273], "monozygot": [175, 273], "dizygot": [175, 273], "twin": [175, 273], "943": [175, 242, 273], "946": [175, 242, 273], "4541153": [175, 273], "vincent": [175, 273], "arsigni": [175, 273], "fillard": [175, 273], "20965": [175, 273], "descend": 175, "q_form": 175, "a_hat": 175, "enni": [175, 273], "gordon": [175, 273], "kindlmann": [175, 273], "20741": [175, 273], "a_squiggl": 175, "widetild": 175, "mo": 175, "isotropi": 175, "fit_tensor": [175, 240, 242], "counteract": 175, "heteroscedast": 175, "531": [175, 182, 212, 249, 273], "541": [175, 182, 212, 249, 273], "fail_is_nan": 175, "init_param": 175, "npar": 175, "jacobian": [175, 262], "nlls_param": 175, "geman": 175, "mcclure": 175, "cauchi": 175, "5267": [175, 182, 209, 212], "background_nois": [175, 182, 209, 212], "4826": 175, "mad": 175, "restore_param": 175, "walker": [175, 273], "1654": [175, 245, 273], "1663": [175, 245, 273], "24173": [175, 273], "fit_typ": 175, "nll": [175, 182, 212, 252, 253, 262, 263], "weights_method_wl": 175, "weights_method_nl": 175, "sixth": 175, "dummi": 175, "1994a": 175, "hermitian": 175, "bxx": 175, "byi": 175, "bzz": 175, "bxy": 175, "bxz": 175, "byz": 175, "odf_vertic": [175, 249], "lambda_lb": [175, 182, 213], "lambda_csd": [175, 182, 213], "clip_neg": 175, "b_uniqu": 175, "data_norm": 175, "rho": [175, 267, 269], "lb_matrix": 175, "fwdti_param": 175, "diso": [175, 253], "sig": 175, "mdreg": 175, "0027": 175, "min_sign": [175, 182, 207, 217, 218, 249, 251], "piter": 175, "md_reg": 175, "inter": 175, "fw_param": 175, "f_transform": 175, "ft": 175, "arcsin": [175, 182, 226], "insur": [175, 242], "gmm": 175, "tensor_el": 175, "cholesky_el": 175, "r0": 175, "r1": 175, "r3": 175, "r4": 175, "r5": 175, "carew": [175, 273], "meyerand": [175, 273], "anomal": [175, 273], "936": [175, 260, 273], "20832": [175, 273], "max_qa": 175, "nqa": 175, "equatori": 175, "zone": 175, "conjug": [175, 182, 226, 271], "cone": 175, "x_scale": 175, "ftol": 175, "estimate_linear_fit": [175, 183], "split_b": 175, "intercept": [175, 176], "ivim_param": 175, "ivim_sign": 175, "cvx_fit": [175, 183], "f1": 175, "f2": 175, "ivim_mix_cost_on": [175, 183], "stoc_search_cost": [175, 183], "moor": 175, "penros": 175, "thorough": 175, "nlls_cost": [175, 183], "x_f": 175, "stationari": 175, "exp_phi1": 175, "x_and_f_to_x_f": [175, 183], "x_f_to_x_and_f": [175, 183], "trust": 175, "selector": [175, 243], "eigenvalue_threshold": 175, "dti_scale_estim": 175, "static_diffus": 175, "0007": [175, 177], "ozarslan2013": 175, "ozarslan2008": 175, "merlet2013": 175, "fick2016b": 175, "cheng2012": 175, "hosseinbor2013": 175, "craven1979": 175, "delahaije2020": 175, "alexandru": [175, 273], "avram": [175, 273], "joell": [175, 273], "sarll": [175, 273], "barnett": [175, 273], "cibu": [175, 273], "irfanoglu": [175, 273], "hutchinson": [175, 273], "007": [175, 273], "mapmri_coef": 175, "lopt": 175, "errorcod": 175, "mapmri_r": [175, 183], "mapmri_coeff": [175, 183], "mapmri_mu": [175, 183], "fitted_sign": [175, 183], "c13": 175, "ensembl": [175, 177, 273], "gaussiann": 175, "act": [175, 242, 250], "c8": 175, "r_point": 175, "writeabl": [175, 249], "recalcul": 175, "qvals_or_gtab": 175, "qvalu": [175, 249], "c14": 175, "44a": 175, "c11": 175, "mu_squar": 175, "u0": 175, "index_matrix": 175, "q_gradient": 175, "rgrad": 175, "binomi": 175, "odf_mat": 175, "n_vertic": 175, "n_mapmri_coef": 175, "odf_sh_mat": 175, "n_sh_coef": 175, "c7": 175, "n_coef": 175, "ind_mat": 175, "gridsiz": 175, "radius_max": 175, "tab": [175, 183, 247, 249, 253, 261, 263], "phi_n": 175, "phi_m": 175, "submatric": 175, "s_mat": 175, "t_mat": 175, "u_mat": 175, "weights_arrai": 175, "ncoef": 175, "n_of_weight": 175, "gcv_startpoint": 175, "startpoint": [175, 183], "optimal_lambda": 175, "coeff": [175, 262], "setter": 175, "expos": [175, 180], "iso_comp": 175, "qp": 175, "osqp": 175, "primal": 175, "multishel": [175, 182, 191, 259, 273], "msdki_param": 175, "msignal": 175, "nub": 175, "fit_arrai": 175, "ctype": 175, "buffer": [175, 179, 182, 237, 238, 242, 253], "layout": 175, "imaginari": [175, 177, 182, 226, 271], "items": 175, "byte": [175, 183, 247, 251, 262], "nbyte": [175, 183], "psi_i": 175, "bracket": 175, "adad": [175, 273], "wald": [175, 273], "1208": [175, 242, 273], "jmri": [175, 273], "22535": [175, 273], "ndrrai": 175, "constrain_q0": 175, "10000000000": 175, "textbf": 175, "sum_k": 175, "ik": 175, "phi_i": 175, "t_k": 175, "c_i": 175, "q0": 175, "uniti": 175, "sebastien": [175, 273], "ourselin": [175, 273], "cardoso": [175, 273], "qtdmri_coef": 175, "ut": 175, "tau_scal": 175, "cvxpy_solution_optim": 175, "rt_point": 175, "qtdmri_to_mapmri_coef": [175, 183], "convers": [175, 182, 193, 232, 251, 253, 262, 263, 272], "depen": 175, "sparsity_ab": [175, 183], "sparsity_dens": [175, 183], "part1_ut_precomp": 175, "part23_ut_precomp": 175, "part4_ut_precomp": 175, "part1_uq_iso_precomp": 175, "b2": [175, 181], "c4": 175, "0005": 175, "grid_size_r": 175, "max_radius_r": 175, "grid_size_tau": 175, "min_radius_tau": 175, "max_radius_tau": 175, "weight_arrai": 175, "big_delta_start": 175, "big_delta_end": 175, "g_start": 175, "g_end": 175, "bval_isolin": 175, "7500": 175, "14000": 175, "alpha_shad": 175, "shade": 175, "c_": 175, "d_sq": [175, 183], "mean_d_sq": [175, 183], "themselv": 175, "bmatrix": 175, "bmat": 175, "f_csf": [175, 183], "f_gm": [175, 183], "fit_vec": 175, "s_i": 175, "f_j": 175, "b_i": 175, "_j": 175, "b_id_": 175, "v_i": 175, "d_j": 175, "hf": 175, "modern": 175, "constantinides1997": 175, "prod_": 175, "i_": 175, "i_n": 175, "t_n": 175, "walter": [175, 273], "gautschi": [175, 273], "josef": [175, 273], "slavik": [175, 273], "1978": [175, 252, 273], "1090": [175, 242, 273], "s0025": [175, 273], "5718": [175, 273], "0470267": [175, 273], "discontinu": 175, "global_fit": 175, "elsewher": [175, 253], "alpha_": 175, "tleft": 175, "circfrac": 175, "circtextbf": 175, "ttextbf": 175, "divleft": 175, "triangledown": 175, "lverttriangledown": 175, "rvert": 175, "biggrrvert_": 175, "discrep": [175, 242, 249, 256], "antonin": [175, 273], "chambol": [175, 273], "1023": [175, 242, 273], "jmiv": [175, 273], "0000011325": [175, 273], "36760": [175, 273], "boil": 175, "elasticnet": [175, 182, 220], "parallel_backend": 175, "parallelbackendbas": 175, "loki": 175, "bottleneck": 175, "gil": 175, "dsi_voxel": [175, 183], "rokem2014": 175, "tensor_matrix": 175, "behrens2007": 175, "stick_matrix": 175, "sampling_matrix": [175, 183], "assume_norm": [175, 182, 207, 217, 218], "qball": [175, 182, 207, 217, 218, 247], "shm_coef": 175, "signal_object": 175, "where_dwi": 175, "rh": 175, "r_sh": 175, "dirac": [175, 260], "colatitudin": 175, "use_scipi": 175, "y_mn": 175, "y_l": [175, 271], "sph_harm": [175, 240], "onward": 175, "interchang": 175, "agre": [175, 271], "0_l": 175, "real_sh": 175, "raffelt": [175, 271, 273], "rami": [175, 271, 273], "tabbara": [175, 271, 273], "maximilian": [175, 271, 273], "pietsch": [175, 271, 273], "chun": [175, 271, 273], "hung": [175, 271, 273], "116137": [175, 271, 273], "phase_factor": 175, "m_list": 175, "l_list": 175, "kx1": 175, "lazi": [175, 253], "where_b0": 175, "hd": 175, "lcr": 175, "hami": [175, 273], "haroon": [175, 273], "morri": [175, 273], "parker": [175, 273], "535": [175, 249, 273], "550": [175, 250, 273], "2006528": [175, 273], "21032": [175, 273], "return_inv": 175, "n_coeff": 175, "rarrow": 175, "2n": 175, "3l": 175, "8n": 175, "norm_factor": 175, "rectifi": 175, "log_ap": 175, "ixjxkxc": 175, "ixjxkx6": 175, "full_sh_coeff": 175, "out_sh_coeff": 175, "mrtrixbasi": 175, "mrtrixdipybas": 175, "2959": 175, "025330295910584444": [175, 177], "constrain_e0": 175, "positive_constraint": 175, "amongst": 175, "yogesh": [175, 273], "rathi": [175, 273], "oleg": [175, 273], "michailovich": [175, 273], "kawin": [175, 273], "setsompop": [175, 273], "gabor": [175, 182, 200, 273], "fichting": [175, 182, 200, 273], "martel": [175, 273], "terri": [175, 273], "assist": [175, 182, 200, 273], "intervent": [175, 182, 200, 273], "berlin": [175, 182, 200, 273], "heidelberg": [175, 182, 200, 273], "shore_coef": 175, "shore_coeff": [175, 183], "pdf_grid": [175, 183], "biggl": 175, "dfrac": 175, "biggr": 175, "rtab": 175, "sphere_vertic": 175, "bxxxx": 175, "byyyi": 175, "bzzzz": 175, "bxxxy": 175, "bxxxz": 175, "bxyyi": 175, "byyyz": 175, "bxzzz": 175, "byzzz": 175, "bxxyi": 175, "bxxzz": 175, "byyzz": 175, "bxxyz": 175, "bxyyz": 175, "bxyzz": 175, "blogs0": 175, "from_format": [175, 182, 194], "to_format": [175, 182, 194], "dwi2tensor": 175, "antsx": 175, "fmrib": [175, 259], "ox": 175, "fslwiki": 175, "fdt": 175, "userguid": 175, "log_residu": 175, "cutoff": 175, "cut_off": 175, "hat_factor": 175, "quinten": [175, 273], "collier": [175, 273], "dekker": [175, 273], "irll": [175, 273], "2174": [175, 255, 273], "2184": [175, 273], "25351": [175, 273], "total_idx": 175, "last_robust": 175, "m_est": 175, "outlier_condition_func": 175, "inlier": 175, "standard_devi": 175, "is_an_outli": 175, "cluster_map": 176, "evaluate_result": [176, 183], "slr_select": 176, "prune": [176, 182, 230, 273], "ba_valu": 176, "bmd_valu": 176, "slr_metric": [176, 182, 230], "slr_x0": 176, "slr_bound": 176, "slr_method": 176, "bundlemindistancemetr": [176, 183], "recognized_transf": 176, "recognized_label": 176, "lt": 176, "dtracks0": 176, "dtracks1": 176, "ba": 176, "recognized_bundl": 176, "expert_bundl": 176, "select_randomli": 176, "500000": 176, "refdata": [176, 183], "id_datum": 176, "add_clust": [176, 183], "clusters_s": [176, 183], "get_large_clust": [176, 183], "get_small_clust": [176, 183], "max_siz": 176, "remove_clust": [176, 183], "mdf_12point": 176, "max_nb_clust": 176, "nk": 176, "farther": 176, "exceed": 176, "tradeoff": [176, 179], "million": [176, 273], "quickbundlex": 176, "is_leaf": [176, 183], "return_indic": [176, 183], "child": [176, 182], "get_clust": [176, 183], "iter_preord": [176, 183], "traverse_postord": [176, 183], "wanted_level": 176, "nb_mpt": 176, "bin_siz": 176, "bidirect": 176, "use_neg": 176, "nb_sline": 176, "nb_slines_ref": 176, "coo_arrai": 176, "non_zero_id": 176, "nb_non_empty_row": 176, "sline": 176, "nearest_id": 176, "nearest_dist": 176, "nb_non_empty_col": 176, "masked_vol": 176, "npmin": 176, "npmax": 176, "input_volum": [176, 182, 227], "bet": 176, "maskedvolum": 176, "tensor_fit": 176, "r_min": 176, "r_max": 176, "g_min": 176, "g_max": 176, "b_min": 176, "b_max": 176, "coars": 176, "new_cc_mask": 176, "manhattan": 176, "rate": 176, "upperbound": 176, "upper_bound": 176, "save_histori": 176, "posteriori": 176, "earli": [176, 182, 191], "mechan": [176, 182, 191], "s0_map": 176, "low_signal_threshold": [176, 182, 191], "slope": 176, "binary_img": 176, "slice_wis": 176, "largest_img": 176, "rice": 177, "rayleigh": 177, "patz": [177, 273], "910": [177, 241, 273], "914": [177, 241, 273], "1910340618": [177, 273], "signal_w_nois": 177, "dy": 177, "dz": 177, "0004": 177, "datashap": 177, "orbit": 177, "thick": [177, 181], "unweight": 177, "remaind": 177, "johansen": [177, 273], "saad": [177, 273], "jbabdi": [177, 273], "rushworth": [177, 273], "woolrich": [177, 273], "gain": [177, 273], "018": [177, 273], "cylind": 177, "soderman": 177, "oll": [177, 273], "derman": [177, 273], "bengt": [177, 273], "onsson": [177, 273], "1006": [177, 182, 212, 242, 273], "jmra": [177, 273], "0014": [177, 273], "raisa": [177, 273], "freidlin": [177, 273], "gustavo": [177, 273], "rohd": [177, 273], "965": [177, 242, 273], "20274": [177, 273], "ten": 177, "e0": [177, 249, 250], "multicompartment": 177, "imperm": 177, "neglect": [177, 179], "bvals_2": 177, "bvecs_2": 177, "d_comp": 177, "odf_vert": 177, "mf": 177, "pdf_point": 177, "pname": 178, "bname": 178, "group_id": [178, 182], "dir_nam": 178, "hd5": 178, "10001": [178, 182], "target_bundl": 178, "return_mahalnobi": 178, "mahalanobi": 178, "return_mahalanobi": 178, "n_streamlin": [178, 179], "profile_stat": 178, "orient_bi": 178, "weights_kwarg": 178, "voxel_to_rasmm": [178, 179], "necessarili": 178, "biject": 178, "fov": 178, "islam": [178, 273], "zaydan": [178, 273], "suski": [178, 273], "lacomi": [178, 273], "maroon": [178, 273], "barrio": [178, 273], "martinez": [178, 273], "neuron": [178, 273], "116131": [178, 273], "matrixa_nam": 178, "matrixa_dtyp": 178, "matrixa_shap": 178, "sketch_row": 178, "matrixc_fil": 178, "matrixc": 178, "phrase": 179, "tracks1": 179, "tracks2": 179, "nm": 179, "m1": 179, "track2track": 179, "mam_dist": 179, "tl": 179, "indices2": 179, "speedi": 179, "calc_sign": [179, 183], "reconstmodel": [179, 183], "bunch": [179, 183, 263], "to_fit": 179, "weighted_sign": 179, "relative_sign": 179, "mean_sig": 179, "vox_data": 179, "reconstfit": [179, 183], "interior": 179, "mitig": 179, "n_node": 179, "unique_idx": 179, "v2f": 179, "v2fn": 179, "direction_gett": 179, "minlen": [179, 182, 237], "fixedstep": 179, "save_se": [179, 182, 237, 238, 256], "unidirect": 179, "randomize_forward_direct": 179, "initial_direct": [179, 251], "pft_max_trial": [179, 182, 238], "triangles_mask": 179, "triangles_weight": 179, "rand_gen": 179, "triangles_indic": 179, "trilinear_coord": 179, "triangles_idx": 179, "trilin_coord": 179, "trilinear_coordin": 179, "vts_valu": 179, "vertices_norm": 179, "vertices_color": 179, "triangles_valu": 179, "expected_len": 179, "len_along": 179, "cumsum": 179, "frenet": 179, "serret": 179, "mathwork": 179, "matlabcentr": 179, "fileexchang": 179, "11169": 179, "parametris": 179, "qquad": 179, "tangent": [179, 182, 226], "binorm": 179, "kappa": 179, "torsion": 179, "helix": 179, "tm": 179, "ic": 179, "longest": [179, 182], "longest_or_indic": 179, "tf": [179, 183], "sph_cent": 179, "sph_radiu": 179, "paulbourk": 179, "circlespher": 179, "cpp": 179, "xyzn": 179, "cookbook": 179, "netlib": 179, "fitpack": 179, "dierckx": 179, "datapoint": 179, "knot": 179, "storag": 179, "splprep": 179, "splev": 179, "ascend": 179, "travel": 179, "va": 179, "51010101": 179, "09883545": 179, "new_streamlin": 179, "inv_shift": 179, "deform_field": 179, "stream_to_current_grid": 179, "current_grid_to_world": 179, "stream_to_ref_grid": 179, "ref_grid_to_world": 179, "in_plac": 179, "selected_streamlin": 179, "roi1": 179, "roi2": 179, "n_roi": 179, "either_end": 179, "both_end": 179, "mask1": 179, "mask2": 179, "max_mdf": 179, "overrid": [179, 242, 255], "subsamplen": 179, "degrad": 179, "5mm": 179, "as_gener": 179, "ndarrrai": 179, "seed_posit": 179, "seed_direct": 179, "seed_buffer_fract": [179, 182, 237, 238], "min_len": 179, "max_len": [36, 179], "shcoeff": 179, "real_sh_descoteaux": [179, 183], "tracjectori": [179, 182, 237, 238], "probe_length": 179, "probe_radiu": 179, "probe_qu": 179, "probe_count": 179, "data_support_expon": 179, "ppt": [], "expon": 179, "vol_dim": 179, "image_volum": 179, "indexerror": [179, 251, 253], "label_volum": 179, "defaultdict": 179, "bincount": 179, "new_label": 179, "max_segment_length": 179, "output_streamlin": 179, "seeds_count": 179, "seed_count_per_voxel": 179, "23838787": 179, "20150886": 179, "31422574": 179, "41435083": 179, "26318949": 179, "30127447": 179, "44305611": 179, "01132755": 179, "47624371": 179, "30500292": 179, "30794079": 179, "01532556": 179, "03816435": 179, "15672913": 179, "13093276": 179, "12509547": 179, "3972138": 179, "27568569": 179, "3702492": 179, "78681721": 179, "10314815": 179, "target_mask": 179, "never": 179, "compress_streamlin": [179, 240, 260], "jack": [179, 273], "bresenham": [179, 273], "plotter": [179, 273], "ibm": [179, 273], "1147": [179, 242, 273], "sj": [179, 273], "0025": [179, 273], "harnoi": [179, 273], "roi_coord": 179, "region_of_interest": 179, "in_arrai": 179, "f4": 179, "u_return": 179, "tracking_output": 179, "include_roi": 179, "exclude_roi": 179, "aoi": 179, "fill_valu": 179, "seq": 179, "plm": 179, "min_radius_curvatur": 179, "22005": [179, 271, 273], "recorded_ev": 181, "return_showm": 181, "order_transpar": 181, "buan_color": 181, "roi_imag": [181, 182, 222], "roi_color": [181, 182, 222], "build_scen": [181, 183], "build_show": [181, 183], "peakandmetr": [179, 181], "anim": [181, 182, 222, 274, 275], "peel": [181, 182, 222], "anti": [181, 182, 222], "alias": [181, 182, 222], "pictur": [181, 182, 222], "karandeep": [181, 182, 222, 244, 245, 273], "juneja": [181, 182, 222, 244, 273], "selected_valu": [181, 183], "dataclass": 181, "abc": [181, 259], "tab_id": [181, 183], "on_tab_select": [181, 183], "win_siz": 181, "on_tab_chang": 181, "add_to_scen": 181, "remove_from_scen": 181, "sync_slic": 181, "sync_volum": 181, "sync_peak": 181, "tab_ui": [181, 183], "tabui": 181, "handle_text_overflow": [181, 183], "reposit": [181, 183], "synchronize_slic": [181, 183], "active_tab_id": 181, "x_valu": 181, "y_valu": 181, "z_valu": 181, "synchron": [181, 253, 262, 263], "synchronize_volum": [181, 183], "line_width": 181, "1f": 181, "on_moving_slid": 181, "on_value_chang": 181, "on_handle_releas": 181, "label_font_s": 181, "label_style_bold": 181, "is_double_slid": 181, "knob": 181, "alongsid": 181, "programmat": 181, "checked_label": 181, "checkbox": [181, 245, 262], "radio": 181, "initial_select": 181, "on_prev_click": 181, "on_next_click": 181, "switcher": 181, "prev": 181, "horizoncombineel": 181, "clusters_visu": 181, "centroid_actor": [181, 183], "cluster_actor": [181, 183], "peak_actor": 181, "update_slic": [181, 183], "x_slice": 181, "y_slice": 181, "z_slice": 181, "contour_actor": 181, "slices_visu": 181, "tab_nam": 181, "force_rend": 181, "update_volum": [181, 183], "fallback": 181, "text_siz": 181, "available_s": 181, "ellipsi": 181, "unpack": 181, "ref_img_shap": 181, "sync_img": 181, "show_manag": 181, "enable_callback": 181, "tractogram_clust": [181, 183], "add_cluster_actor": [181, 183], "recluster_tractogram": [181, 183], "tract_idx": 181, "thr": 181, "vtkactor": 181, "x_indic": 181, "y_indic": 181, "z_indic": 181, "rgb_standard": 181, "vtklookupt": 181, "cross_sect": [181, 183], "global_opac": [181, 183], "high_rang": [181, 183], "is_rang": [181, 183], "low_rang": [181, 183], "max_cent": [181, 183], "min_cent": [181, 183], "display_cross_sect": [181, 183], "z1": 181, "z2": 181, "lodactor": 181, "interactor": [181, 242, 243], "intensities_rang": [181, 183], "selected_slic": [181, 183], "volume_max": [181, 183], "volume_min": [181, 183], "change_volum": [181, 183], "register_picker_callback": [181, 183], "next_idx": 181, "intensity_ratio": 181, "visible_slic": 181, "fit_kwarg": 181, "fit1": 181, "fit2": 181, "fitnam": 181, "xlimit": 181, "disprang": 181, "mosaic": 181, "besid": 181, "cbar": 181, "basemap_arg": 181, "_ax": 181, "xlabel": 181, "ylabel": 181, "ylabl": 181, "img0": 181, "img1": 181, "fig_kwarg": [181, 255], "segular": 181, "direct_grid_shap": 181, "direct_grid2world": 181, "inverse_grid_shap": 181, "inverse_grid2world": 181, "show_figur": 181, "warped_forward": 181, "warped_backward": 181, "wouldn": 181, "slice_indic": 181, "c2": 181, "magnitdu": 181, "docscrap": 182, "mentat": 182, "virtanen": 182, "pav": 182, "iki": 182, "fi": 182, "output_strategi": 182, "get_short_nam": [182, 183], "troubl": 182, "subworkflow": 182, "strongli": 182, "new_vox_s": [182, 231], "out_resl": [182, 231], "new_vox_sz": [182, 231], "static_fil": [182, 190, 233], "moving_fil": [182, 190, 233], "out_mov": [182, 184, 197, 233], "out_stat_centroid": [182, 233], "static_centroid": [182, 233], "out_moving_centroid": [182, 233], "moving_centroid": [182, 233], "out_moved_centroid": [182, 233], "moved_centroid": [182, 233], "static_image_fil": [182, 184, 185, 186], "moving_image_fil": [182, 184, 185, 186], "static_vol_idx": [182, 184], "moving_vol_idx": [182, 184], "out_qual": [182, 184], "quality_metr": [182, 184], "transform_map_fil": [182, 186], "overwritten": [182, 186], "prealign_fil": [182, 185], "inv_stat": [182, 185], "mopt_sigma_diff": [182, 185], "mopt_radiu": [182, 185], "mopt_smooth": [182, 185], "mopt_inner_it": [182, 185], "mopt_q_level": [182, 185], "mopt_double_gradi": [182, 185], "mopt_step_typ": [182, 185], "out_inv_stat": [182, 185], "inc_stat": [182, 185], "out_field": [182, 185], "displacement_field": [182, 185], "quantiz": [182, 185], "schedul": [182, 185, 242], "n_scale": [182, 185], "bvalues_fil": [182, 197, 198, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220], "bvectors_fil": [182, 197, 198, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220], "bvecs_tol": [182, 197, 198, 204, 207, 208, 212, 213, 214, 217, 218, 219, 220, 223], "out_linear_mov": [182, 190], "linearly_mov": [182, 190], "out_nonlinear_mov": [182, 190], "out_warp_transform": [182, 190], "warp_transform": [182, 190], "out_warp_kernel": [182, 190], "warp_kernel": [182, 190], "out_dist": [182, 190], "distance_matrix": [182, 190], "out_matched_pair": [182, 190], "cpd": [182, 183, 190], "prog": 182, "epilog": 182, "formatter_class": 182, "rawtexthelpformatt": 182, "prefix_char": 182, "fromfile_prefix_char": 182, "argument_default": 182, "conflict_handl": 182, "add_help": 182, "argumentpars": 182, "optional_paramet": [182, 183], "output_paramet": [182, 183], "positional_paramet": [182, 183], "add_argument_group": 182, "add_descript": [182, 183], "add_epilogu": [182, 183], "add_mutually_exclusive_group": 182, "convert_arg_line_to_arg": 182, "format_help": 182, "get_default": 182, "parse_intermixed_arg": 182, "parse_known_arg": 182, "parse_known_intermixed_arg": 182, "print_help": 182, "show_argu": [182, 183], "update_argu": [182, 183], "add_sub_flow_arg": [182, 183], "sub_flow": 182, "introspect": 182, "sub_flow_opt": 182, "add_workflow": [182, 183], "arpars": 182, "get_flow_arg": [182, 183], "namespac": [182, 255], "dest": 182, "karg": 182, "get_opt": [182, 183], "get_sub_run": [182, 183], "set_sub_flows_opt": [182, 183], "_option": 182, "bval_fil": [182, 201], "skip_b0_denois": [182, 201], "skip_shift_intens": [182, 201], "ver": [182, 201], "dwi_patch2self": [182, 201], "globe": [182, 200, 201, 209, 212, 215, 227, 272], "dwi_nlmean": [182, 200], "wiest": [182, 200, 273], "daessl": [182, 200, 273], "metaxa": [182, 200, 273], "axel": [182, 200, 273], "bor": [182, 200, 273], "keli": [182, 200, 273], "85990": [182, 200, 273], "1_15": [182, 200, 273], "veraart2016b": [182, 198], "dwi_mppca": [182, 199], "out_sigma": [182, 199], "dwi_sigma": [182, 199], "out_unr": [182, 221], "dwi_unr": [182, 221], "eof": [182, 183], "is_empti": [182, 183], "peek": [182, 183], "read_to_condit": [182, 183], "read_to_next_empty_lin": [182, 183], "read_to_next_unindented_lin": [182, 183], "seek_next_non_empty_lin": [182, 183], "condition_func": 182, "deindent": 182, "lvl": 182, "extra_arg": 182, "bshell_thr": [182, 223], "get_fetcher_datanam": [182, 183, 274], "available_data": [182, 274], "load_modul": [182, 183], "module_path": 182, "reload": [182, 242], "hcp_profile_nam": [182, 206], "hcp_studi": [182, 206], "hcp_aws_access_key_id": [182, 206], "hcp_aws_secret_access_kei": [182, 206], "out_split": [182, 235], "out_b0": [182, 203], "out_shel": [182, 204], "dash": [182, 204, 205], "out_vol": [182, 205], "tractogram_fil": 182, "delete_dpv": [182, 192], "delete_dp": [182, 192], "delete_group": [182, 192], "check_space_attribut": [182, 192], "prealloc": [182, 192], "out_extens": [182, 192], "concatenated_tractogram": [182, 192], "tractogram_list": [182, 192], "dpv": [182, 192], "trx_list": [182, 192], "sh_convert_dipy_mrtrix_out": [182, 193, 232], "tensor_fil": [182, 194], "converted_tensor": [182, 194], "pos_dtyp": [182, 195], "offsets_dtyp": [182, 195], "uint32": [182, 195], "converted_tractogram": [182, 195], "peaks_dir_fil": [182, 228], "peaks_values_fil": [182, 228], "peaks_indices_fil": [182, 228], "shm_file": [182, 228], "gfa_fil": [182, 228], "sphere_fil": [182, 228, 236], "default_sphere_nam": [182, 228, 236], "out_pam": [182, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 228, 236], "supersed": [182, 228, 236, 248], "evals_fil": [182, 236], "evecs_fil": [182, 236], "out_peaks_dir": [182, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 229], "out_peaks_valu": [182, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 229], "out_peaks_indic": [182, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 229], "out_shm": [182, 207, 208, 210, 211, 213, 214, 217, 218, 219, 220, 229], "out_gfa": [182, 207, 208, 210, 211, 213, 214, 217, 218, 219, 220, 229], "out_spher": [182, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 229], "out_b": [182, 207, 208, 210, 211, 213, 214, 217, 218, 219, 220, 229], "out_qa": [182, 207, 208, 210, 211, 212, 213, 214, 217, 218, 219, 220, 229], "math_out": [182, 226], "subtract": [182, 226], "dipy_math": [182, 239, 254], "vol1": [182, 226], "vol2": [182, 226], "vol3": [182, 226], "t1_a": [182, 226], "t1_b": [182, 226], "bitwis": [182, 226, 259], "xor": [182, 226], "unari": [182, 226], "number1": [182, 226], "number2": [182, 226], "tan": [182, 226], "trigonometr": [182, 226], "sine": [182, 226], "arctan2": [182, 226], "float1": [182, 226], "float2": [182, 226], "sinh": [182, 226], "cosh": [182, 226], "tanh": [182, 226], "hyperbol": [182, 226], "arcsinh": [182, 226], "arccosh": [182, 226], "arctanh": [182, 226], "log10": [182, 226], "expm1": [182, 226], "conj": [182, 226], "op1": [182, 226], "op2": [182, 226], "lb": [182, 225, 261], "ub": [182, 225], "out_fnam": 182, "create_directori": [182, 183], "create_output": [182, 183], "file_existence_check": [182, 183], "set_input": [182, 183], "set_out_dir": [182, 183], "set_out_fnam": [182, 183], "set_output_kei": [182, 183], "sa": 182, "sb": 182, "substr": 182, "dir_str": 182, "prepend": 182, "multi_input": 182, "out_kei": 182, "save_mask": [182, 202, 227], "data_fil": [182, 216, 234], "sphere_nam": [182, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 220, 237, 238], "out_rtop": [182, 216], "out_lapnorm": [182, 216], "lapnorm": [182, 216], "out_msd": [182, 216], "out_qiv": [182, 216], "out_rtap": [182, 216], "out_rtpp": [182, 216], "out_ng": [182, 216], "out_perng": [182, 216], "perng": [182, 216], "out_parng": [182, 216], "parng": [182, 216], "mapmri_peak": [182, 216], "mapmri_peaks_dir": [182, 216], "mapmri_peaks_valu": [182, 216], "mapmri_peaks_indic": [182, 216], "laplacian_sign": [182, 216], "get_fitted_tensor": [182, 183], "optional_arg": 182, "mask_fil": [182, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 234], "nifti_tensor": [182, 212], "out_fa": [182, 209, 212], "out_ga": [182, 209, 212], "out_rgb": [182, 209, 212], "out_md": [182, 209, 212], "out_ad": [182, 209, 212], "out_rd": [182, 209, 212], "out_mod": [182, 209, 212], "out_evec": [182, 209, 212], "out_ev": [182, 209, 212], "rt": [182, 212], "jmrb": [182, 212, 273], "1037": [182, 212, 242, 273], "elucid": [182, 212, 273], "0086": [182, 212, 273], "remove_convolut": [182, 210, 211], "q_space": [182, 210, 211], "out_dt_tensor": [182, 209], "out_dk_tensor": [182, 209], "dki_tensor": [182, 209], "out_mk": [182, 209], "out_ak": [182, 209], "out_rk": [182, 209], "ull": [182, 209], "uwll": [182, 209], "get_fitted_ivim": [182, 183], "out_s0_predict": [182, 215], "out_perfusion_fract": [182, 215], "out_d_star": [182, 215], "out_d": [182, 215], "penalti": [182, 220], "zou2005": [182, 220], "po": [182, 213, 248], "streamline_fil": [182, 224, 230], "model_bundle_fil": [182, 230], "no_slr": [182, 230], "slr_matrix": [182, 230], "r_reduction_thr": [182, 230], "r_pruning_thr": [182, 230], "no_r_slr": [182, 230], "out_recognized_transf": [182, 230], "out_recognized_label": [182, 230], "tini": [182, 230, 262], "labels_fil": [182, 224], "out_bundl": [182, 224], "recognized_orig": [182, 224], "out_tissu": [182, 191], "out_pv": [182, 191], "tissue_classified_pv": [182, 191], "t1w": [182, 191], "bbox_threshold": [182, 234], "out_mask_cc": [182, 234], "out_mask_nois": [182, 234], "model_bundle_fold": [182, 188], "subject_fold": [182, 188, 189], "get_metric_nam": [182, 183], "af_l_fa": 182, "h5_file": [182, 187], "save_lmm_plot": [182, 183], "plot_fil": 182, "bundle_nam": 182, "bundle_fold": 182, "orig_bundle_fold": 182, "metric_fold": 182, "stopping_fil": [182, 237], "seeding_fil": [182, 237, 238], "use_binary_mask": [182, 237], "stopping_thr": [182, 237], "binar": [182, 237], "closestpeak": [182, 237, 246], "wm_file": [182, 238], "gm_file": [182, 238], "csf_file": [182, 238], "pft_back": [182, 238], "pft_front": [182, 238], "pft_count": [182, 238], "cmc": [182, 238], "back_tracking_dist": [182, 238], "front_tracking_dist": [182, 238], "100000000": [182, 222], "icbm_2009a": [182, 222], "emerg": [182, 222, 273], "icbm_2009c": [182, 222], "manage_output_overwrit": [182, 183], "_force_overwrit": 182, "outcom": 182, "liter": [182, 255, 256], "update_flat_output": [182, 183], "new_flat_output": 182, "flat_output": 182, "subpackag": 183, "get_info": [183, 240, 241, 253, 279], "_public": [183, 257], "scalespac": 183, "register_dwi_seri": 183, "deformableregistr": 183, "gaussian_kernel": 183, "low_rank_eigen": 183, "initialize_sigma2": 183, "lowrankq": 183, "affineinversionerror": 183, "affineinvalidvalueserror": 183, "transform_geometric_cent": 183, "transform_origin": 183, "diffeomorphicregistr": [183, 251], "mult_aff": 183, "get_direction_and_spac": 183, "similaritymetr": 183, "emmetr": 183, "v_cycle_2d": 183, "v_cycle_3d": 183, "isotropicscalespac": 183, "streamlinedistancemetr": 183, "bundlemindistancematrixmetr": 183, "bundlemindistanceasymmetricmetr": 183, "bundlesumdistancematrixmetr": 183, "jointbundlemindistancemetr": 183, "streamlineregistrationmap": 183, "jointstreamlineregistrationmap": 183, "bundle_sum_dist": 183, "bundle_min_dist": 183, "bundle_min_distance_fast": 183, "bundle_min_distance_asymmetric_fast": 183, "remove_clusters_by_s": 183, "progressive_slr": 183, "slr_with_qbx": [183, 261], "get_unique_pair": 183, "compose_matrix44": 183, "decompose_matrix44": 183, "average_bundle_length": 183, "find_miss": 183, "onetim": 183, "sphere_stat": [183, 248, 249], "subdivide_octahedron": 183, "sphere2cart": [183, 247, 272], "cart2spher": [183, 247, 250], "sph2latlon": 183, "normalized_vector": 183, "vector_norm": [183, 247], "rodrigues_axis_rot": 183, "nearest_pos_semi_def": 183, "sphere_dist": 183, "cart_dist": 183, "vector_cosin": 183, "lambert_equal_area_projection_polar": 183, "lambert_equal_area_projection_cart": 183, "euler_matrix": 183, "compose_matrix": [183, 249], "decompose_matrix": 183, "circumradiu": 183, "vec2vec_rotmat": [183, 240, 258], "compose_transform": 183, "perpendicular_direct": 183, "dist_to_corn": 183, "is_hemispher": [183, 251], "b0_threshold_empty_gradient_messag": 183, "b0_threshold_update_slicing_messag": 183, "mask_non_weighted_bv": 183, "gradient_table_from_bvals_bvec": 183, "gradient_table_from_qvals_bvec": 183, "gradient_table_from_gradient_strength_bvec": 183, "generate_bvec": 183, "round_bval": 183, "get_bval_indic": 183, "check_multi_b": 183, "btens_to_param": 183, "params_to_bten": 183, "ornt_map": 183, "reorient_vector": 183, "reorient_on_axi": 183, "orientation_from_str": 183, "orientation_to_str": 183, "extract_b0": [183, 254], "extract_dwi_shel": 183, "resetmixin": 183, "onetimeproperti": 183, "auto_attr": [183, 249], "nonnegativeleastsquar": 183, "sparse_nnl": 183, "wichmannhill2006": 183, "wichmannhill1982": 183, "lecuy": 183, "faces_from_sphere_vertic": 183, "unique_edg": 183, "unique_set": 183, "fibonacci_spher": 183, "disperse_charges_alt": 183, "euler_characteristic_check": 183, "random_uniform_on_spher": [183, 248, 249], "eigenstat": 183, "compare_orientation_set": 183, "angular_similar": 183, "create_unit_spher": 183, "create_unit_hemispher": 183, "cshift3d": 183, "permutationinvers": 183, "afb3d_a": 183, "sfb3d_a": 183, "sfb3d": 183, "afb3d": 183, "dwt3d": 183, "idwt3d": 183, "dataerror": 183, "loads_compat": 183, "get_sim_voxel": 183, "get_skeleton": 183, "get_3shell_gtab": 183, "get_isbi2013_2shell_gtab": 183, "get_gtab_taiwan_dsi": 183, "dsi_deconv_voxel": 183, "mrtrix_spherical_funct": 183, "get_cmap": [183, 249], "matlab_life_result": 183, "load_sdp_constraint": 183, "copyfileobj_withprogress": 183, "check_md5": 183, "fetch_data": 183, "fetch_stanford_label": 183, "fetch_resdnn_tf_weight": 183, "fetch_resdnn_torch_weight": 183, "fetch_synb0_weight": 183, "fetch_synb0_test": 183, "fetch_deepn4_tf_weight": 183, "fetch_deepn4_torch_weight": 183, "fetch_deepn4_test": 183, "fetch_evac_tf_weight": 183, "fetch_evac_torch_weight": 183, "fetch_evac_test": 183, "fetch_stanford_t1": 183, "fetch_stanford_pve_map": [183, 274, 275], "fetch_taiwan_ntu_dsi": 183, "fetch_scil_b0": 183, "fetch_ivim": [183, 274, 275], "fetch_cfin_multib": 183, "fetch_30_bundle_atlas_hcp842": 183, "fetch_bundle_fa_hcp": [183, 274], "fetch_gold_standard_io": [183, 255], "fetch_qte_lte_pt": 183, "fetch_cti_rat1": 183, "fetch_fury_surfac": 183, "fetch_dib_70_lte_pte_st": 183, "fetch_dib_217_lte_pte_st": 183, "fetch_ptt_minimal_dataset": 183, "fetch_disco1_dataset": 183, "fetch_disco2_dataset": 183, "fetch_disco3_dataset": 183, "fetch_disco_dataset": 183, "read_scil_b0": 183, "read_siemens_scil_b0": 183, "read_isbi2013_2shel": 183, "read_sherbrooke_3shel": 183, "read_stanford_label": 183, "read_stanford_hardi": 183, "read_stanford_t1": 183, "read_stanford_pve_map": 183, "read_taiwan_ntu_dsi": 183, "read_syn_data": 183, "fetch_tissue_data": 183, "read_tissue_data": 183, "fetch_cenir_multib": 183, "read_cfin_dwi": 183, "read_cfin_t1": 183, "read_qte_lte_pt": 183, "extract_example_tract": 183, "to_bids_descript": 183, "fetch_hcp": 183, "dimensionality_problem_messag": 183, "create_patch_radius_arr": 183, "compute_patch_s": 183, "compute_num_sampl": 183, "compute_suggested_patch_radiu": 183, "vol_denois": 183, "peak_directions_nl": 183, "reshape_peaks_for_visu": 183, "peaks_from_posit": [183, 253, 254], "save_qa_metr": 183, "peaks_to_nifti": 183, "pam_to_nifti": 183, "niftis_to_pam": 183, "tensor_to_pam": 183, "load_gener": 183, "save_gener": 183, "load_trx": 183, "load_vtk": 183, "load_vtp": 183, "load_fib": 183, "load_dpi": 183, "save_trx": 183, "save_vtk": 183, "save_vtp": 183, "save_fib": 183, "save_dpi": 183, "load_pial": 183, "load_gifti": 183, "nifti1_symmat": 183, "make5d": 183, "decfa": [183, 246, 251], "decfa_to_float": 183, "is_reference_info_valid": 183, "split_name_with_gz": 183, "save_buan_profiles_hdf5": 183, "read_img_arr_or_path": 183, "save_polydata": 183, "save_vtk_streamlin": [183, 255], "load_vtk_streamlin": [183, 255], "cnn_1d_denois": 183, "torch": [183, 254], "cnn1ddenois": 183, "encoderblock": 183, "decoderblock": 183, "unet3d": 183, "channelsum": 183, "evacplu": 183, "prepare_img": 183, "init_model": 183, "singlelayerperceptron": 183, "multiplelayerpercepton": 183, "movedimlay": 183, "densemodel": 183, "unnorm": 183, "transform_img": 183, "recover_img": 183, "pad_crop": 183, "weights_method": 183, "bingham_to_sf": 183, "bingham_fiber_dens": 183, "bingham_fiber_spread": 183, "k2odi": 183, "odi2k": 183, "weighted_voxel_metr": 183, "coeff_of_determin": 183, "axsymshrespons": 183, "constrainedsdtmodel": 183, "estimate_respons": 183, "forward_sdt_deconv_mat": 183, "odf_deconv": 183, "fa_trace_to_lambda": 183, "from_qte_to_cti": 183, "multi_gaussian_k_from_c": 183, "split_cti_param": 183, "cti_predict": 183, "params_to_cti_param": 183, "ls_fit_cti": 183, "carlson_rf": 183, "carlson_rd": 183, "directional_diffus": 183, "directional_diffusion_vari": 183, "directional_kurtosi": 183, "apparent_kurtosis_coef": 183, "radial_kurtosi": 183, "kurtosis_maximum": 183, "mean_kurtosis_tensor": 183, "radial_tensor_kurtosi": 183, "kurtosis_fractional_anisotropi": 183, "dki_predict": 183, "params_to_dki_param": 183, "ls_fit_dki": 183, "cls_fit_dki": 183, "wrotat": 183, "wrotate_el": 183, "wcon": 183, "split_dki_param": 183, "kurtosismicrostructuralfit": 183, "axonal_water_fract": 183, "diffusion_compon": 183, "dkimicro_predict": 183, "diffusionspectrumfit": 183, "diffusionspectrumdeconvfit": 183, "create_qspac": 183, "create_qt": 183, "hanning_filt": 183, "pdf_interp_coord": 183, "pdf_odf": [183, 247], "half_to_full_qspac": 183, "project_hemisph_bvec": 183, "threshold_propag": 183, "gen_psf": 183, "lr_deconv": 183, "geodesic_anisotropi": 183, "axial_diffus": 183, "radial_diffus": 183, "deviator": 183, "apparent_diffusion_coef": 183, "tensor_predict": 183, "iter_fit_tensor": [183, 240], "wls_fit_tensor": 183, "ols_fit_tensor": 183, "nlls_fit_tensor": 183, "restore_fit_tensor": 183, "iterative_fit_tensor": 183, "robust_fit_tensor_wl": 183, "robust_fit_tensor_nl": 183, "quantize_evec": [183, 242, 255], "eig_from_lo_tri": [183, 249], "forecastfit": 183, "find_signal_mean": 183, "forecast_error_func": 183, "psi_l": 183, "forecast_matrix": 183, "rho_matrix": 183, "lb_forecast": 183, "fwdti_predict": 183, "wls_iter": 183, "nls_iter": 183, "nls_fit_tensor": 183, "lower_triangular_to_choleski": 183, "cholesky_to_lower_triangular": 183, "generalizedqsamplingfit": 183, "normalize_qa": 183, "squared_radial_compon": 183, "npa": 183, "equatorial_zone_vertic": 183, "polar_zone_vertic": 183, "upper_hemi_map": 183, "equatorial_maximum": 183, "patch_vertic": 183, "patch_maximum": 183, "odf_sum": 183, "patch_sum": 183, "triple_odf_maxima": 183, "ivimmodeltrr": 183, "ivimmodelvp": 183, "ivim_predict": 183, "f_d_star_predict": 183, "f_d_star_error": 183, "ivim_model_selector": 183, "mapmrifit": 183, "isotropic_scale_factor": 183, "mapmri_index_matrix": 183, "b_mat": 183, "b_mat_isotrop": 183, "mapmri_phi_1d": 183, "mapmri_phi_matrix": 183, "mapmri_psi_1d": 183, "mapmri_psi_matrix": 183, "mapmri_odf_matrix": 183, "mapmri_isotropic_phi_matrix": 183, "mapmri_isotropic_radial_signal_basi": 183, "mapmri_isotropic_m_mu_independ": 183, "mapmri_isotropic_m_mu_depend": 183, "mapmri_isotropic_psi_matrix": 183, "mapmri_isotropic_radial_pdf_basi": 183, "mapmri_isotropic_k_mu_independ": 183, "mapmri_isotropic_k_mu_depend": 183, "binomialfloat": 183, "mapmri_isotropic_odf_matrix": 183, "mapmri_isotropic_odf_sh_matrix": 183, "mapmri_isotropic_laplacian_reg_matrix": 183, "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix": 183, "mapmri_isotropic_index_matrix": 183, "create_rspac": 183, "map_laplace_u": 183, "map_laplace_t": 183, "map_laplace_": 183, "mapmri_stu_reg_matric": 183, "mapmri_laplacian_reg_matrix": 183, "generalized_crossvalidation_arrai": 183, "generalized_crossvalid": 183, "gcv_cost_funct": 183, "msdeconvfit": 183, "qpfitter": 183, "multi_tissue_basi": 183, "solve_qp": [183, 256, 261], "meandiffusionkurtosisfit": 183, "mean_signal_bvalu": 183, "msk_from_awf": 183, "awf_from_msk": 183, "msdki_predict": 183, "wls_fit_msdki": 183, "multivoxelfit": 183, "callablearrai": 183, "multi_voxel_fit": [183, 253, 259], "odfmodel": 183, "odffit": 183, "minmax_norm": [183, 248, 251], "qtdmrifit": 183, "qtdmri_to_mapmri_matrix": 183, "qtdmri_isotropic_to_mapmri_matrix": 183, "qtdmri_temporal_norm": 183, "qtdmri_mapmri_norm": 183, "qtdmri_mapmri_isotropic_norm": 183, "qtdmri_signal_matrix": 183, "qtdmri_eap_matrix": 183, "qtdmri_isotropic_signal_matrix": 183, "qtdmri_isotropic_eap_matrix": 183, "radial_basis_opt": 183, "angular_basis_opt": 183, "radial_basis_eap_opt": 183, "angular_basis_eap_opt": 183, "temporal_basi": 183, "qtdmri_index_matrix": 183, "qtdmri_isotropic_index_matrix": 183, "qtdmri_laplacian_reg_matrix": 183, "qtdmri_isotropic_laplacian_reg_matrix": 183, "part23_reg_matrix_q": 183, "part23_iso_reg_matrix_q": 183, "part4_reg_matrix_q": 183, "part4_iso_reg_matrix_q": 183, "part1_reg_matrix_tau": 183, "part23_reg_matrix_tau": 183, "part4_reg_matrix_tau": 183, "qtdmri_isotropic_sc": 183, "qtdmri_anisotropic_sc": 183, "design_matrix_spati": 183, "create_rt_space_grid": 183, "qtdmri_number_of_coeffici": 183, "l1_crossvalid": 183, "elastic_crossvalid": 183, "from_3x3_to_6x1": 183, "from_6x1_to_3x3": 183, "from_6x6_to_21x1": 183, "from_21x1_to_6x6": 183, "cvxpy_1x6_to_3x3": 183, "cvxpy_1x21_to_6x6": 183, "dtd_covari": 183, "qti_sign": 183, "rumba_deconv": 183, "mbessel_ratio": 183, "generate_kernel": 183, "rumba_deconv_glob": 183, "isotropicmodel": 183, "isotropicfit": 183, "exponentialisotropicmodel": 183, "exponentialisotropicfit": 183, "sparsefasciclefit": 183, "sfm_design_matrix": 183, "sphharmmodel": [183, 248], "qballbasemodel": [183, 251], "sphharmfit": [183, 248], "opdtmodel": 183, "residualbootstrapwrapp": 183, "forward_sdeconv_mat": 183, "sh_to_rh": 183, "gen_dirac": 183, "spherical_harmon": 183, "real_sph_harm": [183, 242], "real_sh_tournier_from_index": 183, "real_sh_descoteaux_from_index": 183, "real_sh_tourni": 183, "real_sym_sh_mrtrix": 183, "real_sym_sh_basi": 183, "sph_harm_ind_list": 183, "order_from_ncoef": [183, 262], "smooth_pinv": 183, "lazy_index": 183, "normalize_data": 183, "lcr_matrix": [183, 262], "bootstrap_data_arrai": 183, "bootstrap_data_voxel": 183, "calculate_max_ord": [183, 245], "convert_sh_to_full_basi": 183, "convert_sh_from_legaci": 183, "convert_sh_to_legaci": [183, 260], "shorefit": 183, "shore_matrix": 183, "shore_matrix_pdf": 183, "shore_matrix_odf": 183, "l_shore": 183, "n_shore": 183, "shore_indic": 183, "shore_ord": 183, "dki_design_matrix": 183, "cti_design_matrix": 183, "simple_cutoff": 183, "two_eyes_cutoff": 183, "weights_method_wls_m_est": 183, "weights_method_nlls_m_est": 183, "check_rang": 183, "bundle_adjac": 183, "ba_analysi": 183, "cluster_bundl": 183, "clustercentroid": 183, "treeclust": 183, "treeclustermap": 183, "qbx_and_merg": 183, "nearest_from_matrix_col": 183, "applymask": 183, "clean_cc_mask": 183, "mean_manhattan_dist": 183, "mean_euclidean_dist": 183, "upper_bound_by_r": 183, "upper_bound_by_perc": 183, "compute_directional_averag": 183, "remove_holes_and_island": 183, "diff2eigenvector": 183, "orbital_phantom": 183, "callaghan_perpendicular": 183, "gaussian_parallel": 183, "cylinders_and_ball_soderman": 183, "kurtosis_el": 183, "dki_sign": [183, 242], "all_tensor_evec": [183, 250], "single_tensor_rtop": 183, "multi_tensor_rtop": 183, "single_tensor_pdf": 183, "multi_tensor_pdf": 183, "single_tensor_msd": 183, "multi_tensor_msd": 183, "find_qspace_neighbor": 183, "neighboring_dwi_correl": 183, "count_sketch": 183, "detect_corresponding_track": 183, "detect_corresponding_tracks_plu": 183, "lifesignalmak": 183, "streamline_sign": 183, "streamline_gradi": 183, "grad_tensor": 183, "streamline_tensor": 183, "triangles_area": 183, "vertices_to_triangles_valu": 183, "wind": [183, 242], "midpoint": 183, "frenet_serret": 183, "mean_curvatur": 183, "mean_orient": 183, "generate_combin": 183, "longest_track_bundl": 183, "intersect_spher": 183, "inside_spher": 183, "inside_sphere_point": 183, "arbitrarypoint": 183, "principal_compon": 183, "midpoint2point": 183, "relist_streamlin": 183, "center_streamlin": 183, "generic_track": 183, "ndbincount": 183, "reduce_label": 183, "subseg": 183, "streamline_near_roi": [183, 259], "unique_row": [183, 249], "transform_tracking_output": [183, 262], "reduce_roi": [183, 259], "max_angle_from_curvatur": 183, "min_radius_curvature_from_angl": 183, "seeds_directions_pair": 183, "gmem": 183, "app": 183, "globalhorizon": 183, "horizonuiel": 183, "horizontab": 183, "tabmanag": 183, "build_slid": 183, "build_checkbox": 183, "build_radio_button": 183, "build_switch": 183, "clusterstab": 183, "peakstab": 183, "roistab": 183, "slicestab": 183, "surfacetab": 183, "check_img_shap": 183, "check_img_dtyp": 183, "show_ellipsi": 183, "unpack_imag": 183, "unpack_surfac": 183, "check_peak_s": 183, "clustersvisu": 183, "peakactor": [183, 253], "peaksvisu": 183, "slicesvisu": 183, "surfacevisu": 183, "slicer_panel": 183, "bundle_shape_profil": 183, "sph_project": [183, 247, 249, 253], "simple_plot": 183, "draw_lattice_2d": 183, "plot_slic": 183, "docstring_pars": 183, "flow_runn": 183, "multi_io": [183, 243, 245], "resliceflow": 183, "slrwithqbxflow": 183, "applytransformflow": 183, "synregistrationflow": [183, 261], "bundlewarpflow": 183, "check_dimens": 183, "introspectiveargumentpars": 183, "add_default_args_to_docstr": 183, "get_args_default": 183, "none_or_dtyp": 183, "patch2selfflow": 183, "mppcaflow": 183, "gibbsringingflow": 183, "numpydocstr": 183, "dedent_lin": 183, "get_level": 183, "run_flow": 183, "ioinfoflow": 183, "splitflow": [183, 252], "extractb0flow": 183, "extractshellflow": 183, "extractvolumeflow": 183, "concatenatetractogramflow": 183, "convertshflow": 183, "converttensorsflow": 183, "converttractogramflow": 183, "niftistopamflow": 183, "tensortopamflow": 183, "pamtoniftisflow": 183, "mathflow": 183, "maskflow": 183, "common_start": 183, "slash_to_und": 183, "connect_output_path": 183, "concatenate_input": 183, "basename_without_extens": 183, "io_iter": 183, "evacplusflow": 183, "reconstmapmriflow": 183, "reconstdtiflow": 183, "reconstdsiflow": 183, "reconstcsdflow": 183, "reconstqballbaseflow": 183, "reconstdkiflow": 183, "reconstivimflow": 183, "reconstrumbaflow": 183, "reconstsdtflow": 183, "reconstsfmflow": 183, "reconstgqiflow": 183, "reconstforecastflow": 183, "recobundlesflow": 183, "labelsbundlesflow": 183, "classifytissueflow": 183, "snrinccflow": 183, "bundleanalysistractometryflow": 183, "linearmixedmodelsflow": 183, "bundleshapeanalysi": 183, "buan_bundle_profil": 183, "localfibertrackingpamflow": 183, "pftrackingpamflow": 183, "handle_vol_idx": 183, "horizonflow": 183, "synopsi": 239, "dipy_classify_tissu": [239, 254], "dipy_concatenate_tractogram": 239, "dipy_convert_tractogram": 239, "dipy_convert_tensor": 239, "dipy_convert_sh": 239, "dipy_denoise_patch2self": 239, "dipy_evac_plu": 239, "dipy_fit_dsi": 239, "dipy_fit_dsid": 239, "dipy_fit_forecast": 239, "dipy_fit_gqi": 239, "dipy_fit_opdt": 239, "dipy_fit_qbal": 239, "dipy_fit_sdt": 239, "dipy_fit_sfm": 239, "dipy_extract_b0": 239, "dipy_extract_shel": 239, "dipy_extract_volum": 239, "dipy_nifti2pam": 239, "dipy_pam2nifti": 239, "dipy_reslic": 239, "dipy_sh_convert_mrtrix": [239, 254], "dipy_snr_in_cc": 239, "dipy_split": 239, "dipy_tensor2pam": 239, "1022": [240, 242, 251], "qixiang": 240, "769": 240, "altogeth": 240, "772": 240, "xvfb": 240, "headless": 240, "754": 240, "car": 240, "gitter": [240, 241, 244, 255, 266], "chat": [240, 241, 244], "753": 240, "tst": [240, 241, 242, 244, 245, 247, 249, 252, 255, 256], "767": 240, "offscreen": 240, "test_slic": 240, "768": 240, "766": 240, "765": 240, "757": 240, "587": 240, "pr1": [240, 250], "748": [31, 35, 240, 264], "_to_voxel_toler": 240, "678": 240, "714": 240, "739": 240, "733": [240, 262], "743": 240, "memleak": 240, "sinkpoint": 240, "randint": [240, 246], "727": 240, "726": 240, "729": 240, "736": 240, "tk": 240, "travi": [240, 241, 242, 243, 244, 245, 246, 249, 252, 255, 256], "735": 240, "732": 240, "wip": [240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "731": 240, "640": 240, "682": 240, "699": 240, "712": 240, "gh707": 240, "713": 240, "677": 240, "pr3": 240, "721": 240, "708": 240, "707": [240, 251], "709": 240, "703": 240, "705": 240, "702": 240, "689": 240, "681": 240, "696": 240, "661": 240, "690": 240, "segfault": [240, 245, 248], "667": 240, "sourceforg": 240, "makefil": 240, "gh": [240, 249], "upl": 240, "676": [240, 245], "infrastructur": 240, "533": 240, "mrg": [240, 241, 242, 243, 244, 248, 249], "pyhon26": 240, "683": 240, "654": 240, "684": 240, "674": 240, "679": [240, 273], "680": 240, "664": 240, "pr2": 240, "671": [240, 273], "663": 240, "usherbrook": [240, 274, 275], "648": 240, "582": 240, "660": 240, "612": 240, "wrt": 240, "651": 240, "659": 240, "658": 240, "resav": 240, "628": 240, "637": 240, "639": 240, "614": 240, "633": 240, "tissuetyp": 240, "632": 240, "627": 240, "miss": [240, 242, 243, 244, 245, 247, 249, 251, 252, 253, 254, 256, 258, 260, 262], "626": 240, "loosevers": 240, "625": 240, "624": 240, "619": 240, "618": 240, "576": 240, "615": [240, 274, 275], "609": 240, "607": 240, "606": [31, 39, 240, 264], "605": 240, "594": [240, 250], "771": 240, "761": 240, "dconn": 240, "723": 240, "738": 240, "tkinter": 240, "752": 240, "mesa": 240, "763": 240, "764": 240, "cleanup": [240, 242, 247, 248, 249, 250, 253, 255, 258, 259], "test_shm": 240, "test_sf_to_sh": 240, "typeerror": [240, 248, 249, 253, 261], "same_kind": 240, "734": 240, "688": 240, "cento": [240, 245], "python2": [240, 263], "725": 240, "611": 240, "715": 240, "719": 240, "694": 240, "timeout": [240, 249, 256, 259], "697": 240, "test_spher": 240, "test_interp_rbf": 240, "649": 240, "656": 240, "701": 240, "704": 240, "hyp1f1": 240, "622": 240, "rc": 240, "652": 240, "653": 240, "revisit": [240, 248], "cuba": 240, "655": 240, "630": 240, "623": 240, "604": 240, "613": 240, "test_vector_field": [240, 242], "test_reorient_vector_field_2d": 240, "icon": [240, 245], "nanmean": [240, 250], "933": [241, 242], "925": 241, "915": 241, "dipy_quickbundl": 241, "922": 241, "921": 241, "918": 241, "test_expectmax": 241, "917": 241, "916": 241, "908": 241, "911": 241, "904": 241, "851": 241, "upcom": [241, 243, 249, 251, 252, 253, 254, 258, 261, 262, 263], "856": 241, "room": 241, "762": 241, "816": 241, "811": 241, "853": 241, "miscellan": [241, 253, 259, 260, 262], "849": 241, "850": 241, "848": 241, "examples_index": 241, "846": 241, "841": 241, "839": 241, "819": 241, "843": 241, "838": 241, "833": 241, "817": 241, "695": 241, "829": 241, "813": [241, 242], "830": 241, "toollib": 241, "802": 241, "760": 241, "824": 241, "815": 241, "anymor": [241, 245, 247, 249, 256, 260], "669": 241, "moco": 241, "809": 241, "821": 241, "revert": [241, 242, 245, 247, 249], "commit_info": 241, "818": 241, "797": 241, "806": 241, "814": [241, 248], "745": 241, "807": 241, "shebang": [241, 242], "801": 241, "886": 241, "896": [241, 242], "890": 241, "905": 241, "broken": [241, 242, 243, 244, 245, 246, 249, 251, 252, 253, 255, 261, 262, 263], "898": 241, "891": [241, 242], "892": 241, "895": 241, "893": 241, "860": 241, "badg": [241, 242, 243, 244, 245, 259], "692": 241, "linalgerror": [241, 245], "quickstart": [241, 245], "822": 241, "me": 241, "urlerror": 241, "urlopen": 241, "errno": 241, "10060": 241, "840": 241, "855": 241, "3rc": 241, "665": 241, "macosx": 241, "842": 241, "805": 241, "685": [241, 257], "pr5": [241, 257], "666": 241, "747": 241, "631": 241, "820": 241, "hash": [241, 245], "810": 241, "_voxel2stream": 241, "803": 241, "1491": [242, 244], "ossa": 242, "julio": [242, 253], "villalon": [242, 253], "manu": 242, "tej": 242, "sharma": [242, 245, 246], "riddhish": 242, "bhalodia": 242, "sourav": 242, "stong": 242, "theaud": [242, 243, 245], "tingyi": [242, 273], "wanyan": [242, 273], "vibhatha": 242, "abeykoon": 242, "theaveragegui": 242, "511": [242, 249], "1273": 242, "1272": 242, "1269": 242, "1271": 242, "tut": 242, "1268": 242, "1243": 242, "1223": 242, "1270": 242, "1267": [242, 273], "1263": 242, "mismatch": [242, 245, 254], "1261": 242, "1255": 242, "1260": 242, "1250": 242, "1235": 242, "1231": [242, 274, 275], "1233": 242, "1234": 242, "1222": 242, "lightweight": [242, 243, 245], "1228": 242, "1227": 242, "1226": 242, "1229": 242, "1225": 242, "1219": 242, "dropbox": 242, "1221": 242, "1212": 242, "1217": 242, "1205": 242, "1166": 242, "1216": 242, "clarif": 242, "simplify_warp_funcion_3d": 242, "1204": 242, "1196": 242, "1199": 242, "1202": 242, "1198": 242, "1201": 242, "cla": 242, "1052": 242, "1183": 242, "textbox": 242, "1186": 242, "wheelhous": 242, "1195": 242, "assert_arrays_equ": 242, "1193": 242, "accent": [242, 251], "anticip": 242, "1140": 242, "1171": 242, "int64": 242, "1123": 242, "1174": 242, "1050": 242, "denspe": 242, "1082": 242, "1153": 242, "athena": 242, "1159": 242, "1157": 242, "get_head": 242, "1160": 242, "1158": 242, "1151": 242, "fmin": 242, "1149": 242, "1137": 242, "942": 242, "1141": 242, "1098": 242, "1136": 242, "1113": 242, "1134": 242, "993": 242, "1064": 242, "1114": 242, "pathlength": 242, "1132": 242, "1125": 242, "1130": 242, "1092": 242, "1129": 242, "1034": 242, "1060": 242, "1124": 242, "1110": 242, "1120": 242, "1119": 242, "1075": 242, "drop26": 242, "835": 242, "1046": 242, "nbr_process": 242, "1087": 242, "1112": 242, "1106": 242, "1066": 242, "1091": 242, "1105": 242, "imp": 242, "1102": 242, "py35": 242, "1100": 242, "1094": 242, "1059": 242, "1061": 242, "1089": 242, "1079": 242, "1080": 242, "828": 242, "1025": 242, "1077": [242, 273], "1069": 242, "1068": 242, "test_shor": 242, "1067": 242, "1062": 242, "1056": 242, "1028": 242, "1041": 242, "1019": 242, "heavi": 242, "1018": 242, "1035": 242, "974": 242, "1021": 242, "1024": 242, "981": 242, "979": 242, "958": 242, "1005": 242, "1015": 242, "progressbar": [242, 256], "992": 242, "1003": 242, "1004": 242, "pkg_info": 242, "1010": 242, "929": 242, "941": 242, "976": 242, "955": 242, "952": 242, "982": 242, "971": [242, 273], "989": 242, "977": 242, "957": 242, "959": 242, "967": 242, "954": 242, "948": 242, "test_sumsqdiff": 242, "test_scalespac": 242, "964": 242, "test_imaffin": 242, "963": 242, "947": 242, "897": 242, "926": 242, "937": 242, "clamp": 242, "907": 242, "mathjax": 242, "932": 242, "931": 242, "927": 242, "test_bvectxt": 242, "913": 242, "935": 242, "934": 242, "todai": 242, "1143": 242, "1246": 242, "1265": 242, "test_nlmeans_4d_3dsigma_and_thread": 242, "1251": 242, "1238": 242, "cryptic": 242, "1242": 242, "intermittenli": 242, "1252": 242, "revamp": [242, 253], "1179": 242, "1253": 242, "1001": [242, 273], "1258": 242, "1155": 242, "1070": 242, "711": 242, "api_chang": 242, "608": 242, "test_imwarp": 242, "591": 242, "seed_from_mask": [242, 251], "518": 242, "todo": 242, "incompat": [242, 249, 253, 260, 261], "1210": 242, "1209": 242, "909": 242, "inconsist": [242, 249, 256, 257], "1182": 242, "1211": 242, "1027": 242, "1218": 242, "1215": 242, "tracking_quick_start": [242, 243, 249], "1213": 242, "simplify_warp_function_3d": 242, "1191": 242, "1207": 242, "1107": 242, "swallow": [242, 255], "rework": [242, 247, 249, 253], "1188": 242, "1187": 242, "1170": 242, "1086": 242, "1173": 242, "1190": 242, "test_peaksfrommodelparallel": 242, "1189": 242, "np1": 242, "1139": 242, "nearestneighbor_interpol": 242, "1142": 242, "streamlines_format": 242, "1097": 242, "1163": 242, "940": 242, "1040": 242, "1118": 242, "ivim_linear": 242, "1128": 242, "1138": 242, "740": 242, "1045": 242, "1154": 242, "1145": 242, "827": 242, "1051": [242, 273], "673": 242, "859": 242, "983": 242, "884": 242, "984": 242, "1009": 242, "1036": 242, "973": 242, "1121": 242, "1083": 242, "nipyp": [242, 259], "1116": 242, "bufferediobas": 242, "912": 242, "1085": 242, "1081": 242, "1031": 242, "1071": 242, "1078": 242, "953": 242, "883": 242, "1011": 242, "1055": 242, "1057": 242, "workaround": [242, 248], "slowadcopdfmodel": 242, "1054": 242, "1043": 242, "899": 242, "991": 242, "footer": 242, "1008": 242, "charm": 242, "1033": 242, "1032": 242, "1029": 242, "1014": 242, "1013": 242, "make_fetch": 242, "1020": 242, "882": 242, "885": 242, "902": 242, "997": 242, "675": 242, "stabilis": 242, "1012": 242, "996": 242, "998": 242, "874": [242, 273], "1017": 242, "877": 242, "995": 242, "pip3": [242, 255], "990": 242, "988": 242, "975": 242, "517": 242, "960": 242, "961": 242, "880": [242, 243], "962": 242, "889": 242, "866": 242, "test_metr": 242, "867": 242, "test_parzenhist": 242, "868": 242, "869": 242, "870": 242, "test_transform": 242, "871": [242, 253], "864": 242, "862": 242, "test_crosscorr": 242, "873": 242, "831": 242, "weird": 242, "876": 242, "968": 242, "872": 242, "966": 242, "920": 242, "950": 242, "949": 242, "878": 242, "939": 242, "945": 242, "indent": 242, "unus": [242, 249, 251, 252, 253, 259, 261, 262], "streamlinespe": [242, 249, 253], "924": 242, "879": 242, "938": 242, "bennet": [243, 244], "fauber": [243, 244], "saber": 243, "sheybani": 243, "1367": 243, "1361": 243, "1316": 243, "1360": 243, "1348": 243, "1357": 243, "1332": 243, "1239": 243, "1356": 243, "1351": 243, "1353": 243, "epilogu": 243, "1262": 243, "1352": 243, "1314": 243, "1345": 243, "1330": 243, "gpl": [243, 249, 257], "1328": 243, "1329": 243, "1335": 243, "test_csdeconv": 243, "1319": 243, "1297": 243, "eigh": 243, "1298": 243, "textactor2d": 243, "1312": 243, "1285": 243, "1307": 243, "1310": 243, "1308": 243, "1304": 243, "1303": 243, "reciproc": [243, 267], "1289": 243, "1288": 243, "fa_oper": 243, "1290": 243, "1279": 243, "1287": 243, "1286": 243, "1284": 243, "1278": 243, "1277": [243, 273], "viz_ui": 243, "1366": 243, "1146": 243, "1084": 243, "1248": 243, "1359": 243, "1324": 243, "1334": 243, "1344": 243, "1346": 243, "1333": 243, "clinicalgraph": 243, "1044": 243, "1247": 243, "1337": 243, "coveral": 243, "baggi": 243, "1341": 243, "activeax": [243, 244], "1325": 243, "1323": 243, "1042": 243, "1317": 243, "1313": 243, "vtkcommoncor": 243, "1318": 243, "func_mul": 243, "1167": 243, "1180": 243, "directiion": 243, "ppc": [243, 249, 256], "804": 243, "1306": 243, "1309": 243, "step_help": 243, "1293": 243, "1292": 243, "570": 243, "1053": [243, 274, 275], "1169": 243, "645": [244, 245], "conor": 244, "corbin": 244, "jiri": [244, 245], "borovec": [244, 245, 255], "mendoza": 244, "kumar": 244, "ashutosh": 244, "pradeep": 244, "reddi": [244, 253, 254], "raamana": 244, "ricci": [244, 245, 252], "woo": [244, 245, 252], "aman": 244, "arya": 244, "1504": 244, "test_whole_brain_slr": 244, "1503": 244, "1424": 244, "1502": 244, "1498": 244, "1431": 244, "1443": 244, "1447": 244, "1423": 244, "1493": 244, "vtk8": 244, "1497": 244, "1496": 244, "1495": 244, "sfm_reconst": 244, "1494": 244, "1474": 244, "1471": 244, "1457": 244, "1468": 244, "1484": 244, "punctuat": 244, "1475": 244, "_iter": 244, "1482": 244, "test_mapmri": 244, "1460": 244, "diskslid": 244, "1452": 244, "1466": 244, "logo": [244, 249, 263], "1464": 244, "banner": [244, 249], "1465": 244, "progit": 244, "1451": 244, "1379": 244, "1445": 244, "repr": 244, "1450": 244, "delimit": 244, "1425": 244, "1446": 244, "hyperlink": [244, 246], "1437": 244, "mdfmetric": 244, "qbx": [244, 261], "1428": 244, "1385": 244, "textblock": 244, "1422": 244, "1434": 244, "1430": 244, "1421": 244, "1416": 244, "1413": 244, "getargspec": 244, "1393": 244, "1294": 244, "1419": 244, "rcond": [244, 256], "1384": 244, "1411": 244, "eddy_rotated_bvec": 244, "1408": 244, "1406": 244, "assert_tru": 244, "assert_equ": [244, 247, 255], "1347": 244, "1322": 244, "1326": 244, "1399": 244, "1391": 244, "1331": 244, "1165": 244, "1300": 244, "ravel_multi_index": [244, 249], "1381": 244, "1375": 244, "1342": 244, "whatnot": 244, "1378": 244, "1374": 244, "1368": 244, "affili": [244, 245, 262], "1370": 244, "1369": 244, "1418": [244, 260], "parallel_voxel_fit": [244, 245, 260], "1291": 244, "644": 244, "1490": 244, "1469": 244, "1485": 244, "1483": 244, "1479": 244, "1477": 244, "1448": 244, "1481": 244, "globalimmediatemoderenderingon": 244, "1454": 244, "1488": 244, "1478": 244, "1476": 244, "1470": 244, "1458": 244, "1438": 244, "1473": 244, "1462": 244, "1461": 244, "1463": 244, "1455": 244, "pyautogui": 244, "monitor": [244, 265], "1456": 244, "1453": 244, "1339": 244, "1441": 244, "1449": 244, "1362": 244, "1395": 244, "1436": 244, "1417": 244, "1435": 244, "1439": 244, "memview": 244, "struct": [244, 259], "1184": 244, "1380": 244, "1429": 244, "syntaxerror": 244, "xe2": [244, 248], "596": [244, 250], "1390": 244, "coding_style_guidelin": 244, "1427": 244, "1426": 244, "987": 244, "faq": [244, 247, 255], "1327": 244, "1181": 244, "1150": 244, "streamline_map": 244, "1409": 244, "1415": 244, "1117": 244, "1412": 244, "791": 244, "1410": 244, "jet": 244, "1387": 244, "1405": 244, "1402": 244, "rint": 244, "1321": 244, "1161": 244, "1394": 244, "misc": [244, 245, 253, 259], "1382": 244, "1350": 244, "1392": 244, "chrome": 244, "1388": 244, "1340": 244, "1383": 244, "mmriflow": 244, "1299": 244, "test_rmi": [244, 249], "1376": 244, "1343": 244, "1282": 244, "filo": 245, "albai": 245, "parichit": [245, 246], "chandan": 245, "gangwar": 245, "cahal": 245, "hunt": 245, "1684": 245, "1686": 245, "1685": 245, "1681": 245, "1680": 245, "1683": 245, "1667": 245, "1677": 245, "msg": [245, 273], "1678": 245, "1676": 245, "1283": 245, "1670": 245, "1669": 245, "1659": 245, "1621": 245, "1657": 245, "1660": 245, "1658": 245, "honor": 245, "1281": 245, "1651": 245, "1656": 245, "neurostar": [245, 266], "1624": 245, "1655": [40, 245], "1650": 245, "codecov": [245, 253, 258, 261, 263], "1649": 245, "1556": 245, "1645": 245, "1647": 245, "1644": 245, "1643": 245, "787": 245, "starter": 245, "1642": 245, "1641": 245, "evenly_distributed_sphere_642": 245, "1564": 245, "listbox2d": 245, "1636": 245, "1584": 245, "1554": 245, "1528": 245, "timer": 245, "imread": 245, "1526": 245, "1628": 245, "1623": 245, "1619": 245, "1592": 245, "1559": 245, "radiobutton": 245, "1583": 245, "1602": 245, "1609": 245, "1560": 245, "1597": 245, "1601": 245, "nosetest": [245, 261], "1515": 245, "1590": 245, "1570": 245, "1589": 245, "1580": 245, "1533": 245, "1523": 245, "1543": 245, "out_strategi": 245, "1547": 245, "1561": 245, "1578": 245, "1563": 245, "major_vers": 245, "1557": 245, "button2d": 245, "1555": 245, "1355": 245, "listbox": 245, "1540": [245, 273], "1548": 245, "1542": 245, "1546": 245, "1545": 245, "1492": 245, "1538": [245, 274, 275], "mistakenli": 245, "1536": 245, "1537": 245, "1530": 245, "1529": 245, "1520": 245, "1524": 245, "1521": 245, "1517": 245, "1516": 245, "1514": 245, "pep8speak": [245, 252, 253], "1513": 245, "1510": 245, "1508": 245, "appeas": 245, "1506": 245, "1679": 245, "1220": 245, "746": 245, "1637": 245, "1673": 245, "1338": 245, "1682": 245, "634": 245, "944": 245, "1099": 245, "1544": 245, "1674": 245, "1397": 245, "1668": 245, "1662": 245, "1296": 245, "ana": 245, "mini": 245, "1653": 245, "1414": 245, "1611": 245, "preload": 245, "1615": 245, "1631": 245, "1638": 245, "noddix": 245, "1618": 245, "filemenu2d": 245, "1569": 245, "listboxitem2d": 245, "1532": 245, "sierra": 245, "ananoda": 245, "1420": 245, "1396": 245, "1295": 245, "1232": 245, "disappear": 245, "928": 245, "923": [245, 274, 275], "759": 245, "vtk6": [245, 248, 249], "voxsz": 245, "646": 245, "1203": 245, "1156": 245, "1135": 245, "1236": 245, "1389": 245, "1519": 245, "1596": 245, "gsoc": [245, 246], "noddix_pr": 245, "1576": 245, "1568": 245, "1108": 245, "1629": 245, "1591": 245, "1575": 245, "1620": 245, "1598": 245, "1595": 245, "1588": 245, "1608": 245, "1610": 245, "tortois": 245, "1607": 245, "1586": 245, "1585": 245, "1594": 245, "1577": 245, "1571": 245, "1579": 245, "1433": 245, "mess": 245, "1541": 245, "1573": 245, "test_ui_listbox_2d": 245, "1566": 245, "1572": 245, "1567": 245, "1551": 245, "1549": 245, "1562": 245, "1550": 245, "1527": 245, "1534": [245, 273], "1487": 245, "check_scratch": 245, "1486": 245, "1539": 245, "1535": 245, "1507": 245, "1512": 245, "1511": 245, "exaampl": 245, "1509": 245, "cl\u00e9ment": 246, "zotti": 246, "katrin": 246, "leinweb": 246, "yijun": 246, "liu": [246, 258], "1755": 246, "1748": 246, "1714": 246, "1726": 246, "1753": 246, "1751": 246, "1743": 246, "1749": 246, "1739": 246, "1695": 246, "1741": 246, "1742": 246, "1745": 246, "1746": 246, "sponsor": 246, "1735": 246, "1738": 246, "1740": 246, "1730": 246, "1666": 246, "1737": 246, "1733": 246, "1732": 246, "maiincrement": 246, "1716": 246, "1640": 246, "1652": 246, "1720": 246, "1719": 246, "1715": 246, "bullet": 246, "quot": [246, 249, 253], "1706": 246, "liner": 246, "1705": 246, "random_integ": 246, "1704": 246, "1701": 246, "1707": 246, "pendingdeprec": 246, "1703": 246, "tripl": 246, "1708": 246, "1710": 246, "1702": 246, "1697": 246, "1696": 246, "1690": 246, "1693": 246, "1757": 246, "sensor": 246, "acsept": 246, "deprecationwarn": 246, "usersranjianaconda3libsit": 246, "packagesipykernel_launch": 246, "imsav": 246, "imageio": 246, "imwrit": 246, "1616": 246, "1605": 246, "1661": 246, "1604": [246, 259], "1734": 246, "1565": 246, "1729": 246, "1280": 246, "1727": 246, "1723": 246, "1718": [246, 251], "1717": 246, "1664": 246, "1633": 246, "1698": 246, "1691": 246, "1692": 246, "1632": 246, "mdesco": 247, "sf2sh": 247, "dsi_deconv": 247, "rodriguez": 247, "colorfa": [247, 277], "rbf": 247, "result_typ": 247, "getitem": [247, 261], "_squash": 247, "vec_val_vect": 247, "einsum": 247, "xp": 247, "sty": 247, "multivoxel": [247, 253], "remove_similar_vertic": 247, "ip": 247, "yai": 247, "l2norm": 247, "e1381s6_edcor": 247, "optional_trait": 247, "brought": 247, "_filter": 247, "reduce_antipod": 247, "_filter_peak": 247, "unique_vertic": 247, "optionalimporterror": 247, "trait": 247, "gitwash": 247, "frontpag": 247, "longest_track_len": 247, "mayavi": 247, "refacotor": 247, "tb": 247, "hap": 247, "triangle_subdivid": 247, "badrequest": 247, "autopep8": 248, "shmfit": 248, "peaks_from_model_parallel": 248, "sdeconv": 248, "temp": [248, 262], "peak_from_model": 248, "brainextract": 248, "setinput": 248, "vtk5": 248, "setinputdata": 248, "mask_voxel_s": 248, "promote_dtyp": 248, "wi": 248, "tensor_": 248, "testfail": 248, "probabilisticodfweightedtrack": 248, "cf": 248, "soureforg": 248, "invoc": [248, 249], "stamp": 248, "pyc": 248, "archiv": [248, 273], "cote": 249, "544": 249, "propspe": 249, "543": 249, "plot_2d": 249, "537": 249, "534": 249, "536": 249, "527": 249, "npymath": 249, "528": 249, "530": 249, "ugli": 249, "529": 249, "525": 249, "523": 249, "522": 249, "521": 249, "520": 249, "win32": 249, "519": 249, "christma": 249, "513": 249, "reinstat": 249, "508": 249, "516": 249, "509": 249, "499": 249, "501": 249, "507": 249, "mergsort": 249, "503": 249, "importlib": 249, "__import__": 249, "traco": 249, "redesign": 249, "crosscorr": 249, "npy_math": 249, "checker": 249, "pxi": 249, "var": [249, 255, 260], "memory_leak": 249, "test_strealin": 249, "pipe": 249, "omarocegueda": 249, "ae": 249, "test_peak_directions_thorough": 249, "skiptest": 249, "odf_sh_sharpen": 249, "bumpi": 249, "fopenmp": 249, "crossplatform": 249, "tone": 249, "sent": 249, "vec2vec": 249, "stuf": 249, "542": 249, "538": 249, "512": 249, "wheezi": [249, 250], "argsort": 249, "mergesort": 249, "506": 249, "dpy_math": 249, "hyp2f1": 249, "502": 249, "travis": 249, "tmp_file": 249, "matrix44": 249, "mkl": 249, "nlmeans_3d": 249, "pow": 249, "16gb": 249, "wasn": 249, "demianw": 249, "quicki": 249, "peaksfrommodel": 249, "incomprehens": 249, "dipy_fit_tensor": 249, "brittl": 249, "create_half_unit_spher": 249, "575": 250, "595": 250, "599": 250, "dpy_rint": 250, "test_center_of_mass": 250, "598": 250, "undetect": 250, "593": 250, "588": 250, "565": 250, "589": 250, "typograph": 250, "584": 250, "quickbundles2": 250, "586": 250, "574": 250, "580": 250, "577": [31, 41, 250, 264], "553": 250, "552": 250, "571": 250, "557": 250, "563": 250, "561": 250, "francopestilli": 250, "551": 250, "602": 250, "test_feature_center_of_mass": 250, "597": 250, "585": 250, "amico": 250, "567": 250, "560": 250, "three_shells_voxel": 250, "555": 250, "chatroom": 250, "32bit": [250, 279], "sparc": 250, "antoin": 251, "theberg": 251, "1946": 251, "1947": 251, "1942": 251, "1917": 251, "1940": 251, "1909": 251, "1931": 251, "1944": 251, "1939": 251, "1943": 251, "1941": 251, "1926": 251, "1935": 251, "1903": 251, "endian": [251, 253, 263], "s390x": [251, 253, 263], "1892": 251, "1804": 251, "1937": 251, "1928": 251, "1925": 251, "1927": 251, "1923": 251, "1894": 251, "1812": 251, "stateful": 251, "1922": 251, "1885": 251, "1913": 251, "1915": 251, "1630": 251, "1896": 251, "1912": 251, "1916": 251, "1918": 251, "1881": 251, "1911": 251, "python_requir": 251, "1914": 251, "1907": 251, "1908": 251, "1887": 251, "1905": 251, "1849": 251, "1902": 251, "1904": 251, "1771": 251, "1899": 251, "1898": 251, "1897": 251, "1893": 251, "1891": 251, "test_refine_rb": 251, "test_bundl": 251, "1888": 251, "1879": 251, "1884": 251, "1875": 251, "1882": 251, "1880": 251, "1878": 251, "numpy_less_0": 251, "1877": 251, "scipy_less_0": 251, "1876": 251, "1874": 251, "oversight": 251, "1858": 251, "1843": 251, "1866": 251, "1850": 251, "1855": 251, "statsmodel": [251, 276], "1835": 251, "1836": 251, "1792": 251, "1851": 251, "1842": 251, "tput": 251, "1830": 251, "1821": 251, "1816": 251, "1818": 251, "1827": 251, "1824": 251, "1819": 251, "diffeormorph": 251, "1823": 251, "1814": 251, "1815": 251, "1813": 251, "1772": 251, "1810": 251, "1806": 251, "1789": 251, "1770": 251, "1796": 251, "1795": 251, "1768": 251, "1788": 251, "1769": 251, "1767": 251, "1759": 251, "acknowledg": 251, "1230": 251, "1798": 251, "1817": 251, "1774": 251, "1587": 251, "1890": 251, "1933": 251, "985": 251, "1558": 251, "peaks_direct": 251, "590": 251, "1722": 251, "1832": 251, "728": 251, "bedpostx": 251, "1779": 251, "1906": 251, "1901": 251, "1747": 251, "1839": 251, "583": 251, "1694": 251, "test_streamlin": 251, "1724": [251, 255], "844": [251, 273], "1856": 251, "1807": 251, "1889": 251, "1713": 251, "668": 251, "592": 251, "shouldn": [251, 259], "nodirect": 251, "1811": 251, "1846": [251, 274, 275], "1831": 251, "1857": 251, "1863": 251, "1781": 251, "1869": 251, "1844": 251, "1865": 251, "1860": 251, "1168": 251, "1854": 251, "1764": 251, "1731": 251, "1845": 251, "1829": 251, "reco": 251, "1606": 251, "1837": 251, "1786": 251, "lab": [251, 252, 255, 256, 274, 275], "1828": 251, "infeas": 251, "1833": 251, "1834": 251, "b0slice": 251, "implicit": 251, "1499": 251, "dii": [251, 270], "1822": 251, "1825": 251, "1048": 251, "1797": 251, "1802": 251, "1787": 251, "1756": 251, "1761": 251, "795": 251, "620": 251, "1758": 251, "1808": 251, "1794": 251, "dettrackpamflow": 251, "1801": 251, "1803": 251, "1809": [251, 273], "1799": 251, "nifiti": 251, "1712": 251, "3075": [251, 263], "1783": 251, "trilinear_interpolate4d": [251, 253], "1784": 251, "1790": 251, "operand": 251, "1782": 251, "1320": 251, "1245": 251, "1240": 251, "1237": 251, "flesh": 251, "1192": 251, "1096": 251, "832": 251, "578": 251, "behnel": 251, "1780": 251, "randommatrix": 251, "1126": 251, "1603": 251, "2030": 252, "2029": 252, "proxi": 252, "dead": [252, 259], "1862": 252, "1952": 252, "cenir_multib": [252, 274, 275], "1998": 252, "1975": 252, "1711": 252, "1989": 252, "1987": 252, "1986": 252, "1977": 252, "1983": 252, "1981": 252, "1980": 252, "1956": 252, "stateful_tractogram_post_1": 252, "0_fix": 252, "1971": 252, "1970": 252, "1929": 252, "reloc": [252, 253], "sim_respons": 252, "1966": 252, "1967": 252, "1961": 252, "1963": 252, "1948": 252, "1951": 252, "1958": 252, "1197": 252, "1959": 252, "1777": 252, "read_": 252, "1634": 252, "1949": 252, "1870": 252, "1953": 252, "1976": 252, "785": 252, "1859": 252, "1950": 252, "statefulltractogram": 252, "ioerror": 252, "1968": 252, "1960": 252, "1867": 252, "circleci": 252, "1954": 252, "1964": 252, "1840": 252, "1841": 252, "1955": 252, "intersphinx": 252, "inventori": 252, "1442": 252, "1791": 252, "rockhil": 253, "asa": 253, "gilmor": 253, "atharva": [253, 254, 262, 263], "shah": [253, 254, 262, 263], "poirier": [253, 255, 256, 261, 262], "florent": 253, "wijanto": 253, "kaibo": 253, "tang": 253, "kaustav": 253, "deka": 253, "martin": 253, "koz\u00e1r": 253, "feickert": [253, 263], "cruso": [253, 254, 262], "prajwal": [253, 254], "covenei": [253, 254, 259, 260, 261, 262, 263], "sandro": [253, 263], "turriat": 253, "3420": 253, "3415": 253, "3417": 253, "3414": 253, "3412": 253, "3409": 253, "3407": 253, "unpin": 253, "3408": 253, "3402": 253, "3403": 253, "tidi": 253, "3404": 253, "3395": 253, "1957": 253, "niftis2pam": 253, "pam2nifti": 253, "3396": 253, "3399": 253, "paragraph": 253, "3398": 253, "2826": 253, "3303": 253, "3368": 253, "3390": 253, "3391": 253, "3393": 253, "gha": [253, 259, 262], "3386": 253, "3140": 253, "correct_mask": 253, "3345": 253, "3372": 253, "omm": 253, "3381": 253, "3380": 253, "3376": 253, "3373": 253, "3379": 253, "3378": 253, "3377": 253, "3375": 253, "3348": 253, "3369": 253, "nightli": [253, 256, 259, 263], "3367": 253, "3366": 253, "3365": 253, "3356": 253, "3360": 253, "3357": 253, "part2": [253, 256], "3343": 253, "3355": 253, "3221": 253, "3323": 253, "3351": 253, "3306": 253, "3293": 253, "3257": 253, "3254": 253, "3317": 253, "3350": 253, "3344": 253, "3346": 253, "3341": 253, "3335": 253, "3342": 253, "3337": 253, "3338": 253, "3319": 253, "3321": 253, "superclass": 253, "3324": 253, "3340": 253, "3316": 253, "3332": 253, "3325": 253, "3331": 253, "3329": 253, "privat": [253, 267, 268], "3330": 253, "unfinish": 253, "backtick": [253, 256], "3320": 253, "3318": 253, "3310": 253, "3315": 253, "2810": 253, "3312": 253, "3309": 253, "3308": 253, "3275": 253, "sagit": 253, "codespellrc": 253, "3304": 253, "3295": 253, "3302": 253, "3301": 253, "3297": 253, "3291": 253, "3262": 253, "3263": 253, "3287": 253, "__len__": 253, "3260": 253, "3256": 253, "neuralnetwork": 253, "3258": 253, "3249": 253, "3251": 253, "3279": 253, "3259": 253, "3252": 253, "3255": 253, "3253": 253, "3233": 253, "stacklevel": 253, "3239": 253, "2593": 253, "emb": 253, "3274": 253, "3273": 253, "dwell": 253, "3237": 253, "_matrix": 253, "_arrai": 253, "3267": 253, "3264": 253, "3268": 253, "3250": 253, "3269": 253, "isin": 253, "in1d": 253, "3238": 253, "3247": 253, "__all__": 253, "3246": 253, "3241": 253, "codespel": [253, 261, 262], "3228": 253, "3235": 253, "unintend": 253, "3230": 253, "bind": 253, "3232": 253, "implicitli": 253, "3229": 253, "3224": 253, "3216": 253, "3178": 253, "3218": 253, "3209": 253, "filterwarn": 253, "conftest": 253, "3220": 253, "spawn": 253, "3214": 253, "3219": 253, "3215": 253, "3211": 253, "gen": 253, "memoryview": 253, "3210": 253, "3212": 253, "3205": 253, "3207": 253, "3206": 253, "3204": 253, "3202": 253, "3158": 253, "3194": 253, "3199": 253, "3182": 253, "3197": 253, "3198": 253, "3191": 253, "trilinear_interpolate4d_c": 253, "3151": 253, "3189": 253, "3176": 253, "3188": 253, "3183": 253, "3184": 253, "3181": 253, "3177": 253, "3180": 253, "3172": 253, "3171": 253, "3168": 253, "3128": 253, "3153": 253, "3156": 253, "yeh2019": 253, "3161": 253, "3163": 253, "3162": 253, "3144": 253, "2982": 253, "3134": 253, "3146": 253, "3150": 253, "3149": 253, "3148": 253, "3138": 253, "3126": 253, "3141": 253, "3139": 253, "3132": 253, "allow_break": 253, "3135": 253, "3133": 253, "3127": 253, "3120": 253, "3110": 253, "3086": [253, 263, 271], "swap": [253, 262, 263], "3095": [253, 263], "2469": 253, "1531": 253, "convexhul": 253, "qhull": 253, "3410": 253, "radial_scal": 253, "3030": 253, "3361": 253, "3170": 253, "3358": 253, "3115": 253, "3401": 253, "arokem": 253, "3169": 253, "3285": 253, "awkward": 253, "2757": 253, "3374": 253, "3347": 253, "2665": 253, "3326": 253, "parti": 253, "3349": 253, "footbibliographi": 253, "3370": 253, "3248": 253, "multicompart": 253, "3363": 253, "syntaxwarn": 253, "embed": 253, "latex": 253, "2886": 253, "test_streamwarp": 253, "2143": 253, "3286": 253, "3292": 253, "framelocalsproxi": 253, "2394": 253, "3339": 253, "1026": 253, "multprocess": 253, "3223": 253, "3298": 253, "determine_num_thread": 253, "3305": 253, "3056": 253, "3231": 253, "3300": 253, "3299": 253, "3283": 253, "3282": 253, "3242": 253, "3280": 253, "multiarrai": 253, "3277": 253, "3029": 253, "3265": 253, "3266": 253, "import_arrai": 253, "3236": 253, "3243": 253, "3175": 253, "3196": 253, "3155": 253, "3203": 253, "3165": 253, "3217": 253, "3208": 253, "3201": 253, "3200": 253, "2299": 253, "2880": 253, "test_io_fetch_fetcher_datanam": 253, "3186": 253, "3185": 253, "3187": 253, "3145": 253, "2796": 253, "terribl": 253, "1985": 253, "wonki": 253, "2036": 253, "3122": 253, "3113": 253, "2950": 253, "3111": [253, 273], "3154": 253, "3142": 253, "3096": 253, "3136": 253, "cudipi": 253, "3116": 253, "2970": [253, 263], "aryansh": 255, "omrai": 255, "fabio": 255, "neri": 255, "jirka": 255, "kerkela": [255, 259], "wening": [255, 259], "martijn": 255, "nagtega": 255, "sarath": 255, "chandra": 255, "shrishti": 255, "hore": 255, "shubham": 255, "shaswat": 255, "taki": 255, "panagopoulo": 255, "tashrif": 255, "billah": 255, "kunal": 255, "svabhishek29": 255, "areesha": [255, 256, 257], "karan": [255, 256, 257, 262, 263], "2191": 255, "2212": 255, "2207": 255, "shader": 255, "2208": 255, "2157": 255, "uniniti": [255, 262], "2205": 255, "2204": 255, "2183": 255, "_streamlines_in_mask": 255, "2203": 255, "period": 255, "2142": 255, "2195": 255, "2161": 255, "2163": 255, "2168": 255, "2178": 255, "2193": 255, "buan_flow": 255, "2196": 255, "2188": 255, "2176": 255, "2173": 255, "ssl": 255, "certif": 255, "2171": 255, "2154": 255, "2162": 255, "2156": 255, "2160": 255, "assert_": 255, "2158": 255, "2155": 255, "2147": 255, "2148": 255, "2150": 255, "2149": 255, "2145": 255, "2152": 255, "2146": 255, "2134": 255, "2135": 255, "2141": 255, "2136": 255, "2140": 255, "rag": 255, "2139": 255, "2108": 255, "2121": 255, "initialis": 255, "2129": 255, "2133": 255, "2125": 255, "2124": 255, "2033": 255, "2111": 255, "2086": 255, "2091": 255, "2057": 255, "2103": 255, "grammar": [255, 260, 262], "2088": 255, "2120": 255, "2113": 255, "cigar_tensor": 255, "2116": 255, "2100": 255, "grammat": 255, "2101": 255, "2095": 255, "2099": 255, "2102": 255, "2055": 255, "2097": 255, "sform": 255, "get_best_affin": 255, "2104": 255, "2065": 255, "2090": 255, "2067": 255, "2093": 255, "2077": 255, "2071": 255, "2084": 255, "kunakl07": 255, "2085": 255, "2068": 255, "2069": 255, "2063": 255, "2045": 255, "2060": 255, "2058": 255, "2059": 255, "2056": 255, "2053": 255, "_gibbs_removal_2d": 255, "2043": 255, "2047": 255, "2044": 255, "2041": 255, "2039": 255, "__future__": 255, "2042": 255, "2040": 255, "2038": 255, "2037": 255, "fw": 255, "2028": 255, "2035": 255, "2114": 255, "1793": [255, 273], "wf": 255, "2061": 255, "colab": 255, "kaggl": 255, "2070": 255, "2107": 255, "2153": 255, "2138": 255, "2194": 255, "2177": 255, "2182": 255, "tp_print": 255, "2199": 255, "2175": 255, "2190": [255, 256], "2051": 255, "2172": 255, "2169": 255, "2170": 255, "2144": 255, "2159": 255, "2151": 255, "2130": 255, "2131": 255, "elementwis": 255, "2128": 255, "1765": 255, "2122": 255, "2127": 255, "2126": 255, "2096": 255, "2118": 255, "1861": 255, "2094": 255, "friendli": 255, "regn": 255, "2078": 255, "1305": 255, "2089": 255, "2072": 255, "2073": 255, "old_highlight": 255, "2074": 255, "2075": 255, "maintainer_workflow": 255, "2076": 255, "2079": 255, "2080": 255, "2081": 255, "2082": 255, "2083": 255, "2066": 255, "1363": 255, "1871": 255, "2052": 255, "1785": 255, "1728": 255, "1699": 255, "1671": 255, "1552": 255, "1373": 255, "troubleshoot": 255, "1152": 255, "1047": 255, "2049": 255, "2048": 255, "1848": 255, "hub": 255, "2034": 255, "backlog": 255, "1864": 255, "basil": 256, "pinsard": 256, "jaewon": 256, "siddharth": 256, "kapoor": 256, "2181": 256, "2223": 256, "2238": 256, "2265": 256, "2206": 256, "2266": 256, "2255": 256, "2271": 256, "2263": 256, "2259": 256, "2264": 256, "2268": 256, "2267": 256, "2262": 256, "2244": 256, "2119": 256, "2260": 256, "2258": 256, "2257": 256, "2261": 256, "1919": 256, "2256": 256, "2253": 256, "2240": 256, "2198": 256, "btensor": 256, "2197": 256, "2227": 256, "2250": 256, "2252": 256, "2248": 256, "2249": 256, "2247": 256, "2246": 256, "2239": 256, "2242": 256, "2241": 256, "2235": 256, "2234": 256, "2231": 256, "2221": 256, "robustifi": 256, "solvererror": 256, "2226": 256, "2225": 256, "rackspac": 256, "2224": 256, "xfail": 256, "assert_rais": 256, "2220": 256, "2218": 256, "2217": 256, "lstsq": 256, "2211": 256, "2272": 256, "2180": 256, "2054": 256, "unr": 256, "2046": 256, "2132": 256, "1266": 256, "test_mapmri_isotropic_static_scale_factor": 256, "1264": 256, "2117": 256, "2202": 256, "2115": 256, "1744": 256, "1489": 256, "2192": 256, "2201": 256, "2232": 256, "somesuch": 256, "2219": 256, "2236": 256, "2254": 256, "2251": 256, "2243": 256, "2237": 256, "2245": 256, "verbatim": 256, "2230": 256, "2228": 256, "2109": 256, "spring": [256, 259], "2214": 256, "2216": 256, "test_multi_shell_fiber_respons": 256, "2185": 256, "2215": 256, "1762": 256, "1354": 256, "2318": 257, "p2": [257, 258], "2317": 257, "2315": 257, "weekli": 257, "2307": 257, "2278": 257, "2275": 257, "2277": 257, "2289": 257, "2292": 257, "2296": 257, "2294": 257, "2291": 257, "2295": 257, "2280": 257, "2287": 257, "doctstr": 257, "2286": 257, "2284": 257, "doctsr": 257, "2283": 257, "2282": 257, "2210": 257, "arclength": 257, "722": 257, "2328": 257, "2323": 257, "2229": 257, "2098": 257, "2303": 257, "2279": 257, "felix": 258, "2367": 258, "2387": 258, "2386": 258, "2375": 258, "2382": 258, "2385": 258, "2384": 258, "2351": 258, "2381": 258, "2371": 258, "2352": 258, "2373": 258, "2372": 258, "2348": 258, "2363": 258, "2365": 258, "2349": 258, "2350": 258, "size_t": 258, "2346": 258, "mnt": [258, 259], "wherev": [258, 259], "2347": 258, "2340": 258, "reactiv": 258, "2344": 258, "2339": 258, "1648": 258, "2337": 258, "2333": 258, "__str__": 258, "2335": 258, "2332": 258, "1973": 258, "2377": 258, "2380": 258, "2300": 258, "2320": 258, "2341": 258, "2353": 258, "1311": 258, "1302": 258, "1672": 258, "fault": 258, "1444": 258, "562": 258, "2324": 258, "vr": 258, "2345": 258, "837": 258, "636": 258, "1895": 258, "545": 258, "1847": 258, "1872": 258, "1646": 258, "2309": 258, "2334": 258, "aphys": 258, "1873": 258, "2343": 258, "2311": 258, "2274": 258, "1675": 258, "2316": 258, "translationtransform2d": 258, "2331": 258, "573": 259, "dan": [259, 273], "franci": 259, "bert\u00f2": 259, "kenji": 259, "marshal": 259, "costa": 259, "2561": 259, "2520": 259, "2558": 259, "errant": 259, "2557": 259, "2556": 259, "2554": 259, "2555": 259, "2539": 259, "embarrassingli": 259, "2545": 259, "2548": 259, "concurr": 259, "2549": 259, "2550": 259, "2551": 259, "2536": 259, "2533": 259, "underlin": 259, "2342": 259, "2512": 259, "2526": 259, "2534": 259, "2532": 259, "2529": 259, "2528": 259, "2527": 259, "2493": 259, "2522": 259, "2521": 259, "2420": 259, "2482": 259, "2423": 259, "2518": 259, "2515": 259, "2513": 259, "2506": 259, "2510": 259, "reboot": 259, "2487": 259, "2442": 259, "2470": 259, "2485": 259, "2481": 259, "2480": 259, "2478": 259, "2479": 259, "2475": 259, "2476": 259, "2472": 259, "2471": 259, "2468": 259, "2467": 259, "2466": 259, "2453": 259, "2413": 259, "2447": 259, "2444": 259, "2434": 259, "2435": 259, "2436": 259, "2438": 259, "misplac": 259, "2374": 259, "2390": 259, "2417": 259, "2419": 259, "2406": 259, "2411": 259, "c_compress_streamlin": 259, "2416": 259, "2415": 259, "2410": 259, "2409": 259, "2405": 259, "2407": 259, "2392": 259, "2389": 259, "bundles_distances_mdf": 259, "2368": 259, "_local_track": 259, "2123": 259, "2489": 259, "2525": 259, "2509": 259, "2543": 259, "2546": 259, "2542": 259, "2477": 259, "2541": 259, "2507": 259, "2422": 259, "1969": 259, "2456": 259, "2524": 259, "2449": 259, "nonsens": 259, "2179": 259, "2492": 259, "reusabl": 259, "2497": 259, "2495": 259, "2305": 259, "2499": 259, "2488": 259, "footprint": 259, "2504": 259, "fwdwi": 259, "2502": 259, "2490": 259, "2402": 259, "dipy_to_nipype_interfac": 259, "2486": 259, "2484": 259, "2483": 259, "2463": 259, "2460": 259, "2429": 259, "2461": 259, "2464": 259, "homepag": 259, "2457": 259, "2454": 259, "2446": 259, "bitwise_or": 259, "2443": 259, "2441": 259, "2430": 259, "2431": 259, "2432": 259, "2314": 259, "1805": 259, "2418": 259, "2404": 259, "2209": 259, "_pytest": 259, "pathlib": 259, "importpathmismatcherror": 259, "1934": 259, "2383": 259, "dcperror": 259, "2391": 259, "2393": 259, "probtrackx2": 259, "toolbox": 259, "2310": 259, "malinda": 260, "dilhara": 260, "2710": 260, "2711": 260, "temporarydirectori": [260, 274], "2702": 260, "2704": 260, "2701": 260, "progbar": 260, "2700": 260, "2694": 260, "2697": 260, "2692": 260, "2693": 260, "2687": 260, "2690": 260, "2688": 260, "2683": 260, "2668": 260, "2674": 260, "2670": 260, "2672": 260, "2669": 260, "2664": 260, "2553": 260, "2369": 260, "diffeormorphicmap": 260, "2631": 260, "2630": 260, "2629": 260, "2618": 260, "multi_dot": 260, "2606": 260, "2531": 260, "2589": 260, "intemporarydirectori": [260, 262], "tmpfile": 260, "2577": 260, "2595": 260, "2591": 260, "mutabl": 260, "2592": 260, "2579": 260, "2584": 260, "2566": 260, "2581": 260, "logger": 260, "2580": 260, "2576": 260, "2568": 260, "2709": 260, "2708": 260, "2699": 260, "noreg": 260, "redux": [254, 260], "2696": 260, "port": 260, "2679": 260, "2676": 260, "2673": 260, "2667": 260, "2662": 260, "cmd_line": 260, "2658": 260, "chanc": 260, "2659": 260, "2649": 260, "2424": 260, "2327": 260, "2313": 260, "wholebrain": 260, "2616": 260, "2627": 260, "tvis_hdr": 260, "nii_aff": 260, "2634": 260, "2559": 260, "2564": 260, "2572": 260, "2617": 260, "2602": 260, "dear": 260, "expert": 260, "2603": 260, "dti_peak": 260, "2587": 260, "safeti": 260, "concern": [260, 263], "relianc": 260, "tmpdir": 260, "2450": 260, "2573": 260, "2567": 260, "2565": 260, "martino": 261, "pilia": 261, "mitesh": 261, "gulecha": 261, "rahul": 261, "ubal": 261, "shilpi": [261, 262], "karp2601": 261, "ujjwal": 261, "shekhar": 261, "2765": 261, "2788": 261, "2768": 261, "2749": 261, "2744": 261, "2785": 261, "2540": 261, "2609": 261, "2596": 261, "2740": 261, "2773": 261, "2783": 261, "test_roi_imag": 261, "2782": 261, "mtn": [261, 262, 263], "2780": 261, "2778": 261, "2767": 261, "fast_numpi": 261, "2626": 261, "2763": 261, "2751": 261, "2762": 261, "2753": 261, "2722": 261, "2741": 261, "2739": 261, "2590": 261, "2733": 261, "2648": [261, 262], "2723": 261, "2727": 261, "extras_requir": 261, "2725": 261, "2716": 261, "2717": 261, "2713": 261, "2537": 261, "1778": 261, "1990": 261, "1073": 261, "2530": 261, "2756": 261, "2754": 261, "2775": 261, "2770": 261, "2750": 261, "2745": 261, "2742": 261, "2729": 261, "attributeerror": 261, "2726": 261, "2707": 261, "fixdenois": 261, "2575": 261, "stepsiz": 261, "2414": 261, "2599": 261, "papadopoulo": 262, "delint": 262, "prasad": 262, "vara": 262, "lakshmi": 262, "bayanagari": 262, "dependabot": [262, 263], "\u00e9tienn": [262, 263], "mollier": [262, 263], "3009": 262, "2999": 262, "2943": 262, "2992": 262, "2989": 262, "3007": 262, "3006": 262, "optional_packag": [254, 262], "3002": 262, "3005": 262, "3004": 262, "2996": 262, "2995": 262, "_importlib": 262, "2998": 262, "3001": 262, "2997": 262, "resort": 262, "2991": 262, "2987": 262, "test_mcsd": 262, "2990": 262, "2984": 262, "2988": 262, "2985": 262, "incub": 262, "miniconda": 262, "2986": 262, "2983": 262, "negat": 262, "2981": 262, "sctype": 262, "2980": 262, "int_t": 262, "2978": 262, "2976": 262, "2975": 262, "2715": 262, "2964": 262, "2963": 262, "2974": 262, "2956": 262, "2969": 262, "2967": 262, "2966": 262, "2958": 262, "2944": 262, "2961": 262, "2922": 262, "2924": 262, "2957": 262, "2941": 262, "2932": 262, "2929": 262, "2954": 262, "2946": 262, "2947": 262, "2945": 262, "2940": 262, "2938": 262, "2942": 262, "deleg": 262, "2939": 262, "jhlegarreta": 262, "2933": 262, "2930": 262, "2759": 262, "2923": 262, "2825": 262, "2892": 262, "2926": 262, "2927": 262, "2925": 262, "2781": 262, "2910": 262, "2921": 262, "2906": 262, "2920": 262, "2919": 262, "2915": 262, "2916": 262, "dep": 262, "2914": 262, "2816": 262, "2912": 262, "2902": 262, "2904": 262, "refurb": 262, "2899": 262, "newli": 262, "2891": 262, "pyupgrad": 262, "2898": 262, "2897": 262, "2893": 262, "2894": 262, "trail": 262, "2889": 262, "2888": 262, "2887": 262, "2814": 262, "2885": 262, "2875": 262, "2879": 262, "2882": 262, "license_fil": 262, "cfg": 262, "2804": 262, "2730": 262, "2821": 262, "2876": 262, "2846": 262, "blog": 262, "2870": 262, "2865": 262, "week0": 262, "week1": 262, "2868": 262, "submit": 262, "week13": 262, "2871": 262, "2863": 262, "week12": 262, "2856": 262, "2849": 262, "2847": 262, "2836": 262, "2864": 262, "to_x": 262, "2806": 262, "2862": 262, "2843": 262, "7th_blog": 262, "2841": 262, "2835": 262, "2829": 262, "2828": 262, "2860": 262, "2831": 262, "2833": 262, "4thblog": 262, "2840": 262, "week6": 262, "2839": 262, "2844": 262, "2832": 262, "2818": 262, "2823": 262, "clearn": 262, "2813": 262, "2808": 262, "2798": 262, "2797": 262, "nisext": 262, "2795": 262, "2792": 262, "2761": 262, "1256": 262, "2979": 262, "prereleas": 262, "2905": 262, "2514": 262, "2736": 262, "2960": 262, "2803": 262, "2965": 262, "2968": 262, "2801": 262, "2878": 262, "2953": 262, "2955": 262, "2952": 262, "2949": 262, "718": 262, "2523": 262, "2928": 262, "test_icm_squar": 262, "2936": 262, "2934": 262, "2787": 262, "2786": 262, "streamlines_registr": 262, "2703": 262, "2931": 262, "2560": 262, "2794": 262, "2815": 262, "2790": 262, "2872": 262, "2884": 262, "2777": 262, "dipy_motion_correct": 262, "2900": 262, "2896": 262, "2901": 262, "2913": 262, "2908": 262, "2890": 262, "2907": 262, "gab": 262, "2903": 262, "2805": 262, "2883": 262, "week14blog": 262, "2769": [262, 274, 275], "2774": 262, "2881": 262, "test_fil": 262, "2867": 262, "2820": 262, "2746": 262, "2873": 262, "1883": 262, "2491": 262, "2812": 262, "topup": 262, "worsen": 262, "orbitofront": 262, "2858": 262, "odffp": 262, "2857": 262, "2838": 262, "2845": 262, "2851": 262, "2827": 262, "1627": 262, "2822": 262, "2706": 262, "fyi": 262, "2689": 262, "2718": 262, "2747": 262, "2791": 262, "2771": 262, "ebrahim": 263, "shen": 263, "3105": 263, "3109": 263, "convert_tractogram": 263, "3108": 263, "3107": 263, "3033": 263, "3104": 263, "dkimaskfix": 263, "3106": 263, "3078": 263, "3101": 263, "3097": 263, "3048": 263, "3053": 263, "3073": 263, "3099": 263, "addon": 263, "2973": 263, "3081": 263, "3092": 263, "3059": 263, "3090": 263, "trilinear_interpolation_4d": 263, "3080": 263, "3087": 263, "3088": 263, "3084": 263, "3083": 263, "3082": 263, "3076": 263, "3070": 263, "3069": 263, "3063": 263, "3054": 263, "3060": 263, "3061": 263, "3049": 263, "3050": 263, "3051": 263, "3052": 263, "3eb3a42b50671237cace9be2d18a3e4b3845d3c4": 263, "66bc1b6beedff9619cdff8f3361a06802c8f5874": 263, "3045": 263, "3041": 263, "3040": 263, "3039": 263, "setup_modul": 263, "teardown_modul": 263, "3038": 263, "3043": 263, "test_data": 263, "3042": 263, "3027": 263, "3008": 263, "3025": 263, "3031": 263, "3021": 263, "3026": 263, "3022": 263, "3013": 263, "3019": 263, "3012": 263, "3018": 263, "3017": 263, "3014": 263, "2994": 263, "2281": 263, "2719": 263, "3093": 263, "3085": 263, "3074": 263, "3065": 263, "3066": 263, "3057": 263, "hcp1065": 263, "3055": 263, "3047": 263, "3035": 263, "6d": 263, "2993": 263, "3032": 263, "3003": 263, "2852": 263, "2378": 263, "novic": 263, "2064": 263, "2601": 263, "3020": 263, "submodul": 263, "1525": 263, "boneyard": 263, "fiber_track": 264, "streamline_analysi": 264, "file_format": 264, "respond": 266, "req": [267, 268], "g_x": [267, 268], "g_y": [267, 268], "g_z": [267, 268], "supposedli": [267, 268], "envelop": 267, "int_0": 267, "matiello": 267, "lebihan": 267, "onset": 267, "g_i": 267, "g_j": 267, "direcrt": 267, "trse": [267, 268], "ramp": [267, 268], "2b_": [267, 268], "_2": [267, 268], "_3": [267, 268], "dft": [267, 268], "callaghan": 267, "eccl": 267, "xia": 267, "narrow": [267, 269], "mysteri": 267, "loos": 267, "exposit": 268, "clearer": 268, "awar": 268, "understand": 269, "calaghan": 269, "p_": 269, "generalis": 270, "p_l": 271, "legendr": 271, "a_l": 271, "m_l": 271, "formal": 271, "leq": 271, "foral": 271, "omiss": 271, "motiv": 271, "stolfi": 272, "atan2": 272, "cart2sph": 272, "als09": 273, "ahk": 273, "ami16": 273, "ascdvgomez": 273, "edgar": 273, "santana": 273, "campo": 273, "viguera": 273, "isnardo": 273, "reducindo": 273, "aldo": 273, "mej": 273, "multimod": 273, "reinhard": 273, "klett": 273, "mariano": 273, "rivera": 273, "shin": 273, "ichi": 273, "satoh": 273, "afpa06": 273, "afrb04": 273, "aegg08": 273, "atw": 273, "ats09": 273, "asb": 273, "bmlebihan94a": 273, "bp96": 273, "bma": 273, "stuart": 273, "clare": 273, "10609": 273, "ba97": 273, "bre65": 273, "bw05": 273, "cotegbor": 273, "arnaud": 273, "tractomet": 273, "car95": 273, "clsd13": 273, "24736": 273, "hampshir": 273, "lara": 273, "menzi": 273, "odlaug": 273, "craig": 273, "naomi": 273, "fineberg": 273, "sahakian": 273, "trichotillomania": 273, "psychiatri": 273, "archgenpsychiatri": 273, "cha04": 273, "cg20": 273, "corb": 273, "crp": 273, "cwp12": 273, "cna": 273, "cvbw": 273, "che12": 273, "cjd11": 273, "cadw11": 273, "cvj": 273, "cam97": 273, "csba07": 273, "symm": 273, "boulbi": 273, "20905": 273, "cnw11": 273, "19th": 273, "coupemanjonrc12": 273, "coupeyp": 273, "cw79": 273, "dellacquar": 273, "des07": 273, "ddlebihan": 273, "dwdaesslep": 273, "de96": 273, "diciccio": 273, "efron": 273, "ss": 273, "1032280214": 273, "df11": 273, "efr79": 273, "jackknif": 273, "1176344552": 273, "ek06": 273, "fbg20": 273, "fcb": 273, "fxn": 273, "fmobrien": 273, "federau": 273, "maeder": 273, "kieran": 273, "brien": 273, "patrick": 273, "browaei": 273, "reto": 273, "meuli": 273, "radiol": 273, "12120584": 273, "fwpd15": 273, "fpw": 273, "fbj": 273, "fjh": 273, "feb": [273, 274, 275], "fem": 273, "chistoph": 273, "quebec": 273, "citi": 273, "barcelona": 273, "spain": 273, "vassili": 273, "tsiara": 273, "georg": 273, "vogiatzi": 273, "smith1": 273, "stockholm": 273, "sweden": 273, "gcotec": 273, "gcoterd16": 273, "gkg": 273, "gwd14": 273, "gs78": 273, "ghtj15": 273, "gac": 273, "gcg18": 273, "gp95": 273, "hj16": 273, "hlsj13": 273, "hsj16": 273, "hs96": 273, "hme": 273, "htf09": 273, "hcwa13": 273, "hchd15": 273, "hkka14": 273, "hcqw08": 273, "js01": 273, "jh10": 273, "jlj": 273, "jknoschet13": 273, "jmw": 273, "jakh18": 273, "jmpf": 273, "kka16": 273, "kyc": 273, "kdkr16": 273, "kbps11": 273, "kb06": 273, "kca": 273, "kcc": 273, "kozarslanb09": 273, "kozarslanp09": 273, "llb": 273, "lkjones09": 273, "manjoncoupec": 273, "manjoncoupemartibonmati": 273, "mart": 273, "bonmat": 273, "22003": 273, "mjl": 273, "mhv": 273, "16a": 273, "16b": 273, "arnold": 273, "flori": 273, "vanhevel": 273, "26175": 273, "nsp": 273, "neb": 273, "dalmau": 273, "rectangl": 273, "patrec": 273, "volkan": 273, "arpinar": 273, "tugan": 273, "muftul": 273, "genet": 273, "078": 273, "pp99": 273, "pmh": 273, "nikolao": 273, "murril": 273, "lauranc": 273, "adrian": 273, "carpent": 273, "s0730": 273, "725x": 273, "00151": 273, "pfg24": 273, "par62": 273, "pap": 273, "pyr": 273, "psmd15": 273, "pjhd15": 273, "presseau": 273, "jodoin": 273, "058": 273, "rdb": 273, "rhd15": 273, "ric72": 273, "rhca": 273, "rsak14": 273, "rdthrv10": 273, "rcy": 273, "rbcf": 273, "rof92": 273, "sodermanjoonsson95": 273, "sbh": 273, "stcc12": 273, "jesper": 273, "andersson": 273, "steen": 273, "moeller": 273, "auerbach": 273, "glasser": 273, "mois": 273, "hernandez": 273, "feinberg": 273, "essen": 273, "057": 273, "sodgd18": 273, "sogc22": 273, "st65": 273, "shw19": 273, "tsa": 273, "tjv": 273, "tov": 273, "top16": 273, "tcc12": 273, "tsr": 273, "tristanvwafernandez09": 273, "tristanvwafernandez10": 273, "blur": 273, "guang": 273, "zhong": 273, "yang": 273, "hawk": 273, "rueckert": 273, "nobl": 273, "tuc02": 273, "valabregue15": 273, "vfj": 273, "vfn16": 273, "vnc": 273, "vph": 273, "vss": 273, "vppa09": 273, "wg17": 273, "26th": 273, "wsp": 273, "wht": 273, "ruopeng": 273, "jeremi": 273, "schmahmann": 273, "benner": 273, "guangp": 273, "dai": 273, "deepak": 273, "pandya": 273, "helen": 273, "arceuil": 273, "crespigni": 273, "wpg": 273, "wh06": 273, "wa07": 273, "wfa08": 273, "ydm": 273, "ypf": 273, "zswka12": 273, "zbs01": 273, "zh05": 273, "zdm18": 273, "netohenriques12": 273, "netohenriquescnf15": 273, "3130": 273, "28938": 273, "fetch_flow": 274, "bundle_fa_hcp": [274, 275], "bundle_file_formats_exampl": [274, 275], "3352379": [274, 275], "sci": [274, 275], "gold_standard_io": [274, 275], "2651349": [274, 275], "href": [274, 275], "advanced_atlas_of_80_bundles_in_mni_spac": [274, 275], "7375883": [274, 275], "target_tractogram_hcp": [274, 275], "pp": [274, 275], "testing_data": [274, 275], "6084": [274, 275], "m9": [274, 275], "3395704": [274, 275], "ivim_dataset": [274, 275], "bdcg": [274, 275], "servicesatlas": [274, 275], "icbm152nlin2009": [274, 275], "icbm": [274, 275], "qtdmri_test_retest_2subject": [274, 275], "dinf": [274, 275], "discoveri": [274, 275], "mr750": [274, 275], "purl": [274, 275], "ng782rw8378": [274, 275], "e0123272": [274, 275], "2462": [274, 275], "3077": [274, 275], "3692": [274, 275], "exercis": 277, "gotten": 279, "greatest": 279, "bleed": 279, "mint": 279, "neurodebian": 279, "courtesi": 279, "neurofedora": 279, "dnf": 279, "uninstal": 279, "__file__": 279, "canopi": 279, "okai": 279, "expertis": 280, "didn": 280, "depict": 280, "bootstrap_track": [33, 183], "closestpeak_track": [33, 183], "eudx_track": [35, 40, 69, 183], "pft_track": [36, 183], "tracking_disco_phantom": [49, 50, 264], "tractogram_disco_determinist": 50, "tractogram_disco_probabilist": 50, "tractogram_disco_ptt": 50, "096": [68, 69, 264], "trial": [179, 182, 238], "out_correct": [182, 196], "biasfield_correct": [182, 196], "cuda": [182, 196], "biasfieldcorrectionflow": 183, "dipy_correct_biasfield": 239, "3487": 254, "3490": 254, "3489": 254, "3475": 254, "biasfield": 254, "3485": 254, "modulo": 254, "3486": 254, "3483": 254, "3471": 254, "3477": 254, "3461": 254, "3479": 254, "3482": 254, "dirti": 254, "3480": 254, "3476": 254, "generate_tractogram": 254, "3478": 254, "3458": 254, "3438": 254, "dipy_fit_": 254, "3462": 254, "3470": 254, "3472": 254, "3449": 254, "3465": 254, "3459": 254, "3446": 254, "3467": 254, "3457": 254, "3456": 254, "3444": 254, "dipy_extract_": 254, "3089": 254, "3448": 254, "3442": 254, "3445": 254, "3400": 254, "3440": 254, "3441": 254, "3427": 254, "3432": 254, "3436": 254, "3433": 254, "have_delaunai": 254, "3434": 254, "randomst": 254, "3430": 254, "3428": 254, "3426": 254, "3423": 254, "3421": 254, "3422": 254, "3364": 254, "3484": 254, "3371": 254, "miscalcul": 254, "3112": 254, "3190": 254, "3469": 254, "sslcertverificationerror": 254, "3152": 254, "realign": 254, "2421": 254, "3164": 254, "mpl_tri": 254, "3454": 254, "3466": 254, "3463": 254, "3451": 254, "3179": 254, "3359": 254, "3460": 254, "3394": 254, "1501": 254, "prioriti": 254, "834": 254, "3443": 254, "urllib": 254, "3431": 254, "2364": 254, "3016": 254, "wigner": 254, "3276": 254, "2304": 254, "2705": 254, "3416": 254}, "objects": {"": [[167, 0, 0, "-", "dipy"]], "dipy": [[168, 0, 0, "-", "align"], [169, 0, 0, "-", "core"], [170, 0, 0, "-", "data"], [171, 0, 0, "-", "denoise"], [172, 0, 0, "-", "direction"], [167, 2, 1, "", "get_info"], [173, 0, 0, "-", "io"], [174, 0, 0, "-", "nn"], [175, 0, 0, "-", "reconst"], [176, 0, 0, "-", "segment"], [177, 0, 0, "-", "sims"], [178, 0, 0, "-", "stats"], [179, 0, 0, "-", "tracking"], [180, 0, 0, "-", "version"], [181, 0, 0, "-", "viz"], [182, 0, 0, "-", "workflows"]], "dipy.align": [[168, 1, 1, "", "Bunch"], [168, 0, 0, "-", "_public"], [168, 0, 0, "-", "cpd"], [168, 0, 0, "-", "imaffine"], [168, 0, 0, "-", "imwarp"], [168, 0, 0, "-", "metrics"], [168, 0, 0, "-", "reslice"], [168, 0, 0, "-", "scalespace"], [168, 0, 0, "-", "streamlinear"], [168, 0, 0, "-", "streamwarp"]], "dipy.align._public": [[168, 2, 1, "", "affine"], [168, 2, 1, "", "affine_registration"], [168, 2, 1, "", "center_of_mass"], [168, 2, 1, "", "motion_correction"], [168, 2, 1, "", "read_mapping"], [168, 2, 1, "", "register_dwi_series"], [168, 2, 1, "", "register_dwi_to_template"], [168, 2, 1, "", "register_series"], [168, 2, 1, "", "resample"], [168, 2, 1, "", "rigid"], [168, 2, 1, "", "rigid_isoscaling"], [168, 2, 1, "", "rigid_scaling"], [168, 2, 1, "", "streamline_registration"], [168, 2, 1, "", "syn_registration"], [168, 2, 1, "", "translation"], [168, 2, 1, "", "write_mapping"]], "dipy.align.cpd": [[168, 1, 1, "", "DeformableRegistration"], [168, 2, 1, "", "gaussian_kernel"], [168, 2, 1, "", "initialize_sigma2"], [168, 2, 1, "", "low_rank_eigen"], [168, 2, 1, "", "lowrankQS"]], "dipy.align.cpd.DeformableRegistration": [[168, 3, 1, "", "expectation"], [168, 3, 1, "", "get_registration_parameters"], [168, 3, 1, "", "iterate"], [168, 3, 1, "", "maximization"], [168, 3, 1, "", "register"], [168, 3, 1, "", "transform_point_cloud"], [168, 3, 1, "", "update_transform"], [168, 3, 1, "", "update_variance"]], "dipy.align.imaffine": [[168, 1, 1, "", "AffineInvalidValuesError"], [168, 1, 1, "", "AffineInversionError"], [168, 1, 1, "", "AffineMap"], [168, 1, 1, "", "AffineRegistration"], [168, 1, 1, "", "MutualInformationMetric"], [168, 2, 1, "", "transform_centers_of_mass"], [168, 2, 1, "", "transform_geometric_centers"], [168, 2, 1, "", "transform_origins"]], "dipy.align.imaffine.AffineMap": [[168, 3, 1, "", "get_affine"], [168, 3, 1, "", "set_affine"], [168, 3, 1, "", "transform"], [168, 3, 1, "", "transform_inverse"]], "dipy.align.imaffine.AffineRegistration": [[168, 3, 1, "", "optimize"]], "dipy.align.imaffine.MutualInformationMetric": [[168, 3, 1, "", "distance"], [168, 3, 1, "", "distance_and_gradient"], [168, 3, 1, "", "gradient"], [168, 3, 1, "", "setup"]], "dipy.align.imwarp": [[168, 1, 1, "", "DiffeomorphicMap"], [168, 1, 1, "", "DiffeomorphicRegistration"], [168, 1, 1, "", "SymmetricDiffeomorphicRegistration"], [168, 2, 1, "", "get_direction_and_spacings"], [168, 2, 1, "", "mult_aff"]], "dipy.align.imwarp.DiffeomorphicMap": [[168, 3, 1, "", "allocate"], [168, 3, 1, "", "compute_inversion_error"], [168, 3, 1, "", "expand_fields"], [168, 3, 1, "", "get_backward_field"], [168, 3, 1, "", "get_forward_field"], [168, 3, 1, "", "get_simplified_transform"], [168, 3, 1, "", "interpret_matrix"], [168, 3, 1, "", "inverse"], [168, 3, 1, "", "shallow_copy"], [168, 3, 1, "", "transform"], [168, 3, 1, "", "transform_inverse"], [168, 3, 1, "", "transform_points"], [168, 3, 1, "", "transform_points_inverse"], [168, 3, 1, "", "warp_endomorphism"]], "dipy.align.imwarp.DiffeomorphicRegistration": [[168, 3, 1, "", "get_map"], [168, 3, 1, "", "optimize"], [168, 3, 1, "", "set_level_iters"]], "dipy.align.imwarp.SymmetricDiffeomorphicRegistration": [[168, 3, 1, "", "get_map"], [168, 3, 1, "", "optimize"], [168, 3, 1, "", "update"]], "dipy.align.metrics": [[168, 1, 1, "", "CCMetric"], [168, 1, 1, "", "EMMetric"], [168, 1, 1, "", "SSDMetric"], [168, 1, 1, "", "SimilarityMetric"], [168, 2, 1, "", "v_cycle_2d"], [168, 2, 1, "", "v_cycle_3d"]], "dipy.align.metrics.CCMetric": [[168, 3, 1, "", "compute_backward"], [168, 3, 1, "", "compute_forward"], [168, 3, 1, "", "free_iteration"], [168, 3, 1, "", "get_energy"], [168, 3, 1, "", "initialize_iteration"]], "dipy.align.metrics.EMMetric": [[168, 3, 1, "", "compute_backward"], [168, 3, 1, "", "compute_demons_step"], [168, 3, 1, "", "compute_forward"], [168, 3, 1, "", "compute_gauss_newton_step"], [168, 3, 1, "", "free_iteration"], [168, 3, 1, "", "get_energy"], [168, 3, 1, "", "initialize_iteration"], [168, 3, 1, "", "use_moving_image_dynamics"], [168, 3, 1, "", "use_static_image_dynamics"]], "dipy.align.metrics.SSDMetric": [[168, 3, 1, "", "compute_backward"], [168, 3, 1, "", "compute_demons_step"], [168, 3, 1, "", "compute_forward"], [168, 3, 1, "", "compute_gauss_newton_step"], [168, 3, 1, "", "free_iteration"], [168, 3, 1, "", "get_energy"], [168, 3, 1, "", "initialize_iteration"]], "dipy.align.metrics.SimilarityMetric": [[168, 3, 1, "", "compute_backward"], [168, 3, 1, "", "compute_forward"], [168, 3, 1, "", "free_iteration"], [168, 3, 1, "", "get_energy"], [168, 3, 1, "", "initialize_iteration"], [168, 3, 1, "", "set_levels_above"], [168, 3, 1, "", "set_levels_below"], [168, 3, 1, "", "set_moving_image"], [168, 3, 1, "", "set_static_image"], [168, 3, 1, "", "use_moving_image_dynamics"], [168, 3, 1, "", "use_static_image_dynamics"]], "dipy.align.reslice": [[168, 2, 1, "", "reslice"]], "dipy.align.scalespace": [[168, 1, 1, "", "IsotropicScaleSpace"], [168, 1, 1, "", "ScaleSpace"]], "dipy.align.scalespace.ScaleSpace": [[168, 3, 1, "", "get_affine"], [168, 3, 1, "", "get_affine_inv"], [168, 3, 1, "", "get_domain_shape"], [168, 3, 1, "", "get_expand_factors"], [168, 3, 1, "", "get_image"], [168, 3, 1, "", "get_scaling"], [168, 3, 1, "", "get_sigmas"], [168, 3, 1, "", "get_spacing"], [168, 3, 1, "", "print_level"]], "dipy.align.streamlinear": [[168, 1, 1, "", "BundleMinDistanceAsymmetricMetric"], [168, 1, 1, "", "BundleMinDistanceMatrixMetric"], [168, 1, 1, "", "BundleMinDistanceMetric"], [168, 1, 1, "", "BundleSumDistanceMatrixMetric"], [168, 1, 1, "", "JointBundleMinDistanceMetric"], [168, 1, 1, "", "JointStreamlineRegistrationMap"], [168, 1, 1, "", "StreamlineDistanceMetric"], [168, 1, 1, "", "StreamlineLinearRegistration"], [168, 1, 1, "", "StreamlineRegistrationMap"], [168, 2, 1, "", "bundle_min_distance"], [168, 2, 1, "", "bundle_min_distance_asymmetric_fast"], [168, 2, 1, "", "bundle_min_distance_fast"], [168, 2, 1, "", "bundle_sum_distance"], [168, 2, 1, "", "compose_matrix44"], [168, 2, 1, "", "decompose_matrix44"], [168, 2, 1, "", "get_unique_pairs"], [168, 2, 1, "", "groupwise_slr"], [168, 2, 1, "", "progressive_slr"], [168, 2, 1, "", "remove_clusters_by_size"], [168, 2, 1, "", "slr_with_qbx"]], "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric": [[168, 3, 1, "", "distance"]], "dipy.align.streamlinear.BundleMinDistanceMatrixMetric": [[168, 3, 1, "", "distance"], [168, 3, 1, "", "setup"]], "dipy.align.streamlinear.BundleMinDistanceMetric": [[168, 3, 1, "", "distance"], [168, 3, 1, "", "setup"]], "dipy.align.streamlinear.BundleSumDistanceMatrixMetric": [[168, 3, 1, "", "distance"]], "dipy.align.streamlinear.JointBundleMinDistanceMetric": [[168, 3, 1, "", "distance"], [168, 3, 1, "", "setup"]], "dipy.align.streamlinear.JointStreamlineRegistrationMap": [[168, 3, 1, "", "transform"]], "dipy.align.streamlinear.StreamlineDistanceMetric": [[168, 3, 1, "", "distance"], [168, 3, 1, "", "setup"]], "dipy.align.streamlinear.StreamlineLinearRegistration": [[168, 3, 1, "", "optimize"]], "dipy.align.streamlinear.StreamlineRegistrationMap": [[168, 3, 1, "", "transform"]], "dipy.align.streamwarp": [[168, 2, 1, "", "average_bundle_length"], [168, 2, 1, "", "bundlewarp"], [168, 2, 1, "", "bundlewarp_shape_analysis"], [168, 2, 1, "", "bundlewarp_vector_filed"], [168, 2, 1, "", "find_missing"]], "dipy.core": [[169, 0, 0, "-", "geometry"], [169, 0, 0, "-", "gradients"], [169, 0, 0, "-", "graph"], [169, 0, 0, "-", "histeq"], [169, 0, 0, "-", "ndindex"], [169, 0, 0, "-", "onetime"], [169, 0, 0, "-", "optimize"], [169, 0, 0, "-", "profile"], [169, 0, 0, "-", "rng"], [169, 0, 0, "-", "sphere"], [169, 0, 0, "-", "sphere_stats"], [169, 0, 0, "-", "subdivide_octahedron"], [169, 0, 0, "-", "wavelet"]], "dipy.core.geometry": [[169, 2, 1, "", "cart2sphere"], [169, 2, 1, "", "cart_distance"], [169, 2, 1, "", "circumradius"], [169, 2, 1, "", "compose_matrix"], [169, 2, 1, "", "compose_transformations"], [169, 2, 1, "", "decompose_matrix"], [169, 2, 1, "", "dist_to_corner"], [169, 2, 1, "", "euler_matrix"], [169, 2, 1, "", "is_hemispherical"], [169, 2, 1, "", "lambert_equal_area_projection_cart"], [169, 2, 1, "", "lambert_equal_area_projection_polar"], [169, 2, 1, "", "nearest_pos_semi_def"], [169, 2, 1, "", "normalized_vector"], [169, 2, 1, "", "perpendicular_directions"], [169, 2, 1, "", "rodrigues_axis_rotation"], [169, 2, 1, "", "sph2latlon"], [169, 2, 1, "", "sphere2cart"], [169, 2, 1, "", "sphere_distance"], [169, 2, 1, "", "vec2vec_rotmat"], [169, 2, 1, "", "vector_cosine"], [169, 2, 1, "", "vector_norm"]], "dipy.core.gradients": [[169, 1, 1, "", "GradientTable"], [169, 2, 1, "", "b0_threshold_empty_gradient_message"], [169, 2, 1, "", "b0_threshold_update_slicing_message"], [169, 2, 1, "", "btens_to_params"], [169, 2, 1, "", "check_multi_b"], [169, 2, 1, "", "extract_b0"], [169, 2, 1, "", "extract_dwi_shell"], [169, 2, 1, "", "generate_bvecs"], [169, 2, 1, "", "get_bval_indices"], [169, 2, 1, "", "gradient_table"], [169, 2, 1, "", "gradient_table_from_bvals_bvecs"], [169, 2, 1, "", "gradient_table_from_gradient_strength_bvecs"], [169, 2, 1, "", "gradient_table_from_qvals_bvecs"], [169, 2, 1, "", "mask_non_weighted_bvals"], [169, 2, 1, "", "orientation_from_string"], [169, 2, 1, "", "orientation_to_string"], [169, 2, 1, "", "ornt_mapping"], [169, 2, 1, "", "params_to_btens"], [169, 2, 1, "", "reorient_bvecs"], [169, 2, 1, "", "reorient_on_axis"], [169, 2, 1, "", "reorient_vectors"], [169, 2, 1, "", "round_bvals"], [169, 2, 1, "", "unique_bvals_magnitude"], [169, 2, 1, "", "unique_bvals_tolerance"]], "dipy.core.gradients.GradientTable": [[169, 3, 1, "", "b0s_mask"], [169, 3, 1, "", "bvals"], [169, 3, 1, "", "bvecs"], [169, 3, 1, "", "gradient_strength"], [169, 4, 1, "", "info"], [169, 3, 1, "", "qvals"], [169, 3, 1, "", "tau"]], "dipy.core.graph": [[169, 1, 1, "", "Graph"]], "dipy.core.graph.Graph": [[169, 3, 1, "", "add_edge"], [169, 3, 1, "", "add_node"], [169, 3, 1, "", "all_paths"], [169, 3, 1, "", "children"], [169, 3, 1, "", "del_node"], [169, 3, 1, "", "del_node_and_edges"], [169, 3, 1, "", "down"], [169, 3, 1, "", "down_short"], [169, 3, 1, "", "parents"], [169, 3, 1, "", "shortest_path"], [169, 3, 1, "", "up"], [169, 3, 1, "", "up_short"]], "dipy.core.histeq": [[169, 2, 1, "", "histeq"]], "dipy.core.ndindex": [[169, 2, 1, "", "ndindex"]], "dipy.core.onetime": [[169, 1, 1, "", "OneTimeProperty"], [169, 1, 1, "", "ResetMixin"], [169, 2, 1, "", "auto_attr"]], "dipy.core.onetime.ResetMixin": [[169, 3, 1, "", "reset"]], "dipy.core.optimize": [[169, 1, 1, "", "NonNegativeLeastSquares"], [169, 1, 1, "", "Optimizer"], [169, 1, 1, "", "PositiveDefiniteLeastSquares"], [169, 1, 1, "", "SKLearnLinearSolver"], [169, 2, 1, "", "sparse_nnls"], [169, 2, 1, "", "spdot"]], "dipy.core.optimize.NonNegativeLeastSquares": [[169, 3, 1, "", "fit"]], "dipy.core.optimize.Optimizer": [[169, 4, 1, "", "evolution"], [169, 4, 1, "", "fopt"], [169, 4, 1, "", "message"], [169, 4, 1, "", "nfev"], [169, 4, 1, "", "nit"], [169, 3, 1, "", "print_summary"], [169, 4, 1, "", "xopt"]], "dipy.core.optimize.PositiveDefiniteLeastSquares": [[169, 3, 1, "", "solve"]], "dipy.core.optimize.SKLearnLinearSolver": [[169, 3, 1, "", "fit"], [169, 3, 1, "", "predict"]], "dipy.core.profile": [[169, 1, 1, "", "Profiler"]], "dipy.core.profile.Profiler": [[169, 3, 1, "", "print_stats"]], "dipy.core.rng": [[169, 2, 1, "", "LEcuyer"], [169, 2, 1, "", "WichmannHill1982"], [169, 2, 1, "", "WichmannHill2006"]], "dipy.core.sphere": [[169, 1, 1, "", "HemiSphere"], [169, 1, 1, "", "Sphere"], [169, 2, 1, "", "disperse_charges"], [169, 2, 1, "", "disperse_charges_alt"], [169, 2, 1, "", "euler_characteristic_check"], [169, 2, 1, "", "faces_from_sphere_vertices"], [169, 2, 1, "", "fibonacci_sphere"], [169, 2, 1, "", "unique_edges"], [169, 2, 1, "", "unique_sets"]], "dipy.core.sphere.HemiSphere": [[169, 3, 1, "", "faces"], [169, 3, 1, "", "find_closest"], [169, 3, 1, "", "from_sphere"], [169, 3, 1, "", "mirror"], [169, 3, 1, "", "subdivide"]], "dipy.core.sphere.Sphere": [[169, 3, 1, "", "edges"], [169, 3, 1, "", "faces"], [169, 3, 1, "", "find_closest"], [169, 3, 1, "", "subdivide"], [169, 3, 1, "", "vertices"], [169, 4, 1, "", "x"], [169, 4, 1, "", "y"], [169, 4, 1, "", "z"]], "dipy.core.sphere_stats": [[169, 2, 1, "", "angular_similarity"], [169, 2, 1, "", "compare_orientation_sets"], [169, 2, 1, "", "eigenstats"], [169, 2, 1, "", "random_uniform_on_sphere"]], "dipy.core.subdivide_octahedron": [[169, 2, 1, "", "create_unit_hemisphere"], [169, 2, 1, "", "create_unit_sphere"]], "dipy.core.wavelet": [[169, 2, 1, "", "afb3D"], [169, 2, 1, "", "afb3D_A"], [169, 2, 1, "", "cshift3D"], [169, 2, 1, "", "dwt3D"], [169, 2, 1, "", "idwt3D"], [169, 2, 1, "", "permutationinverse"], [169, 2, 1, "", "sfb3D"], [169, 2, 1, "", "sfb3D_A"]], "dipy.data": [[170, 1, 1, "", "DataError"], [170, 2, 1, "", "dsi_deconv_voxels"], [170, 2, 1, "", "dsi_voxels"], [170, 0, 0, "-", "fetcher"], [170, 2, 1, "", "get_3shell_gtab"], [170, 2, 1, "", "get_cmap"], [170, 2, 1, "", "get_gtab_taiwan_dsi"], [170, 2, 1, "", "get_isbi2013_2shell_gtab"], [170, 2, 1, "", "get_sim_voxels"], [170, 2, 1, "", "get_skeleton"], [170, 2, 1, "", "get_sphere"], [170, 2, 1, "", "load_sdp_constraints"], [170, 2, 1, "", "loads_compat"], [170, 2, 1, "", "matlab_life_results"], [170, 2, 1, "", "mrtrix_spherical_functions"], [170, 2, 1, "", "two_cingulum_bundles"]], "dipy.data.fetcher": [[170, 2, 1, "", "check_md5"], [170, 2, 1, "", "copyfileobj_withprogress"], [170, 2, 1, "", "extract_example_tracts"], [170, 2, 1, "", "fetch_30_bundle_atlas_hcp842"], [170, 2, 1, "", "fetch_DiB_217_lte_pte_ste"], [170, 2, 1, "", "fetch_DiB_70_lte_pte_ste"], [170, 2, 1, "", "fetch_bundle_atlas_hcp842"], [170, 2, 1, "", "fetch_bundle_fa_hcp"], [170, 2, 1, "", "fetch_bundle_warp_dataset"], [170, 2, 1, "", "fetch_bundles_2_subjects"], [170, 2, 1, "", "fetch_cenir_multib"], [170, 2, 1, "", "fetch_cfin_multib"], [170, 2, 1, "", "fetch_cti_rat1"], [170, 2, 1, "", "fetch_data"], [170, 2, 1, "", "fetch_deepn4_test"], [170, 2, 1, "", "fetch_deepn4_tf_weights"], [170, 2, 1, "", "fetch_deepn4_torch_weights"], [170, 2, 1, "", "fetch_disco1_dataset"], [170, 2, 1, "", "fetch_disco2_dataset"], [170, 2, 1, "", "fetch_disco3_dataset"], [170, 2, 1, "", "fetch_disco_dataset"], [170, 2, 1, "", "fetch_evac_test"], [170, 2, 1, "", "fetch_evac_tf_weights"], [170, 2, 1, "", "fetch_evac_torch_weights"], [170, 2, 1, "", "fetch_file_formats"], [170, 2, 1, "", "fetch_fury_surface"], [170, 2, 1, "", "fetch_gold_standard_io"], [170, 2, 1, "", "fetch_hbn"], [170, 2, 1, "", "fetch_hcp"], [170, 2, 1, "", "fetch_isbi2013_2shell"], [170, 2, 1, "", "fetch_ivim"], [170, 2, 1, "", "fetch_mni_template"], [170, 2, 1, "", "fetch_ptt_minimal_dataset"], [170, 2, 1, "", "fetch_qtdMRI_test_retest_2subjects"], [170, 2, 1, "", "fetch_qte_lte_pte"], [170, 2, 1, "", "fetch_resdnn_tf_weights"], [170, 2, 1, "", "fetch_resdnn_torch_weights"], [170, 2, 1, "", "fetch_scil_b0"], [170, 2, 1, "", "fetch_sherbrooke_3shell"], [170, 2, 1, "", "fetch_stanford_hardi"], [170, 2, 1, "", "fetch_stanford_labels"], [170, 2, 1, "", "fetch_stanford_pve_maps"], [170, 2, 1, "", "fetch_stanford_t1"], [170, 2, 1, "", "fetch_stanford_tracks"], [170, 2, 1, "", "fetch_syn_data"], [170, 2, 1, "", "fetch_synb0_test"], [170, 2, 1, "", "fetch_synb0_weights"], [170, 2, 1, "", "fetch_taiwan_ntu_dsi"], [170, 2, 1, "", "fetch_target_tractogram_hcp"], [170, 2, 1, "", "fetch_tissue_data"], [170, 2, 1, "", "get_bundle_atlas_hcp842"], [170, 2, 1, "", "get_file_formats"], [170, 2, 1, "", "get_fnames"], [170, 2, 1, "", "get_target_tractogram_hcp"], [170, 2, 1, "", "get_two_hcp842_bundles"], [170, 2, 1, "", "read_DiB_217_lte_pte_ste"], [170, 2, 1, "", "read_DiB_70_lte_pte_ste"], [170, 2, 1, "", "read_bundles_2_subjects"], [170, 2, 1, "", "read_cenir_multib"], [170, 2, 1, "", "read_cfin_dwi"], [170, 2, 1, "", "read_cfin_t1"], [170, 2, 1, "", "read_five_af_bundles"], [170, 2, 1, "", "read_isbi2013_2shell"], [170, 2, 1, "", "read_ivim"], [170, 2, 1, "", "read_mni_template"], [170, 2, 1, "", "read_qtdMRI_test_retest_2subjects"], [170, 2, 1, "", "read_qte_lte_pte"], [170, 2, 1, "", "read_scil_b0"], [170, 2, 1, "", "read_sherbrooke_3shell"], [170, 2, 1, "", "read_siemens_scil_b0"], [170, 2, 1, "", "read_stanford_hardi"], [170, 2, 1, "", "read_stanford_labels"], [170, 2, 1, "", "read_stanford_pve_maps"], [170, 2, 1, "", "read_stanford_t1"], [170, 2, 1, "", "read_syn_data"], [170, 2, 1, "", "read_taiwan_ntu_dsi"], [170, 2, 1, "", "read_tissue_data"], [170, 2, 1, "", "to_bids_description"]], "dipy.denoise": [[171, 0, 0, "-", "adaptive_soft_matching"], [171, 0, 0, "-", "gibbs"], [171, 0, 0, "-", "localpca"], [171, 0, 0, "-", "nlmeans"], [171, 0, 0, "-", "noise_estimate"], [171, 0, 0, "-", "non_local_means"], [171, 0, 0, "-", "patch2self"]], "dipy.denoise.adaptive_soft_matching": [[171, 2, 1, "", "adaptive_soft_matching"]], "dipy.denoise.gibbs": [[171, 2, 1, "", "gibbs_removal"]], "dipy.denoise.localpca": [[171, 2, 1, "", "compute_num_samples"], [171, 2, 1, "", "compute_patch_size"], [171, 2, 1, "", "compute_suggested_patch_radius"], [171, 2, 1, "", "create_patch_radius_arr"], [171, 2, 1, "", "dimensionality_problem_message"], [171, 2, 1, "", "genpca"], [171, 2, 1, "", "localpca"], [171, 2, 1, "", "mppca"]], "dipy.denoise.nlmeans": [[171, 2, 1, "", "nlmeans"]], "dipy.denoise.noise_estimate": [[171, 2, 1, "", "estimate_sigma"], [171, 2, 1, "", "piesno"]], "dipy.denoise.non_local_means": [[171, 2, 1, "", "non_local_means"]], "dipy.denoise.patch2self": [[171, 2, 1, "", "patch2self"], [171, 2, 1, "", "vol_denoise"]], "dipy.direction": [[172, 0, 0, "-", "peaks"]], "dipy.direction.peaks": [[172, 1, 1, "", "PeaksAndMetrics"], [172, 2, 1, "", "peak_directions_nl"], [172, 2, 1, "", "peaks_from_model"], [172, 2, 1, "", "peaks_from_positions"], [172, 2, 1, "", "reshape_peaks_for_visualization"]], "dipy.io": [[173, 0, 0, "-", "dpy"], [173, 0, 0, "-", "gradients"], [173, 0, 0, "-", "image"], [173, 0, 0, "-", "peaks"], [173, 0, 0, "-", "pickles"], [173, 0, 0, "-", "stateful_tractogram"], [173, 0, 0, "-", "streamline"], [173, 0, 0, "-", "surface"], [173, 0, 0, "-", "utils"], [173, 0, 0, "-", "vtk"]], "dipy.io.dpy": [[173, 1, 1, "", "Dpy"]], "dipy.io.dpy.Dpy": [[173, 3, 1, "", "close"], [173, 3, 1, "", "read_track"], [173, 3, 1, "", "read_tracks"], [173, 3, 1, "", "read_tracksi"], [173, 3, 1, "", "version"], [173, 3, 1, "", "write_track"], [173, 3, 1, "", "write_tracks"]], "dipy.io.gradients": [[173, 2, 1, "", "read_bvals_bvecs"]], "dipy.io.image": [[173, 2, 1, "", "load_nifti"], [173, 2, 1, "", "load_nifti_data"], [173, 2, 1, "", "save_nifti"], [173, 2, 1, "", "save_qa_metric"]], "dipy.io.peaks": [[173, 2, 1, "", "load_pam"], [173, 2, 1, "", "load_peaks"], [173, 2, 1, "", "niftis_to_pam"], [173, 2, 1, "", "pam_to_niftis"], [173, 2, 1, "", "peaks_to_niftis"], [173, 2, 1, "", "save_pam"], [173, 2, 1, "", "save_peaks"], [173, 2, 1, "", "tensor_to_pam"]], "dipy.io.pickles": [[173, 2, 1, "", "load_pickle"], [173, 2, 1, "", "save_pickle"]], "dipy.io.stateful_tractogram": [[173, 1, 1, "", "Origin"], [173, 1, 1, "", "Space"], [173, 1, 1, "", "StatefulTractogram"]], "dipy.io.stateful_tractogram.Origin": [[173, 5, 1, "", "NIFTI"], [173, 5, 1, "", "TRACKVIS"]], "dipy.io.stateful_tractogram.Space": [[173, 5, 1, "", "RASMM"], [173, 5, 1, "", "VOX"], [173, 5, 1, "", "VOXMM"]], "dipy.io.stateful_tractogram.StatefulTractogram": [[173, 4, 1, "", "affine"], [173, 3, 1, "", "are_compatible"], [173, 3, 1, "", "compute_bounding_box"], [173, 4, 1, "", "data_per_point"], [173, 4, 1, "", "data_per_streamline"], [173, 4, 1, "", "dimensions"], [173, 4, 1, "", "dtype_dict"], [173, 3, 1, "", "from_sft"], [173, 3, 1, "", "get_data_per_point_keys"], [173, 3, 1, "", "get_data_per_streamline_keys"], [173, 3, 1, "", "get_streamlines_copy"], [173, 3, 1, "", "is_bbox_in_vox_valid"], [173, 4, 1, "", "origin"], [173, 3, 1, "", "remove_invalid_streamlines"], [173, 4, 1, "", "space"], [173, 4, 1, "", "space_attributes"], [173, 4, 1, "", "streamlines"], [173, 3, 1, "", "to_center"], [173, 3, 1, "", "to_corner"], [173, 3, 1, "", "to_origin"], [173, 3, 1, "", "to_rasmm"], [173, 3, 1, "", "to_space"], [173, 3, 1, "", "to_vox"], [173, 3, 1, "", "to_voxmm"], [173, 4, 1, "", "voxel_order"], [173, 4, 1, "", "voxel_sizes"]], "dipy.io.streamline": [[173, 2, 1, "", "load_dpy"], [173, 2, 1, "", "load_fib"], [173, 2, 1, "", "load_generator"], [173, 2, 1, "", "load_tck"], [173, 2, 1, "", "load_tractogram"], [173, 2, 1, "", "load_trk"], [173, 2, 1, "", "load_trx"], [173, 2, 1, "", "load_vtk"], [173, 2, 1, "", "load_vtp"], [173, 2, 1, "", "save_dpy"], [173, 2, 1, "", "save_fib"], [173, 2, 1, "", "save_generator"], [173, 2, 1, "", "save_tck"], [173, 2, 1, "", "save_tractogram"], [173, 2, 1, "", "save_trk"], [173, 2, 1, "", "save_trx"], [173, 2, 1, "", "save_vtk"], [173, 2, 1, "", "save_vtp"]], "dipy.io.surface": [[173, 2, 1, "", "load_gifti"], [173, 2, 1, "", "load_pial"]], "dipy.io.utils": [[173, 2, 1, "", "create_nifti_header"], [173, 2, 1, "", "create_tractogram_header"], [173, 2, 1, "", "decfa"], [173, 2, 1, "", "decfa_to_float"], [173, 2, 1, "", "get_reference_info"], [173, 2, 1, "", "is_header_compatible"], [173, 2, 1, "", "is_reference_info_valid"], [173, 2, 1, "", "make5d"], [173, 2, 1, "", "nifti1_symmat"], [173, 2, 1, "", "read_img_arr_or_path"], [173, 2, 1, "", "save_buan_profiles_hdf5"], [173, 2, 1, "", "split_name_with_gz"]], "dipy.io.vtk": [[173, 2, 1, "", "load_polydata"], [173, 2, 1, "", "load_vtk_streamlines"], [173, 2, 1, "", "save_polydata"], [173, 2, 1, "", "save_vtk_streamlines"]], "dipy.nn": [[174, 0, 0, "-", "tf"], [174, 0, 0, "-", "torch"], [174, 0, 0, "-", "utils"]], "dipy.nn.tf": [[174, 0, 0, "-", "cnn_1d_denoising"], [174, 0, 0, "-", "deepn4"], [174, 0, 0, "-", "evac"], [174, 0, 0, "-", "histo_resdnn"], [174, 0, 0, "-", "model"], [174, 0, 0, "-", "synb0"]], "dipy.nn.tf.cnn_1d_denoising": [[174, 1, 1, "", "Cnn1DDenoiser"]], "dipy.nn.tf.cnn_1d_denoising.Cnn1DDenoiser": [[174, 3, 1, "", "compile"], [174, 3, 1, "", "evaluate"], [174, 3, 1, "", "fit"], [174, 3, 1, "", "load_weights"], [174, 3, 1, "", "predict"], [174, 3, 1, "", "save_weights"], [174, 3, 1, "", "summary"], [174, 3, 1, "", "train_test_split"]], "dipy.nn.tf.deepn4": [[174, 1, 1, "", "DecoderBlock"], [174, 1, 1, "", "DeepN4"], [174, 1, 1, "", "EncoderBlock"], [174, 2, 1, "", "UNet3D"]], "dipy.nn.tf.deepn4.DecoderBlock": [[174, 3, 1, "", "call"]], "dipy.nn.tf.deepn4.DeepN4": [[174, 3, 1, "", "fetch_default_weights"], [174, 3, 1, "", "load_model_weights"], [174, 3, 1, "", "load_resample"], [174, 3, 1, "", "pad"], [174, 3, 1, "", "predict"]], "dipy.nn.tf.deepn4.EncoderBlock": [[174, 3, 1, "", "call"]], "dipy.nn.tf.evac": [[174, 1, 1, "", "Block"], [174, 1, 1, "", "ChannelSum"], [174, 1, 1, "", "EVACPlus"], [174, 2, 1, "", "init_model"], [174, 2, 1, "", "prepare_img"]], "dipy.nn.tf.evac.Block": [[174, 3, 1, "", "call"]], "dipy.nn.tf.evac.ChannelSum": [[174, 3, 1, "", "call"]], "dipy.nn.tf.evac.EVACPlus": [[174, 3, 1, "", "fetch_default_weights"], [174, 3, 1, "", "load_model_weights"], [174, 3, 1, "", "predict"]], "dipy.nn.tf.histo_resdnn": [[174, 1, 1, "", "HistoResDNN"]], "dipy.nn.tf.histo_resdnn.HistoResDNN": [[174, 3, 1, "", "fetch_default_weights"], [174, 3, 1, "", "load_model_weights"], [174, 3, 1, "", "predict"]], "dipy.nn.tf.model": [[174, 1, 1, "", "MultipleLayerPercepton"], [174, 1, 1, "", "SingleLayerPerceptron"]], "dipy.nn.tf.model.MultipleLayerPercepton": [[174, 3, 1, "", "evaluate"], [174, 3, 1, "", "fit"], [174, 3, 1, "", "predict"], [174, 3, 1, "", "summary"]], "dipy.nn.tf.model.SingleLayerPerceptron": [[174, 3, 1, "", "evaluate"], [174, 3, 1, "", "fit"], [174, 3, 1, "", "predict"], [174, 3, 1, "", "summary"]], "dipy.nn.tf.synb0": [[174, 1, 1, "", "DecoderBlock"], [174, 1, 1, "", "EncoderBlock"], [174, 1, 1, "", "Synb0"], [174, 2, 1, "", "UNet3D"]], "dipy.nn.tf.synb0.DecoderBlock": [[174, 3, 1, "", "call"]], "dipy.nn.tf.synb0.EncoderBlock": [[174, 3, 1, "", "call"]], "dipy.nn.tf.synb0.Synb0": [[174, 3, 1, "", "fetch_default_weights"], [174, 3, 1, "", "load_model_weights"], [174, 3, 1, "", "predict"]], "dipy.nn.torch": [[174, 0, 0, "-", "deepn4"], [174, 0, 0, "-", "evac"], [174, 0, 0, "-", "histo_resdnn"]], "dipy.nn.torch.deepn4": [[174, 1, 1, "", "DeepN4"], [174, 1, 1, "", "UNet3D"]], "dipy.nn.torch.deepn4.DeepN4": [[174, 3, 1, "", "fetch_default_weights"], [174, 3, 1, "", "load_model_weights"], [174, 3, 1, "", "load_resample"], [174, 3, 1, "", "pad"], [174, 3, 1, "", "predict"]], "dipy.nn.torch.deepn4.UNet3D": [[174, 3, 1, "", "decoder_block"], [174, 3, 1, "", "encoder_block"], [174, 3, 1, "", "forward"]], "dipy.nn.torch.evac": [[174, 1, 1, "", "Add"], [174, 1, 1, "", "Block"], [174, 1, 1, "", "ChannelSum"], [174, 1, 1, "", "EVACPlus"], [174, 1, 1, "", "Model"], [174, 1, 1, "", "MoveDimLayer"], [174, 2, 1, "", "prepare_img"]], "dipy.nn.torch.evac.Add": [[174, 3, 1, "", "forward"]], "dipy.nn.torch.evac.Block": [[174, 3, 1, "", "forward"]], "dipy.nn.torch.evac.ChannelSum": [[174, 3, 1, "", "forward"]], "dipy.nn.torch.evac.EVACPlus": [[174, 3, 1, "", "fetch_default_weights"], [174, 3, 1, "", "init_model"], [174, 3, 1, "", "load_model_weights"], [174, 3, 1, "", "predict"]], "dipy.nn.torch.evac.Model": [[174, 3, 1, "", "forward"]], "dipy.nn.torch.evac.MoveDimLayer": [[174, 3, 1, "", "forward"]], "dipy.nn.torch.histo_resdnn": [[174, 1, 1, "", "DenseModel"], [174, 1, 1, "", "HistoResDNN"]], "dipy.nn.torch.histo_resdnn.DenseModel": [[174, 3, 1, "", "forward"]], "dipy.nn.torch.histo_resdnn.HistoResDNN": [[174, 3, 1, "", "fetch_default_weights"], [174, 3, 1, "", "load_model_weights"], [174, 3, 1, "", "predict"]], "dipy.nn.utils": [[174, 2, 1, "", "normalize"], [174, 2, 1, "", "pad_crop"], [174, 2, 1, "", "recover_img"], [174, 2, 1, "", "transform_img"], [174, 2, 1, "", "unnormalize"]], "dipy.reconst": [[175, 0, 0, "-", "base"], [175, 0, 0, "-", "bingham"], [175, 0, 0, "-", "cache"], [175, 0, 0, "-", "cross_validation"], [175, 0, 0, "-", "csdeconv"], [175, 0, 0, "-", "cti"], [175, 0, 0, "-", "dki"], [175, 0, 0, "-", "dki_micro"], [175, 0, 0, "-", "dsi"], [175, 0, 0, "-", "dti"], [175, 0, 0, "-", "forecast"], [175, 0, 0, "-", "fwdti"], [175, 0, 0, "-", "gqi"], [175, 0, 0, "-", "ivim"], [175, 0, 0, "-", "mapmri"], [175, 0, 0, "-", "mcsd"], [175, 0, 0, "-", "msdki"], [175, 0, 0, "-", "multi_voxel"], [175, 0, 0, "-", "odf"], [175, 0, 0, "-", "qtdmri"], [175, 0, 0, "-", "qti"], [175, 0, 0, "-", "rumba"], [175, 0, 0, "-", "sfm"], [175, 0, 0, "-", "shm"], [175, 0, 0, "-", "shore"], [175, 0, 0, "-", "utils"], [175, 0, 0, "-", "weights_method"]], "dipy.reconst.base": [[175, 1, 1, "", "ReconstFit"], [175, 1, 1, "", "ReconstModel"]], "dipy.reconst.base.ReconstModel": [[175, 3, 1, "", "fit"]], "dipy.reconst.bingham": [[175, 1, 1, "", "BinghamMetrics"], [175, 2, 1, "", "bingham_fiber_density"], [175, 2, 1, "", "bingham_fiber_spread"], [175, 2, 1, "", "bingham_to_sf"], [175, 2, 1, "", "k2odi"], [175, 2, 1, "", "odi2k"], [175, 2, 1, "", "sf_to_bingham"], [175, 2, 1, "", "sh_to_bingham"], [175, 2, 1, "", "weighted_voxel_metric"]], "dipy.reconst.bingham.BinghamMetrics": [[175, 3, 1, "", "amplitude_lobe"], [175, 3, 1, "", "fd_lobe"], [175, 3, 1, "", "fd_voxel"], [175, 3, 1, "", "fs_lobe"], [175, 3, 1, "", "fs_voxel"], [175, 3, 1, "", "kappa1_lobe"], [175, 3, 1, "", "kappa2_lobe"], [175, 3, 1, "", "kappa_total_lobe"], [175, 3, 1, "", "odf"], [175, 3, 1, "", "odi1_lobe"], [175, 3, 1, "", "odi1_voxel"], [175, 3, 1, "", "odi2_lobe"], [175, 3, 1, "", "odi2_voxel"], [175, 3, 1, "", "odi_total_lobe"], [175, 3, 1, "", "odi_total_voxel"]], "dipy.reconst.cache": [[175, 1, 1, "", "Cache"]], "dipy.reconst.cache.Cache": [[175, 3, 1, "", "cache_clear"], [175, 3, 1, "", "cache_get"], [175, 3, 1, "", "cache_set"]], "dipy.reconst.cross_validation": [[175, 2, 1, "", "coeff_of_determination"], [175, 2, 1, "", "kfold_xval"]], "dipy.reconst.csdeconv": [[175, 1, 1, "", "AxSymShResponse"], [175, 1, 1, "", "ConstrainedSDTModel"], [175, 1, 1, "", "ConstrainedSphericalDeconvModel"], [175, 2, 1, "", "auto_response_ssst"], [175, 2, 1, "", "csdeconv"], [175, 2, 1, "", "estimate_response"], [175, 2, 1, "", "fa_trace_to_lambdas"], [175, 2, 1, "", "forward_sdt_deconv_mat"], [175, 2, 1, "", "mask_for_response_ssst"], [175, 2, 1, "", "odf_deconv"], [175, 2, 1, "", "odf_sh_to_sharp"], [175, 2, 1, "", "recursive_response"], [175, 2, 1, "", "response_from_mask_ssst"]], "dipy.reconst.csdeconv.AxSymShResponse": [[175, 3, 1, "", "basis"], [175, 3, 1, "", "on_sphere"]], "dipy.reconst.csdeconv.ConstrainedSDTModel": [[175, 3, 1, "", "fit"]], "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel": [[175, 3, 1, "", "fit"], [175, 3, 1, "", "predict"]], "dipy.reconst.cti": [[175, 1, 1, "", "CorrelationTensorFit"], [175, 1, 1, "", "CorrelationTensorModel"], [175, 2, 1, "", "cti_prediction"], [175, 2, 1, "", "from_qte_to_cti"], [175, 2, 1, "", "ls_fit_cti"], [175, 2, 1, "", "multi_gaussian_k_from_c"], [175, 2, 1, "", "params_to_cti_params"], [175, 2, 1, "", "split_cti_params"]], "dipy.reconst.cti.CorrelationTensorFit": [[175, 4, 1, "", "K_aniso"], [175, 4, 1, "", "K_iso"], [175, 4, 1, "", "K_micro"], [175, 3, 1, "", "K_total"], [175, 4, 1, "", "ct"], [175, 3, 1, "", "predict"]], "dipy.reconst.cti.CorrelationTensorModel": [[175, 3, 1, "", "fit"], [175, 3, 1, "", "predict"]], "dipy.reconst.dki": [[175, 1, 1, "", "DiffusionKurtosisFit"], [175, 1, 1, "", "DiffusionKurtosisModel"], [175, 2, 1, "", "Wcons"], [175, 2, 1, "", "Wrotate"], [175, 2, 1, "", "Wrotate_element"], [175, 2, 1, "", "apparent_kurtosis_coef"], [175, 2, 1, "", "axial_kurtosis"], [175, 2, 1, "", "carlson_rd"], [175, 2, 1, "", "carlson_rf"], [175, 2, 1, "", "cls_fit_dki"], [175, 2, 1, "", "directional_diffusion"], [175, 2, 1, "", "directional_diffusion_variance"], [175, 2, 1, "", "directional_kurtosis"], [175, 2, 1, "", "dki_prediction"], [175, 2, 1, "", "kurtosis_fractional_anisotropy"], [175, 2, 1, "", "kurtosis_maximum"], [175, 2, 1, "", "ls_fit_dki"], [175, 2, 1, "", "mean_kurtosis"], [175, 2, 1, "", "mean_kurtosis_tensor"], [175, 2, 1, "", "params_to_dki_params"], [175, 2, 1, "", "radial_kurtosis"], [175, 2, 1, "", "radial_tensor_kurtosis"], [175, 2, 1, "", "split_dki_param"]], "dipy.reconst.dki.DiffusionKurtosisFit": [[175, 3, 1, "", "ak"], [175, 3, 1, "", "akc"], [175, 4, 1, "", "kfa"], [175, 3, 1, "", "kmax"], [175, 4, 1, "", "kt"], [175, 3, 1, "", "mk"], [175, 3, 1, "", "mkt"], [175, 3, 1, "", "predict"], [175, 3, 1, "", "rk"], [175, 3, 1, "", "rtk"]], "dipy.reconst.dki.DiffusionKurtosisModel": [[175, 3, 1, "", "fit"], [175, 3, 1, "", "iterative_fit"], [175, 3, 1, "", "multi_fit"], [175, 3, 1, "", "predict"]], "dipy.reconst.dki_micro": [[175, 1, 1, "", "KurtosisMicrostructuralFit"], [175, 1, 1, "", "KurtosisMicrostructureModel"], [175, 2, 1, "", "axonal_water_fraction"], [175, 2, 1, "", "diffusion_components"], [175, 2, 1, "", "dkimicro_prediction"], [175, 2, 1, "", "tortuosity"]], "dipy.reconst.dki_micro.KurtosisMicrostructuralFit": [[175, 4, 1, "", "awf"], [175, 4, 1, "", "axonal_diffusivity"], [175, 4, 1, "", "hindered_ad"], [175, 4, 1, "", "hindered_evals"], [175, 4, 1, "", "hindered_rd"], [175, 3, 1, "", "predict"], [175, 4, 1, "", "restricted_evals"], [175, 4, 1, "", "tortuosity"]], "dipy.reconst.dki_micro.KurtosisMicrostructureModel": [[175, 3, 1, "", "fit"], [175, 3, 1, "", "predict"]], "dipy.reconst.dsi": [[175, 1, 1, "", "DiffusionSpectrumDeconvFit"], [175, 1, 1, "", "DiffusionSpectrumDeconvModel"], [175, 1, 1, "", "DiffusionSpectrumFit"], [175, 1, 1, "", "DiffusionSpectrumModel"], [175, 2, 1, "", "LR_deconv"], [175, 2, 1, "", "create_qspace"], [175, 2, 1, "", "create_qtable"], [175, 2, 1, "", "gen_PSF"], [175, 2, 1, "", "half_to_full_qspace"], [175, 2, 1, "", "hanning_filter"], [175, 2, 1, "", "pdf_interp_coords"], [175, 2, 1, "", "pdf_odf"], [175, 2, 1, "", "project_hemisph_bvecs"], [175, 2, 1, "", "threshold_propagator"]], "dipy.reconst.dsi.DiffusionSpectrumDeconvFit": [[175, 3, 1, "", "pdf"]], "dipy.reconst.dsi.DiffusionSpectrumDeconvModel": [[175, 3, 1, "", "fit"]], "dipy.reconst.dsi.DiffusionSpectrumFit": [[175, 3, 1, "", "msd_discrete"], [175, 3, 1, "", "odf"], [175, 3, 1, "", "pdf"], [175, 3, 1, "", "rtop_pdf"], [175, 3, 1, "", "rtop_signal"]], "dipy.reconst.dsi.DiffusionSpectrumModel": [[175, 3, 1, "", "fit"]], "dipy.reconst.dti": [[175, 1, 1, "", "TensorFit"], [175, 1, 1, "", "TensorModel"], [175, 2, 1, "", "apparent_diffusion_coef"], [175, 2, 1, "", "axial_diffusivity"], [175, 2, 1, "", "color_fa"], [175, 2, 1, "", "decompose_tensor"], [175, 2, 1, "", "design_matrix"], [175, 2, 1, "", "determinant"], [175, 2, 1, "", "deviatoric"], [175, 2, 1, "", "eig_from_lo_tri"], [175, 2, 1, "", "fractional_anisotropy"], [175, 2, 1, "", "from_lower_triangular"], [175, 2, 1, "", "geodesic_anisotropy"], [175, 2, 1, "", "isotropic"], [175, 2, 1, "", "iter_fit_tensor"], [175, 2, 1, "", "iterative_fit_tensor"], [175, 2, 1, "", "linearity"], [175, 2, 1, "", "lower_triangular"], [175, 2, 1, "", "mean_diffusivity"], [175, 2, 1, "", "mode"], [175, 2, 1, "", "nlls_fit_tensor"], [175, 2, 1, "", "norm"], [175, 2, 1, "", "ols_fit_tensor"], [175, 2, 1, "", "planarity"], [175, 2, 1, "", "quantize_evecs"], [175, 2, 1, "", "radial_diffusivity"], [175, 2, 1, "", "restore_fit_tensor"], [175, 2, 1, "", "robust_fit_tensor_nlls"], [175, 2, 1, "", "robust_fit_tensor_wls"], [175, 2, 1, "", "sphericity"], [175, 2, 1, "", "tensor_prediction"], [175, 2, 1, "", "trace"], [175, 2, 1, "", "wls_fit_tensor"]], "dipy.reconst.dti.TensorFit": [[175, 4, 1, "", "S0_hat"], [175, 3, 1, "", "ad"], [175, 3, 1, "", "adc"], [175, 3, 1, "", "color_fa"], [175, 4, 1, "", "directions"], [175, 4, 1, "", "evals"], [175, 4, 1, "", "evecs"], [175, 3, 1, "", "fa"], [175, 3, 1, "", "ga"], [175, 3, 1, "", "linearity"], [175, 3, 1, "", "lower_triangular"], [175, 3, 1, "", "md"], [175, 3, 1, "", "mode"], [175, 3, 1, "", "odf"], [175, 3, 1, "", "planarity"], [175, 3, 1, "", "predict"], [175, 4, 1, "", "quadratic_form"], [175, 3, 1, "", "rd"], [175, 4, 1, "", "shape"], [175, 3, 1, "", "sphericity"], [175, 3, 1, "", "trace"]], "dipy.reconst.dti.TensorModel": [[175, 3, 1, "", "fit"], [175, 3, 1, "", "predict"]], "dipy.reconst.forecast": [[175, 1, 1, "", "ForecastFit"], [175, 1, 1, "", "ForecastModel"], [175, 2, 1, "", "find_signal_means"], [175, 2, 1, "", "forecast_error_func"], [175, 2, 1, "", "forecast_matrix"], [175, 2, 1, "", "lb_forecast"], [175, 2, 1, "", "psi_l"], [175, 2, 1, "", "rho_matrix"]], "dipy.reconst.forecast.ForecastFit": [[175, 4, 1, "", "dpar"], [175, 4, 1, "", "dperp"], [175, 3, 1, "", "fractional_anisotropy"], [175, 3, 1, "", "mean_diffusivity"], [175, 3, 1, "", "odf"], [175, 3, 1, "", "predict"], [175, 4, 1, "", "sh_coeff"]], "dipy.reconst.forecast.ForecastModel": [[175, 3, 1, "", "fit"]], "dipy.reconst.fwdti": [[175, 1, 1, "", "FreeWaterTensorFit"], [175, 1, 1, "", "FreeWaterTensorModel"], [175, 2, 1, "", "cholesky_to_lower_triangular"], [175, 2, 1, "", "fwdti_prediction"], [175, 2, 1, "", "lower_triangular_to_cholesky"], [175, 2, 1, "", "nls_fit_tensor"], [175, 2, 1, "", "nls_iter"], [175, 2, 1, "", "wls_fit_tensor"], [175, 2, 1, "", "wls_iter"]], "dipy.reconst.fwdti.FreeWaterTensorFit": [[175, 4, 1, "", "f"], [175, 3, 1, "", "predict"]], "dipy.reconst.fwdti.FreeWaterTensorModel": [[175, 3, 1, "", "fit"], [175, 3, 1, "", "predict"]], "dipy.reconst.gqi": [[175, 1, 1, "", "GeneralizedQSamplingFit"], [175, 1, 1, "", "GeneralizedQSamplingModel"], [175, 2, 1, "", "equatorial_maximum"], [175, 2, 1, "", "equatorial_zone_vertices"], [175, 2, 1, "", "normalize_qa"], [175, 2, 1, "", "npa"], [175, 2, 1, "", "odf_sum"], [175, 2, 1, "", "patch_maximum"], [175, 2, 1, "", "patch_sum"], [175, 2, 1, "", "patch_vertices"], [175, 2, 1, "", "polar_zone_vertices"], [175, 2, 1, "", "squared_radial_component"], [175, 2, 1, "", "triple_odf_maxima"], [175, 2, 1, "", "upper_hemi_map"]], "dipy.reconst.gqi.GeneralizedQSamplingFit": [[175, 3, 1, "", "odf"]], "dipy.reconst.gqi.GeneralizedQSamplingModel": [[175, 3, 1, "", "fit"]], "dipy.reconst.ivim": [[175, 1, 1, "", "IvimFit"], [175, 1, 1, "", "IvimModelTRR"], [175, 1, 1, "", "IvimModelVP"], [175, 2, 1, "", "f_D_star_error"], [175, 2, 1, "", "f_D_star_prediction"], [175, 2, 1, "", "ivim_model_selector"], [175, 2, 1, "", "ivim_prediction"]], "dipy.reconst.ivim.IvimFit": [[175, 4, 1, "", "D"], [175, 4, 1, "", "D_star"], [175, 4, 1, "", "S0_predicted"], [175, 4, 1, "", "perfusion_fraction"], [175, 3, 1, "", "predict"], [175, 4, 1, "", "shape"]], "dipy.reconst.ivim.IvimModelTRR": [[175, 3, 1, "", "estimate_f_D_star"], [175, 3, 1, "", "estimate_linear_fit"], [175, 3, 1, "", "fit"], [175, 3, 1, "", "predict"]], "dipy.reconst.ivim.IvimModelVP": [[175, 3, 1, "", "cvx_fit"], [175, 3, 1, "", "fit"], [175, 3, 1, "", "ivim_mix_cost_one"], [175, 3, 1, "", "nlls_cost"], [175, 3, 1, "", "phi"], [175, 3, 1, "", "stoc_search_cost"], [175, 3, 1, "", "x_and_f_to_x_f"], [175, 3, 1, "", "x_f_to_x_and_f"]], "dipy.reconst.mapmri": [[175, 1, 1, "", "MapmriFit"], [175, 1, 1, "", "MapmriModel"], [175, 2, 1, "", "b_mat"], [175, 2, 1, "", "b_mat_isotropic"], [175, 2, 1, "", "binomialfloat"], [175, 2, 1, "", "create_rspace"], [175, 2, 1, "", "delta"], [175, 2, 1, "", "gcv_cost_function"], [175, 2, 1, "", "generalized_crossvalidation"], [175, 2, 1, "", "generalized_crossvalidation_array"], [175, 2, 1, "", "isotropic_scale_factor"], [175, 2, 1, "", "map_laplace_s"], [175, 2, 1, "", "map_laplace_t"], [175, 2, 1, "", "map_laplace_u"], [175, 2, 1, "", "mapmri_STU_reg_matrices"], [175, 2, 1, "", "mapmri_index_matrix"], [175, 2, 1, "", "mapmri_isotropic_K_mu_dependent"], [175, 2, 1, "", "mapmri_isotropic_K_mu_independent"], [175, 2, 1, "", "mapmri_isotropic_M_mu_dependent"], [175, 2, 1, "", "mapmri_isotropic_M_mu_independent"], [175, 2, 1, "", "mapmri_isotropic_index_matrix"], [175, 2, 1, "", "mapmri_isotropic_laplacian_reg_matrix"], [175, 2, 1, "", "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix"], [175, 2, 1, "", "mapmri_isotropic_odf_matrix"], [175, 2, 1, "", "mapmri_isotropic_odf_sh_matrix"], [175, 2, 1, "", "mapmri_isotropic_phi_matrix"], [175, 2, 1, "", "mapmri_isotropic_psi_matrix"], [175, 2, 1, "", "mapmri_isotropic_radial_pdf_basis"], [175, 2, 1, "", "mapmri_isotropic_radial_signal_basis"], [175, 2, 1, "", "mapmri_laplacian_reg_matrix"], [175, 2, 1, "", "mapmri_odf_matrix"], [175, 2, 1, "", "mapmri_phi_1d"], [175, 2, 1, "", "mapmri_phi_matrix"], [175, 2, 1, "", "mapmri_psi_1d"], [175, 2, 1, "", "mapmri_psi_matrix"]], "dipy.reconst.mapmri.MapmriFit": [[175, 3, 1, "", "fitted_signal"], [175, 4, 1, "", "mapmri_R"], [175, 4, 1, "", "mapmri_coeff"], [175, 4, 1, "", "mapmri_mu"], [175, 3, 1, "", "msd"], [175, 3, 1, "", "ng"], [175, 3, 1, "", "ng_parallel"], [175, 3, 1, "", "ng_perpendicular"], [175, 3, 1, "", "norm_of_laplacian_signal"], [175, 3, 1, "", "odf"], [175, 3, 1, "", "odf_sh"], [175, 3, 1, "", "pdf"], [175, 3, 1, "", "predict"], [175, 3, 1, "", "qiv"], [175, 3, 1, "", "rtap"], [175, 3, 1, "", "rtop"], [175, 3, 1, "", "rtpp"]], "dipy.reconst.mapmri.MapmriModel": [[175, 3, 1, "", "fit"]], "dipy.reconst.mcsd": [[175, 1, 1, "", "MSDeconvFit"], [175, 1, 1, "", "MultiShellDeconvModel"], [175, 1, 1, "", "MultiShellResponse"], [175, 1, 1, "", "QpFitter"], [175, 2, 1, "", "auto_response_msmt"], [175, 2, 1, "", "mask_for_response_msmt"], [175, 2, 1, "", "multi_shell_fiber_response"], [175, 2, 1, "", "multi_tissue_basis"], [175, 2, 1, "", "response_from_mask_msmt"], [175, 2, 1, "", "solve_qp"]], "dipy.reconst.mcsd.MSDeconvFit": [[175, 4, 1, "", "all_shm_coeff"], [175, 4, 1, "", "shm_coeff"], [175, 4, 1, "", "volume_fractions"]], "dipy.reconst.mcsd.MultiShellDeconvModel": [[175, 3, 1, "", "fit"], [175, 3, 1, "", "predict"]], "dipy.reconst.mcsd.MultiShellResponse": [[175, 4, 1, "", "iso"]], "dipy.reconst.msdki": [[175, 1, 1, "", "MeanDiffusionKurtosisFit"], [175, 1, 1, "", "MeanDiffusionKurtosisModel"], [175, 2, 1, "", "awf_from_msk"], [175, 2, 1, "", "design_matrix"], [175, 2, 1, "", "mean_signal_bvalue"], [175, 2, 1, "", "msdki_prediction"], [175, 2, 1, "", "msk_from_awf"], [175, 2, 1, "", "wls_fit_msdki"]], "dipy.reconst.msdki.MeanDiffusionKurtosisFit": [[175, 4, 1, "", "S0_hat"], [175, 3, 1, "", "msd"], [175, 3, 1, "", "msk"], [175, 3, 1, "", "predict"], [175, 3, 1, "", "smt2di"], [175, 3, 1, "", "smt2f"], [175, 3, 1, "", "smt2uFA"]], "dipy.reconst.msdki.MeanDiffusionKurtosisModel": [[175, 3, 1, "", "fit"], [175, 3, 1, "", "predict"]], "dipy.reconst.multi_voxel": [[175, 1, 1, "", "CallableArray"], [175, 1, 1, "", "MultiVoxelFit"], [175, 2, 1, "", "multi_voxel_fit"]], "dipy.reconst.multi_voxel.MultiVoxelFit": [[175, 3, 1, "", "predict"], [175, 4, 1, "", "shape"]], "dipy.reconst.odf": [[175, 1, 1, "", "OdfFit"], [175, 1, 1, "", "OdfModel"], [175, 2, 1, "", "gfa"], [175, 2, 1, "", "minmax_normalize"]], "dipy.reconst.odf.OdfFit": [[175, 3, 1, "", "odf"]], "dipy.reconst.odf.OdfModel": [[175, 3, 1, "", "fit"]], "dipy.reconst.qtdmri": [[175, 2, 1, "", "GCV_cost_function"], [175, 2, 1, "", "H"], [175, 1, 1, "", "QtdmriFit"], [175, 1, 1, "", "QtdmriModel"], [175, 2, 1, "", "angular_basis_EAP_opt"], [175, 2, 1, "", "angular_basis_opt"], [175, 2, 1, "", "create_rt_space_grid"], [175, 2, 1, "", "design_matrix_spatial"], [175, 2, 1, "", "elastic_crossvalidation"], [175, 2, 1, "", "generalized_crossvalidation"], [175, 2, 1, "", "l1_crossvalidation"], [175, 2, 1, "", "part1_reg_matrix_tau"], [175, 2, 1, "", "part23_iso_reg_matrix_q"], [175, 2, 1, "", "part23_reg_matrix_q"], [175, 2, 1, "", "part23_reg_matrix_tau"], [175, 2, 1, "", "part4_iso_reg_matrix_q"], [175, 2, 1, "", "part4_reg_matrix_q"], [175, 2, 1, "", "part4_reg_matrix_tau"], [175, 2, 1, "", "qtdmri_anisotropic_scaling"], [175, 2, 1, "", "qtdmri_eap_matrix"], [175, 2, 1, "", "qtdmri_index_matrix"], [175, 2, 1, "", "qtdmri_isotropic_eap_matrix"], [175, 2, 1, "", "qtdmri_isotropic_index_matrix"], [175, 2, 1, "", "qtdmri_isotropic_laplacian_reg_matrix"], [175, 2, 1, "", "qtdmri_isotropic_scaling"], [175, 2, 1, "", "qtdmri_isotropic_signal_matrix"], [175, 2, 1, "", "qtdmri_isotropic_to_mapmri_matrix"], [175, 2, 1, "", "qtdmri_laplacian_reg_matrix"], [175, 2, 1, "", "qtdmri_mapmri_isotropic_normalization"], [175, 2, 1, "", "qtdmri_mapmri_normalization"], [175, 2, 1, "", "qtdmri_number_of_coefficients"], [175, 2, 1, "", "qtdmri_signal_matrix"], [175, 2, 1, "", "qtdmri_temporal_normalization"], [175, 2, 1, "", "qtdmri_to_mapmri_matrix"], [175, 2, 1, "", "radial_basis_EAP_opt"], [175, 2, 1, "", "radial_basis_opt"], [175, 2, 1, "", "temporal_basis"], [175, 2, 1, "", "visualise_gradient_table_G_Delta_rainbow"]], "dipy.reconst.qtdmri.QtdmriFit": [[175, 3, 1, "", "fitted_signal"], [175, 3, 1, "", "msd"], [175, 3, 1, "", "norm_of_laplacian_signal"], [175, 3, 1, "", "odf"], [175, 3, 1, "", "odf_sh"], [175, 3, 1, "", "pdf"], [175, 3, 1, "", "predict"], [175, 3, 1, "", "qiv"], [175, 3, 1, "", "qtdmri_to_mapmri_coef"], [175, 3, 1, "", "rtap"], [175, 3, 1, "", "rtop"], [175, 3, 1, "", "rtpp"], [175, 3, 1, "", "sparsity_abs"], [175, 3, 1, "", "sparsity_density"]], "dipy.reconst.qtdmri.QtdmriModel": [[175, 3, 1, "", "fit"]], "dipy.reconst.qti": [[175, 1, 1, "", "QtiFit"], [175, 1, 1, "", "QtiModel"], [175, 2, 1, "", "cvxpy_1x21_to_6x6"], [175, 2, 1, "", "cvxpy_1x6_to_3x3"], [175, 2, 1, "", "design_matrix"], [175, 2, 1, "", "dtd_covariance"], [175, 2, 1, "", "from_21x1_to_6x6"], [175, 2, 1, "", "from_3x3_to_6x1"], [175, 2, 1, "", "from_6x1_to_3x3"], [175, 2, 1, "", "from_6x6_to_21x1"], [175, 2, 1, "", "qti_signal"]], "dipy.reconst.qti.QtiFit": [[175, 3, 1, "", "S0_hat"], [175, 3, 1, "", "c_c"], [175, 3, 1, "", "c_m"], [175, 3, 1, "", "c_md"], [175, 3, 1, "", "c_mu"], [175, 3, 1, "", "d_sq"], [175, 3, 1, "", "fa"], [175, 3, 1, "", "k_bulk"], [175, 3, 1, "", "k_mu"], [175, 3, 1, "", "k_shear"], [175, 3, 1, "", "md"], [175, 3, 1, "", "mean_d_sq"], [175, 3, 1, "", "mk"], [175, 3, 1, "", "predict"], [175, 3, 1, "", "ufa"], [175, 3, 1, "", "v_iso"], [175, 3, 1, "", "v_md"], [175, 3, 1, "", "v_shear"]], "dipy.reconst.qti.QtiModel": [[175, 3, 1, "", "fit"], [175, 3, 1, "", "predict"]], "dipy.reconst.rumba": [[175, 1, 1, "", "RumbaFit"], [175, 1, 1, "", "RumbaSDModel"], [175, 2, 1, "", "generate_kernel"], [175, 2, 1, "", "mbessel_ratio"], [175, 2, 1, "", "rumba_deconv"], [175, 2, 1, "", "rumba_deconv_global"]], "dipy.reconst.rumba.RumbaFit": [[175, 3, 1, "", "combined_odf_iso"], [175, 3, 1, "", "f_csf"], [175, 3, 1, "", "f_gm"], [175, 3, 1, "", "f_iso"], [175, 3, 1, "", "f_wm"], [175, 3, 1, "", "odf"], [175, 3, 1, "", "predict"]], "dipy.reconst.sfm": [[175, 1, 1, "", "ExponentialIsotropicFit"], [175, 1, 1, "", "ExponentialIsotropicModel"], [175, 1, 1, "", "IsotropicFit"], [175, 1, 1, "", "IsotropicModel"], [175, 1, 1, "", "SparseFascicleFit"], [175, 1, 1, "", "SparseFascicleModel"], [175, 2, 1, "", "sfm_design_matrix"]], "dipy.reconst.sfm.ExponentialIsotropicFit": [[175, 3, 1, "", "predict"]], "dipy.reconst.sfm.ExponentialIsotropicModel": [[175, 3, 1, "", "fit"]], "dipy.reconst.sfm.IsotropicFit": [[175, 3, 1, "", "predict"]], "dipy.reconst.sfm.IsotropicModel": [[175, 3, 1, "", "fit"]], "dipy.reconst.sfm.SparseFascicleFit": [[175, 3, 1, "", "odf"], [175, 3, 1, "", "predict"]], "dipy.reconst.sfm.SparseFascicleModel": [[175, 3, 1, "", "design_matrix"], [175, 3, 1, "", "fit"]], "dipy.reconst.shm": [[175, 1, 1, "", "CsaOdfModel"], [175, 1, 1, "", "OpdtModel"], [175, 1, 1, "", "QballBaseModel"], [175, 1, 1, "", "QballModel"], [175, 1, 1, "", "ResidualBootstrapWrapper"], [175, 1, 1, "", "SphHarmFit"], [175, 1, 1, "", "SphHarmModel"], [175, 2, 1, "", "anisotropic_power"], [175, 2, 1, "", "bootstrap_data_array"], [175, 2, 1, "", "bootstrap_data_voxel"], [175, 2, 1, "", "calculate_max_order"], [175, 2, 1, "", "convert_sh_descoteaux_tournier"], [175, 2, 1, "", "convert_sh_from_legacy"], [175, 2, 1, "", "convert_sh_to_full_basis"], [175, 2, 1, "", "convert_sh_to_legacy"], [175, 2, 1, "", "forward_sdeconv_mat"], [175, 2, 1, "", "gen_dirac"], [175, 2, 1, "", "hat"], [175, 2, 1, "", "lazy_index"], [175, 2, 1, "", "lcr_matrix"], [175, 2, 1, "", "normalize_data"], [175, 2, 1, "", "order_from_ncoef"], [175, 2, 1, "", "real_sh_descoteaux"], [175, 2, 1, "", "real_sh_descoteaux_from_index"], [175, 2, 1, "", "real_sh_tournier"], [175, 2, 1, "", "real_sh_tournier_from_index"], [175, 2, 1, "", "real_sph_harm"], [175, 2, 1, "", "real_sym_sh_basis"], [175, 2, 1, "", "real_sym_sh_mrtrix"], [175, 2, 1, "", "sf_to_sh"], [175, 2, 1, "", "sh_to_rh"], [175, 2, 1, "", "sh_to_sf"], [175, 2, 1, "", "sh_to_sf_matrix"], [175, 2, 1, "", "smooth_pinv"], [175, 2, 1, "", "sph_harm_ind_list"], [175, 2, 1, "", "spherical_harmonics"]], "dipy.reconst.shm.CsaOdfModel": [[175, 5, 1, "", "max"], [175, 5, 1, "", "min"]], "dipy.reconst.shm.QballBaseModel": [[175, 3, 1, "", "fit"]], "dipy.reconst.shm.SphHarmFit": [[175, 3, 1, "", "gfa"], [175, 3, 1, "", "odf"], [175, 3, 1, "", "predict"], [175, 4, 1, "", "shape"], [175, 4, 1, "", "shm_coeff"]], "dipy.reconst.shm.SphHarmModel": [[175, 3, 1, "", "sampling_matrix"]], "dipy.reconst.shore": [[175, 1, 1, "", "ShoreFit"], [175, 1, 1, "", "ShoreModel"], [175, 2, 1, "", "create_rspace"], [175, 2, 1, "", "l_shore"], [175, 2, 1, "", "n_shore"], [175, 2, 1, "", "shore_indices"], [175, 2, 1, "", "shore_matrix"], [175, 2, 1, "", "shore_matrix_odf"], [175, 2, 1, "", "shore_matrix_pdf"], [175, 2, 1, "", "shore_order"]], "dipy.reconst.shore.ShoreFit": [[175, 3, 1, "", "fitted_signal"], [175, 3, 1, "", "msd"], [175, 3, 1, "", "odf"], [175, 3, 1, "", "odf_sh"], [175, 3, 1, "", "pdf"], [175, 3, 1, "", "pdf_grid"], [175, 3, 1, "", "rtop_pdf"], [175, 3, 1, "", "rtop_signal"], [175, 4, 1, "", "shore_coeff"]], "dipy.reconst.shore.ShoreModel": [[175, 3, 1, "", "fit"]], "dipy.reconst.utils": [[175, 2, 1, "", "convert_tensors"], [175, 2, 1, "", "cti_design_matrix"], [175, 2, 1, "", "dki_design_matrix"]], "dipy.reconst.weights_method": [[175, 2, 1, "", "simple_cutoff"], [175, 2, 1, "", "two_eyes_cutoff"], [175, 2, 1, "", "weights_method_nlls_m_est"], [175, 2, 1, "", "weights_method_wls_m_est"]], "dipy.segment": [[176, 0, 0, "-", "bundles"], [176, 0, 0, "-", "clustering"], [176, 0, 0, "-", "fss"], [176, 0, 0, "-", "mask"], [176, 0, 0, "-", "metric"], [176, 0, 0, "-", "threshold"], [176, 0, 0, "-", "tissue"], [176, 0, 0, "-", "utils"]], "dipy.segment.bundles": [[176, 1, 1, "", "RecoBundles"], [176, 2, 1, "", "ba_analysis"], [176, 2, 1, "", "bundle_adjacency"], [176, 2, 1, "", "bundle_shape_similarity"], [176, 2, 1, "", "check_range"], [176, 2, 1, "", "cluster_bundle"]], "dipy.segment.bundles.RecoBundles": [[176, 3, 1, "", "evaluate_results"], [176, 3, 1, "", "recognize"], [176, 3, 1, "", "refine"]], "dipy.segment.clustering": [[176, 1, 1, "", "Cluster"], [176, 1, 1, "", "ClusterCentroid"], [176, 1, 1, "", "ClusterMap"], [176, 1, 1, "", "ClusterMapCentroid"], [176, 1, 1, "", "Clustering"], [176, 1, 1, "", "Identity"], [176, 1, 1, "", "QuickBundles"], [176, 1, 1, "", "QuickBundlesX"], [176, 1, 1, "", "TreeCluster"], [176, 1, 1, "", "TreeClusterMap"], [176, 2, 1, "", "qbx_and_merge"]], "dipy.segment.clustering.Cluster": [[176, 3, 1, "", "assign"]], "dipy.segment.clustering.ClusterCentroid": [[176, 3, 1, "", "assign"], [176, 3, 1, "", "update"]], "dipy.segment.clustering.ClusterMap": [[176, 3, 1, "", "add_cluster"], [176, 3, 1, "", "clear"], [176, 4, 1, "", "clusters"], [176, 3, 1, "", "clusters_sizes"], [176, 3, 1, "", "get_large_clusters"], [176, 3, 1, "", "get_small_clusters"], [176, 4, 1, "", "refdata"], [176, 3, 1, "", "remove_cluster"], [176, 3, 1, "", "size"]], "dipy.segment.clustering.ClusterMapCentroid": [[176, 4, 1, "", "centroids"]], "dipy.segment.clustering.Clustering": [[176, 3, 1, "", "cluster"]], "dipy.segment.clustering.QuickBundles": [[176, 3, 1, "", "cluster"]], "dipy.segment.clustering.QuickBundlesX": [[176, 3, 1, "", "cluster"]], "dipy.segment.clustering.TreeCluster": [[176, 3, 1, "", "add"], [176, 4, 1, "", "is_leaf"], [176, 3, 1, "", "return_indices"]], "dipy.segment.clustering.TreeClusterMap": [[176, 3, 1, "", "get_clusters"], [176, 3, 1, "", "iter_preorder"], [176, 4, 1, "", "refdata"], [176, 3, 1, "", "traverse_postorder"]], "dipy.segment.fss": [[176, 1, 1, "", "FastStreamlineSearch"], [176, 2, 1, "", "nearest_from_matrix_col"], [176, 2, 1, "", "nearest_from_matrix_row"]], "dipy.segment.fss.FastStreamlineSearch": [[176, 3, 1, "", "radius_search"]], "dipy.segment.mask": [[176, 2, 1, "", "applymask"], [176, 2, 1, "", "bounding_box"], [176, 2, 1, "", "clean_cc_mask"], [176, 2, 1, "", "crop"], [176, 2, 1, "", "median_otsu"], [176, 2, 1, "", "multi_median"], [176, 2, 1, "", "segment_from_cfa"]], "dipy.segment.metric": [[176, 2, 1, "", "mdf"], [176, 2, 1, "", "mean_euclidean_distance"], [176, 2, 1, "", "mean_manhattan_distance"]], "dipy.segment.threshold": [[176, 2, 1, "", "otsu"], [176, 2, 1, "", "upper_bound_by_percent"], [176, 2, 1, "", "upper_bound_by_rate"]], "dipy.segment.tissue": [[176, 1, 1, "", "TissueClassifierHMRF"], [176, 2, 1, "", "compute_directional_average"], [176, 2, 1, "", "dam_classifier"]], "dipy.segment.tissue.TissueClassifierHMRF": [[176, 3, 1, "", "classify"]], "dipy.segment.utils": [[176, 2, 1, "", "remove_holes_and_islands"]], "dipy.sims": [[177, 0, 0, "-", "phantom"], [177, 0, 0, "-", "voxel"]], "dipy.sims.phantom": [[177, 2, 1, "", "add_noise"], [177, 2, 1, "", "diff2eigenvectors"], [177, 2, 1, "", "orbital_phantom"]], "dipy.sims.voxel": [[177, 2, 1, "", "add_noise"], [177, 2, 1, "", "all_tensor_evecs"], [177, 2, 1, "", "callaghan_perpendicular"], [177, 2, 1, "", "cylinders_and_ball_soderman"], [177, 2, 1, "", "dki_signal"], [177, 2, 1, "", "gaussian_parallel"], [177, 2, 1, "", "kurtosis_element"], [177, 2, 1, "", "multi_tensor"], [177, 2, 1, "", "multi_tensor_dki"], [177, 2, 1, "", "multi_tensor_msd"], [177, 2, 1, "", "multi_tensor_odf"], [177, 2, 1, "", "multi_tensor_pdf"], [177, 2, 1, "", "multi_tensor_rtop"], [177, 2, 1, "", "single_tensor"], [177, 2, 1, "", "single_tensor_msd"], [177, 2, 1, "", "single_tensor_odf"], [177, 2, 1, "", "single_tensor_pdf"], [177, 2, 1, "", "single_tensor_rtop"], [177, 2, 1, "", "sticks_and_ball"]], "dipy.stats": [[178, 0, 0, "-", "analysis"], [178, 0, 0, "-", "qc"], [178, 0, 0, "-", "sketching"]], "dipy.stats.analysis": [[178, 2, 1, "", "afq_profile"], [178, 2, 1, "", "anatomical_measures"], [178, 2, 1, "", "assignment_map"], [178, 2, 1, "", "gaussian_weights"], [178, 2, 1, "", "peak_values"]], "dipy.stats.qc": [[178, 2, 1, "", "find_qspace_neighbors"], [178, 2, 1, "", "neighboring_dwi_correlation"]], "dipy.stats.sketching": [[178, 2, 1, "", "count_sketch"]], "dipy.tracking": [[179, 0, 0, "-", "_utils"], [179, 0, 0, "-", "learning"], [179, 0, 0, "-", "life"], [179, 0, 0, "-", "local_tracking"], [179, 0, 0, "-", "mesh"], [179, 0, 0, "-", "metrics"], [179, 0, 0, "-", "streamline"], [179, 0, 0, "-", "tracker"], [179, 0, 0, "-", "utils"]], "dipy.tracking.learning": [[179, 2, 1, "", "detect_corresponding_tracks"], [179, 2, 1, "", "detect_corresponding_tracks_plus"]], "dipy.tracking.life": [[179, 1, 1, "", "FiberFit"], [179, 1, 1, "", "FiberModel"], [179, 1, 1, "", "LifeSignalMaker"], [179, 2, 1, "", "grad_tensor"], [179, 2, 1, "", "gradient"], [179, 2, 1, "", "streamline_gradients"], [179, 2, 1, "", "streamline_signal"], [179, 2, 1, "", "streamline_tensors"], [179, 2, 1, "", "voxel2streamline"]], "dipy.tracking.life.FiberFit": [[179, 3, 1, "", "predict"]], "dipy.tracking.life.FiberModel": [[179, 3, 1, "", "fit"], [179, 3, 1, "", "setup"]], "dipy.tracking.life.LifeSignalMaker": [[179, 3, 1, "", "calc_signal"], [179, 3, 1, "", "streamline_signal"]], "dipy.tracking.local_tracking": [[179, 1, 1, "", "LocalTracking"], [179, 1, 1, "", "ParticleFilteringTracking"]], "dipy.tracking.mesh": [[179, 2, 1, "", "random_coordinates_from_surface"], [179, 2, 1, "", "seeds_from_surface_coordinates"], [179, 2, 1, "", "triangles_area"], [179, 2, 1, "", "vertices_to_triangles_values"]], "dipy.tracking.metrics": [[179, 2, 1, "", "arbitrarypoint"], [179, 2, 1, "", "bytes"], [179, 2, 1, "", "center_of_mass"], [179, 2, 1, "", "endpoint"], [179, 2, 1, "", "frenet_serret"], [179, 2, 1, "", "generate_combinations"], [179, 2, 1, "", "inside_sphere"], [179, 2, 1, "", "inside_sphere_points"], [179, 2, 1, "", "intersect_sphere"], [179, 2, 1, "", "length"], [179, 2, 1, "", "longest_track_bundle"], [179, 2, 1, "", "magn"], [179, 2, 1, "", "mean_curvature"], [179, 2, 1, "", "mean_orientation"], [179, 2, 1, "", "midpoint"], [179, 2, 1, "", "midpoint2point"], [179, 2, 1, "", "principal_components"], [179, 2, 1, "", "spline"], [179, 2, 1, "", "startpoint"], [179, 2, 1, "", "winding"]], "dipy.tracking.streamline": [[179, 2, 1, "", "center_streamlines"], [179, 2, 1, "", "cluster_confidence"], [179, 2, 1, "", "deform_streamlines"], [179, 2, 1, "", "nbytes"], [179, 2, 1, "", "orient_by_rois"], [179, 2, 1, "", "orient_by_streamline"], [179, 2, 1, "", "relist_streamlines"], [179, 2, 1, "", "select_by_rois"], [179, 2, 1, "", "select_random_set_of_streamlines"], [179, 2, 1, "", "transform_streamlines"], [179, 2, 1, "", "unlist_streamlines"], [179, 2, 1, "", "values_from_volume"]], "dipy.tracking.tracker": [[179, 2, 1, "", "bootstrap_tracking"], [179, 2, 1, "", "closestpeak_tracking"], [179, 2, 1, "", "deterministic_tracking"], [179, 2, 1, "", "eudx_tracking"], [179, 2, 1, "", "generic_tracking"], [179, 2, 1, "", "pft_tracking"], [179, 2, 1, "", "probabilistic_tracking"], [179, 2, 1, "", "ptt_tracking"]], "dipy.tracking.utils": [[179, 2, 1, "", "connectivity_matrix"], [179, 2, 1, "", "density_map"], [179, 2, 1, "", "length"], [179, 2, 1, "", "max_angle_from_curvature"], [179, 2, 1, "", "min_radius_curvature_from_angle"], [179, 2, 1, "", "ndbincount"], [179, 2, 1, "", "near_roi"], [179, 2, 1, "", "path_length"], [179, 2, 1, "", "random_seeds_from_mask"], [179, 2, 1, "", "reduce_labels"], [179, 2, 1, "", "reduce_rois"], [179, 2, 1, "", "seeds_directions_pairs"], [179, 2, 1, "", "seeds_from_mask"], [179, 2, 1, "", "streamline_near_roi"], [179, 2, 1, "", "subsegment"], [179, 2, 1, "", "target"], [179, 2, 1, "", "target_line_based"], [179, 2, 1, "", "transform_tracking_output"], [179, 2, 1, "", "unique_rows"]], "dipy.viz": [[181, 0, 0, "-", "gmem"], [181, 0, 0, "-", "horizon"], [181, 0, 0, "-", "panel"], [181, 0, 0, "-", "plotting"], [181, 0, 0, "-", "projections"], [181, 0, 0, "-", "regtools"], [181, 0, 0, "-", "streamline"]], "dipy.viz.gmem": [[181, 1, 1, "", "GlobalHorizon"]], "dipy.viz.horizon": [[181, 0, 0, "-", "app"], [181, 0, 0, "-", "tab"], [181, 0, 0, "-", "util"], [181, 0, 0, "-", "visualizer"]], "dipy.viz.horizon.app": [[181, 1, 1, "", "Horizon"], [181, 2, 1, "", "horizon"]], "dipy.viz.horizon.app.Horizon": [[181, 3, 1, "", "build_scene"], [181, 3, 1, "", "build_show"]], "dipy.viz.horizon.tab": [[181, 0, 0, "-", "base"], [181, 0, 0, "-", "cluster"], [181, 0, 0, "-", "peak"], [181, 0, 0, "-", "roi"], [181, 0, 0, "-", "slice"], [181, 0, 0, "-", "surface"]], "dipy.viz.horizon.tab.base": [[181, 1, 1, "", "HorizonTab"], [181, 1, 1, "", "HorizonUIElement"], [181, 1, 1, "", "TabManager"], [181, 2, 1, "", "build_checkbox"], [181, 2, 1, "", "build_label"], [181, 2, 1, "", "build_radio_button"], [181, 2, 1, "", "build_slider"], [181, 2, 1, "", "build_switcher"]], "dipy.viz.horizon.tab.base.HorizonTab": [[181, 4, 1, "", "actors"], [181, 3, 1, "", "build"], [181, 4, 1, "", "elements"], [181, 4, 1, "", "name"], [181, 3, 1, "", "on_tab_selected"], [181, 4, 1, "", "tab_id"]], "dipy.viz.horizon.tab.base.HorizonUIElement": [[181, 5, 1, "", "obj"], [181, 5, 1, "", "position"], [181, 5, 1, "", "selected_value"], [181, 5, 1, "", "size"], [181, 5, 1, "", "visibility"]], "dipy.viz.horizon.tab.base.TabManager": [[181, 3, 1, "", "handle_text_overflows"], [181, 3, 1, "", "reposition"], [181, 3, 1, "", "synchronize_slices"], [181, 3, 1, "", "synchronize_volumes"], [181, 4, 1, "", "tab_ui"]], "dipy.viz.horizon.tab.cluster": [[181, 1, 1, "", "ClustersTab"]], "dipy.viz.horizon.tab.cluster.ClustersTab": [[181, 4, 1, "", "actors"], [181, 3, 1, "", "build"], [181, 4, 1, "", "centroid_actors"], [181, 4, 1, "", "cluster_actors"], [181, 4, 1, "", "name"]], "dipy.viz.horizon.tab.peak": [[181, 1, 1, "", "PeaksTab"]], "dipy.viz.horizon.tab.peak.PeaksTab": [[181, 4, 1, "", "actors"], [181, 3, 1, "", "build"], [181, 4, 1, "", "name"], [181, 3, 1, "", "on_tab_selected"], [181, 3, 1, "", "update_slices"]], "dipy.viz.horizon.tab.roi": [[181, 1, 1, "", "ROIsTab"]], "dipy.viz.horizon.tab.roi.ROIsTab": [[181, 4, 1, "", "actors"], [181, 3, 1, "", "build"], [181, 4, 1, "", "name"]], "dipy.viz.horizon.tab.slice": [[181, 1, 1, "", "SlicesTab"]], "dipy.viz.horizon.tab.slice.SlicesTab": [[181, 4, 1, "", "actors"], [181, 3, 1, "", "build"], [181, 4, 1, "", "file_name"], [181, 4, 1, "", "name"], [181, 3, 1, "", "on_tab_selected"], [181, 3, 1, "", "update_slices"], [181, 3, 1, "", "update_volume"]], "dipy.viz.horizon.tab.surface": [[181, 1, 1, "", "SurfaceTab"]], "dipy.viz.horizon.tab.surface.SurfaceTab": [[181, 4, 1, "", "actors"], [181, 3, 1, "", "build"], [181, 4, 1, "", "name"]], "dipy.viz.horizon.util": [[181, 2, 1, "", "check_img_dtype"], [181, 2, 1, "", "check_img_shapes"], [181, 2, 1, "", "check_peak_size"], [181, 2, 1, "", "show_ellipsis"], [181, 2, 1, "", "unpack_image"], [181, 2, 1, "", "unpack_surface"]], "dipy.viz.horizon.visualizer": [[181, 0, 0, "-", "cluster"], [181, 0, 0, "-", "peak"], [181, 0, 0, "-", "slice"], [181, 0, 0, "-", "surface"]], "dipy.viz.horizon.visualizer.cluster": [[181, 1, 1, "", "ClustersVisualizer"]], "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer": [[181, 3, 1, "", "add_cluster_actors"], [181, 4, 1, "", "centroid_actors"], [181, 4, 1, "", "cluster_actors"], [181, 4, 1, "", "lengths"], [181, 3, 1, "", "recluster_tractograms"], [181, 4, 1, "", "sizes"], [181, 4, 1, "", "tractogram_clusters"]], "dipy.viz.horizon.visualizer.peak": [[181, 1, 1, "", "PeakActor"], [181, 1, 1, "", "PeaksVisualizer"], [181, 2, 1, "", "peak"]], "dipy.viz.horizon.visualizer.peak.PeakActor": [[181, 4, 1, "", "cross_section"], [181, 3, 1, "", "display_cross_section"], [181, 3, 1, "", "display_extent"], [181, 4, 1, "", "global_opacity"], [181, 4, 1, "", "high_ranges"], [181, 4, 1, "", "is_range"], [181, 4, 1, "", "linewidth"], [181, 4, 1, "", "low_ranges"], [181, 4, 1, "", "max_centers"], [181, 4, 1, "", "min_centers"]], "dipy.viz.horizon.visualizer.peak.PeaksVisualizer": [[181, 4, 1, "", "actors"]], "dipy.viz.horizon.visualizer.slice": [[181, 1, 1, "", "SlicesVisualizer"]], "dipy.viz.horizon.visualizer.slice.SlicesVisualizer": [[181, 3, 1, "", "change_volume"], [181, 4, 1, "", "data_shape"], [181, 4, 1, "", "intensities_range"], [181, 3, 1, "", "register_picker_callback"], [181, 4, 1, "", "rgb"], [181, 4, 1, "", "selected_slices"], [181, 4, 1, "", "slice_actors"], [181, 4, 1, "", "volume_max"], [181, 4, 1, "", "volume_min"]], "dipy.viz.horizon.visualizer.surface": [[181, 1, 1, "", "SurfaceVisualizer"]], "dipy.viz.horizon.visualizer.surface.SurfaceVisualizer": [[181, 4, 1, "", "actors"]], "dipy.viz.panel": [[181, 2, 1, "", "build_label"], [181, 2, 1, "", "slicer_panel"]], "dipy.viz.plotting": [[181, 2, 1, "", "bundle_shape_profile"], [181, 2, 1, "", "compare_maps"], [181, 2, 1, "", "compare_qti_maps"], [181, 2, 1, "", "image_mosaic"]], "dipy.viz.projections": [[181, 2, 1, "", "sph_project"]], "dipy.viz.regtools": [[181, 2, 1, "", "draw_lattice_2d"], [181, 2, 1, "", "overlay_images"], [181, 2, 1, "", "overlay_slices"], [181, 2, 1, "", "plot_2d_diffeomorphic_map"], [181, 2, 1, "", "plot_slices"], [181, 2, 1, "", "simple_plot"]], "dipy.viz.streamline": [[181, 2, 1, "", "show_bundles"], [181, 2, 1, "", "viz_displacement_mag"], [181, 2, 1, "", "viz_two_bundles"], [181, 2, 1, "", "viz_vector_field"]], "dipy.workflows": [[182, 0, 0, "-", "align"], [182, 0, 0, "-", "base"], [182, 0, 0, "-", "cli"], [182, 0, 0, "-", "combined_workflow"], [182, 0, 0, "-", "denoise"], [182, 0, 0, "-", "docstring_parser"], [182, 0, 0, "-", "flow_runner"], [182, 0, 0, "-", "io"], [182, 0, 0, "-", "mask"], [182, 0, 0, "-", "multi_io"], [182, 0, 0, "-", "nn"], [182, 0, 0, "-", "reconst"], [182, 0, 0, "-", "segment"], [182, 0, 0, "-", "stats"], [182, 0, 0, "-", "tracking"], [182, 0, 0, "-", "utils"], [182, 0, 0, "-", "viz"], [182, 0, 0, "-", "workflow"]], "dipy.workflows.align": [[182, 1, 1, "", "ApplyTransformFlow"], [182, 1, 1, "", "BundleWarpFlow"], [182, 1, 1, "", "ImageRegistrationFlow"], [182, 1, 1, "", "MotionCorrectionFlow"], [182, 1, 1, "", "ResliceFlow"], [182, 1, 1, "", "SlrWithQbxFlow"], [182, 1, 1, "", "SynRegistrationFlow"], [182, 2, 1, "", "check_dimensions"]], "dipy.workflows.align.ApplyTransformFlow": [[182, 3, 1, "", "run"]], "dipy.workflows.align.BundleWarpFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.align.ImageRegistrationFlow": [[182, 3, 1, "", "run"]], "dipy.workflows.align.MotionCorrectionFlow": [[182, 3, 1, "", "run"]], "dipy.workflows.align.ResliceFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.align.SlrWithQbxFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.align.SynRegistrationFlow": [[182, 3, 1, "", "run"]], "dipy.workflows.base": [[182, 1, 1, "", "IntrospectiveArgumentParser"], [182, 2, 1, "", "add_default_args_to_docstring"], [182, 2, 1, "", "get_args_default"], [182, 2, 1, "", "none_or_dtype"]], "dipy.workflows.base.IntrospectiveArgumentParser": [[182, 3, 1, "", "add_description"], [182, 3, 1, "", "add_epilogue"], [182, 3, 1, "", "add_sub_flow_args"], [182, 3, 1, "", "add_workflow"], [182, 3, 1, "", "get_flow_args"], [182, 4, 1, "", "optional_parameters"], [182, 4, 1, "", "output_parameters"], [182, 4, 1, "", "positional_parameters"], [182, 3, 1, "", "show_argument"], [182, 3, 1, "", "update_argument"]], "dipy.workflows.cli": [[182, 2, 1, "", "run"]], "dipy.workflows.combined_workflow": [[182, 1, 1, "", "CombinedWorkflow"]], "dipy.workflows.combined_workflow.CombinedWorkflow": [[182, 3, 1, "", "get_optionals"], [182, 3, 1, "", "get_sub_runs"], [182, 3, 1, "", "run_sub_flow"], [182, 3, 1, "", "set_sub_flows_optionals"]], "dipy.workflows.denoise": [[182, 1, 1, "", "GibbsRingingFlow"], [182, 1, 1, "", "LPCAFlow"], [182, 1, 1, "", "MPPCAFlow"], [182, 1, 1, "", "NLMeansFlow"], [182, 1, 1, "", "Patch2SelfFlow"]], "dipy.workflows.denoise.GibbsRingingFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.denoise.LPCAFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.denoise.MPPCAFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.denoise.NLMeansFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.denoise.Patch2SelfFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.docstring_parser": [[182, 1, 1, "", "NumpyDocString"], [182, 1, 1, "", "Reader"], [182, 2, 1, "", "dedent_lines"]], "dipy.workflows.docstring_parser.Reader": [[182, 3, 1, "", "eof"], [182, 3, 1, "", "is_empty"], [182, 3, 1, "", "peek"], [182, 3, 1, "", "read"], [182, 3, 1, "", "read_to_condition"], [182, 3, 1, "", "read_to_next_empty_line"], [182, 3, 1, "", "read_to_next_unindented_line"], [182, 3, 1, "", "reset"], [182, 3, 1, "", "seek_next_non_empty_line"]], "dipy.workflows.flow_runner": [[182, 2, 1, "", "get_level"], [182, 2, 1, "", "run_flow"]], "dipy.workflows.io": [[182, 1, 1, "", "ConcatenateTractogramFlow"], [182, 1, 1, "", "ConvertSHFlow"], [182, 1, 1, "", "ConvertTensorsFlow"], [182, 1, 1, "", "ConvertTractogramFlow"], [182, 1, 1, "", "ExtractB0Flow"], [182, 1, 1, "", "ExtractShellFlow"], [182, 1, 1, "", "ExtractVolumeFlow"], [182, 1, 1, "", "FetchFlow"], [182, 1, 1, "", "IoInfoFlow"], [182, 1, 1, "", "MathFlow"], [182, 1, 1, "", "NiftisToPamFlow"], [182, 1, 1, "", "PamToNiftisFlow"], [182, 1, 1, "", "SplitFlow"], [182, 1, 1, "", "TensorToPamFlow"]], "dipy.workflows.io.ConcatenateTractogramFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.io.ConvertSHFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.io.ConvertTensorsFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.io.ConvertTractogramFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.io.ExtractB0Flow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.io.ExtractShellFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.io.ExtractVolumeFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.io.FetchFlow": [[182, 3, 1, "", "get_fetcher_datanames"], [182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "load_module"], [182, 3, 1, "", "run"]], "dipy.workflows.io.IoInfoFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.io.MathFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.io.NiftisToPamFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.io.PamToNiftisFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.io.SplitFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.io.TensorToPamFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.mask": [[182, 1, 1, "", "MaskFlow"]], "dipy.workflows.mask.MaskFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.multi_io": [[182, 1, 1, "", "IOIterator"], [182, 2, 1, "", "basename_without_extension"], [182, 2, 1, "", "common_start"], [182, 2, 1, "", "concatenate_inputs"], [182, 2, 1, "", "connect_output_paths"], [182, 2, 1, "", "io_iterator"], [182, 2, 1, "", "slash_to_under"]], "dipy.workflows.multi_io.IOIterator": [[182, 3, 1, "", "create_directories"], [182, 3, 1, "", "create_outputs"], [182, 3, 1, "", "file_existence_check"], [182, 3, 1, "", "set_inputs"], [182, 3, 1, "", "set_out_dir"], [182, 3, 1, "", "set_out_fnames"], [182, 3, 1, "", "set_output_keys"]], "dipy.workflows.nn": [[182, 1, 1, "", "BiasFieldCorrectionFlow"], [182, 1, 1, "", "EVACPlusFlow"]], "dipy.workflows.nn.BiasFieldCorrectionFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.nn.EVACPlusFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.reconst": [[182, 1, 1, "", "ReconstCSDFlow"], [182, 1, 1, "", "ReconstDkiFlow"], [182, 1, 1, "", "ReconstDsiFlow"], [182, 1, 1, "", "ReconstDtiFlow"], [182, 1, 1, "", "ReconstForecastFlow"], [182, 1, 1, "", "ReconstGQIFlow"], [182, 1, 1, "", "ReconstIvimFlow"], [182, 1, 1, "", "ReconstMAPMRIFlow"], [182, 1, 1, "", "ReconstQBallBaseFlow"], [182, 1, 1, "", "ReconstRUMBAFlow"], [182, 1, 1, "", "ReconstSDTFlow"], [182, 1, 1, "", "ReconstSFMFlow"]], "dipy.workflows.reconst.ReconstCSDFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.reconst.ReconstDkiFlow": [[182, 3, 1, "", "get_fitted_tensor"], [182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.reconst.ReconstDsiFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.reconst.ReconstDtiFlow": [[182, 3, 1, "", "get_fitted_tensor"], [182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.reconst.ReconstForecastFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.reconst.ReconstGQIFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.reconst.ReconstIvimFlow": [[182, 3, 1, "", "get_fitted_ivim"], [182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.reconst.ReconstMAPMRIFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.reconst.ReconstQBallBaseFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.reconst.ReconstRUMBAFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.reconst.ReconstSDTFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.reconst.ReconstSFMFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.segment": [[182, 1, 1, "", "ClassifyTissueFlow"], [182, 1, 1, "", "LabelsBundlesFlow"], [182, 1, 1, "", "MedianOtsuFlow"], [182, 1, 1, "", "RecoBundlesFlow"]], "dipy.workflows.segment.ClassifyTissueFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.segment.LabelsBundlesFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.segment.MedianOtsuFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.segment.RecoBundlesFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.stats": [[182, 1, 1, "", "BundleAnalysisTractometryFlow"], [182, 1, 1, "", "BundleShapeAnalysis"], [182, 1, 1, "", "LinearMixedModelsFlow"], [182, 1, 1, "", "SNRinCCFlow"], [182, 2, 1, "", "buan_bundle_profiles"]], "dipy.workflows.stats.BundleAnalysisTractometryFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.stats.BundleShapeAnalysis": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.stats.LinearMixedModelsFlow": [[182, 3, 1, "", "get_metric_name"], [182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"], [182, 3, 1, "", "save_lmm_plot"]], "dipy.workflows.stats.SNRinCCFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.tracking": [[182, 1, 1, "", "LocalFiberTrackingPAMFlow"], [182, 1, 1, "", "PFTrackingPAMFlow"]], "dipy.workflows.tracking.LocalFiberTrackingPAMFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.tracking.PFTrackingPAMFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.utils": [[182, 2, 1, "", "handle_vol_idx"]], "dipy.workflows.viz": [[182, 1, 1, "", "HorizonFlow"]], "dipy.workflows.viz.HorizonFlow": [[182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "run"]], "dipy.workflows.workflow": [[182, 1, 1, "", "Workflow"]], "dipy.workflows.workflow.Workflow": [[182, 3, 1, "", "get_io_iterator"], [182, 3, 1, "", "get_short_name"], [182, 3, 1, "", "get_sub_runs"], [182, 3, 1, "", "manage_output_overwrite"], [182, 3, 1, "", "run"], [182, 3, 1, "", "update_flat_outputs"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function", "3": "py:method", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"api": [0, 183], "chang": [0, 7, 16], "dipi": [0, 2, 4, 10, 15, 19, 22, 23, 29, 45, 67, 71, 77, 155, 158, 167, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 274, 275, 278, 280], "1": [0, 5, 33, 35, 69, 73, 75, 93, 166, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "10": [0, 240, 253], "0": [0, 5, 166, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "9": [0, 250, 263], "8": [0, 166, 249, 262], "7": [0, 5, 166, 248, 261], "6": [0, 166, 247, 260], "5": [0, 5, 166, 259], "4": [0, 5, 257, 258], "3": [0, 5, 35, 69, 73, 166, 256], "2": [0, 5, 33, 35, 69, 73, 75, 93, 166, 255], "16": [0, 5, 166, 246], "15": [0, 245], "14": [0, 244], "13": [0, 166, 243], "12": [0, 242], "between": [0, 61, 89, 115, 159], "public": 1, "A": [1, 16, 22, 265], "note": [1, 41, 168, 179, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 279], "cite": 1, "our": 1, "work": [1, 15, 102], "other": [1, 7, 22], "algorithm": [1, 56, 98], "benchmark": [2, 23], "prerequisit": 2, "get": [2, 9, 20, 35, 67, 69, 274, 277], "start": [2, 45, 66, 67, 277], "run": [2, 182], "compar": 2, "result": [2, 152], "version": [2, 5, 23, 166, 180, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 276, 279], "contribut": 2, "write": [2, 44], "embrac": 2, "speed": 2, "bibliographi": [3, 273], "code": [4, 5, 9, 15], "style": 4, "guidelin": 4, "import": [4, 179], "cython": 4, "variabl": 4, "declar": 4, "us": [4, 41, 47, 48, 53, 55, 56, 57, 62, 70, 84, 89, 90, 95, 98, 121, 156, 174, 279], "c": 4, "librari": 4, "error": 4, "return": 4, "valu": [4, 140, 142], "pointer": 4, "refer": [4, 23, 25, 26, 30, 32, 33, 35, 36, 38, 39, 40, 41, 53, 54, 55, 56, 57, 58, 59, 61, 62, 65, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 128, 129, 130, 131, 133, 139, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 168, 169, 173, 174, 175, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 271], "cast": 4, "loop": 4, "document": [4, 20, 23, 150], "svg": [5, 166], "width": [5, 166], "0em": [5, 166], "height": [5, 166], "class": [5, 166], "sd": [5, 39, 166], "octicon": [5, 166], "git": [5, 6, 11, 12, 14], "commit": [5, 7, 16], "text": 5, "info": 5, "viewbox": [5, 166], "aria": [5, 166], "hidden": [5, 166], "true": [5, 166], "path": [5, 133, 166], "fill": [5, 166], "rule": [5, 166], "evenodd": [5, 166], "d": [5, 166], "m10": 5, "75a2": 5, "11": [5, 166, 241, 254], "015": 5, "0zm1": 5, "43": 5, "75a4": 5, "002": 5, "01": [5, 166], "86": 5, "0h": 5, "75a": 5, "75": [5, 166], "110": 5, "5h3": 5, "32a4": 5, "001": 5, "017": 5, "0h3": 5, "32a": 5, "5h": 5, "32z": 5, "messag": 5, "configur": [6, 10], "overview": [6, 7, 12, 17, 18, 44, 156, 162, 265], "In": [6, 7, 12, 17, 18, 150], "detail": [6, 7, 12, 17, 18], "user": [6, 278], "name": 6, "email": 6, "alias": 6, "editor": 6, "merg": [6, 7], "fanci": 6, "log": 6, "output": [6, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238], "develop": [7, 11, 17, 19, 24], "workflow": [7, 14, 16, 45, 143, 144, 146, 158, 182], "summari": [7, 14], "consid": 7, "delet": 7, "your": [7, 10, 18, 140, 142], "master": 7, "branch": 7, "updat": [7, 9], "mirror": 7, "trunk": [7, 16], "make": [7, 10, 17, 22], "new": [7, 143, 146], "featur": [7, 115, 117, 265], "The": [7, 267, 268, 272], "edit": 7, "more": 7, "ask": [7, 147], "review": 7, "some": 7, "thing": 7, "you": 7, "might": 7, "want": 7, "do": [7, 22], "github": [7, 10], "sever": 7, "peopl": 7, "share": 7, "singl": [7, 82], "repositori": [7, 18], "explor": 7, "rebas": 7, "recov": 7, "from": [7, 17, 20, 35, 69, 73, 128, 140, 142], "mess": 7, "up": [7, 10, 18], "rewrit": 7, "histori": [7, 16], "two": 8, "three": 8, "dot": 8, "differ": [8, 117, 140], "spec": 8, "follow": 9, "latest": 9, "sourc": [9, 15, 20], "local": [9, 55, 57, 70, 156, 162], "copi": [9, 10], "own": 10, "fork": [10, 18], "set": [10, 18, 35, 69], "account": 10, "creat": [10, 142, 143, 146], "instal": [12, 20, 92, 279], "introduct": [13, 21, 34, 35, 37, 51, 69, 151], "resourc": 14, "tutori": 14, "advanc": [14, 139], "manual": 14, "page": 14, "onlin": 14, "maintain": 16, "integr": 16, "few": 16, "long": 16, "seri": 16, "check": 16, "push": 16, "patch": 17, "move": 17, "clone": 18, "link": [18, 150], "upstream": 18, "repo": 18, "guid": [19, 22, 278], "build": [20, 22, 23], "all": 20, "oper": 20, "system": [20, 265], "recommend": 20, "unix": 20, "e": 20, "g": 20, "linux": [20, 279], "maco": 20, "ubuntu": 20, "debian": 20, "fedora": 20, "mandriva": 20, "mayb": 20, "redhat": 20, "window": [20, 279], "openmp": 20, "under": 20, "anaconda": [20, 279], "homebrew": 20, "python": [20, 23, 150, 167, 276, 279], "org": 20, "test": [20, 23, 89], "tip": 20, "troubleshoot": 20, "releas": [22, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 279], "checklist": 22, "upload": 22, "binari": [22, 41, 106], "stuff": [22, 267], "need": 22, "toolchain": 23, "roadmap": 23, "numpi": 23, "compil": 23, "offici": 23, "packag": [23, 279], "cross": [25, 72, 83], "preserv": 25, "contextu": [25, 27, 45], "enhanc": [25, 27, 45, 117], "fiber": [26, 29, 45, 75, 83, 93, 112, 162], "bundl": [26, 102, 103, 104, 112, 128, 129, 130, 140, 152, 153, 154, 176], "coher": 26, "measur": 26, "acknowledg": 26, "comput": [28, 31, 43, 49, 64, 68, 99, 107, 119, 122, 125, 134, 138, 145, 264], "time": [28, 31, 43, 49, 64, 68, 90, 99, 107, 119, 122, 125, 134, 138, 145, 264], "track": [29, 35, 39, 40, 45, 51, 69, 162, 179, 182], "tractographi": [29, 32, 34, 36, 37, 38, 41, 45, 50, 115, 116, 118], "method": [29, 45, 71, 156, 162], "avail": [29, 45, 71, 115, 116, 274, 275], "linear": [30, 153, 175], "fascicl": [30, 40, 94], "evalu": 30, "life": [30, 179], "surfac": [32, 141, 163, 173, 181], "seed": [32, 35, 69], "displai": 32, "gener": [32, 85, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 273], "list": [32, 274], "posit": [32, 92], "bootstrap": 33, "closest": [33, 162], "peak": [33, 162, 172, 173, 181], "direct": [33, 35, 69, 103, 172], "getter": 33, "exampl": [33, 45, 91, 92, 102], "csd": [33, 48, 75, 88, 160], "model": [33, 39, 40, 72, 75, 76, 77, 78, 82, 83, 84, 87, 93, 94, 96, 174], "an": [34, 37, 51, 140], "determinist": [34, 162], "basic": [35, 69], "step": [35, 69, 73, 75, 93, 277], "diffus": [35, 63, 65, 69, 76, 77, 78, 79, 82, 87, 89, 90, 96, 121, 150, 156, 160, 167, 174], "dataset": [35, 61, 63, 69, 152, 155, 274, 275], "identifi": [35, 69], "when": [35, 69], "must": [35, 69], "stop": [35, 36, 41, 69], "defin": [35, 69], "which": [35, 69], "begin": [35, 69], "particl": [36, 162], "filter": [36, 162], "cmc": 36, "act": [36, 41], "criterion": [36, 41], "probabilist": [37, 162], "parallel": [38, 47, 48], "transport": 38, "robust": [39, 93, 98], "unbias": [39, 93], "base": [39, 80, 93, 108, 153, 161, 175, 181, 182, 271], "spheric": [39, 75, 93, 95, 160, 175, 271, 272], "deconvolut": [39, 75, 81, 93, 124, 160], "rumba": [39, 93, 175], "spars": [40, 94], "variou": 41, "threshold": [41, 55, 176], "file": [42, 44, 45], "format": [42, 45], "read": 44, "streamlin": [44, 45, 108, 113, 132, 135, 140, 141, 153, 161, 173, 179, 181], "content": 45, "quick": [45, 66, 150, 265], "preprocess": [45, 60], "reconstruct": [45, 47, 48, 70, 71, 73, 74, 75, 76, 77, 78, 79, 82, 85, 88, 89, 91, 93, 94, 95, 160], "analysi": [45, 132, 178], "connect": [45, 132, 136], "registr": [45, 100, 101, 102, 103, 104, 105, 106, 109, 110, 153, 154, 161], "segment": [45, 52, 111, 114, 128, 153, 176, 182], "simul": [45, 123, 126, 127], "multiprocess": [45, 46], "visual": [45, 137, 139, 140, 141, 163, 181], "q": [47, 74, 85, 90, 91, 92, 267, 269], "ball": [47, 74], "fast": [51, 113], "modul": [51, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182], "brain": [52, 111, 163], "median_otsu": [52, 111, 176], "denois": [53, 55, 56, 57, 58, 156, 171, 174, 182], "imag": [53, 55, 56, 57, 65, 79, 85, 89, 91, 92, 106, 108, 120, 150, 160, 161, 163, 167, 173, 174, 269], "adapt": 53, "soft": 53, "coeffici": 53, "match": 53, "ascm": 53, "suppress": [54, 157], "gibb": [54, 157, 171], "oscil": [54, 157], "pca": [55, 56, 156], "via": [55, 58], "empir": 55, "estim": [55, 56, 62, 65, 73, 75, 90, 93], "nois": [55, 56, 62], "standard": [55, 56], "deviat": [55, 56], "perform": 55, "localpca": [55, 171], "function": [55, 73, 75, 83, 93], "marcenko": [56, 156], "pastur": [56, 156], "marchenko": 56, "non": 57, "mean": [57, 89, 160], "nlmean": [57, 156, 171], "patch2self": [58, 171], "self": 58, "supervis": 58, "statist": 58, "independ": 58, "gradient": [59, 169, 173, 179], "sphere": [59, 169], "volum": [61, 140, 142, 159], "motion": [61, 86, 159, 160], "correct": [61, 159], "dwi": 61, "piesno": [62, 171], "reslic": [63, 168], "snr": 65, "weight": [65, 120, 174], "histolog": 70, "resdnn": 70, "k": 72, "fold": 72, "valid": 72, "comparison": [72, 152], "bingham": [73, 175], "odf": [73, 175], "fit": [73, 77, 98], "metric": [73, 77, 116, 117, 140, 168, 176, 179], "constant": [74, 160], "solid": [74, 160], "angl": [74, 160], "constrain": [75, 77, 160], "respons": [75, 83, 93], "fodf": [75, 93], "signal": [76, 77, 78, 82, 87, 89, 95, 96], "correl": 76, "tensor": [76, 77, 82, 98, 160], "cti": [76, 175], "kurtosi": [77, 89, 160], "dki": [77, 78, 126, 160, 175], "theori": [77, 91, 92, 270], "mitig": 77, "black": 77, "voxel": [77, 177], "hole": 77, "altern": [77, 279], "optim": [77, 169], "wmti": 78, "micro": 78, "spectrum": 79, "dsi": [79, 80, 81, 124, 175], "calcul": [80, 97, 131, 133], "scalar": [80, 97], "map": [80, 87, 97, 129, 133, 136, 160], "dsid": [81, 124], "v": [81, 124], "dti": [82, 84, 160, 175], "invari": 83, "forecast": [83, 175], "free": 84, "water": 84, "elimin": 84, "remov": 84, "contamin": 84, "sampl": [85, 269], "intravoxel": [86, 160], "incoher": [86, 160], "ivim": [86, 160, 175], "continu": [87, 96], "analyt": [87, 96, 152], "mri": [87, 121, 160], "multi": 88, "shell": 88, "tissu": [88, 120, 121, 176], "msdki": [89, 175], "synthet": 89, "data": [89, 170, 174, 274], "relationship": 89, "smt2": 89, "depend": [90, 276], "space": [90, 91, 92, 173], "indic": 90, "qt": 90, "dmri": [90, 163], "trajectori": [91, 92], "qti": [91, 92, 175], "usag": [91, 92, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238], "appli": [92, 108, 161], "constraint": 92, "sfm": [94, 175], "harmon": [95, 271], "3d": [96, 100, 110, 163], "shore": [96, 97, 175], "restor": 98, "affin": [100, 101, 168], "mask": [101, 176, 182], "groupwis": 102, "how": [102, 274], "extend": [102, 117], "capabl": 102, "nonrigid": [104, 154], "bundlewarp": [104, 154, 168], "diffeomorph": [106, 109, 110, 161], "fuzzi": 106, "deform": [108, 154], "symmetr": [109, 110, 161], "2d": 109, "automat": 112, "extract": [112, 128], "recobundl": [112, 153, 176], "search": 113, "cluster": [115, 116, 117, 118, 131, 176, 181], "ident": [115, 176], "resampl": [115, 168], "center": 115, "mass": 115, "midpoint": [115, 179], "arclength": 115, "vector": 115, "endpoint": [115, 179], "averag": 116, "pointwis": 116, "euclidean": 116, "sum": 116, "cosin": 116, "quickbundl": [117, 118, 176], "framework": [117, 152], "classif": [120, 121], "t1": [120, 142], "structur": [120, 156], "dam": 121, "multitensor": [126, 127], "afq": 128, "tract": 128, "profil": [128, 152, 169], "buan": [129, 130, 152], "assign": 129, "creation": 129, "shape": [130, 152], "similar": [130, 152], "score": 130, "outlier": 131, "confid": 131, "index": 131, "length": [133, 135, 179], "size": 135, "reduct": 135, "matric": 136, "roi": [136, 141, 181], "intersect": 136, "densiti": 136, "interact": 139, "show": 140, "everi": 140, "orient": 140, "color": 140, "point": 140, "default": 140, "colormap": [140, 142], "specif": [140, 142, 152], "render": [141, 142], "simpl": 142, "slice": [142, 181], "rang": 142, "fa": 142, "mosaic": 142, "combin": 143, "frequent": 147, "question": 147, "theoret": 147, "practic": 147, "gimbal": 148, "lock": 148, "mathemat": [148, 272], "glossari": 149, "highlight": [150, 164], "announc": [150, 165], "command": [151, 239], "line": [151, 239], "interfac": [151, 158], "group": 152, "across": 152, "popul": 152, "reproduc": 152, "larger": 152, "white": [153, 154], "matter": [153, 154], "partial": 154, "fulli": 154, "download": 155, "overcomplet": 156, "unring": 157, "appar": 160, "propag": 160, "csa": 160, "transform": 161, "eudx": 162, "pft": 162, "horizon": [163, 181], "4d": 163, "tractogram": 163, "older": 164, "past": 165, "mortar": 166, "board": 166, "m7": 166, "693": 166, "066a": 166, "614": 166, "0l7": 166, "25": 166, "25a": 166, "010": 166, "368l13": 166, "831v2": 166, "794c0": 166, "024": 166, "81": 166, "749": 166, "66": 166, "173": 166, "893": 166, "447": 166, "075": 166, "702": 166, "34": 166, "278": 166, "55": 166, "012": 166, "816": 166, "036a": 166, "133": 166, "494c": 166, "22": 166, "02": 166, "45": 166, "03": 166, "683": 166, "082": 166, "025": 166, "221": 166, "67": 166, "543": 166, "69": 166, "345": 166, "83": 166, "682": 166, "832v7": 166, "503l8": 166, "307": 166, "934a": 166, "0l4": 166, "28v1": 166, "663c": 166, "296": 166, "105": 166, "575": 166, "275": 166, "812": 166, "512": 166, "438": 166, "688": 166, "059": 166, "796v3a": 166, "75h": 166, "3a": 166, "75v": 166, "3c0": 166, "737": 166, "358": 166, "796": 166, "237": 166, "516": 166, "407": 166, "512v6": 166, "606l": 166, "443": 166, "684a": 166, "368l7": 166, "25zm2": 166, "583": 166, "5l8": 166, "428": 166, "416": 166, "572": 166, "5zm2": 166, "25c0": 166, "388": 166, "125": 166, "611": 166, "735a": 166, "704": 166, "203c": 166, "19": 166, "37": 166, "071": 166, "203": 166, "124": 166, "347": 166, "735v2": 166, "25h2": 166, "5v": 166, "25z": 166, "recip": 166, "subpackag": 167, "util": [167, 173, 174, 175, 176, 179, 181, 182, 239], "get_info": 167, "align": [168, 182], "_public": 168, "cpd": 168, "imaffin": 168, "imwarp": 168, "scalespac": 168, "streamlinear": 168, "streamwarp": 168, "bunch": 168, "syn_registr": 168, "register_dwi_to_templ": 168, "write_map": 168, "read_map": 168, "affine_registr": 168, "center_of_mass": [168, 179], "translat": 168, "rigid": 168, "rigid_isosc": 168, "rigid_sc": 168, "register_seri": 168, "register_dwi_seri": 168, "motion_correct": 168, "streamline_registr": 168, "deformableregistr": 168, "gaussian_kernel": 168, "low_rank_eigen": 168, "initialize_sigma2": 168, "lowrankq": 168, "affineinversionerror": 168, "affineinvalidvalueserror": 168, "affinemap": 168, "mutualinformationmetr": 168, "affineregistr": 168, "transform_centers_of_mass": 168, "transform_geometric_cent": 168, "transform_origin": 168, "diffeomorphicmap": 168, "diffeomorphicregistr": 168, "symmetricdiffeomorphicregistr": 168, "mult_aff": 168, "get_direction_and_spac": 168, "similaritymetr": 168, "ccmetric": 168, "emmetr": 168, "ssdmetric": 168, "v_cycle_2d": 168, "v_cycle_3d": 168, "isotropicscalespac": 168, "streamlinedistancemetr": 168, "bundlemindistancemetr": 168, "bundlemindistancematrixmetr": 168, "bundlemindistanceasymmetricmetr": 168, "bundlesumdistancematrixmetr": 168, "jointbundlemindistancemetr": 168, "streamlinelinearregistr": 168, "streamlineregistrationmap": 168, "jointstreamlineregistrationmap": 168, "bundle_sum_dist": 168, "bundle_min_dist": 168, "bundle_min_distance_fast": 168, "bundle_min_distance_asymmetric_fast": 168, "remove_clusters_by_s": 168, "progressive_slr": 168, "slr_with_qbx": 168, "groupwise_slr": 168, "get_unique_pair": 168, "compose_matrix44": 168, "decompose_matrix44": 168, "average_bundle_length": 168, "find_miss": 168, "bundlewarp_vector_fil": 168, "bundlewarp_shape_analysi": 168, "core": 169, "geometri": 169, "graph": 169, "histeq": 169, "ndindex": 169, "onetim": 169, "rng": 169, "sphere_stat": 169, "subdivide_octahedron": 169, "wavelet": 169, "sphere2cart": 169, "cart2spher": 169, "sph2latlon": 169, "normalized_vector": 169, "vector_norm": 169, "rodrigues_axis_rot": 169, "nearest_pos_semi_def": 169, "sphere_dist": 169, "cart_dist": 169, "vector_cosin": 169, "lambert_equal_area_projection_polar": 169, "lambert_equal_area_projection_cart": 169, "euler_matrix": 169, "compose_matrix": 169, "decompose_matrix": 169, "circumradiu": 169, "vec2vec_rotmat": 169, "compose_transform": 169, "perpendicular_direct": 169, "dist_to_corn": 169, "is_hemispher": 169, "gradientt": 169, "b0_threshold_empty_gradient_messag": 169, "b0_threshold_update_slicing_messag": 169, "mask_non_weighted_bv": 169, "gradient_table_from_bvals_bvec": 169, "gradient_table_from_qvals_bvec": 169, "gradient_table_from_gradient_strength_bvec": 169, "gradient_t": 169, "reorient_bvec": 169, "generate_bvec": 169, "round_bval": 169, "unique_bvals_toler": 169, "get_bval_indic": 169, "unique_bvals_magnitud": 169, "check_multi_b": 169, "btens_to_param": 169, "params_to_bten": 169, "ornt_map": 169, "reorient_vector": 169, "reorient_on_axi": 169, "orientation_from_str": 169, "orientation_to_str": 169, "extract_b0": 169, "extract_dwi_shel": 169, "resetmixin": 169, "onetimeproperti": 169, "auto_attr": 169, "sklearnlinearsolv": 169, "nonnegativeleastsquar": 169, "positivedefiniteleastsquar": 169, "spdot": 169, "sparse_nnl": 169, "wichmannhill2006": 169, "wichmannhill1982": 169, "lecuy": 169, "hemispher": 169, "faces_from_sphere_vertic": 169, "unique_edg": 169, "unique_set": 169, "disperse_charg": 169, "fibonacci_spher": 169, "disperse_charges_alt": 169, "euler_characteristic_check": 169, "random_uniform_on_spher": 169, "eigenstat": 169, "compare_orientation_set": 169, "angular_similar": 169, "create_unit_spher": 169, "create_unit_hemispher": 169, "cshift3d": 169, "permutationinvers": 169, "afb3d_a": 169, "sfb3d_a": 169, "sfb3d": 169, "afb3d": 169, "dwt3d": 169, "idwt3d": 169, "fetcher": 170, "dataerror": 170, "loads_compat": 170, "get_sim_voxel": 170, "get_skeleton": 170, "get_spher": 170, "get_3shell_gtab": 170, "get_isbi2013_2shell_gtab": 170, "get_gtab_taiwan_dsi": 170, "dsi_voxel": 170, "dsi_deconv_voxel": 170, "mrtrix_spherical_funct": 170, "get_cmap": 170, "two_cingulum_bundl": 170, "matlab_life_result": 170, "load_sdp_constraint": 170, "copyfileobj_withprogress": 170, "check_md5": 170, "fetch_data": 170, "fetch_isbi2013_2shel": 170, "fetch_stanford_label": 170, "fetch_sherbrooke_3shel": 170, "fetch_stanford_hardi": 170, "fetch_resdnn_tf_weight": 170, "fetch_resdnn_torch_weight": 170, "fetch_synb0_weight": 170, "fetch_synb0_test": 170, "fetch_deepn4_tf_weight": 170, "fetch_deepn4_torch_weight": 170, "fetch_deepn4_test": 170, "fetch_evac_tf_weight": 170, "fetch_evac_torch_weight": 170, "fetch_evac_test": 170, "fetch_stanford_t1": 170, "fetch_stanford_pve_map": 170, "fetch_stanford_track": 170, "fetch_taiwan_ntu_dsi": 170, "fetch_syn_data": 170, "fetch_mni_templ": 170, "fetch_scil_b0": 170, "fetch_bundles_2_subject": 170, "fetch_ivim": 170, "fetch_cfin_multib": 170, "fetch_file_format": 170, "fetch_bundle_atlas_hcp842": 170, "fetch_30_bundle_atlas_hcp842": 170, "fetch_target_tractogram_hcp": 170, "fetch_bundle_fa_hcp": 170, "fetch_qtdmri_test_retest_2subject": 170, "fetch_gold_standard_io": 170, "fetch_qte_lte_pt": 170, "fetch_cti_rat1": 170, "fetch_fury_surfac": 170, "fetch_dib_70_lte_pte_st": 170, "fetch_dib_217_lte_pte_st": 170, "fetch_ptt_minimal_dataset": 170, "fetch_bundle_warp_dataset": 170, "fetch_disco1_dataset": 170, "fetch_disco2_dataset": 170, "fetch_disco3_dataset": 170, "fetch_disco_dataset": 170, "get_fnam": 170, "read_qtdmri_test_retest_2subject": 170, "read_scil_b0": 170, "read_siemens_scil_b0": 170, "read_isbi2013_2shel": 170, "read_sherbrooke_3shel": 170, "read_stanford_label": 170, "read_stanford_hardi": 170, "read_stanford_t1": 170, "read_stanford_pve_map": 170, "read_taiwan_ntu_dsi": 170, "read_syn_data": 170, "fetch_tissue_data": 170, "read_tissue_data": 170, "read_mni_templ": 170, "fetch_cenir_multib": 170, "read_cenir_multib": 170, "read_bundles_2_subject": 170, "read_ivim": 170, "read_cfin_dwi": 170, "read_cfin_t1": 170, "get_file_format": 170, "get_bundle_atlas_hcp842": 170, "get_two_hcp842_bundl": 170, "get_target_tractogram_hcp": 170, "read_qte_lte_pt": 170, "read_dib_70_lte_pte_st": 170, "read_dib_217_lte_pte_st": 170, "extract_example_tract": 170, "read_five_af_bundl": 170, "to_bids_descript": 170, "fetch_hcp": 170, "fetch_hbn": 170, "adaptive_soft_match": 171, "noise_estim": 171, "non_local_mean": 171, "gibbs_remov": 171, "dimensionality_problem_messag": 171, "create_patch_radius_arr": 171, "compute_patch_s": 171, "compute_num_sampl": 171, "compute_suggested_patch_radiu": 171, "genpca": 171, "mppca": 171, "estimate_sigma": 171, "vol_denois": 171, "peaksandmetr": 172, "peak_directions_nl": 172, "peaks_from_model": 172, "reshape_peaks_for_visu": 172, "peaks_from_posit": 172, "io": [173, 182], "dpy": 173, "pickl": 173, "stateful_tractogram": 173, "vtk": 173, "read_bvals_bvec": 173, "load_nifti_data": 173, "load_nifti": 173, "save_nifti": 173, "save_qa_metr": 173, "load_peak": 173, "load_pam": 173, "save_peak": 173, "save_pam": 173, "peaks_to_nifti": 173, "pam_to_nifti": 173, "niftis_to_pam": 173, "tensor_to_pam": 173, "save_pickl": 173, "load_pickl": 173, "origin": 173, "statefultractogram": 173, "save_tractogram": 173, "load_tractogram": 173, "load_gener": 173, "save_gener": 173, "load_trk": 173, "load_tck": 173, "load_trx": 173, "load_vtk": 173, "load_vtp": 173, "load_fib": 173, "load_dpi": 173, "save_trk": 173, "save_tck": 173, "save_trx": 173, "save_vtk": 173, "save_vtp": 173, "save_fib": 173, "save_dpi": 173, "load_pial": 173, "load_gifti": 173, "nifti1_symmat": 173, "make5d": 173, "decfa": 173, "decfa_to_float": 173, "is_reference_info_valid": 173, "split_name_with_gz": 173, "get_reference_info": 173, "is_header_compat": 173, "create_tractogram_head": 173, "create_nifti_head": 173, "save_buan_profiles_hdf5": 173, "read_img_arr_or_path": 173, "load_polydata": 173, "save_polydata": 173, "save_vtk_streamlin": 173, "load_vtk_streamlin": 173, "nn": [174, 182], "tf": 174, "cnn_1d_denois": 174, "titl": 174, "cnn": 174, "deepn4": 174, "evac": 174, "histo_resdnn": 174, "synb0": 174, "torch": 174, "cnn1ddenois": 174, "encoderblock": 174, "decoderblock": 174, "unet3d": 174, "block": 174, "channelsum": 174, "evacplu": 174, "prepare_img": 174, "init_model": 174, "historesdnn": 174, "singlelayerperceptron": 174, "multiplelayerpercepton": 174, "movedimlay": 174, "add": 174, "densemodel": 174, "normal": 174, "unnorm": 174, "transform_img": 174, "recover_img": 174, "pad_crop": 174, "reconst": [175, 182], "cach": 175, "cross_valid": 175, "csdeconv": 175, "dki_micro": 175, "fwdti": 175, "gqi": 175, "mapmri": 175, "mcsd": 175, "multi_voxel": 175, "qtdmri": 175, "shm": 175, "weights_method": 175, "reconstmodel": 175, "reconstfit": 175, "binghammetr": 175, "bingham_to_sf": 175, "bingham_fiber_dens": 175, "bingham_fiber_spread": 175, "k2odi": 175, "odi2k": 175, "weighted_voxel_metr": 175, "sf_to_bingham": 175, "sh_to_bingham": 175, "coeff_of_determin": 175, "kfold_xval": 175, "axsymshrespons": 175, "constrainedsphericaldeconvmodel": 175, "constrainedsdtmodel": 175, "estimate_respons": 175, "forward_sdt_deconv_mat": 175, "odf_deconv": 175, "odf_sh_to_sharp": 175, "mask_for_response_ssst": 175, "response_from_mask_ssst": 175, "auto_response_ssst": 175, "recursive_respons": 175, "fa_trace_to_lambda": 175, "correlationtensormodel": 175, "correlationtensorfit": 175, "from_qte_to_cti": 175, "multi_gaussian_k_from_c": 175, "split_cti_param": 175, "cti_predict": 175, "params_to_cti_param": 175, "ls_fit_cti": 175, "diffusionkurtosismodel": 175, "diffusionkurtosisfit": 175, "carlson_rf": 175, "carlson_rd": 175, "directional_diffus": 175, "directional_diffusion_vari": 175, "directional_kurtosi": 175, "apparent_kurtosis_coef": 175, "mean_kurtosi": 175, "radial_kurtosi": 175, "axial_kurtosi": 175, "kurtosis_maximum": 175, "mean_kurtosis_tensor": 175, "radial_tensor_kurtosi": 175, "kurtosis_fractional_anisotropi": 175, "dki_predict": 175, "params_to_dki_param": 175, "ls_fit_dki": 175, "cls_fit_dki": 175, "wrotat": 175, "wrotate_el": 175, "wcon": 175, "split_dki_param": 175, "kurtosismicrostructuremodel": 175, "kurtosismicrostructuralfit": 175, "axonal_water_fract": 175, "diffusion_compon": 175, "dkimicro_predict": 175, "tortuos": 175, "diffusionspectrummodel": 175, "diffusionspectrumfit": 175, "diffusionspectrumdeconvmodel": 175, "diffusionspectrumdeconvfit": 175, "create_qspac": 175, "create_qt": 175, "hanning_filt": 175, "pdf_interp_coord": 175, "pdf_odf": 175, "half_to_full_qspac": 175, "project_hemisph_bvec": 175, "threshold_propag": 175, "gen_psf": 175, "lr_deconv": 175, "tensormodel": 175, "tensorfit": 175, "fractional_anisotropi": 175, "geodesic_anisotropi": 175, "mean_diffus": 175, "axial_diffus": 175, "radial_diffus": 175, "trace": 175, "color_fa": 175, "determin": 175, "isotrop": 175, "deviator": 175, "norm": 175, "mode": 175, "planar": 175, "apparent_diffusion_coef": 175, "tensor_predict": 175, "iter_fit_tensor": 175, "wls_fit_tensor": 175, "ols_fit_tensor": 175, "nlls_fit_tensor": 175, "restore_fit_tensor": 175, "iterative_fit_tensor": 175, "robust_fit_tensor_wl": 175, "robust_fit_tensor_nl": 175, "from_lower_triangular": 175, "lower_triangular": 175, "decompose_tensor": 175, "design_matrix": 175, "quantize_evec": 175, "eig_from_lo_tri": 175, "forecastmodel": 175, "forecastfit": 175, "find_signal_mean": 175, "forecast_error_func": 175, "psi_l": 175, "forecast_matrix": 175, "rho_matrix": 175, "lb_forecast": 175, "freewatertensormodel": 175, "freewatertensorfit": 175, "fwdti_predict": 175, "wls_iter": 175, "nls_iter": 175, "nls_fit_tensor": 175, "lower_triangular_to_choleski": 175, "cholesky_to_lower_triangular": 175, "generalizedqsamplingmodel": 175, "generalizedqsamplingfit": 175, "normalize_qa": 175, "squared_radial_compon": 175, "npa": 175, "equatorial_zone_vertic": 175, "polar_zone_vertic": 175, "upper_hemi_map": 175, "equatorial_maximum": 175, "patch_vertic": 175, "patch_maximum": 175, "odf_sum": 175, "patch_sum": 175, "triple_odf_maxima": 175, "ivimmodeltrr": 175, "ivimmodelvp": 175, "ivimfit": 175, "ivim_predict": 175, "f_d_star_predict": 175, "f_d_star_error": 175, "ivim_model_selector": 175, "mapmrimodel": 175, "mapmrifit": 175, "isotropic_scale_factor": 175, "mapmri_index_matrix": 175, "b_mat": 175, "b_mat_isotrop": 175, "mapmri_phi_1d": 175, "mapmri_phi_matrix": 175, "mapmri_psi_1d": 175, "mapmri_psi_matrix": 175, "mapmri_odf_matrix": 175, "mapmri_isotropic_phi_matrix": 175, "mapmri_isotropic_radial_signal_basi": 175, "mapmri_isotropic_m_mu_independ": 175, "mapmri_isotropic_m_mu_depend": 175, "mapmri_isotropic_psi_matrix": 175, "mapmri_isotropic_radial_pdf_basi": 175, "mapmri_isotropic_k_mu_independ": 175, "mapmri_isotropic_k_mu_depend": 175, "binomialfloat": 175, "mapmri_isotropic_odf_matrix": 175, "mapmri_isotropic_odf_sh_matrix": 175, "mapmri_isotropic_laplacian_reg_matrix": 175, "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix": 175, "mapmri_isotropic_index_matrix": 175, "create_rspac": 175, "delta": 175, "map_laplace_u": 175, "map_laplace_t": 175, "map_laplace_": 175, "mapmri_stu_reg_matric": 175, "mapmri_laplacian_reg_matrix": 175, "generalized_crossvalidation_arrai": 175, "generalized_crossvalid": 175, "gcv_cost_funct": 175, "multishellrespons": 175, "multishelldeconvmodel": 175, "msdeconvfit": 175, "qpfitter": 175, "multi_tissue_basi": 175, "solve_qp": 175, "multi_shell_fiber_respons": 175, "mask_for_response_msmt": 175, "response_from_mask_msmt": 175, "auto_response_msmt": 175, "meandiffusionkurtosismodel": 175, "meandiffusionkurtosisfit": 175, "mean_signal_bvalu": 175, "msk_from_awf": 175, "awf_from_msk": 175, "msdki_predict": 175, "wls_fit_msdki": 175, "multivoxelfit": 175, "callablearrai": 175, "multi_voxel_fit": 175, "odfmodel": 175, "odffit": 175, "gfa": 175, "minmax_norm": 175, "qtdmrimodel": 175, "qtdmrifit": 175, "qtdmri_to_mapmri_matrix": 175, "qtdmri_isotropic_to_mapmri_matrix": 175, "qtdmri_temporal_norm": 175, "qtdmri_mapmri_norm": 175, "qtdmri_mapmri_isotropic_norm": 175, "qtdmri_signal_matrix": 175, "qtdmri_eap_matrix": 175, "qtdmri_isotropic_signal_matrix": 175, "qtdmri_isotropic_eap_matrix": 175, "radial_basis_opt": 175, "angular_basis_opt": 175, "radial_basis_eap_opt": 175, "angular_basis_eap_opt": 175, "temporal_basi": 175, "qtdmri_index_matrix": 175, "qtdmri_isotropic_index_matrix": 175, "qtdmri_laplacian_reg_matrix": 175, "qtdmri_isotropic_laplacian_reg_matrix": 175, "part23_reg_matrix_q": 175, "part23_iso_reg_matrix_q": 175, "part4_reg_matrix_q": 175, "part4_iso_reg_matrix_q": 175, "part1_reg_matrix_tau": 175, "part23_reg_matrix_tau": 175, "part4_reg_matrix_tau": 175, "h": 175, "qtdmri_isotropic_sc": 175, "qtdmri_anisotropic_sc": 175, "design_matrix_spati": 175, "create_rt_space_grid": 175, "qtdmri_number_of_coeffici": 175, "l1_crossvalid": 175, "elastic_crossvalid": 175, "visualise_gradient_table_g_delta_rainbow": 175, "qtimodel": 175, "qtifit": 175, "from_3x3_to_6x1": 175, "from_6x1_to_3x3": 175, "from_6x6_to_21x1": 175, "from_21x1_to_6x6": 175, "cvxpy_1x6_to_3x3": 175, "cvxpy_1x21_to_6x6": 175, "dtd_covari": 175, "qti_sign": 175, "rumbasdmodel": 175, "rumbafit": 175, "rumba_deconv": 175, "mbessel_ratio": 175, "generate_kernel": 175, "rumba_deconv_glob": 175, "isotropicmodel": 175, "isotropicfit": 175, "exponentialisotropicmodel": 175, "exponentialisotropicfit": 175, "sparsefasciclemodel": 175, "sparsefasciclefit": 175, "sfm_design_matrix": 175, "sphharmmodel": 175, "qballbasemodel": 175, "sphharmfit": 175, "csaodfmodel": 175, "opdtmodel": 175, "qballmodel": 175, "residualbootstrapwrapp": 175, "forward_sdeconv_mat": 175, "sh_to_rh": 175, "gen_dirac": 175, "spherical_harmon": 175, "real_sph_harm": 175, "real_sh_tournier_from_index": 175, "real_sh_descoteaux_from_index": 175, "real_sh_tourni": 175, "real_sh_descoteaux": 175, "real_sym_sh_mrtrix": 175, "real_sym_sh_basi": 175, "sph_harm_ind_list": 175, "order_from_ncoef": 175, "smooth_pinv": 175, "lazy_index": 175, "normalize_data": 175, "hat": 175, "lcr_matrix": 175, "bootstrap_data_arrai": 175, "bootstrap_data_voxel": 175, "sf_to_sh": 175, "sh_to_sf": 175, "sh_to_sf_matrix": 175, "calculate_max_ord": 175, "anisotropic_pow": 175, "convert_sh_to_full_basi": 175, "convert_sh_from_legaci": 175, "convert_sh_to_legaci": 175, "convert_sh_descoteaux_tourni": 175, "shoremodel": 175, "shorefit": 175, "shore_matrix": 175, "shore_matrix_pdf": 175, "shore_matrix_odf": 175, "l_shore": 175, "n_shore": 175, "shore_indic": 175, "shore_ord": 175, "dki_design_matrix": 175, "cti_design_matrix": 175, "convert_tensor": 175, "simple_cutoff": 175, "two_eyes_cutoff": 175, "weights_method_wls_m_est": 175, "weights_method_nlls_m_est": 175, "fss": 176, "check_rang": 176, "bundle_adjac": 176, "ba_analysi": 176, "cluster_bundl": 176, "bundle_shape_similar": 176, "clustercentroid": 176, "clustermap": 176, "clustermapcentroid": 176, "quickbundlesx": 176, "treeclust": 176, "treeclustermap": 176, "qbx_and_merg": 176, "faststreamlinesearch": 176, "nearest_from_matrix_row": 176, "nearest_from_matrix_col": 176, "multi_median": 176, "applymask": 176, "bounding_box": 176, "crop": 176, "segment_from_cfa": 176, "clean_cc_mask": 176, "mdf": 176, "mean_manhattan_dist": 176, "mean_euclidean_dist": 176, "otsu": 176, "upper_bound_by_r": 176, "upper_bound_by_perc": 176, "tissueclassifierhmrf": 176, "compute_directional_averag": 176, "dam_classifi": 176, "remove_holes_and_island": 176, "sim": 177, "phantom": [50, 177], "add_nois": 177, "diff2eigenvector": 177, "orbital_phantom": 177, "sticks_and_bal": 177, "callaghan_perpendicular": 177, "gaussian_parallel": 177, "cylinders_and_ball_soderman": 177, "single_tensor": 177, "multi_tensor": 177, "multi_tensor_dki": 177, "kurtosis_el": 177, "dki_sign": 177, "single_tensor_odf": 177, "all_tensor_evec": 177, "multi_tensor_odf": 177, "single_tensor_rtop": 177, "multi_tensor_rtop": 177, "single_tensor_pdf": 177, "multi_tensor_pdf": 177, "single_tensor_msd": 177, "multi_tensor_msd": 177, "stat": [178, 182], "qc": 178, "sketch": 178, "peak_valu": 178, "anatomical_measur": 178, "assignment_map": 178, "gaussian_weight": 178, "afq_profil": 178, "find_qspace_neighbor": 178, "neighboring_dwi_correl": 178, "count_sketch": 178, "_util": 179, "learn": 179, "local_track": 179, "mesh": 179, "tracker": 179, "detect_corresponding_track": 179, "detect_corresponding_tracks_plu": 179, "lifesignalmak": 179, "fibermodel": 179, "fiberfit": 179, "streamline_gradi": 179, "grad_tensor": 179, "streamline_tensor": 179, "streamline_sign": 179, "voxel2streamlin": 179, "localtrack": 179, "particlefilteringtrack": 179, "random_coordinates_from_surfac": 179, "seeds_from_surface_coordin": 179, "triangles_area": 179, "vertices_to_triangles_valu": 179, "wind": 179, "byte": 179, "magn": 179, "frenet_serret": 179, "mean_curvatur": 179, "mean_orient": 179, "generate_combin": 179, "longest_track_bundl": 179, "intersect_spher": 179, "inside_spher": 179, "inside_sphere_point": 179, "spline": 179, "startpoint": 179, "arbitrarypoint": 179, "principal_compon": 179, "midpoint2point": 179, "unlist_streamlin": 179, "relist_streamlin": 179, "center_streamlin": 179, "deform_streamlin": 179, "transform_streamlin": 179, "select_random_set_of_streamlin": 179, "select_by_roi": 179, "cluster_confid": 179, "orient_by_roi": 179, "orient_by_streamlin": 179, "values_from_volum": 179, "nbyte": 179, "generic_track": 179, "probabilistic_track": 179, "deterministic_track": 179, "ptt_track": 179, "density_map": 179, "connectivity_matrix": 179, "ndbincount": 179, "reduce_label": 179, "subseg": 179, "seeds_from_mask": 179, "random_seeds_from_mask": 179, "target": 179, "target_line_bas": 179, "streamline_near_roi": 179, "near_roi": 179, "unique_row": 179, "transform_tracking_output": 179, "reduce_roi": 179, "path_length": 179, "max_angle_from_curvatur": 179, "min_radius_curvature_from_angl": 179, "seeds_directions_pair": 179, "viz": [181, 182], "gmem": 181, "app": 181, "tab": 181, "panel": 181, "plot": 181, "project": 181, "regtool": 181, "globalhorizon": 181, "horizonuiel": 181, "horizontab": 181, "tabmanag": 181, "build_label": 181, "build_slid": 181, "build_checkbox": 181, "build_radio_button": 181, "build_switch": 181, "clusterstab": 181, "peakstab": 181, "roistab": 181, "slicestab": 181, "surfacetab": 181, "check_img_shap": 181, "check_img_dtyp": 181, "show_ellipsi": 181, "unpack_imag": 181, "unpack_surfac": 181, "check_peak_s": 181, "clustersvisu": 181, "peakactor": 181, "peaksvisu": 181, "slicesvisu": 181, "surfacevisu": 181, "slicer_panel": 181, "compare_map": 181, "compare_qti_map": 181, "bundle_shape_profil": 181, "image_mosa": 181, "sph_project": 181, "simple_plot": 181, "overlay_imag": 181, "draw_lattice_2d": 181, "plot_2d_diffeomorphic_map": 181, "plot_slic": 181, "overlay_slic": 181, "show_bundl": 181, "viz_two_bundl": 181, "viz_vector_field": 181, "viz_displacement_mag": 181, "cli": 182, "combined_workflow": 182, "docstring_pars": 182, "flow_runn": 182, "multi_io": 182, "resliceflow": 182, "slrwithqbxflow": 182, "imageregistrationflow": 182, "applytransformflow": 182, "synregistrationflow": 182, "motioncorrectionflow": 182, "bundlewarpflow": 182, "check_dimens": 182, "introspectiveargumentpars": 182, "add_default_args_to_docstr": 182, "get_args_default": 182, "none_or_dtyp": 182, "combinedworkflow": 182, "patch2selfflow": 182, "nlmeansflow": 182, "lpcaflow": 182, "mppcaflow": 182, "gibbsringingflow": 182, "reader": 182, "numpydocstr": 182, "dedent_lin": 182, "get_level": 182, "run_flow": 182, "ioinfoflow": 182, "fetchflow": 182, "splitflow": 182, "extractb0flow": 182, "extractshellflow": 182, "extractvolumeflow": 182, "concatenatetractogramflow": 182, "convertshflow": 182, "converttensorsflow": 182, "converttractogramflow": 182, "niftistopamflow": 182, "tensortopamflow": 182, "pamtoniftisflow": 182, "mathflow": 182, "maskflow": 182, "ioiter": 182, "common_start": 182, "slash_to_und": 182, "connect_output_path": 182, "concatenate_input": 182, "basename_without_extens": 182, "io_iter": 182, "evacplusflow": 182, "reconstmapmriflow": 182, "reconstdtiflow": 182, "reconstdsiflow": 182, "reconstcsdflow": 182, "reconstqballbaseflow": 182, "reconstdkiflow": 182, "reconstivimflow": 182, "reconstrumbaflow": 182, "reconstsdtflow": 182, "reconstsfmflow": 182, "reconstgqiflow": 182, "reconstforecastflow": 182, "medianotsuflow": 182, "recobundlesflow": 182, "labelsbundlesflow": 182, "classifytissueflow": 182, "snrinccflow": 182, "bundleanalysistractometryflow": 182, "linearmixedmodelsflow": 182, "bundleshapeanalysi": 182, "buan_bundle_profil": 182, "localfibertrackingpamflow": 182, "pftrackingpamflow": 182, "handle_vol_idx": 182, "horizonflow": 182, "dipy_align_affin": 184, "input": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238], "paramet": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238], "option": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238], "dipy_align_syn": 185, "dipy_apply_transform": 186, "dipy_buan_lmm": 187, "synopsi": [187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238], "dipy_buan_profil": 188, "dipy_buan_shap": 189, "dipy_bundlewarp": 190, "dipy_classify_tissu": 191, "dipy_concatenate_tractogram": 192, "dipy_convert_sh": 193, "dipy_convert_tensor": 194, "dipy_convert_tractogram": 195, "dipy_correct_mot": 197, "dipy_denoise_lpca": 198, "dipy_denoise_mppca": 199, "dipy_denoise_nlmean": 200, "dipy_denoise_patch2self": 201, "dipy_evac_plu": 202, "dipy_extract_b0": 203, "dipy_extract_shel": 204, "dipy_extract_volum": 205, "dipy_fetch": 206, "dipy_fit_csa": 207, "dipy_fit_csd": 208, "dipy_fit_dki": 209, "dipy_fit_dsi": 210, "dipy_fit_dsid": 211, "dipy_fit_dti": 212, "dipy_fit_forecast": 213, "dipy_fit_gqi": 214, "dipy_fit_ivim": 215, "dipy_fit_mapmri": 216, "dipy_fit_opdt": 217, "dipy_fit_qbal": 218, "dipy_fit_sdt": 219, "dipy_fit_sfm": 220, "dipy_gibbs_ring": 221, "dipy_horizon": 222, "dipy_info": 223, "dipy_labelsbundl": 224, "dipy_mask": 225, "dipy_math": 226, "dipy_median_otsu": 227, "dipy_nifti2pam": 228, "dipy_pam2nifti": 229, "dipy_recobundl": 230, "dipy_reslic": 231, "dipy_sh_convert_mrtrix": 232, "dipy_slr": 233, "dipy_snr_in_cc": 234, "dipy_split": 235, "dipy_tensor2pam": 236, "dipy_track": 237, "dipy_track_pft": 238, "support": [265, 279], "subscrib": 266, "dii": 267, "about": 267, "b": [267, 268], "matrix": [267, 268], "siemen": [267, 268], "dicom": [267, 268], "what": [267, 280], "generalis": 269, "concept": 270, "coordin": 272, "term": 272, "physic": 272, "convent": 272, "matlab": 272, "next": 277, "pip": 279, "osx": 279, "contact": 279, "u": 279, "common": 279, "problem": 279, "multipl": 279, "memori": 279, "issu": 279, "i": 280, "mission": 281, "statement": 281, "disco": 50, "closestpeak_track": 179, "bootstrap_track": 179, "eudx_track": 179, "pft_track": 179, "biasfieldcorrectionflow": 182, "dipy_correct_biasfield": 196}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"API changes": [[0, "api-changes"]], "DIPY 1.10.0 changes": [[0, "dipy-1-10-0-changes"]], "DIPY 1.9.0 changes": [[0, "dipy-1-9-0-changes"]], "DIPY 1.8.0 changes": [[0, "dipy-1-8-0-changes"]], "DIPY 1.7.0 changes": [[0, "dipy-1-7-0-changes"]], "DIPY 1.6.0 changes": [[0, "dipy-1-6-0-changes"]], "DIPY 1.5.0 changes": [[0, "dipy-1-5-0-changes"]], "DIPY 1.4.1 changes": [[0, "dipy-1-4-1-changes"]], "DIPY 1.4.0 changes": [[0, "dipy-1-4-0-changes"]], "DIPY 1.3.0 changes": [[0, "dipy-1-3-0-changes"]], "DIPY 1.2.0 changes": [[0, "dipy-1-2-0-changes"]], "DIPY 1.1.1 changes": [[0, "dipy-1-1-1-changes"]], "DIPY 1.0.0 changes": [[0, "dipy-1-0-0-changes"]], "DIPY 0.16 Changes": [[0, "dipy-0-16-changes"]], "DIPY 0.15 Changes": [[0, "dipy-0-15-changes"]], "DIPY 0.14 Changes": [[0, "dipy-0-14-changes"]], "DIPY 0.13 Changes": [[0, "dipy-0-13-changes"]], "DIPY 0.12 Changes": [[0, "dipy-0-12-changes"]], "DIPY 0.10 Changes": [[0, "dipy-0-10-changes"]], "DIPY 0.9 Changes": [[0, "dipy-0-9-changes"]], "DIPY 0.8 Changes": [[0, "dipy-0-8-changes"]], "Changes between 0.7.1 and 0.6": [[0, "changes-between-0-7-1-and-0-6"]], "Publications": [[1, "publications"]], "A note on citing our work": [[1, "a-note-on-citing-our-work"]], "Citing other algorithms": [[1, "citing-other-algorithms"]], "\ud83d\ude80 DIPY Benchmarks \ud83d\udcca": [[2, "dipy-benchmarks"]], "Prerequisites \u2699\ufe0f": [[2, "prerequisites"]], "Getting Started \ud83c\udfc3\u200d\u2642\ufe0f": [[2, "getting-started"]], "Running Benchmarks \ud83d\udcc8": [[2, "running-benchmarks"]], "Comparing Results \ud83d\udcca": [[2, "comparing-results"]], "Benchmarking Versions \ud83d\udcbb": [[2, "benchmarking-versions"]], "Contributing \ud83e\udd1d": [[2, "contributing"]], "Writing Benchmarks \u270f\ufe0f": [[2, "writing-benchmarks"]], "Embrace the Speed! \u23e9": [[2, "embrace-the-speed"]], "\ud83d\udcd6 Bibliography": [[3, "bibliography"]], "\ud83d\udcbb DIPY Coding Style Guideline": [[4, "dipy-coding-style-guideline"]], "Coding style": [[4, "coding-style"]], "Imports": [[4, "imports"], [4, "id1"]], "Cython coding style": [[4, "cython-coding-style"]], "Variable declaration": [[4, "variable-declaration"]], "Using C libraries": [[4, "using-c-libraries"]], "Error return values": [[4, "error-return-values"]], "Pointers and references": [[4, "pointers-and-references"]], "Casting": [[4, "casting"]], "Loops": [[4, "loops"]], "Documentation": [[4, "documentation"], [20, "documentation"]], "References": [[4, "references"], [23, "references"], [25, "references"], [26, "references"], [30, "references"], [32, "references"], [33, "references"], [35, "references"], [36, "references"], [38, "references"], [39, "references"], [40, "references"], [41, "references"], [53, "references"], [54, "references"], [55, "references"], [56, "references"], [57, "references"], [58, "references"], [59, "references"], [61, "references"], [62, "references"], [65, "references"], [69, "references"], [70, "references"], [72, "references"], [73, "references"], [74, "references"], [75, "references"], [76, "references"], [77, "references"], [78, "references"], [79, "references"], [80, "references"], [81, "references"], [82, "references"], [83, "references"], [84, "references"], [85, "references"], [86, "references"], [87, "references"], [88, "references"], [89, "references"], [90, "references"], [91, "references"], [92, "references"], [93, "references"], [94, "references"], [96, "references"], [97, "references"], [98, "references"], [100, "references"], [101, "references"], [102, "references"], [103, "references"], [104, "references"], [108, "references"], [109, "references"], [110, "references"], [112, "references"], [113, "references"], [115, "references"], [116, "references"], [117, "references"], [118, "references"], [120, "references"], [121, "references"], [124, "references"], [126, "references"], [128, "references"], [129, "references"], [130, "references"], [131, "references"], [133, "references"], [139, "references"], [151, "references"], [152, "references"], [153, "references"], [154, "references"], [156, "references"], [157, "references"], [159, "references"], [160, "references"], [161, "references"], [162, "references"], [168, "references"], [169, "references"], [173, "references"], [175, "references"], [175, "id6"], [175, "id10"], [175, "id16"], [179, "references"], [184, "references"], [185, "references"], [186, "references"], [187, "references"], [188, "references"], [189, "references"], [190, "references"], [191, "references"], [192, "references"], [193, "references"], [194, "references"], [195, "references"], [196, "references"], [197, "references"], [198, "references"], [199, "references"], [200, "references"], [201, "references"], [202, "references"], [203, "references"], [204, "references"], [205, "references"], [206, "references"], [207, "references"], [208, "references"], [209, "references"], [210, "references"], [211, "references"], [212, "references"], [213, "references"], [214, "references"], [215, "references"], [216, "references"], [217, "references"], [218, "references"], [219, "references"], [220, "references"], [221, "references"], [222, "references"], [223, "references"], [224, "references"], [225, "references"], [226, "references"], [227, "references"], [228, "references"], [229, "references"], [230, "references"], [231, "references"], [232, "references"], [233, "references"], [234, "references"], [235, "references"], [236, "references"], [237, "references"], [238, "references"], [271, "references"]], "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-git-commit sd-text-info\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M10.5 7.75a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm1.43.75a4.002 4.002 0 01-7.86 0H.75a.75.75 0 110-1.5h3.32a4.001 4.001 0 017.86 0h3.32a.75.75 0 110 1.5h-3.32z\"></path></svg> Commit message codes": [[5, "svg-version-1-1-width-1-0em-height-1-0em-class-sd-octicon-sd-octicon-git-commit-sd-text-info-viewbox-0-0-16-16-aria-hidden-true-path-fill-rule-evenodd-d-m10-5-7-75a2-5-2-5-0-11-5-0-2-5-2-5-0-015-0zm1-43-75a4-002-4-002-0-01-7-86-0h-75a-75-75-0-110-1-5h3-32a4-001-4-001-0-017-86-0h3-32a-75-75-0-110-1-5h-3-32z-path-svg-commit-message-codes"]], "Configure git": [[6, "configure-git"]], "Overview": [[6, "overview"], [7, "overview"], [12, "overview"], [17, "overview"], [18, "overview"], [44, "overview"]], "In detail": [[6, "in-detail"], [12, "in-detail"], [17, "in-detail"], [18, "in-detail"]], "user.name and user.email": [[6, "user-name-and-user-email"]], "Aliases": [[6, "aliases"]], "Editor": [[6, "editor"]], "Merging": [[6, "merging"]], "Fancy log output": [[6, "fancy-log-output"]], "Development workflow": [[7, "development-workflow"]], "Workflow summary": [[7, "workflow-summary"]], "Consider deleting your master branch": [[7, "consider-deleting-your-master-branch"]], "Update the mirror of trunk": [[7, "update-the-mirror-of-trunk"]], "Make a new feature branch": [[7, "make-a-new-feature-branch"]], "The editing workflow": [[7, "the-editing-workflow"]], "In more detail": [[7, "in-more-detail"]], "Ask for your changes to be reviewed or merged": [[7, "ask-for-your-changes-to-be-reviewed-or-merged"]], "Some other things you might want to do": [[7, "some-other-things-you-might-want-to-do"]], "Delete a branch on github": [[7, "delete-a-branch-on-github"]], "Several people sharing a single repository": [[7, "several-people-sharing-a-single-repository"]], "Explore your repository": [[7, "explore-your-repository"]], "Rebasing on trunk": [[7, "rebasing-on-trunk"]], "Recovering from mess-ups": [[7, "recovering-from-mess-ups"]], "Rewriting commit history": [[7, "rewriting-commit-history"]], "Two and three dots in difference specs": [[8, "two-and-three-dots-in-difference-specs"]], "Following the latest source": [[9, "following-the-latest-source"]], "Get the local copy of the code": [[9, "get-the-local-copy-of-the-code"]], "Updating the code": [[9, "updating-the-code"]], "Making your own copy (fork) of DIPY": [[10, "making-your-own-copy-fork-of-dipy"]], "Set up and configure a github account": [[10, "set-up-and-configure-a-github-account"]], "Create your own forked copy of DIPY": [[10, "create-your-own-forked-copy-of-dipy"]], "Git for development": [[11, "git-for-development"]], "Install git": [[12, "install-git"]], "Introduction": [[13, "introduction"], [21, "introduction"]], "git resources": [[14, "git-resources"]], "Tutorials and summaries": [[14, "tutorials-and-summaries"]], "Advanced git workflow": [[14, "advanced-git-workflow"]], "Manual pages online": [[14, "manual-pages-online"]], "Working with DIPY source code": [[15, "working-with-dipy-source-code"]], "Maintainer workflow": [[16, "maintainer-workflow"]], "Integrating changes": [[16, "integrating-changes"]], "A few commits": [[16, "a-few-commits"]], "A long series of commits": [[16, "a-long-series-of-commits"]], "Check the history": [[16, "check-the-history"]], "Push to trunk": [[16, "push-to-trunk"]], "Making a patch": [[17, "making-a-patch"]], "Making patches": [[17, "making-patches"]], "Moving from patching to development": [[17, "moving-from-patching-to-development"]], "Set up your fork": [[18, "set-up-your-fork"]], "Clone your fork": [[18, "clone-your-fork"]], "Linking your repository to the upstream repo": [[18, "linking-your-repository-to-the-upstream-repo"]], "DIPY Developer Guide": [[19, "dipy-developer-guide"]], "Installing from source": [[20, "installing-from-source"]], "Getting the source": [[20, "getting-the-source"]], "Building and installing": [[20, "building-and-installing"], [20, "id1"]], "Install from source (all operating systems - recommended)": [[20, "install-from-source-all-operating-systems-recommended"]], "Install from source for Unix (e.g Linux, macOS)": [[20, "install-from-source-for-unix-e-g-linux-macos"]], "Ubuntu/Debian": [[20, "ubuntu-debian"]], "Fedora / Mandriva maybe Redhat": [[20, "fedora-mandriva-maybe-redhat"]], "Windows": [[20, "windows"], [279, "windows"]], "macOS": [[20, "macos"]], "OpenMP with macOS": [[20, "openmp-with-macos"]], "Under Anaconda": [[20, "under-anaconda"]], "Under Homebrew Python or python.org Python": [[20, "under-homebrew-python-or-python-org-python"]], "Testing": [[20, "testing"]], "Tip": [[20, "tip"]], "Troubleshooting": [[20, "troubleshooting"]], "A guide to making a DIPY release": [[22, "a-guide-to-making-a-dipy-release"]], "Release checklist": [[22, "release-checklist"]], "Doing the release": [[22, "doing-the-release"]], "Uploading binary builds for the release": [[22, "uploading-binary-builds-for-the-release"]], "Other stuff that needs doing for the release": [[22, "other-stuff-that-needs-doing-for-the-release"]], "\ud83d\udee0\ufe0f Toolchain Roadmap": [[23, "toolchain-roadmap"]], "Building DIPY": [[23, "building-dipy"]], "Python Versions": [[23, "python-versions"]], "NumPy": [[23, "numpy"]], "Compilers": [[23, "compilers"]], "Official Builds": [[23, "official-builds"]], "Testing and Benchmarking": [[23, "testing-and-benchmarking"]], "Building the Documentation": [[23, "building-the-documentation"]], "Packaging": [[23, "packaging"]], "Developers": [[24, "developers"]], "Crossing-preserving contextual enhancement": [[25, "crossing-preserving-contextual-enhancement"]], "Fiber to bundle coherence measures": [[26, "fiber-to-bundle-coherence-measures"]], "Acknowledgments": [[26, "acknowledgments"]], "Contextual Enhancement": [[27, "contextual-enhancement"], [45, "contextual-enhancement"]], "Computation times": [[28, "computation-times"], [31, "computation-times"], [43, "computation-times"], [49, "computation-times"], [64, "computation-times"], [68, "computation-times"], [99, "computation-times"], [107, "computation-times"], [119, "computation-times"], [122, "computation-times"], [125, "computation-times"], [134, "computation-times"], [138, "computation-times"], [145, "computation-times"], [264, "computation-times"]], "Fiber Tracking": [[29, "fiber-tracking"], [45, "fiber-tracking"]], "Tractography methods available in DIPY.": [[29, "id7"], [45, "id63"]], "Linear fascicle evaluation (LiFE)": [[30, "linear-fascicle-evaluation-life"]], "Surface seeding for tractography": [[32, "surface-seeding-for-tractography"]], "Display the surface": [[32, "display-the-surface"]], "Generate a list of seeding positions": [[32, "generate-a-list-of-seeding-positions"]], "Bootstrap and Closest Peak Direction Getters Example": [[33, "bootstrap-and-closest-peak-direction-getters-example"]], "Example #1: Bootstrap direction getter with CSD Model": [[33, "example-1-bootstrap-direction-getter-with-csd-model"]], "Example #2: Closest peak direction getter with CSD Model": [[33, "example-2-closest-peak-direction-getter-with-csd-model"]], "An introduction to the Deterministic Tractography": [[34, "an-introduction-to-the-deterministic-tractography"]], "Introduction to Basic Tracking": [[35, "introduction-to-basic-tracking"], [69, "introduction-to-basic-tracking"]], "Step 1: Getting directions from a diffusion dataset": [[35, "step-1-getting-directions-from-a-diffusion-dataset"], [69, "step-1-getting-directions-from-a-diffusion-dataset"]], "Step 2: Identifying when the tracking must stop": [[35, "step-2-identifying-when-the-tracking-must-stop"], [69, "step-2-identifying-when-the-tracking-must-stop"]], "Step 3: Defining a set of seeds from which to begin tracking": [[35, "step-3-defining-a-set-of-seeds-from-which-to-begin-tracking"], [69, "step-3-defining-a-set-of-seeds-from-which-to-begin-tracking"]], "Particle Filtering Tractography": [[36, "particle-filtering-tractography"], [36, "id4"]], "CMC/ACT Stopping Criterion": [[36, "cmc-act-stopping-criterion"]], "An introduction to the Probabilistic Tractography": [[37, "an-introduction-to-the-probabilistic-tractography"]], "Parallel Transport Tractography": [[38, "parallel-transport-tractography"]], "Tracking with Robust Unbiased Model-BAsed Spherical Deconvolution (RUMBA-SD)": [[39, "tracking-with-robust-unbiased-model-based-spherical-deconvolution-rumba-sd"]], "Tracking with the Sparse Fascicle Model": [[40, "tracking-with-the-sparse-fascicle-model"]], "Using Various Stopping Criterion for Tractography": [[41, "using-various-stopping-criterion-for-tractography"]], "Threshold Stopping Criterion": [[41, "threshold-stopping-criterion"]], "Binary Stopping Criterion": [[41, "binary-stopping-criterion"]], "ACT Stopping Criterion": [[41, "act-stopping-criterion"]], "Notes": [[41, "notes"]], "File Formats": [[42, "file-formats"], [45, "file-formats"]], "Read/Write streamline files": [[44, "read-write-streamline-files"]], "Examples": [[45, "examples"]], "Contents": [[45, "contents"]], "Quick Start": [[45, "quick-start"], [66, "quick-start"]], "Preprocessing": [[45, "preprocessing"], [60, "preprocessing"]], "Reconstruction": [[45, "reconstruction"], [71, "reconstruction"], [160, "reconstruction"]], "Reconstruction methods available in DIPY": [[45, "id62"], [71, "id55"]], "Streamlines Analysis and Connectivity": [[45, "streamlines-analysis-and-connectivity"], [132, "streamlines-analysis-and-connectivity"]], "Registration": [[45, "registration"], [105, "registration"], [161, "registration"]], "Segmentation": [[45, "segmentation"], [114, "segmentation"]], "Simulation": [[45, "simulation"], [123, "simulation"]], "Multiprocessing": [[45, "multiprocessing"], [46, "multiprocessing"]], "Visualization": [[45, "visualization"], [137, "visualization"]], "Workflows": [[45, "workflows"], [144, "workflows"]], "Parallel reconstruction using Q-Ball": [[47, "parallel-reconstruction-using-q-ball"]], "Parallel reconstruction using CSD": [[48, "parallel-reconstruction-using-csd"]], "Tractography on the DiSCo Phantom": [[50, "tractography-on-the-disco-phantom"]], "An introduction to the Fast Tracking Module": [[51, "an-introduction-to-the-fast-tracking-module"]], "Brain segmentation with median_otsu": [[52, "brain-segmentation-with-median-otsu"], [111, "brain-segmentation-with-median-otsu"]], "Denoise images using Adaptive Soft Coefficient Matching (ASCM)": [[53, "denoise-images-using-adaptive-soft-coefficient-matching-ascm"]], "Suppress Gibbs oscillations": [[54, "suppress-gibbs-oscillations"]], "Denoise images using Local PCA via empirical thresholds": [[55, "denoise-images-using-local-pca-via-empirical-thresholds"]], "Estimate the noise standard deviation": [[55, "estimate-the-noise-standard-deviation"]], "Perform the localPCA using the function localpca": [[55, "perform-the-localpca-using-the-function-localpca"]], "Denoise images using the Marcenko-Pastur PCA algorithm": [[56, "denoise-images-using-the-marcenko-pastur-pca-algorithm"]], "Noise standard deviation estimation using the Marchenko-Pastur PCA algorithm": [[56, "noise-standard-deviation-estimation-using-the-marchenko-pastur-pca-algorithm"]], "Denoise images using Non-Local Means (NLMEANS)": [[57, "denoise-images-using-non-local-means-nlmeans"]], "Patch2Self: Self-Supervised Denoising via Statistical Independence": [[58, "patch2self-self-supervised-denoising-via-statistical-independence"]], "Gradients and Spheres": [[59, "gradients-and-spheres"]], "Between-volumes Motion Correction on DWI datasets": [[61, "between-volumes-motion-correction-on-dwi-datasets"]], "Noise estimation using PIESNO": [[62, "noise-estimation-using-piesno"]], "Reslice diffusion datasets": [[63, "reslice-diffusion-datasets"]], "SNR estimation for Diffusion-Weighted Images": [[65, "snr-estimation-for-diffusion-weighted-images"]], "Getting started with DIPY": [[67, "getting-started-with-dipy"]], "Local reconstruction using the Histological ResDNN": [[70, "local-reconstruction-using-the-histological-resdnn"]], "K-fold cross-validation for model comparison": [[72, "k-fold-cross-validation-for-model-comparison"]], "Reconstruction of Bingham Functions from ODFs": [[73, "reconstruction-of-bingham-functions-from-odfs"]], "Step 1. ODF estimation": [[73, "step-1-odf-estimation"]], "Step 2. Bingham fitting and Metrics": [[73, "step-2-bingham-fitting-and-metrics"]], "Step 3. Bingham Metrics": [[73, "step-3-bingham-metrics"]], "Reconstruct with Constant Solid Angle (Q-Ball)": [[74, "reconstruct-with-constant-solid-angle-q-ball"]], "Reconstruction with Constrained Spherical Deconvolution model (CSD)": [[75, "reconstruction-with-constrained-spherical-deconvolution-model-csd"]], "Step 1. Estimation of the fiber response function": [[75, "step-1-estimation-of-the-fiber-response-function"], [93, "step-1-estimation-of-the-fiber-response-function"]], "Step 2. fODF reconstruction": [[75, "step-2-fodf-reconstruction"]], "Reconstruction of the diffusion signal with the correlation tensor model (CTI)": [[76, "reconstruction-of-the-diffusion-signal-with-the-correlation-tensor-model-cti"]], "Reconstruction of the diffusion signal with the kurtosis tensor model (DKI)": [[77, "reconstruction-of-the-diffusion-signal-with-the-kurtosis-tensor-model-dki"]], "Theory": [[77, "theory"], [91, "theory"], [92, "theory"]], "DKI fitting in DIPY": [[77, "dki-fitting-in-dipy"]], "Mitigating \u2018Black\u2019 Voxels / Holes in DKI metrics": [[77, "mitigating-black-voxels-holes-in-dki-metrics"]], "Alternative DKI metrics": [[77, "alternative-dki-metrics"]], "Constrained optimization for DKI": [[77, "constrained-optimization-for-dki"]], "Reconstruction of the diffusion signal with the WMTI model (DKI-MICRO)": [[78, "reconstruction-of-the-diffusion-signal-with-the-wmti-model-dki-micro"]], "Reconstruct with Diffusion Spectrum Imaging (DSI)": [[79, "reconstruct-with-diffusion-spectrum-imaging-dsi"]], "Calculate DSI-based scalar maps": [[80, "calculate-dsi-based-scalar-maps"]], "DSI Deconvolution (DSID) vs DSI": [[81, "dsi-deconvolution-dsid-vs-dsi"], [124, "dsi-deconvolution-dsid-vs-dsi"]], "Reconstruction of the diffusion signal with DTI (single tensor) model": [[82, "reconstruction-of-the-diffusion-signal-with-dti-single-tensor-model"]], "Crossing invariant fiber response function with FORECAST model": [[83, "crossing-invariant-fiber-response-function-with-forecast-model"]], "Using the free water elimination model to remove DTI free water contamination": [[84, "using-the-free-water-elimination-model-to-remove-dti-free-water-contamination"]], "Reconstruct with Generalized Q-Sampling Imaging": [[85, "reconstruct-with-generalized-q-sampling-imaging"]], "Intravoxel incoherent motion (IVIM)": [[86, "intravoxel-incoherent-motion-ivim"]], "Continuous and analytical diffusion signal modelling with MAP-MRI": [[87, "continuous-and-analytical-diffusion-signal-modelling-with-map-mri"]], "Reconstruction with Multi-Shell Multi-Tissue CSD": [[88, "reconstruction-with-multi-shell-multi-tissue-csd"]], "Mean signal diffusion kurtosis imaging (MSDKI)": [[89, "mean-signal-diffusion-kurtosis-imaging-msdki"]], "Testing MSDKI in synthetic data": [[89, "testing-msdki-in-synthetic-data"]], "Reconstructing diffusion data using MSDKI": [[89, "reconstructing-diffusion-data-using-msdki"]], "Relationship between MSDKI and SMT2": [[89, "relationship-between-msdki-and-smt2"]], "Estimating diffusion time dependent q-space indices using qt-dMRI": [[90, "estimating-diffusion-time-dependent-q-space-indices-using-qt-dmri"]], "Reconstruct with Q-space Trajectory Imaging (QTI)": [[91, "reconstruct-with-q-space-trajectory-imaging-qti"]], "Usage example": [[91, "usage-example"], [92, "usage-example"]], "Applying positivity constraints to Q-space Trajectory Imaging (QTI+)": [[92, "applying-positivity-constraints-to-q-space-trajectory-imaging-qti"]], "Installation": [[92, "installation"], [279, "installation"]], "Reconstruction with Robust and Unbiased Model-BAsed Spherical Deconvolution (RUMBA)": [[93, "reconstruction-with-robust-and-unbiased-model-based-spherical-deconvolution-rumba"]], "Step 2. fODF Reconstruction": [[93, "step-2-fodf-reconstruction"]], "Reconstruction with the Sparse Fascicle Model (SFM)": [[94, "reconstruction-with-the-sparse-fascicle-model-sfm"]], "Signal Reconstruction Using Spherical Harmonics": [[95, "signal-reconstruction-using-spherical-harmonics"]], "Continuous and analytical diffusion signal modelling with 3D-SHORE": [[96, "continuous-and-analytical-diffusion-signal-modelling-with-3d-shore"]], "Calculate SHORE scalar maps": [[97, "calculate-shore-scalar-maps"]], "Using the RESTORE algorithm for robust tensor fitting": [[98, "using-the-restore-algorithm-for-robust-tensor-fitting"]], "Affine Registration in 3D": [[100, "affine-registration-in-3d"]], "Affine Registration with Masks": [[101, "affine-registration-with-masks"]], "Groupwise Bundle Registration": [[102, "groupwise-bundle-registration"]], "How it works": [[102, "how-it-works"]], "Example": [[102, "example"]], "Extended capabilities": [[102, "extended-capabilities"]], "Direct Bundle Registration": [[103, "direct-bundle-registration"]], "Nonrigid Bundle Registration with BundleWarp": [[104, "nonrigid-bundle-registration-with-bundlewarp"]], "Diffeomorphic Registration with binary and fuzzy images": [[106, "diffeomorphic-registration-with-binary-and-fuzzy-images"]], "Applying image-based deformations to streamlines": [[108, "applying-image-based-deformations-to-streamlines"]], "Symmetric Diffeomorphic Registration in 2D": [[109, "symmetric-diffeomorphic-registration-in-2d"]], "Symmetric Diffeomorphic Registration in 3D": [[110, "symmetric-diffeomorphic-registration-in-3d"]], "Automatic Fiber Bundle Extraction with RecoBundles": [[112, "automatic-fiber-bundle-extraction-with-recobundles"]], "Fast Streamline Search": [[113, "fast-streamline-search"]], "Tractography Clustering - Available Features": [[115, "tractography-clustering-available-features"]], "Available Features": [[115, "available-features"]], "Identity Feature": [[115, "clustering-examples-identityfeature"]], "Resample Feature": [[115, "resample-feature"]], "Center of Mass Feature": [[115, "center-of-mass-feature"]], "Midpoint Feature": [[115, "midpoint-feature"]], "ArcLength Feature": [[115, "arclength-feature"]], "Vector Between Endpoints Feature": [[115, "vector-between-endpoints-feature"]], "Tractography Clustering - Available Metrics": [[116, "tractography-clustering-available-metrics"]], "Available Metrics": [[116, "available-metrics"]], "Average of Pointwise Euclidean Metric": [[116, "average-of-pointwise-euclidean-metric"]], "Sum of Pointwise Euclidean Metric": [[116, "sum-of-pointwise-euclidean-metric"]], "Cosine Metric": [[116, "cosine-metric"]], "Enhancing QuickBundles with different metrics and features": [[117, "enhancing-quickbundles-with-different-metrics-and-features"]], "Clustering framework": [[117, "clustering-framework"]], "Extending Feature": [[117, "extending-feature"]], "Extending Metric": [[117, "extending-metric"]], "Tractography Clustering with QuickBundles": [[118, "tractography-clustering-with-quickbundles"]], "Tissue Classification of a T1-weighted Structural Image": [[120, "tissue-classification-of-a-t1-weighted-structural-image"]], "Tissue Classification using Diffusion MRI with DAM": [[121, "tissue-classification-using-diffusion-mri-with-dam"]], "DKI MultiTensor Simulation": [[126, "dki-multitensor-simulation"]], "MultiTensor Simulation": [[127, "multitensor-simulation"]], "Extracting AFQ tract profiles from segmented bundles": [[128, "extracting-afq-tract-profiles-from-segmented-bundles"]], "BUAN Bundle Assignment Maps Creation": [[129, "buan-bundle-assignment-maps-creation"]], "BUAN Bundle Shape Similarity Score": [[130, "buan-bundle-shape-similarity-score"]], "Calculation of Outliers with Cluster Confidence Index": [[131, "calculation-of-outliers-with-cluster-confidence-index"]], "Calculate Path Length Map": [[133, "calculate-path-length-map"]], "Streamline length and size reduction": [[135, "streamline-length-and-size-reduction"]], "Connectivity Matrices, ROI Intersections and Density Maps": [[136, "connectivity-matrices-roi-intersections-and-density-maps"]], "Advanced interactive visualization": [[139, "advanced-interactive-visualization"]], "Visualize bundles and metrics on bundles": [[140, "visualize-bundles-and-metrics-on-bundles"]], "Show every streamline with an orientation color": [[140, "show-every-streamline-with-an-orientation-color"]], "Show every point with a value from a volume with default colormap": [[140, "show-every-point-with-a-value-from-a-volume-with-default-colormap"]], "Show every point with a value from a volume with your colormap": [[140, "show-every-point-with-a-value-from-a-volume-with-your-colormap"]], "Show every bundle with a specific color": [[140, "show-every-bundle-with-a-specific-color"]], "Show every streamline of a bundle with a different color": [[140, "show-every-streamline-of-a-bundle-with-a-different-color"]], "Show every point of every streamline with a different color": [[140, "show-every-point-of-every-streamline-with-a-different-color"]], "Visualization of ROI Surface Rendered with Streamlines": [[141, "visualization-of-roi-surface-rendered-with-streamlines"]], "Simple volume slicing": [[142, "simple-volume-slicing"]], "Render slices from T1 with a specific value range": [[142, "render-slices-from-t1-with-a-specific-value-range"]], "Render slices from FA with your colormap": [[142, "render-slices-from-fa-with-your-colormap"]], "Create a mosaic": [[142, "create-a-mosaic"]], "Creating a new combined workflow": [[143, "creating-a-new-combined-workflow"]], "Creating a new workflow.": [[146, "creating-a-new-workflow"]], "Frequently Asked Questions": [[147, "frequently-asked-questions"]], "Theoretical": [[147, "theoretical"]], "Practical": [[147, "practical"]], "Gimbal lock": [[148, "gimbal-lock"]], "Mathematics of gimbal lock": [[148, "mathematics-of-gimbal-lock"]], "Glossary": [[149, "glossary"]], "Diffusion Imaging In Python - Documentation": [[150, "diffusion-imaging-in-python-documentation"]], "Quick links": [[150, "quick-links"]], "Highlights": [[150, "highlights"]], "Announcements": [[150, "announcements"]], "Introduction to command line interfaces": [[151, "introduction-to-command-line-interfaces"]], "BUndle ANalytics (BUAN) framework": [[152, "bundle-analytics-buan-framework"]], "Group Comparison of Bundle Profiles": [[152, "group-comparison-of-bundle-profiles"]], "Shape similarity of specific bundles across the populations": [[152, "shape-similarity-of-specific-bundles-across-the-populations"]], "Reproducing results on larger dataset:": [[152, "reproducing-results-on-larger-dataset"]], "White Matter Bundle Segmentation with RecoBundles": [[153, "white-matter-bundle-segmentation-with-recobundles"]], "Streamline-Based Linear Registration": [[153, "streamline-based-linear-registration"]], "RecoBundles": [[153, "recobundles"], [176, "recobundles"]], "Nonrigid White Matter Bundle Registration with BundleWarp": [[154, "nonrigid-white-matter-bundle-registration-with-bundlewarp"]], "Partially Deformable BundleWarp Registration": [[154, "partially-deformable-bundlewarp-registration"]], "Fully Deformable BundleWarp Registration": [[154, "fully-deformable-bundlewarp-registration"]], "Downloading DIPY datasets": [[155, "downloading-dipy-datasets"]], "Denoising": [[156, "denoising"]], "Denoising using Overcomplete Local PCA": [[156, "denoising-using-overcomplete-local-pca"]], "Denoising using Marcenko-Pastur PCA": [[156, "denoising-using-marcenko-pastur-pca"]], "Denoising using NLMEANS": [[156, "denoising-using-nlmeans"]], "Overview of Denoising Methods": [[156, "overview-of-denoising-methods"]], "Diffusion": [[156, "diffusion"]], "Structural": [[156, "structural"]], "Gibbs Unringing": [[157, "gibbs-unringing"]], "Suppress Gibbs Oscillations": [[157, "suppress-gibbs-oscillations"]], "DIPY Workflows Interfaces": [[158, "dipy-workflows-interfaces"]], "Between-Volumes Motion Correction": [[159, "between-volumes-motion-correction"]], "Motion Correction": [[159, "motion-correction"]], "Constrained Spherical Deconvolution (CSD)": [[160, "constrained-spherical-deconvolution-csd"]], "Mean Apparent Propagator (MAP)-MRI": [[160, "mean-apparent-propagator-map-mri"]], "Diffusion Tensor Imaging (DTI)": [[160, "diffusion-tensor-imaging-dti"]], "Diffusion Kurtosis Imaging (DKI)": [[160, "diffusion-kurtosis-imaging-dki"]], "Constant Solid Angle (CSA)": [[160, "constant-solid-angle-csa"]], "Intravoxel Incoherent Motion (IVIM)": [[160, "intravoxel-incoherent-motion-ivim"]], "Image Registration": [[161, "image-registration"]], "Symmetric Diffeomorphic Registration": [[161, "symmetric-diffeomorphic-registration"]], "Apply a Transformation": [[161, "apply-a-transformation"]], "Streamline-based Registration": [[161, "streamline-based-registration"]], "Tracking": [[162, "tracking"]], "Local Fiber Tracking": [[162, "local-fiber-tracking"]], "EuDX Tracking": [[162, "eudx-tracking"]], "Deterministic Tracking": [[162, "deterministic-tracking"]], "Probabilistic Tracking": [[162, "probabilistic-tracking"]], "Closest Peaks Tracking": [[162, "closest-peaks-tracking"]], "Particle Filtering Tracking (PFT)": [[162, "particle-filtering-tracking-pft"]], "Overview of Fiber Tracking Methods": [[162, "overview-of-fiber-tracking-methods"]], "dMRI Visualization with Horizon": [[163, "dmri-visualization-with-horizon"]], "Visualize 3D Brain Image": [[163, "visualize-3d-brain-image"]], "Visualize 4D Brain Image": [[163, "visualize-4d-brain-image"]], "Visualize Brain Tractogram": [[163, "visualize-brain-tractogram"]], "Visualize Brain Surface": [[163, "visualize-brain-surface"]], "Older Highlights": [[164, "older-highlights"]], "Past Announcements": [[165, "past-announcements"]], "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-mortar-board\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.693 1.066a.75.75 0 01.614 0l7.25 3.25a.75.75 0 010 1.368L13 6.831v2.794c0 1.024-.81 1.749-1.66 2.173-.893.447-2.075.702-3.34.702-.278 0-.55-.012-.816-.036a.75.75 0 01.133-1.494c.22.02.45.03.683.03 1.082 0 2.025-.221 2.67-.543.69-.345.83-.682.83-.832V7.503L8.307 8.934a.75.75 0 01-.614 0L4 7.28v1.663c.296.105.575.275.812.512.438.438.688 1.059.688 1.796v3a.75.75 0 01-.75.75h-3a.75.75 0 01-.75-.75v-3c0-.737.25-1.358.688-1.796.237-.237.516-.407.812-.512V6.606L.443 5.684a.75.75 0 010-1.368l7.25-3.25zM2.583 5L8 7.428 13.416 5 8 2.572 2.583 5zM2.5 11.25c0-.388.125-.611.25-.735a.704.704 0 01.5-.203c.19 0 .37.071.5.203.125.124.25.347.25.735v2.25H2.5v-2.25z\"></path></svg> Recipes": [[166, "svg-version-1-1-width-1-0em-height-1-0em-class-sd-octicon-sd-octicon-mortar-board-viewbox-0-0-16-16-aria-hidden-true-path-fill-rule-evenodd-d-m7-693-1-066a-75-75-0-01-614-0l7-25-3-25a-75-75-0-010-1-368l13-6-831v2-794c0-1-024-81-1-749-1-66-2-173-893-447-2-075-702-3-34-702-278-0-55-012-816-036a-75-75-0-01-133-1-494c-22-02-45-03-683-03-1-082-0-2-025-221-2-67-543-69-345-83-682-83-832v7-503l8-307-8-934a-75-75-0-01-614-0l4-7-28v1-663c-296-105-575-275-812-512-438-438-688-1-059-688-1-796v3a-75-75-0-01-75-75h-3a-75-75-0-01-75-75v-3c0-737-25-1-358-688-1-796-237-237-516-407-812-512v6-606l-443-5-684a-75-75-0-010-1-368l7-25-3-25zm2-583-5l8-7-428-13-416-5-8-2-572-2-583-5zm2-5-11-25c0-388-125-611-25-735a-704-704-0-01-5-203c-19-0-37-071-5-203-125-124-25-347-25-735v2-25h2-5v-2-25z-path-svg-recipes"]], "dipy": [[167, "module-dipy"]], "Diffusion Imaging in Python": [[167, "diffusion-imaging-in-python"]], "Subpackages": [[167, "subpackages"]], "Utilities": [[167, "utilities"]], "get_info": [[167, "get-info"]], "align": [[168, "module-dipy.align"]], "Module: align._public": [[168, "module-dipy.align._public"]], "Module: align.cpd": [[168, "module-dipy.align.cpd"]], "Note": [[168, "note"]], "Module: align.imaffine": [[168, "module-dipy.align.imaffine"]], "Module: align.imwarp": [[168, "module-dipy.align.imwarp"]], "Module: align.metrics": [[168, "module-dipy.align.metrics"]], "Module: align.reslice": [[168, "module-dipy.align.reslice"]], "Module: align.scalespace": [[168, "module-dipy.align.scalespace"]], "Module: align.streamlinear": [[168, "module-dipy.align.streamlinear"]], "Module: align.streamwarp": [[168, "module-dipy.align.streamwarp"]], "Bunch": [[168, "bunch"]], "syn_registration": [[168, "syn-registration"]], "register_dwi_to_template": [[168, "register-dwi-to-template"]], "write_mapping": [[168, "write-mapping"]], "read_mapping": [[168, "read-mapping"]], "resample": [[168, "resample"]], "affine_registration": [[168, "affine-registration"]], "center_of_mass": [[168, "center-of-mass"], [179, "center-of-mass"]], "translation": [[168, "translation"]], "rigid": [[168, "rigid"]], "rigid_isoscaling": [[168, "rigid-isoscaling"]], "rigid_scaling": [[168, "rigid-scaling"]], "affine": [[168, "affine"]], "register_series": [[168, "register-series"]], "register_dwi_series": [[168, "register-dwi-series"]], "motion_correction": [[168, "motion-correction"]], "streamline_registration": [[168, "streamline-registration"]], "DeformableRegistration": [[168, "deformableregistration"]], "gaussian_kernel": [[168, "gaussian-kernel"]], "low_rank_eigen": [[168, "low-rank-eigen"]], "initialize_sigma2": [[168, "initialize-sigma2"]], "lowrankQS": [[168, "lowrankqs"]], "AffineInversionError": [[168, "affineinversionerror"]], "AffineInvalidValuesError": [[168, "affineinvalidvalueserror"]], "AffineMap": [[168, "affinemap"]], "MutualInformationMetric": [[168, "mutualinformationmetric"]], "AffineRegistration": [[168, "affineregistration"]], "transform_centers_of_mass": [[168, "transform-centers-of-mass"]], "transform_geometric_centers": [[168, "transform-geometric-centers"]], "transform_origins": [[168, "transform-origins"]], "DiffeomorphicMap": [[168, "diffeomorphicmap"]], "DiffeomorphicRegistration": [[168, "diffeomorphicregistration"]], "SymmetricDiffeomorphicRegistration": [[168, "symmetricdiffeomorphicregistration"]], "mult_aff": [[168, "mult-aff"]], "get_direction_and_spacings": [[168, "get-direction-and-spacings"]], "SimilarityMetric": [[168, "similaritymetric"]], "CCMetric": [[168, "ccmetric"]], "EMMetric": [[168, "emmetric"]], "SSDMetric": [[168, "ssdmetric"]], "v_cycle_2d": [[168, "v-cycle-2d"]], "v_cycle_3d": [[168, "v-cycle-3d"]], "reslice": [[168, "reslice"]], "ScaleSpace": [[168, "scalespace"]], "IsotropicScaleSpace": [[168, "isotropicscalespace"]], "StreamlineDistanceMetric": [[168, "streamlinedistancemetric"]], "BundleMinDistanceMetric": [[168, "bundlemindistancemetric"]], "BundleMinDistanceMatrixMetric": [[168, "bundlemindistancematrixmetric"]], "BundleMinDistanceAsymmetricMetric": [[168, "bundlemindistanceasymmetricmetric"]], "BundleSumDistanceMatrixMetric": [[168, "bundlesumdistancematrixmetric"]], "JointBundleMinDistanceMetric": [[168, "jointbundlemindistancemetric"]], "StreamlineLinearRegistration": [[168, "streamlinelinearregistration"]], "StreamlineRegistrationMap": [[168, "streamlineregistrationmap"]], "JointStreamlineRegistrationMap": [[168, "jointstreamlineregistrationmap"]], "bundle_sum_distance": [[168, "bundle-sum-distance"]], "bundle_min_distance": [[168, "bundle-min-distance"]], "bundle_min_distance_fast": [[168, "bundle-min-distance-fast"]], "bundle_min_distance_asymmetric_fast": [[168, "bundle-min-distance-asymmetric-fast"]], "remove_clusters_by_size": [[168, "remove-clusters-by-size"]], "progressive_slr": [[168, "progressive-slr"]], "slr_with_qbx": [[168, "slr-with-qbx"]], "groupwise_slr": [[168, "groupwise-slr"]], "get_unique_pairs": [[168, "get-unique-pairs"]], "compose_matrix44": [[168, "compose-matrix44"]], "decompose_matrix44": [[168, "decompose-matrix44"]], "average_bundle_length": [[168, "average-bundle-length"]], "find_missing": [[168, "find-missing"]], "bundlewarp": [[168, "bundlewarp"]], "bundlewarp_vector_filed": [[168, "bundlewarp-vector-filed"]], "bundlewarp_shape_analysis": [[168, "bundlewarp-shape-analysis"]], "core": [[169, "module-dipy.core"]], "Module: core.geometry": [[169, "module-dipy.core.geometry"]], "Module: core.gradients": [[169, "module-dipy.core.gradients"]], "Module: core.graph": [[169, "module-dipy.core.graph"]], "Module: core.histeq": [[169, "module-dipy.core.histeq"]], "Module: core.ndindex": [[169, "module-dipy.core.ndindex"]], "Module: core.onetime": [[169, "module-dipy.core.onetime"]], "Module: core.optimize": [[169, "module-dipy.core.optimize"]], "Module: core.profile": [[169, "module-dipy.core.profile"]], "Module: core.rng": [[169, "module-dipy.core.rng"]], "Module: core.sphere": [[169, "module-dipy.core.sphere"]], "Module: core.sphere_stats": [[169, "module-dipy.core.sphere_stats"]], "Module: core.subdivide_octahedron": [[169, "module-dipy.core.subdivide_octahedron"]], "Module: core.wavelet": [[169, "module-dipy.core.wavelet"]], "sphere2cart": [[169, "sphere2cart"]], "cart2sphere": [[169, "cart2sphere"]], "sph2latlon": [[169, "sph2latlon"]], "normalized_vector": [[169, "normalized-vector"]], "vector_norm": [[169, "vector-norm"]], "rodrigues_axis_rotation": [[169, "rodrigues-axis-rotation"]], "nearest_pos_semi_def": [[169, "nearest-pos-semi-def"]], "sphere_distance": [[169, "sphere-distance"]], "cart_distance": [[169, "cart-distance"]], "vector_cosine": [[169, "vector-cosine"]], "lambert_equal_area_projection_polar": [[169, "lambert-equal-area-projection-polar"]], "lambert_equal_area_projection_cart": [[169, "lambert-equal-area-projection-cart"]], "euler_matrix": [[169, "euler-matrix"]], "compose_matrix": [[169, "compose-matrix"]], "decompose_matrix": [[169, "decompose-matrix"]], "circumradius": [[169, "circumradius"]], "vec2vec_rotmat": [[169, "vec2vec-rotmat"]], "compose_transformations": [[169, "compose-transformations"]], "perpendicular_directions": [[169, "perpendicular-directions"]], "dist_to_corner": [[169, "dist-to-corner"]], "is_hemispherical": [[169, "is-hemispherical"]], "GradientTable": [[169, "gradienttable"]], "b0_threshold_empty_gradient_message": [[169, "b0-threshold-empty-gradient-message"]], "b0_threshold_update_slicing_message": [[169, "b0-threshold-update-slicing-message"]], "mask_non_weighted_bvals": [[169, "mask-non-weighted-bvals"]], "gradient_table_from_bvals_bvecs": [[169, "gradient-table-from-bvals-bvecs"]], "gradient_table_from_qvals_bvecs": [[169, "gradient-table-from-qvals-bvecs"]], "gradient_table_from_gradient_strength_bvecs": [[169, "gradient-table-from-gradient-strength-bvecs"]], "gradient_table": [[169, "gradient-table"]], "reorient_bvecs": [[169, "reorient-bvecs"]], "generate_bvecs": [[169, "generate-bvecs"]], "round_bvals": [[169, "round-bvals"]], "unique_bvals_tolerance": [[169, "unique-bvals-tolerance"]], "get_bval_indices": [[169, "get-bval-indices"]], "unique_bvals_magnitude": [[169, "unique-bvals-magnitude"]], "check_multi_b": [[169, "check-multi-b"]], "btens_to_params": [[169, "btens-to-params"]], "params_to_btens": [[169, "params-to-btens"]], "ornt_mapping": [[169, "ornt-mapping"]], "reorient_vectors": [[169, "reorient-vectors"]], "reorient_on_axis": [[169, "reorient-on-axis"]], "orientation_from_string": [[169, "orientation-from-string"]], "orientation_to_string": [[169, "orientation-to-string"]], "extract_b0": [[169, "extract-b0"]], "extract_dwi_shell": [[169, "extract-dwi-shell"]], "Graph": [[169, "graph"]], "histeq": [[169, "histeq"]], "ndindex": [[169, "ndindex"]], "ResetMixin": [[169, "resetmixin"]], "OneTimeProperty": [[169, "onetimeproperty"]], "auto_attr": [[169, "auto-attr"]], "Optimizer": [[169, "optimizer"]], "SKLearnLinearSolver": [[169, "sklearnlinearsolver"]], "NonNegativeLeastSquares": [[169, "nonnegativeleastsquares"]], "PositiveDefiniteLeastSquares": [[169, "positivedefiniteleastsquares"]], "spdot": [[169, "spdot"]], "sparse_nnls": [[169, "sparse-nnls"]], "Profiler": [[169, "profiler"]], "WichmannHill2006": [[169, "wichmannhill2006"]], "WichmannHill1982": [[169, "wichmannhill1982"]], "LEcuyer": [[169, "lecuyer"]], "Sphere": [[169, "sphere"]], "HemiSphere": [[169, "hemisphere"]], "faces_from_sphere_vertices": [[169, "faces-from-sphere-vertices"]], "unique_edges": [[169, "unique-edges"]], "unique_sets": [[169, "unique-sets"]], "disperse_charges": [[169, "disperse-charges"]], "fibonacci_sphere": [[169, "fibonacci-sphere"]], "disperse_charges_alt": [[169, "disperse-charges-alt"]], "euler_characteristic_check": [[169, "euler-characteristic-check"]], "random_uniform_on_sphere": [[169, "random-uniform-on-sphere"]], "eigenstats": [[169, "eigenstats"]], "compare_orientation_sets": [[169, "compare-orientation-sets"]], "angular_similarity": [[169, "angular-similarity"]], "create_unit_sphere": [[169, "create-unit-sphere"]], "create_unit_hemisphere": [[169, "create-unit-hemisphere"]], "cshift3D": [[169, "cshift3d"]], "permutationinverse": [[169, "permutationinverse"]], "afb3D_A": [[169, "afb3d-a"]], "sfb3D_A": [[169, "sfb3d-a"]], "sfb3D": [[169, "sfb3d"]], "afb3D": [[169, "afb3d"]], "dwt3D": [[169, "dwt3d"]], "idwt3D": [[169, "idwt3d"]], "data": [[170, "module-dipy.data"]], "Module: data.fetcher": [[170, "module-dipy.data.fetcher"]], "DataError": [[170, "dataerror"]], "loads_compat": [[170, "loads-compat"]], "get_sim_voxels": [[170, "get-sim-voxels"]], "get_skeleton": [[170, "get-skeleton"]], "get_sphere": [[170, "get-sphere"]], "get_3shell_gtab": [[170, "get-3shell-gtab"]], "get_isbi2013_2shell_gtab": [[170, "get-isbi2013-2shell-gtab"]], "get_gtab_taiwan_dsi": [[170, "get-gtab-taiwan-dsi"]], "dsi_voxels": [[170, "dsi-voxels"]], "dsi_deconv_voxels": [[170, "dsi-deconv-voxels"]], "mrtrix_spherical_functions": [[170, "mrtrix-spherical-functions"]], "get_cmap": [[170, "get-cmap"]], "two_cingulum_bundles": [[170, "two-cingulum-bundles"]], "matlab_life_results": [[170, "matlab-life-results"]], "load_sdp_constraints": [[170, "load-sdp-constraints"]], "copyfileobj_withprogress": [[170, "copyfileobj-withprogress"]], "check_md5": [[170, "check-md5"]], "fetch_data": [[170, "fetch-data"]], "fetch_isbi2013_2shell": [[170, "fetch-isbi2013-2shell"]], "fetch_stanford_labels": [[170, "fetch-stanford-labels"]], "fetch_sherbrooke_3shell": [[170, "fetch-sherbrooke-3shell"]], "fetch_stanford_hardi": [[170, "fetch-stanford-hardi"]], "fetch_resdnn_tf_weights": [[170, "fetch-resdnn-tf-weights"]], "fetch_resdnn_torch_weights": [[170, "fetch-resdnn-torch-weights"]], "fetch_synb0_weights": [[170, "fetch-synb0-weights"]], "fetch_synb0_test": [[170, "fetch-synb0-test"]], "fetch_deepn4_tf_weights": [[170, "fetch-deepn4-tf-weights"]], "fetch_deepn4_torch_weights": [[170, "fetch-deepn4-torch-weights"]], "fetch_deepn4_test": [[170, "fetch-deepn4-test"]], "fetch_evac_tf_weights": [[170, "fetch-evac-tf-weights"]], "fetch_evac_torch_weights": [[170, "fetch-evac-torch-weights"]], "fetch_evac_test": [[170, "fetch-evac-test"]], "fetch_stanford_t1": [[170, "fetch-stanford-t1"]], "fetch_stanford_pve_maps": [[170, "fetch-stanford-pve-maps"]], "fetch_stanford_tracks": [[170, "fetch-stanford-tracks"]], "fetch_taiwan_ntu_dsi": [[170, "fetch-taiwan-ntu-dsi"]], "fetch_syn_data": [[170, "fetch-syn-data"]], "fetch_mni_template": [[170, "fetch-mni-template"]], "fetch_scil_b0": [[170, "fetch-scil-b0"]], "fetch_bundles_2_subjects": [[170, "fetch-bundles-2-subjects"]], "fetch_ivim": [[170, "fetch-ivim"]], "fetch_cfin_multib": [[170, "fetch-cfin-multib"]], "fetch_file_formats": [[170, "fetch-file-formats"]], "fetch_bundle_atlas_hcp842": [[170, "fetch-bundle-atlas-hcp842"]], "fetch_30_bundle_atlas_hcp842": [[170, "fetch-30-bundle-atlas-hcp842"]], "fetch_target_tractogram_hcp": [[170, "fetch-target-tractogram-hcp"]], "fetch_bundle_fa_hcp": [[170, "fetch-bundle-fa-hcp"]], "fetch_qtdMRI_test_retest_2subjects": [[170, "fetch-qtdmri-test-retest-2subjects"]], "fetch_gold_standard_io": [[170, "fetch-gold-standard-io"]], "fetch_qte_lte_pte": [[170, "fetch-qte-lte-pte"]], "fetch_cti_rat1": [[170, "fetch-cti-rat1"]], "fetch_fury_surface": [[170, "fetch-fury-surface"]], "fetch_DiB_70_lte_pte_ste": [[170, "fetch-dib-70-lte-pte-ste"]], "fetch_DiB_217_lte_pte_ste": [[170, "fetch-dib-217-lte-pte-ste"]], "fetch_ptt_minimal_dataset": [[170, "fetch-ptt-minimal-dataset"]], "fetch_bundle_warp_dataset": [[170, "fetch-bundle-warp-dataset"]], "fetch_disco1_dataset": [[170, "fetch-disco1-dataset"]], "fetch_disco2_dataset": [[170, "fetch-disco2-dataset"]], "fetch_disco3_dataset": [[170, "fetch-disco3-dataset"]], "fetch_disco_dataset": [[170, "fetch-disco-dataset"]], "get_fnames": [[170, "get-fnames"]], "read_qtdMRI_test_retest_2subjects": [[170, "read-qtdmri-test-retest-2subjects"]], "read_scil_b0": [[170, "read-scil-b0"]], "read_siemens_scil_b0": [[170, "read-siemens-scil-b0"]], "read_isbi2013_2shell": [[170, "read-isbi2013-2shell"]], "read_sherbrooke_3shell": [[170, "read-sherbrooke-3shell"]], "read_stanford_labels": [[170, "read-stanford-labels"]], "read_stanford_hardi": [[170, "read-stanford-hardi"]], "read_stanford_t1": [[170, "read-stanford-t1"]], "read_stanford_pve_maps": [[170, "read-stanford-pve-maps"]], "read_taiwan_ntu_dsi": [[170, "read-taiwan-ntu-dsi"]], "read_syn_data": [[170, "read-syn-data"]], "fetch_tissue_data": [[170, "fetch-tissue-data"]], "read_tissue_data": [[170, "read-tissue-data"]], "read_mni_template": [[170, "read-mni-template"]], "fetch_cenir_multib": [[170, "fetch-cenir-multib"]], "read_cenir_multib": [[170, "read-cenir-multib"]], "read_bundles_2_subjects": [[170, "read-bundles-2-subjects"]], "read_ivim": [[170, "read-ivim"]], "read_cfin_dwi": [[170, "read-cfin-dwi"]], "read_cfin_t1": [[170, "read-cfin-t1"]], "get_file_formats": [[170, "get-file-formats"]], "get_bundle_atlas_hcp842": [[170, "get-bundle-atlas-hcp842"]], "get_two_hcp842_bundles": [[170, "get-two-hcp842-bundles"]], "get_target_tractogram_hcp": [[170, "get-target-tractogram-hcp"]], "read_qte_lte_pte": [[170, "read-qte-lte-pte"]], "read_DiB_70_lte_pte_ste": [[170, "read-dib-70-lte-pte-ste"]], "read_DiB_217_lte_pte_ste": [[170, "read-dib-217-lte-pte-ste"]], "extract_example_tracts": [[170, "extract-example-tracts"]], "read_five_af_bundles": [[170, "read-five-af-bundles"]], "to_bids_description": [[170, "to-bids-description"]], "fetch_hcp": [[170, "fetch-hcp"]], "fetch_hbn": [[170, "fetch-hbn"]], "denoise": [[171, "module-dipy.denoise"]], "Module: denoise.adaptive_soft_matching": [[171, "module-dipy.denoise.adaptive_soft_matching"]], "Module: denoise.gibbs": [[171, "module-dipy.denoise.gibbs"]], "Module: denoise.localpca": [[171, "module-dipy.denoise.localpca"]], "Module: denoise.nlmeans": [[171, "module-dipy.denoise.nlmeans"]], "Module: denoise.noise_estimate": [[171, "module-dipy.denoise.noise_estimate"]], "Module: denoise.non_local_means": [[171, "module-dipy.denoise.non_local_means"]], "Module: denoise.patch2self": [[171, "module-dipy.denoise.patch2self"]], "adaptive_soft_matching": [[171, "adaptive-soft-matching"]], "gibbs_removal": [[171, "gibbs-removal"]], "dimensionality_problem_message": [[171, "dimensionality-problem-message"]], "create_patch_radius_arr": [[171, "create-patch-radius-arr"]], "compute_patch_size": [[171, "compute-patch-size"]], "compute_num_samples": [[171, "compute-num-samples"]], "compute_suggested_patch_radius": [[171, "compute-suggested-patch-radius"]], "genpca": [[171, "genpca"]], "localpca": [[171, "localpca"]], "mppca": [[171, "mppca"]], "nlmeans": [[171, "nlmeans"]], "piesno": [[171, "piesno"]], "estimate_sigma": [[171, "estimate-sigma"]], "non_local_means": [[171, "non-local-means"]], "vol_denoise": [[171, "vol-denoise"]], "patch2self": [[171, "patch2self"]], "direction": [[172, "module-dipy.direction"]], "Module: direction.peaks": [[172, "module-dipy.direction.peaks"]], "PeaksAndMetrics": [[172, "peaksandmetrics"]], "peak_directions_nl": [[172, "peak-directions-nl"]], "peaks_from_model": [[172, "peaks-from-model"]], "reshape_peaks_for_visualization": [[172, "reshape-peaks-for-visualization"]], "peaks_from_positions": [[172, "peaks-from-positions"]], "io": [[173, "module-dipy.io"]], "Module: io.dpy": [[173, "module-dipy.io.dpy"]], "Module: io.gradients": [[173, "module-dipy.io.gradients"]], "Module: io.image": [[173, "module-dipy.io.image"]], "Module: io.peaks": [[173, "module-dipy.io.peaks"]], "Module: io.pickles": [[173, "module-dipy.io.pickles"]], "Module: io.stateful_tractogram": [[173, "module-dipy.io.stateful_tractogram"]], "Module: io.streamline": [[173, "module-dipy.io.streamline"]], "Module: io.surface": [[173, "module-dipy.io.surface"]], "Module: io.utils": [[173, "module-dipy.io.utils"]], "Module: io.vtk": [[173, "module-dipy.io.vtk"]], "Dpy": [[173, "dpy"]], "read_bvals_bvecs": [[173, "read-bvals-bvecs"]], "load_nifti_data": [[173, "load-nifti-data"]], "load_nifti": [[173, "load-nifti"]], "save_nifti": [[173, "save-nifti"]], "save_qa_metric": [[173, "save-qa-metric"]], "load_peaks": [[173, "load-peaks"]], "load_pam": [[173, "load-pam"]], "save_peaks": [[173, "save-peaks"]], "save_pam": [[173, "save-pam"]], "peaks_to_niftis": [[173, "peaks-to-niftis"]], "pam_to_niftis": [[173, "pam-to-niftis"]], "niftis_to_pam": [[173, "niftis-to-pam"]], "tensor_to_pam": [[173, "tensor-to-pam"]], "save_pickle": [[173, "save-pickle"]], "load_pickle": [[173, "load-pickle"]], "Space": [[173, "space"]], "Origin": [[173, "origin"]], "StatefulTractogram": [[173, "statefultractogram"]], "save_tractogram": [[173, "save-tractogram"]], "load_tractogram": [[173, "load-tractogram"]], "load_generator": [[173, "load-generator"]], "save_generator": [[173, "save-generator"]], "load_trk": [[173, "load-trk"]], "load_tck": [[173, "load-tck"]], "load_trx": [[173, "load-trx"]], "load_vtk": [[173, "load-vtk"]], "load_vtp": [[173, "load-vtp"]], "load_fib": [[173, "load-fib"]], "load_dpy": [[173, "load-dpy"]], "save_trk": [[173, "save-trk"]], "save_tck": [[173, "save-tck"]], "save_trx": [[173, "save-trx"]], "save_vtk": [[173, "save-vtk"]], "save_vtp": [[173, "save-vtp"]], "save_fib": [[173, "save-fib"]], "save_dpy": [[173, "save-dpy"]], "load_pial": [[173, "load-pial"]], "load_gifti": [[173, "load-gifti"]], "nifti1_symmat": [[173, "nifti1-symmat"]], "make5d": [[173, "make5d"]], "decfa": [[173, "decfa"]], "decfa_to_float": [[173, "decfa-to-float"]], "is_reference_info_valid": [[173, "is-reference-info-valid"]], "split_name_with_gz": [[173, "split-name-with-gz"]], "get_reference_info": [[173, "get-reference-info"]], "is_header_compatible": [[173, "is-header-compatible"]], "create_tractogram_header": [[173, "create-tractogram-header"]], "create_nifti_header": [[173, "create-nifti-header"]], "save_buan_profiles_hdf5": [[173, "save-buan-profiles-hdf5"]], "read_img_arr_or_path": [[173, "read-img-arr-or-path"]], "load_polydata": [[173, "load-polydata"]], "save_polydata": [[173, "save-polydata"]], "save_vtk_streamlines": [[173, "save-vtk-streamlines"]], "load_vtk_streamlines": [[173, "load-vtk-streamlines"]], "nn": [[174, "module-dipy.nn"]], "Module: nn.tf": [[174, "module-dipy.nn.tf"]], "Module: nn.tf.cnn_1d_denoising": [[174, "module-dipy.nn.tf.cnn_1d_denoising"]], "Title : Denoising diffusion weighted imaging data using CNN": [[174, "title-denoising-diffusion-weighted-imaging-data-using-cnn"]], "Reference": [[174, "reference"]], "Module: nn.tf.deepn4": [[174, "module-dipy.nn.tf.deepn4"]], "Module: nn.tf.evac": [[174, "module-dipy.nn.tf.evac"]], "Module: nn.tf.histo_resdnn": [[174, "module-dipy.nn.tf.histo_resdnn"]], "Module: nn.tf.model": [[174, "module-dipy.nn.tf.model"]], "Module: nn.tf.synb0": [[174, "module-dipy.nn.tf.synb0"]], "Module: nn.torch": [[174, "module-dipy.nn.torch"]], "Module: nn.torch.deepn4": [[174, "module-dipy.nn.torch.deepn4"]], "Module: nn.torch.evac": [[174, "module-dipy.nn.torch.evac"]], "Module: nn.torch.histo_resdnn": [[174, "module-dipy.nn.torch.histo_resdnn"]], "Module: nn.utils": [[174, "module-dipy.nn.utils"]], "Cnn1DDenoiser": [[174, "cnn1ddenoiser"]], "EncoderBlock": [[174, "encoderblock"], [174, "id9"]], "DecoderBlock": [[174, "decoderblock"], [174, "id10"]], "DeepN4": [[174, "deepn4"], [174, "id16"]], "UNet3D": [[174, "unet3d"], [174, "id14"], [174, "id15"]], "Block": [[174, "block"], [174, "id19"]], "ChannelSum": [[174, "channelsum"], [174, "id18"]], "EVACPlus": [[174, "evacplus"], [174, "id20"]], "prepare_img": [[174, "prepare-img"], [174, "id22"]], "init_model": [[174, "init-model"]], "HistoResDNN": [[174, "historesdnn"], [174, "id23"]], "SingleLayerPerceptron": [[174, "singlelayerperceptron"]], "MultipleLayerPercepton": [[174, "multiplelayerpercepton"]], "Synb0": [[174, "synb0"]], "MoveDimLayer": [[174, "movedimlayer"]], "Add": [[174, "add"]], "Model": [[174, "model"]], "DenseModel": [[174, "densemodel"]], "normalize": [[174, "normalize"]], "unnormalize": [[174, "unnormalize"]], "transform_img": [[174, "transform-img"]], "recover_img": [[174, "recover-img"]], "pad_crop": [[174, "pad-crop"]], "reconst": [[175, "module-dipy.reconst"]], "Module: reconst.base": [[175, "module-dipy.reconst.base"]], "Module: reconst.bingham": [[175, "module-dipy.reconst.bingham"]], "Module: reconst.cache": [[175, "module-dipy.reconst.cache"]], "Module: reconst.cross_validation": [[175, "module-dipy.reconst.cross_validation"]], "Module: reconst.csdeconv": [[175, "module-dipy.reconst.csdeconv"]], "Module: reconst.cti": [[175, "module-dipy.reconst.cti"]], "Module: reconst.dki": [[175, "module-dipy.reconst.dki"]], "Module: reconst.dki_micro": [[175, "module-dipy.reconst.dki_micro"]], "Module: reconst.dsi": [[175, "module-dipy.reconst.dsi"]], "Module: reconst.dti": [[175, "module-dipy.reconst.dti"]], "Module: reconst.forecast": [[175, "module-dipy.reconst.forecast"]], "Module: reconst.fwdti": [[175, "module-dipy.reconst.fwdti"]], "Module: reconst.gqi": [[175, "module-dipy.reconst.gqi"]], "Module: reconst.ivim": [[175, "module-dipy.reconst.ivim"]], "Module: reconst.mapmri": [[175, "module-dipy.reconst.mapmri"]], "Module: reconst.mcsd": [[175, "module-dipy.reconst.mcsd"]], "Module: reconst.msdki": [[175, "module-dipy.reconst.msdki"]], "Module: reconst.multi_voxel": [[175, "module-dipy.reconst.multi_voxel"]], "Module: reconst.odf": [[175, "module-dipy.reconst.odf"]], "Module: reconst.qtdmri": [[175, "module-dipy.reconst.qtdmri"]], "Module: reconst.qti": [[175, "module-dipy.reconst.qti"]], "Module: reconst.rumba": [[175, "module-dipy.reconst.rumba"]], "Module: reconst.sfm": [[175, "module-dipy.reconst.sfm"]], "Module: reconst.shm": [[175, "module-dipy.reconst.shm"]], "Module: reconst.shore": [[175, "module-dipy.reconst.shore"]], "Module: reconst.utils": [[175, "module-dipy.reconst.utils"]], "Module: reconst.weights_method": [[175, "module-dipy.reconst.weights_method"]], "ReconstModel": [[175, "reconstmodel"]], "ReconstFit": [[175, "reconstfit"]], "BinghamMetrics": [[175, "binghammetrics"]], "bingham_to_sf": [[175, "bingham-to-sf"]], "bingham_fiber_density": [[175, "bingham-fiber-density"]], "bingham_fiber_spread": [[175, "bingham-fiber-spread"]], "k2odi": [[175, "k2odi"]], "odi2k": [[175, "odi2k"]], "weighted_voxel_metric": [[175, "weighted-voxel-metric"]], "sf_to_bingham": [[175, "sf-to-bingham"]], "sh_to_bingham": [[175, "sh-to-bingham"]], "Cache": [[175, "cache"]], "coeff_of_determination": [[175, "coeff-of-determination"]], "kfold_xval": [[175, "kfold-xval"]], "AxSymShResponse": [[175, "axsymshresponse"]], "ConstrainedSphericalDeconvModel": [[175, "constrainedsphericaldeconvmodel"]], "ConstrainedSDTModel": [[175, "constrainedsdtmodel"]], "estimate_response": [[175, "estimate-response"]], "forward_sdt_deconv_mat": [[175, "forward-sdt-deconv-mat"]], "csdeconv": [[175, "csdeconv"]], "odf_deconv": [[175, "odf-deconv"]], "odf_sh_to_sharp": [[175, "odf-sh-to-sharp"]], "mask_for_response_ssst": [[175, "mask-for-response-ssst"]], "response_from_mask_ssst": [[175, "response-from-mask-ssst"]], "auto_response_ssst": [[175, "auto-response-ssst"]], "recursive_response": [[175, "recursive-response"]], "fa_trace_to_lambdas": [[175, "fa-trace-to-lambdas"]], "CorrelationTensorModel": [[175, "correlationtensormodel"]], "CorrelationTensorFit": [[175, "correlationtensorfit"]], "from_qte_to_cti": [[175, "from-qte-to-cti"]], "multi_gaussian_k_from_c": [[175, "multi-gaussian-k-from-c"]], "split_cti_params": [[175, "split-cti-params"]], "cti_prediction": [[175, "cti-prediction"]], "params_to_cti_params": [[175, "params-to-cti-params"]], "ls_fit_cti": [[175, "ls-fit-cti"]], "DiffusionKurtosisModel": [[175, "diffusionkurtosismodel"]], "DiffusionKurtosisFit": [[175, "diffusionkurtosisfit"]], "carlson_rf": [[175, "carlson-rf"]], "carlson_rd": [[175, "carlson-rd"]], "directional_diffusion": [[175, "directional-diffusion"]], "directional_diffusion_variance": [[175, "directional-diffusion-variance"]], "directional_kurtosis": [[175, "directional-kurtosis"]], "apparent_kurtosis_coef": [[175, "apparent-kurtosis-coef"]], "mean_kurtosis": [[175, "mean-kurtosis"]], "radial_kurtosis": [[175, "radial-kurtosis"]], "axial_kurtosis": [[175, "axial-kurtosis"]], "kurtosis_maximum": [[175, "kurtosis-maximum"]], "mean_kurtosis_tensor": [[175, "mean-kurtosis-tensor"]], "radial_tensor_kurtosis": [[175, "radial-tensor-kurtosis"]], "kurtosis_fractional_anisotropy": [[175, "kurtosis-fractional-anisotropy"]], "dki_prediction": [[175, "dki-prediction"]], "params_to_dki_params": [[175, "params-to-dki-params"]], "ls_fit_dki": [[175, "ls-fit-dki"]], "cls_fit_dki": [[175, "cls-fit-dki"]], "Wrotate": [[175, "wrotate"]], "Wrotate_element": [[175, "wrotate-element"]], "Wcons": [[175, "wcons"]], "split_dki_param": [[175, "split-dki-param"]], "KurtosisMicrostructureModel": [[175, "kurtosismicrostructuremodel"]], "KurtosisMicrostructuralFit": [[175, "kurtosismicrostructuralfit"]], "axonal_water_fraction": [[175, "axonal-water-fraction"]], "diffusion_components": [[175, "diffusion-components"]], "dkimicro_prediction": [[175, "dkimicro-prediction"]], "tortuosity": [[175, "tortuosity"]], "DiffusionSpectrumModel": [[175, "diffusionspectrummodel"]], "DiffusionSpectrumFit": [[175, "diffusionspectrumfit"]], "DiffusionSpectrumDeconvModel": [[175, "diffusionspectrumdeconvmodel"]], "DiffusionSpectrumDeconvFit": [[175, "diffusionspectrumdeconvfit"]], "create_qspace": [[175, "create-qspace"]], "create_qtable": [[175, "create-qtable"]], "hanning_filter": [[175, "hanning-filter"]], "pdf_interp_coords": [[175, "pdf-interp-coords"]], "pdf_odf": [[175, "pdf-odf"]], "half_to_full_qspace": [[175, "half-to-full-qspace"]], "project_hemisph_bvecs": [[175, "project-hemisph-bvecs"]], "threshold_propagator": [[175, "threshold-propagator"]], "gen_PSF": [[175, "gen-psf"]], "LR_deconv": [[175, "lr-deconv"]], "TensorModel": [[175, "tensormodel"]], "TensorFit": [[175, "tensorfit"]], "fractional_anisotropy": [[175, "fractional-anisotropy"]], "geodesic_anisotropy": [[175, "geodesic-anisotropy"]], "mean_diffusivity": [[175, "mean-diffusivity"]], "axial_diffusivity": [[175, "axial-diffusivity"]], "radial_diffusivity": [[175, "radial-diffusivity"]], "trace": [[175, "trace"]], "color_fa": [[175, "color-fa"]], "determinant": [[175, "determinant"]], "isotropic": [[175, "isotropic"]], "deviatoric": [[175, "deviatoric"]], "norm": [[175, "norm"]], "mode": [[175, "mode"]], "linearity": [[175, "linearity"]], "planarity": [[175, "planarity"]], "sphericity": [[175, "sphericity"]], "apparent_diffusion_coef": [[175, "apparent-diffusion-coef"]], "tensor_prediction": [[175, "tensor-prediction"]], "iter_fit_tensor": [[175, "iter-fit-tensor"]], "wls_fit_tensor": [[175, "wls-fit-tensor"], [175, "id215"]], "ols_fit_tensor": [[175, "ols-fit-tensor"]], "nlls_fit_tensor": [[175, "nlls-fit-tensor"]], "restore_fit_tensor": [[175, "restore-fit-tensor"]], "iterative_fit_tensor": [[175, "iterative-fit-tensor"]], "robust_fit_tensor_wls": [[175, "robust-fit-tensor-wls"]], "robust_fit_tensor_nlls": [[175, "robust-fit-tensor-nlls"]], "from_lower_triangular": [[175, "from-lower-triangular"]], "lower_triangular": [[175, "lower-triangular"]], "decompose_tensor": [[175, "decompose-tensor"]], "design_matrix": [[175, "design-matrix"], [175, "id302"], [175, "id351"]], "quantize_evecs": [[175, "quantize-evecs"]], "eig_from_lo_tri": [[175, "eig-from-lo-tri"]], "ForecastModel": [[175, "forecastmodel"]], "ForecastFit": [[175, "forecastfit"]], "find_signal_means": [[175, "find-signal-means"]], "forecast_error_func": [[175, "forecast-error-func"]], "psi_l": [[175, "psi-l"]], "forecast_matrix": [[175, "forecast-matrix"]], "rho_matrix": [[175, "rho-matrix"]], "lb_forecast": [[175, "lb-forecast"]], "FreeWaterTensorModel": [[175, "freewatertensormodel"]], "FreeWaterTensorFit": [[175, "freewatertensorfit"]], "fwdti_prediction": [[175, "fwdti-prediction"]], "wls_iter": [[175, "wls-iter"]], "nls_iter": [[175, "nls-iter"]], "nls_fit_tensor": [[175, "nls-fit-tensor"]], "lower_triangular_to_cholesky": [[175, "lower-triangular-to-cholesky"]], "cholesky_to_lower_triangular": [[175, "cholesky-to-lower-triangular"]], "GeneralizedQSamplingModel": [[175, "generalizedqsamplingmodel"]], "GeneralizedQSamplingFit": [[175, "generalizedqsamplingfit"]], "normalize_qa": [[175, "normalize-qa"]], "squared_radial_component": [[175, "squared-radial-component"]], "npa": [[175, "npa"]], "equatorial_zone_vertices": [[175, "equatorial-zone-vertices"]], "polar_zone_vertices": [[175, "polar-zone-vertices"]], "upper_hemi_map": [[175, "upper-hemi-map"]], "equatorial_maximum": [[175, "equatorial-maximum"]], "patch_vertices": [[175, "patch-vertices"]], "patch_maximum": [[175, "patch-maximum"]], "odf_sum": [[175, "odf-sum"]], "patch_sum": [[175, "patch-sum"]], "triple_odf_maxima": [[175, "triple-odf-maxima"]], "IvimModelTRR": [[175, "ivimmodeltrr"]], "IvimModelVP": [[175, "ivimmodelvp"]], "IvimFit": [[175, "ivimfit"]], "ivim_prediction": [[175, "ivim-prediction"]], "f_D_star_prediction": [[175, "f-d-star-prediction"]], "f_D_star_error": [[175, "f-d-star-error"]], "ivim_model_selector": [[175, "ivim-model-selector"]], "MapmriModel": [[175, "mapmrimodel"]], "MapmriFit": [[175, "mapmrifit"]], "isotropic_scale_factor": [[175, "isotropic-scale-factor"]], "mapmri_index_matrix": [[175, "mapmri-index-matrix"]], "b_mat": [[175, "b-mat"]], "b_mat_isotropic": [[175, "b-mat-isotropic"]], "mapmri_phi_1d": [[175, "mapmri-phi-1d"]], "mapmri_phi_matrix": [[175, "mapmri-phi-matrix"]], "mapmri_psi_1d": [[175, "mapmri-psi-1d"]], "mapmri_psi_matrix": [[175, "mapmri-psi-matrix"]], "mapmri_odf_matrix": [[175, "mapmri-odf-matrix"]], "mapmri_isotropic_phi_matrix": [[175, "mapmri-isotropic-phi-matrix"]], "mapmri_isotropic_radial_signal_basis": [[175, "mapmri-isotropic-radial-signal-basis"]], "mapmri_isotropic_M_mu_independent": [[175, "mapmri-isotropic-m-mu-independent"]], "mapmri_isotropic_M_mu_dependent": [[175, "mapmri-isotropic-m-mu-dependent"]], "mapmri_isotropic_psi_matrix": [[175, "mapmri-isotropic-psi-matrix"]], "mapmri_isotropic_radial_pdf_basis": [[175, "mapmri-isotropic-radial-pdf-basis"]], "mapmri_isotropic_K_mu_independent": [[175, "mapmri-isotropic-k-mu-independent"]], "mapmri_isotropic_K_mu_dependent": [[175, "mapmri-isotropic-k-mu-dependent"]], "binomialfloat": [[175, "binomialfloat"]], "mapmri_isotropic_odf_matrix": [[175, "mapmri-isotropic-odf-matrix"]], "mapmri_isotropic_odf_sh_matrix": [[175, "mapmri-isotropic-odf-sh-matrix"]], "mapmri_isotropic_laplacian_reg_matrix": [[175, "mapmri-isotropic-laplacian-reg-matrix"]], "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix": [[175, "mapmri-isotropic-laplacian-reg-matrix-from-index-matrix"]], "mapmri_isotropic_index_matrix": [[175, "mapmri-isotropic-index-matrix"]], "create_rspace": [[175, "create-rspace"], [175, "id423"]], "delta": [[175, "delta"]], "map_laplace_u": [[175, "map-laplace-u"]], "map_laplace_t": [[175, "map-laplace-t"]], "map_laplace_s": [[175, "map-laplace-s"]], "mapmri_STU_reg_matrices": [[175, "mapmri-stu-reg-matrices"]], "mapmri_laplacian_reg_matrix": [[175, "mapmri-laplacian-reg-matrix"]], "generalized_crossvalidation_array": [[175, "generalized-crossvalidation-array"]], "generalized_crossvalidation": [[175, "generalized-crossvalidation"], [175, "id345"]], "gcv_cost_function": [[175, "gcv-cost-function"]], "MultiShellResponse": [[175, "multishellresponse"]], "MultiShellDeconvModel": [[175, "multishelldeconvmodel"]], "MSDeconvFit": [[175, "msdeconvfit"]], "QpFitter": [[175, "qpfitter"]], "multi_tissue_basis": [[175, "multi-tissue-basis"]], "solve_qp": [[175, "solve-qp"]], "multi_shell_fiber_response": [[175, "multi-shell-fiber-response"]], "mask_for_response_msmt": [[175, "mask-for-response-msmt"]], "response_from_mask_msmt": [[175, "response-from-mask-msmt"]], "auto_response_msmt": [[175, "auto-response-msmt"]], "MeanDiffusionKurtosisModel": [[175, "meandiffusionkurtosismodel"]], "MeanDiffusionKurtosisFit": [[175, "meandiffusionkurtosisfit"]], "mean_signal_bvalue": [[175, "mean-signal-bvalue"]], "msk_from_awf": [[175, "msk-from-awf"]], "awf_from_msk": [[175, "awf-from-msk"]], "msdki_prediction": [[175, "msdki-prediction"]], "wls_fit_msdki": [[175, "wls-fit-msdki"]], "MultiVoxelFit": [[175, "multivoxelfit"]], "CallableArray": [[175, "callablearray"]], "multi_voxel_fit": [[175, "multi-voxel-fit"]], "OdfModel": [[175, "odfmodel"]], "OdfFit": [[175, "odffit"]], "gfa": [[175, "gfa"]], "minmax_normalize": [[175, "minmax-normalize"]], "QtdmriModel": [[175, "qtdmrimodel"]], "QtdmriFit": [[175, "qtdmrifit"]], "qtdmri_to_mapmri_matrix": [[175, "qtdmri-to-mapmri-matrix"]], "qtdmri_isotropic_to_mapmri_matrix": [[175, "qtdmri-isotropic-to-mapmri-matrix"]], "qtdmri_temporal_normalization": [[175, "qtdmri-temporal-normalization"]], "qtdmri_mapmri_normalization": [[175, "qtdmri-mapmri-normalization"]], "qtdmri_mapmri_isotropic_normalization": [[175, "qtdmri-mapmri-isotropic-normalization"]], "qtdmri_signal_matrix": [[175, "qtdmri-signal-matrix"]], "qtdmri_eap_matrix": [[175, "qtdmri-eap-matrix"]], "qtdmri_isotropic_signal_matrix": [[175, "qtdmri-isotropic-signal-matrix"]], "qtdmri_isotropic_eap_matrix": [[175, "qtdmri-isotropic-eap-matrix"]], "radial_basis_opt": [[175, "radial-basis-opt"]], "angular_basis_opt": [[175, "angular-basis-opt"]], "radial_basis_EAP_opt": [[175, "radial-basis-eap-opt"]], "angular_basis_EAP_opt": [[175, "angular-basis-eap-opt"]], "temporal_basis": [[175, "temporal-basis"]], "qtdmri_index_matrix": [[175, "qtdmri-index-matrix"]], "qtdmri_isotropic_index_matrix": [[175, "qtdmri-isotropic-index-matrix"]], "qtdmri_laplacian_reg_matrix": [[175, "qtdmri-laplacian-reg-matrix"]], "qtdmri_isotropic_laplacian_reg_matrix": [[175, "qtdmri-isotropic-laplacian-reg-matrix"]], "part23_reg_matrix_q": [[175, "part23-reg-matrix-q"]], "part23_iso_reg_matrix_q": [[175, "part23-iso-reg-matrix-q"]], "part4_reg_matrix_q": [[175, "part4-reg-matrix-q"]], "part4_iso_reg_matrix_q": [[175, "part4-iso-reg-matrix-q"]], "part1_reg_matrix_tau": [[175, "part1-reg-matrix-tau"]], "part23_reg_matrix_tau": [[175, "part23-reg-matrix-tau"]], "part4_reg_matrix_tau": [[175, "part4-reg-matrix-tau"]], "H": [[175, "h"]], "GCV_cost_function": [[175, "id347"]], "qtdmri_isotropic_scaling": [[175, "qtdmri-isotropic-scaling"]], "qtdmri_anisotropic_scaling": [[175, "qtdmri-anisotropic-scaling"]], "design_matrix_spatial": [[175, "design-matrix-spatial"]], "create_rt_space_grid": [[175, "create-rt-space-grid"]], "qtdmri_number_of_coefficients": [[175, "qtdmri-number-of-coefficients"]], "l1_crossvalidation": [[175, "l1-crossvalidation"]], "elastic_crossvalidation": [[175, "elastic-crossvalidation"]], "visualise_gradient_table_G_Delta_rainbow": [[175, "visualise-gradient-table-g-delta-rainbow"]], "QtiModel": [[175, "qtimodel"]], "QtiFit": [[175, "qtifit"]], "from_3x3_to_6x1": [[175, "from-3x3-to-6x1"]], "from_6x1_to_3x3": [[175, "from-6x1-to-3x3"]], "from_6x6_to_21x1": [[175, "from-6x6-to-21x1"]], "from_21x1_to_6x6": [[175, "from-21x1-to-6x6"]], "cvxpy_1x6_to_3x3": [[175, "cvxpy-1x6-to-3x3"]], "cvxpy_1x21_to_6x6": [[175, "cvxpy-1x21-to-6x6"]], "dtd_covariance": [[175, "dtd-covariance"]], "qti_signal": [[175, "qti-signal"]], "RumbaSDModel": [[175, "rumbasdmodel"]], "RumbaFit": [[175, "rumbafit"]], "rumba_deconv": [[175, "rumba-deconv"]], "mbessel_ratio": [[175, "mbessel-ratio"]], "generate_kernel": [[175, "generate-kernel"]], "rumba_deconv_global": [[175, "rumba-deconv-global"]], "IsotropicModel": [[175, "isotropicmodel"]], "IsotropicFit": [[175, "isotropicfit"]], "ExponentialIsotropicModel": [[175, "exponentialisotropicmodel"]], "ExponentialIsotropicFit": [[175, "exponentialisotropicfit"]], "SparseFascicleModel": [[175, "sparsefasciclemodel"]], "SparseFascicleFit": [[175, "sparsefasciclefit"]], "sfm_design_matrix": [[175, "sfm-design-matrix"]], "SphHarmModel": [[175, "sphharmmodel"]], "QballBaseModel": [[175, "qballbasemodel"]], "SphHarmFit": [[175, "sphharmfit"]], "CsaOdfModel": [[175, "csaodfmodel"]], "OpdtModel": [[175, "opdtmodel"]], "QballModel": [[175, "qballmodel"]], "ResidualBootstrapWrapper": [[175, "residualbootstrapwrapper"]], "forward_sdeconv_mat": [[175, "forward-sdeconv-mat"]], "sh_to_rh": [[175, "sh-to-rh"]], "gen_dirac": [[175, "gen-dirac"]], "spherical_harmonics": [[175, "spherical-harmonics"]], "real_sph_harm": [[175, "real-sph-harm"]], "real_sh_tournier_from_index": [[175, "real-sh-tournier-from-index"]], "real_sh_descoteaux_from_index": [[175, "real-sh-descoteaux-from-index"]], "real_sh_tournier": [[175, "real-sh-tournier"]], "real_sh_descoteaux": [[175, "real-sh-descoteaux"]], "real_sym_sh_mrtrix": [[175, "real-sym-sh-mrtrix"]], "real_sym_sh_basis": [[175, "real-sym-sh-basis"]], "sph_harm_ind_list": [[175, "sph-harm-ind-list"]], "order_from_ncoef": [[175, "order-from-ncoef"]], "smooth_pinv": [[175, "smooth-pinv"]], "lazy_index": [[175, "lazy-index"]], "normalize_data": [[175, "normalize-data"]], "hat": [[175, "hat"]], "lcr_matrix": [[175, "lcr-matrix"]], "bootstrap_data_array": [[175, "bootstrap-data-array"]], "bootstrap_data_voxel": [[175, "bootstrap-data-voxel"]], "sf_to_sh": [[175, "sf-to-sh"]], "sh_to_sf": [[175, "sh-to-sf"]], "sh_to_sf_matrix": [[175, "sh-to-sf-matrix"]], "calculate_max_order": [[175, "calculate-max-order"]], "anisotropic_power": [[175, "anisotropic-power"]], "convert_sh_to_full_basis": [[175, "convert-sh-to-full-basis"]], "convert_sh_from_legacy": [[175, "convert-sh-from-legacy"]], "convert_sh_to_legacy": [[175, "convert-sh-to-legacy"]], "convert_sh_descoteaux_tournier": [[175, "convert-sh-descoteaux-tournier"]], "ShoreModel": [[175, "shoremodel"]], "ShoreFit": [[175, "shorefit"]], "shore_matrix": [[175, "shore-matrix"]], "shore_matrix_pdf": [[175, "shore-matrix-pdf"]], "shore_matrix_odf": [[175, "shore-matrix-odf"]], "l_shore": [[175, "l-shore"]], "n_shore": [[175, "n-shore"]], "shore_indices": [[175, "shore-indices"]], "shore_order": [[175, "shore-order"]], "dki_design_matrix": [[175, "dki-design-matrix"]], "cti_design_matrix": [[175, "cti-design-matrix"]], "convert_tensors": [[175, "convert-tensors"]], "simple_cutoff": [[175, "simple-cutoff"]], "two_eyes_cutoff": [[175, "two-eyes-cutoff"]], "weights_method_wls_m_est": [[175, "weights-method-wls-m-est"]], "weights_method_nlls_m_est": [[175, "weights-method-nlls-m-est"]], "segment": [[176, "module-dipy.segment"]], "Module: segment.bundles": [[176, "module-dipy.segment.bundles"]], "Module: segment.clustering": [[176, "module-dipy.segment.clustering"]], "Module: segment.fss": [[176, "module-dipy.segment.fss"]], "Module: segment.mask": [[176, "module-dipy.segment.mask"]], "Module: segment.metric": [[176, "module-dipy.segment.metric"]], "Module: segment.threshold": [[176, "module-dipy.segment.threshold"]], "Module: segment.tissue": [[176, "module-dipy.segment.tissue"]], "Module: segment.utils": [[176, "module-dipy.segment.utils"]], "check_range": [[176, "check-range"]], "bundle_adjacency": [[176, "bundle-adjacency"]], "ba_analysis": [[176, "ba-analysis"]], "cluster_bundle": [[176, "cluster-bundle"]], "bundle_shape_similarity": [[176, "bundle-shape-similarity"]], "Identity": [[176, "identity"]], "Cluster": [[176, "cluster"]], "ClusterCentroid": [[176, "clustercentroid"]], "ClusterMap": [[176, "clustermap"]], "ClusterMapCentroid": [[176, "clustermapcentroid"]], "Clustering": [[176, "clustering"]], "QuickBundles": [[176, "quickbundles"]], "QuickBundlesX": [[176, "quickbundlesx"]], "TreeCluster": [[176, "treecluster"]], "TreeClusterMap": [[176, "treeclustermap"]], "qbx_and_merge": [[176, "qbx-and-merge"]], "FastStreamlineSearch": [[176, "faststreamlinesearch"]], "nearest_from_matrix_row": [[176, "nearest-from-matrix-row"]], "nearest_from_matrix_col": [[176, "nearest-from-matrix-col"]], "multi_median": [[176, "multi-median"]], "applymask": [[176, "applymask"]], "bounding_box": [[176, "bounding-box"]], "crop": [[176, "crop"]], "median_otsu": [[176, "median-otsu"]], "segment_from_cfa": [[176, "segment-from-cfa"]], "clean_cc_mask": [[176, "clean-cc-mask"]], "mdf": [[176, "mdf"]], "mean_manhattan_distance": [[176, "mean-manhattan-distance"]], "mean_euclidean_distance": [[176, "mean-euclidean-distance"]], "otsu": [[176, "otsu"]], "upper_bound_by_rate": [[176, "upper-bound-by-rate"]], "upper_bound_by_percent": [[176, "upper-bound-by-percent"]], "TissueClassifierHMRF": [[176, "tissueclassifierhmrf"]], "compute_directional_average": [[176, "compute-directional-average"]], "dam_classifier": [[176, "dam-classifier"]], "remove_holes_and_islands": [[176, "remove-holes-and-islands"]], "sims": [[177, "module-dipy.sims"]], "Module: sims.phantom": [[177, "module-dipy.sims.phantom"]], "Module: sims.voxel": [[177, "module-dipy.sims.voxel"]], "add_noise": [[177, "add-noise"], [177, "id4"]], "diff2eigenvectors": [[177, "diff2eigenvectors"]], "orbital_phantom": [[177, "orbital-phantom"]], "sticks_and_ball": [[177, "sticks-and-ball"]], "callaghan_perpendicular": [[177, "callaghan-perpendicular"]], "gaussian_parallel": [[177, "gaussian-parallel"]], "cylinders_and_ball_soderman": [[177, "cylinders-and-ball-soderman"]], "single_tensor": [[177, "single-tensor"]], "multi_tensor": [[177, "multi-tensor"]], "multi_tensor_dki": [[177, "multi-tensor-dki"]], "kurtosis_element": [[177, "kurtosis-element"]], "dki_signal": [[177, "dki-signal"]], "single_tensor_odf": [[177, "single-tensor-odf"]], "all_tensor_evecs": [[177, "all-tensor-evecs"]], "multi_tensor_odf": [[177, "multi-tensor-odf"]], "single_tensor_rtop": [[177, "single-tensor-rtop"]], "multi_tensor_rtop": [[177, "multi-tensor-rtop"]], "single_tensor_pdf": [[177, "single-tensor-pdf"]], "multi_tensor_pdf": [[177, "multi-tensor-pdf"]], "single_tensor_msd": [[177, "single-tensor-msd"]], "multi_tensor_msd": [[177, "multi-tensor-msd"]], "stats": [[178, "module-dipy.stats"]], "Module: stats.analysis": [[178, "module-dipy.stats.analysis"]], "Module: stats.qc": [[178, "module-dipy.stats.qc"]], "Module: stats.sketching": [[178, "module-dipy.stats.sketching"]], "peak_values": [[178, "peak-values"]], "anatomical_measures": [[178, "anatomical-measures"]], "assignment_map": [[178, "assignment-map"]], "gaussian_weights": [[178, "gaussian-weights"]], "afq_profile": [[178, "afq-profile"]], "find_qspace_neighbors": [[178, "find-qspace-neighbors"]], "neighboring_dwi_correlation": [[178, "neighboring-dwi-correlation"]], "count_sketch": [[178, "count-sketch"]], "tracking": [[179, "module-dipy.tracking"]], "Module: tracking._utils": [[179, "module-dipy.tracking._utils"]], "Module: tracking.learning": [[179, "module-dipy.tracking.learning"]], "Module: tracking.life": [[179, "module-dipy.tracking.life"]], "Module: tracking.local_tracking": [[179, "module-dipy.tracking.local_tracking"]], "Module: tracking.mesh": [[179, "module-dipy.tracking.mesh"]], "Module: tracking.metrics": [[179, "module-dipy.tracking.metrics"]], "Module: tracking.streamline": [[179, "module-dipy.tracking.streamline"]], "Module: tracking.tracker": [[179, "module-dipy.tracking.tracker"]], "Module: tracking.utils": [[179, "module-dipy.tracking.utils"]], "Important Notes": [[179, "important-notes"]], "detect_corresponding_tracks": [[179, "detect-corresponding-tracks"]], "detect_corresponding_tracks_plus": [[179, "detect-corresponding-tracks-plus"]], "LifeSignalMaker": [[179, "lifesignalmaker"]], "FiberModel": [[179, "fibermodel"]], "FiberFit": [[179, "fiberfit"]], "gradient": [[179, "gradient"]], "streamline_gradients": [[179, "streamline-gradients"]], "grad_tensor": [[179, "grad-tensor"]], "streamline_tensors": [[179, "streamline-tensors"]], "streamline_signal": [[179, "streamline-signal"]], "voxel2streamline": [[179, "voxel2streamline"]], "LocalTracking": [[179, "localtracking"]], "ParticleFilteringTracking": [[179, "particlefilteringtracking"]], "random_coordinates_from_surface": [[179, "random-coordinates-from-surface"]], "seeds_from_surface_coordinates": [[179, "seeds-from-surface-coordinates"]], "triangles_area": [[179, "triangles-area"]], "vertices_to_triangles_values": [[179, "vertices-to-triangles-values"]], "winding": [[179, "winding"]], "length": [[179, "length"], [179, "id11"]], "bytes": [[179, "bytes"]], "midpoint": [[179, "midpoint"]], "magn": [[179, "magn"]], "frenet_serret": [[179, "frenet-serret"]], "mean_curvature": [[179, "mean-curvature"]], "mean_orientation": [[179, "mean-orientation"]], "generate_combinations": [[179, "generate-combinations"]], "longest_track_bundle": [[179, "longest-track-bundle"]], "intersect_sphere": [[179, "intersect-sphere"]], "inside_sphere": [[179, "inside-sphere"]], "inside_sphere_points": [[179, "inside-sphere-points"]], "spline": [[179, "spline"]], "startpoint": [[179, "startpoint"]], "endpoint": [[179, "endpoint"]], "arbitrarypoint": [[179, "arbitrarypoint"]], "principal_components": [[179, "principal-components"]], "midpoint2point": [[179, "midpoint2point"]], "unlist_streamlines": [[179, "unlist-streamlines"]], "relist_streamlines": [[179, "relist-streamlines"]], "center_streamlines": [[179, "center-streamlines"]], "deform_streamlines": [[179, "deform-streamlines"]], "transform_streamlines": [[179, "transform-streamlines"]], "select_random_set_of_streamlines": [[179, "select-random-set-of-streamlines"]], "select_by_rois": [[179, "select-by-rois"]], "cluster_confidence": [[179, "cluster-confidence"]], "orient_by_rois": [[179, "orient-by-rois"]], "orient_by_streamline": [[179, "orient-by-streamline"]], "values_from_volume": [[179, "values-from-volume"]], "nbytes": [[179, "nbytes"]], "generic_tracking": [[179, "generic-tracking"]], "probabilistic_tracking": [[179, "probabilistic-tracking"]], "deterministic_tracking": [[179, "deterministic-tracking"]], "ptt_tracking": [[179, "ptt-tracking"]], "closestpeak_tracking": [[179, "closestpeak-tracking"]], "bootstrap_tracking": [[179, "bootstrap-tracking"]], "eudx_tracking": [[179, "eudx-tracking"]], "pft_tracking": [[179, "pft-tracking"]], "density_map": [[179, "density-map"]], "connectivity_matrix": [[179, "connectivity-matrix"]], "ndbincount": [[179, "ndbincount"]], "reduce_labels": [[179, "reduce-labels"]], "subsegment": [[179, "subsegment"]], "seeds_from_mask": [[179, "seeds-from-mask"]], "random_seeds_from_mask": [[179, "random-seeds-from-mask"]], "target": [[179, "target"]], "target_line_based": [[179, "target-line-based"]], "streamline_near_roi": [[179, "streamline-near-roi"]], "near_roi": [[179, "near-roi"]], "unique_rows": [[179, "unique-rows"]], "transform_tracking_output": [[179, "transform-tracking-output"]], "reduce_rois": [[179, "reduce-rois"]], "path_length": [[179, "path-length"]], "max_angle_from_curvature": [[179, "max-angle-from-curvature"]], "min_radius_curvature_from_angle": [[179, "min-radius-curvature-from-angle"]], "seeds_directions_pairs": [[179, "seeds-directions-pairs"]], "version": [[180, "module-dipy.version"]], "viz": [[181, "module-dipy.viz"]], "Module: viz.gmem": [[181, "module-dipy.viz.gmem"]], "Module: viz.horizon": [[181, "module-dipy.viz.horizon"]], "Module: viz.horizon.app": [[181, "module-dipy.viz.horizon.app"]], "Module: viz.horizon.tab": [[181, "module-dipy.viz.horizon.tab"]], "Module: viz.horizon.tab.base": [[181, "module-dipy.viz.horizon.tab.base"]], "Module: viz.horizon.tab.cluster": [[181, "module-dipy.viz.horizon.tab.cluster"]], "Module: viz.horizon.tab.peak": [[181, "module-dipy.viz.horizon.tab.peak"]], "Module: viz.horizon.tab.roi": [[181, "module-dipy.viz.horizon.tab.roi"]], "Module: viz.horizon.tab.slice": [[181, "module-dipy.viz.horizon.tab.slice"]], "Module: viz.horizon.tab.surface": [[181, "module-dipy.viz.horizon.tab.surface"]], "Module: viz.horizon.util": [[181, "module-dipy.viz.horizon.util"]], "Module: viz.horizon.visualizer": [[181, "module-dipy.viz.horizon.visualizer"]], "Module: viz.horizon.visualizer.cluster": [[181, "module-dipy.viz.horizon.visualizer.cluster"]], "Module: viz.horizon.visualizer.peak": [[181, "module-dipy.viz.horizon.visualizer.peak"]], "Module: viz.horizon.visualizer.slice": [[181, "module-dipy.viz.horizon.visualizer.slice"]], "Module: viz.horizon.visualizer.surface": [[181, "module-dipy.viz.horizon.visualizer.surface"]], "Module: viz.panel": [[181, "module-dipy.viz.panel"]], "Module: viz.plotting": [[181, "module-dipy.viz.plotting"]], "Module: viz.projections": [[181, "module-dipy.viz.projections"]], "Module: viz.regtools": [[181, "module-dipy.viz.regtools"]], "Module: viz.streamline": [[181, "module-dipy.viz.streamline"]], "GlobalHorizon": [[181, "globalhorizon"]], "Horizon": [[181, "horizon"]], "horizon": [[181, "id1"]], "HorizonUIElement": [[181, "horizonuielement"]], "HorizonTab": [[181, "horizontab"]], "TabManager": [[181, "tabmanager"]], "build_label": [[181, "build-label"], [181, "id4"]], "build_slider": [[181, "build-slider"]], "build_checkbox": [[181, "build-checkbox"]], "build_radio_button": [[181, "build-radio-button"]], "build_switcher": [[181, "build-switcher"]], "ClustersTab": [[181, "clusterstab"]], "PeaksTab": [[181, "peakstab"]], "ROIsTab": [[181, "roistab"]], "SlicesTab": [[181, "slicestab"]], "SurfaceTab": [[181, "surfacetab"]], "check_img_shapes": [[181, "check-img-shapes"]], "check_img_dtype": [[181, "check-img-dtype"]], "show_ellipsis": [[181, "show-ellipsis"]], "unpack_image": [[181, "unpack-image"]], "unpack_surface": [[181, "unpack-surface"]], "check_peak_size": [[181, "check-peak-size"]], "ClustersVisualizer": [[181, "clustersvisualizer"]], "PeakActor": [[181, "peakactor"]], "PeaksVisualizer": [[181, "peaksvisualizer"]], "peak": [[181, "peak"]], "SlicesVisualizer": [[181, "slicesvisualizer"]], "SurfaceVisualizer": [[181, "surfacevisualizer"]], "slicer_panel": [[181, "slicer-panel"]], "compare_maps": [[181, "compare-maps"]], "compare_qti_maps": [[181, "compare-qti-maps"]], "bundle_shape_profile": [[181, "bundle-shape-profile"]], "image_mosaic": [[181, "image-mosaic"]], "sph_project": [[181, "sph-project"]], "simple_plot": [[181, "simple-plot"]], "overlay_images": [[181, "overlay-images"]], "draw_lattice_2d": [[181, "draw-lattice-2d"]], "plot_2d_diffeomorphic_map": [[181, "plot-2d-diffeomorphic-map"]], "plot_slices": [[181, "plot-slices"]], "overlay_slices": [[181, "overlay-slices"]], "show_bundles": [[181, "show-bundles"]], "viz_two_bundles": [[181, "viz-two-bundles"]], "viz_vector_field": [[181, "viz-vector-field"]], "viz_displacement_mag": [[181, "viz-displacement-mag"]], "workflows": [[182, "module-dipy.workflows"]], "Module: workflows.align": [[182, "module-dipy.workflows.align"]], "Module: workflows.base": [[182, "module-dipy.workflows.base"]], "Module: workflows.cli": [[182, "module-dipy.workflows.cli"]], "Module: workflows.combined_workflow": [[182, "module-dipy.workflows.combined_workflow"]], "Module: workflows.denoise": [[182, "module-dipy.workflows.denoise"]], "Module: workflows.docstring_parser": [[182, "module-dipy.workflows.docstring_parser"]], "Module: workflows.flow_runner": [[182, "module-dipy.workflows.flow_runner"]], "Module: workflows.io": [[182, "module-dipy.workflows.io"]], "Module: workflows.mask": [[182, "module-dipy.workflows.mask"]], "Module: workflows.multi_io": [[182, "module-dipy.workflows.multi_io"]], "Module: workflows.nn": [[182, "module-dipy.workflows.nn"]], "Module: workflows.reconst": [[182, "module-dipy.workflows.reconst"]], "Module: workflows.segment": [[182, "module-dipy.workflows.segment"]], "Module: workflows.stats": [[182, "module-dipy.workflows.stats"]], "Module: workflows.tracking": [[182, "module-dipy.workflows.tracking"]], "Module: workflows.utils": [[182, "module-dipy.workflows.utils"]], "Module: workflows.viz": [[182, "module-dipy.workflows.viz"]], "Module: workflows.workflow": [[182, "module-dipy.workflows.workflow"]], "ResliceFlow": [[182, "resliceflow"]], "SlrWithQbxFlow": [[182, "slrwithqbxflow"]], "ImageRegistrationFlow": [[182, "imageregistrationflow"]], "ApplyTransformFlow": [[182, "applytransformflow"]], "SynRegistrationFlow": [[182, "synregistrationflow"]], "MotionCorrectionFlow": [[182, "motioncorrectionflow"]], "BundleWarpFlow": [[182, "bundlewarpflow"]], "check_dimensions": [[182, "check-dimensions"]], "IntrospectiveArgumentParser": [[182, "introspectiveargumentparser"]], "add_default_args_to_docstring": [[182, "add-default-args-to-docstring"]], "get_args_default": [[182, "get-args-default"]], "none_or_dtype": [[182, "none-or-dtype"]], "run": [[182, "run"]], "CombinedWorkflow": [[182, "combinedworkflow"]], "Patch2SelfFlow": [[182, "patch2selfflow"]], "NLMeansFlow": [[182, "nlmeansflow"]], "LPCAFlow": [[182, "lpcaflow"]], "MPPCAFlow": [[182, "mppcaflow"]], "GibbsRingingFlow": [[182, "gibbsringingflow"]], "Reader": [[182, "reader"]], "NumpyDocString": [[182, "numpydocstring"]], "dedent_lines": [[182, "dedent-lines"]], "get_level": [[182, "get-level"]], "run_flow": [[182, "run-flow"]], "IoInfoFlow": [[182, "ioinfoflow"]], "FetchFlow": [[182, "fetchflow"]], "SplitFlow": [[182, "splitflow"]], "ExtractB0Flow": [[182, "extractb0flow"]], "ExtractShellFlow": [[182, "extractshellflow"]], "ExtractVolumeFlow": [[182, "extractvolumeflow"]], "ConcatenateTractogramFlow": [[182, "concatenatetractogramflow"]], "ConvertSHFlow": [[182, "convertshflow"]], "ConvertTensorsFlow": [[182, "converttensorsflow"]], "ConvertTractogramFlow": [[182, "converttractogramflow"]], "NiftisToPamFlow": [[182, "niftistopamflow"]], "TensorToPamFlow": [[182, "tensortopamflow"]], "PamToNiftisFlow": [[182, "pamtoniftisflow"]], "MathFlow": [[182, "mathflow"]], "MaskFlow": [[182, "maskflow"]], "IOIterator": [[182, "ioiterator"]], "common_start": [[182, "common-start"]], "slash_to_under": [[182, "slash-to-under"]], "connect_output_paths": [[182, "connect-output-paths"]], "concatenate_inputs": [[182, "concatenate-inputs"]], "basename_without_extension": [[182, "basename-without-extension"]], "io_iterator": [[182, "io-iterator"]], "EVACPlusFlow": [[182, "evacplusflow"]], "BiasFieldCorrectionFlow": [[182, "biasfieldcorrectionflow"]], "ReconstMAPMRIFlow": [[182, "reconstmapmriflow"]], "ReconstDtiFlow": [[182, "reconstdtiflow"]], "ReconstDsiFlow": [[182, "reconstdsiflow"]], "ReconstCSDFlow": [[182, "reconstcsdflow"]], "ReconstQBallBaseFlow": [[182, "reconstqballbaseflow"]], "ReconstDkiFlow": [[182, "reconstdkiflow"]], "ReconstIvimFlow": [[182, "reconstivimflow"]], "ReconstRUMBAFlow": [[182, "reconstrumbaflow"]], "ReconstSDTFlow": [[182, "reconstsdtflow"]], "ReconstSFMFlow": [[182, "reconstsfmflow"]], "ReconstGQIFlow": [[182, "reconstgqiflow"]], "ReconstForecastFlow": [[182, "reconstforecastflow"]], "MedianOtsuFlow": [[182, "medianotsuflow"]], "RecoBundlesFlow": [[182, "recobundlesflow"]], "LabelsBundlesFlow": [[182, "labelsbundlesflow"]], "ClassifyTissueFlow": [[182, "classifytissueflow"]], "SNRinCCFlow": [[182, "snrinccflow"]], "BundleAnalysisTractometryFlow": [[182, "bundleanalysistractometryflow"]], "LinearMixedModelsFlow": [[182, "linearmixedmodelsflow"]], "BundleShapeAnalysis": [[182, "bundleshapeanalysis"]], "buan_bundle_profiles": [[182, "buan-bundle-profiles"]], "LocalFiberTrackingPAMFlow": [[182, "localfibertrackingpamflow"]], "PFTrackingPAMFlow": [[182, "pftrackingpamflow"]], "handle_vol_idx": [[182, "handle-vol-idx"]], "HorizonFlow": [[182, "horizonflow"]], "Workflow": [[182, "workflow"]], "API Reference": [[183, "api-reference"]], "dipy_align_affine": [[184, "dipy-align-affine"]], "Usage": [[184, "usage"], [185, "usage"], [186, "usage"], [187, "usage"], [188, "usage"], [189, "usage"], [190, "usage"], [191, "usage"], [192, "usage"], [193, "usage"], [194, "usage"], [195, "usage"], [196, "usage"], [197, "usage"], [198, "usage"], [199, "usage"], [200, "usage"], [201, "usage"], [202, "usage"], [203, "usage"], [204, "usage"], [205, "usage"], [206, "usage"], [207, "usage"], [208, "usage"], [209, "usage"], [210, "usage"], [211, "usage"], [212, "usage"], [213, "usage"], [214, "usage"], [215, "usage"], [216, "usage"], [217, "usage"], [218, "usage"], [219, "usage"], [220, "usage"], [221, "usage"], [222, "usage"], [223, "usage"], [224, "usage"], [225, "usage"], [226, "usage"], [227, "usage"], [228, "usage"], [229, "usage"], [230, "usage"], [231, "usage"], [232, "usage"], [233, "usage"], [234, "usage"], [235, "usage"], [236, "usage"], [237, "usage"], [238, "usage"]], "Input Parameters": [[184, "input-parameters"], [185, "input-parameters"], [186, "input-parameters"], [187, "input-parameters"], [188, "input-parameters"], [189, "input-parameters"], [190, "input-parameters"], [191, "input-parameters"], [192, "input-parameters"], [193, "input-parameters"], [194, "input-parameters"], [195, "input-parameters"], [196, "input-parameters"], [197, "input-parameters"], [198, "input-parameters"], [199, "input-parameters"], [200, "input-parameters"], [201, "input-parameters"], [202, "input-parameters"], [203, "input-parameters"], [204, "input-parameters"], [205, "input-parameters"], [206, "input-parameters"], [207, "input-parameters"], [208, "input-parameters"], [209, "input-parameters"], [210, "input-parameters"], [211, "input-parameters"], [212, "input-parameters"], [213, "input-parameters"], [214, "input-parameters"], [215, "input-parameters"], [216, "input-parameters"], [217, "input-parameters"], [218, "input-parameters"], [219, "input-parameters"], [220, "input-parameters"], [221, "input-parameters"], [222, "input-parameters"], [223, "input-parameters"], [224, "input-parameters"], [225, "input-parameters"], [226, "input-parameters"], [227, "input-parameters"], [228, "input-parameters"], [229, "input-parameters"], [230, "input-parameters"], [231, "input-parameters"], [232, "input-parameters"], [233, "input-parameters"], [234, "input-parameters"], [235, "input-parameters"], [236, "input-parameters"], [237, "input-parameters"], [238, "input-parameters"]], "General Options": [[184, "general-options"], [185, "general-options"], [186, "general-options"], [187, "general-options"], [188, "general-options"], [189, "general-options"], [190, "general-options"], [191, "general-options"], [192, "general-options"], [194, "general-options"], [195, "general-options"], [196, "general-options"], [197, "general-options"], [198, "general-options"], [199, "general-options"], [200, "general-options"], [201, "general-options"], [202, "general-options"], [203, "general-options"], [204, "general-options"], [205, "general-options"], [206, "general-options"], [207, "general-options"], [208, "general-options"], [209, "general-options"], [210, "general-options"], [211, "general-options"], [212, "general-options"], [213, "general-options"], [214, "general-options"], [215, "general-options"], [216, "general-options"], [217, "general-options"], [218, "general-options"], [219, "general-options"], [220, "general-options"], [221, "general-options"], [222, "general-options"], [223, "general-options"], [225, "general-options"], [226, "general-options"], [227, "general-options"], [228, "general-options"], [230, "general-options"], [231, "general-options"], [233, "general-options"], [234, "general-options"], [235, "general-options"], [236, "general-options"], [237, "general-options"], [238, "general-options"]], "Output Options": [[184, "output-options"], [185, "output-options"], [186, "output-options"], [187, "output-options"], [188, "output-options"], [189, "output-options"], [190, "output-options"], [191, "output-options"], [192, "output-options"], [193, "output-options"], [194, "output-options"], [195, "output-options"], [196, "output-options"], [197, "output-options"], [198, "output-options"], [199, "output-options"], [200, "output-options"], [201, "output-options"], [202, "output-options"], [203, "output-options"], [204, "output-options"], [205, "output-options"], [206, "output-options"], [207, "output-options"], [208, "output-options"], [209, "output-options"], [210, "output-options"], [211, "output-options"], [212, "output-options"], [213, "output-options"], [214, "output-options"], [215, "output-options"], [216, "output-options"], [217, "output-options"], [218, "output-options"], [219, "output-options"], [220, "output-options"], [221, "output-options"], [222, "output-options"], [224, "output-options"], [225, "output-options"], [226, "output-options"], [227, "output-options"], [228, "output-options"], [229, "output-options"], [230, "output-options"], [231, "output-options"], [232, "output-options"], [233, "output-options"], [234, "output-options"], [235, "output-options"], [236, "output-options"], [237, "output-options"], [238, "output-options"]], "dipy_align_syn": [[185, "dipy-align-syn"]], "dipy_apply_transform": [[186, "dipy-apply-transform"]], "dipy_buan_lmm": [[187, "dipy-buan-lmm"]], "Synopsis": [[187, "synopsis"], [188, "synopsis"], [189, "synopsis"], [190, "synopsis"], [191, "synopsis"], [192, "synopsis"], [193, "synopsis"], [194, "synopsis"], [195, "synopsis"], [196, "synopsis"], [198, "synopsis"], [199, "synopsis"], [200, "synopsis"], [201, "synopsis"], [202, "synopsis"], [203, "synopsis"], [204, "synopsis"], [205, "synopsis"], [206, "synopsis"], [207, "synopsis"], [208, "synopsis"], [209, "synopsis"], [210, "synopsis"], [211, "synopsis"], [212, "synopsis"], [213, "synopsis"], [214, "synopsis"], [215, "synopsis"], [216, "synopsis"], [217, "synopsis"], [218, "synopsis"], [219, "synopsis"], [220, "synopsis"], [221, "synopsis"], [222, "synopsis"], [223, "synopsis"], [224, "synopsis"], [225, "synopsis"], [226, "synopsis"], [227, "synopsis"], [228, "synopsis"], [229, "synopsis"], [230, "synopsis"], [231, "synopsis"], [232, "synopsis"], [233, "synopsis"], [234, "synopsis"], [235, "synopsis"], [236, "synopsis"], [237, "synopsis"], [238, "synopsis"]], "dipy_buan_profiles": [[188, "dipy-buan-profiles"]], "dipy_buan_shapes": [[189, "dipy-buan-shapes"]], "dipy_bundlewarp": [[190, "dipy-bundlewarp"]], "dipy_classify_tissue": [[191, "dipy-classify-tissue"]], "dipy_concatenate_tractograms": [[192, "dipy-concatenate-tractograms"]], "dipy_convert_sh": [[193, "dipy-convert-sh"]], "dipy_convert_tensors": [[194, "dipy-convert-tensors"]], "dipy_convert_tractogram": [[195, "dipy-convert-tractogram"]], "dipy_correct_biasfield": [[196, "dipy-correct-biasfield"]], "dipy_correct_motion": [[197, "dipy-correct-motion"]], "dipy_denoise_lpca": [[198, "dipy-denoise-lpca"]], "dipy_denoise_mppca": [[199, "dipy-denoise-mppca"]], "dipy_denoise_nlmeans": [[200, "dipy-denoise-nlmeans"]], "dipy_denoise_patch2self": [[201, "dipy-denoise-patch2self"]], "dipy_evac_plus": [[202, "dipy-evac-plus"]], "dipy_extract_b0": [[203, "dipy-extract-b0"]], "dipy_extract_shell": [[204, "dipy-extract-shell"]], "dipy_extract_volume": [[205, "dipy-extract-volume"]], "dipy_fetch": [[206, "dipy-fetch"]], "dipy_fit_csa": [[207, "dipy-fit-csa"]], "dipy_fit_csd": [[208, "dipy-fit-csd"]], "dipy_fit_dki": [[209, "dipy-fit-dki"]], "dipy_fit_dsi": [[210, "dipy-fit-dsi"]], "dipy_fit_dsid": [[211, "dipy-fit-dsid"]], "dipy_fit_dti": [[212, "dipy-fit-dti"]], "dipy_fit_forecast": [[213, "dipy-fit-forecast"]], "dipy_fit_gqi": [[214, "dipy-fit-gqi"]], "dipy_fit_ivim": [[215, "dipy-fit-ivim"]], "dipy_fit_mapmri": [[216, "dipy-fit-mapmri"]], "dipy_fit_opdt": [[217, "dipy-fit-opdt"]], "dipy_fit_qball": [[218, "dipy-fit-qball"]], "dipy_fit_sdt": [[219, "dipy-fit-sdt"]], "dipy_fit_sfm": [[220, "dipy-fit-sfm"]], "dipy_gibbs_ringing": [[221, "dipy-gibbs-ringing"]], "dipy_horizon": [[222, "dipy-horizon"]], "dipy_info": [[223, "dipy-info"]], "dipy_labelsbundles": [[224, "dipy-labelsbundles"]], "dipy_mask": [[225, "dipy-mask"]], "dipy_math": [[226, "dipy-math"]], "dipy_median_otsu": [[227, "dipy-median-otsu"]], "dipy_nifti2pam": [[228, "dipy-nifti2pam"]], "dipy_pam2nifti": [[229, "dipy-pam2nifti"]], "dipy_recobundles": [[230, "dipy-recobundles"]], "dipy_reslice": [[231, "dipy-reslice"]], "dipy_sh_convert_mrtrix": [[232, "dipy-sh-convert-mrtrix"]], "dipy_slr": [[233, "dipy-slr"]], "dipy_snr_in_cc": [[234, "dipy-snr-in-cc"]], "dipy_split": [[235, "dipy-split"]], "dipy_tensor2pam": [[236, "dipy-tensor2pam"]], "dipy_track": [[237, "dipy-track"]], "dipy_track_pft": [[238, "dipy-track-pft"]], "Command Line Utilities Reference": [[239, "command-line-utilities-reference"]], "Release notes for DIPY version 0.10": [[240, "release-notes-for-dipy-version-0-10"]], "Release notes for DIPY version 0.11": [[241, "release-notes-for-dipy-version-0-11"]], "Release notes for DIPY version 0.12": [[242, "release-notes-for-dipy-version-0-12"]], "Release notes for DIPY version 0.13": [[243, "release-notes-for-dipy-version-0-13"]], "Release notes for DIPY version 0.14": [[244, "release-notes-for-dipy-version-0-14"]], "Release notes for DIPY version 0.15": [[245, "release-notes-for-dipy-version-0-15"]], "Release notes for DIPY version 0.16": [[246, "release-notes-for-dipy-version-0-16"]], "Release notes for DIPY version 0.6": [[247, "release-notes-for-dipy-version-0-6"]], "Release notes for DIPY version 0.7": [[248, "release-notes-for-dipy-version-0-7"]], "Release notes for DIPY version 0.8": [[249, "release-notes-for-dipy-version-0-8"]], "Release notes for DIPY version 0.9": [[250, "release-notes-for-dipy-version-0-9"]], "Release notes for DIPY version 1.0": [[251, "release-notes-for-dipy-version-1-0"]], "Release notes for DIPY version 1.1": [[252, "release-notes-for-dipy-version-1-1"]], "Release notes for DIPY version 1.10": [[253, "release-notes-for-dipy-version-1-10"]], "Release notes for DIPY version 1.11": [[254, "release-notes-for-dipy-version-1-11"]], "Release notes for DIPY version 1.2": [[255, "release-notes-for-dipy-version-1-2"]], "Release notes for DIPY version 1.3": [[256, "release-notes-for-dipy-version-1-3"]], "Release notes for DIPY version 1.4": [[257, "release-notes-for-dipy-version-1-4"]], "Release notes for DIPY version 1.4.1": [[258, "release-notes-for-dipy-version-1-4-1"]], "Release notes for DIPY version 1.5": [[259, "release-notes-for-dipy-version-1-5"]], "Release notes for DIPY version 1.6": [[260, "release-notes-for-dipy-version-1-6"]], "Release notes for DIPY version 1.7": [[261, "release-notes-for-dipy-version-1-7"]], "Release notes for DIPY version 1.8": [[262, "release-notes-for-dipy-version-1-8"]], "Release notes for DIPY version 1.9": [[263, "release-notes-for-dipy-version-1-9"]], "A quick overview of features": [[265, "a-quick-overview-of-features"]], "Systems supported": [[265, "systems-supported"]], "Subscribe": [[266, "subscribe"]], "DIY Stuff about b and q": [[267, "diy-stuff-about-b-and-q"]], "The B matrix and Siemens DICOM": [[267, "the-b-matrix-and-siemens-dicom"], [268, "the-b-matrix-and-siemens-dicom"]], "\u2026 and what about \u2018q\u2019?": [[267, "and-what-about-q"]], "Generalised Q-Sampling Imaging": [[269, "generalised-q-sampling-imaging"]], "Theory and concepts": [[270, "theory-and-concepts"]], "Spherical Harmonic bases": [[271, "spherical-harmonic-bases"]], "Spherical coordinates": [[272, "spherical-coordinates"]], "Terms": [[272, "terms"]], "The physics convention": [[272, "the-physics-convention"]], "The mathematics convention": [[272, "the-mathematics-convention"]], "Matlab convention": [[272, "matlab-convention"]], "General bibliography": [[273, "general-bibliography"]], "Data": [[274, "data"]], "How to get data": [[274, "how-to-get-data"]], "Datasets List": [[274, "datasets-list"]], "Datasets available in DIPY": [[274, "id2"], [275, "id1"]], "Python versions and dependencies": [[276, "python-versions-and-dependencies"]], "Dependencies": [[276, "id1"]], "Getting Started": [[277, "getting-started"]], "Next Steps": [[277, "next-steps"]], "DIPY User Guide": [[278, "dipy-user-guide"]], "Installing a release": [[279, "installing-a-release"]], "Using pip:": [[279, "using-pip"]], "Using Anaconda:": [[279, "using-anaconda"]], "Using packages:": [[279, "using-packages"]], "OSX": [[279, "osx"]], "Linux": [[279, "linux"]], "Support": [[279, "support"]], "Contact us:": [[279, "contact-us"]], "Common problems:": [[279, "common-problems"]], "Multiple installations": [[279, "multiple-installations"]], "Alternatives to Anaconda": [[279, "alternatives-to-anaconda"]], "Memory issues": [[279, "memory-issues"]], "Note on python versions": [[279, "note-on-python-versions"]], "What is DIPY?": [[280, "what-is-dipy"]], "Mission statement": [[281, "mission-statement"]]}, "indexentries": {"affine matrix": [[149, "term-Affine-matrix"]], "affine transformation": [[149, "term-Affine-transformation"]], "axis angle": [[149, "term-Axis-angle"]], "euclidean norm": [[149, "term-Euclidean-norm"]], "euler angles": [[149, "term-Euler-angles"]], "gimbal lock": [[149, "term-Gimbal-lock"]], "homogeneous coordinates": [[149, "term-Homogeneous-coordinates"]], "linear transformation": [[149, "term-Linear-transformation"]], "quaternion": [[149, "term-Quaternion"]], "reflection": [[149, "term-Reflection"]], "rotation matrix": [[149, "term-Rotation-matrix"]], "rotation vector": [[149, "term-Rotation-vector"]], "shear matrix": [[149, "term-Shear-matrix"]], "unit vector": [[149, "term-Unit-vector"]], "dipy": [[167, "module-dipy"]], "get_info() (in module dipy)": [[167, "dipy.get_info"]], "module": [[167, "module-dipy"], [168, "module-dipy.align"], [168, "module-dipy.align._public"], [168, "module-dipy.align.cpd"], [168, "module-dipy.align.imaffine"], [168, "module-dipy.align.imwarp"], [168, "module-dipy.align.metrics"], [168, "module-dipy.align.reslice"], [168, "module-dipy.align.scalespace"], [168, "module-dipy.align.streamlinear"], [168, "module-dipy.align.streamwarp"], [169, "module-dipy.core"], [169, "module-dipy.core.geometry"], [169, "module-dipy.core.gradients"], [169, "module-dipy.core.graph"], [169, "module-dipy.core.histeq"], [169, "module-dipy.core.ndindex"], [169, "module-dipy.core.onetime"], [169, "module-dipy.core.optimize"], [169, "module-dipy.core.profile"], [169, "module-dipy.core.rng"], [169, "module-dipy.core.sphere"], [169, "module-dipy.core.sphere_stats"], [169, "module-dipy.core.subdivide_octahedron"], [169, "module-dipy.core.wavelet"], [170, "module-dipy.data"], [170, "module-dipy.data.fetcher"], [171, "module-dipy.denoise"], [171, "module-dipy.denoise.adaptive_soft_matching"], [171, "module-dipy.denoise.gibbs"], [171, "module-dipy.denoise.localpca"], [171, "module-dipy.denoise.nlmeans"], [171, "module-dipy.denoise.noise_estimate"], [171, "module-dipy.denoise.non_local_means"], [171, "module-dipy.denoise.patch2self"], [172, "module-dipy.direction"], [172, "module-dipy.direction.peaks"], [173, "module-dipy.io"], [173, "module-dipy.io.dpy"], [173, "module-dipy.io.gradients"], [173, "module-dipy.io.image"], [173, "module-dipy.io.peaks"], [173, "module-dipy.io.pickles"], [173, "module-dipy.io.stateful_tractogram"], [173, "module-dipy.io.streamline"], [173, "module-dipy.io.surface"], [173, "module-dipy.io.utils"], [173, "module-dipy.io.vtk"], [174, "module-dipy.nn"], [174, "module-dipy.nn.tf"], [174, "module-dipy.nn.tf.cnn_1d_denoising"], [174, "module-dipy.nn.tf.deepn4"], [174, "module-dipy.nn.tf.evac"], [174, "module-dipy.nn.tf.histo_resdnn"], [174, "module-dipy.nn.tf.model"], [174, "module-dipy.nn.tf.synb0"], [174, "module-dipy.nn.torch"], [174, "module-dipy.nn.torch.deepn4"], [174, "module-dipy.nn.torch.evac"], [174, "module-dipy.nn.torch.histo_resdnn"], [174, "module-dipy.nn.utils"], [175, "module-dipy.reconst"], [175, "module-dipy.reconst.base"], [175, "module-dipy.reconst.bingham"], [175, "module-dipy.reconst.cache"], [175, "module-dipy.reconst.cross_validation"], [175, "module-dipy.reconst.csdeconv"], [175, "module-dipy.reconst.cti"], [175, "module-dipy.reconst.dki"], [175, "module-dipy.reconst.dki_micro"], [175, "module-dipy.reconst.dsi"], [175, "module-dipy.reconst.dti"], [175, "module-dipy.reconst.forecast"], [175, "module-dipy.reconst.fwdti"], [175, "module-dipy.reconst.gqi"], [175, "module-dipy.reconst.ivim"], [175, "module-dipy.reconst.mapmri"], [175, "module-dipy.reconst.mcsd"], [175, "module-dipy.reconst.msdki"], [175, "module-dipy.reconst.multi_voxel"], [175, "module-dipy.reconst.odf"], [175, "module-dipy.reconst.qtdmri"], [175, "module-dipy.reconst.qti"], [175, "module-dipy.reconst.rumba"], [175, "module-dipy.reconst.sfm"], [175, "module-dipy.reconst.shm"], [175, "module-dipy.reconst.shore"], [175, "module-dipy.reconst.utils"], [175, "module-dipy.reconst.weights_method"], [176, "module-dipy.segment"], [176, "module-dipy.segment.bundles"], [176, "module-dipy.segment.clustering"], [176, "module-dipy.segment.fss"], [176, "module-dipy.segment.mask"], [176, "module-dipy.segment.metric"], [176, "module-dipy.segment.threshold"], [176, "module-dipy.segment.tissue"], [176, "module-dipy.segment.utils"], [177, "module-dipy.sims"], [177, "module-dipy.sims.phantom"], [177, "module-dipy.sims.voxel"], [178, "module-dipy.stats"], [178, "module-dipy.stats.analysis"], [178, "module-dipy.stats.qc"], [178, "module-dipy.stats.sketching"], [179, "module-dipy.tracking"], [179, "module-dipy.tracking._utils"], [179, "module-dipy.tracking.learning"], [179, "module-dipy.tracking.life"], [179, "module-dipy.tracking.local_tracking"], [179, "module-dipy.tracking.mesh"], [179, "module-dipy.tracking.metrics"], [179, "module-dipy.tracking.streamline"], [179, "module-dipy.tracking.tracker"], [179, "module-dipy.tracking.utils"], [180, "module-dipy.version"], [181, "module-dipy.viz"], [181, "module-dipy.viz.gmem"], [181, "module-dipy.viz.horizon"], [181, "module-dipy.viz.horizon.app"], [181, "module-dipy.viz.horizon.tab"], [181, "module-dipy.viz.horizon.tab.base"], [181, "module-dipy.viz.horizon.tab.cluster"], [181, "module-dipy.viz.horizon.tab.peak"], [181, "module-dipy.viz.horizon.tab.roi"], [181, "module-dipy.viz.horizon.tab.slice"], [181, "module-dipy.viz.horizon.tab.surface"], [181, "module-dipy.viz.horizon.util"], [181, "module-dipy.viz.horizon.visualizer"], [181, "module-dipy.viz.horizon.visualizer.cluster"], [181, "module-dipy.viz.horizon.visualizer.peak"], [181, "module-dipy.viz.horizon.visualizer.slice"], [181, "module-dipy.viz.horizon.visualizer.surface"], [181, "module-dipy.viz.panel"], [181, "module-dipy.viz.plotting"], [181, "module-dipy.viz.projections"], [181, "module-dipy.viz.regtools"], [181, "module-dipy.viz.streamline"], [182, "module-dipy.workflows"], [182, "module-dipy.workflows.align"], [182, "module-dipy.workflows.base"], [182, "module-dipy.workflows.cli"], [182, "module-dipy.workflows.combined_workflow"], [182, "module-dipy.workflows.denoise"], [182, "module-dipy.workflows.docstring_parser"], [182, "module-dipy.workflows.flow_runner"], [182, "module-dipy.workflows.io"], [182, "module-dipy.workflows.mask"], [182, "module-dipy.workflows.multi_io"], [182, "module-dipy.workflows.nn"], [182, "module-dipy.workflows.reconst"], [182, "module-dipy.workflows.segment"], [182, "module-dipy.workflows.stats"], [182, "module-dipy.workflows.tracking"], [182, "module-dipy.workflows.utils"], [182, "module-dipy.workflows.viz"], [182, "module-dipy.workflows.workflow"]], "affineinvalidvalueserror (class in dipy.align.imaffine)": [[168, "dipy.align.imaffine.AffineInvalidValuesError"]], "affineinversionerror (class in dipy.align.imaffine)": [[168, "dipy.align.imaffine.AffineInversionError"]], "affinemap (class in dipy.align.imaffine)": [[168, "dipy.align.imaffine.AffineMap"]], "affineregistration (class in dipy.align.imaffine)": [[168, "dipy.align.imaffine.AffineRegistration"]], "bunch (class in dipy.align)": [[168, "dipy.align.Bunch"]], "bundlemindistanceasymmetricmetric (class in dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric"]], "bundlemindistancematrixmetric (class in dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric"]], "bundlemindistancemetric (class in dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.BundleMinDistanceMetric"]], "bundlesumdistancematrixmetric (class in dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.BundleSumDistanceMatrixMetric"]], "ccmetric (class in dipy.align.metrics)": [[168, "dipy.align.metrics.CCMetric"]], "deformableregistration (class in dipy.align.cpd)": [[168, "dipy.align.cpd.DeformableRegistration"]], "diffeomorphicmap (class in dipy.align.imwarp)": [[168, "dipy.align.imwarp.DiffeomorphicMap"]], "diffeomorphicregistration (class in dipy.align.imwarp)": [[168, "dipy.align.imwarp.DiffeomorphicRegistration"]], "emmetric (class in dipy.align.metrics)": [[168, "dipy.align.metrics.EMMetric"]], "isotropicscalespace (class in dipy.align.scalespace)": [[168, "dipy.align.scalespace.IsotropicScaleSpace"]], "jointbundlemindistancemetric (class in dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.JointBundleMinDistanceMetric"]], "jointstreamlineregistrationmap (class in dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.JointStreamlineRegistrationMap"]], "mutualinformationmetric (class in dipy.align.imaffine)": [[168, "dipy.align.imaffine.MutualInformationMetric"]], "ssdmetric (class in dipy.align.metrics)": [[168, "dipy.align.metrics.SSDMetric"]], "scalespace (class in dipy.align.scalespace)": [[168, "dipy.align.scalespace.ScaleSpace"]], "similaritymetric (class in dipy.align.metrics)": [[168, "dipy.align.metrics.SimilarityMetric"]], "streamlinedistancemetric (class in dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.StreamlineDistanceMetric"]], "streamlinelinearregistration (class in dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.StreamlineLinearRegistration"]], "streamlineregistrationmap (class in dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.StreamlineRegistrationMap"]], "symmetricdiffeomorphicregistration (class in dipy.align.imwarp)": [[168, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration"]], "affine() (in module dipy.align._public)": [[168, "dipy.align._public.affine"]], "affine_registration() (in module dipy.align._public)": [[168, "dipy.align._public.affine_registration"]], "allocate() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.allocate"]], "average_bundle_length() (in module dipy.align.streamwarp)": [[168, "dipy.align.streamwarp.average_bundle_length"]], "bundle_min_distance() (in module dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.bundle_min_distance"]], "bundle_min_distance_asymmetric_fast() (in module dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.bundle_min_distance_asymmetric_fast"]], "bundle_min_distance_fast() (in module dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.bundle_min_distance_fast"]], "bundle_sum_distance() (in module dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.bundle_sum_distance"]], "bundlewarp() (in module dipy.align.streamwarp)": [[168, "dipy.align.streamwarp.bundlewarp"]], "bundlewarp_shape_analysis() (in module dipy.align.streamwarp)": [[168, "dipy.align.streamwarp.bundlewarp_shape_analysis"]], "bundlewarp_vector_filed() (in module dipy.align.streamwarp)": [[168, "dipy.align.streamwarp.bundlewarp_vector_filed"]], "center_of_mass() (in module dipy.align._public)": [[168, "dipy.align._public.center_of_mass"]], "compose_matrix44() (in module dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.compose_matrix44"]], "compute_backward() (dipy.align.metrics.ccmetric method)": [[168, "dipy.align.metrics.CCMetric.compute_backward"]], "compute_backward() (dipy.align.metrics.emmetric method)": [[168, "dipy.align.metrics.EMMetric.compute_backward"]], "compute_backward() (dipy.align.metrics.ssdmetric method)": [[168, "dipy.align.metrics.SSDMetric.compute_backward"]], "compute_backward() (dipy.align.metrics.similaritymetric method)": [[168, "dipy.align.metrics.SimilarityMetric.compute_backward"]], "compute_demons_step() (dipy.align.metrics.emmetric method)": [[168, "dipy.align.metrics.EMMetric.compute_demons_step"]], "compute_demons_step() (dipy.align.metrics.ssdmetric method)": [[168, "dipy.align.metrics.SSDMetric.compute_demons_step"]], "compute_forward() (dipy.align.metrics.ccmetric method)": [[168, "dipy.align.metrics.CCMetric.compute_forward"]], "compute_forward() (dipy.align.metrics.emmetric method)": [[168, "dipy.align.metrics.EMMetric.compute_forward"]], "compute_forward() (dipy.align.metrics.ssdmetric method)": [[168, "dipy.align.metrics.SSDMetric.compute_forward"]], "compute_forward() (dipy.align.metrics.similaritymetric method)": [[168, "dipy.align.metrics.SimilarityMetric.compute_forward"]], "compute_gauss_newton_step() (dipy.align.metrics.emmetric method)": [[168, "dipy.align.metrics.EMMetric.compute_gauss_newton_step"]], "compute_gauss_newton_step() (dipy.align.metrics.ssdmetric method)": [[168, "dipy.align.metrics.SSDMetric.compute_gauss_newton_step"]], "compute_inversion_error() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.compute_inversion_error"]], "decompose_matrix44() (in module dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.decompose_matrix44"]], "dipy.align": [[168, "module-dipy.align"]], "dipy.align._public": [[168, "module-dipy.align._public"]], "dipy.align.cpd": [[168, "module-dipy.align.cpd"]], "dipy.align.imaffine": [[168, "module-dipy.align.imaffine"]], "dipy.align.imwarp": [[168, "module-dipy.align.imwarp"]], "dipy.align.metrics": [[168, "module-dipy.align.metrics"]], "dipy.align.reslice": [[168, "module-dipy.align.reslice"]], "dipy.align.scalespace": [[168, "module-dipy.align.scalespace"]], "dipy.align.streamlinear": [[168, "module-dipy.align.streamlinear"]], "dipy.align.streamwarp": [[168, "module-dipy.align.streamwarp"]], "distance() (dipy.align.imaffine.mutualinformationmetric method)": [[168, "dipy.align.imaffine.MutualInformationMetric.distance"]], "distance() (dipy.align.streamlinear.bundlemindistanceasymmetricmetric method)": [[168, "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric.distance"]], "distance() (dipy.align.streamlinear.bundlemindistancematrixmetric method)": [[168, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric.distance"]], "distance() (dipy.align.streamlinear.bundlemindistancemetric method)": [[168, "dipy.align.streamlinear.BundleMinDistanceMetric.distance"]], "distance() (dipy.align.streamlinear.bundlesumdistancematrixmetric method)": [[168, "dipy.align.streamlinear.BundleSumDistanceMatrixMetric.distance"]], "distance() (dipy.align.streamlinear.jointbundlemindistancemetric method)": [[168, "dipy.align.streamlinear.JointBundleMinDistanceMetric.distance"]], "distance() (dipy.align.streamlinear.streamlinedistancemetric method)": [[168, "dipy.align.streamlinear.StreamlineDistanceMetric.distance"]], "distance_and_gradient() (dipy.align.imaffine.mutualinformationmetric method)": [[168, "dipy.align.imaffine.MutualInformationMetric.distance_and_gradient"]], "expand_fields() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.expand_fields"]], "expectation() (dipy.align.cpd.deformableregistration method)": [[168, "dipy.align.cpd.DeformableRegistration.expectation"]], "find_missing() (in module dipy.align.streamwarp)": [[168, "dipy.align.streamwarp.find_missing"]], "free_iteration() (dipy.align.metrics.ccmetric method)": [[168, "dipy.align.metrics.CCMetric.free_iteration"]], "free_iteration() (dipy.align.metrics.emmetric method)": [[168, "dipy.align.metrics.EMMetric.free_iteration"]], "free_iteration() (dipy.align.metrics.ssdmetric method)": [[168, "dipy.align.metrics.SSDMetric.free_iteration"]], "free_iteration() (dipy.align.metrics.similaritymetric method)": [[168, "dipy.align.metrics.SimilarityMetric.free_iteration"]], "gaussian_kernel() (in module dipy.align.cpd)": [[168, "dipy.align.cpd.gaussian_kernel"]], "get_affine() (dipy.align.imaffine.affinemap method)": [[168, "dipy.align.imaffine.AffineMap.get_affine"]], "get_affine() (dipy.align.scalespace.scalespace method)": [[168, "dipy.align.scalespace.ScaleSpace.get_affine"]], "get_affine_inv() (dipy.align.scalespace.scalespace method)": [[168, "dipy.align.scalespace.ScaleSpace.get_affine_inv"]], "get_backward_field() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.get_backward_field"]], "get_direction_and_spacings() (in module dipy.align.imwarp)": [[168, "dipy.align.imwarp.get_direction_and_spacings"]], "get_domain_shape() (dipy.align.scalespace.scalespace method)": [[168, "dipy.align.scalespace.ScaleSpace.get_domain_shape"]], "get_energy() (dipy.align.metrics.ccmetric method)": [[168, "dipy.align.metrics.CCMetric.get_energy"]], "get_energy() (dipy.align.metrics.emmetric method)": [[168, "dipy.align.metrics.EMMetric.get_energy"]], "get_energy() (dipy.align.metrics.ssdmetric method)": [[168, "dipy.align.metrics.SSDMetric.get_energy"]], "get_energy() (dipy.align.metrics.similaritymetric method)": [[168, "dipy.align.metrics.SimilarityMetric.get_energy"]], "get_expand_factors() (dipy.align.scalespace.scalespace method)": [[168, "dipy.align.scalespace.ScaleSpace.get_expand_factors"]], "get_forward_field() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.get_forward_field"]], "get_image() (dipy.align.scalespace.scalespace method)": [[168, "dipy.align.scalespace.ScaleSpace.get_image"]], "get_map() (dipy.align.imwarp.diffeomorphicregistration method)": [[168, "dipy.align.imwarp.DiffeomorphicRegistration.get_map"]], "get_map() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[168, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.get_map"]], "get_registration_parameters() (dipy.align.cpd.deformableregistration method)": [[168, "dipy.align.cpd.DeformableRegistration.get_registration_parameters"]], "get_scaling() (dipy.align.scalespace.scalespace method)": [[168, "dipy.align.scalespace.ScaleSpace.get_scaling"]], "get_sigmas() (dipy.align.scalespace.scalespace method)": [[168, "dipy.align.scalespace.ScaleSpace.get_sigmas"]], "get_simplified_transform() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.get_simplified_transform"]], "get_spacing() (dipy.align.scalespace.scalespace method)": [[168, "dipy.align.scalespace.ScaleSpace.get_spacing"]], "get_unique_pairs() (in module dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.get_unique_pairs"]], "gradient() (dipy.align.imaffine.mutualinformationmetric method)": [[168, "dipy.align.imaffine.MutualInformationMetric.gradient"]], "groupwise_slr() (in module dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.groupwise_slr"]], "initialize_iteration() (dipy.align.metrics.ccmetric method)": [[168, "dipy.align.metrics.CCMetric.initialize_iteration"]], "initialize_iteration() (dipy.align.metrics.emmetric method)": [[168, "dipy.align.metrics.EMMetric.initialize_iteration"]], "initialize_iteration() (dipy.align.metrics.ssdmetric method)": [[168, "dipy.align.metrics.SSDMetric.initialize_iteration"]], "initialize_iteration() (dipy.align.metrics.similaritymetric method)": [[168, "dipy.align.metrics.SimilarityMetric.initialize_iteration"]], "initialize_sigma2() (in module dipy.align.cpd)": [[168, "dipy.align.cpd.initialize_sigma2"]], "interpret_matrix() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.interpret_matrix"]], "inverse() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.inverse"]], "iterate() (dipy.align.cpd.deformableregistration method)": [[168, "dipy.align.cpd.DeformableRegistration.iterate"]], "low_rank_eigen() (in module dipy.align.cpd)": [[168, "dipy.align.cpd.low_rank_eigen"]], "lowrankqs() (in module dipy.align.cpd)": [[168, "dipy.align.cpd.lowrankQS"]], "maximization() (dipy.align.cpd.deformableregistration method)": [[168, "dipy.align.cpd.DeformableRegistration.maximization"]], "motion_correction() (in module dipy.align._public)": [[168, "dipy.align._public.motion_correction"]], "mult_aff() (in module dipy.align.imwarp)": [[168, "dipy.align.imwarp.mult_aff"]], "optimize() (dipy.align.imaffine.affineregistration method)": [[168, "dipy.align.imaffine.AffineRegistration.optimize"]], "optimize() (dipy.align.imwarp.diffeomorphicregistration method)": [[168, "dipy.align.imwarp.DiffeomorphicRegistration.optimize"]], "optimize() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[168, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.optimize"]], "optimize() (dipy.align.streamlinear.streamlinelinearregistration method)": [[168, "dipy.align.streamlinear.StreamlineLinearRegistration.optimize"]], "print_level() (dipy.align.scalespace.scalespace method)": [[168, "dipy.align.scalespace.ScaleSpace.print_level"]], "progressive_slr() (in module dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.progressive_slr"]], "read_mapping() (in module dipy.align._public)": [[168, "dipy.align._public.read_mapping"]], "register() (dipy.align.cpd.deformableregistration method)": [[168, "dipy.align.cpd.DeformableRegistration.register"]], "register_dwi_series() (in module dipy.align._public)": [[168, "dipy.align._public.register_dwi_series"]], "register_dwi_to_template() (in module dipy.align._public)": [[168, "dipy.align._public.register_dwi_to_template"]], "register_series() (in module dipy.align._public)": [[168, "dipy.align._public.register_series"]], "remove_clusters_by_size() (in module dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.remove_clusters_by_size"]], "resample() (in module dipy.align._public)": [[168, "dipy.align._public.resample"]], "reslice() (in module dipy.align.reslice)": [[168, "dipy.align.reslice.reslice"]], "rigid() (in module dipy.align._public)": [[168, "dipy.align._public.rigid"]], "rigid_isoscaling() (in module dipy.align._public)": [[168, "dipy.align._public.rigid_isoscaling"]], "rigid_scaling() (in module dipy.align._public)": [[168, "dipy.align._public.rigid_scaling"]], "set_affine() (dipy.align.imaffine.affinemap method)": [[168, "dipy.align.imaffine.AffineMap.set_affine"]], "set_level_iters() (dipy.align.imwarp.diffeomorphicregistration method)": [[168, "dipy.align.imwarp.DiffeomorphicRegistration.set_level_iters"]], "set_levels_above() (dipy.align.metrics.similaritymetric method)": [[168, "dipy.align.metrics.SimilarityMetric.set_levels_above"]], "set_levels_below() (dipy.align.metrics.similaritymetric method)": [[168, "dipy.align.metrics.SimilarityMetric.set_levels_below"]], "set_moving_image() (dipy.align.metrics.similaritymetric method)": [[168, "dipy.align.metrics.SimilarityMetric.set_moving_image"]], "set_static_image() (dipy.align.metrics.similaritymetric method)": [[168, "dipy.align.metrics.SimilarityMetric.set_static_image"]], "setup() (dipy.align.imaffine.mutualinformationmetric method)": [[168, "dipy.align.imaffine.MutualInformationMetric.setup"]], "setup() (dipy.align.streamlinear.bundlemindistancematrixmetric method)": [[168, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric.setup"]], "setup() (dipy.align.streamlinear.bundlemindistancemetric method)": [[168, "dipy.align.streamlinear.BundleMinDistanceMetric.setup"]], "setup() (dipy.align.streamlinear.jointbundlemindistancemetric method)": [[168, "dipy.align.streamlinear.JointBundleMinDistanceMetric.setup"]], "setup() (dipy.align.streamlinear.streamlinedistancemetric method)": [[168, "dipy.align.streamlinear.StreamlineDistanceMetric.setup"]], "shallow_copy() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.shallow_copy"]], "slr_with_qbx() (in module dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.slr_with_qbx"]], "streamline_registration() (in module dipy.align._public)": [[168, "dipy.align._public.streamline_registration"]], "syn_registration() (in module dipy.align._public)": [[168, "dipy.align._public.syn_registration"]], "transform() (dipy.align.imaffine.affinemap method)": [[168, "dipy.align.imaffine.AffineMap.transform"]], "transform() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.transform"]], "transform() (dipy.align.streamlinear.jointstreamlineregistrationmap method)": [[168, "dipy.align.streamlinear.JointStreamlineRegistrationMap.transform"]], "transform() (dipy.align.streamlinear.streamlineregistrationmap method)": [[168, "dipy.align.streamlinear.StreamlineRegistrationMap.transform"]], "transform_centers_of_mass() (in module dipy.align.imaffine)": [[168, "dipy.align.imaffine.transform_centers_of_mass"]], "transform_geometric_centers() (in module dipy.align.imaffine)": [[168, "dipy.align.imaffine.transform_geometric_centers"]], "transform_inverse() (dipy.align.imaffine.affinemap method)": [[168, "dipy.align.imaffine.AffineMap.transform_inverse"]], "transform_inverse() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.transform_inverse"]], "transform_origins() (in module dipy.align.imaffine)": [[168, "dipy.align.imaffine.transform_origins"]], "transform_point_cloud() (dipy.align.cpd.deformableregistration method)": [[168, "dipy.align.cpd.DeformableRegistration.transform_point_cloud"]], "transform_points() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.transform_points"]], "transform_points_inverse() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.transform_points_inverse"]], "translation() (in module dipy.align._public)": [[168, "dipy.align._public.translation"]], "update() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[168, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.update"]], "update_transform() (dipy.align.cpd.deformableregistration method)": [[168, "dipy.align.cpd.DeformableRegistration.update_transform"]], "update_variance() (dipy.align.cpd.deformableregistration method)": [[168, "dipy.align.cpd.DeformableRegistration.update_variance"]], "use_moving_image_dynamics() (dipy.align.metrics.emmetric method)": [[168, "dipy.align.metrics.EMMetric.use_moving_image_dynamics"]], "use_moving_image_dynamics() (dipy.align.metrics.similaritymetric method)": [[168, "dipy.align.metrics.SimilarityMetric.use_moving_image_dynamics"]], "use_static_image_dynamics() (dipy.align.metrics.emmetric method)": [[168, "dipy.align.metrics.EMMetric.use_static_image_dynamics"]], "use_static_image_dynamics() (dipy.align.metrics.similaritymetric method)": [[168, "dipy.align.metrics.SimilarityMetric.use_static_image_dynamics"]], "v_cycle_2d() (in module dipy.align.metrics)": [[168, "dipy.align.metrics.v_cycle_2d"]], "v_cycle_3d() (in module dipy.align.metrics)": [[168, "dipy.align.metrics.v_cycle_3d"]], "warp_endomorphism() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.warp_endomorphism"]], "write_mapping() (in module dipy.align._public)": [[168, "dipy.align._public.write_mapping"]], "gradienttable (class in dipy.core.gradients)": [[169, "dipy.core.gradients.GradientTable"]], "graph (class in dipy.core.graph)": [[169, "dipy.core.graph.Graph"]], "hemisphere (class in dipy.core.sphere)": [[169, "dipy.core.sphere.HemiSphere"]], "lecuyer() (in module dipy.core.rng)": [[169, "dipy.core.rng.LEcuyer"]], "nonnegativeleastsquares (class in dipy.core.optimize)": [[169, "dipy.core.optimize.NonNegativeLeastSquares"]], "onetimeproperty (class in dipy.core.onetime)": [[169, "dipy.core.onetime.OneTimeProperty"]], "optimizer (class in dipy.core.optimize)": [[169, "dipy.core.optimize.Optimizer"]], "positivedefiniteleastsquares (class in dipy.core.optimize)": [[169, "dipy.core.optimize.PositiveDefiniteLeastSquares"]], "profiler (class in dipy.core.profile)": [[169, "dipy.core.profile.Profiler"]], "resetmixin (class in dipy.core.onetime)": [[169, "dipy.core.onetime.ResetMixin"]], "sklearnlinearsolver (class in dipy.core.optimize)": [[169, "dipy.core.optimize.SKLearnLinearSolver"]], "sphere (class in dipy.core.sphere)": [[169, "dipy.core.sphere.Sphere"]], "wichmannhill1982() (in module dipy.core.rng)": [[169, "dipy.core.rng.WichmannHill1982"]], "wichmannhill2006() (in module dipy.core.rng)": [[169, "dipy.core.rng.WichmannHill2006"]], "add_edge() (dipy.core.graph.graph method)": [[169, "dipy.core.graph.Graph.add_edge"]], "add_node() (dipy.core.graph.graph method)": [[169, "dipy.core.graph.Graph.add_node"]], "afb3d() (in module dipy.core.wavelet)": [[169, "dipy.core.wavelet.afb3D"]], "afb3d_a() (in module dipy.core.wavelet)": [[169, "dipy.core.wavelet.afb3D_A"]], "all_paths() (dipy.core.graph.graph method)": [[169, "dipy.core.graph.Graph.all_paths"]], "angular_similarity() (in module dipy.core.sphere_stats)": [[169, "dipy.core.sphere_stats.angular_similarity"]], "auto_attr() (in module dipy.core.onetime)": [[169, "dipy.core.onetime.auto_attr"]], "b0_threshold_empty_gradient_message() (in module dipy.core.gradients)": [[169, "dipy.core.gradients.b0_threshold_empty_gradient_message"]], "b0_threshold_update_slicing_message() (in module dipy.core.gradients)": [[169, "dipy.core.gradients.b0_threshold_update_slicing_message"]], "b0s_mask() (dipy.core.gradients.gradienttable method)": [[169, "dipy.core.gradients.GradientTable.b0s_mask"]], "btens_to_params() (in module dipy.core.gradients)": [[169, "dipy.core.gradients.btens_to_params"]], "bvals() (dipy.core.gradients.gradienttable method)": [[169, "dipy.core.gradients.GradientTable.bvals"]], "bvecs() (dipy.core.gradients.gradienttable method)": [[169, "dipy.core.gradients.GradientTable.bvecs"]], "cart2sphere() (in module dipy.core.geometry)": [[169, "dipy.core.geometry.cart2sphere"]], "cart_distance() (in module dipy.core.geometry)": [[169, "dipy.core.geometry.cart_distance"]], "check_multi_b() (in module dipy.core.gradients)": [[169, "dipy.core.gradients.check_multi_b"]], "children() (dipy.core.graph.graph method)": [[169, "dipy.core.graph.Graph.children"]], "circumradius() (in module dipy.core.geometry)": [[169, "dipy.core.geometry.circumradius"]], "compare_orientation_sets() (in module dipy.core.sphere_stats)": [[169, "dipy.core.sphere_stats.compare_orientation_sets"]], "compose_matrix() (in module dipy.core.geometry)": [[169, "dipy.core.geometry.compose_matrix"]], "compose_transformations() (in module dipy.core.geometry)": [[169, "dipy.core.geometry.compose_transformations"]], "create_unit_hemisphere() (in module dipy.core.subdivide_octahedron)": [[169, "dipy.core.subdivide_octahedron.create_unit_hemisphere"]], "create_unit_sphere() (in module dipy.core.subdivide_octahedron)": [[169, "dipy.core.subdivide_octahedron.create_unit_sphere"]], "cshift3d() (in module dipy.core.wavelet)": [[169, "dipy.core.wavelet.cshift3D"]], "decompose_matrix() (in module dipy.core.geometry)": [[169, "dipy.core.geometry.decompose_matrix"]], "del_node() (dipy.core.graph.graph method)": [[169, "dipy.core.graph.Graph.del_node"]], "del_node_and_edges() (dipy.core.graph.graph method)": [[169, "dipy.core.graph.Graph.del_node_and_edges"]], "dipy.core": [[169, "module-dipy.core"]], "dipy.core.geometry": [[169, "module-dipy.core.geometry"]], "dipy.core.gradients": [[169, "module-dipy.core.gradients"]], "dipy.core.graph": [[169, "module-dipy.core.graph"]], "dipy.core.histeq": [[169, "module-dipy.core.histeq"]], "dipy.core.ndindex": [[169, "module-dipy.core.ndindex"]], "dipy.core.onetime": [[169, "module-dipy.core.onetime"]], "dipy.core.optimize": [[169, "module-dipy.core.optimize"]], "dipy.core.profile": [[169, "module-dipy.core.profile"]], "dipy.core.rng": [[169, "module-dipy.core.rng"]], "dipy.core.sphere": [[169, "module-dipy.core.sphere"]], "dipy.core.sphere_stats": [[169, "module-dipy.core.sphere_stats"]], "dipy.core.subdivide_octahedron": [[169, "module-dipy.core.subdivide_octahedron"]], "dipy.core.wavelet": [[169, "module-dipy.core.wavelet"]], "disperse_charges() (in module dipy.core.sphere)": [[169, "dipy.core.sphere.disperse_charges"]], "disperse_charges_alt() (in module dipy.core.sphere)": [[169, "dipy.core.sphere.disperse_charges_alt"]], "dist_to_corner() (in module dipy.core.geometry)": [[169, "dipy.core.geometry.dist_to_corner"]], "down() (dipy.core.graph.graph method)": [[169, "dipy.core.graph.Graph.down"]], "down_short() (dipy.core.graph.graph method)": [[169, "dipy.core.graph.Graph.down_short"]], "dwt3d() (in module dipy.core.wavelet)": [[169, "dipy.core.wavelet.dwt3D"]], "edges() (dipy.core.sphere.sphere method)": [[169, "dipy.core.sphere.Sphere.edges"]], "eigenstats() (in module dipy.core.sphere_stats)": [[169, "dipy.core.sphere_stats.eigenstats"]], "euler_characteristic_check() (in module dipy.core.sphere)": [[169, "dipy.core.sphere.euler_characteristic_check"]], "euler_matrix() (in module dipy.core.geometry)": [[169, "dipy.core.geometry.euler_matrix"]], "evolution (dipy.core.optimize.optimizer property)": [[169, "dipy.core.optimize.Optimizer.evolution"]], "extract_b0() (in module dipy.core.gradients)": [[169, "dipy.core.gradients.extract_b0"]], "extract_dwi_shell() (in module dipy.core.gradients)": [[169, "dipy.core.gradients.extract_dwi_shell"]], "faces() (dipy.core.sphere.hemisphere method)": [[169, "dipy.core.sphere.HemiSphere.faces"]], "faces() (dipy.core.sphere.sphere method)": [[169, "dipy.core.sphere.Sphere.faces"]], "faces_from_sphere_vertices() (in module dipy.core.sphere)": [[169, "dipy.core.sphere.faces_from_sphere_vertices"]], "fibonacci_sphere() (in module dipy.core.sphere)": [[169, "dipy.core.sphere.fibonacci_sphere"]], "find_closest() (dipy.core.sphere.hemisphere method)": [[169, "dipy.core.sphere.HemiSphere.find_closest"]], "find_closest() (dipy.core.sphere.sphere method)": [[169, "dipy.core.sphere.Sphere.find_closest"]], "fit() (dipy.core.optimize.nonnegativeleastsquares method)": [[169, "dipy.core.optimize.NonNegativeLeastSquares.fit"]], "fit() (dipy.core.optimize.sklearnlinearsolver method)": [[169, "dipy.core.optimize.SKLearnLinearSolver.fit"]], "fopt (dipy.core.optimize.optimizer property)": [[169, "dipy.core.optimize.Optimizer.fopt"]], "from_sphere() (dipy.core.sphere.hemisphere class method)": [[169, "dipy.core.sphere.HemiSphere.from_sphere"]], "generate_bvecs() (in module dipy.core.gradients)": [[169, "dipy.core.gradients.generate_bvecs"]], "get_bval_indices() (in module dipy.core.gradients)": [[169, "dipy.core.gradients.get_bval_indices"]], "gradient_strength() (dipy.core.gradients.gradienttable method)": [[169, "dipy.core.gradients.GradientTable.gradient_strength"]], "gradient_table() (in module dipy.core.gradients)": [[169, "dipy.core.gradients.gradient_table"]], "gradient_table_from_bvals_bvecs() (in module dipy.core.gradients)": [[169, "dipy.core.gradients.gradient_table_from_bvals_bvecs"]], "gradient_table_from_gradient_strength_bvecs() (in module dipy.core.gradients)": [[169, "dipy.core.gradients.gradient_table_from_gradient_strength_bvecs"]], "gradient_table_from_qvals_bvecs() (in module dipy.core.gradients)": [[169, "dipy.core.gradients.gradient_table_from_qvals_bvecs"]], "histeq() (in module dipy.core.histeq)": [[169, "dipy.core.histeq.histeq"]], "idwt3d() (in module dipy.core.wavelet)": [[169, "dipy.core.wavelet.idwt3D"]], "info (dipy.core.gradients.gradienttable property)": [[169, "dipy.core.gradients.GradientTable.info"]], "is_hemispherical() (in module dipy.core.geometry)": [[169, "dipy.core.geometry.is_hemispherical"]], "lambert_equal_area_projection_cart() (in module dipy.core.geometry)": [[169, "dipy.core.geometry.lambert_equal_area_projection_cart"]], "lambert_equal_area_projection_polar() (in module dipy.core.geometry)": [[169, "dipy.core.geometry.lambert_equal_area_projection_polar"]], "mask_non_weighted_bvals() (in module dipy.core.gradients)": [[169, "dipy.core.gradients.mask_non_weighted_bvals"]], "message (dipy.core.optimize.optimizer property)": [[169, "dipy.core.optimize.Optimizer.message"]], "mirror() (dipy.core.sphere.hemisphere method)": [[169, "dipy.core.sphere.HemiSphere.mirror"]], "ndindex() (in module dipy.core.ndindex)": [[169, "dipy.core.ndindex.ndindex"]], "nearest_pos_semi_def() (in module dipy.core.geometry)": [[169, "dipy.core.geometry.nearest_pos_semi_def"]], "nfev (dipy.core.optimize.optimizer property)": [[169, "dipy.core.optimize.Optimizer.nfev"]], "nit (dipy.core.optimize.optimizer property)": [[169, "dipy.core.optimize.Optimizer.nit"]], "normalized_vector() (in module dipy.core.geometry)": [[169, "dipy.core.geometry.normalized_vector"]], "orientation_from_string() (in module dipy.core.gradients)": [[169, "dipy.core.gradients.orientation_from_string"]], "orientation_to_string() (in module dipy.core.gradients)": [[169, "dipy.core.gradients.orientation_to_string"]], "ornt_mapping() (in module dipy.core.gradients)": [[169, "dipy.core.gradients.ornt_mapping"]], "params_to_btens() (in module dipy.core.gradients)": [[169, "dipy.core.gradients.params_to_btens"]], "parents() (dipy.core.graph.graph method)": [[169, "dipy.core.graph.Graph.parents"]], "permutationinverse() (in module dipy.core.wavelet)": [[169, "dipy.core.wavelet.permutationinverse"]], "perpendicular_directions() (in module dipy.core.geometry)": [[169, "dipy.core.geometry.perpendicular_directions"]], "predict() (dipy.core.optimize.sklearnlinearsolver method)": [[169, "dipy.core.optimize.SKLearnLinearSolver.predict"]], "print_stats() (dipy.core.profile.profiler method)": [[169, "dipy.core.profile.Profiler.print_stats"]], "print_summary() (dipy.core.optimize.optimizer method)": [[169, "dipy.core.optimize.Optimizer.print_summary"]], "qvals() (dipy.core.gradients.gradienttable method)": [[169, "dipy.core.gradients.GradientTable.qvals"]], "random_uniform_on_sphere() (in module dipy.core.sphere_stats)": [[169, "dipy.core.sphere_stats.random_uniform_on_sphere"]], "reorient_bvecs() (in module dipy.core.gradients)": [[169, "dipy.core.gradients.reorient_bvecs"]], "reorient_on_axis() (in module dipy.core.gradients)": [[169, "dipy.core.gradients.reorient_on_axis"]], "reorient_vectors() (in module dipy.core.gradients)": [[169, "dipy.core.gradients.reorient_vectors"]], "reset() (dipy.core.onetime.resetmixin method)": [[169, "dipy.core.onetime.ResetMixin.reset"]], "rodrigues_axis_rotation() (in module dipy.core.geometry)": [[169, "dipy.core.geometry.rodrigues_axis_rotation"]], "round_bvals() (in module dipy.core.gradients)": [[169, "dipy.core.gradients.round_bvals"]], "sfb3d() (in module dipy.core.wavelet)": [[169, "dipy.core.wavelet.sfb3D"]], "sfb3d_a() (in module dipy.core.wavelet)": [[169, "dipy.core.wavelet.sfb3D_A"]], "shortest_path() (dipy.core.graph.graph method)": [[169, "dipy.core.graph.Graph.shortest_path"]], "solve() (dipy.core.optimize.positivedefiniteleastsquares method)": [[169, "dipy.core.optimize.PositiveDefiniteLeastSquares.solve"]], "sparse_nnls() (in module dipy.core.optimize)": [[169, "dipy.core.optimize.sparse_nnls"]], "spdot() (in module dipy.core.optimize)": [[169, "dipy.core.optimize.spdot"]], "sph2latlon() (in module dipy.core.geometry)": [[169, "dipy.core.geometry.sph2latlon"]], "sphere2cart() (in module dipy.core.geometry)": [[169, "dipy.core.geometry.sphere2cart"]], "sphere_distance() (in module dipy.core.geometry)": [[169, "dipy.core.geometry.sphere_distance"]], "subdivide() (dipy.core.sphere.hemisphere method)": [[169, "dipy.core.sphere.HemiSphere.subdivide"]], "subdivide() (dipy.core.sphere.sphere method)": [[169, "dipy.core.sphere.Sphere.subdivide"]], "tau() (dipy.core.gradients.gradienttable method)": [[169, "dipy.core.gradients.GradientTable.tau"]], "unique_bvals_magnitude() (in module dipy.core.gradients)": [[169, "dipy.core.gradients.unique_bvals_magnitude"]], "unique_bvals_tolerance() (in module dipy.core.gradients)": [[169, "dipy.core.gradients.unique_bvals_tolerance"]], "unique_edges() (in module dipy.core.sphere)": [[169, "dipy.core.sphere.unique_edges"]], "unique_sets() (in module dipy.core.sphere)": [[169, "dipy.core.sphere.unique_sets"]], "up() (dipy.core.graph.graph method)": [[169, "dipy.core.graph.Graph.up"]], "up_short() (dipy.core.graph.graph method)": [[169, "dipy.core.graph.Graph.up_short"]], "vec2vec_rotmat() (in module dipy.core.geometry)": [[169, "dipy.core.geometry.vec2vec_rotmat"]], "vector_cosine() (in module dipy.core.geometry)": [[169, "dipy.core.geometry.vector_cosine"]], "vector_norm() (in module dipy.core.geometry)": [[169, "dipy.core.geometry.vector_norm"]], "vertices() (dipy.core.sphere.sphere method)": [[169, "dipy.core.sphere.Sphere.vertices"]], "x (dipy.core.sphere.sphere property)": [[169, "dipy.core.sphere.Sphere.x"]], "xopt (dipy.core.optimize.optimizer property)": [[169, "dipy.core.optimize.Optimizer.xopt"]], "y (dipy.core.sphere.sphere property)": [[169, "dipy.core.sphere.Sphere.y"]], "z (dipy.core.sphere.sphere property)": [[169, "dipy.core.sphere.Sphere.z"]], "dataerror (class in dipy.data)": [[170, "dipy.data.DataError"]], "check_md5() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.check_md5"]], "copyfileobj_withprogress() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.copyfileobj_withprogress"]], "dipy.data": [[170, "module-dipy.data"]], "dipy.data.fetcher": [[170, "module-dipy.data.fetcher"]], "dsi_deconv_voxels() (in module dipy.data)": [[170, "dipy.data.dsi_deconv_voxels"]], "dsi_voxels() (in module dipy.data)": [[170, "dipy.data.dsi_voxels"]], "extract_example_tracts() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.extract_example_tracts"]], "fetch_30_bundle_atlas_hcp842() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_30_bundle_atlas_hcp842"]], "fetch_dib_217_lte_pte_ste() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_DiB_217_lte_pte_ste"]], "fetch_dib_70_lte_pte_ste() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_DiB_70_lte_pte_ste"]], "fetch_bundle_atlas_hcp842() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_bundle_atlas_hcp842"]], "fetch_bundle_fa_hcp() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_bundle_fa_hcp"]], "fetch_bundle_warp_dataset() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_bundle_warp_dataset"]], "fetch_bundles_2_subjects() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_bundles_2_subjects"]], "fetch_cenir_multib() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_cenir_multib"]], "fetch_cfin_multib() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_cfin_multib"]], "fetch_cti_rat1() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_cti_rat1"]], "fetch_data() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_data"]], "fetch_deepn4_test() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_deepn4_test"]], "fetch_deepn4_tf_weights() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_deepn4_tf_weights"]], "fetch_deepn4_torch_weights() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_deepn4_torch_weights"]], "fetch_disco1_dataset() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_disco1_dataset"]], "fetch_disco2_dataset() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_disco2_dataset"]], "fetch_disco3_dataset() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_disco3_dataset"]], "fetch_disco_dataset() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_disco_dataset"]], "fetch_evac_test() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_evac_test"]], "fetch_evac_tf_weights() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_evac_tf_weights"]], "fetch_evac_torch_weights() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_evac_torch_weights"]], "fetch_file_formats() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_file_formats"]], "fetch_fury_surface() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_fury_surface"]], "fetch_gold_standard_io() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_gold_standard_io"]], "fetch_hbn() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_hbn"]], "fetch_hcp() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_hcp"]], "fetch_isbi2013_2shell() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_isbi2013_2shell"]], "fetch_ivim() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_ivim"]], "fetch_mni_template() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_mni_template"]], "fetch_ptt_minimal_dataset() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_ptt_minimal_dataset"]], "fetch_qtdmri_test_retest_2subjects() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_qtdMRI_test_retest_2subjects"]], "fetch_qte_lte_pte() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_qte_lte_pte"]], "fetch_resdnn_tf_weights() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_resdnn_tf_weights"]], "fetch_resdnn_torch_weights() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_resdnn_torch_weights"]], "fetch_scil_b0() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_scil_b0"]], "fetch_sherbrooke_3shell() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_sherbrooke_3shell"]], "fetch_stanford_hardi() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_stanford_hardi"]], "fetch_stanford_labels() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_stanford_labels"]], "fetch_stanford_pve_maps() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_stanford_pve_maps"]], "fetch_stanford_t1() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_stanford_t1"]], "fetch_stanford_tracks() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_stanford_tracks"]], "fetch_syn_data() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_syn_data"]], "fetch_synb0_test() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_synb0_test"]], "fetch_synb0_weights() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_synb0_weights"]], "fetch_taiwan_ntu_dsi() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_taiwan_ntu_dsi"]], "fetch_target_tractogram_hcp() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_target_tractogram_hcp"]], "fetch_tissue_data() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.fetch_tissue_data"]], "get_3shell_gtab() (in module dipy.data)": [[170, "dipy.data.get_3shell_gtab"]], "get_bundle_atlas_hcp842() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.get_bundle_atlas_hcp842"]], "get_cmap() (in module dipy.data)": [[170, "dipy.data.get_cmap"]], "get_file_formats() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.get_file_formats"]], "get_fnames() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.get_fnames"]], "get_gtab_taiwan_dsi() (in module dipy.data)": [[170, "dipy.data.get_gtab_taiwan_dsi"]], "get_isbi2013_2shell_gtab() (in module dipy.data)": [[170, "dipy.data.get_isbi2013_2shell_gtab"]], "get_sim_voxels() (in module dipy.data)": [[170, "dipy.data.get_sim_voxels"]], "get_skeleton() (in module dipy.data)": [[170, "dipy.data.get_skeleton"]], "get_sphere() (in module dipy.data)": [[170, "dipy.data.get_sphere"]], "get_target_tractogram_hcp() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.get_target_tractogram_hcp"]], "get_two_hcp842_bundles() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.get_two_hcp842_bundles"]], "load_sdp_constraints() (in module dipy.data)": [[170, "dipy.data.load_sdp_constraints"]], "loads_compat() (in module dipy.data)": [[170, "dipy.data.loads_compat"]], "matlab_life_results() (in module dipy.data)": [[170, "dipy.data.matlab_life_results"]], "mrtrix_spherical_functions() (in module dipy.data)": [[170, "dipy.data.mrtrix_spherical_functions"]], "read_dib_217_lte_pte_ste() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.read_DiB_217_lte_pte_ste"]], "read_dib_70_lte_pte_ste() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.read_DiB_70_lte_pte_ste"]], "read_bundles_2_subjects() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.read_bundles_2_subjects"]], "read_cenir_multib() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.read_cenir_multib"]], "read_cfin_dwi() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.read_cfin_dwi"]], "read_cfin_t1() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.read_cfin_t1"]], "read_five_af_bundles() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.read_five_af_bundles"]], "read_isbi2013_2shell() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.read_isbi2013_2shell"]], "read_ivim() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.read_ivim"]], "read_mni_template() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.read_mni_template"]], "read_qtdmri_test_retest_2subjects() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.read_qtdMRI_test_retest_2subjects"]], "read_qte_lte_pte() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.read_qte_lte_pte"]], "read_scil_b0() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.read_scil_b0"]], "read_sherbrooke_3shell() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.read_sherbrooke_3shell"]], "read_siemens_scil_b0() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.read_siemens_scil_b0"]], "read_stanford_hardi() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.read_stanford_hardi"]], "read_stanford_labels() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.read_stanford_labels"]], "read_stanford_pve_maps() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.read_stanford_pve_maps"]], "read_stanford_t1() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.read_stanford_t1"]], "read_syn_data() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.read_syn_data"]], "read_taiwan_ntu_dsi() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.read_taiwan_ntu_dsi"]], "read_tissue_data() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.read_tissue_data"]], "to_bids_description() (in module dipy.data.fetcher)": [[170, "dipy.data.fetcher.to_bids_description"]], "two_cingulum_bundles() (in module dipy.data)": [[170, "dipy.data.two_cingulum_bundles"]], "adaptive_soft_matching() (in module dipy.denoise.adaptive_soft_matching)": [[171, "dipy.denoise.adaptive_soft_matching.adaptive_soft_matching"]], "compute_num_samples() (in module dipy.denoise.localpca)": [[171, "dipy.denoise.localpca.compute_num_samples"]], "compute_patch_size() (in module dipy.denoise.localpca)": [[171, "dipy.denoise.localpca.compute_patch_size"]], "compute_suggested_patch_radius() (in module dipy.denoise.localpca)": [[171, "dipy.denoise.localpca.compute_suggested_patch_radius"]], "create_patch_radius_arr() (in module dipy.denoise.localpca)": [[171, "dipy.denoise.localpca.create_patch_radius_arr"]], "dimensionality_problem_message() (in module dipy.denoise.localpca)": [[171, "dipy.denoise.localpca.dimensionality_problem_message"]], "dipy.denoise": [[171, "module-dipy.denoise"]], "dipy.denoise.adaptive_soft_matching": [[171, "module-dipy.denoise.adaptive_soft_matching"]], "dipy.denoise.gibbs": [[171, "module-dipy.denoise.gibbs"]], "dipy.denoise.localpca": [[171, "module-dipy.denoise.localpca"]], "dipy.denoise.nlmeans": [[171, "module-dipy.denoise.nlmeans"]], "dipy.denoise.noise_estimate": [[171, "module-dipy.denoise.noise_estimate"]], "dipy.denoise.non_local_means": [[171, "module-dipy.denoise.non_local_means"]], "dipy.denoise.patch2self": [[171, "module-dipy.denoise.patch2self"]], "estimate_sigma() (in module dipy.denoise.noise_estimate)": [[171, "dipy.denoise.noise_estimate.estimate_sigma"]], "genpca() (in module dipy.denoise.localpca)": [[171, "dipy.denoise.localpca.genpca"]], "gibbs_removal() (in module dipy.denoise.gibbs)": [[171, "dipy.denoise.gibbs.gibbs_removal"]], "localpca() (in module dipy.denoise.localpca)": [[171, "dipy.denoise.localpca.localpca"]], "mppca() (in module dipy.denoise.localpca)": [[171, "dipy.denoise.localpca.mppca"]], "nlmeans() (in module dipy.denoise.nlmeans)": [[171, "dipy.denoise.nlmeans.nlmeans"]], "non_local_means() (in module dipy.denoise.non_local_means)": [[171, "dipy.denoise.non_local_means.non_local_means"]], "patch2self() (in module dipy.denoise.patch2self)": [[171, "dipy.denoise.patch2self.patch2self"]], "piesno() (in module dipy.denoise.noise_estimate)": [[171, "dipy.denoise.noise_estimate.piesno"]], "vol_denoise() (in module dipy.denoise.patch2self)": [[171, "dipy.denoise.patch2self.vol_denoise"]], "peaksandmetrics (class in dipy.direction.peaks)": [[172, "dipy.direction.peaks.PeaksAndMetrics"]], "dipy.direction": [[172, "module-dipy.direction"]], "dipy.direction.peaks": [[172, "module-dipy.direction.peaks"]], "peak_directions_nl() (in module dipy.direction.peaks)": [[172, "dipy.direction.peaks.peak_directions_nl"]], "peaks_from_model() (in module dipy.direction.peaks)": [[172, "dipy.direction.peaks.peaks_from_model"]], "peaks_from_positions() (in module dipy.direction.peaks)": [[172, "dipy.direction.peaks.peaks_from_positions"]], "reshape_peaks_for_visualization() (in module dipy.direction.peaks)": [[172, "dipy.direction.peaks.reshape_peaks_for_visualization"]], "dpy (class in dipy.io.dpy)": [[173, "dipy.io.dpy.Dpy"]], "nifti (dipy.io.stateful_tractogram.origin attribute)": [[173, "dipy.io.stateful_tractogram.Origin.NIFTI"]], "origin (class in dipy.io.stateful_tractogram)": [[173, "dipy.io.stateful_tractogram.Origin"]], "rasmm (dipy.io.stateful_tractogram.space attribute)": [[173, "dipy.io.stateful_tractogram.Space.RASMM"]], "space (class in dipy.io.stateful_tractogram)": [[173, "dipy.io.stateful_tractogram.Space"]], "statefultractogram (class in dipy.io.stateful_tractogram)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram"]], "trackvis (dipy.io.stateful_tractogram.origin attribute)": [[173, "dipy.io.stateful_tractogram.Origin.TRACKVIS"]], "vox (dipy.io.stateful_tractogram.space attribute)": [[173, "dipy.io.stateful_tractogram.Space.VOX"]], "voxmm (dipy.io.stateful_tractogram.space attribute)": [[173, "dipy.io.stateful_tractogram.Space.VOXMM"]], "affine (dipy.io.stateful_tractogram.statefultractogram property)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.affine"]], "are_compatible() (dipy.io.stateful_tractogram.statefultractogram static method)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.are_compatible"]], "close() (dipy.io.dpy.dpy method)": [[173, "dipy.io.dpy.Dpy.close"]], "compute_bounding_box() (dipy.io.stateful_tractogram.statefultractogram method)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.compute_bounding_box"]], "create_nifti_header() (in module dipy.io.utils)": [[173, "dipy.io.utils.create_nifti_header"]], "create_tractogram_header() (in module dipy.io.utils)": [[173, "dipy.io.utils.create_tractogram_header"]], "data_per_point (dipy.io.stateful_tractogram.statefultractogram property)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.data_per_point"]], "data_per_streamline (dipy.io.stateful_tractogram.statefultractogram property)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.data_per_streamline"]], "decfa() (in module dipy.io.utils)": [[173, "dipy.io.utils.decfa"]], "decfa_to_float() (in module dipy.io.utils)": [[173, "dipy.io.utils.decfa_to_float"]], "dimensions (dipy.io.stateful_tractogram.statefultractogram property)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.dimensions"]], "dipy.io": [[173, "module-dipy.io"]], "dipy.io.dpy": [[173, "module-dipy.io.dpy"]], "dipy.io.gradients": [[173, "module-dipy.io.gradients"]], "dipy.io.image": [[173, "module-dipy.io.image"]], "dipy.io.peaks": [[173, "module-dipy.io.peaks"]], "dipy.io.pickles": [[173, "module-dipy.io.pickles"]], "dipy.io.stateful_tractogram": [[173, "module-dipy.io.stateful_tractogram"]], "dipy.io.streamline": [[173, "module-dipy.io.streamline"]], "dipy.io.surface": [[173, "module-dipy.io.surface"]], "dipy.io.utils": [[173, "module-dipy.io.utils"]], "dipy.io.vtk": [[173, "module-dipy.io.vtk"]], "dtype_dict (dipy.io.stateful_tractogram.statefultractogram property)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.dtype_dict"]], "from_sft() (dipy.io.stateful_tractogram.statefultractogram static method)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.from_sft"]], "get_data_per_point_keys() (dipy.io.stateful_tractogram.statefultractogram method)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.get_data_per_point_keys"]], "get_data_per_streamline_keys() (dipy.io.stateful_tractogram.statefultractogram method)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.get_data_per_streamline_keys"]], "get_reference_info() (in module dipy.io.utils)": [[173, "dipy.io.utils.get_reference_info"]], "get_streamlines_copy() (dipy.io.stateful_tractogram.statefultractogram method)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.get_streamlines_copy"]], "is_bbox_in_vox_valid() (dipy.io.stateful_tractogram.statefultractogram method)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.is_bbox_in_vox_valid"]], "is_header_compatible() (in module dipy.io.utils)": [[173, "dipy.io.utils.is_header_compatible"]], "is_reference_info_valid() (in module dipy.io.utils)": [[173, "dipy.io.utils.is_reference_info_valid"]], "load_dpy() (in module dipy.io.streamline)": [[173, "dipy.io.streamline.load_dpy"]], "load_fib() (in module dipy.io.streamline)": [[173, "dipy.io.streamline.load_fib"]], "load_generator() (in module dipy.io.streamline)": [[173, "dipy.io.streamline.load_generator"]], "load_gifti() (in module dipy.io.surface)": [[173, "dipy.io.surface.load_gifti"]], "load_nifti() (in module dipy.io.image)": [[173, "dipy.io.image.load_nifti"]], "load_nifti_data() (in module dipy.io.image)": [[173, "dipy.io.image.load_nifti_data"]], "load_pam() (in module dipy.io.peaks)": [[173, "dipy.io.peaks.load_pam"]], "load_peaks() (in module dipy.io.peaks)": [[173, "dipy.io.peaks.load_peaks"]], "load_pial() (in module dipy.io.surface)": [[173, "dipy.io.surface.load_pial"]], "load_pickle() (in module dipy.io.pickles)": [[173, "dipy.io.pickles.load_pickle"]], "load_polydata() (in module dipy.io.vtk)": [[173, "dipy.io.vtk.load_polydata"]], "load_tck() (in module dipy.io.streamline)": [[173, "dipy.io.streamline.load_tck"]], "load_tractogram() (in module dipy.io.streamline)": [[173, "dipy.io.streamline.load_tractogram"]], "load_trk() (in module dipy.io.streamline)": [[173, "dipy.io.streamline.load_trk"]], "load_trx() (in module dipy.io.streamline)": [[173, "dipy.io.streamline.load_trx"]], "load_vtk() (in module dipy.io.streamline)": [[173, "dipy.io.streamline.load_vtk"]], "load_vtk_streamlines() (in module dipy.io.vtk)": [[173, "dipy.io.vtk.load_vtk_streamlines"]], "load_vtp() (in module dipy.io.streamline)": [[173, "dipy.io.streamline.load_vtp"]], "make5d() (in module dipy.io.utils)": [[173, "dipy.io.utils.make5d"]], "nifti1_symmat() (in module dipy.io.utils)": [[173, "dipy.io.utils.nifti1_symmat"]], "niftis_to_pam() (in module dipy.io.peaks)": [[173, "dipy.io.peaks.niftis_to_pam"]], "origin (dipy.io.stateful_tractogram.statefultractogram property)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.origin"]], "pam_to_niftis() (in module dipy.io.peaks)": [[173, "dipy.io.peaks.pam_to_niftis"]], "peaks_to_niftis() (in module dipy.io.peaks)": [[173, "dipy.io.peaks.peaks_to_niftis"]], "read_bvals_bvecs() (in module dipy.io.gradients)": [[173, "dipy.io.gradients.read_bvals_bvecs"]], "read_img_arr_or_path() (in module dipy.io.utils)": [[173, "dipy.io.utils.read_img_arr_or_path"]], "read_track() (dipy.io.dpy.dpy method)": [[173, "dipy.io.dpy.Dpy.read_track"]], "read_tracks() (dipy.io.dpy.dpy method)": [[173, "dipy.io.dpy.Dpy.read_tracks"]], "read_tracksi() (dipy.io.dpy.dpy method)": [[173, "dipy.io.dpy.Dpy.read_tracksi"]], "remove_invalid_streamlines() (dipy.io.stateful_tractogram.statefultractogram method)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.remove_invalid_streamlines"]], "save_buan_profiles_hdf5() (in module dipy.io.utils)": [[173, "dipy.io.utils.save_buan_profiles_hdf5"]], "save_dpy() (in module dipy.io.streamline)": [[173, "dipy.io.streamline.save_dpy"]], "save_fib() (in module dipy.io.streamline)": [[173, "dipy.io.streamline.save_fib"]], "save_generator() (in module dipy.io.streamline)": [[173, "dipy.io.streamline.save_generator"]], "save_nifti() (in module dipy.io.image)": [[173, "dipy.io.image.save_nifti"]], "save_pam() (in module dipy.io.peaks)": [[173, "dipy.io.peaks.save_pam"]], "save_peaks() (in module dipy.io.peaks)": [[173, "dipy.io.peaks.save_peaks"]], "save_pickle() (in module dipy.io.pickles)": [[173, "dipy.io.pickles.save_pickle"]], "save_polydata() (in module dipy.io.vtk)": [[173, "dipy.io.vtk.save_polydata"]], "save_qa_metric() (in module dipy.io.image)": [[173, "dipy.io.image.save_qa_metric"]], "save_tck() (in module dipy.io.streamline)": [[173, "dipy.io.streamline.save_tck"]], "save_tractogram() (in module dipy.io.streamline)": [[173, "dipy.io.streamline.save_tractogram"]], "save_trk() (in module dipy.io.streamline)": [[173, "dipy.io.streamline.save_trk"]], "save_trx() (in module dipy.io.streamline)": [[173, "dipy.io.streamline.save_trx"]], "save_vtk() (in module dipy.io.streamline)": [[173, "dipy.io.streamline.save_vtk"]], "save_vtk_streamlines() (in module dipy.io.vtk)": [[173, "dipy.io.vtk.save_vtk_streamlines"]], "save_vtp() (in module dipy.io.streamline)": [[173, "dipy.io.streamline.save_vtp"]], "space (dipy.io.stateful_tractogram.statefultractogram property)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.space"]], "space_attributes (dipy.io.stateful_tractogram.statefultractogram property)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.space_attributes"]], "split_name_with_gz() (in module dipy.io.utils)": [[173, "dipy.io.utils.split_name_with_gz"]], "streamlines (dipy.io.stateful_tractogram.statefultractogram property)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.streamlines"]], "tensor_to_pam() (in module dipy.io.peaks)": [[173, "dipy.io.peaks.tensor_to_pam"]], "to_center() (dipy.io.stateful_tractogram.statefultractogram method)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.to_center"]], "to_corner() (dipy.io.stateful_tractogram.statefultractogram method)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.to_corner"]], "to_origin() (dipy.io.stateful_tractogram.statefultractogram method)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.to_origin"]], "to_rasmm() (dipy.io.stateful_tractogram.statefultractogram method)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.to_rasmm"]], "to_space() (dipy.io.stateful_tractogram.statefultractogram method)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.to_space"]], "to_vox() (dipy.io.stateful_tractogram.statefultractogram method)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.to_vox"]], "to_voxmm() (dipy.io.stateful_tractogram.statefultractogram method)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.to_voxmm"]], "version() (dipy.io.dpy.dpy method)": [[173, "dipy.io.dpy.Dpy.version"]], "voxel_order (dipy.io.stateful_tractogram.statefultractogram property)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.voxel_order"]], "voxel_sizes (dipy.io.stateful_tractogram.statefultractogram property)": [[173, "dipy.io.stateful_tractogram.StatefulTractogram.voxel_sizes"]], "write_track() (dipy.io.dpy.dpy method)": [[173, "dipy.io.dpy.Dpy.write_track"]], "write_tracks() (dipy.io.dpy.dpy method)": [[173, "dipy.io.dpy.Dpy.write_tracks"]], "add (class in dipy.nn.torch.evac)": [[174, "dipy.nn.torch.evac.Add"]], "block (class in dipy.nn.tf.evac)": [[174, "dipy.nn.tf.evac.Block"]], "block (class in dipy.nn.torch.evac)": [[174, "dipy.nn.torch.evac.Block"]], "channelsum (class in dipy.nn.tf.evac)": [[174, "dipy.nn.tf.evac.ChannelSum"]], "channelsum (class in dipy.nn.torch.evac)": [[174, "dipy.nn.torch.evac.ChannelSum"]], "cnn1ddenoiser (class in dipy.nn.tf.cnn_1d_denoising)": [[174, "dipy.nn.tf.cnn_1d_denoising.Cnn1DDenoiser"]], "decoderblock (class in dipy.nn.tf.deepn4)": [[174, "dipy.nn.tf.deepn4.DecoderBlock"]], "decoderblock (class in dipy.nn.tf.synb0)": [[174, "dipy.nn.tf.synb0.DecoderBlock"]], "deepn4 (class in dipy.nn.tf.deepn4)": [[174, "dipy.nn.tf.deepn4.DeepN4"]], "deepn4 (class in dipy.nn.torch.deepn4)": [[174, "dipy.nn.torch.deepn4.DeepN4"]], "densemodel (class in dipy.nn.torch.histo_resdnn)": [[174, "dipy.nn.torch.histo_resdnn.DenseModel"]], "evacplus (class in dipy.nn.tf.evac)": [[174, "dipy.nn.tf.evac.EVACPlus"]], "evacplus (class in dipy.nn.torch.evac)": [[174, "dipy.nn.torch.evac.EVACPlus"]], "encoderblock (class in dipy.nn.tf.deepn4)": [[174, "dipy.nn.tf.deepn4.EncoderBlock"]], "encoderblock (class in dipy.nn.tf.synb0)": [[174, "dipy.nn.tf.synb0.EncoderBlock"]], "historesdnn (class in dipy.nn.tf.histo_resdnn)": [[174, "dipy.nn.tf.histo_resdnn.HistoResDNN"]], "historesdnn (class in dipy.nn.torch.histo_resdnn)": [[174, "dipy.nn.torch.histo_resdnn.HistoResDNN"]], "model (class in dipy.nn.torch.evac)": [[174, "dipy.nn.torch.evac.Model"]], "movedimlayer (class in dipy.nn.torch.evac)": [[174, "dipy.nn.torch.evac.MoveDimLayer"]], "multiplelayerpercepton (class in dipy.nn.tf.model)": [[174, "dipy.nn.tf.model.MultipleLayerPercepton"]], "singlelayerperceptron (class in dipy.nn.tf.model)": [[174, "dipy.nn.tf.model.SingleLayerPerceptron"]], "synb0 (class in dipy.nn.tf.synb0)": [[174, "dipy.nn.tf.synb0.Synb0"]], "unet3d (class in dipy.nn.torch.deepn4)": [[174, "dipy.nn.torch.deepn4.UNet3D"]], "unet3d() (in module dipy.nn.tf.deepn4)": [[174, "dipy.nn.tf.deepn4.UNet3D"]], "unet3d() (in module dipy.nn.tf.synb0)": [[174, "dipy.nn.tf.synb0.UNet3D"]], "call() (dipy.nn.tf.deepn4.decoderblock method)": [[174, "dipy.nn.tf.deepn4.DecoderBlock.call"]], "call() (dipy.nn.tf.deepn4.encoderblock method)": [[174, "dipy.nn.tf.deepn4.EncoderBlock.call"]], "call() (dipy.nn.tf.evac.block method)": [[174, "dipy.nn.tf.evac.Block.call"]], "call() (dipy.nn.tf.evac.channelsum method)": [[174, "dipy.nn.tf.evac.ChannelSum.call"]], "call() (dipy.nn.tf.synb0.decoderblock method)": [[174, "dipy.nn.tf.synb0.DecoderBlock.call"]], "call() (dipy.nn.tf.synb0.encoderblock method)": [[174, "dipy.nn.tf.synb0.EncoderBlock.call"]], "compile() (dipy.nn.tf.cnn_1d_denoising.cnn1ddenoiser method)": [[174, "dipy.nn.tf.cnn_1d_denoising.Cnn1DDenoiser.compile"]], "decoder_block() (dipy.nn.torch.deepn4.unet3d method)": [[174, "dipy.nn.torch.deepn4.UNet3D.decoder_block"]], "dipy.nn": [[174, "module-dipy.nn"]], "dipy.nn.tf": [[174, "module-dipy.nn.tf"]], "dipy.nn.tf.cnn_1d_denoising": [[174, "module-dipy.nn.tf.cnn_1d_denoising"]], "dipy.nn.tf.deepn4": [[174, "module-dipy.nn.tf.deepn4"]], "dipy.nn.tf.evac": [[174, "module-dipy.nn.tf.evac"]], "dipy.nn.tf.histo_resdnn": [[174, "module-dipy.nn.tf.histo_resdnn"]], "dipy.nn.tf.model": [[174, "module-dipy.nn.tf.model"]], "dipy.nn.tf.synb0": [[174, "module-dipy.nn.tf.synb0"]], "dipy.nn.torch": [[174, "module-dipy.nn.torch"]], "dipy.nn.torch.deepn4": [[174, "module-dipy.nn.torch.deepn4"]], "dipy.nn.torch.evac": [[174, "module-dipy.nn.torch.evac"]], "dipy.nn.torch.histo_resdnn": [[174, "module-dipy.nn.torch.histo_resdnn"]], "dipy.nn.utils": [[174, "module-dipy.nn.utils"]], "encoder_block() (dipy.nn.torch.deepn4.unet3d method)": [[174, "dipy.nn.torch.deepn4.UNet3D.encoder_block"]], "evaluate() (dipy.nn.tf.cnn_1d_denoising.cnn1ddenoiser method)": [[174, "dipy.nn.tf.cnn_1d_denoising.Cnn1DDenoiser.evaluate"]], "evaluate() (dipy.nn.tf.model.multiplelayerpercepton method)": [[174, "dipy.nn.tf.model.MultipleLayerPercepton.evaluate"]], "evaluate() (dipy.nn.tf.model.singlelayerperceptron method)": [[174, "dipy.nn.tf.model.SingleLayerPerceptron.evaluate"]], "fetch_default_weights() (dipy.nn.tf.deepn4.deepn4 method)": [[174, "dipy.nn.tf.deepn4.DeepN4.fetch_default_weights"]], "fetch_default_weights() (dipy.nn.tf.evac.evacplus method)": [[174, "dipy.nn.tf.evac.EVACPlus.fetch_default_weights"]], "fetch_default_weights() (dipy.nn.tf.histo_resdnn.historesdnn method)": [[174, "dipy.nn.tf.histo_resdnn.HistoResDNN.fetch_default_weights"]], "fetch_default_weights() (dipy.nn.tf.synb0.synb0 method)": [[174, "dipy.nn.tf.synb0.Synb0.fetch_default_weights"]], "fetch_default_weights() (dipy.nn.torch.deepn4.deepn4 method)": [[174, "dipy.nn.torch.deepn4.DeepN4.fetch_default_weights"]], "fetch_default_weights() (dipy.nn.torch.evac.evacplus method)": [[174, "dipy.nn.torch.evac.EVACPlus.fetch_default_weights"]], "fetch_default_weights() (dipy.nn.torch.histo_resdnn.historesdnn method)": [[174, "dipy.nn.torch.histo_resdnn.HistoResDNN.fetch_default_weights"]], "fit() (dipy.nn.tf.cnn_1d_denoising.cnn1ddenoiser method)": [[174, "dipy.nn.tf.cnn_1d_denoising.Cnn1DDenoiser.fit"]], "fit() (dipy.nn.tf.model.multiplelayerpercepton method)": [[174, "dipy.nn.tf.model.MultipleLayerPercepton.fit"]], "fit() (dipy.nn.tf.model.singlelayerperceptron method)": [[174, "dipy.nn.tf.model.SingleLayerPerceptron.fit"]], "forward() (dipy.nn.torch.deepn4.unet3d method)": [[174, "dipy.nn.torch.deepn4.UNet3D.forward"]], "forward() (dipy.nn.torch.evac.add method)": [[174, "dipy.nn.torch.evac.Add.forward"]], "forward() (dipy.nn.torch.evac.block method)": [[174, "dipy.nn.torch.evac.Block.forward"]], "forward() (dipy.nn.torch.evac.channelsum method)": [[174, "dipy.nn.torch.evac.ChannelSum.forward"]], "forward() (dipy.nn.torch.evac.model method)": [[174, "dipy.nn.torch.evac.Model.forward"]], "forward() (dipy.nn.torch.evac.movedimlayer method)": [[174, "dipy.nn.torch.evac.MoveDimLayer.forward"]], "forward() (dipy.nn.torch.histo_resdnn.densemodel method)": [[174, "dipy.nn.torch.histo_resdnn.DenseModel.forward"]], "init_model() (dipy.nn.torch.evac.evacplus method)": [[174, "dipy.nn.torch.evac.EVACPlus.init_model"]], "init_model() (in module dipy.nn.tf.evac)": [[174, "dipy.nn.tf.evac.init_model"]], "load_model_weights() (dipy.nn.tf.deepn4.deepn4 method)": [[174, "dipy.nn.tf.deepn4.DeepN4.load_model_weights"]], "load_model_weights() (dipy.nn.tf.evac.evacplus method)": [[174, "dipy.nn.tf.evac.EVACPlus.load_model_weights"]], "load_model_weights() (dipy.nn.tf.histo_resdnn.historesdnn method)": [[174, "dipy.nn.tf.histo_resdnn.HistoResDNN.load_model_weights"]], "load_model_weights() (dipy.nn.tf.synb0.synb0 method)": [[174, "dipy.nn.tf.synb0.Synb0.load_model_weights"]], "load_model_weights() (dipy.nn.torch.deepn4.deepn4 method)": [[174, "dipy.nn.torch.deepn4.DeepN4.load_model_weights"]], "load_model_weights() (dipy.nn.torch.evac.evacplus method)": [[174, "dipy.nn.torch.evac.EVACPlus.load_model_weights"]], "load_model_weights() (dipy.nn.torch.histo_resdnn.historesdnn method)": [[174, "dipy.nn.torch.histo_resdnn.HistoResDNN.load_model_weights"]], "load_resample() (dipy.nn.tf.deepn4.deepn4 method)": [[174, "dipy.nn.tf.deepn4.DeepN4.load_resample"]], "load_resample() (dipy.nn.torch.deepn4.deepn4 method)": [[174, "dipy.nn.torch.deepn4.DeepN4.load_resample"]], "load_weights() (dipy.nn.tf.cnn_1d_denoising.cnn1ddenoiser method)": [[174, "dipy.nn.tf.cnn_1d_denoising.Cnn1DDenoiser.load_weights"]], "normalize() (in module dipy.nn.utils)": [[174, "dipy.nn.utils.normalize"]], "pad() (dipy.nn.tf.deepn4.deepn4 method)": [[174, "dipy.nn.tf.deepn4.DeepN4.pad"]], "pad() (dipy.nn.torch.deepn4.deepn4 method)": [[174, "dipy.nn.torch.deepn4.DeepN4.pad"]], "pad_crop() (in module dipy.nn.utils)": [[174, "dipy.nn.utils.pad_crop"]], "predict() (dipy.nn.tf.cnn_1d_denoising.cnn1ddenoiser method)": [[174, "dipy.nn.tf.cnn_1d_denoising.Cnn1DDenoiser.predict"]], "predict() (dipy.nn.tf.deepn4.deepn4 method)": [[174, "dipy.nn.tf.deepn4.DeepN4.predict"]], "predict() (dipy.nn.tf.evac.evacplus method)": [[174, "dipy.nn.tf.evac.EVACPlus.predict"]], "predict() (dipy.nn.tf.histo_resdnn.historesdnn method)": [[174, "dipy.nn.tf.histo_resdnn.HistoResDNN.predict"]], "predict() (dipy.nn.tf.model.multiplelayerpercepton method)": [[174, "dipy.nn.tf.model.MultipleLayerPercepton.predict"]], "predict() (dipy.nn.tf.model.singlelayerperceptron method)": [[174, "dipy.nn.tf.model.SingleLayerPerceptron.predict"]], "predict() (dipy.nn.tf.synb0.synb0 method)": [[174, "dipy.nn.tf.synb0.Synb0.predict"]], "predict() (dipy.nn.torch.deepn4.deepn4 method)": [[174, "dipy.nn.torch.deepn4.DeepN4.predict"]], "predict() (dipy.nn.torch.evac.evacplus method)": [[174, "dipy.nn.torch.evac.EVACPlus.predict"]], "predict() (dipy.nn.torch.histo_resdnn.historesdnn method)": [[174, "dipy.nn.torch.histo_resdnn.HistoResDNN.predict"]], "prepare_img() (in module dipy.nn.tf.evac)": [[174, "dipy.nn.tf.evac.prepare_img"]], "prepare_img() (in module dipy.nn.torch.evac)": [[174, "dipy.nn.torch.evac.prepare_img"]], "recover_img() (in module dipy.nn.utils)": [[174, "dipy.nn.utils.recover_img"]], "save_weights() (dipy.nn.tf.cnn_1d_denoising.cnn1ddenoiser method)": [[174, "dipy.nn.tf.cnn_1d_denoising.Cnn1DDenoiser.save_weights"]], "summary() (dipy.nn.tf.cnn_1d_denoising.cnn1ddenoiser method)": [[174, "dipy.nn.tf.cnn_1d_denoising.Cnn1DDenoiser.summary"]], "summary() (dipy.nn.tf.model.multiplelayerpercepton method)": [[174, "dipy.nn.tf.model.MultipleLayerPercepton.summary"]], "summary() (dipy.nn.tf.model.singlelayerperceptron method)": [[174, "dipy.nn.tf.model.SingleLayerPerceptron.summary"]], "train_test_split() (dipy.nn.tf.cnn_1d_denoising.cnn1ddenoiser method)": [[174, "dipy.nn.tf.cnn_1d_denoising.Cnn1DDenoiser.train_test_split"]], "transform_img() (in module dipy.nn.utils)": [[174, "dipy.nn.utils.transform_img"]], "unnormalize() (in module dipy.nn.utils)": [[174, "dipy.nn.utils.unnormalize"]], "axsymshresponse (class in dipy.reconst.csdeconv)": [[175, "dipy.reconst.csdeconv.AxSymShResponse"]], "binghammetrics (class in dipy.reconst.bingham)": [[175, "dipy.reconst.bingham.BinghamMetrics"]], "cache (class in dipy.reconst.cache)": [[175, "dipy.reconst.cache.Cache"]], "callablearray (class in dipy.reconst.multi_voxel)": [[175, "dipy.reconst.multi_voxel.CallableArray"]], "constrainedsdtmodel (class in dipy.reconst.csdeconv)": [[175, "dipy.reconst.csdeconv.ConstrainedSDTModel"]], "constrainedsphericaldeconvmodel (class in dipy.reconst.csdeconv)": [[175, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel"]], "correlationtensorfit (class in dipy.reconst.cti)": [[175, "dipy.reconst.cti.CorrelationTensorFit"]], "correlationtensormodel (class in dipy.reconst.cti)": [[175, "dipy.reconst.cti.CorrelationTensorModel"]], "csaodfmodel (class in dipy.reconst.shm)": [[175, "dipy.reconst.shm.CsaOdfModel"]], "d (dipy.reconst.ivim.ivimfit property)": [[175, "dipy.reconst.ivim.IvimFit.D"]], "d_star (dipy.reconst.ivim.ivimfit property)": [[175, "dipy.reconst.ivim.IvimFit.D_star"]], "diffusionkurtosisfit (class in dipy.reconst.dki)": [[175, "dipy.reconst.dki.DiffusionKurtosisFit"]], "diffusionkurtosismodel (class in dipy.reconst.dki)": [[175, "dipy.reconst.dki.DiffusionKurtosisModel"]], "diffusionspectrumdeconvfit (class in dipy.reconst.dsi)": [[175, "dipy.reconst.dsi.DiffusionSpectrumDeconvFit"]], "diffusionspectrumdeconvmodel (class in dipy.reconst.dsi)": [[175, "dipy.reconst.dsi.DiffusionSpectrumDeconvModel"]], "diffusionspectrumfit (class in dipy.reconst.dsi)": [[175, "dipy.reconst.dsi.DiffusionSpectrumFit"]], "diffusionspectrummodel (class in dipy.reconst.dsi)": [[175, "dipy.reconst.dsi.DiffusionSpectrumModel"]], "exponentialisotropicfit (class in dipy.reconst.sfm)": [[175, "dipy.reconst.sfm.ExponentialIsotropicFit"]], "exponentialisotropicmodel (class in dipy.reconst.sfm)": [[175, "dipy.reconst.sfm.ExponentialIsotropicModel"]], "forecastfit (class in dipy.reconst.forecast)": [[175, "dipy.reconst.forecast.ForecastFit"]], "forecastmodel (class in dipy.reconst.forecast)": [[175, "dipy.reconst.forecast.ForecastModel"]], "freewatertensorfit (class in dipy.reconst.fwdti)": [[175, "dipy.reconst.fwdti.FreeWaterTensorFit"]], "freewatertensormodel (class in dipy.reconst.fwdti)": [[175, "dipy.reconst.fwdti.FreeWaterTensorModel"]], "gcv_cost_function() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.GCV_cost_function"]], "generalizedqsamplingfit (class in dipy.reconst.gqi)": [[175, "dipy.reconst.gqi.GeneralizedQSamplingFit"]], "generalizedqsamplingmodel (class in dipy.reconst.gqi)": [[175, "dipy.reconst.gqi.GeneralizedQSamplingModel"]], "h() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.H"]], "isotropicfit (class in dipy.reconst.sfm)": [[175, "dipy.reconst.sfm.IsotropicFit"]], "isotropicmodel (class in dipy.reconst.sfm)": [[175, "dipy.reconst.sfm.IsotropicModel"]], "ivimfit (class in dipy.reconst.ivim)": [[175, "dipy.reconst.ivim.IvimFit"]], "ivimmodeltrr (class in dipy.reconst.ivim)": [[175, "dipy.reconst.ivim.IvimModelTRR"]], "ivimmodelvp (class in dipy.reconst.ivim)": [[175, "dipy.reconst.ivim.IvimModelVP"]], "k_aniso (dipy.reconst.cti.correlationtensorfit property)": [[175, "dipy.reconst.cti.CorrelationTensorFit.K_aniso"]], "k_iso (dipy.reconst.cti.correlationtensorfit property)": [[175, "dipy.reconst.cti.CorrelationTensorFit.K_iso"]], "k_micro (dipy.reconst.cti.correlationtensorfit property)": [[175, "dipy.reconst.cti.CorrelationTensorFit.K_micro"]], "k_total() (dipy.reconst.cti.correlationtensorfit method)": [[175, "dipy.reconst.cti.CorrelationTensorFit.K_total"]], "kurtosismicrostructuralfit (class in dipy.reconst.dki_micro)": [[175, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit"]], "kurtosismicrostructuremodel (class in dipy.reconst.dki_micro)": [[175, "dipy.reconst.dki_micro.KurtosisMicrostructureModel"]], "lr_deconv() (in module dipy.reconst.dsi)": [[175, "dipy.reconst.dsi.LR_deconv"]], "msdeconvfit (class in dipy.reconst.mcsd)": [[175, "dipy.reconst.mcsd.MSDeconvFit"]], "mapmrifit (class in dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.MapmriFit"]], "mapmrimodel (class in dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.MapmriModel"]], "meandiffusionkurtosisfit (class in dipy.reconst.msdki)": [[175, "dipy.reconst.msdki.MeanDiffusionKurtosisFit"]], "meandiffusionkurtosismodel (class in dipy.reconst.msdki)": [[175, "dipy.reconst.msdki.MeanDiffusionKurtosisModel"]], "multishelldeconvmodel (class in dipy.reconst.mcsd)": [[175, "dipy.reconst.mcsd.MultiShellDeconvModel"]], "multishellresponse (class in dipy.reconst.mcsd)": [[175, "dipy.reconst.mcsd.MultiShellResponse"]], "multivoxelfit (class in dipy.reconst.multi_voxel)": [[175, "dipy.reconst.multi_voxel.MultiVoxelFit"]], "odffit (class in dipy.reconst.odf)": [[175, "dipy.reconst.odf.OdfFit"]], "odfmodel (class in dipy.reconst.odf)": [[175, "dipy.reconst.odf.OdfModel"]], "opdtmodel (class in dipy.reconst.shm)": [[175, "dipy.reconst.shm.OpdtModel"]], "qballbasemodel (class in dipy.reconst.shm)": [[175, "dipy.reconst.shm.QballBaseModel"]], "qballmodel (class in dipy.reconst.shm)": [[175, "dipy.reconst.shm.QballModel"]], "qpfitter (class in dipy.reconst.mcsd)": [[175, "dipy.reconst.mcsd.QpFitter"]], "qtdmrifit (class in dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.QtdmriFit"]], "qtdmrimodel (class in dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.QtdmriModel"]], "qtifit (class in dipy.reconst.qti)": [[175, "dipy.reconst.qti.QtiFit"]], "qtimodel (class in dipy.reconst.qti)": [[175, "dipy.reconst.qti.QtiModel"]], "reconstfit (class in dipy.reconst.base)": [[175, "dipy.reconst.base.ReconstFit"]], "reconstmodel (class in dipy.reconst.base)": [[175, "dipy.reconst.base.ReconstModel"]], "residualbootstrapwrapper (class in dipy.reconst.shm)": [[175, "dipy.reconst.shm.ResidualBootstrapWrapper"]], "rumbafit (class in dipy.reconst.rumba)": [[175, "dipy.reconst.rumba.RumbaFit"]], "rumbasdmodel (class in dipy.reconst.rumba)": [[175, "dipy.reconst.rumba.RumbaSDModel"]], "s0_hat (dipy.reconst.dti.tensorfit property)": [[175, "dipy.reconst.dti.TensorFit.S0_hat"]], "s0_hat (dipy.reconst.msdki.meandiffusionkurtosisfit property)": [[175, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.S0_hat"]], "s0_hat() (dipy.reconst.qti.qtifit method)": [[175, "dipy.reconst.qti.QtiFit.S0_hat"]], "s0_predicted (dipy.reconst.ivim.ivimfit property)": [[175, "dipy.reconst.ivim.IvimFit.S0_predicted"]], "shorefit (class in dipy.reconst.shore)": [[175, "dipy.reconst.shore.ShoreFit"]], "shoremodel (class in dipy.reconst.shore)": [[175, "dipy.reconst.shore.ShoreModel"]], "sparsefasciclefit (class in dipy.reconst.sfm)": [[175, "dipy.reconst.sfm.SparseFascicleFit"]], "sparsefasciclemodel (class in dipy.reconst.sfm)": [[175, "dipy.reconst.sfm.SparseFascicleModel"]], "sphharmfit (class in dipy.reconst.shm)": [[175, "dipy.reconst.shm.SphHarmFit"]], "sphharmmodel (class in dipy.reconst.shm)": [[175, "dipy.reconst.shm.SphHarmModel"]], "tensorfit (class in dipy.reconst.dti)": [[175, "dipy.reconst.dti.TensorFit"]], "tensormodel (class in dipy.reconst.dti)": [[175, "dipy.reconst.dti.TensorModel"]], "wcons() (in module dipy.reconst.dki)": [[175, "dipy.reconst.dki.Wcons"]], "wrotate() (in module dipy.reconst.dki)": [[175, "dipy.reconst.dki.Wrotate"]], "wrotate_element() (in module dipy.reconst.dki)": [[175, "dipy.reconst.dki.Wrotate_element"]], "ad() (dipy.reconst.dti.tensorfit method)": [[175, "dipy.reconst.dti.TensorFit.ad"]], "adc() (dipy.reconst.dti.tensorfit method)": [[175, "dipy.reconst.dti.TensorFit.adc"]], "ak() (dipy.reconst.dki.diffusionkurtosisfit method)": [[175, "dipy.reconst.dki.DiffusionKurtosisFit.ak"]], "akc() (dipy.reconst.dki.diffusionkurtosisfit method)": [[175, "dipy.reconst.dki.DiffusionKurtosisFit.akc"]], "all_shm_coeff (dipy.reconst.mcsd.msdeconvfit property)": [[175, "dipy.reconst.mcsd.MSDeconvFit.all_shm_coeff"]], "amplitude_lobe() (dipy.reconst.bingham.binghammetrics method)": [[175, "dipy.reconst.bingham.BinghamMetrics.amplitude_lobe"]], "angular_basis_eap_opt() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.angular_basis_EAP_opt"]], "angular_basis_opt() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.angular_basis_opt"]], "anisotropic_power() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.anisotropic_power"]], "apparent_diffusion_coef() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.apparent_diffusion_coef"]], "apparent_kurtosis_coef() (in module dipy.reconst.dki)": [[175, "dipy.reconst.dki.apparent_kurtosis_coef"]], "auto_response_msmt() (in module dipy.reconst.mcsd)": [[175, "dipy.reconst.mcsd.auto_response_msmt"]], "auto_response_ssst() (in module dipy.reconst.csdeconv)": [[175, "dipy.reconst.csdeconv.auto_response_ssst"]], "awf (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[175, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.awf"]], "awf_from_msk() (in module dipy.reconst.msdki)": [[175, "dipy.reconst.msdki.awf_from_msk"]], "axial_diffusivity() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.axial_diffusivity"]], "axial_kurtosis() (in module dipy.reconst.dki)": [[175, "dipy.reconst.dki.axial_kurtosis"]], "axonal_diffusivity (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[175, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.axonal_diffusivity"]], "axonal_water_fraction() (in module dipy.reconst.dki_micro)": [[175, "dipy.reconst.dki_micro.axonal_water_fraction"]], "b_mat() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.b_mat"]], "b_mat_isotropic() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.b_mat_isotropic"]], "basis() (dipy.reconst.csdeconv.axsymshresponse method)": [[175, "dipy.reconst.csdeconv.AxSymShResponse.basis"]], "bingham_fiber_density() (in module dipy.reconst.bingham)": [[175, "dipy.reconst.bingham.bingham_fiber_density"]], "bingham_fiber_spread() (in module dipy.reconst.bingham)": [[175, "dipy.reconst.bingham.bingham_fiber_spread"]], "bingham_to_sf() (in module dipy.reconst.bingham)": [[175, "dipy.reconst.bingham.bingham_to_sf"]], "binomialfloat() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.binomialfloat"]], "bootstrap_data_array() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.bootstrap_data_array"]], "bootstrap_data_voxel() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.bootstrap_data_voxel"]], "c_c() (dipy.reconst.qti.qtifit method)": [[175, "dipy.reconst.qti.QtiFit.c_c"]], "c_m() (dipy.reconst.qti.qtifit method)": [[175, "dipy.reconst.qti.QtiFit.c_m"]], "c_md() (dipy.reconst.qti.qtifit method)": [[175, "dipy.reconst.qti.QtiFit.c_md"]], "c_mu() (dipy.reconst.qti.qtifit method)": [[175, "dipy.reconst.qti.QtiFit.c_mu"]], "cache_clear() (dipy.reconst.cache.cache method)": [[175, "dipy.reconst.cache.Cache.cache_clear"]], "cache_get() (dipy.reconst.cache.cache method)": [[175, "dipy.reconst.cache.Cache.cache_get"]], "cache_set() (dipy.reconst.cache.cache method)": [[175, "dipy.reconst.cache.Cache.cache_set"]], "calculate_max_order() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.calculate_max_order"]], "carlson_rd() (in module dipy.reconst.dki)": [[175, "dipy.reconst.dki.carlson_rd"]], "carlson_rf() (in module dipy.reconst.dki)": [[175, "dipy.reconst.dki.carlson_rf"]], "cholesky_to_lower_triangular() (in module dipy.reconst.fwdti)": [[175, "dipy.reconst.fwdti.cholesky_to_lower_triangular"]], "cls_fit_dki() (in module dipy.reconst.dki)": [[175, "dipy.reconst.dki.cls_fit_dki"]], "coeff_of_determination() (in module dipy.reconst.cross_validation)": [[175, "dipy.reconst.cross_validation.coeff_of_determination"]], "color_fa() (dipy.reconst.dti.tensorfit method)": [[175, "dipy.reconst.dti.TensorFit.color_fa"]], "color_fa() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.color_fa"]], "combined_odf_iso() (dipy.reconst.rumba.rumbafit method)": [[175, "dipy.reconst.rumba.RumbaFit.combined_odf_iso"]], "convert_sh_descoteaux_tournier() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.convert_sh_descoteaux_tournier"]], "convert_sh_from_legacy() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.convert_sh_from_legacy"]], "convert_sh_to_full_basis() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.convert_sh_to_full_basis"]], "convert_sh_to_legacy() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.convert_sh_to_legacy"]], "convert_tensors() (in module dipy.reconst.utils)": [[175, "dipy.reconst.utils.convert_tensors"]], "create_qspace() (in module dipy.reconst.dsi)": [[175, "dipy.reconst.dsi.create_qspace"]], "create_qtable() (in module dipy.reconst.dsi)": [[175, "dipy.reconst.dsi.create_qtable"]], "create_rspace() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.create_rspace"]], "create_rspace() (in module dipy.reconst.shore)": [[175, "dipy.reconst.shore.create_rspace"]], "create_rt_space_grid() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.create_rt_space_grid"]], "csdeconv() (in module dipy.reconst.csdeconv)": [[175, "dipy.reconst.csdeconv.csdeconv"]], "ct (dipy.reconst.cti.correlationtensorfit property)": [[175, "dipy.reconst.cti.CorrelationTensorFit.ct"]], "cti_design_matrix() (in module dipy.reconst.utils)": [[175, "dipy.reconst.utils.cti_design_matrix"]], "cti_prediction() (in module dipy.reconst.cti)": [[175, "dipy.reconst.cti.cti_prediction"]], "cvx_fit() (dipy.reconst.ivim.ivimmodelvp method)": [[175, "dipy.reconst.ivim.IvimModelVP.cvx_fit"]], "cvxpy_1x21_to_6x6() (in module dipy.reconst.qti)": [[175, "dipy.reconst.qti.cvxpy_1x21_to_6x6"]], "cvxpy_1x6_to_3x3() (in module dipy.reconst.qti)": [[175, "dipy.reconst.qti.cvxpy_1x6_to_3x3"]], "d_sq() (dipy.reconst.qti.qtifit method)": [[175, "dipy.reconst.qti.QtiFit.d_sq"]], "decompose_tensor() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.decompose_tensor"]], "delta() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.delta"]], "design_matrix() (dipy.reconst.sfm.sparsefasciclemodel method)": [[175, "dipy.reconst.sfm.SparseFascicleModel.design_matrix"]], "design_matrix() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.design_matrix"]], "design_matrix() (in module dipy.reconst.msdki)": [[175, "dipy.reconst.msdki.design_matrix"]], "design_matrix() (in module dipy.reconst.qti)": [[175, "dipy.reconst.qti.design_matrix"]], "design_matrix_spatial() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.design_matrix_spatial"]], "determinant() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.determinant"]], "deviatoric() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.deviatoric"]], "diffusion_components() (in module dipy.reconst.dki_micro)": [[175, "dipy.reconst.dki_micro.diffusion_components"]], "dipy.reconst": [[175, "module-dipy.reconst"]], "dipy.reconst.base": [[175, "module-dipy.reconst.base"]], "dipy.reconst.bingham": [[175, "module-dipy.reconst.bingham"]], "dipy.reconst.cache": [[175, "module-dipy.reconst.cache"]], "dipy.reconst.cross_validation": [[175, "module-dipy.reconst.cross_validation"]], "dipy.reconst.csdeconv": [[175, "module-dipy.reconst.csdeconv"]], "dipy.reconst.cti": [[175, "module-dipy.reconst.cti"]], "dipy.reconst.dki": [[175, "module-dipy.reconst.dki"]], "dipy.reconst.dki_micro": [[175, "module-dipy.reconst.dki_micro"]], "dipy.reconst.dsi": [[175, "module-dipy.reconst.dsi"]], "dipy.reconst.dti": [[175, "module-dipy.reconst.dti"]], "dipy.reconst.forecast": [[175, "module-dipy.reconst.forecast"]], "dipy.reconst.fwdti": [[175, "module-dipy.reconst.fwdti"]], "dipy.reconst.gqi": [[175, "module-dipy.reconst.gqi"]], "dipy.reconst.ivim": [[175, "module-dipy.reconst.ivim"]], "dipy.reconst.mapmri": [[175, "module-dipy.reconst.mapmri"]], "dipy.reconst.mcsd": [[175, "module-dipy.reconst.mcsd"]], "dipy.reconst.msdki": [[175, "module-dipy.reconst.msdki"]], "dipy.reconst.multi_voxel": [[175, "module-dipy.reconst.multi_voxel"]], "dipy.reconst.odf": [[175, "module-dipy.reconst.odf"]], "dipy.reconst.qtdmri": [[175, "module-dipy.reconst.qtdmri"]], "dipy.reconst.qti": [[175, "module-dipy.reconst.qti"]], "dipy.reconst.rumba": [[175, "module-dipy.reconst.rumba"]], "dipy.reconst.sfm": [[175, "module-dipy.reconst.sfm"]], "dipy.reconst.shm": [[175, "module-dipy.reconst.shm"]], "dipy.reconst.shore": [[175, "module-dipy.reconst.shore"]], "dipy.reconst.utils": [[175, "module-dipy.reconst.utils"]], "dipy.reconst.weights_method": [[175, "module-dipy.reconst.weights_method"]], "directional_diffusion() (in module dipy.reconst.dki)": [[175, "dipy.reconst.dki.directional_diffusion"]], "directional_diffusion_variance() (in module dipy.reconst.dki)": [[175, "dipy.reconst.dki.directional_diffusion_variance"]], "directional_kurtosis() (in module dipy.reconst.dki)": [[175, "dipy.reconst.dki.directional_kurtosis"]], "directions (dipy.reconst.dti.tensorfit property)": [[175, "dipy.reconst.dti.TensorFit.directions"]], "dki_design_matrix() (in module dipy.reconst.utils)": [[175, "dipy.reconst.utils.dki_design_matrix"]], "dki_prediction() (in module dipy.reconst.dki)": [[175, "dipy.reconst.dki.dki_prediction"]], "dkimicro_prediction() (in module dipy.reconst.dki_micro)": [[175, "dipy.reconst.dki_micro.dkimicro_prediction"]], "dpar (dipy.reconst.forecast.forecastfit property)": [[175, "dipy.reconst.forecast.ForecastFit.dpar"]], "dperp (dipy.reconst.forecast.forecastfit property)": [[175, "dipy.reconst.forecast.ForecastFit.dperp"]], "dtd_covariance() (in module dipy.reconst.qti)": [[175, "dipy.reconst.qti.dtd_covariance"]], "eig_from_lo_tri() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.eig_from_lo_tri"]], "elastic_crossvalidation() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.elastic_crossvalidation"]], "equatorial_maximum() (in module dipy.reconst.gqi)": [[175, "dipy.reconst.gqi.equatorial_maximum"]], "equatorial_zone_vertices() (in module dipy.reconst.gqi)": [[175, "dipy.reconst.gqi.equatorial_zone_vertices"]], "estimate_f_d_star() (dipy.reconst.ivim.ivimmodeltrr method)": [[175, "dipy.reconst.ivim.IvimModelTRR.estimate_f_D_star"]], "estimate_linear_fit() (dipy.reconst.ivim.ivimmodeltrr method)": [[175, "dipy.reconst.ivim.IvimModelTRR.estimate_linear_fit"]], "estimate_response() (in module dipy.reconst.csdeconv)": [[175, "dipy.reconst.csdeconv.estimate_response"]], "evals (dipy.reconst.dti.tensorfit property)": [[175, "dipy.reconst.dti.TensorFit.evals"]], "evecs (dipy.reconst.dti.tensorfit property)": [[175, "dipy.reconst.dti.TensorFit.evecs"]], "f (dipy.reconst.fwdti.freewatertensorfit property)": [[175, "dipy.reconst.fwdti.FreeWaterTensorFit.f"]], "f_d_star_error() (in module dipy.reconst.ivim)": [[175, "dipy.reconst.ivim.f_D_star_error"]], "f_d_star_prediction() (in module dipy.reconst.ivim)": [[175, "dipy.reconst.ivim.f_D_star_prediction"]], "f_csf() (dipy.reconst.rumba.rumbafit method)": [[175, "dipy.reconst.rumba.RumbaFit.f_csf"]], "f_gm() (dipy.reconst.rumba.rumbafit method)": [[175, "dipy.reconst.rumba.RumbaFit.f_gm"]], "f_iso() (dipy.reconst.rumba.rumbafit method)": [[175, "dipy.reconst.rumba.RumbaFit.f_iso"]], "f_wm() (dipy.reconst.rumba.rumbafit method)": [[175, "dipy.reconst.rumba.RumbaFit.f_wm"]], "fa() (dipy.reconst.dti.tensorfit method)": [[175, "dipy.reconst.dti.TensorFit.fa"]], "fa() (dipy.reconst.qti.qtifit method)": [[175, "dipy.reconst.qti.QtiFit.fa"]], "fa_trace_to_lambdas() (in module dipy.reconst.csdeconv)": [[175, "dipy.reconst.csdeconv.fa_trace_to_lambdas"]], "fd_lobe() (dipy.reconst.bingham.binghammetrics method)": [[175, "dipy.reconst.bingham.BinghamMetrics.fd_lobe"]], "fd_voxel() (dipy.reconst.bingham.binghammetrics method)": [[175, "dipy.reconst.bingham.BinghamMetrics.fd_voxel"]], "find_signal_means() (in module dipy.reconst.forecast)": [[175, "dipy.reconst.forecast.find_signal_means"]], "fit() (dipy.reconst.base.reconstmodel method)": [[175, "dipy.reconst.base.ReconstModel.fit"]], "fit() (dipy.reconst.csdeconv.constrainedsdtmodel method)": [[175, "dipy.reconst.csdeconv.ConstrainedSDTModel.fit"]], "fit() (dipy.reconst.csdeconv.constrainedsphericaldeconvmodel method)": [[175, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.fit"]], "fit() (dipy.reconst.cti.correlationtensormodel method)": [[175, "dipy.reconst.cti.CorrelationTensorModel.fit"]], "fit() (dipy.reconst.dki.diffusionkurtosismodel method)": [[175, "dipy.reconst.dki.DiffusionKurtosisModel.fit"]], "fit() (dipy.reconst.dki_micro.kurtosismicrostructuremodel method)": [[175, "dipy.reconst.dki_micro.KurtosisMicrostructureModel.fit"]], "fit() (dipy.reconst.dsi.diffusionspectrumdeconvmodel method)": [[175, "dipy.reconst.dsi.DiffusionSpectrumDeconvModel.fit"]], "fit() (dipy.reconst.dsi.diffusionspectrummodel method)": [[175, "dipy.reconst.dsi.DiffusionSpectrumModel.fit"]], "fit() (dipy.reconst.dti.tensormodel method)": [[175, "dipy.reconst.dti.TensorModel.fit"]], "fit() (dipy.reconst.forecast.forecastmodel method)": [[175, "dipy.reconst.forecast.ForecastModel.fit"]], "fit() (dipy.reconst.fwdti.freewatertensormodel method)": [[175, "dipy.reconst.fwdti.FreeWaterTensorModel.fit"]], "fit() (dipy.reconst.gqi.generalizedqsamplingmodel method)": [[175, "dipy.reconst.gqi.GeneralizedQSamplingModel.fit"]], "fit() (dipy.reconst.ivim.ivimmodeltrr method)": [[175, "dipy.reconst.ivim.IvimModelTRR.fit"]], "fit() (dipy.reconst.ivim.ivimmodelvp method)": [[175, "dipy.reconst.ivim.IvimModelVP.fit"]], "fit() (dipy.reconst.mapmri.mapmrimodel method)": [[175, "dipy.reconst.mapmri.MapmriModel.fit"]], "fit() (dipy.reconst.mcsd.multishelldeconvmodel method)": [[175, "dipy.reconst.mcsd.MultiShellDeconvModel.fit"]], "fit() (dipy.reconst.msdki.meandiffusionkurtosismodel method)": [[175, "dipy.reconst.msdki.MeanDiffusionKurtosisModel.fit"]], "fit() (dipy.reconst.odf.odfmodel method)": [[175, "dipy.reconst.odf.OdfModel.fit"]], "fit() (dipy.reconst.qtdmri.qtdmrimodel method)": [[175, "dipy.reconst.qtdmri.QtdmriModel.fit"]], "fit() (dipy.reconst.qti.qtimodel method)": [[175, "dipy.reconst.qti.QtiModel.fit"]], "fit() (dipy.reconst.sfm.exponentialisotropicmodel method)": [[175, "dipy.reconst.sfm.ExponentialIsotropicModel.fit"]], "fit() (dipy.reconst.sfm.isotropicmodel method)": [[175, "dipy.reconst.sfm.IsotropicModel.fit"]], "fit() (dipy.reconst.sfm.sparsefasciclemodel method)": [[175, "dipy.reconst.sfm.SparseFascicleModel.fit"]], "fit() (dipy.reconst.shm.qballbasemodel method)": [[175, "dipy.reconst.shm.QballBaseModel.fit"]], "fit() (dipy.reconst.shore.shoremodel method)": [[175, "dipy.reconst.shore.ShoreModel.fit"]], "fitted_signal() (dipy.reconst.mapmri.mapmrifit method)": [[175, "dipy.reconst.mapmri.MapmriFit.fitted_signal"]], "fitted_signal() (dipy.reconst.qtdmri.qtdmrifit method)": [[175, "dipy.reconst.qtdmri.QtdmriFit.fitted_signal"]], "fitted_signal() (dipy.reconst.shore.shorefit method)": [[175, "dipy.reconst.shore.ShoreFit.fitted_signal"]], "forecast_error_func() (in module dipy.reconst.forecast)": [[175, "dipy.reconst.forecast.forecast_error_func"]], "forecast_matrix() (in module dipy.reconst.forecast)": [[175, "dipy.reconst.forecast.forecast_matrix"]], "forward_sdeconv_mat() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.forward_sdeconv_mat"]], "forward_sdt_deconv_mat() (in module dipy.reconst.csdeconv)": [[175, "dipy.reconst.csdeconv.forward_sdt_deconv_mat"]], "fractional_anisotropy() (dipy.reconst.forecast.forecastfit method)": [[175, "dipy.reconst.forecast.ForecastFit.fractional_anisotropy"]], "fractional_anisotropy() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.fractional_anisotropy"]], "from_21x1_to_6x6() (in module dipy.reconst.qti)": [[175, "dipy.reconst.qti.from_21x1_to_6x6"]], "from_3x3_to_6x1() (in module dipy.reconst.qti)": [[175, "dipy.reconst.qti.from_3x3_to_6x1"]], "from_6x1_to_3x3() (in module dipy.reconst.qti)": [[175, "dipy.reconst.qti.from_6x1_to_3x3"]], "from_6x6_to_21x1() (in module dipy.reconst.qti)": [[175, "dipy.reconst.qti.from_6x6_to_21x1"]], "from_lower_triangular() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.from_lower_triangular"]], "from_qte_to_cti() (in module dipy.reconst.cti)": [[175, "dipy.reconst.cti.from_qte_to_cti"]], "fs_lobe() (dipy.reconst.bingham.binghammetrics method)": [[175, "dipy.reconst.bingham.BinghamMetrics.fs_lobe"]], "fs_voxel() (dipy.reconst.bingham.binghammetrics method)": [[175, "dipy.reconst.bingham.BinghamMetrics.fs_voxel"]], "fwdti_prediction() (in module dipy.reconst.fwdti)": [[175, "dipy.reconst.fwdti.fwdti_prediction"]], "ga() (dipy.reconst.dti.tensorfit method)": [[175, "dipy.reconst.dti.TensorFit.ga"]], "gcv_cost_function() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.gcv_cost_function"]], "gen_psf() (in module dipy.reconst.dsi)": [[175, "dipy.reconst.dsi.gen_PSF"]], "gen_dirac() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.gen_dirac"]], "generalized_crossvalidation() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.generalized_crossvalidation"]], "generalized_crossvalidation() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.generalized_crossvalidation"]], "generalized_crossvalidation_array() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.generalized_crossvalidation_array"]], "generate_kernel() (in module dipy.reconst.rumba)": [[175, "dipy.reconst.rumba.generate_kernel"]], "geodesic_anisotropy() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.geodesic_anisotropy"]], "gfa() (dipy.reconst.shm.sphharmfit method)": [[175, "dipy.reconst.shm.SphHarmFit.gfa"]], "gfa() (in module dipy.reconst.odf)": [[175, "dipy.reconst.odf.gfa"]], "half_to_full_qspace() (in module dipy.reconst.dsi)": [[175, "dipy.reconst.dsi.half_to_full_qspace"]], "hanning_filter() (in module dipy.reconst.dsi)": [[175, "dipy.reconst.dsi.hanning_filter"]], "hat() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.hat"]], "hindered_ad (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[175, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_ad"]], "hindered_evals (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[175, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_evals"]], "hindered_rd (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[175, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_rd"]], "iso (dipy.reconst.mcsd.multishellresponse property)": [[175, "dipy.reconst.mcsd.MultiShellResponse.iso"]], "isotropic() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.isotropic"]], "isotropic_scale_factor() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.isotropic_scale_factor"]], "iter_fit_tensor() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.iter_fit_tensor"]], "iterative_fit() (dipy.reconst.dki.diffusionkurtosismodel method)": [[175, "dipy.reconst.dki.DiffusionKurtosisModel.iterative_fit"]], "iterative_fit_tensor() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.iterative_fit_tensor"]], "ivim_mix_cost_one() (dipy.reconst.ivim.ivimmodelvp method)": [[175, "dipy.reconst.ivim.IvimModelVP.ivim_mix_cost_one"]], "ivim_model_selector() (in module dipy.reconst.ivim)": [[175, "dipy.reconst.ivim.ivim_model_selector"]], "ivim_prediction() (in module dipy.reconst.ivim)": [[175, "dipy.reconst.ivim.ivim_prediction"]], "k2odi() (in module dipy.reconst.bingham)": [[175, "dipy.reconst.bingham.k2odi"]], "k_bulk() (dipy.reconst.qti.qtifit method)": [[175, "dipy.reconst.qti.QtiFit.k_bulk"]], "k_mu() (dipy.reconst.qti.qtifit method)": [[175, "dipy.reconst.qti.QtiFit.k_mu"]], "k_shear() (dipy.reconst.qti.qtifit method)": [[175, "dipy.reconst.qti.QtiFit.k_shear"]], "kappa1_lobe() (dipy.reconst.bingham.binghammetrics method)": [[175, "dipy.reconst.bingham.BinghamMetrics.kappa1_lobe"]], "kappa2_lobe() (dipy.reconst.bingham.binghammetrics method)": [[175, "dipy.reconst.bingham.BinghamMetrics.kappa2_lobe"]], "kappa_total_lobe() (dipy.reconst.bingham.binghammetrics method)": [[175, "dipy.reconst.bingham.BinghamMetrics.kappa_total_lobe"]], "kfa (dipy.reconst.dki.diffusionkurtosisfit property)": [[175, "dipy.reconst.dki.DiffusionKurtosisFit.kfa"]], "kfold_xval() (in module dipy.reconst.cross_validation)": [[175, "dipy.reconst.cross_validation.kfold_xval"]], "kmax() (dipy.reconst.dki.diffusionkurtosisfit method)": [[175, "dipy.reconst.dki.DiffusionKurtosisFit.kmax"]], "kt (dipy.reconst.dki.diffusionkurtosisfit property)": [[175, "dipy.reconst.dki.DiffusionKurtosisFit.kt"]], "kurtosis_fractional_anisotropy() (in module dipy.reconst.dki)": [[175, "dipy.reconst.dki.kurtosis_fractional_anisotropy"]], "kurtosis_maximum() (in module dipy.reconst.dki)": [[175, "dipy.reconst.dki.kurtosis_maximum"]], "l1_crossvalidation() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.l1_crossvalidation"]], "l_shore() (in module dipy.reconst.shore)": [[175, "dipy.reconst.shore.l_shore"]], "lazy_index() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.lazy_index"]], "lb_forecast() (in module dipy.reconst.forecast)": [[175, "dipy.reconst.forecast.lb_forecast"]], "lcr_matrix() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.lcr_matrix"]], "linearity() (dipy.reconst.dti.tensorfit method)": [[175, "dipy.reconst.dti.TensorFit.linearity"]], "linearity() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.linearity"]], "lower_triangular() (dipy.reconst.dti.tensorfit method)": [[175, "dipy.reconst.dti.TensorFit.lower_triangular"]], "lower_triangular() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.lower_triangular"]], "lower_triangular_to_cholesky() (in module dipy.reconst.fwdti)": [[175, "dipy.reconst.fwdti.lower_triangular_to_cholesky"]], "ls_fit_cti() (in module dipy.reconst.cti)": [[175, "dipy.reconst.cti.ls_fit_cti"]], "ls_fit_dki() (in module dipy.reconst.dki)": [[175, "dipy.reconst.dki.ls_fit_dki"]], "map_laplace_s() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.map_laplace_s"]], "map_laplace_t() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.map_laplace_t"]], "map_laplace_u() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.map_laplace_u"]], "mapmri_r (dipy.reconst.mapmri.mapmrifit property)": [[175, "dipy.reconst.mapmri.MapmriFit.mapmri_R"]], "mapmri_stu_reg_matrices() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.mapmri_STU_reg_matrices"]], "mapmri_coeff (dipy.reconst.mapmri.mapmrifit property)": [[175, "dipy.reconst.mapmri.MapmriFit.mapmri_coeff"]], "mapmri_index_matrix() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.mapmri_index_matrix"]], "mapmri_isotropic_k_mu_dependent() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.mapmri_isotropic_K_mu_dependent"]], "mapmri_isotropic_k_mu_independent() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.mapmri_isotropic_K_mu_independent"]], "mapmri_isotropic_m_mu_dependent() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.mapmri_isotropic_M_mu_dependent"]], "mapmri_isotropic_m_mu_independent() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.mapmri_isotropic_M_mu_independent"]], "mapmri_isotropic_index_matrix() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.mapmri_isotropic_index_matrix"]], "mapmri_isotropic_laplacian_reg_matrix() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.mapmri_isotropic_laplacian_reg_matrix"]], "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.mapmri_isotropic_laplacian_reg_matrix_from_index_matrix"]], "mapmri_isotropic_odf_matrix() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.mapmri_isotropic_odf_matrix"]], "mapmri_isotropic_odf_sh_matrix() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.mapmri_isotropic_odf_sh_matrix"]], "mapmri_isotropic_phi_matrix() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.mapmri_isotropic_phi_matrix"]], "mapmri_isotropic_psi_matrix() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.mapmri_isotropic_psi_matrix"]], "mapmri_isotropic_radial_pdf_basis() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.mapmri_isotropic_radial_pdf_basis"]], "mapmri_isotropic_radial_signal_basis() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.mapmri_isotropic_radial_signal_basis"]], "mapmri_laplacian_reg_matrix() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.mapmri_laplacian_reg_matrix"]], "mapmri_mu (dipy.reconst.mapmri.mapmrifit property)": [[175, "dipy.reconst.mapmri.MapmriFit.mapmri_mu"]], "mapmri_odf_matrix() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.mapmri_odf_matrix"]], "mapmri_phi_1d() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.mapmri_phi_1d"]], "mapmri_phi_matrix() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.mapmri_phi_matrix"]], "mapmri_psi_1d() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.mapmri_psi_1d"]], "mapmri_psi_matrix() (in module dipy.reconst.mapmri)": [[175, "dipy.reconst.mapmri.mapmri_psi_matrix"]], "mask_for_response_msmt() (in module dipy.reconst.mcsd)": [[175, "dipy.reconst.mcsd.mask_for_response_msmt"]], "mask_for_response_ssst() (in module dipy.reconst.csdeconv)": [[175, "dipy.reconst.csdeconv.mask_for_response_ssst"]], "max (dipy.reconst.shm.csaodfmodel attribute)": [[175, "dipy.reconst.shm.CsaOdfModel.max"]], "mbessel_ratio() (in module dipy.reconst.rumba)": [[175, "dipy.reconst.rumba.mbessel_ratio"]], "md() (dipy.reconst.dti.tensorfit method)": [[175, "dipy.reconst.dti.TensorFit.md"]], "md() (dipy.reconst.qti.qtifit method)": [[175, "dipy.reconst.qti.QtiFit.md"]], "mean_d_sq() (dipy.reconst.qti.qtifit method)": [[175, "dipy.reconst.qti.QtiFit.mean_d_sq"]], "mean_diffusivity() (dipy.reconst.forecast.forecastfit method)": [[175, "dipy.reconst.forecast.ForecastFit.mean_diffusivity"]], "mean_diffusivity() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.mean_diffusivity"]], "mean_kurtosis() (in module dipy.reconst.dki)": [[175, "dipy.reconst.dki.mean_kurtosis"]], "mean_kurtosis_tensor() (in module dipy.reconst.dki)": [[175, "dipy.reconst.dki.mean_kurtosis_tensor"]], "mean_signal_bvalue() (in module dipy.reconst.msdki)": [[175, "dipy.reconst.msdki.mean_signal_bvalue"]], "min (dipy.reconst.shm.csaodfmodel attribute)": [[175, "dipy.reconst.shm.CsaOdfModel.min"]], "minmax_normalize() (in module dipy.reconst.odf)": [[175, "dipy.reconst.odf.minmax_normalize"]], "mk() (dipy.reconst.dki.diffusionkurtosisfit method)": [[175, "dipy.reconst.dki.DiffusionKurtosisFit.mk"]], "mk() (dipy.reconst.qti.qtifit method)": [[175, "dipy.reconst.qti.QtiFit.mk"]], "mkt() (dipy.reconst.dki.diffusionkurtosisfit method)": [[175, "dipy.reconst.dki.DiffusionKurtosisFit.mkt"]], "mode() (dipy.reconst.dti.tensorfit method)": [[175, "dipy.reconst.dti.TensorFit.mode"]], "mode() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.mode"]], "msd() (dipy.reconst.mapmri.mapmrifit method)": [[175, "dipy.reconst.mapmri.MapmriFit.msd"]], "msd() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[175, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.msd"]], "msd() (dipy.reconst.qtdmri.qtdmrifit method)": [[175, "dipy.reconst.qtdmri.QtdmriFit.msd"]], "msd() (dipy.reconst.shore.shorefit method)": [[175, "dipy.reconst.shore.ShoreFit.msd"]], "msd_discrete() (dipy.reconst.dsi.diffusionspectrumfit method)": [[175, "dipy.reconst.dsi.DiffusionSpectrumFit.msd_discrete"]], "msdki_prediction() (in module dipy.reconst.msdki)": [[175, "dipy.reconst.msdki.msdki_prediction"]], "msk() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[175, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.msk"]], "msk_from_awf() (in module dipy.reconst.msdki)": [[175, "dipy.reconst.msdki.msk_from_awf"]], "multi_fit() (dipy.reconst.dki.diffusionkurtosismodel method)": [[175, "dipy.reconst.dki.DiffusionKurtosisModel.multi_fit"]], "multi_gaussian_k_from_c() (in module dipy.reconst.cti)": [[175, "dipy.reconst.cti.multi_gaussian_k_from_c"]], "multi_shell_fiber_response() (in module dipy.reconst.mcsd)": [[175, "dipy.reconst.mcsd.multi_shell_fiber_response"]], "multi_tissue_basis() (in module dipy.reconst.mcsd)": [[175, "dipy.reconst.mcsd.multi_tissue_basis"]], "multi_voxel_fit() (in module dipy.reconst.multi_voxel)": [[175, "dipy.reconst.multi_voxel.multi_voxel_fit"]], "n_shore() (in module dipy.reconst.shore)": [[175, "dipy.reconst.shore.n_shore"]], "ng() (dipy.reconst.mapmri.mapmrifit method)": [[175, "dipy.reconst.mapmri.MapmriFit.ng"]], "ng_parallel() (dipy.reconst.mapmri.mapmrifit method)": [[175, "dipy.reconst.mapmri.MapmriFit.ng_parallel"]], "ng_perpendicular() (dipy.reconst.mapmri.mapmrifit method)": [[175, "dipy.reconst.mapmri.MapmriFit.ng_perpendicular"]], "nlls_cost() (dipy.reconst.ivim.ivimmodelvp method)": [[175, "dipy.reconst.ivim.IvimModelVP.nlls_cost"]], "nlls_fit_tensor() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.nlls_fit_tensor"]], "nls_fit_tensor() (in module dipy.reconst.fwdti)": [[175, "dipy.reconst.fwdti.nls_fit_tensor"]], "nls_iter() (in module dipy.reconst.fwdti)": [[175, "dipy.reconst.fwdti.nls_iter"]], "norm() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.norm"]], "norm_of_laplacian_signal() (dipy.reconst.mapmri.mapmrifit method)": [[175, "dipy.reconst.mapmri.MapmriFit.norm_of_laplacian_signal"]], "norm_of_laplacian_signal() (dipy.reconst.qtdmri.qtdmrifit method)": [[175, "dipy.reconst.qtdmri.QtdmriFit.norm_of_laplacian_signal"]], "normalize_data() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.normalize_data"]], "normalize_qa() (in module dipy.reconst.gqi)": [[175, "dipy.reconst.gqi.normalize_qa"]], "npa() (in module dipy.reconst.gqi)": [[175, "dipy.reconst.gqi.npa"]], "odf() (dipy.reconst.bingham.binghammetrics method)": [[175, "dipy.reconst.bingham.BinghamMetrics.odf"]], "odf() (dipy.reconst.dsi.diffusionspectrumfit method)": [[175, "dipy.reconst.dsi.DiffusionSpectrumFit.odf"]], "odf() (dipy.reconst.dti.tensorfit method)": [[175, "dipy.reconst.dti.TensorFit.odf"]], "odf() (dipy.reconst.forecast.forecastfit method)": [[175, "dipy.reconst.forecast.ForecastFit.odf"]], "odf() (dipy.reconst.gqi.generalizedqsamplingfit method)": [[175, "dipy.reconst.gqi.GeneralizedQSamplingFit.odf"]], "odf() (dipy.reconst.mapmri.mapmrifit method)": [[175, "dipy.reconst.mapmri.MapmriFit.odf"]], "odf() (dipy.reconst.odf.odffit method)": [[175, "dipy.reconst.odf.OdfFit.odf"]], "odf() (dipy.reconst.qtdmri.qtdmrifit method)": [[175, "dipy.reconst.qtdmri.QtdmriFit.odf"]], "odf() (dipy.reconst.rumba.rumbafit method)": [[175, "dipy.reconst.rumba.RumbaFit.odf"]], "odf() (dipy.reconst.sfm.sparsefasciclefit method)": [[175, "dipy.reconst.sfm.SparseFascicleFit.odf"]], "odf() (dipy.reconst.shm.sphharmfit method)": [[175, "dipy.reconst.shm.SphHarmFit.odf"]], "odf() (dipy.reconst.shore.shorefit method)": [[175, "dipy.reconst.shore.ShoreFit.odf"]], "odf_deconv() (in module dipy.reconst.csdeconv)": [[175, "dipy.reconst.csdeconv.odf_deconv"]], "odf_sh() (dipy.reconst.mapmri.mapmrifit method)": [[175, "dipy.reconst.mapmri.MapmriFit.odf_sh"]], "odf_sh() (dipy.reconst.qtdmri.qtdmrifit method)": [[175, "dipy.reconst.qtdmri.QtdmriFit.odf_sh"]], "odf_sh() (dipy.reconst.shore.shorefit method)": [[175, "dipy.reconst.shore.ShoreFit.odf_sh"]], "odf_sh_to_sharp() (in module dipy.reconst.csdeconv)": [[175, "dipy.reconst.csdeconv.odf_sh_to_sharp"]], "odf_sum() (in module dipy.reconst.gqi)": [[175, "dipy.reconst.gqi.odf_sum"]], "odi1_lobe() (dipy.reconst.bingham.binghammetrics method)": [[175, "dipy.reconst.bingham.BinghamMetrics.odi1_lobe"]], "odi1_voxel() (dipy.reconst.bingham.binghammetrics method)": [[175, "dipy.reconst.bingham.BinghamMetrics.odi1_voxel"]], "odi2_lobe() (dipy.reconst.bingham.binghammetrics method)": [[175, "dipy.reconst.bingham.BinghamMetrics.odi2_lobe"]], "odi2_voxel() (dipy.reconst.bingham.binghammetrics method)": [[175, "dipy.reconst.bingham.BinghamMetrics.odi2_voxel"]], "odi2k() (in module dipy.reconst.bingham)": [[175, "dipy.reconst.bingham.odi2k"]], "odi_total_lobe() (dipy.reconst.bingham.binghammetrics method)": [[175, "dipy.reconst.bingham.BinghamMetrics.odi_total_lobe"]], "odi_total_voxel() (dipy.reconst.bingham.binghammetrics method)": [[175, "dipy.reconst.bingham.BinghamMetrics.odi_total_voxel"]], "ols_fit_tensor() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.ols_fit_tensor"]], "on_sphere() (dipy.reconst.csdeconv.axsymshresponse method)": [[175, "dipy.reconst.csdeconv.AxSymShResponse.on_sphere"]], "order_from_ncoef() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.order_from_ncoef"]], "params_to_cti_params() (in module dipy.reconst.cti)": [[175, "dipy.reconst.cti.params_to_cti_params"]], "params_to_dki_params() (in module dipy.reconst.dki)": [[175, "dipy.reconst.dki.params_to_dki_params"]], "part1_reg_matrix_tau() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.part1_reg_matrix_tau"]], "part23_iso_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.part23_iso_reg_matrix_q"]], "part23_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.part23_reg_matrix_q"]], "part23_reg_matrix_tau() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.part23_reg_matrix_tau"]], "part4_iso_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.part4_iso_reg_matrix_q"]], "part4_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.part4_reg_matrix_q"]], "part4_reg_matrix_tau() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.part4_reg_matrix_tau"]], "patch_maximum() (in module dipy.reconst.gqi)": [[175, "dipy.reconst.gqi.patch_maximum"]], "patch_sum() (in module dipy.reconst.gqi)": [[175, "dipy.reconst.gqi.patch_sum"]], "patch_vertices() (in module dipy.reconst.gqi)": [[175, "dipy.reconst.gqi.patch_vertices"]], "pdf() (dipy.reconst.dsi.diffusionspectrumdeconvfit method)": [[175, "dipy.reconst.dsi.DiffusionSpectrumDeconvFit.pdf"]], "pdf() (dipy.reconst.dsi.diffusionspectrumfit method)": [[175, "dipy.reconst.dsi.DiffusionSpectrumFit.pdf"]], "pdf() (dipy.reconst.mapmri.mapmrifit method)": [[175, "dipy.reconst.mapmri.MapmriFit.pdf"]], "pdf() (dipy.reconst.qtdmri.qtdmrifit method)": [[175, "dipy.reconst.qtdmri.QtdmriFit.pdf"]], "pdf() (dipy.reconst.shore.shorefit method)": [[175, "dipy.reconst.shore.ShoreFit.pdf"]], "pdf_grid() (dipy.reconst.shore.shorefit method)": [[175, "dipy.reconst.shore.ShoreFit.pdf_grid"]], "pdf_interp_coords() (in module dipy.reconst.dsi)": [[175, "dipy.reconst.dsi.pdf_interp_coords"]], "pdf_odf() (in module dipy.reconst.dsi)": [[175, "dipy.reconst.dsi.pdf_odf"]], "perfusion_fraction (dipy.reconst.ivim.ivimfit property)": [[175, "dipy.reconst.ivim.IvimFit.perfusion_fraction"]], "phi() (dipy.reconst.ivim.ivimmodelvp method)": [[175, "dipy.reconst.ivim.IvimModelVP.phi"]], "planarity() (dipy.reconst.dti.tensorfit method)": [[175, "dipy.reconst.dti.TensorFit.planarity"]], "planarity() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.planarity"]], "polar_zone_vertices() (in module dipy.reconst.gqi)": [[175, "dipy.reconst.gqi.polar_zone_vertices"]], "predict() (dipy.reconst.csdeconv.constrainedsphericaldeconvmodel method)": [[175, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.predict"]], "predict() (dipy.reconst.cti.correlationtensorfit method)": [[175, "dipy.reconst.cti.CorrelationTensorFit.predict"]], "predict() (dipy.reconst.cti.correlationtensormodel method)": [[175, "dipy.reconst.cti.CorrelationTensorModel.predict"]], "predict() (dipy.reconst.dki.diffusionkurtosisfit method)": [[175, "dipy.reconst.dki.DiffusionKurtosisFit.predict"]], "predict() (dipy.reconst.dki.diffusionkurtosismodel method)": [[175, "dipy.reconst.dki.DiffusionKurtosisModel.predict"]], "predict() (dipy.reconst.dki_micro.kurtosismicrostructuralfit method)": [[175, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.predict"]], "predict() (dipy.reconst.dki_micro.kurtosismicrostructuremodel method)": [[175, "dipy.reconst.dki_micro.KurtosisMicrostructureModel.predict"]], "predict() (dipy.reconst.dti.tensorfit method)": [[175, "dipy.reconst.dti.TensorFit.predict"]], "predict() (dipy.reconst.dti.tensormodel method)": [[175, "dipy.reconst.dti.TensorModel.predict"]], "predict() (dipy.reconst.forecast.forecastfit method)": [[175, "dipy.reconst.forecast.ForecastFit.predict"]], "predict() (dipy.reconst.fwdti.freewatertensorfit method)": [[175, "dipy.reconst.fwdti.FreeWaterTensorFit.predict"]], "predict() (dipy.reconst.fwdti.freewatertensormodel method)": [[175, "dipy.reconst.fwdti.FreeWaterTensorModel.predict"]], "predict() (dipy.reconst.ivim.ivimfit method)": [[175, "dipy.reconst.ivim.IvimFit.predict"]], "predict() (dipy.reconst.ivim.ivimmodeltrr method)": [[175, "dipy.reconst.ivim.IvimModelTRR.predict"]], "predict() (dipy.reconst.mapmri.mapmrifit method)": [[175, "dipy.reconst.mapmri.MapmriFit.predict"]], "predict() (dipy.reconst.mcsd.multishelldeconvmodel method)": [[175, "dipy.reconst.mcsd.MultiShellDeconvModel.predict"]], "predict() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[175, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.predict"]], "predict() (dipy.reconst.msdki.meandiffusionkurtosismodel method)": [[175, "dipy.reconst.msdki.MeanDiffusionKurtosisModel.predict"]], "predict() (dipy.reconst.multi_voxel.multivoxelfit method)": [[175, "dipy.reconst.multi_voxel.MultiVoxelFit.predict"]], "predict() (dipy.reconst.qtdmri.qtdmrifit method)": [[175, "dipy.reconst.qtdmri.QtdmriFit.predict"]], "predict() (dipy.reconst.qti.qtifit method)": [[175, "dipy.reconst.qti.QtiFit.predict"]], "predict() (dipy.reconst.qti.qtimodel method)": [[175, "dipy.reconst.qti.QtiModel.predict"]], "predict() (dipy.reconst.rumba.rumbafit method)": [[175, "dipy.reconst.rumba.RumbaFit.predict"]], "predict() (dipy.reconst.sfm.exponentialisotropicfit method)": [[175, "dipy.reconst.sfm.ExponentialIsotropicFit.predict"]], "predict() (dipy.reconst.sfm.isotropicfit method)": [[175, "dipy.reconst.sfm.IsotropicFit.predict"]], "predict() (dipy.reconst.sfm.sparsefasciclefit method)": [[175, "dipy.reconst.sfm.SparseFascicleFit.predict"]], "predict() (dipy.reconst.shm.sphharmfit method)": [[175, "dipy.reconst.shm.SphHarmFit.predict"]], "project_hemisph_bvecs() (in module dipy.reconst.dsi)": [[175, "dipy.reconst.dsi.project_hemisph_bvecs"]], "psi_l() (in module dipy.reconst.forecast)": [[175, "dipy.reconst.forecast.psi_l"]], "qiv() (dipy.reconst.mapmri.mapmrifit method)": [[175, "dipy.reconst.mapmri.MapmriFit.qiv"]], "qiv() (dipy.reconst.qtdmri.qtdmrifit method)": [[175, "dipy.reconst.qtdmri.QtdmriFit.qiv"]], "qtdmri_anisotropic_scaling() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.qtdmri_anisotropic_scaling"]], "qtdmri_eap_matrix() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.qtdmri_eap_matrix"]], "qtdmri_index_matrix() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.qtdmri_index_matrix"]], "qtdmri_isotropic_eap_matrix() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.qtdmri_isotropic_eap_matrix"]], "qtdmri_isotropic_index_matrix() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.qtdmri_isotropic_index_matrix"]], "qtdmri_isotropic_laplacian_reg_matrix() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.qtdmri_isotropic_laplacian_reg_matrix"]], "qtdmri_isotropic_scaling() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.qtdmri_isotropic_scaling"]], "qtdmri_isotropic_signal_matrix() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.qtdmri_isotropic_signal_matrix"]], "qtdmri_isotropic_to_mapmri_matrix() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.qtdmri_isotropic_to_mapmri_matrix"]], "qtdmri_laplacian_reg_matrix() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.qtdmri_laplacian_reg_matrix"]], "qtdmri_mapmri_isotropic_normalization() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.qtdmri_mapmri_isotropic_normalization"]], "qtdmri_mapmri_normalization() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.qtdmri_mapmri_normalization"]], "qtdmri_number_of_coefficients() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.qtdmri_number_of_coefficients"]], "qtdmri_signal_matrix() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.qtdmri_signal_matrix"]], "qtdmri_temporal_normalization() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.qtdmri_temporal_normalization"]], "qtdmri_to_mapmri_coef() (dipy.reconst.qtdmri.qtdmrifit method)": [[175, "dipy.reconst.qtdmri.QtdmriFit.qtdmri_to_mapmri_coef"]], "qtdmri_to_mapmri_matrix() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.qtdmri_to_mapmri_matrix"]], "qti_signal() (in module dipy.reconst.qti)": [[175, "dipy.reconst.qti.qti_signal"]], "quadratic_form (dipy.reconst.dti.tensorfit property)": [[175, "dipy.reconst.dti.TensorFit.quadratic_form"]], "quantize_evecs() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.quantize_evecs"]], "radial_basis_eap_opt() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.radial_basis_EAP_opt"]], "radial_basis_opt() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.radial_basis_opt"]], "radial_diffusivity() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.radial_diffusivity"]], "radial_kurtosis() (in module dipy.reconst.dki)": [[175, "dipy.reconst.dki.radial_kurtosis"]], "radial_tensor_kurtosis() (in module dipy.reconst.dki)": [[175, "dipy.reconst.dki.radial_tensor_kurtosis"]], "rd() (dipy.reconst.dti.tensorfit method)": [[175, "dipy.reconst.dti.TensorFit.rd"]], "real_sh_descoteaux() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.real_sh_descoteaux"]], "real_sh_descoteaux_from_index() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.real_sh_descoteaux_from_index"]], "real_sh_tournier() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.real_sh_tournier"]], "real_sh_tournier_from_index() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.real_sh_tournier_from_index"]], "real_sph_harm() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.real_sph_harm"]], "real_sym_sh_basis() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.real_sym_sh_basis"]], "real_sym_sh_mrtrix() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.real_sym_sh_mrtrix"]], "recursive_response() (in module dipy.reconst.csdeconv)": [[175, "dipy.reconst.csdeconv.recursive_response"]], "response_from_mask_msmt() (in module dipy.reconst.mcsd)": [[175, "dipy.reconst.mcsd.response_from_mask_msmt"]], "response_from_mask_ssst() (in module dipy.reconst.csdeconv)": [[175, "dipy.reconst.csdeconv.response_from_mask_ssst"]], "restore_fit_tensor() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.restore_fit_tensor"]], "restricted_evals (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[175, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.restricted_evals"]], "rho_matrix() (in module dipy.reconst.forecast)": [[175, "dipy.reconst.forecast.rho_matrix"]], "rk() (dipy.reconst.dki.diffusionkurtosisfit method)": [[175, "dipy.reconst.dki.DiffusionKurtosisFit.rk"]], "robust_fit_tensor_nlls() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.robust_fit_tensor_nlls"]], "robust_fit_tensor_wls() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.robust_fit_tensor_wls"]], "rtap() (dipy.reconst.mapmri.mapmrifit method)": [[175, "dipy.reconst.mapmri.MapmriFit.rtap"]], "rtap() (dipy.reconst.qtdmri.qtdmrifit method)": [[175, "dipy.reconst.qtdmri.QtdmriFit.rtap"]], "rtk() (dipy.reconst.dki.diffusionkurtosisfit method)": [[175, "dipy.reconst.dki.DiffusionKurtosisFit.rtk"]], "rtop() (dipy.reconst.mapmri.mapmrifit method)": [[175, "dipy.reconst.mapmri.MapmriFit.rtop"]], "rtop() (dipy.reconst.qtdmri.qtdmrifit method)": [[175, "dipy.reconst.qtdmri.QtdmriFit.rtop"]], "rtop_pdf() (dipy.reconst.dsi.diffusionspectrumfit method)": [[175, "dipy.reconst.dsi.DiffusionSpectrumFit.rtop_pdf"]], "rtop_pdf() (dipy.reconst.shore.shorefit method)": [[175, "dipy.reconst.shore.ShoreFit.rtop_pdf"]], "rtop_signal() (dipy.reconst.dsi.diffusionspectrumfit method)": [[175, "dipy.reconst.dsi.DiffusionSpectrumFit.rtop_signal"]], "rtop_signal() (dipy.reconst.shore.shorefit method)": [[175, "dipy.reconst.shore.ShoreFit.rtop_signal"]], "rtpp() (dipy.reconst.mapmri.mapmrifit method)": [[175, "dipy.reconst.mapmri.MapmriFit.rtpp"]], "rtpp() (dipy.reconst.qtdmri.qtdmrifit method)": [[175, "dipy.reconst.qtdmri.QtdmriFit.rtpp"]], "rumba_deconv() (in module dipy.reconst.rumba)": [[175, "dipy.reconst.rumba.rumba_deconv"]], "rumba_deconv_global() (in module dipy.reconst.rumba)": [[175, "dipy.reconst.rumba.rumba_deconv_global"]], "sampling_matrix() (dipy.reconst.shm.sphharmmodel method)": [[175, "dipy.reconst.shm.SphHarmModel.sampling_matrix"]], "sf_to_bingham() (in module dipy.reconst.bingham)": [[175, "dipy.reconst.bingham.sf_to_bingham"]], "sf_to_sh() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.sf_to_sh"]], "sfm_design_matrix() (in module dipy.reconst.sfm)": [[175, "dipy.reconst.sfm.sfm_design_matrix"]], "sh_coeff (dipy.reconst.forecast.forecastfit property)": [[175, "dipy.reconst.forecast.ForecastFit.sh_coeff"]], "sh_to_bingham() (in module dipy.reconst.bingham)": [[175, "dipy.reconst.bingham.sh_to_bingham"]], "sh_to_rh() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.sh_to_rh"]], "sh_to_sf() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.sh_to_sf"]], "sh_to_sf_matrix() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.sh_to_sf_matrix"]], "shape (dipy.reconst.dti.tensorfit property)": [[175, "dipy.reconst.dti.TensorFit.shape"]], "shape (dipy.reconst.ivim.ivimfit property)": [[175, "dipy.reconst.ivim.IvimFit.shape"]], "shape (dipy.reconst.multi_voxel.multivoxelfit property)": [[175, "dipy.reconst.multi_voxel.MultiVoxelFit.shape"]], "shape (dipy.reconst.shm.sphharmfit property)": [[175, "dipy.reconst.shm.SphHarmFit.shape"]], "shm_coeff (dipy.reconst.mcsd.msdeconvfit property)": [[175, "dipy.reconst.mcsd.MSDeconvFit.shm_coeff"]], "shm_coeff (dipy.reconst.shm.sphharmfit property)": [[175, "dipy.reconst.shm.SphHarmFit.shm_coeff"]], "shore_coeff (dipy.reconst.shore.shorefit property)": [[175, "dipy.reconst.shore.ShoreFit.shore_coeff"]], "shore_indices() (in module dipy.reconst.shore)": [[175, "dipy.reconst.shore.shore_indices"]], "shore_matrix() (in module dipy.reconst.shore)": [[175, "dipy.reconst.shore.shore_matrix"]], "shore_matrix_odf() (in module dipy.reconst.shore)": [[175, "dipy.reconst.shore.shore_matrix_odf"]], "shore_matrix_pdf() (in module dipy.reconst.shore)": [[175, "dipy.reconst.shore.shore_matrix_pdf"]], "shore_order() (in module dipy.reconst.shore)": [[175, "dipy.reconst.shore.shore_order"]], "simple_cutoff() (in module dipy.reconst.weights_method)": [[175, "dipy.reconst.weights_method.simple_cutoff"]], "smooth_pinv() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.smooth_pinv"]], "smt2di() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[175, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.smt2di"]], "smt2f() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[175, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.smt2f"]], "smt2ufa() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[175, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.smt2uFA"]], "solve_qp() (in module dipy.reconst.mcsd)": [[175, "dipy.reconst.mcsd.solve_qp"]], "sparsity_abs() (dipy.reconst.qtdmri.qtdmrifit method)": [[175, "dipy.reconst.qtdmri.QtdmriFit.sparsity_abs"]], "sparsity_density() (dipy.reconst.qtdmri.qtdmrifit method)": [[175, "dipy.reconst.qtdmri.QtdmriFit.sparsity_density"]], "sph_harm_ind_list() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.sph_harm_ind_list"]], "spherical_harmonics() (in module dipy.reconst.shm)": [[175, "dipy.reconst.shm.spherical_harmonics"]], "sphericity() (dipy.reconst.dti.tensorfit method)": [[175, "dipy.reconst.dti.TensorFit.sphericity"]], "sphericity() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.sphericity"]], "split_cti_params() (in module dipy.reconst.cti)": [[175, "dipy.reconst.cti.split_cti_params"]], "split_dki_param() (in module dipy.reconst.dki)": [[175, "dipy.reconst.dki.split_dki_param"]], "squared_radial_component() (in module dipy.reconst.gqi)": [[175, "dipy.reconst.gqi.squared_radial_component"]], "stoc_search_cost() (dipy.reconst.ivim.ivimmodelvp method)": [[175, "dipy.reconst.ivim.IvimModelVP.stoc_search_cost"]], "temporal_basis() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.temporal_basis"]], "tensor_prediction() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.tensor_prediction"]], "threshold_propagator() (in module dipy.reconst.dsi)": [[175, "dipy.reconst.dsi.threshold_propagator"]], "tortuosity (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[175, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.tortuosity"]], "tortuosity() (in module dipy.reconst.dki_micro)": [[175, "dipy.reconst.dki_micro.tortuosity"]], "trace() (dipy.reconst.dti.tensorfit method)": [[175, "dipy.reconst.dti.TensorFit.trace"]], "trace() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.trace"]], "triple_odf_maxima() (in module dipy.reconst.gqi)": [[175, "dipy.reconst.gqi.triple_odf_maxima"]], "two_eyes_cutoff() (in module dipy.reconst.weights_method)": [[175, "dipy.reconst.weights_method.two_eyes_cutoff"]], "ufa() (dipy.reconst.qti.qtifit method)": [[175, "dipy.reconst.qti.QtiFit.ufa"]], "upper_hemi_map() (in module dipy.reconst.gqi)": [[175, "dipy.reconst.gqi.upper_hemi_map"]], "v_iso() (dipy.reconst.qti.qtifit method)": [[175, "dipy.reconst.qti.QtiFit.v_iso"]], "v_md() (dipy.reconst.qti.qtifit method)": [[175, "dipy.reconst.qti.QtiFit.v_md"]], "v_shear() (dipy.reconst.qti.qtifit method)": [[175, "dipy.reconst.qti.QtiFit.v_shear"]], "visualise_gradient_table_g_delta_rainbow() (in module dipy.reconst.qtdmri)": [[175, "dipy.reconst.qtdmri.visualise_gradient_table_G_Delta_rainbow"]], "volume_fractions (dipy.reconst.mcsd.msdeconvfit property)": [[175, "dipy.reconst.mcsd.MSDeconvFit.volume_fractions"]], "weighted_voxel_metric() (in module dipy.reconst.bingham)": [[175, "dipy.reconst.bingham.weighted_voxel_metric"]], "weights_method_nlls_m_est() (in module dipy.reconst.weights_method)": [[175, "dipy.reconst.weights_method.weights_method_nlls_m_est"]], "weights_method_wls_m_est() (in module dipy.reconst.weights_method)": [[175, "dipy.reconst.weights_method.weights_method_wls_m_est"]], "wls_fit_msdki() (in module dipy.reconst.msdki)": [[175, "dipy.reconst.msdki.wls_fit_msdki"]], "wls_fit_tensor() (in module dipy.reconst.dti)": [[175, "dipy.reconst.dti.wls_fit_tensor"]], "wls_fit_tensor() (in module dipy.reconst.fwdti)": [[175, "dipy.reconst.fwdti.wls_fit_tensor"]], "wls_iter() (in module dipy.reconst.fwdti)": [[175, "dipy.reconst.fwdti.wls_iter"]], "x_and_f_to_x_f() (dipy.reconst.ivim.ivimmodelvp method)": [[175, "dipy.reconst.ivim.IvimModelVP.x_and_f_to_x_f"]], "x_f_to_x_and_f() (dipy.reconst.ivim.ivimmodelvp method)": [[175, "dipy.reconst.ivim.IvimModelVP.x_f_to_x_and_f"]], "cluster (class in dipy.segment.clustering)": [[176, "dipy.segment.clustering.Cluster"]], "clustercentroid (class in dipy.segment.clustering)": [[176, "dipy.segment.clustering.ClusterCentroid"]], "clustermap (class in dipy.segment.clustering)": [[176, "dipy.segment.clustering.ClusterMap"]], "clustermapcentroid (class in dipy.segment.clustering)": [[176, "dipy.segment.clustering.ClusterMapCentroid"]], "clustering (class in dipy.segment.clustering)": [[176, "dipy.segment.clustering.Clustering"]], "faststreamlinesearch (class in dipy.segment.fss)": [[176, "dipy.segment.fss.FastStreamlineSearch"]], "identity (class in dipy.segment.clustering)": [[176, "dipy.segment.clustering.Identity"]], "quickbundles (class in dipy.segment.clustering)": [[176, "dipy.segment.clustering.QuickBundles"]], "quickbundlesx (class in dipy.segment.clustering)": [[176, "dipy.segment.clustering.QuickBundlesX"]], "recobundles (class in dipy.segment.bundles)": [[176, "dipy.segment.bundles.RecoBundles"]], "tissueclassifierhmrf (class in dipy.segment.tissue)": [[176, "dipy.segment.tissue.TissueClassifierHMRF"]], "treecluster (class in dipy.segment.clustering)": [[176, "dipy.segment.clustering.TreeCluster"]], "treeclustermap (class in dipy.segment.clustering)": [[176, "dipy.segment.clustering.TreeClusterMap"]], "add() (dipy.segment.clustering.treecluster method)": [[176, "dipy.segment.clustering.TreeCluster.add"]], "add_cluster() (dipy.segment.clustering.clustermap method)": [[176, "dipy.segment.clustering.ClusterMap.add_cluster"]], "applymask() (in module dipy.segment.mask)": [[176, "dipy.segment.mask.applymask"]], "assign() (dipy.segment.clustering.cluster method)": [[176, "dipy.segment.clustering.Cluster.assign"]], "assign() (dipy.segment.clustering.clustercentroid method)": [[176, "dipy.segment.clustering.ClusterCentroid.assign"]], "ba_analysis() (in module dipy.segment.bundles)": [[176, "dipy.segment.bundles.ba_analysis"]], "bounding_box() (in module dipy.segment.mask)": [[176, "dipy.segment.mask.bounding_box"]], "bundle_adjacency() (in module dipy.segment.bundles)": [[176, "dipy.segment.bundles.bundle_adjacency"]], "bundle_shape_similarity() (in module dipy.segment.bundles)": [[176, "dipy.segment.bundles.bundle_shape_similarity"]], "centroids (dipy.segment.clustering.clustermapcentroid property)": [[176, "dipy.segment.clustering.ClusterMapCentroid.centroids"]], "check_range() (in module dipy.segment.bundles)": [[176, "dipy.segment.bundles.check_range"]], "classify() (dipy.segment.tissue.tissueclassifierhmrf method)": [[176, "dipy.segment.tissue.TissueClassifierHMRF.classify"]], "clean_cc_mask() (in module dipy.segment.mask)": [[176, "dipy.segment.mask.clean_cc_mask"]], "clear() (dipy.segment.clustering.clustermap method)": [[176, "dipy.segment.clustering.ClusterMap.clear"]], "cluster() (dipy.segment.clustering.clustering method)": [[176, "dipy.segment.clustering.Clustering.cluster"]], "cluster() (dipy.segment.clustering.quickbundles method)": [[176, "dipy.segment.clustering.QuickBundles.cluster"]], "cluster() (dipy.segment.clustering.quickbundlesx method)": [[176, "dipy.segment.clustering.QuickBundlesX.cluster"]], "cluster_bundle() (in module dipy.segment.bundles)": [[176, "dipy.segment.bundles.cluster_bundle"]], "clusters (dipy.segment.clustering.clustermap property)": [[176, "dipy.segment.clustering.ClusterMap.clusters"]], "clusters_sizes() (dipy.segment.clustering.clustermap method)": [[176, "dipy.segment.clustering.ClusterMap.clusters_sizes"]], "compute_directional_average() (in module dipy.segment.tissue)": [[176, "dipy.segment.tissue.compute_directional_average"]], "crop() (in module dipy.segment.mask)": [[176, "dipy.segment.mask.crop"]], "dam_classifier() (in module dipy.segment.tissue)": [[176, "dipy.segment.tissue.dam_classifier"]], "dipy.segment": [[176, "module-dipy.segment"]], "dipy.segment.bundles": [[176, "module-dipy.segment.bundles"]], "dipy.segment.clustering": [[176, "module-dipy.segment.clustering"]], "dipy.segment.fss": [[176, "module-dipy.segment.fss"]], "dipy.segment.mask": [[176, "module-dipy.segment.mask"]], "dipy.segment.metric": [[176, "module-dipy.segment.metric"]], "dipy.segment.threshold": [[176, "module-dipy.segment.threshold"]], "dipy.segment.tissue": [[176, "module-dipy.segment.tissue"]], "dipy.segment.utils": [[176, "module-dipy.segment.utils"]], "evaluate_results() (dipy.segment.bundles.recobundles method)": [[176, "dipy.segment.bundles.RecoBundles.evaluate_results"]], "get_clusters() (dipy.segment.clustering.treeclustermap method)": [[176, "dipy.segment.clustering.TreeClusterMap.get_clusters"]], "get_large_clusters() (dipy.segment.clustering.clustermap method)": [[176, "dipy.segment.clustering.ClusterMap.get_large_clusters"]], "get_small_clusters() (dipy.segment.clustering.clustermap method)": [[176, "dipy.segment.clustering.ClusterMap.get_small_clusters"]], "is_leaf (dipy.segment.clustering.treecluster property)": [[176, "dipy.segment.clustering.TreeCluster.is_leaf"]], "iter_preorder() (dipy.segment.clustering.treeclustermap method)": [[176, "dipy.segment.clustering.TreeClusterMap.iter_preorder"]], "mdf() (in module dipy.segment.metric)": [[176, "dipy.segment.metric.mdf"]], "mean_euclidean_distance() (in module dipy.segment.metric)": [[176, "dipy.segment.metric.mean_euclidean_distance"]], "mean_manhattan_distance() (in module dipy.segment.metric)": [[176, "dipy.segment.metric.mean_manhattan_distance"]], "median_otsu() (in module dipy.segment.mask)": [[176, "dipy.segment.mask.median_otsu"]], "multi_median() (in module dipy.segment.mask)": [[176, "dipy.segment.mask.multi_median"]], "nearest_from_matrix_col() (in module dipy.segment.fss)": [[176, "dipy.segment.fss.nearest_from_matrix_col"]], "nearest_from_matrix_row() (in module dipy.segment.fss)": [[176, "dipy.segment.fss.nearest_from_matrix_row"]], "otsu() (in module dipy.segment.threshold)": [[176, "dipy.segment.threshold.otsu"]], "qbx_and_merge() (in module dipy.segment.clustering)": [[176, "dipy.segment.clustering.qbx_and_merge"]], "radius_search() (dipy.segment.fss.faststreamlinesearch method)": [[176, "dipy.segment.fss.FastStreamlineSearch.radius_search"]], "recognize() (dipy.segment.bundles.recobundles method)": [[176, "dipy.segment.bundles.RecoBundles.recognize"]], "refdata (dipy.segment.clustering.clustermap property)": [[176, "dipy.segment.clustering.ClusterMap.refdata"]], "refdata (dipy.segment.clustering.treeclustermap property)": [[176, "dipy.segment.clustering.TreeClusterMap.refdata"]], "refine() (dipy.segment.bundles.recobundles method)": [[176, "dipy.segment.bundles.RecoBundles.refine"]], "remove_cluster() (dipy.segment.clustering.clustermap method)": [[176, "dipy.segment.clustering.ClusterMap.remove_cluster"]], "remove_holes_and_islands() (in module dipy.segment.utils)": [[176, "dipy.segment.utils.remove_holes_and_islands"]], "return_indices() (dipy.segment.clustering.treecluster method)": [[176, "dipy.segment.clustering.TreeCluster.return_indices"]], "segment_from_cfa() (in module dipy.segment.mask)": [[176, "dipy.segment.mask.segment_from_cfa"]], "size() (dipy.segment.clustering.clustermap method)": [[176, "dipy.segment.clustering.ClusterMap.size"]], "traverse_postorder() (dipy.segment.clustering.treeclustermap method)": [[176, "dipy.segment.clustering.TreeClusterMap.traverse_postorder"]], "update() (dipy.segment.clustering.clustercentroid method)": [[176, "dipy.segment.clustering.ClusterCentroid.update"]], "upper_bound_by_percent() (in module dipy.segment.threshold)": [[176, "dipy.segment.threshold.upper_bound_by_percent"]], "upper_bound_by_rate() (in module dipy.segment.threshold)": [[176, "dipy.segment.threshold.upper_bound_by_rate"]], "add_noise() (in module dipy.sims.phantom)": [[177, "dipy.sims.phantom.add_noise"]], "add_noise() (in module dipy.sims.voxel)": [[177, "dipy.sims.voxel.add_noise"]], "all_tensor_evecs() (in module dipy.sims.voxel)": [[177, "dipy.sims.voxel.all_tensor_evecs"]], "callaghan_perpendicular() (in module dipy.sims.voxel)": [[177, "dipy.sims.voxel.callaghan_perpendicular"]], "cylinders_and_ball_soderman() (in module dipy.sims.voxel)": [[177, "dipy.sims.voxel.cylinders_and_ball_soderman"]], "diff2eigenvectors() (in module dipy.sims.phantom)": [[177, "dipy.sims.phantom.diff2eigenvectors"]], "dipy.sims": [[177, "module-dipy.sims"]], "dipy.sims.phantom": [[177, "module-dipy.sims.phantom"]], "dipy.sims.voxel": [[177, "module-dipy.sims.voxel"]], "dki_signal() (in module dipy.sims.voxel)": [[177, "dipy.sims.voxel.dki_signal"]], "gaussian_parallel() (in module dipy.sims.voxel)": [[177, "dipy.sims.voxel.gaussian_parallel"]], "kurtosis_element() (in module dipy.sims.voxel)": [[177, "dipy.sims.voxel.kurtosis_element"]], "multi_tensor() (in module dipy.sims.voxel)": [[177, "dipy.sims.voxel.multi_tensor"]], "multi_tensor_dki() (in module dipy.sims.voxel)": [[177, "dipy.sims.voxel.multi_tensor_dki"]], "multi_tensor_msd() (in module dipy.sims.voxel)": [[177, "dipy.sims.voxel.multi_tensor_msd"]], "multi_tensor_odf() (in module dipy.sims.voxel)": [[177, "dipy.sims.voxel.multi_tensor_odf"]], "multi_tensor_pdf() (in module dipy.sims.voxel)": [[177, "dipy.sims.voxel.multi_tensor_pdf"]], "multi_tensor_rtop() (in module dipy.sims.voxel)": [[177, "dipy.sims.voxel.multi_tensor_rtop"]], "orbital_phantom() (in module dipy.sims.phantom)": [[177, "dipy.sims.phantom.orbital_phantom"]], "single_tensor() (in module dipy.sims.voxel)": [[177, "dipy.sims.voxel.single_tensor"]], "single_tensor_msd() (in module dipy.sims.voxel)": [[177, "dipy.sims.voxel.single_tensor_msd"]], "single_tensor_odf() (in module dipy.sims.voxel)": [[177, "dipy.sims.voxel.single_tensor_odf"]], "single_tensor_pdf() (in module dipy.sims.voxel)": [[177, "dipy.sims.voxel.single_tensor_pdf"]], "single_tensor_rtop() (in module dipy.sims.voxel)": [[177, "dipy.sims.voxel.single_tensor_rtop"]], "sticks_and_ball() (in module dipy.sims.voxel)": [[177, "dipy.sims.voxel.sticks_and_ball"]], "afq_profile() (in module dipy.stats.analysis)": [[178, "dipy.stats.analysis.afq_profile"]], "anatomical_measures() (in module dipy.stats.analysis)": [[178, "dipy.stats.analysis.anatomical_measures"]], "assignment_map() (in module dipy.stats.analysis)": [[178, "dipy.stats.analysis.assignment_map"]], "count_sketch() (in module dipy.stats.sketching)": [[178, "dipy.stats.sketching.count_sketch"]], "dipy.stats": [[178, "module-dipy.stats"]], "dipy.stats.analysis": [[178, "module-dipy.stats.analysis"]], "dipy.stats.qc": [[178, "module-dipy.stats.qc"]], "dipy.stats.sketching": [[178, "module-dipy.stats.sketching"]], "find_qspace_neighbors() (in module dipy.stats.qc)": [[178, "dipy.stats.qc.find_qspace_neighbors"]], "gaussian_weights() (in module dipy.stats.analysis)": [[178, "dipy.stats.analysis.gaussian_weights"]], "neighboring_dwi_correlation() (in module dipy.stats.qc)": [[178, "dipy.stats.qc.neighboring_dwi_correlation"]], "peak_values() (in module dipy.stats.analysis)": [[178, "dipy.stats.analysis.peak_values"]], "fiberfit (class in dipy.tracking.life)": [[179, "dipy.tracking.life.FiberFit"]], "fibermodel (class in dipy.tracking.life)": [[179, "dipy.tracking.life.FiberModel"]], "lifesignalmaker (class in dipy.tracking.life)": [[179, "dipy.tracking.life.LifeSignalMaker"]], "localtracking (class in dipy.tracking.local_tracking)": [[179, "dipy.tracking.local_tracking.LocalTracking"]], "particlefilteringtracking (class in dipy.tracking.local_tracking)": [[179, "dipy.tracking.local_tracking.ParticleFilteringTracking"]], "arbitrarypoint() (in module dipy.tracking.metrics)": [[179, "dipy.tracking.metrics.arbitrarypoint"]], "bootstrap_tracking() (in module dipy.tracking.tracker)": [[179, "dipy.tracking.tracker.bootstrap_tracking"]], "bytes() (in module dipy.tracking.metrics)": [[179, "dipy.tracking.metrics.bytes"]], "calc_signal() (dipy.tracking.life.lifesignalmaker method)": [[179, "dipy.tracking.life.LifeSignalMaker.calc_signal"]], "center_of_mass() (in module dipy.tracking.metrics)": [[179, "dipy.tracking.metrics.center_of_mass"]], "center_streamlines() (in module dipy.tracking.streamline)": [[179, "dipy.tracking.streamline.center_streamlines"]], "closestpeak_tracking() (in module dipy.tracking.tracker)": [[179, "dipy.tracking.tracker.closestpeak_tracking"]], "cluster_confidence() (in module dipy.tracking.streamline)": [[179, "dipy.tracking.streamline.cluster_confidence"]], "connectivity_matrix() (in module dipy.tracking.utils)": [[179, "dipy.tracking.utils.connectivity_matrix"]], "deform_streamlines() (in module dipy.tracking.streamline)": [[179, "dipy.tracking.streamline.deform_streamlines"]], "density_map() (in module dipy.tracking.utils)": [[179, "dipy.tracking.utils.density_map"]], "detect_corresponding_tracks() (in module dipy.tracking.learning)": [[179, "dipy.tracking.learning.detect_corresponding_tracks"]], "detect_corresponding_tracks_plus() (in module dipy.tracking.learning)": [[179, "dipy.tracking.learning.detect_corresponding_tracks_plus"]], "deterministic_tracking() (in module dipy.tracking.tracker)": [[179, "dipy.tracking.tracker.deterministic_tracking"]], "dipy.tracking": [[179, "module-dipy.tracking"]], "dipy.tracking._utils": [[179, "module-dipy.tracking._utils"]], "dipy.tracking.learning": [[179, "module-dipy.tracking.learning"]], "dipy.tracking.life": [[179, "module-dipy.tracking.life"]], "dipy.tracking.local_tracking": [[179, "module-dipy.tracking.local_tracking"]], "dipy.tracking.mesh": [[179, "module-dipy.tracking.mesh"]], "dipy.tracking.metrics": [[179, "module-dipy.tracking.metrics"]], "dipy.tracking.streamline": [[179, "module-dipy.tracking.streamline"]], "dipy.tracking.tracker": [[179, "module-dipy.tracking.tracker"]], "dipy.tracking.utils": [[179, "module-dipy.tracking.utils"]], "endpoint() (in module dipy.tracking.metrics)": [[179, "dipy.tracking.metrics.endpoint"]], "eudx_tracking() (in module dipy.tracking.tracker)": [[179, "dipy.tracking.tracker.eudx_tracking"]], "fit() (dipy.tracking.life.fibermodel method)": [[179, "dipy.tracking.life.FiberModel.fit"]], "frenet_serret() (in module dipy.tracking.metrics)": [[179, "dipy.tracking.metrics.frenet_serret"]], "generate_combinations() (in module dipy.tracking.metrics)": [[179, "dipy.tracking.metrics.generate_combinations"]], "generic_tracking() (in module dipy.tracking.tracker)": [[179, "dipy.tracking.tracker.generic_tracking"]], "grad_tensor() (in module dipy.tracking.life)": [[179, "dipy.tracking.life.grad_tensor"]], "gradient() (in module dipy.tracking.life)": [[179, "dipy.tracking.life.gradient"]], "inside_sphere() (in module dipy.tracking.metrics)": [[179, "dipy.tracking.metrics.inside_sphere"]], "inside_sphere_points() (in module dipy.tracking.metrics)": [[179, "dipy.tracking.metrics.inside_sphere_points"]], "intersect_sphere() (in module dipy.tracking.metrics)": [[179, "dipy.tracking.metrics.intersect_sphere"]], "length() (in module dipy.tracking.metrics)": [[179, "dipy.tracking.metrics.length"]], "length() (in module dipy.tracking.utils)": [[179, "dipy.tracking.utils.length"]], "longest_track_bundle() (in module dipy.tracking.metrics)": [[179, "dipy.tracking.metrics.longest_track_bundle"]], "magn() (in module dipy.tracking.metrics)": [[179, "dipy.tracking.metrics.magn"]], "max_angle_from_curvature() (in module dipy.tracking.utils)": [[179, "dipy.tracking.utils.max_angle_from_curvature"]], "mean_curvature() (in module dipy.tracking.metrics)": [[179, "dipy.tracking.metrics.mean_curvature"]], "mean_orientation() (in module dipy.tracking.metrics)": [[179, "dipy.tracking.metrics.mean_orientation"]], "midpoint() (in module dipy.tracking.metrics)": [[179, "dipy.tracking.metrics.midpoint"]], "midpoint2point() (in module dipy.tracking.metrics)": [[179, "dipy.tracking.metrics.midpoint2point"]], "min_radius_curvature_from_angle() (in module dipy.tracking.utils)": [[179, "dipy.tracking.utils.min_radius_curvature_from_angle"]], "nbytes() (in module dipy.tracking.streamline)": [[179, "dipy.tracking.streamline.nbytes"]], "ndbincount() (in module dipy.tracking.utils)": [[179, "dipy.tracking.utils.ndbincount"]], "near_roi() (in module dipy.tracking.utils)": [[179, "dipy.tracking.utils.near_roi"]], "orient_by_rois() (in module dipy.tracking.streamline)": [[179, "dipy.tracking.streamline.orient_by_rois"]], "orient_by_streamline() (in module dipy.tracking.streamline)": [[179, "dipy.tracking.streamline.orient_by_streamline"]], "path_length() (in module dipy.tracking.utils)": [[179, "dipy.tracking.utils.path_length"]], "pft_tracking() (in module dipy.tracking.tracker)": [[179, "dipy.tracking.tracker.pft_tracking"]], "predict() (dipy.tracking.life.fiberfit method)": [[179, "dipy.tracking.life.FiberFit.predict"]], "principal_components() (in module dipy.tracking.metrics)": [[179, "dipy.tracking.metrics.principal_components"]], "probabilistic_tracking() (in module dipy.tracking.tracker)": [[179, "dipy.tracking.tracker.probabilistic_tracking"]], "ptt_tracking() (in module dipy.tracking.tracker)": [[179, "dipy.tracking.tracker.ptt_tracking"]], "random_coordinates_from_surface() (in module dipy.tracking.mesh)": [[179, "dipy.tracking.mesh.random_coordinates_from_surface"]], "random_seeds_from_mask() (in module dipy.tracking.utils)": [[179, "dipy.tracking.utils.random_seeds_from_mask"]], "reduce_labels() (in module dipy.tracking.utils)": [[179, "dipy.tracking.utils.reduce_labels"]], "reduce_rois() (in module dipy.tracking.utils)": [[179, "dipy.tracking.utils.reduce_rois"]], "relist_streamlines() (in module dipy.tracking.streamline)": [[179, "dipy.tracking.streamline.relist_streamlines"]], "seeds_directions_pairs() (in module dipy.tracking.utils)": [[179, "dipy.tracking.utils.seeds_directions_pairs"]], "seeds_from_mask() (in module dipy.tracking.utils)": [[179, "dipy.tracking.utils.seeds_from_mask"]], "seeds_from_surface_coordinates() (in module dipy.tracking.mesh)": [[179, "dipy.tracking.mesh.seeds_from_surface_coordinates"]], "select_by_rois() (in module dipy.tracking.streamline)": [[179, "dipy.tracking.streamline.select_by_rois"]], "select_random_set_of_streamlines() (in module dipy.tracking.streamline)": [[179, "dipy.tracking.streamline.select_random_set_of_streamlines"]], "setup() (dipy.tracking.life.fibermodel method)": [[179, "dipy.tracking.life.FiberModel.setup"]], "spline() (in module dipy.tracking.metrics)": [[179, "dipy.tracking.metrics.spline"]], "startpoint() (in module dipy.tracking.metrics)": [[179, "dipy.tracking.metrics.startpoint"]], "streamline_gradients() (in module dipy.tracking.life)": [[179, "dipy.tracking.life.streamline_gradients"]], "streamline_near_roi() (in module dipy.tracking.utils)": [[179, "dipy.tracking.utils.streamline_near_roi"]], "streamline_signal() (dipy.tracking.life.lifesignalmaker method)": [[179, "dipy.tracking.life.LifeSignalMaker.streamline_signal"]], "streamline_signal() (in module dipy.tracking.life)": [[179, "dipy.tracking.life.streamline_signal"]], "streamline_tensors() (in module dipy.tracking.life)": [[179, "dipy.tracking.life.streamline_tensors"]], "subsegment() (in module dipy.tracking.utils)": [[179, "dipy.tracking.utils.subsegment"]], "target() (in module dipy.tracking.utils)": [[179, "dipy.tracking.utils.target"]], "target_line_based() (in module dipy.tracking.utils)": [[179, "dipy.tracking.utils.target_line_based"]], "transform_streamlines() (in module dipy.tracking.streamline)": [[179, "dipy.tracking.streamline.transform_streamlines"]], "transform_tracking_output() (in module dipy.tracking.utils)": [[179, "dipy.tracking.utils.transform_tracking_output"]], "triangles_area() (in module dipy.tracking.mesh)": [[179, "dipy.tracking.mesh.triangles_area"]], "unique_rows() (in module dipy.tracking.utils)": [[179, "dipy.tracking.utils.unique_rows"]], "unlist_streamlines() (in module dipy.tracking.streamline)": [[179, "dipy.tracking.streamline.unlist_streamlines"]], "values_from_volume() (in module dipy.tracking.streamline)": [[179, "dipy.tracking.streamline.values_from_volume"]], "vertices_to_triangles_values() (in module dipy.tracking.mesh)": [[179, "dipy.tracking.mesh.vertices_to_triangles_values"]], "voxel2streamline() (in module dipy.tracking.life)": [[179, "dipy.tracking.life.voxel2streamline"]], "winding() (in module dipy.tracking.metrics)": [[179, "dipy.tracking.metrics.winding"]], "dipy.version": [[180, "module-dipy.version"]], "clusterstab (class in dipy.viz.horizon.tab.cluster)": [[181, "dipy.viz.horizon.tab.cluster.ClustersTab"]], "clustersvisualizer (class in dipy.viz.horizon.visualizer.cluster)": [[181, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer"]], "globalhorizon (class in dipy.viz.gmem)": [[181, "dipy.viz.gmem.GlobalHorizon"]], "horizon (class in dipy.viz.horizon.app)": [[181, "dipy.viz.horizon.app.Horizon"]], "horizontab (class in dipy.viz.horizon.tab.base)": [[181, "dipy.viz.horizon.tab.base.HorizonTab"]], "horizonuielement (class in dipy.viz.horizon.tab.base)": [[181, "dipy.viz.horizon.tab.base.HorizonUIElement"]], "peakactor (class in dipy.viz.horizon.visualizer.peak)": [[181, "dipy.viz.horizon.visualizer.peak.PeakActor"]], "peakstab (class in dipy.viz.horizon.tab.peak)": [[181, "dipy.viz.horizon.tab.peak.PeaksTab"]], "peaksvisualizer (class in dipy.viz.horizon.visualizer.peak)": [[181, "dipy.viz.horizon.visualizer.peak.PeaksVisualizer"]], "roistab (class in dipy.viz.horizon.tab.roi)": [[181, "dipy.viz.horizon.tab.roi.ROIsTab"]], "slicestab (class in dipy.viz.horizon.tab.slice)": [[181, "dipy.viz.horizon.tab.slice.SlicesTab"]], "slicesvisualizer (class in dipy.viz.horizon.visualizer.slice)": [[181, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer"]], "surfacetab (class in dipy.viz.horizon.tab.surface)": [[181, "dipy.viz.horizon.tab.surface.SurfaceTab"]], "surfacevisualizer (class in dipy.viz.horizon.visualizer.surface)": [[181, "dipy.viz.horizon.visualizer.surface.SurfaceVisualizer"]], "tabmanager (class in dipy.viz.horizon.tab.base)": [[181, "dipy.viz.horizon.tab.base.TabManager"]], "actors (dipy.viz.horizon.tab.base.horizontab property)": [[181, "dipy.viz.horizon.tab.base.HorizonTab.actors"]], "actors (dipy.viz.horizon.tab.cluster.clusterstab property)": [[181, "dipy.viz.horizon.tab.cluster.ClustersTab.actors"]], "actors (dipy.viz.horizon.tab.peak.peakstab property)": [[181, "dipy.viz.horizon.tab.peak.PeaksTab.actors"]], "actors (dipy.viz.horizon.tab.roi.roistab property)": [[181, "dipy.viz.horizon.tab.roi.ROIsTab.actors"]], "actors (dipy.viz.horizon.tab.slice.slicestab property)": [[181, "dipy.viz.horizon.tab.slice.SlicesTab.actors"]], "actors (dipy.viz.horizon.tab.surface.surfacetab property)": [[181, "dipy.viz.horizon.tab.surface.SurfaceTab.actors"]], "actors (dipy.viz.horizon.visualizer.peak.peaksvisualizer property)": [[181, "dipy.viz.horizon.visualizer.peak.PeaksVisualizer.actors"]], "actors (dipy.viz.horizon.visualizer.surface.surfacevisualizer property)": [[181, "dipy.viz.horizon.visualizer.surface.SurfaceVisualizer.actors"]], "add_cluster_actors() (dipy.viz.horizon.visualizer.cluster.clustersvisualizer method)": [[181, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.add_cluster_actors"]], "build() (dipy.viz.horizon.tab.base.horizontab method)": [[181, "dipy.viz.horizon.tab.base.HorizonTab.build"]], "build() (dipy.viz.horizon.tab.cluster.clusterstab method)": [[181, "dipy.viz.horizon.tab.cluster.ClustersTab.build"]], "build() (dipy.viz.horizon.tab.peak.peakstab method)": [[181, "dipy.viz.horizon.tab.peak.PeaksTab.build"]], "build() (dipy.viz.horizon.tab.roi.roistab method)": [[181, "dipy.viz.horizon.tab.roi.ROIsTab.build"]], "build() (dipy.viz.horizon.tab.slice.slicestab method)": [[181, "dipy.viz.horizon.tab.slice.SlicesTab.build"]], "build() (dipy.viz.horizon.tab.surface.surfacetab method)": [[181, "dipy.viz.horizon.tab.surface.SurfaceTab.build"]], "build_checkbox() (in module dipy.viz.horizon.tab.base)": [[181, "dipy.viz.horizon.tab.base.build_checkbox"]], "build_label() (in module dipy.viz.horizon.tab.base)": [[181, "dipy.viz.horizon.tab.base.build_label"]], "build_label() (in module dipy.viz.panel)": [[181, "dipy.viz.panel.build_label"]], "build_radio_button() (in module dipy.viz.horizon.tab.base)": [[181, "dipy.viz.horizon.tab.base.build_radio_button"]], "build_scene() (dipy.viz.horizon.app.horizon method)": [[181, "dipy.viz.horizon.app.Horizon.build_scene"]], "build_show() (dipy.viz.horizon.app.horizon method)": [[181, "dipy.viz.horizon.app.Horizon.build_show"]], "build_slider() (in module dipy.viz.horizon.tab.base)": [[181, "dipy.viz.horizon.tab.base.build_slider"]], "build_switcher() (in module dipy.viz.horizon.tab.base)": [[181, "dipy.viz.horizon.tab.base.build_switcher"]], "bundle_shape_profile() (in module dipy.viz.plotting)": [[181, "dipy.viz.plotting.bundle_shape_profile"]], "centroid_actors (dipy.viz.horizon.tab.cluster.clusterstab property)": [[181, "dipy.viz.horizon.tab.cluster.ClustersTab.centroid_actors"]], "centroid_actors (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[181, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.centroid_actors"]], "change_volume() (dipy.viz.horizon.visualizer.slice.slicesvisualizer method)": [[181, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.change_volume"]], "check_img_dtype() (in module dipy.viz.horizon.util)": [[181, "dipy.viz.horizon.util.check_img_dtype"]], "check_img_shapes() (in module dipy.viz.horizon.util)": [[181, "dipy.viz.horizon.util.check_img_shapes"]], "check_peak_size() (in module dipy.viz.horizon.util)": [[181, "dipy.viz.horizon.util.check_peak_size"]], "cluster_actors (dipy.viz.horizon.tab.cluster.clusterstab property)": [[181, "dipy.viz.horizon.tab.cluster.ClustersTab.cluster_actors"]], "cluster_actors (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[181, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.cluster_actors"]], "compare_maps() (in module dipy.viz.plotting)": [[181, "dipy.viz.plotting.compare_maps"]], "compare_qti_maps() (in module dipy.viz.plotting)": [[181, "dipy.viz.plotting.compare_qti_maps"]], "cross_section (dipy.viz.horizon.visualizer.peak.peakactor property)": [[181, "dipy.viz.horizon.visualizer.peak.PeakActor.cross_section"]], "data_shape (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[181, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.data_shape"]], "dipy.viz": [[181, "module-dipy.viz"]], "dipy.viz.gmem": [[181, "module-dipy.viz.gmem"]], "dipy.viz.horizon": [[181, "module-dipy.viz.horizon"]], "dipy.viz.horizon.app": [[181, "module-dipy.viz.horizon.app"]], "dipy.viz.horizon.tab": [[181, "module-dipy.viz.horizon.tab"]], "dipy.viz.horizon.tab.base": [[181, "module-dipy.viz.horizon.tab.base"]], "dipy.viz.horizon.tab.cluster": [[181, "module-dipy.viz.horizon.tab.cluster"]], "dipy.viz.horizon.tab.peak": [[181, "module-dipy.viz.horizon.tab.peak"]], "dipy.viz.horizon.tab.roi": [[181, "module-dipy.viz.horizon.tab.roi"]], "dipy.viz.horizon.tab.slice": [[181, "module-dipy.viz.horizon.tab.slice"]], "dipy.viz.horizon.tab.surface": [[181, "module-dipy.viz.horizon.tab.surface"]], "dipy.viz.horizon.util": [[181, "module-dipy.viz.horizon.util"]], "dipy.viz.horizon.visualizer": [[181, "module-dipy.viz.horizon.visualizer"]], "dipy.viz.horizon.visualizer.cluster": [[181, "module-dipy.viz.horizon.visualizer.cluster"]], "dipy.viz.horizon.visualizer.peak": [[181, "module-dipy.viz.horizon.visualizer.peak"]], "dipy.viz.horizon.visualizer.slice": [[181, "module-dipy.viz.horizon.visualizer.slice"]], "dipy.viz.horizon.visualizer.surface": [[181, "module-dipy.viz.horizon.visualizer.surface"]], "dipy.viz.panel": [[181, "module-dipy.viz.panel"]], "dipy.viz.plotting": [[181, "module-dipy.viz.plotting"]], "dipy.viz.projections": [[181, "module-dipy.viz.projections"]], "dipy.viz.regtools": [[181, "module-dipy.viz.regtools"]], "dipy.viz.streamline": [[181, "module-dipy.viz.streamline"]], "display_cross_section() (dipy.viz.horizon.visualizer.peak.peakactor method)": [[181, "dipy.viz.horizon.visualizer.peak.PeakActor.display_cross_section"]], "display_extent() (dipy.viz.horizon.visualizer.peak.peakactor method)": [[181, "dipy.viz.horizon.visualizer.peak.PeakActor.display_extent"]], "draw_lattice_2d() (in module dipy.viz.regtools)": [[181, "dipy.viz.regtools.draw_lattice_2d"]], "elements (dipy.viz.horizon.tab.base.horizontab property)": [[181, "dipy.viz.horizon.tab.base.HorizonTab.elements"]], "file_name (dipy.viz.horizon.tab.slice.slicestab property)": [[181, "dipy.viz.horizon.tab.slice.SlicesTab.file_name"]], "global_opacity (dipy.viz.horizon.visualizer.peak.peakactor property)": [[181, "dipy.viz.horizon.visualizer.peak.PeakActor.global_opacity"]], "handle_text_overflows() (dipy.viz.horizon.tab.base.tabmanager method)": [[181, "dipy.viz.horizon.tab.base.TabManager.handle_text_overflows"]], "high_ranges (dipy.viz.horizon.visualizer.peak.peakactor property)": [[181, "dipy.viz.horizon.visualizer.peak.PeakActor.high_ranges"]], "horizon() (in module dipy.viz.horizon.app)": [[181, "dipy.viz.horizon.app.horizon"]], "image_mosaic() (in module dipy.viz.plotting)": [[181, "dipy.viz.plotting.image_mosaic"]], "intensities_range (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[181, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.intensities_range"]], "is_range (dipy.viz.horizon.visualizer.peak.peakactor property)": [[181, "dipy.viz.horizon.visualizer.peak.PeakActor.is_range"]], "lengths (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[181, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.lengths"]], "linewidth (dipy.viz.horizon.visualizer.peak.peakactor property)": [[181, "dipy.viz.horizon.visualizer.peak.PeakActor.linewidth"]], "low_ranges (dipy.viz.horizon.visualizer.peak.peakactor property)": [[181, "dipy.viz.horizon.visualizer.peak.PeakActor.low_ranges"]], "max_centers (dipy.viz.horizon.visualizer.peak.peakactor property)": [[181, "dipy.viz.horizon.visualizer.peak.PeakActor.max_centers"]], "min_centers (dipy.viz.horizon.visualizer.peak.peakactor property)": [[181, "dipy.viz.horizon.visualizer.peak.PeakActor.min_centers"]], "name (dipy.viz.horizon.tab.base.horizontab property)": [[181, "dipy.viz.horizon.tab.base.HorizonTab.name"]], "name (dipy.viz.horizon.tab.cluster.clusterstab property)": [[181, "dipy.viz.horizon.tab.cluster.ClustersTab.name"]], "name (dipy.viz.horizon.tab.peak.peakstab property)": [[181, "dipy.viz.horizon.tab.peak.PeaksTab.name"]], "name (dipy.viz.horizon.tab.roi.roistab property)": [[181, "dipy.viz.horizon.tab.roi.ROIsTab.name"]], "name (dipy.viz.horizon.tab.slice.slicestab property)": [[181, "dipy.viz.horizon.tab.slice.SlicesTab.name"]], "name (dipy.viz.horizon.tab.surface.surfacetab property)": [[181, "dipy.viz.horizon.tab.surface.SurfaceTab.name"]], "obj (dipy.viz.horizon.tab.base.horizonuielement attribute)": [[181, "dipy.viz.horizon.tab.base.HorizonUIElement.obj"]], "on_tab_selected() (dipy.viz.horizon.tab.base.horizontab method)": [[181, "dipy.viz.horizon.tab.base.HorizonTab.on_tab_selected"]], "on_tab_selected() (dipy.viz.horizon.tab.peak.peakstab method)": [[181, "dipy.viz.horizon.tab.peak.PeaksTab.on_tab_selected"]], "on_tab_selected() (dipy.viz.horizon.tab.slice.slicestab method)": [[181, "dipy.viz.horizon.tab.slice.SlicesTab.on_tab_selected"]], "overlay_images() (in module dipy.viz.regtools)": [[181, "dipy.viz.regtools.overlay_images"]], "overlay_slices() (in module dipy.viz.regtools)": [[181, "dipy.viz.regtools.overlay_slices"]], "peak() (in module dipy.viz.horizon.visualizer.peak)": [[181, "dipy.viz.horizon.visualizer.peak.peak"]], "plot_2d_diffeomorphic_map() (in module dipy.viz.regtools)": [[181, "dipy.viz.regtools.plot_2d_diffeomorphic_map"]], "plot_slices() (in module dipy.viz.regtools)": [[181, "dipy.viz.regtools.plot_slices"]], "position (dipy.viz.horizon.tab.base.horizonuielement attribute)": [[181, "dipy.viz.horizon.tab.base.HorizonUIElement.position"]], "recluster_tractograms() (dipy.viz.horizon.visualizer.cluster.clustersvisualizer method)": [[181, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.recluster_tractograms"]], "register_picker_callback() (dipy.viz.horizon.visualizer.slice.slicesvisualizer method)": [[181, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.register_picker_callback"]], "reposition() (dipy.viz.horizon.tab.base.tabmanager method)": [[181, "dipy.viz.horizon.tab.base.TabManager.reposition"]], "rgb (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[181, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.rgb"]], "selected_slices (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[181, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.selected_slices"]], "selected_value (dipy.viz.horizon.tab.base.horizonuielement attribute)": [[181, "dipy.viz.horizon.tab.base.HorizonUIElement.selected_value"]], "show_bundles() (in module dipy.viz.streamline)": [[181, "dipy.viz.streamline.show_bundles"]], "show_ellipsis() (in module dipy.viz.horizon.util)": [[181, "dipy.viz.horizon.util.show_ellipsis"]], "simple_plot() (in module dipy.viz.regtools)": [[181, "dipy.viz.regtools.simple_plot"]], "size (dipy.viz.horizon.tab.base.horizonuielement attribute)": [[181, "dipy.viz.horizon.tab.base.HorizonUIElement.size"]], "sizes (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[181, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.sizes"]], "slice_actors (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[181, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.slice_actors"]], "slicer_panel() (in module dipy.viz.panel)": [[181, "dipy.viz.panel.slicer_panel"]], "sph_project() (in module dipy.viz.projections)": [[181, "dipy.viz.projections.sph_project"]], "synchronize_slices() (dipy.viz.horizon.tab.base.tabmanager method)": [[181, "dipy.viz.horizon.tab.base.TabManager.synchronize_slices"]], "synchronize_volumes() (dipy.viz.horizon.tab.base.tabmanager method)": [[181, "dipy.viz.horizon.tab.base.TabManager.synchronize_volumes"]], "tab_id (dipy.viz.horizon.tab.base.horizontab property)": [[181, "dipy.viz.horizon.tab.base.HorizonTab.tab_id"]], "tab_ui (dipy.viz.horizon.tab.base.tabmanager property)": [[181, "dipy.viz.horizon.tab.base.TabManager.tab_ui"]], "tractogram_clusters (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[181, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.tractogram_clusters"]], "unpack_image() (in module dipy.viz.horizon.util)": [[181, "dipy.viz.horizon.util.unpack_image"]], "unpack_surface() (in module dipy.viz.horizon.util)": [[181, "dipy.viz.horizon.util.unpack_surface"]], "update_slices() (dipy.viz.horizon.tab.peak.peakstab method)": [[181, "dipy.viz.horizon.tab.peak.PeaksTab.update_slices"]], "update_slices() (dipy.viz.horizon.tab.slice.slicestab method)": [[181, "dipy.viz.horizon.tab.slice.SlicesTab.update_slices"]], "update_volume() (dipy.viz.horizon.tab.slice.slicestab method)": [[181, "dipy.viz.horizon.tab.slice.SlicesTab.update_volume"]], "visibility (dipy.viz.horizon.tab.base.horizonuielement attribute)": [[181, "dipy.viz.horizon.tab.base.HorizonUIElement.visibility"]], "viz_displacement_mag() (in module dipy.viz.streamline)": [[181, "dipy.viz.streamline.viz_displacement_mag"]], "viz_two_bundles() (in module dipy.viz.streamline)": [[181, "dipy.viz.streamline.viz_two_bundles"]], "viz_vector_field() (in module dipy.viz.streamline)": [[181, "dipy.viz.streamline.viz_vector_field"]], "volume_max (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[181, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.volume_max"]], "volume_min (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[181, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.volume_min"]], "applytransformflow (class in dipy.workflows.align)": [[182, "dipy.workflows.align.ApplyTransformFlow"]], "biasfieldcorrectionflow (class in dipy.workflows.nn)": [[182, "dipy.workflows.nn.BiasFieldCorrectionFlow"]], "bundleanalysistractometryflow (class in dipy.workflows.stats)": [[182, "dipy.workflows.stats.BundleAnalysisTractometryFlow"]], "bundleshapeanalysis (class in dipy.workflows.stats)": [[182, "dipy.workflows.stats.BundleShapeAnalysis"]], "bundlewarpflow (class in dipy.workflows.align)": [[182, "dipy.workflows.align.BundleWarpFlow"]], "classifytissueflow (class in dipy.workflows.segment)": [[182, "dipy.workflows.segment.ClassifyTissueFlow"]], "combinedworkflow (class in dipy.workflows.combined_workflow)": [[182, "dipy.workflows.combined_workflow.CombinedWorkflow"]], "concatenatetractogramflow (class in dipy.workflows.io)": [[182, "dipy.workflows.io.ConcatenateTractogramFlow"]], "convertshflow (class in dipy.workflows.io)": [[182, "dipy.workflows.io.ConvertSHFlow"]], "converttensorsflow (class in dipy.workflows.io)": [[182, "dipy.workflows.io.ConvertTensorsFlow"]], "converttractogramflow (class in dipy.workflows.io)": [[182, "dipy.workflows.io.ConvertTractogramFlow"]], "evacplusflow (class in dipy.workflows.nn)": [[182, "dipy.workflows.nn.EVACPlusFlow"]], "extractb0flow (class in dipy.workflows.io)": [[182, "dipy.workflows.io.ExtractB0Flow"]], "extractshellflow (class in dipy.workflows.io)": [[182, "dipy.workflows.io.ExtractShellFlow"]], "extractvolumeflow (class in dipy.workflows.io)": [[182, "dipy.workflows.io.ExtractVolumeFlow"]], "fetchflow (class in dipy.workflows.io)": [[182, "dipy.workflows.io.FetchFlow"]], "gibbsringingflow (class in dipy.workflows.denoise)": [[182, "dipy.workflows.denoise.GibbsRingingFlow"]], "horizonflow (class in dipy.workflows.viz)": [[182, "dipy.workflows.viz.HorizonFlow"]], "ioiterator (class in dipy.workflows.multi_io)": [[182, "dipy.workflows.multi_io.IOIterator"]], "imageregistrationflow (class in dipy.workflows.align)": [[182, "dipy.workflows.align.ImageRegistrationFlow"]], "introspectiveargumentparser (class in dipy.workflows.base)": [[182, "dipy.workflows.base.IntrospectiveArgumentParser"]], "ioinfoflow (class in dipy.workflows.io)": [[182, "dipy.workflows.io.IoInfoFlow"]], "lpcaflow (class in dipy.workflows.denoise)": [[182, "dipy.workflows.denoise.LPCAFlow"]], "labelsbundlesflow (class in dipy.workflows.segment)": [[182, "dipy.workflows.segment.LabelsBundlesFlow"]], "linearmixedmodelsflow (class in dipy.workflows.stats)": [[182, "dipy.workflows.stats.LinearMixedModelsFlow"]], "localfibertrackingpamflow (class in dipy.workflows.tracking)": [[182, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow"]], "mppcaflow (class in dipy.workflows.denoise)": [[182, "dipy.workflows.denoise.MPPCAFlow"]], "maskflow (class in dipy.workflows.mask)": [[182, "dipy.workflows.mask.MaskFlow"]], "mathflow (class in dipy.workflows.io)": [[182, "dipy.workflows.io.MathFlow"]], "medianotsuflow (class in dipy.workflows.segment)": [[182, "dipy.workflows.segment.MedianOtsuFlow"]], "motioncorrectionflow (class in dipy.workflows.align)": [[182, "dipy.workflows.align.MotionCorrectionFlow"]], "nlmeansflow (class in dipy.workflows.denoise)": [[182, "dipy.workflows.denoise.NLMeansFlow"]], "niftistopamflow (class in dipy.workflows.io)": [[182, "dipy.workflows.io.NiftisToPamFlow"]], "numpydocstring (class in dipy.workflows.docstring_parser)": [[182, "dipy.workflows.docstring_parser.NumpyDocString"]], "pftrackingpamflow (class in dipy.workflows.tracking)": [[182, "dipy.workflows.tracking.PFTrackingPAMFlow"]], "pamtoniftisflow (class in dipy.workflows.io)": [[182, "dipy.workflows.io.PamToNiftisFlow"]], "patch2selfflow (class in dipy.workflows.denoise)": [[182, "dipy.workflows.denoise.Patch2SelfFlow"]], "reader (class in dipy.workflows.docstring_parser)": [[182, "dipy.workflows.docstring_parser.Reader"]], "recobundlesflow (class in dipy.workflows.segment)": [[182, "dipy.workflows.segment.RecoBundlesFlow"]], "reconstcsdflow (class in dipy.workflows.reconst)": [[182, "dipy.workflows.reconst.ReconstCSDFlow"]], "reconstdkiflow (class in dipy.workflows.reconst)": [[182, "dipy.workflows.reconst.ReconstDkiFlow"]], "reconstdsiflow (class in dipy.workflows.reconst)": [[182, "dipy.workflows.reconst.ReconstDsiFlow"]], "reconstdtiflow (class in dipy.workflows.reconst)": [[182, "dipy.workflows.reconst.ReconstDtiFlow"]], "reconstforecastflow (class in dipy.workflows.reconst)": [[182, "dipy.workflows.reconst.ReconstForecastFlow"]], "reconstgqiflow (class in dipy.workflows.reconst)": [[182, "dipy.workflows.reconst.ReconstGQIFlow"]], "reconstivimflow (class in dipy.workflows.reconst)": [[182, "dipy.workflows.reconst.ReconstIvimFlow"]], "reconstmapmriflow (class in dipy.workflows.reconst)": [[182, "dipy.workflows.reconst.ReconstMAPMRIFlow"]], "reconstqballbaseflow (class in dipy.workflows.reconst)": [[182, "dipy.workflows.reconst.ReconstQBallBaseFlow"]], "reconstrumbaflow (class in dipy.workflows.reconst)": [[182, "dipy.workflows.reconst.ReconstRUMBAFlow"]], "reconstsdtflow (class in dipy.workflows.reconst)": [[182, "dipy.workflows.reconst.ReconstSDTFlow"]], "reconstsfmflow (class in dipy.workflows.reconst)": [[182, "dipy.workflows.reconst.ReconstSFMFlow"]], "resliceflow (class in dipy.workflows.align)": [[182, "dipy.workflows.align.ResliceFlow"]], "snrinccflow (class in dipy.workflows.stats)": [[182, "dipy.workflows.stats.SNRinCCFlow"]], "slrwithqbxflow (class in dipy.workflows.align)": [[182, "dipy.workflows.align.SlrWithQbxFlow"]], "splitflow (class in dipy.workflows.io)": [[182, "dipy.workflows.io.SplitFlow"]], "synregistrationflow (class in dipy.workflows.align)": [[182, "dipy.workflows.align.SynRegistrationFlow"]], "tensortopamflow (class in dipy.workflows.io)": [[182, "dipy.workflows.io.TensorToPamFlow"]], "workflow (class in dipy.workflows.workflow)": [[182, "dipy.workflows.workflow.Workflow"]], "add_default_args_to_docstring() (in module dipy.workflows.base)": [[182, "dipy.workflows.base.add_default_args_to_docstring"]], "add_description() (dipy.workflows.base.introspectiveargumentparser method)": [[182, "dipy.workflows.base.IntrospectiveArgumentParser.add_description"]], "add_epilogue() (dipy.workflows.base.introspectiveargumentparser method)": [[182, "dipy.workflows.base.IntrospectiveArgumentParser.add_epilogue"]], "add_sub_flow_args() (dipy.workflows.base.introspectiveargumentparser method)": [[182, "dipy.workflows.base.IntrospectiveArgumentParser.add_sub_flow_args"]], "add_workflow() (dipy.workflows.base.introspectiveargumentparser method)": [[182, "dipy.workflows.base.IntrospectiveArgumentParser.add_workflow"]], "basename_without_extension() (in module dipy.workflows.multi_io)": [[182, "dipy.workflows.multi_io.basename_without_extension"]], "buan_bundle_profiles() (in module dipy.workflows.stats)": [[182, "dipy.workflows.stats.buan_bundle_profiles"]], "check_dimensions() (in module dipy.workflows.align)": [[182, "dipy.workflows.align.check_dimensions"]], "common_start() (in module dipy.workflows.multi_io)": [[182, "dipy.workflows.multi_io.common_start"]], "concatenate_inputs() (in module dipy.workflows.multi_io)": [[182, "dipy.workflows.multi_io.concatenate_inputs"]], "connect_output_paths() (in module dipy.workflows.multi_io)": [[182, "dipy.workflows.multi_io.connect_output_paths"]], "create_directories() (dipy.workflows.multi_io.ioiterator method)": [[182, "dipy.workflows.multi_io.IOIterator.create_directories"]], "create_outputs() (dipy.workflows.multi_io.ioiterator method)": [[182, "dipy.workflows.multi_io.IOIterator.create_outputs"]], "dedent_lines() (in module dipy.workflows.docstring_parser)": [[182, "dipy.workflows.docstring_parser.dedent_lines"]], "dipy.workflows": [[182, "module-dipy.workflows"]], "dipy.workflows.align": [[182, "module-dipy.workflows.align"]], "dipy.workflows.base": [[182, "module-dipy.workflows.base"]], "dipy.workflows.cli": [[182, "module-dipy.workflows.cli"]], "dipy.workflows.combined_workflow": [[182, "module-dipy.workflows.combined_workflow"]], "dipy.workflows.denoise": [[182, "module-dipy.workflows.denoise"]], "dipy.workflows.docstring_parser": [[182, "module-dipy.workflows.docstring_parser"]], "dipy.workflows.flow_runner": [[182, "module-dipy.workflows.flow_runner"]], "dipy.workflows.io": [[182, "module-dipy.workflows.io"]], "dipy.workflows.mask": [[182, "module-dipy.workflows.mask"]], "dipy.workflows.multi_io": [[182, "module-dipy.workflows.multi_io"]], "dipy.workflows.nn": [[182, "module-dipy.workflows.nn"]], "dipy.workflows.reconst": [[182, "module-dipy.workflows.reconst"]], "dipy.workflows.segment": [[182, "module-dipy.workflows.segment"]], "dipy.workflows.stats": [[182, "module-dipy.workflows.stats"]], "dipy.workflows.tracking": [[182, "module-dipy.workflows.tracking"]], "dipy.workflows.utils": [[182, "module-dipy.workflows.utils"]], "dipy.workflows.viz": [[182, "module-dipy.workflows.viz"]], "dipy.workflows.workflow": [[182, "module-dipy.workflows.workflow"]], "eof() (dipy.workflows.docstring_parser.reader method)": [[182, "dipy.workflows.docstring_parser.Reader.eof"]], "file_existence_check() (dipy.workflows.multi_io.ioiterator method)": [[182, "dipy.workflows.multi_io.IOIterator.file_existence_check"]], "get_args_default() (in module dipy.workflows.base)": [[182, "dipy.workflows.base.get_args_default"]], "get_fetcher_datanames() (dipy.workflows.io.fetchflow static method)": [[182, "dipy.workflows.io.FetchFlow.get_fetcher_datanames"]], "get_fitted_ivim() (dipy.workflows.reconst.reconstivimflow method)": [[182, "dipy.workflows.reconst.ReconstIvimFlow.get_fitted_ivim"]], "get_fitted_tensor() (dipy.workflows.reconst.reconstdkiflow method)": [[182, "dipy.workflows.reconst.ReconstDkiFlow.get_fitted_tensor"]], "get_fitted_tensor() (dipy.workflows.reconst.reconstdtiflow method)": [[182, "dipy.workflows.reconst.ReconstDtiFlow.get_fitted_tensor"]], "get_flow_args() (dipy.workflows.base.introspectiveargumentparser method)": [[182, "dipy.workflows.base.IntrospectiveArgumentParser.get_flow_args"]], "get_io_iterator() (dipy.workflows.workflow.workflow method)": [[182, "dipy.workflows.workflow.Workflow.get_io_iterator"]], "get_level() (in module dipy.workflows.flow_runner)": [[182, "dipy.workflows.flow_runner.get_level"]], "get_metric_name() (dipy.workflows.stats.linearmixedmodelsflow method)": [[182, "dipy.workflows.stats.LinearMixedModelsFlow.get_metric_name"]], "get_optionals() (dipy.workflows.combined_workflow.combinedworkflow method)": [[182, "dipy.workflows.combined_workflow.CombinedWorkflow.get_optionals"]], "get_short_name() (dipy.workflows.align.bundlewarpflow class method)": [[182, "dipy.workflows.align.BundleWarpFlow.get_short_name"]], "get_short_name() (dipy.workflows.align.resliceflow class method)": [[182, "dipy.workflows.align.ResliceFlow.get_short_name"]], "get_short_name() (dipy.workflows.align.slrwithqbxflow class method)": [[182, "dipy.workflows.align.SlrWithQbxFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.gibbsringingflow class method)": [[182, "dipy.workflows.denoise.GibbsRingingFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.lpcaflow class method)": [[182, "dipy.workflows.denoise.LPCAFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.mppcaflow class method)": [[182, "dipy.workflows.denoise.MPPCAFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.nlmeansflow class method)": [[182, "dipy.workflows.denoise.NLMeansFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.patch2selfflow class method)": [[182, "dipy.workflows.denoise.Patch2SelfFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.concatenatetractogramflow class method)": [[182, "dipy.workflows.io.ConcatenateTractogramFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.convertshflow class method)": [[182, "dipy.workflows.io.ConvertSHFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.converttensorsflow class method)": [[182, "dipy.workflows.io.ConvertTensorsFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.converttractogramflow class method)": [[182, "dipy.workflows.io.ConvertTractogramFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.extractb0flow class method)": [[182, "dipy.workflows.io.ExtractB0Flow.get_short_name"]], "get_short_name() (dipy.workflows.io.extractshellflow class method)": [[182, "dipy.workflows.io.ExtractShellFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.extractvolumeflow class method)": [[182, "dipy.workflows.io.ExtractVolumeFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.fetchflow class method)": [[182, "dipy.workflows.io.FetchFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.ioinfoflow class method)": [[182, "dipy.workflows.io.IoInfoFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.mathflow class method)": [[182, "dipy.workflows.io.MathFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.niftistopamflow class method)": [[182, "dipy.workflows.io.NiftisToPamFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.pamtoniftisflow class method)": [[182, "dipy.workflows.io.PamToNiftisFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.splitflow class method)": [[182, "dipy.workflows.io.SplitFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.tensortopamflow class method)": [[182, "dipy.workflows.io.TensorToPamFlow.get_short_name"]], "get_short_name() (dipy.workflows.mask.maskflow class method)": [[182, "dipy.workflows.mask.MaskFlow.get_short_name"]], "get_short_name() (dipy.workflows.nn.biasfieldcorrectionflow class method)": [[182, "dipy.workflows.nn.BiasFieldCorrectionFlow.get_short_name"]], "get_short_name() (dipy.workflows.nn.evacplusflow class method)": [[182, "dipy.workflows.nn.EVACPlusFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstcsdflow class method)": [[182, "dipy.workflows.reconst.ReconstCSDFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstdkiflow class method)": [[182, "dipy.workflows.reconst.ReconstDkiFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstdsiflow class method)": [[182, "dipy.workflows.reconst.ReconstDsiFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstdtiflow class method)": [[182, "dipy.workflows.reconst.ReconstDtiFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstforecastflow class method)": [[182, "dipy.workflows.reconst.ReconstForecastFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstgqiflow class method)": [[182, "dipy.workflows.reconst.ReconstGQIFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstivimflow class method)": [[182, "dipy.workflows.reconst.ReconstIvimFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstmapmriflow class method)": [[182, "dipy.workflows.reconst.ReconstMAPMRIFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstqballbaseflow class method)": [[182, "dipy.workflows.reconst.ReconstQBallBaseFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstrumbaflow class method)": [[182, "dipy.workflows.reconst.ReconstRUMBAFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstsdtflow class method)": [[182, "dipy.workflows.reconst.ReconstSDTFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstsfmflow class method)": [[182, "dipy.workflows.reconst.ReconstSFMFlow.get_short_name"]], "get_short_name() (dipy.workflows.segment.classifytissueflow class method)": [[182, "dipy.workflows.segment.ClassifyTissueFlow.get_short_name"]], "get_short_name() (dipy.workflows.segment.labelsbundlesflow class method)": [[182, "dipy.workflows.segment.LabelsBundlesFlow.get_short_name"]], "get_short_name() (dipy.workflows.segment.medianotsuflow class method)": [[182, "dipy.workflows.segment.MedianOtsuFlow.get_short_name"]], "get_short_name() (dipy.workflows.segment.recobundlesflow class method)": [[182, "dipy.workflows.segment.RecoBundlesFlow.get_short_name"]], "get_short_name() (dipy.workflows.stats.bundleanalysistractometryflow class method)": [[182, "dipy.workflows.stats.BundleAnalysisTractometryFlow.get_short_name"]], "get_short_name() (dipy.workflows.stats.bundleshapeanalysis class method)": [[182, "dipy.workflows.stats.BundleShapeAnalysis.get_short_name"]], "get_short_name() (dipy.workflows.stats.linearmixedmodelsflow class method)": [[182, "dipy.workflows.stats.LinearMixedModelsFlow.get_short_name"]], "get_short_name() (dipy.workflows.stats.snrinccflow class method)": [[182, "dipy.workflows.stats.SNRinCCFlow.get_short_name"]], "get_short_name() (dipy.workflows.tracking.localfibertrackingpamflow class method)": [[182, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow.get_short_name"]], "get_short_name() (dipy.workflows.tracking.pftrackingpamflow class method)": [[182, "dipy.workflows.tracking.PFTrackingPAMFlow.get_short_name"]], "get_short_name() (dipy.workflows.viz.horizonflow class method)": [[182, "dipy.workflows.viz.HorizonFlow.get_short_name"]], "get_short_name() (dipy.workflows.workflow.workflow class method)": [[182, "dipy.workflows.workflow.Workflow.get_short_name"]], "get_sub_runs() (dipy.workflows.combined_workflow.combinedworkflow method)": [[182, "dipy.workflows.combined_workflow.CombinedWorkflow.get_sub_runs"]], "get_sub_runs() (dipy.workflows.workflow.workflow method)": [[182, "dipy.workflows.workflow.Workflow.get_sub_runs"]], "handle_vol_idx() (in module dipy.workflows.utils)": [[182, "dipy.workflows.utils.handle_vol_idx"]], "io_iterator() (in module dipy.workflows.multi_io)": [[182, "dipy.workflows.multi_io.io_iterator"]], "is_empty() (dipy.workflows.docstring_parser.reader method)": [[182, "dipy.workflows.docstring_parser.Reader.is_empty"]], "load_module() (dipy.workflows.io.fetchflow static method)": [[182, "dipy.workflows.io.FetchFlow.load_module"]], "manage_output_overwrite() (dipy.workflows.workflow.workflow method)": [[182, "dipy.workflows.workflow.Workflow.manage_output_overwrite"]], "none_or_dtype() (in module dipy.workflows.base)": [[182, "dipy.workflows.base.none_or_dtype"]], "optional_parameters (dipy.workflows.base.introspectiveargumentparser property)": [[182, "dipy.workflows.base.IntrospectiveArgumentParser.optional_parameters"]], "output_parameters (dipy.workflows.base.introspectiveargumentparser property)": [[182, "dipy.workflows.base.IntrospectiveArgumentParser.output_parameters"]], "peek() (dipy.workflows.docstring_parser.reader method)": [[182, "dipy.workflows.docstring_parser.Reader.peek"]], "positional_parameters (dipy.workflows.base.introspectiveargumentparser property)": [[182, "dipy.workflows.base.IntrospectiveArgumentParser.positional_parameters"]], "read() (dipy.workflows.docstring_parser.reader method)": [[182, "dipy.workflows.docstring_parser.Reader.read"]], "read_to_condition() (dipy.workflows.docstring_parser.reader method)": [[182, "dipy.workflows.docstring_parser.Reader.read_to_condition"]], "read_to_next_empty_line() (dipy.workflows.docstring_parser.reader method)": [[182, "dipy.workflows.docstring_parser.Reader.read_to_next_empty_line"]], "read_to_next_unindented_line() (dipy.workflows.docstring_parser.reader method)": [[182, "dipy.workflows.docstring_parser.Reader.read_to_next_unindented_line"]], "reset() (dipy.workflows.docstring_parser.reader method)": [[182, "dipy.workflows.docstring_parser.Reader.reset"]], "run() (dipy.workflows.align.applytransformflow method)": [[182, "dipy.workflows.align.ApplyTransformFlow.run"]], "run() (dipy.workflows.align.bundlewarpflow method)": [[182, "dipy.workflows.align.BundleWarpFlow.run"]], "run() (dipy.workflows.align.imageregistrationflow method)": [[182, "dipy.workflows.align.ImageRegistrationFlow.run"]], "run() (dipy.workflows.align.motioncorrectionflow method)": [[182, "dipy.workflows.align.MotionCorrectionFlow.run"]], "run() (dipy.workflows.align.resliceflow method)": [[182, "dipy.workflows.align.ResliceFlow.run"]], "run() (dipy.workflows.align.slrwithqbxflow method)": [[182, "dipy.workflows.align.SlrWithQbxFlow.run"]], "run() (dipy.workflows.align.synregistrationflow method)": [[182, "dipy.workflows.align.SynRegistrationFlow.run"]], "run() (dipy.workflows.denoise.gibbsringingflow method)": [[182, "dipy.workflows.denoise.GibbsRingingFlow.run"]], "run() (dipy.workflows.denoise.lpcaflow method)": [[182, "dipy.workflows.denoise.LPCAFlow.run"]], "run() (dipy.workflows.denoise.mppcaflow method)": [[182, "dipy.workflows.denoise.MPPCAFlow.run"]], "run() (dipy.workflows.denoise.nlmeansflow method)": [[182, "dipy.workflows.denoise.NLMeansFlow.run"]], "run() (dipy.workflows.denoise.patch2selfflow method)": [[182, "dipy.workflows.denoise.Patch2SelfFlow.run"]], "run() (dipy.workflows.io.concatenatetractogramflow method)": [[182, "dipy.workflows.io.ConcatenateTractogramFlow.run"]], "run() (dipy.workflows.io.convertshflow method)": [[182, "dipy.workflows.io.ConvertSHFlow.run"]], "run() (dipy.workflows.io.converttensorsflow method)": [[182, "dipy.workflows.io.ConvertTensorsFlow.run"]], "run() (dipy.workflows.io.converttractogramflow method)": [[182, "dipy.workflows.io.ConvertTractogramFlow.run"]], "run() (dipy.workflows.io.extractb0flow method)": [[182, "dipy.workflows.io.ExtractB0Flow.run"]], "run() (dipy.workflows.io.extractshellflow method)": [[182, "dipy.workflows.io.ExtractShellFlow.run"]], "run() (dipy.workflows.io.extractvolumeflow method)": [[182, "dipy.workflows.io.ExtractVolumeFlow.run"]], "run() (dipy.workflows.io.fetchflow method)": [[182, "dipy.workflows.io.FetchFlow.run"]], "run() (dipy.workflows.io.ioinfoflow method)": [[182, "dipy.workflows.io.IoInfoFlow.run"]], "run() (dipy.workflows.io.mathflow method)": [[182, "dipy.workflows.io.MathFlow.run"]], "run() (dipy.workflows.io.niftistopamflow method)": [[182, "dipy.workflows.io.NiftisToPamFlow.run"]], "run() (dipy.workflows.io.pamtoniftisflow method)": [[182, "dipy.workflows.io.PamToNiftisFlow.run"]], "run() (dipy.workflows.io.splitflow method)": [[182, "dipy.workflows.io.SplitFlow.run"]], "run() (dipy.workflows.io.tensortopamflow method)": [[182, "dipy.workflows.io.TensorToPamFlow.run"]], "run() (dipy.workflows.mask.maskflow method)": [[182, "dipy.workflows.mask.MaskFlow.run"]], "run() (dipy.workflows.nn.biasfieldcorrectionflow method)": [[182, "dipy.workflows.nn.BiasFieldCorrectionFlow.run"]], "run() (dipy.workflows.nn.evacplusflow method)": [[182, "dipy.workflows.nn.EVACPlusFlow.run"]], "run() (dipy.workflows.reconst.reconstcsdflow method)": [[182, "dipy.workflows.reconst.ReconstCSDFlow.run"]], "run() (dipy.workflows.reconst.reconstdkiflow method)": [[182, "dipy.workflows.reconst.ReconstDkiFlow.run"]], "run() (dipy.workflows.reconst.reconstdsiflow method)": [[182, "dipy.workflows.reconst.ReconstDsiFlow.run"]], "run() (dipy.workflows.reconst.reconstdtiflow method)": [[182, "dipy.workflows.reconst.ReconstDtiFlow.run"]], "run() (dipy.workflows.reconst.reconstforecastflow method)": [[182, "dipy.workflows.reconst.ReconstForecastFlow.run"]], "run() (dipy.workflows.reconst.reconstgqiflow method)": [[182, "dipy.workflows.reconst.ReconstGQIFlow.run"]], "run() (dipy.workflows.reconst.reconstivimflow method)": [[182, "dipy.workflows.reconst.ReconstIvimFlow.run"]], "run() (dipy.workflows.reconst.reconstmapmriflow method)": [[182, "dipy.workflows.reconst.ReconstMAPMRIFlow.run"]], "run() (dipy.workflows.reconst.reconstqballbaseflow method)": [[182, "dipy.workflows.reconst.ReconstQBallBaseFlow.run"]], "run() (dipy.workflows.reconst.reconstrumbaflow method)": [[182, "dipy.workflows.reconst.ReconstRUMBAFlow.run"]], "run() (dipy.workflows.reconst.reconstsdtflow method)": [[182, "dipy.workflows.reconst.ReconstSDTFlow.run"]], "run() (dipy.workflows.reconst.reconstsfmflow method)": [[182, "dipy.workflows.reconst.ReconstSFMFlow.run"]], "run() (dipy.workflows.segment.classifytissueflow method)": [[182, "dipy.workflows.segment.ClassifyTissueFlow.run"]], "run() (dipy.workflows.segment.labelsbundlesflow method)": [[182, "dipy.workflows.segment.LabelsBundlesFlow.run"]], "run() (dipy.workflows.segment.medianotsuflow method)": [[182, "dipy.workflows.segment.MedianOtsuFlow.run"]], "run() (dipy.workflows.segment.recobundlesflow method)": [[182, "dipy.workflows.segment.RecoBundlesFlow.run"]], "run() (dipy.workflows.stats.bundleanalysistractometryflow method)": [[182, "dipy.workflows.stats.BundleAnalysisTractometryFlow.run"]], "run() (dipy.workflows.stats.bundleshapeanalysis method)": [[182, "dipy.workflows.stats.BundleShapeAnalysis.run"]], "run() (dipy.workflows.stats.linearmixedmodelsflow method)": [[182, "dipy.workflows.stats.LinearMixedModelsFlow.run"]], "run() (dipy.workflows.stats.snrinccflow method)": [[182, "dipy.workflows.stats.SNRinCCFlow.run"]], "run() (dipy.workflows.tracking.localfibertrackingpamflow method)": [[182, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow.run"]], "run() (dipy.workflows.tracking.pftrackingpamflow method)": [[182, "dipy.workflows.tracking.PFTrackingPAMFlow.run"]], "run() (dipy.workflows.viz.horizonflow method)": [[182, "dipy.workflows.viz.HorizonFlow.run"]], "run() (dipy.workflows.workflow.workflow method)": [[182, "dipy.workflows.workflow.Workflow.run"]], "run() (in module dipy.workflows.cli)": [[182, "dipy.workflows.cli.run"]], "run_flow() (in module dipy.workflows.flow_runner)": [[182, "dipy.workflows.flow_runner.run_flow"]], "run_sub_flow() (dipy.workflows.combined_workflow.combinedworkflow method)": [[182, "dipy.workflows.combined_workflow.CombinedWorkflow.run_sub_flow"]], "save_lmm_plot() (dipy.workflows.stats.linearmixedmodelsflow method)": [[182, "dipy.workflows.stats.LinearMixedModelsFlow.save_lmm_plot"]], "seek_next_non_empty_line() (dipy.workflows.docstring_parser.reader method)": [[182, "dipy.workflows.docstring_parser.Reader.seek_next_non_empty_line"]], "set_inputs() (dipy.workflows.multi_io.ioiterator method)": [[182, "dipy.workflows.multi_io.IOIterator.set_inputs"]], "set_out_dir() (dipy.workflows.multi_io.ioiterator method)": [[182, "dipy.workflows.multi_io.IOIterator.set_out_dir"]], "set_out_fnames() (dipy.workflows.multi_io.ioiterator method)": [[182, "dipy.workflows.multi_io.IOIterator.set_out_fnames"]], "set_output_keys() (dipy.workflows.multi_io.ioiterator method)": [[182, "dipy.workflows.multi_io.IOIterator.set_output_keys"]], "set_sub_flows_optionals() (dipy.workflows.combined_workflow.combinedworkflow method)": [[182, "dipy.workflows.combined_workflow.CombinedWorkflow.set_sub_flows_optionals"]], "show_argument() (dipy.workflows.base.introspectiveargumentparser method)": [[182, "dipy.workflows.base.IntrospectiveArgumentParser.show_argument"]], "slash_to_under() (in module dipy.workflows.multi_io)": [[182, "dipy.workflows.multi_io.slash_to_under"]], "update_argument() (dipy.workflows.base.introspectiveargumentparser method)": [[182, "dipy.workflows.base.IntrospectiveArgumentParser.update_argument"]], "update_flat_outputs() (dipy.workflows.workflow.workflow method)": [[182, "dipy.workflows.workflow.Workflow.update_flat_outputs"]]}})