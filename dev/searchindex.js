Search.setIndex({"docnames": ["api_changes", "cite", "devel/coding_style_guideline", "devel/commit_codes", "devel/gitwash/configure_git", "devel/gitwash/development_workflow", "devel/gitwash/dot2_dot3", "devel/gitwash/following_latest", "devel/gitwash/forking_hell", "devel/gitwash/git_development", "devel/gitwash/git_install", "devel/gitwash/git_intro", "devel/gitwash/git_resources", "devel/gitwash/index", "devel/gitwash/maintainer_workflow", "devel/gitwash/patching", "devel/gitwash/set_up_fork", "devel/index", "devel/intro", "devel/make_release", "developers", "examples_built/contextual_enhancement/contextual_enhancement", "examples_built/contextual_enhancement/fiber_to_bundle_coherence", "examples_built/contextual_enhancement/index", "examples_built/contextual_enhancement/sg_execution_times", "examples_built/fiber_tracking/index", "examples_built/fiber_tracking/linear_fascicle_evaluation", "examples_built/fiber_tracking/sg_execution_times", "examples_built/fiber_tracking/surface_seed", "examples_built/fiber_tracking/tracking_bootstrap_peaks", "examples_built/fiber_tracking/tracking_deterministic", "examples_built/fiber_tracking/tracking_introduction_eudx_1", "examples_built/fiber_tracking/tracking_pft", "examples_built/fiber_tracking/tracking_probabilistic", "examples_built/fiber_tracking/tracking_ptt", "examples_built/fiber_tracking/tracking_rumba", "examples_built/fiber_tracking/tracking_sfm", "examples_built/fiber_tracking/tracking_stopping_criterion", "examples_built/file_formats/index", "examples_built/file_formats/sg_execution_times", "examples_built/file_formats/streamline_formats", "examples_built/index", "examples_built/multiprocessing/index", "examples_built/multiprocessing/reconst_csa_parallel", "examples_built/multiprocessing/reconst_csd_parallel", "examples_built/multiprocessing/sg_execution_times", "examples_built/preprocessing/brain_extraction_dwi", "examples_built/preprocessing/denoise_ascm", "examples_built/preprocessing/denoise_gibbs", "examples_built/preprocessing/denoise_localpca", "examples_built/preprocessing/denoise_mppca", "examples_built/preprocessing/denoise_nlmeans", "examples_built/preprocessing/denoise_patch2self", "examples_built/preprocessing/gradients_spheres", "examples_built/preprocessing/index", "examples_built/preprocessing/motion_correction", "examples_built/preprocessing/piesno", "examples_built/preprocessing/reslice_datasets", "examples_built/preprocessing/sg_execution_times", "examples_built/preprocessing/snr_in_cc", "examples_built/quick_start/index", "examples_built/quick_start/quick_start", "examples_built/quick_start/sg_execution_times", "examples_built/quick_start/tracking_introduction_eudx", "examples_built/reconstruction/histology_resdnn", "examples_built/reconstruction/index", "examples_built/reconstruction/kfold_xval", "examples_built/reconstruction/reconst_csa", "examples_built/reconstruction/reconst_csd", "examples_built/reconstruction/reconst_cti", "examples_built/reconstruction/reconst_dki", "examples_built/reconstruction/reconst_dki_micro", "examples_built/reconstruction/reconst_dsi", "examples_built/reconstruction/reconst_dsi_metrics", "examples_built/reconstruction/reconst_dsid", "examples_built/reconstruction/reconst_dti", "examples_built/reconstruction/reconst_forecast", "examples_built/reconstruction/reconst_fwdti", "examples_built/reconstruction/reconst_gqi", "examples_built/reconstruction/reconst_ivim", "examples_built/reconstruction/reconst_mapmri", "examples_built/reconstruction/reconst_mcsd", "examples_built/reconstruction/reconst_msdki", "examples_built/reconstruction/reconst_qtdmri", "examples_built/reconstruction/reconst_qti", "examples_built/reconstruction/reconst_qtiplus", "examples_built/reconstruction/reconst_rumba", "examples_built/reconstruction/reconst_sfm", "examples_built/reconstruction/reconst_sh", "examples_built/reconstruction/reconst_shore", "examples_built/reconstruction/reconst_shore_metrics", "examples_built/reconstruction/restore_dti", "examples_built/reconstruction/sg_execution_times", "examples_built/registration/affine_registration_3d", "examples_built/registration/affine_registration_masks", "examples_built/registration/bundle_group_registration", "examples_built/registration/bundle_registration", "examples_built/registration/bundlewarp_registration", "examples_built/registration/index", "examples_built/registration/register_binary_fuzzy", "examples_built/registration/sg_execution_times", "examples_built/registration/streamline_registration", "examples_built/registration/syn_registration_2d", "examples_built/registration/syn_registration_3d", "examples_built/segmentation/brain_extraction_dwi_1", "examples_built/segmentation/bundle_extraction", "examples_built/segmentation/fast_streamline_search", "examples_built/segmentation/index", "examples_built/segmentation/segment_clustering_features", "examples_built/segmentation/segment_clustering_metrics", "examples_built/segmentation/segment_extending_clustering_framework", "examples_built/segmentation/segment_quickbundles", "examples_built/segmentation/sg_execution_times", "examples_built/segmentation/tissue_classification", "examples_built/simulations/index", "examples_built/simulations/reconst_dsid_1", "examples_built/simulations/sg_execution_times", "examples_built/simulations/simulate_dki", "examples_built/simulations/simulate_multi_tensor", "examples_built/streamline_analysis/afq_tract_profiles", "examples_built/streamline_analysis/bundle_assignment_maps", "examples_built/streamline_analysis/bundle_shape_similarity", "examples_built/streamline_analysis/cluster_confidence", "examples_built/streamline_analysis/index", "examples_built/streamline_analysis/path_length_map", "examples_built/streamline_analysis/sg_execution_times", "examples_built/streamline_analysis/streamline_length", "examples_built/streamline_analysis/streamline_tools", "examples_built/visualization/index", "examples_built/visualization/sg_execution_times", "examples_built/visualization/viz_advanced", "examples_built/visualization/viz_bundles", "examples_built/visualization/viz_roi_contour", "examples_built/visualization/viz_slice", "examples_built/workflows/combined_workflow_creation", "examples_built/workflows/index", "examples_built/workflows/sg_execution_times", "examples_built/workflows/workflow_creation", "faq", "gimbal_lock", "glossary", "index", "interfaces/basic_flow", "interfaces/buan_flow", "interfaces/bundle_segmentation_flow", "interfaces/bundlewarp_registration_flow", "interfaces/data_fetch", "interfaces/denoise_flow", "interfaces/gibbs_unringing_flow", "interfaces/index", "interfaces/motion_flow", "interfaces/reconstruction_flow", "interfaces/registration_flow", "interfaces/tracking_flow", "old_highlights", "old_news", "reconstruction_models_list", "reference/dipy", "reference/dipy.__config__", "reference/dipy.align", "reference/dipy.boots", "reference/dipy.core", "reference/dipy.data", "reference/dipy.denoise", "reference/dipy.direction", "reference/dipy.io", "reference/dipy.nn", "reference/dipy.reconst", "reference/dipy.segment", "reference/dipy.sims", "reference/dipy.stats", "reference/dipy.tracking", "reference/dipy.viz", "reference/dipy.workflows", "reference/index", "reference_cmd/dipy_align_affine", "reference_cmd/dipy_align_syn", "reference_cmd/dipy_apply_transform", "reference_cmd/dipy_buan_lmm", "reference_cmd/dipy_buan_profiles", "reference_cmd/dipy_bundlewarp", "reference_cmd/dipy_correct_motion", "reference_cmd/dipy_denoise_lpca", "reference_cmd/dipy_denoise_mppca", "reference_cmd/dipy_denoise_nlmeans", "reference_cmd/dipy_denoise_patch2self", "reference_cmd/dipy_evac_plus", "reference_cmd/dipy_fetch", "reference_cmd/dipy_fit_csa", "reference_cmd/dipy_fit_csd", "reference_cmd/dipy_fit_dki", "reference_cmd/dipy_fit_dti", "reference_cmd/dipy_fit_ivim", "reference_cmd/dipy_fit_mapmri", "reference_cmd/dipy_gibbs_ringing", "reference_cmd/dipy_horizon", "reference_cmd/dipy_info", "reference_cmd/dipy_labelsbundles", "reference_cmd/dipy_mask", "reference_cmd/dipy_median_otsu", "reference_cmd/dipy_recobundles", "reference_cmd/dipy_reslice", "reference_cmd/dipy_slr", "reference_cmd/dipy_snr_in_cc", "reference_cmd/dipy_split", "reference_cmd/dipy_track", "reference_cmd/dipy_track_pft", "reference_cmd/index", "release_notes/release0.10", "release_notes/release0.11", "release_notes/release0.12", "release_notes/release0.13", "release_notes/release0.14", "release_notes/release0.15", "release_notes/release0.16", "release_notes/release0.6", "release_notes/release0.7", "release_notes/release0.8", "release_notes/release0.9", "release_notes/release1.0", "release_notes/release1.1", "release_notes/release1.2", "release_notes/release1.3", "release_notes/release1.4", "release_notes/release1.4.1", "release_notes/release1.5", "release_notes/release1.6", "release_notes/release1.7", "stateoftheart", "subscribe", "theory/b_and_q", "theory/bmatrix", "theory/gqi", "theory/index", "theory/sh_basis", "theory/spherical", "user_guide/data", "user_guide/dataset_list", "user_guide/dependencies", "user_guide/getting_started", "user_guide/index", "user_guide/installation", "user_guide/introduction", "user_guide/mission"], "filenames": ["api_changes.rst", "cite.rst", "devel/coding_style_guideline.rst", "devel/commit_codes.rst", "devel/gitwash/configure_git.rst", "devel/gitwash/development_workflow.rst", "devel/gitwash/dot2_dot3.rst", "devel/gitwash/following_latest.rst", "devel/gitwash/forking_hell.rst", "devel/gitwash/git_development.rst", "devel/gitwash/git_install.rst", "devel/gitwash/git_intro.rst", "devel/gitwash/git_resources.rst", "devel/gitwash/index.rst", "devel/gitwash/maintainer_workflow.rst", "devel/gitwash/patching.rst", "devel/gitwash/set_up_fork.rst", "devel/index.rst", "devel/intro.rst", "devel/make_release.rst", "developers.rst", "examples_built/contextual_enhancement/contextual_enhancement.rst", "examples_built/contextual_enhancement/fiber_to_bundle_coherence.rst", "examples_built/contextual_enhancement/index.rst", "examples_built/contextual_enhancement/sg_execution_times.rst", "examples_built/fiber_tracking/index.rst", "examples_built/fiber_tracking/linear_fascicle_evaluation.rst", "examples_built/fiber_tracking/sg_execution_times.rst", "examples_built/fiber_tracking/surface_seed.rst", "examples_built/fiber_tracking/tracking_bootstrap_peaks.rst", "examples_built/fiber_tracking/tracking_deterministic.rst", "examples_built/fiber_tracking/tracking_introduction_eudx_1.rst", "examples_built/fiber_tracking/tracking_pft.rst", "examples_built/fiber_tracking/tracking_probabilistic.rst", "examples_built/fiber_tracking/tracking_ptt.rst", "examples_built/fiber_tracking/tracking_rumba.rst", "examples_built/fiber_tracking/tracking_sfm.rst", "examples_built/fiber_tracking/tracking_stopping_criterion.rst", "examples_built/file_formats/index.rst", "examples_built/file_formats/sg_execution_times.rst", "examples_built/file_formats/streamline_formats.rst", "examples_built/index.rst", "examples_built/multiprocessing/index.rst", "examples_built/multiprocessing/reconst_csa_parallel.rst", "examples_built/multiprocessing/reconst_csd_parallel.rst", "examples_built/multiprocessing/sg_execution_times.rst", "examples_built/preprocessing/brain_extraction_dwi.rst", "examples_built/preprocessing/denoise_ascm.rst", "examples_built/preprocessing/denoise_gibbs.rst", "examples_built/preprocessing/denoise_localpca.rst", "examples_built/preprocessing/denoise_mppca.rst", "examples_built/preprocessing/denoise_nlmeans.rst", "examples_built/preprocessing/denoise_patch2self.rst", "examples_built/preprocessing/gradients_spheres.rst", "examples_built/preprocessing/index.rst", "examples_built/preprocessing/motion_correction.rst", "examples_built/preprocessing/piesno.rst", "examples_built/preprocessing/reslice_datasets.rst", "examples_built/preprocessing/sg_execution_times.rst", "examples_built/preprocessing/snr_in_cc.rst", "examples_built/quick_start/index.rst", "examples_built/quick_start/quick_start.rst", "examples_built/quick_start/sg_execution_times.rst", "examples_built/quick_start/tracking_introduction_eudx.rst", "examples_built/reconstruction/histology_resdnn.rst", "examples_built/reconstruction/index.rst", "examples_built/reconstruction/kfold_xval.rst", "examples_built/reconstruction/reconst_csa.rst", "examples_built/reconstruction/reconst_csd.rst", "examples_built/reconstruction/reconst_cti.rst", "examples_built/reconstruction/reconst_dki.rst", "examples_built/reconstruction/reconst_dki_micro.rst", "examples_built/reconstruction/reconst_dsi.rst", "examples_built/reconstruction/reconst_dsi_metrics.rst", "examples_built/reconstruction/reconst_dsid.rst", "examples_built/reconstruction/reconst_dti.rst", "examples_built/reconstruction/reconst_forecast.rst", "examples_built/reconstruction/reconst_fwdti.rst", "examples_built/reconstruction/reconst_gqi.rst", "examples_built/reconstruction/reconst_ivim.rst", "examples_built/reconstruction/reconst_mapmri.rst", "examples_built/reconstruction/reconst_mcsd.rst", "examples_built/reconstruction/reconst_msdki.rst", "examples_built/reconstruction/reconst_qtdmri.rst", "examples_built/reconstruction/reconst_qti.rst", "examples_built/reconstruction/reconst_qtiplus.rst", "examples_built/reconstruction/reconst_rumba.rst", "examples_built/reconstruction/reconst_sfm.rst", "examples_built/reconstruction/reconst_sh.rst", "examples_built/reconstruction/reconst_shore.rst", "examples_built/reconstruction/reconst_shore_metrics.rst", "examples_built/reconstruction/restore_dti.rst", "examples_built/reconstruction/sg_execution_times.rst", "examples_built/registration/affine_registration_3d.rst", "examples_built/registration/affine_registration_masks.rst", "examples_built/registration/bundle_group_registration.rst", "examples_built/registration/bundle_registration.rst", "examples_built/registration/bundlewarp_registration.rst", "examples_built/registration/index.rst", "examples_built/registration/register_binary_fuzzy.rst", "examples_built/registration/sg_execution_times.rst", "examples_built/registration/streamline_registration.rst", "examples_built/registration/syn_registration_2d.rst", "examples_built/registration/syn_registration_3d.rst", "examples_built/segmentation/brain_extraction_dwi_1.rst", "examples_built/segmentation/bundle_extraction.rst", "examples_built/segmentation/fast_streamline_search.rst", "examples_built/segmentation/index.rst", "examples_built/segmentation/segment_clustering_features.rst", "examples_built/segmentation/segment_clustering_metrics.rst", "examples_built/segmentation/segment_extending_clustering_framework.rst", "examples_built/segmentation/segment_quickbundles.rst", "examples_built/segmentation/sg_execution_times.rst", "examples_built/segmentation/tissue_classification.rst", "examples_built/simulations/index.rst", "examples_built/simulations/reconst_dsid_1.rst", "examples_built/simulations/sg_execution_times.rst", "examples_built/simulations/simulate_dki.rst", "examples_built/simulations/simulate_multi_tensor.rst", "examples_built/streamline_analysis/afq_tract_profiles.rst", "examples_built/streamline_analysis/bundle_assignment_maps.rst", "examples_built/streamline_analysis/bundle_shape_similarity.rst", "examples_built/streamline_analysis/cluster_confidence.rst", "examples_built/streamline_analysis/index.rst", "examples_built/streamline_analysis/path_length_map.rst", "examples_built/streamline_analysis/sg_execution_times.rst", "examples_built/streamline_analysis/streamline_length.rst", "examples_built/streamline_analysis/streamline_tools.rst", "examples_built/visualization/index.rst", "examples_built/visualization/sg_execution_times.rst", "examples_built/visualization/viz_advanced.rst", "examples_built/visualization/viz_bundles.rst", "examples_built/visualization/viz_roi_contour.rst", "examples_built/visualization/viz_slice.rst", "examples_built/workflows/combined_workflow_creation.rst", "examples_built/workflows/index.rst", "examples_built/workflows/sg_execution_times.rst", "examples_built/workflows/workflow_creation.rst", "faq.rst", "gimbal_lock.rst", "glossary.rst", "index.rst", "interfaces/basic_flow.rst", "interfaces/buan_flow.rst", "interfaces/bundle_segmentation_flow.rst", "interfaces/bundlewarp_registration_flow.rst", "interfaces/data_fetch.rst", "interfaces/denoise_flow.rst", "interfaces/gibbs_unringing_flow.rst", "interfaces/index.rst", "interfaces/motion_flow.rst", "interfaces/reconstruction_flow.rst", "interfaces/registration_flow.rst", "interfaces/tracking_flow.rst", "old_highlights.rst", "old_news.rst", "reconstruction_models_list.rst", "reference/dipy.rst", "reference/dipy.__config__.rst", "reference/dipy.align.rst", "reference/dipy.boots.rst", "reference/dipy.core.rst", "reference/dipy.data.rst", "reference/dipy.denoise.rst", "reference/dipy.direction.rst", "reference/dipy.io.rst", "reference/dipy.nn.rst", "reference/dipy.reconst.rst", "reference/dipy.segment.rst", "reference/dipy.sims.rst", "reference/dipy.stats.rst", "reference/dipy.tracking.rst", "reference/dipy.viz.rst", "reference/dipy.workflows.rst", "reference/index.rst", "reference_cmd/dipy_align_affine.rst", "reference_cmd/dipy_align_syn.rst", "reference_cmd/dipy_apply_transform.rst", "reference_cmd/dipy_buan_lmm.rst", "reference_cmd/dipy_buan_profiles.rst", "reference_cmd/dipy_bundlewarp.rst", "reference_cmd/dipy_correct_motion.rst", "reference_cmd/dipy_denoise_lpca.rst", "reference_cmd/dipy_denoise_mppca.rst", "reference_cmd/dipy_denoise_nlmeans.rst", "reference_cmd/dipy_denoise_patch2self.rst", "reference_cmd/dipy_evac_plus.rst", "reference_cmd/dipy_fetch.rst", "reference_cmd/dipy_fit_csa.rst", "reference_cmd/dipy_fit_csd.rst", "reference_cmd/dipy_fit_dki.rst", "reference_cmd/dipy_fit_dti.rst", "reference_cmd/dipy_fit_ivim.rst", "reference_cmd/dipy_fit_mapmri.rst", "reference_cmd/dipy_gibbs_ringing.rst", "reference_cmd/dipy_horizon.rst", "reference_cmd/dipy_info.rst", "reference_cmd/dipy_labelsbundles.rst", "reference_cmd/dipy_mask.rst", "reference_cmd/dipy_median_otsu.rst", "reference_cmd/dipy_recobundles.rst", "reference_cmd/dipy_reslice.rst", "reference_cmd/dipy_slr.rst", "reference_cmd/dipy_snr_in_cc.rst", "reference_cmd/dipy_split.rst", "reference_cmd/dipy_track.rst", "reference_cmd/dipy_track_pft.rst", "reference_cmd/index.rst", "release_notes/release0.10.rst", "release_notes/release0.11.rst", "release_notes/release0.12.rst", "release_notes/release0.13.rst", "release_notes/release0.14.rst", "release_notes/release0.15.rst", "release_notes/release0.16.rst", "release_notes/release0.6.rst", "release_notes/release0.7.rst", "release_notes/release0.8.rst", "release_notes/release0.9.rst", "release_notes/release1.0.rst", "release_notes/release1.1.rst", "release_notes/release1.2.rst", "release_notes/release1.3.rst", "release_notes/release1.4.rst", "release_notes/release1.4.1.rst", "release_notes/release1.5.rst", "release_notes/release1.6.rst", "release_notes/release1.7.rst", "stateoftheart.rst", "subscribe.rst", "theory/b_and_q.rst", "theory/bmatrix.rst", "theory/gqi.rst", "theory/index.rst", "theory/sh_basis.rst", "theory/spherical.rst", "user_guide/data.rst", "user_guide/dataset_list.rst", "user_guide/dependencies.rst", "user_guide/getting_started.rst", "user_guide/index.rst", "user_guide/installation.rst", "user_guide/introduction.rst", "user_guide/mission.rst"], "titles": ["API changes", "Publications", "DIPY Coding Style Guideline", "Commit message codes", "Configure git", "Development workflow", "Two and three dots in difference specs", "Following the latest source", "Making your own copy (fork) of DIPY", "Git for development", "Install git", "Introduction", "git resources", "Working with DIPY source code", "Maintainer workflow", "Making a patch", "Set up your fork", "DIPY Developer Guide", "Introduction", "A guide to making a DIPY release", "Developers", "Crossing-preserving contextual enhancement", "Fiber to bundle coherence measures", "Contextual Enhancement", "Computation times", "Fiber Tracking", "Linear fascicle evaluation (LiFE)", "Computation times", "Surface seeding for tractography", "Bootstrap and Closest Peak Direction Getters Example", "An introduction to the Deterministic Maximum Direction Getter", "Introduction to Basic Tracking", "Particle Filtering Tractography", "An introduction to the Probabilistic Direction Getter", "Parallel Transport Tractography", "Tracking with Robust Unbiased Model-BAsed Spherical Deconvolution (RUMBA-SD)", "Tracking with the Sparse Fascicle Model", "Using Various Stopping Criterion for Tractography", "File Formats", "Computation times", "Read/Write streamline files", "Examples", "Multiprocessing", "Parallel reconstruction using Q-Ball", "Parallel reconstruction using CSD", "Computation times", "Brain segmentation with median_otsu", "Denoise images using Adaptive Soft Coefficient Matching (ASCM)", "Suppress Gibbs oscillations", "Denoise images using Local PCA via empirical thresholds", "Denoise images using the Marcenko-Pastur PCA algorithm", "Denoise images using Non-Local Means (NLMEANS)", "Patch2Self: Self-Supervised Denoising via Statistical Independence", "Gradients and Spheres", "Preprocessing", "Between-volumes Motion Correction on DWI datasets", "Noise estimation using PIESNO", "Reslice diffusion datasets", "Computation times", "SNR estimation for Diffusion-Weighted Images", "Quick Start", "Getting started with DIPY", "Computation times", "Introduction to Basic Tracking", "Local reconstruction using the Histological ResDNN", "Reconstruction", "K-fold cross-validation for model comparison", "Reconstruct with Constant Solid Angle (Q-Ball)", "Reconstruction with Constrained Spherical Deconvolution", "Reconstruction of the diffusion signal with the correlation tensor model", "Reconstruction of the diffusion signal with the kurtosis tensor model", "Reconstruction of the diffusion signal with the WMTI model", "Reconstruct with Diffusion Spectrum Imaging", "Calculate DSI-based scalar maps", "DSI Deconvolution vs DSI", "Reconstruction of the diffusion signal with the Tensor model", "Crossing invariant fiber response function with FORECAST model", "Using the free water elimination model to remove DTI free water contamination", "Reconstruct with Generalized Q-Sampling Imaging", "Intravoxel incoherent motion", "Continuous and analytical diffusion signal modelling with MAP-MRI", "Reconstruction with Multi-Shell Multi-Tissue CSD", "Mean signal diffusion kurtosis imaging (MSDKI)", "Estimating diffusion time dependent q-space indices using qt-dMRI", "Reconstruct with Q-space Trajectory Imaging (QTI)", "Applying positivity constraints to Q-space Trajectory Imaging (QTI+)", "Reconstruction with Robust and Unbiased Model-BAsed Spherical Deconvolution", "Reconstruction with the Sparse Fascicle Model", "Signal Reconstruction Using Spherical Harmonics", "Continuous and analytical diffusion signal modelling with 3D-SHORE", "Calculate SHORE scalar maps", "Using the RESTORE algorithm for robust tensor fitting", "Computation times", "Affine Registration in 3D", "Affine Registration with Masks", "Groupwise Bundle Registration", "Direct Bundle Registration", "Nonrigid Bundle Registration with BundleWarp", "Registration", "Diffeomorphic Registration with binary and fuzzy images", "Computation times", "Applying image-based deformations to streamlines", "Symmetric Diffeomorphic Registration in 2D", "Symmetric Diffeomorphic Registration in 3D", "Brain segmentation with median_otsu", "Automatic Fiber Bundle Extraction with RecoBundles", "Fast Streamline Search", "Segmentation", "Tractography Clustering - Available Features", "Tractography Clustering - Available Metrics", "Enhancing QuickBundles with different metrics and features", "Tractography Clustering with QuickBundles", "Computation times", "Tissue Classification of a T1-weighted Structural Image", "Simulation", "DSI Deconvolution vs DSI", "Computation times", "DKI MultiTensor Simulation", "MultiTensor Simulation", "Extracting AFQ tract profiles from segmented bundles", "BUAN Bundle Assignment Maps Creation", "BUAN Bundle Shape Similarity Score", "Calculation of Outliers with Cluster Confidence Index", "Streamlines Analysis and Connectivity", "Calculate Path Length Map", "Computation times", "Streamline length and size reduction", "Connectivity Matrices, ROI Intersections and Density Maps", "Visualization", "Computation times", "Advanced interactive visualization", "Visualize bundles and metrics on bundles", "Visualization of ROI Surface Rendered with Streamlines", "Simple volume slicing", "Creating a new combined workflow", "Workflows", "Computation times", "Creating a new workflow.", "Frequently Asked Questions", "Gimbal lock", "Glossary", "Diffusion Imaging In Python - Documentation", "Introduction to command line interfaces", "BUndle ANalytics (BUAN) framework", "White Matter Bundle Segmentation with RecoBundles", "Nonrigid White Matter Bundle Registration with BundleWarp", "Downloading DIPY datasets", "Denoising", "Gibbs Unringing", "DIPY Workflows Interfaces", "Between-Volumes Motion Correction", "Reconstruction", "Registration", "Tracking", "Older Highlights", "Past Announcements", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dipy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">__config__</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">align</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">boots</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">denoise</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">reconst</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sims</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stats</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows</span></code>", "API Reference", "dipy_align_affine", "dipy_align_syn", "dipy_apply_transform", "dipy_buan_lmm", "dipy_buan_profiles", "dipy_bundlewarp", "dipy_correct_motion", "dipy_denoise_lpca", "dipy_denoise_mppca", "dipy_denoise_nlmeans", "dipy_denoise_patch2self", "dipy_evac_plus", "dipy_fetch", "dipy_fit_csa", "dipy_fit_csd", "dipy_fit_dki", "dipy_fit_dti", "dipy_fit_ivim", "dipy_fit_mapmri", "dipy_gibbs_ringing", "dipy_horizon", "dipy_info", "dipy_labelsbundles", "dipy_mask", "dipy_median_otsu", "dipy_recobundles", "dipy_reslice", "dipy_slr", "dipy_snr_in_cc", "dipy_split", "dipy_track", "dipy_track_pft", "Command Line Utilities Reference", "Release notes for DIPY version 0.10", "Release notes for DIPY version 0.11", "Release notes for DIPY version 0.12", "Release notes for DIPY version 0.13", "Release notes for DIPY version 0.14", "Release notes for DIPY version 0.15", "Release notes for DIPY version 0.16", "Release notes for DIPY version 0.6", "Release notes for DIPY version 0.7", "Release notes for DIPY version 0.8", "Release notes for DIPY version 0.9", "Release notes for DIPY version 1.0", "Release notes for DIPY version 1.1", "Release notes for DIPY version 1.2", "Release notes for DIPY version 1.3", "Release notes for DIPY version 1.4", "Release notes for DIPY version 1.4.1", "Release notes for DIPY version 1.5", "Release notes for DIPY version 1.6", "Release notes for DIPY version 1.7", "A quick overview of features", "Subscribe", "DIY Stuff about b and q", "The B matrix and Siemens DICOM", "Generalised Q-Sampling Imaging", "Theory and concepts", "Spherical Harmonic bases", "Spherical coordinates", "Data", "&lt;no title&gt;", "Dependencies", "Getting Started", "DIPY User Guide", "Installation", "What is DIPY?", "Mission statement"], "terms": {"here": [0, 4, 5, 8, 10, 11, 12, 15, 16, 18, 19, 20, 21, 22, 26, 30, 31, 35, 36, 37, 41, 44, 46, 47, 56, 57, 59, 61, 63, 66, 68, 70, 71, 75, 77, 78, 79, 81, 83, 84, 85, 86, 87, 93, 95, 96, 97, 104, 105, 108, 109, 111, 113, 117, 119, 124, 127, 130, 131, 132, 133, 139, 144, 145, 151, 154, 159, 161, 163, 165, 167, 168, 169, 171, 218, 226, 228, 231, 232, 235, 239, 241], "we": [0, 2, 5, 8, 15, 16, 18, 19, 20, 21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 159, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 202, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 238, 239, 241, 243], "provid": [0, 2, 26, 30, 31, 35, 36, 40, 50, 52, 61, 63, 68, 69, 70, 71, 76, 79, 80, 81, 82, 83, 84, 85, 89, 93, 94, 96, 97, 101, 103, 105, 108, 109, 110, 111, 122, 124, 130, 131, 132, 141, 142, 143, 145, 151, 153, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 193, 195, 196, 205, 208, 215, 216, 217, 219, 222, 226, 228, 235], "inform": [0, 2, 5, 10, 31, 32, 37, 40, 46, 47, 49, 50, 52, 61, 63, 64, 67, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 101, 104, 108, 109, 110, 111, 117, 119, 126, 138, 142, 143, 144, 145, 147, 150, 152, 153, 154, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 176, 185, 196, 215, 219, 222, 228, 235, 236, 237, 241], "about": [0, 2, 5, 15, 26, 33, 35, 43, 44, 50, 61, 68, 70, 71, 72, 75, 79, 80, 81, 82, 83, 84, 85, 86, 93, 101, 108, 109, 110, 111, 117, 124, 134, 137, 138, 139, 140, 142, 143, 144, 145, 146, 154, 159, 161, 162, 165, 166, 167, 168, 170, 171, 173, 196, 208, 212, 213, 217, 219, 221, 225, 236, 239, 241], "function": [0, 2, 3, 21, 26, 31, 33, 35, 36, 40, 41, 43, 44, 48, 50, 51, 53, 55, 56, 61, 63, 65, 67, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 102, 105, 106, 108, 109, 110, 117, 118, 126, 127, 130, 133, 138, 141, 142, 151, 153, 154, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 189, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 234, 235, 241], "class": [0, 2, 26, 40, 75, 77, 81, 91, 93, 102, 103, 106, 110, 113, 130, 134, 137, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 208, 215, 216, 217], "have": [0, 5, 7, 8, 10, 12, 14, 15, 16, 18, 19, 26, 29, 31, 33, 36, 37, 40, 41, 51, 52, 53, 56, 57, 59, 61, 63, 65, 66, 67, 68, 69, 70, 72, 75, 78, 79, 80, 81, 82, 84, 86, 87, 88, 91, 93, 95, 96, 97, 101, 103, 108, 109, 110, 111, 113, 117, 119, 122, 124, 126, 127, 130, 131, 133, 134, 137, 138, 139, 140, 141, 143, 144, 145, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 180, 193, 195, 200, 202, 208, 212, 215, 217, 218, 219, 222, 223, 230, 231, 234, 241], "been": [0, 2, 5, 14, 26, 37, 49, 50, 66, 70, 75, 79, 80, 95, 96, 101, 111, 113, 151, 159, 161, 165, 167, 168, 171, 234], "remov": [0, 5, 22, 26, 36, 40, 41, 46, 48, 49, 50, 65, 67, 71, 75, 82, 86, 92, 101, 102, 103, 104, 111, 122, 148, 154, 159, 161, 163, 164, 165, 167, 168, 171, 173, 194, 202, 208, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 241], "renam": [0, 15, 142, 209, 210, 215, 216, 217, 219, 221], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 18, 19, 21, 22, 26, 30, 31, 33, 36, 37, 40, 41, 44, 48, 49, 50, 52, 53, 56, 59, 61, 63, 64, 66, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 93, 94, 95, 96, 97, 99, 101, 102, 105, 106, 108, 109, 110, 113, 117, 118, 119, 121, 122, 126, 127, 130, 131, 133, 134, 138, 139, 140, 142, 143, 144, 145, 147, 148, 151, 152, 153, 154, 155, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 181, 182, 191, 193, 196, 199, 200, 201, 202, 205, 208, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 239, 241, 242], "deprec": [0, 2, 154, 161, 165, 167, 171, 208, 210, 212, 213, 214, 215, 219, 220, 221, 222, 224, 225, 226], "recommend": [0, 2, 40, 41, 48, 55, 68, 70, 72, 80, 83, 85, 86, 105, 106, 130, 133, 138, 147, 148, 150, 156, 159, 161, 166, 167, 171, 173, 177, 190, 191, 214, 228, 241], "dure": [0, 4, 5, 26, 55, 77, 80, 85, 91, 94, 101, 141, 150, 151, 152, 159, 161, 166, 167, 171, 173, 188, 189, 208, 213, 221], "differ": [0, 11, 21, 22, 26, 33, 36, 40, 41, 46, 47, 48, 50, 51, 52, 53, 56, 57, 66, 68, 69, 70, 72, 77, 79, 80, 81, 82, 83, 84, 87, 88, 91, 94, 96, 97, 99, 101, 102, 104, 105, 107, 108, 111, 112, 113, 117, 119, 126, 130, 133, 138, 139, 143, 145, 148, 152, 153, 154, 159, 161, 162, 163, 164, 166, 167, 168, 171, 172, 173, 176, 195, 196, 208, 212, 213, 216, 217, 219, 221, 222, 226, 228, 230, 231, 234, 235, 241], "releas": [0, 17, 141, 154, 155, 159, 167, 228], "circl": [0, 102, 159, 161, 171], "denois": [0, 21, 22, 41, 48, 54, 56, 58, 70, 81, 82, 91, 134, 141, 149, 154, 157, 162, 174, 182, 183, 184, 185, 194, 210, 217, 219, 222, 223, 225, 226, 227, 236, 237, 241], "localpca": [0, 50, 81, 174, 182, 211, 219, 222], "genpca": [0, 174], "can": [0, 2, 4, 5, 12, 14, 15, 16, 18, 19, 20, 21, 22, 26, 30, 31, 32, 33, 35, 36, 37, 40, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 133, 134, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 182, 185, 189, 190, 191, 195, 196, 200, 209, 213, 217, 219, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 238, 239, 241, 242], "us": [0, 1, 3, 4, 5, 10, 12, 16, 18, 19, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 45, 46, 48, 52, 53, 54, 57, 58, 59, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 84, 85, 86, 87, 90, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 239], "fewer": [0, 105, 164, 171], "imag": [0, 1, 2, 19, 21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 43, 44, 46, 48, 52, 53, 54, 55, 56, 57, 58, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 83, 86, 87, 89, 90, 91, 92, 93, 94, 97, 98, 100, 102, 103, 104, 107, 112, 115, 117, 119, 122, 124, 126, 127, 130, 131, 132, 133, 138, 140, 142, 147, 148, 149, 150, 153, 154, 156, 159, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 181, 182, 183, 188, 190, 191, 192, 195, 196, 198, 199, 205, 206, 209, 210, 213, 214, 217, 219, 221, 225, 228, 230, 234, 236, 237, 239, 242, 243], "than": [0, 2, 14, 15, 16, 19, 20, 22, 37, 47, 50, 52, 55, 64, 68, 70, 71, 75, 77, 79, 80, 82, 83, 85, 87, 93, 94, 105, 108, 117, 122, 124, 126, 127, 133, 139, 140, 151, 154, 155, 159, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 182, 195, 200, 202, 208, 209, 212, 215, 221, 225, 226, 241], "patch": [0, 13, 14, 17, 47, 49, 52, 147, 163, 173, 182, 183, 184, 185, 212, 219, 221, 224, 226], "voxel": [0, 21, 22, 26, 30, 31, 32, 33, 36, 37, 40, 41, 44, 46, 48, 49, 50, 52, 56, 57, 59, 61, 63, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 101, 104, 115, 117, 118, 124, 126, 127, 130, 133, 138, 142, 147, 151, 152, 153, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 182, 183, 185, 189, 192, 199, 201, 205, 206, 208, 209, 210, 215, 217, 218, 219, 221, 222, 228, 236, 237], "pca_noise_estim": [0, 49, 174, 227], "ha": [0, 2, 5, 12, 14, 19, 21, 26, 30, 31, 33, 37, 44, 49, 50, 52, 55, 56, 59, 63, 66, 67, 68, 70, 71, 72, 75, 77, 78, 79, 80, 82, 84, 85, 86, 93, 96, 101, 103, 108, 110, 111, 113, 126, 127, 133, 138, 139, 140, 143, 151, 153, 159, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 205, 208, 210, 213, 215, 217, 221, 227, 230, 234, 235, 241], "new": [0, 2, 3, 7, 9, 14, 15, 16, 18, 19, 20, 21, 22, 26, 40, 41, 52, 53, 55, 57, 61, 68, 83, 86, 94, 96, 110, 133, 135, 136, 141, 154, 155, 159, 161, 162, 163, 164, 166, 167, 168, 169, 171, 173, 201, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 234, 241], "argument": [0, 26, 79, 86, 95, 127, 134, 137, 144, 145, 146, 147, 148, 150, 151, 152, 153, 159, 161, 165, 166, 167, 170, 171, 172, 173, 207, 213, 215, 219, 221, 223, 224, 226], "images_as_sampl": [0, 163], "gener": [0, 1, 2, 5, 8, 11, 15, 18, 19, 20, 21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 138, 141, 142, 143, 148, 154, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 180, 188, 189, 193, 195, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 241], "furi": [0, 28, 31, 63, 64, 86, 101, 130, 138, 154, 213, 219, 220, 221, 225, 241], "minimum": [0, 22, 41, 83, 96, 105, 110, 154, 156, 159, 161, 163, 164, 166, 167, 168, 171, 173, 206, 213, 217, 220], "version": [0, 5, 19, 21, 22, 30, 47, 48, 49, 50, 51, 52, 77, 78, 99, 101, 117, 127, 138, 141, 142, 153, 154, 155, 157, 159, 161, 162, 165, 167, 168, 169, 171, 174, 228, 234, 236, 237, 238], "i": [0, 1, 2, 3, 4, 5, 6, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 238, 239, 241, 243], "distutil": [0, 19, 221, 225], "drop": [0, 209, 210, 214, 219, 225], "io": [0, 5, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 84, 86, 87, 89, 90, 91, 93, 94, 97, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 117, 119, 120, 122, 124, 127, 132, 133, 138, 154, 157, 159, 162, 168, 169, 171, 174, 208, 210, 212, 214, 215, 219, 220, 225, 226, 236, 237, 239], "bvectxt": [0, 154, 174, 225, 226], "modul": [0, 2, 26, 29, 43, 44, 46, 47, 48, 49, 50, 52, 56, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 104, 105, 106, 108, 109, 110, 111, 117, 120, 121, 127, 130, 138, 154, 157, 174, 208, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 230, 232, 234, 238, 241], "The": [0, 1, 2, 4, 6, 7, 8, 9, 12, 14, 15, 16, 18, 19, 20, 21, 22, 26, 30, 31, 32, 33, 35, 36, 37, 40, 41, 43, 46, 47, 48, 49, 50, 52, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 108, 110, 113, 117, 118, 119, 122, 124, 126, 127, 130, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 151, 152, 153, 154, 155, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 182, 183, 185, 190, 192, 195, 196, 197, 200, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 232, 233, 234, 236, 241, 243], "default": [0, 5, 8, 15, 21, 22, 31, 35, 36, 43, 46, 51, 52, 57, 61, 63, 64, 73, 75, 79, 85, 86, 87, 91, 93, 95, 99, 104, 105, 106, 108, 109, 113, 124, 130, 133, 134, 137, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 212, 213, 215, 216, 217, 219, 222, 223, 224, 225, 226, 227, 234, 241], "option": [0, 5, 14, 15, 31, 43, 48, 50, 52, 63, 67, 70, 79, 80, 81, 86, 93, 96, 131, 134, 137, 142, 146, 147, 148, 150, 151, 152, 153, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 207, 208, 209, 210, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 238, 241], "command": [0, 4, 5, 7, 12, 15, 19, 22, 48, 61, 133, 134, 137, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162, 173, 189, 199, 210, 215, 216, 217, 219, 221, 225, 241], "line": [0, 2, 4, 5, 7, 14, 15, 19, 22, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 50, 55, 57, 59, 63, 69, 82, 83, 85, 96, 105, 106, 120, 122, 124, 127, 130, 131, 132, 133, 134, 137, 140, 141, 143, 144, 145, 149, 151, 153, 154, 159, 164, 166, 167, 171, 172, 173, 189, 199, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 225, 235, 241], "patch2self": [0, 41, 54, 58, 154, 173, 174, 185, 223, 224, 225, 226], "ridg": [0, 52, 163, 167, 173, 185, 225], "ol": [0, 52, 163, 167, 173, 185, 190, 191, 225], "track": [0, 1, 2, 4, 14, 22, 26, 27, 28, 29, 30, 32, 33, 34, 37, 40, 60, 62, 75, 87, 96, 97, 101, 108, 109, 110, 119, 122, 124, 126, 127, 130, 131, 132, 142, 149, 154, 157, 159, 161, 162, 164, 165, 167, 168, 170, 174, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228], "pmf": [0, 29, 33, 34, 35, 153, 174, 210, 213, 225], "parent": [0, 161, 173, 174], "pmfgen": [0, 174], "mandatori": [0, 134, 137, 159], "paramet": [0, 2, 30, 32, 37, 40, 44, 46, 47, 48, 49, 50, 52, 61, 66, 69, 70, 71, 73, 75, 78, 79, 80, 81, 82, 84, 85, 87, 89, 91, 96, 97, 99, 102, 104, 105, 113, 117, 134, 137, 138, 145, 147, 151, 152, 153, 154, 175, 176, 184, 185, 191, 192, 195, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 230], "sphere": [0, 21, 22, 29, 30, 32, 33, 34, 35, 36, 37, 41, 43, 44, 54, 58, 64, 67, 68, 72, 74, 75, 76, 78, 80, 81, 82, 83, 86, 87, 88, 89, 91, 115, 118, 127, 153, 156, 157, 159, 162, 164, 166, 167, 169, 171, 172, 173, 174, 208, 210, 213, 215, 217, 219, 220, 234, 235], "vertic": [0, 22, 28, 36, 53, 68, 72, 74, 82, 86, 87, 88, 115, 118, 161, 162, 163, 164, 167, 169, 171, 172, 174, 213, 235], "correspond": [0, 1, 2, 21, 40, 48, 50, 52, 59, 61, 66, 73, 79, 81, 82, 83, 84, 85, 86, 89, 90, 102, 103, 108, 117, 119, 126, 131, 138, 153, 159, 161, 163, 164, 166, 167, 171, 172, 173, 175, 180, 194, 228, 241], "spheric": [0, 2, 21, 22, 25, 27, 30, 32, 33, 37, 41, 43, 44, 50, 53, 64, 65, 66, 67, 71, 76, 81, 82, 85, 87, 92, 118, 141, 149, 154, 155, 156, 157, 161, 162, 163, 164, 166, 171, 172, 173, 174, 188, 189, 208, 213, 215, 216, 217, 219, 221, 233], "distribut": [0, 21, 22, 26, 30, 31, 33, 36, 41, 43, 50, 52, 53, 56, 63, 64, 66, 67, 68, 75, 76, 78, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 93, 113, 127, 142, 147, 151, 153, 156, 157, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 182, 183, 185, 189, 205, 206, 217, 220, 232, 234, 241], "valu": [0, 22, 26, 30, 31, 33, 37, 40, 41, 43, 48, 49, 50, 52, 53, 55, 56, 59, 61, 63, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 96, 97, 99, 105, 113, 117, 118, 119, 121, 122, 124, 127, 130, 138, 140, 142, 143, 145, 147, 148, 150, 151, 153, 154, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 180, 182, 183, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 231, 234, 236, 237, 239], "get_pmf_valu": [0, 164, 174], "point": [0, 2, 5, 15, 16, 19, 21, 22, 26, 31, 33, 35, 36, 41, 48, 53, 63, 66, 70, 78, 80, 81, 82, 83, 87, 88, 96, 97, 108, 109, 110, 111, 118, 126, 138, 139, 140, 145, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 180, 193, 194, 201, 202, 205, 206, 208, 210, 213, 214, 215, 219, 220, 221, 222, 224, 225, 226, 232, 235], "xyz": [0, 53, 88, 161, 162, 163, 164, 165, 167, 171, 221], "which": [0, 2, 3, 4, 5, 19, 21, 22, 26, 29, 30, 31, 33, 35, 36, 37, 40, 41, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 59, 61, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 93, 94, 96, 97, 99, 101, 102, 103, 104, 105, 110, 111, 115, 117, 118, 119, 124, 126, 127, 130, 131, 132, 133, 138, 142, 144, 147, 148, 151, 152, 153, 154, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 182, 183, 195, 212, 219, 222, 228, 231, 234, 239, 241], "return": [0, 15, 30, 32, 43, 46, 49, 50, 67, 68, 69, 70, 73, 75, 79, 80, 81, 83, 86, 87, 90, 95, 97, 99, 101, 102, 103, 104, 106, 108, 109, 110, 118, 119, 126, 127, 130, 134, 151, 153, 183, 209, 210, 213, 216, 218, 220, 225, 227], "locat": [0, 2, 56, 75, 91, 94, 102, 119, 134, 137, 143, 147, 151, 152, 159, 161, 162, 163, 164, 171], "orient": [0, 21, 22, 28, 30, 31, 33, 43, 59, 63, 64, 67, 68, 75, 76, 78, 80, 81, 82, 83, 84, 86, 87, 89, 93, 96, 101, 108, 109, 119, 127, 138, 142, 151, 153, 154, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 189, 212, 213, 219, 234], "segment": [0, 2, 21, 31, 32, 36, 43, 44, 48, 50, 54, 58, 59, 63, 64, 66, 67, 70, 71, 75, 81, 82, 86, 96, 97, 101, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 120, 121, 123, 125, 126, 134, 143, 149, 153, 154, 157, 159, 164, 167, 169, 171, 174, 195, 199, 205, 206, 210, 215, 216, 219, 221, 224, 225, 226, 227], "from": [0, 2, 4, 6, 7, 10, 12, 13, 14, 16, 18, 19, 20, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 130, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 151, 153, 154, 155, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 182, 185, 189, 190, 191, 195, 199, 201, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 234, 235, 236, 237, 239], "metric": [0, 1, 41, 48, 69, 71, 75, 77, 82, 85, 86, 93, 94, 95, 96, 99, 101, 102, 103, 107, 108, 111, 112, 119, 121, 122, 128, 129, 151, 152, 153, 154, 157, 162, 164, 165, 166, 167, 170, 173, 174, 175, 176, 178, 190, 191, 192, 193, 202, 205, 206, 208, 210, 213, 214, 215, 216, 219, 222, 224, 225, 226], "import": [0, 3, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 138, 159, 161, 162, 163, 164, 165, 167, 168, 169, 172, 174, 208, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 224, 225, 226, 227, 230, 236, 239, 241], "resamplefeatur": [0, 108, 119, 174], "wa": [0, 5, 6, 19, 20, 26, 40, 47, 48, 50, 51, 56, 59, 64, 67, 70, 71, 76, 77, 79, 80, 81, 82, 85, 86, 87, 91, 93, 96, 117, 124, 127, 134, 139, 142, 151, 154, 155, 159, 161, 162, 163, 165, 166, 167, 168, 171, 172, 173, 215, 216, 217, 218, 219], "replac": [0, 4, 40, 55, 57, 91, 124, 147, 154, 159, 163, 167, 168, 171, 210, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 224, 239], "featurespe": [0, 108, 109, 110, 119, 174, 210], "name": [0, 2, 5, 8, 14, 15, 16, 18, 19, 34, 61, 75, 81, 93, 113, 127, 134, 137, 139, 143, 144, 145, 146, 147, 151, 152, 154, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 176, 177, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 198, 199, 201, 203, 204, 205, 206, 208, 210, 211, 213, 214, 217, 219, 220, 221, 222, 224, 230, 236, 237, 241], "number": [0, 1, 19, 28, 32, 33, 40, 43, 44, 46, 48, 50, 52, 53, 55, 56, 61, 66, 68, 70, 75, 77, 79, 81, 83, 84, 85, 86, 87, 93, 94, 95, 96, 97, 99, 104, 108, 109, 110, 111, 113, 124, 126, 127, 140, 142, 148, 152, 153, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 187, 188, 189, 194, 195, 196, 199, 201, 202, 204, 205, 206, 208, 210, 213, 214, 217, 218, 219, 222, 224, 225, 226, 228, 232], "core": [0, 4, 10, 20, 21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 46, 47, 49, 50, 53, 55, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 101, 104, 115, 117, 118, 122, 124, 127, 132, 148, 154, 157, 159, 162, 163, 164, 165, 167, 169, 170, 171, 173, 174, 188, 189, 194, 201, 208, 210, 212, 215, 216, 217, 219, 220, 221, 224, 227, 238, 239], "thread": [0, 159, 163, 166, 167, 168, 171, 173, 202, 208, 209, 213, 214, 224, 226], "standard": [0, 2, 22, 41, 47, 51, 56, 59, 70, 71, 74, 77, 81, 82, 83, 88, 91, 102, 105, 115, 119, 133, 147, 154, 156, 159, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 176, 182, 183, 191, 208, 213, 217, 219, 224, 226, 228, 230, 235, 236, 237, 238, 241], "num_thread": [0, 159, 163, 168, 171, 173, 202, 223, 224], "openmp": [0, 154, 159, 163, 168, 171, 173, 202, 208, 210, 211], "parallel": [0, 25, 27, 33, 36, 41, 42, 45, 56, 68, 76, 80, 83, 86, 133, 141, 151, 159, 161, 163, 164, 167, 168, 169, 171, 173, 188, 189, 193, 202, 209, 210, 213, 217, 219, 222, 225, 226, 227], "num_process": [0, 33, 36, 43, 44, 48, 68, 86, 148, 159, 163, 164, 167, 173, 188, 189, 194, 201], "multiprocess": [0, 43, 44, 154, 164, 167, 173, 188, 189, 209, 210, 213, 217, 218, 224], "packag": [0, 2, 19, 31, 63, 77, 79, 80, 88, 91, 159, 161, 162, 165, 166, 167, 168, 171, 173, 208, 212, 214, 216, 217, 219, 222, 224, 230, 231, 242], "logic": [0, 93, 166, 167, 171, 208, 215], "when": [0, 1, 2, 3, 4, 5, 6, 15, 19, 31, 32, 37, 40, 63, 70, 72, 77, 80, 85, 86, 91, 95, 96, 101, 108, 109, 110, 117, 119, 126, 127, 131, 134, 137, 138, 139, 153, 159, 161, 162, 163, 165, 166, 167, 168, 170, 171, 172, 173, 176, 208, 210, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 230, 234, 241], "If": [0, 1, 2, 5, 8, 14, 15, 18, 19, 20, 26, 29, 31, 32, 40, 41, 43, 44, 52, 63, 68, 69, 72, 79, 81, 83, 85, 86, 87, 91, 93, 101, 105, 108, 109, 122, 124, 126, 130, 132, 133, 138, 143, 144, 145, 152, 153, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 180, 182, 183, 184, 185, 188, 189, 191, 194, 195, 199, 201, 202, 205, 206, 208, 229, 230, 231, 235, 236, 241, 242], "none": [0, 26, 31, 36, 41, 43, 44, 47, 49, 50, 52, 61, 63, 67, 68, 72, 73, 74, 75, 78, 82, 86, 88, 89, 90, 91, 93, 94, 96, 101, 103, 115, 117, 118, 121, 133, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 182, 189, 200, 202, 216, 217, 223, 224], "omp_num_thread": [0, 159, 163, 168, 171, 173, 202], "environ": [0, 64, 141, 159, 163, 168, 171, 173, 202, 210, 241], "variabl": [0, 26, 41, 50, 75, 79, 87, 94, 101, 130, 154, 156, 159, 161, 163, 166, 167, 168, 171, 173, 202, 208, 210, 213, 216, 217, 218, 221, 223, 224, 227, 241], "set": [0, 2, 4, 5, 9, 13, 14, 15, 19, 21, 22, 26, 28, 29, 31, 32, 35, 36, 37, 43, 44, 46, 47, 49, 50, 52, 53, 56, 57, 59, 63, 66, 69, 70, 77, 79, 80, 81, 83, 85, 86, 87, 88, 93, 94, 95, 96, 97, 99, 101, 104, 105, 108, 110, 111, 113, 118, 119, 121, 122, 124, 126, 127, 130, 131, 132, 133, 139, 145, 147, 148, 152, 153, 154, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 176, 180, 182, 185, 193, 202, 208, 209, 210, 212, 213, 214, 217, 221, 222, 225, 226, 227, 230, 231, 236, 237, 241], "all": [0, 2, 3, 4, 5, 15, 16, 19, 22, 26, 29, 31, 33, 36, 37, 40, 41, 48, 50, 52, 56, 59, 61, 63, 65, 66, 68, 69, 70, 71, 72, 75, 77, 79, 80, 81, 82, 83, 85, 86, 91, 93, 94, 95, 96, 101, 105, 106, 108, 109, 117, 119, 121, 126, 127, 130, 133, 134, 137, 139, 141, 143, 146, 148, 150, 154, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 187, 200, 202, 210, 212, 215, 219, 220, 221, 224, 236], "avail": [0, 10, 37, 44, 56, 61, 65, 69, 70, 81, 82, 83, 85, 93, 97, 107, 110, 112, 113, 127, 130, 131, 134, 137, 138, 141, 142, 146, 147, 148, 151, 152, 153, 154, 155, 159, 161, 162, 163, 166, 167, 168, 171, 173, 176, 187, 202, 208, 210, 215, 217, 226, 230, 231, 234, 236], "maximum": [0, 25, 27, 37, 41, 78, 83, 86, 88, 95, 106, 110, 148, 153, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 176, 180, 205, 206, 212, 213, 217, 225, 234], "num_cpu_cor": 0, "select": [0, 5, 21, 22, 26, 36, 48, 50, 64, 66, 71, 79, 80, 81, 82, 83, 85, 87, 102, 105, 121, 153, 159, 163, 164, 166, 167, 168, 171, 173, 176, 177, 205, 208, 228, 234], "an": [0, 2, 4, 5, 12, 15, 19, 20, 21, 25, 26, 27, 28, 29, 31, 32, 35, 36, 37, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 61, 63, 65, 66, 67, 68, 70, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 99, 101, 102, 103, 104, 106, 108, 109, 110, 113, 115, 117, 118, 119, 122, 124, 127, 130, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 185, 188, 189, 190, 191, 193, 194, 195, 201, 202, 208, 209, 212, 213, 215, 216, 217, 219, 220, 221, 222, 225, 226, 227, 230, 231, 234, 239, 241, 242], "error": [0, 19, 26, 40, 43, 44, 66, 73, 75, 77, 90, 159, 161, 162, 163, 164, 165, 166, 167, 168, 171, 173, 176, 188, 189, 194, 201, 202, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 241], "rais": [0, 159, 163, 164, 165, 166, 168, 173, 188, 189, 194, 201, 202, 208, 210, 211, 212, 213, 215, 217], "same": [0, 2, 5, 12, 18, 26, 29, 30, 31, 40, 44, 52, 56, 57, 63, 68, 71, 75, 77, 78, 79, 80, 82, 83, 86, 91, 93, 94, 96, 97, 101, 103, 105, 106, 108, 109, 110, 111, 119, 120, 121, 124, 126, 131, 133, 138, 139, 143, 144, 147, 153, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 209, 210, 215, 219, 221, 222, 224, 226, 228, 229, 231, 241], "directli": [0, 4, 5, 14, 31, 33, 63, 66, 81, 82, 96, 97, 138, 144, 152, 159, 161, 165, 167, 168, 173, 209, 211, 234], "directiongett": [0, 164, 167, 174, 212, 225], "direct": [0, 2, 21, 22, 25, 26, 27, 28, 31, 32, 34, 35, 36, 37, 41, 43, 44, 49, 50, 52, 56, 63, 66, 67, 68, 69, 70, 74, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 97, 98, 100, 102, 103, 115, 117, 119, 122, 124, 127, 132, 138, 141, 147, 151, 153, 154, 156, 157, 159, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 188, 189, 202, 205, 208, 209, 210, 211, 212, 215, 216, 217, 219, 221, 225, 230, 231, 234, 235, 236, 237], "closest_peak_direction_gett": [0, 174], "basedirectiongett": [0, 174], "basepmfdirectiongett": [0, 174], "reconst": [0, 21, 22, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 48, 50, 59, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 115, 117, 122, 124, 127, 132, 157, 164, 174, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 225, 239], "eudxdirectiongett": [0, 164, 174], "eudx_direction_gett": [0, 174], "migrat": [0, 154, 225], "tavi": 0, "azur": [0, 154, 220, 221, 222, 223, 225], "depend": [0, 31, 33, 41, 52, 59, 63, 65, 68, 70, 79, 81, 82, 92, 94, 108, 113, 127, 138, 142, 147, 148, 151, 153, 154, 159, 161, 162, 163, 167, 168, 169, 171, 173, 192, 210, 213, 215, 217, 219, 220, 223, 225, 241], "ad": [0, 2, 3, 4, 5, 15, 21, 37, 43, 44, 50, 64, 69, 70, 80, 81, 91, 97, 133, 139, 141, 142, 143, 154, 159, 163, 165, 167, 168, 169, 171, 173, 174, 176, 182, 183, 190, 191, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 241], "tqdm": [0, 154, 222], "registr": [0, 1, 55, 100, 101, 105, 106, 119, 121, 141, 149, 150, 154, 157, 159, 162, 165, 168, 172, 173, 175, 180, 197, 200, 202, 208, 210, 212, 213, 214, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 236, 237, 241], "interp": [0, 159, 222], "method": [0, 1, 21, 26, 31, 37, 48, 49, 50, 52, 55, 56, 63, 66, 68, 69, 70, 74, 75, 79, 80, 81, 82, 85, 86, 91, 95, 96, 97, 105, 108, 109, 110, 111, 113, 115, 119, 122, 124, 126, 130, 131, 133, 134, 137, 141, 145, 148, 149, 150, 151, 152, 154, 161, 163, 164, 166, 167, 168, 169, 173, 180, 182, 183, 184, 185, 194, 199, 212, 213, 215, 216, 217, 220, 221, 223, 225, 226, 227, 236, 237, 241], "align": [0, 21, 22, 55, 57, 59, 64, 69, 70, 71, 82, 93, 94, 95, 96, 97, 99, 101, 102, 103, 105, 117, 130, 133, 138, 139, 145, 151, 152, 157, 161, 163, 165, 167, 168, 171, 174, 176, 202, 208, 210, 211, 217, 221, 222, 223, 225, 227], "imaffin": [0, 93, 94, 101, 103, 174, 210, 219, 225], "affinemap": [0, 93, 94, 103, 174, 208, 212, 220, 222, 227], "transform": [0, 21, 26, 40, 46, 48, 55, 57, 68, 69, 75, 79, 86, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 119, 127, 130, 131, 133, 138, 139, 140, 144, 145, 149, 154, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 180, 181, 200, 202, 208, 213, 214, 216, 217, 218, 219, 221, 222, 226, 227, 230], "interpol": [0, 32, 37, 40, 47, 49, 50, 52, 57, 64, 71, 73, 76, 79, 83, 90, 96, 127, 133, 140, 154, 159, 167, 171, 173, 174, 201, 210, 215, 219, 223, 225, 227], "transform_invers": [0, 102, 103, 159, 174], "tissu": [0, 31, 32, 41, 48, 63, 65, 69, 70, 75, 77, 79, 80, 82, 83, 84, 85, 92, 101, 107, 112, 117, 127, 148, 151, 153, 154, 156, 162, 166, 167, 169, 171, 173, 174, 191, 209, 210, 218, 219, 220, 221, 222, 236, 237], "tissueclassifierhmrf": [0, 81, 113, 174, 222], "now": [0, 4, 5, 7, 8, 14, 15, 16, 19, 22, 26, 35, 36, 40, 44, 47, 48, 52, 53, 56, 61, 68, 69, 70, 72, 73, 75, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 93, 94, 95, 96, 97, 101, 102, 103, 105, 110, 113, 118, 121, 122, 124, 127, 130, 133, 134, 137, 139, 141, 142, 154, 155, 161, 167, 208, 209, 215, 216, 217, 234, 241], "check": [0, 2, 5, 15, 19, 52, 57, 61, 68, 70, 75, 80, 86, 102, 109, 110, 142, 147, 148, 150, 151, 152, 153, 159, 161, 162, 163, 165, 166, 168, 171, 173, 181, 182, 187, 191, 196, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 221, 222, 225, 228, 241], "toler": [0, 95, 122, 159, 161, 163, 164, 165, 167, 168, 171, 208, 210, 213, 225], "base": [0, 1, 5, 22, 25, 26, 27, 41, 43, 44, 48, 49, 50, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 82, 88, 89, 90, 92, 94, 96, 97, 98, 100, 105, 119, 122, 124, 127, 134, 137, 141, 142, 145, 147, 148, 149, 154, 159, 161, 162, 164, 165, 166, 168, 169, 170, 171, 174, 180, 183, 185, 194, 197, 200, 202, 208, 209, 210, 212, 213, 216, 217, 219, 220, 221, 222, 225, 227, 231, 233, 236, 237], "stop": [0, 5, 22, 25, 27, 29, 30, 31, 33, 34, 35, 41, 63, 127, 153, 159, 167, 168, 171, 173, 176, 205, 206, 213, 217, 219, 221], "criterion": [0, 2, 22, 25, 27, 29, 30, 33, 34, 35, 41, 127, 152, 153, 163, 167, 171, 173, 205], "everi": [0, 19, 26, 33, 36, 40, 53, 80, 83, 87, 96, 108, 109, 118, 126, 127, 130, 134, 137, 138, 161, 162, 167, 168, 170, 171, 173, 213, 215, 228, 241], "iter": [0, 53, 55, 59, 66, 68, 72, 86, 88, 93, 94, 95, 99, 101, 102, 103, 113, 118, 134, 137, 159, 161, 163, 166, 167, 168, 169, 171, 173, 174, 175, 176, 180, 199, 208, 212, 219, 224], "previous": [0, 46, 53, 73, 77, 81, 82, 83, 93, 104, 108, 109, 110, 113, 118, 134, 137, 152, 159, 167, 168, 171], "onli": [0, 2, 5, 6, 8, 14, 16, 19, 21, 22, 26, 36, 37, 40, 43, 48, 50, 52, 57, 61, 66, 68, 70, 72, 73, 75, 76, 77, 78, 80, 81, 82, 86, 87, 90, 91, 94, 96, 101, 102, 108, 109, 110, 111, 117, 118, 119, 127, 131, 134, 137, 138, 142, 143, 147, 148, 151, 152, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 185, 190, 191, 194, 195, 201, 202, 208, 209, 210, 213, 215, 217, 219, 220, 222, 227, 230, 231, 234], "10th": [0, 159], "thi": [0, 2, 3, 4, 5, 6, 7, 8, 11, 14, 15, 16, 19, 21, 22, 26, 29, 30, 31, 32, 33, 35, 36, 37, 40, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 133, 134, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 234, 235, 241, 242, 243], "mai": [0, 2, 4, 5, 7, 11, 37, 52, 57, 68, 69, 70, 71, 75, 79, 80, 81, 82, 93, 94, 99, 101, 119, 131, 134, 137, 147, 148, 150, 153, 155, 159, 161, 164, 165, 166, 167, 168, 171, 172, 173, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 199, 201, 203, 205, 206, 208, 210, 211, 212, 213, 214, 219, 220, 221, 223, 224, 225, 226, 227, 230, 231, 241], "result": [0, 2, 21, 22, 26, 29, 31, 35, 46, 47, 48, 49, 50, 52, 57, 61, 63, 64, 68, 70, 75, 79, 80, 81, 82, 83, 85, 86, 87, 91, 93, 94, 97, 99, 101, 102, 104, 106, 108, 110, 111, 113, 122, 127, 134, 137, 139, 140, 142, 147, 148, 149, 150, 154, 159, 161, 162, 163, 164, 166, 167, 168, 171, 172, 173, 178, 179, 180, 182, 183, 184, 185, 194, 195, 199, 203, 204, 213, 219, 224, 225, 238, 239], "earlier": [0, 144], "termin": [0, 119, 141, 142, 146, 159, 161, 167, 241], "previou": [0, 5, 56, 70, 71, 81, 93, 97, 141, 142, 143, 153, 159, 161, 163, 164, 166, 167, 171, 173, 209, 234, 241], "reconstruct": [0, 22, 30, 31, 32, 33, 35, 36, 37, 42, 45, 48, 49, 56, 59, 61, 63, 74, 76, 77, 79, 80, 85, 89, 92, 115, 138, 142, 147, 148, 149, 153, 154, 157, 161, 162, 163, 166, 167, 169, 173, 188, 190, 191, 192, 209, 210, 211, 212, 215, 217, 220, 221, 222, 223, 224, 226, 228, 234, 236, 237, 239], "csdeconv": [0, 21, 22, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 63, 66, 68, 86, 87, 174, 209, 211, 216, 221], "auto_respons": [0, 174, 211], "auto_response_ssst": [0, 21, 22, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 63, 66, 68, 86, 87, 174], "response_from_mask": [0, 81, 174], "response_from_mask_ssst": [0, 68, 174], "sim": [0, 21, 68, 74, 82, 86, 88, 115, 117, 118, 157, 161, 162, 167, 174, 210, 213, 215, 219], "multi_shell_fiber_respons": [0, 81, 174], "move": [0, 13, 21, 22, 40, 53, 79, 88, 91, 93, 94, 95, 96, 97, 101, 102, 103, 105, 118, 127, 130, 133, 142, 144, 145, 151, 152, 154, 159, 161, 163, 165, 167, 168, 169, 171, 172, 173, 175, 176, 177, 180, 202, 208, 210, 211, 213, 214, 217, 219, 221, 222, 224, 225], "mcsd": [0, 81, 174, 220, 225], "In": [0, 2, 9, 13, 18, 19, 21, 22, 26, 30, 31, 32, 33, 36, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 61, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 101, 102, 108, 115, 117, 118, 119, 124, 126, 127, 130, 131, 133, 134, 137, 138, 139, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 159, 161, 163, 165, 166, 167, 168, 171, 172, 173, 193, 208, 222, 230, 231, 234, 241, 242], "prior": [0, 49, 50, 122, 147, 161, 168, 218], "user": [0, 5, 12, 15, 16, 19, 37, 61, 69, 72, 79, 84, 86, 93, 95, 97, 105, 130, 142, 143, 147, 148, 152, 154, 159, 161, 165, 166, 168, 169, 171, 172, 173, 208, 212, 213, 219, 225, 232, 241], "scipi": [0, 2, 59, 64, 66, 70, 71, 77, 79, 127, 138, 154, 159, 161, 167, 168, 171, 208, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 225, 238, 241], "memori": [0, 26, 33, 36, 37, 67, 72, 79, 106, 138, 154, 159, 161, 165, 166, 167, 169, 173, 199, 208, 209, 211, 213, 217, 219, 221, 223, 225, 228], "overlap": [0, 83, 96, 102, 103, 154, 168, 221], "bug": [0, 3, 4, 5, 15, 141, 154, 159, 208, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 225, 227], "occur": [0, 77, 85, 167, 171], "multi_median": [0, 154, 174, 221], "caus": [0, 40, 70, 139, 159, 161, 163, 167, 168, 171, 173, 208, 216, 217], "overli": 0, "smooth": [0, 21, 22, 47, 49, 64, 70, 71, 80, 81, 83, 86, 93, 99, 113, 159, 161, 163, 167, 168, 171, 173, 175, 176, 201, 215], "output": [0, 2, 5, 6, 22, 31, 37, 46, 47, 49, 50, 51, 52, 63, 70, 88, 99, 104, 105, 110, 121, 130, 134, 137, 143, 144, 147, 148, 150, 151, 152, 153, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 173, 207, 208, 209, 210, 213, 216, 217, 219, 221, 222, 223, 225], "fix": [0, 1, 3, 4, 5, 15, 19, 22, 32, 37, 79, 96, 137, 145, 154, 159, 161, 166, 167, 168, 169, 171, 172, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "regardless": [0, 167, 171], "": [0, 1, 2, 4, 5, 11, 12, 14, 15, 19, 20, 21, 22, 26, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 55, 59, 61, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 120, 121, 124, 126, 127, 130, 131, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 155, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 216, 218, 219, 222, 225, 227, 228, 230, 231, 232, 234, 236, 237, 241], "instal": [0, 2, 5, 7, 13, 17, 19, 80, 137, 141, 208, 210, 211, 213, 216, 217, 218, 219, 220, 221, 242], "via": [0, 5, 19, 21, 22, 26, 41, 54, 58, 82, 87, 89, 122, 134, 137, 141, 159, 161, 162, 166, 167, 168, 171, 173, 176, 208, 212, 230, 231, 241], "median_otsu": [0, 21, 41, 43, 44, 48, 50, 54, 58, 59, 64, 67, 70, 71, 75, 81, 82, 86, 101, 102, 103, 107, 112, 173, 174, 199, 219, 221], "threshold": [0, 3, 22, 31, 32, 41, 52, 54, 58, 59, 63, 68, 77, 79, 80, 81, 82, 86, 105, 108, 109, 110, 111, 119, 121, 122, 143, 147, 151, 153, 159, 163, 164, 167, 171, 172, 173, 174, 176, 181, 182, 185, 188, 189, 190, 191, 192, 193, 195, 196, 200, 202, 203, 205, 206, 210, 213, 216, 217, 218, 219, 221], "should": [0, 2, 3, 4, 5, 8, 11, 14, 19, 26, 33, 37, 41, 50, 52, 55, 64, 66, 67, 68, 69, 70, 75, 79, 80, 81, 82, 83, 85, 86, 99, 108, 124, 126, 127, 134, 137, 138, 142, 150, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 177, 189, 193, 195, 208, 210, 211, 213, 218, 219, 220, 222, 224, 225, 226, 227, 239, 241], "process": [0, 2, 21, 22, 26, 43, 44, 47, 51, 52, 61, 68, 69, 70, 71, 77, 79, 82, 83, 93, 95, 101, 102, 108, 110, 121, 126, 130, 134, 137, 141, 143, 147, 148, 150, 151, 152, 153, 154, 159, 161, 162, 163, 165, 166, 167, 168, 169, 171, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 199, 201, 203, 210, 219, 221, 225, 234, 241], "pipelin": [0, 36, 52, 93, 94, 130, 133, 154, 159, 166, 167, 221, 222, 225], "after": [0, 5, 8, 21, 22, 32, 48, 51, 52, 68, 79, 83, 95, 96, 97, 101, 102, 105, 111, 113, 120, 126, 130, 133, 137, 140, 144, 145, 147, 148, 159, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 176, 185, 200, 206, 210, 215, 216, 217, 221, 224, 241], "make": [0, 2, 3, 4, 9, 12, 13, 14, 16, 17, 43, 46, 52, 56, 67, 73, 75, 79, 80, 81, 83, 94, 96, 99, 102, 104, 105, 108, 109, 110, 119, 122, 124, 127, 130, 131, 134, 137, 138, 143, 145, 159, 161, 162, 164, 165, 167, 168, 169, 170, 171, 172, 173, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 225, 226, 229, 231, 234, 241, 243], "sure": [0, 2, 4, 5, 19, 67, 75, 94, 102, 108, 109, 110, 119, 130, 143, 144, 145, 159, 168, 170, 172, 241], "still": [0, 5, 19, 31, 35, 52, 59, 63, 72, 75, 80, 83, 85, 99, 127, 151, 161, 165, 167, 168, 171, 209, 210, 217, 222, 234, 241], "oper": [0, 2, 21, 22, 40, 43, 59, 93, 130, 137, 159, 165, 167, 171, 173, 208, 228, 238], "expect": [0, 26, 37, 70, 77, 91, 113, 138, 148, 152, 159, 162, 163, 165, 166, 167, 168, 171, 173, 174, 176, 210, 230, 231], "try": [0, 2, 16, 19, 70, 75, 88, 94, 102, 110, 111, 122, 142, 147, 148, 150, 151, 152, 153, 154, 159, 163, 167, 171, 211, 215, 216, 217, 219, 230, 231, 239, 241, 242, 243], "readjust": 0, "median_radiu": [0, 43, 44, 46, 48, 50, 67, 70, 71, 75, 81, 82, 86, 101, 102, 103, 104, 142, 168, 173, 199], "peak_direction_gett": [0, 219], "dipy_track_loc": [0, 219], "dipy_track": [0, 142, 153, 207, 221], "other": [0, 2, 3, 9, 12, 14, 17, 18, 22, 26, 30, 31, 36, 43, 47, 50, 52, 57, 59, 61, 63, 66, 68, 70, 71, 75, 78, 79, 80, 81, 82, 83, 86, 87, 88, 91, 93, 94, 95, 96, 101, 102, 108, 113, 117, 121, 122, 127, 130, 134, 137, 138, 143, 147, 148, 150, 151, 153, 159, 162, 163, 165, 166, 167, 168, 170, 171, 172, 173, 185, 191, 211, 215, 216, 219, 222, 224, 230, 231, 241], "gradient": [0, 21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 43, 44, 47, 49, 50, 52, 54, 55, 58, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 101, 102, 115, 117, 118, 122, 124, 127, 132, 138, 142, 147, 151, 154, 156, 157, 162, 163, 166, 167, 169, 173, 174, 176, 192, 193, 208, 209, 212, 213, 215, 217, 220, 221, 222, 226, 227, 230, 231, 232, 236, 237, 239], "unique_bv": [0, 174], "unique_bvals_magnitud": [0, 174], "visual": [0, 5, 21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 48, 50, 52, 53, 61, 63, 64, 67, 68, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 95, 97, 99, 102, 103, 105, 106, 108, 109, 110, 111, 115, 117, 118, 120, 121, 122, 124, 126, 127, 129, 133, 138, 140, 141, 142, 143, 144, 145, 154, 157, 159, 163, 164, 167, 168, 171, 173, 174, 195, 210, 211, 212, 213, 215, 216, 219, 222, 224, 225, 228, 241], "window": [0, 3, 10, 19, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 50, 53, 63, 64, 67, 68, 74, 75, 76, 80, 81, 86, 87, 88, 89, 91, 96, 97, 101, 102, 105, 106, 108, 109, 110, 111, 115, 118, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 138, 142, 143, 154, 159, 167, 171, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 225, 227, 228], "scene": [0, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 53, 63, 64, 67, 68, 74, 75, 76, 80, 81, 86, 87, 88, 89, 91, 96, 101, 105, 106, 108, 109, 110, 111, 115, 118, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 171, 172, 173, 195, 221], "instead": [0, 14, 15, 35, 49, 52, 70, 86, 93, 105, 143, 159, 161, 163, 165, 166, 167, 168, 170, 171, 172, 209, 210, 211, 212, 214, 217, 218, 220, 221, 224, 225, 226, 227, 241], "render": [0, 2, 41, 122, 124, 128, 129, 130, 172, 208, 210, 211, 212, 213, 214, 217, 221, 224], "clear": [0, 2, 52, 53, 68, 75, 80, 87, 88, 91, 108, 109, 111, 131, 133, 159, 163, 167, 168, 174, 217, 221], "rm_all": 0, "img": [0, 48, 57, 61, 67, 72, 73, 76, 77, 78, 90, 99, 159, 162, 165, 168, 219], "get_data": [0, 213, 219, 220], "sinc": [0, 5, 15, 22, 26, 47, 48, 50, 51, 52, 59, 70, 75, 79, 80, 85, 86, 93, 99, 101, 108, 109, 111, 117, 119, 122, 137, 148, 159, 161, 163, 165, 166, 167, 168, 169, 173, 234], "nibabel": [0, 2, 40, 46, 49, 50, 57, 61, 67, 69, 70, 72, 73, 75, 76, 77, 78, 90, 101, 104, 138, 154, 159, 162, 165, 211, 213, 217, 220, 222, 226, 228, 238, 241], "np": [0, 2, 21, 22, 26, 28, 32, 37, 40, 46, 47, 48, 49, 50, 51, 52, 53, 56, 59, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 90, 91, 93, 94, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 124, 126, 127, 130, 131, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 185, 208, 210, 215, 222, 224, 226], "asanyarrai": 0, "dataobj": [0, 48, 76, 77, 101], "tractogram": [0, 35, 40, 105, 106, 119, 144, 153, 154, 159, 162, 165, 168, 172, 173, 195, 200, 202, 205, 206, 219, 224, 225, 226, 236, 237], "streamlin": [0, 1, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 63, 95, 96, 97, 98, 100, 105, 107, 108, 109, 110, 111, 112, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 141, 143, 145, 149, 153, 154, 157, 159, 162, 164, 167, 168, 170, 173, 174, 180, 195, 197, 200, 202, 205, 206, 208, 209, 210, 211, 212, 213, 216, 217, 219, 220, 221, 222, 225, 226, 227, 228, 236, 237], "statefultractogram": [0, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 63, 97, 101, 105, 127, 154, 172, 174, 221, 225], "creat": [0, 2, 4, 9, 21, 22, 26, 28, 29, 31, 32, 36, 37, 40, 41, 48, 53, 61, 63, 68, 70, 71, 74, 75, 77, 79, 81, 85, 88, 93, 94, 95, 101, 103, 108, 109, 110, 115, 118, 119, 120, 121, 126, 127, 130, 131, 132, 135, 136, 139, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 198, 208, 212, 213, 215, 216, 217, 218, 219, 221, 224, 242], "anoth": [0, 4, 19, 22, 26, 40, 79, 106, 137, 159, 161, 165, 167, 168, 169, 216, 217, 220, 227, 230], "one": [0, 2, 3, 5, 8, 15, 19, 22, 26, 31, 40, 41, 47, 49, 50, 52, 53, 55, 56, 59, 61, 63, 64, 66, 68, 70, 71, 72, 73, 75, 77, 78, 79, 81, 82, 83, 86, 87, 89, 90, 91, 93, 96, 101, 103, 106, 108, 110, 117, 118, 119, 126, 127, 132, 134, 138, 139, 140, 148, 152, 153, 154, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 185, 190, 191, 195, 208, 210, 212, 214, 217, 219, 220, 222, 224, 227, 230, 231, 234, 241], "workflow": [0, 9, 11, 13, 15, 136, 141, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 174, 178, 179, 182, 183, 184, 185, 190, 191, 192, 193, 194, 198, 199, 205, 206, 209, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 224, 225, 226, 227, 236], "dipy_nlmean": [0, 137], "dipy_denoise_nlmean": [0, 147, 207], "get_fdata": [0, 55, 76, 77, 85, 220], "modif": [0, 108, 159, 161, 167, 168, 173, 210, 211], "appli": [0, 21, 22, 41, 44, 48, 49, 52, 65, 67, 68, 70, 71, 72, 73, 78, 82, 86, 91, 93, 96, 98, 100, 102, 103, 105, 111, 126, 127, 133, 138, 147, 148, 149, 150, 154, 159, 161, 163, 166, 167, 168, 169, 171, 172, 173, 176, 177, 178, 179, 184, 185, 194, 195, 199, 201, 202, 205, 213, 214, 217, 220, 221, 225, 228, 231], "codebas": [0, 141, 154], "datatyp": [0, 165, 217], "float64": [0, 21, 47, 51, 159, 161, 167, 171, 208, 213, 219, 226], "some": [0, 4, 8, 9, 12, 14, 15, 18, 19, 26, 31, 40, 41, 53, 55, 56, 61, 63, 65, 66, 69, 70, 77, 79, 80, 81, 82, 83, 85, 86, 88, 91, 94, 99, 101, 103, 105, 108, 109, 118, 119, 122, 124, 126, 127, 130, 131, 132, 134, 137, 138, 139, 141, 142, 143, 152, 156, 159, 161, 162, 163, 167, 168, 171, 173, 190, 191, 199, 208, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 227, 228, 231, 238, 241], "introduc": [0, 2, 35, 48, 68, 79, 81, 85, 86, 96, 97, 151, 163, 167, 209, 217], "break": [0, 3, 96, 133, 161, 162, 163, 208, 213, 215, 217, 219, 220, 225, 227], "backward": [0, 3, 21, 159, 163, 164, 167, 217, 225], "compat": [0, 3, 69, 154, 163, 164, 165, 166, 167, 168, 209, 213, 214, 215, 216, 217, 218, 219, 222, 225], "python": [0, 1, 2, 19, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 138, 154, 159, 161, 163, 165, 166, 167, 168, 172, 173, 174, 189, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 224, 225, 226, 227, 238, 242], "harmon": [0, 5, 30, 33, 41, 43, 65, 67, 76, 89, 92, 151, 154, 157, 159, 162, 163, 164, 167, 172, 173, 188, 189, 208, 213, 215, 217, 233], "mrtrix": [0, 162, 164, 167, 168, 219, 221, 222, 234], "fibernav": 0, "tournier07": [0, 163, 164, 166, 167, 234], "descoteaux07": [0, 88, 163, 164, 166, 167, 234], "cycl": [0, 159, 161, 228], "start": [0, 5, 11, 19, 20, 29, 33, 34, 35, 36, 43, 44, 53, 55, 56, 57, 62, 68, 77, 79, 83, 84, 86, 91, 93, 95, 96, 97, 110, 119, 121, 126, 127, 130, 133, 139, 141, 151, 153, 159, 161, 164, 166, 167, 168, 171, 172, 173, 180, 206, 217, 219, 228, 232, 241, 242], "data": [0, 1, 2, 4, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 159, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 237, 239, 241, 242], "default_spher": [0, 21, 22, 30, 31, 32, 33, 34, 37, 44, 63, 67, 68, 91, 122, 124, 127, 132, 167, 169, 172, 174], "symmetric724": [0, 81, 88, 162, 163, 219], "repulsion724": [0, 34, 43, 64, 72, 74, 75, 76, 78, 80, 86, 89, 115, 118, 162, 163, 167, 173, 219], "more": [0, 2, 3, 8, 15, 18, 20, 22, 26, 35, 36, 37, 40, 41, 47, 50, 51, 64, 66, 70, 71, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91, 93, 96, 97, 101, 105, 108, 109, 110, 117, 121, 122, 124, 126, 127, 130, 132, 133, 138, 140, 142, 143, 144, 145, 150, 154, 155, 156, 157, 159, 161, 163, 164, 166, 167, 168, 169, 171, 172, 173, 182, 183, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 226, 228, 235, 238, 239, 241, 242], "evenli": [0, 36, 41, 53, 82, 88, 156, 161, 167, 171], "mask": [0, 5, 21, 22, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 47, 48, 50, 51, 56, 59, 63, 64, 67, 68, 69, 70, 71, 75, 77, 78, 81, 82, 83, 84, 85, 86, 98, 100, 101, 102, 103, 104, 122, 124, 127, 132, 142, 151, 153, 154, 159, 162, 163, 164, 166, 167, 171, 172, 174, 186, 188, 189, 190, 191, 192, 198, 199, 203, 205, 206, 208, 209, 210, 213, 214, 215, 216, 217, 219, 221, 223, 225, 227, 236, 237], "follow": [0, 2, 3, 4, 5, 13, 15, 16, 17, 18, 19, 20, 26, 30, 31, 33, 37, 40, 48, 49, 50, 52, 53, 55, 57, 59, 61, 63, 69, 70, 71, 72, 75, 79, 81, 82, 83, 84, 85, 87, 91, 93, 96, 108, 118, 130, 132, 133, 138, 139, 140, 141, 142, 143, 144, 145, 147, 151, 152, 153, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 173, 185, 190, 191, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 236, 241, 243], "wai": [0, 2, 4, 5, 11, 12, 14, 15, 18, 19, 28, 30, 31, 33, 47, 48, 53, 55, 61, 63, 66, 68, 69, 70, 71, 72, 75, 77, 80, 81, 82, 83, 86, 110, 118, 119, 127, 130, 131, 133, 134, 138, 141, 142, 150, 151, 153, 159, 161, 164, 167, 168, 169, 171, 173, 193, 218, 231, 241], "you": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 18, 19, 20, 29, 31, 36, 40, 41, 43, 44, 48, 50, 51, 53, 55, 57, 61, 63, 66, 67, 68, 69, 70, 72, 75, 77, 78, 79, 80, 81, 82, 83, 87, 88, 91, 93, 96, 97, 105, 108, 109, 110, 119, 122, 124, 126, 130, 131, 132, 133, 134, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 159, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 195, 197, 200, 201, 209, 213, 215, 226, 228, 229, 236, 239, 241, 242, 243], "4d": [0, 49, 51, 52, 61, 68, 74, 75, 79, 86, 115, 141, 147, 151, 159, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 194, 199, 201, 204, 213, 219, 221], "volum": [0, 1, 26, 32, 35, 37, 40, 41, 46, 49, 50, 52, 54, 57, 58, 61, 68, 71, 72, 75, 77, 79, 80, 81, 82, 84, 85, 86, 87, 91, 93, 94, 101, 102, 103, 104, 113, 119, 124, 128, 129, 134, 138, 142, 147, 148, 149, 151, 153, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 199, 201, 203, 204, 205, 206, 208, 210, 212, 216, 219, 221, 222, 225, 232, 236, 237], "vol_idx": [0, 43, 44, 48, 50, 59, 67, 70, 71, 75, 81, 82, 86, 101, 142, 151, 168, 173, 199, 204, 219], "requir": [0, 2, 21, 22, 26, 36, 40, 52, 57, 64, 70, 71, 76, 80, 82, 83, 84, 85, 86, 87, 94, 105, 106, 108, 110, 111, 117, 130, 133, 142, 143, 144, 147, 151, 152, 153, 159, 161, 165, 166, 167, 168, 169, 171, 173, 199, 204, 210, 217, 219, 221, 222, 223, 227, 238, 241], "order": [0, 2, 19, 21, 22, 26, 31, 40, 43, 44, 47, 51, 52, 63, 67, 69, 70, 73, 75, 76, 79, 80, 83, 84, 85, 88, 89, 93, 94, 96, 101, 110, 127, 133, 146, 147, 151, 152, 153, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 188, 189, 193, 201, 208, 211, 213, 215, 219, 221, 225, 226, 234, 235], "also": [0, 1, 2, 4, 5, 16, 31, 33, 35, 36, 37, 40, 46, 47, 48, 50, 51, 52, 53, 55, 56, 59, 61, 63, 66, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 93, 94, 95, 97, 101, 102, 103, 104, 108, 110, 111, 113, 117, 118, 121, 124, 126, 127, 130, 131, 133, 134, 137, 138, 139, 140, 143, 147, 148, 150, 151, 152, 153, 159, 166, 168, 172, 173, 195, 199, 208, 228, 234, 235, 239, 241, 243], "load": [0, 28, 29, 30, 31, 32, 33, 35, 37, 40, 47, 49, 50, 52, 53, 55, 56, 57, 61, 63, 64, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 80, 82, 84, 85, 86, 89, 90, 91, 95, 102, 105, 108, 109, 110, 111, 127, 130, 133, 138, 157, 161, 162, 165, 166, 173, 195, 208, 213, 215, 219, 226], "save": [0, 4, 5, 31, 36, 40, 46, 47, 49, 50, 52, 53, 55, 57, 59, 61, 63, 64, 67, 68, 69, 72, 73, 75, 76, 78, 81, 86, 87, 88, 90, 91, 96, 97, 101, 104, 105, 109, 111, 117, 118, 121, 124, 127, 130, 133, 134, 137, 138, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 157, 159, 161, 162, 164, 165, 166, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181, 184, 185, 186, 188, 189, 190, 191, 192, 193, 195, 199, 201, 203, 205, 206, 210, 213, 214, 217, 219, 220, 221, 222, 224, 226, 239], "load_tractogram": [0, 40, 101, 108, 109, 110, 111, 168, 174, 220], "save_tractogram": [0, 40, 97, 101, 174], "trk": [0, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 63, 97, 101, 105, 119, 127, 138, 142, 143, 144, 145, 162, 165, 173, 180, 195, 216, 219, 220, 222, 236, 237], "tck": [0, 40, 165, 173, 195, 213, 219, 220, 221, 236, 237], "vtk": [0, 40, 154, 174, 208, 210, 211, 212, 213, 217, 218, 221, 225, 227, 238, 241], "fib": [0, 40, 165, 236, 237], "dpy": [0, 40, 138, 157, 173, 174, 195, 210, 228, 236, 237], "refer": [0, 1, 5, 11, 16, 19, 40, 41, 79, 83, 99, 132, 141, 149, 154, 156, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 232, 233, 235, 241], "nifti": [0, 40, 55, 57, 61, 75, 124, 134, 138, 143, 151, 152, 159, 162, 165, 167, 170, 171, 173, 174, 177, 188, 189, 191, 193, 212, 214, 219, 228, 239], "file": [0, 2, 4, 5, 15, 19, 24, 26, 27, 31, 36, 39, 45, 52, 55, 57, 58, 61, 62, 63, 69, 75, 79, 90, 92, 93, 94, 100, 101, 105, 112, 116, 119, 125, 127, 129, 134, 136, 137, 138, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 159, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 208, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 228, 236, 237, 238, 239, 241], "need": [0, 2, 4, 5, 7, 8, 14, 17, 26, 29, 31, 33, 40, 41, 43, 46, 47, 50, 51, 52, 53, 63, 66, 67, 69, 70, 72, 75, 79, 80, 81, 82, 83, 87, 88, 91, 93, 94, 95, 101, 102, 103, 104, 108, 109, 110, 117, 118, 119, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 159, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 185, 195, 201, 205, 206, 208, 209, 210, 211, 212, 213, 215, 217, 219, 220, 221, 226, 229, 231, 239, 241], "guarante": [0, 40, 80, 108, 167, 171], "proper": [0, 86, 167, 173, 208], "spatial": [0, 21, 26, 35, 40, 50, 75, 77, 79, 86, 89, 101, 108, 127, 141, 151, 154, 161, 163, 165, 167, 168, 171, 173, 215, 219, 226, 232], "handl": [0, 5, 40, 48, 61, 130, 141, 154, 159, 161, 162, 165, 166, 172, 173, 209, 210, 211, 212, 213, 216, 217, 219, 220, 221, 222, 223, 226, 238], "were": [0, 26, 41, 49, 52, 68, 77, 79, 82, 83, 84, 97, 101, 122, 127, 138, 156, 159, 161, 162, 163, 167, 171, 173, 215, 216], "modifi": [0, 5, 40, 93, 94, 95, 111, 124, 127, 159, 161, 162, 167, 168, 171, 173, 180, 216, 221, 222, 234], "enforc": [0, 4, 70, 80, 85, 126, 161, 162, 165, 167, 224], "affin": [0, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 47, 49, 50, 51, 52, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 80, 81, 82, 84, 86, 87, 89, 90, 91, 95, 96, 97, 98, 100, 101, 104, 105, 119, 122, 124, 127, 130, 131, 132, 133, 138, 140, 142, 150, 152, 154, 161, 162, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 202, 208, 210, 212, 213, 214, 217, 218, 219, 221, 225, 239], "uniform": [0, 47, 56, 159, 161, 167], "docstr": [0, 2, 134, 137, 173, 208, 209, 210, 211, 214, 215, 217, 218, 220, 222, 223, 225, 226, 235], "deform_streamlin": [0, 101, 174, 225, 226], "select_by_roi": [0, 174], "orient_by_roi": [0, 174, 210, 213], "_extract_v": 0, "values_from_volum": [0, 174, 210], "util": [0, 22, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 63, 75, 79, 91, 105, 122, 124, 126, 127, 132, 142, 151, 154, 159, 161, 172, 174, 209, 210, 211, 213, 215, 217, 219, 220, 221, 225, 227], "density_map": [0, 40, 127, 174, 221], "connectivity_matrix": [0, 127, 174, 213, 217, 220], "seeds_from_mask": [0, 22, 29, 30, 31, 32, 33, 34, 35, 36, 37, 63, 122, 124, 127, 132, 174], "random_seeds_from_mask": [0, 174], "target": [0, 19, 37, 52, 95, 96, 101, 105, 127, 144, 159, 161, 166, 168, 170, 173, 174, 180, 210, 213, 217], "target_line_bas": [0, 174, 221], "near_roi": [0, 22, 174, 225], "length": [0, 41, 79, 80, 96, 97, 108, 109, 110, 119, 122, 123, 125, 130, 131, 138, 140, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 195, 200, 202, 208, 210, 213, 217, 218, 225, 235], "path_length": [0, 124, 174], "affine_for_trackvi": 0, "move_streamlin": 0, "flexi_tvis_affin": 0, "get_flexi_tvis_affin": [0, 226], "delet": [0, 9, 19, 78, 159, 161, 162, 165, 208, 212, 216, 217, 219, 241], "life": [0, 25, 27, 41, 69, 154, 161, 174, 209, 217, 218, 219, 220, 221, 222], "voxel2streamlin": [0, 174], "setup": [0, 19, 159, 174, 209, 210, 217, 227, 241], "fit": [0, 21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 44, 48, 50, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 92, 93, 101, 115, 151, 154, 156, 159, 161, 163, 164, 166, 167, 168, 171, 172, 173, 174, 188, 189, 191, 192, 193, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 221, 225, 226, 227, 239, 243], "fibermodel": [0, 26, 174], "afq_profil": [0, 119, 174, 224], "stat": [0, 4, 66, 87, 119, 120, 154, 157, 159, 161, 167, 174, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "analysi": [0, 1, 2, 18, 31, 32, 36, 37, 48, 50, 55, 59, 61, 63, 69, 70, 73, 76, 77, 80, 81, 82, 89, 90, 97, 119, 120, 124, 141, 142, 143, 144, 145, 147, 150, 151, 153, 154, 159, 161, 162, 163, 167, 168, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 214, 219, 221, 226, 230], "similarli": [0, 79, 83, 85, 159, 162, 173, 176], "simul": [0, 53, 74, 80, 82, 88, 91, 115, 116, 126, 157, 161, 162, 163, 167, 169, 208, 215, 222], "singletensor": [0, 219], "single_tensor": [0, 117, 174, 210, 219], "multitensor": [0, 41, 82, 88, 114, 116, 169], "multi_tensor": [0, 74, 82, 115, 118, 167, 174, 210], "sticksandbal": 0, "sticks_and_bal": [0, 167, 174], "voxel_s": [0, 32, 40, 57, 72, 78, 161, 164, 165, 171, 174, 219], "stremline_map": 0, "_util": [0, 174], "_mapping_to_voxel": 0, "peaksandmetricsdirectiongett": [0, 212, 219], "localtrack": [0, 22, 29, 30, 31, 32, 33, 34, 35, 36, 37, 63, 122, 124, 127, 132, 174, 210, 219, 225], "particlefilteringtrack": [0, 32, 174], "local": [0, 1, 5, 13, 16, 19, 22, 30, 31, 32, 34, 41, 47, 48, 50, 52, 54, 58, 63, 65, 68, 75, 82, 86, 93, 102, 105, 119, 124, 144, 149, 151, 154, 159, 162, 164, 166, 167, 168, 169, 171, 173, 174, 182, 183, 184, 185, 194, 197, 200, 202, 205, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 232, 236, 237, 241], "local_track": [0, 22, 29, 30, 31, 32, 33, 34, 35, 36, 37, 63, 122, 124, 127, 132, 174], "thei": [0, 2, 5, 16, 32, 40, 49, 57, 59, 66, 69, 70, 75, 83, 86, 89, 93, 95, 96, 97, 108, 109, 110, 111, 122, 127, 130, 134, 137, 140, 142, 143, 147, 151, 159, 161, 162, 164, 167, 168, 171, 172, 173, 219, 230, 231], "tissue_classifi": 0, "stopping_criterion": [0, 22, 29, 30, 31, 32, 33, 34, 35, 36, 37, 63, 122, 124, 127, 132, 164, 173, 174, 206], "tissueclassifi": 0, "stoppingcriterion": [0, 174], "binarytissueclassifi": [0, 213, 214], "binarystoppingcriterion": [0, 37, 127, 174], "thresholdtissueclassifi": 0, "thresholdstoppingcriterion": [0, 22, 29, 30, 31, 33, 34, 35, 36, 37, 63, 122, 124, 132, 174], "constrainedtissueclassifi": 0, "anatomicalstoppingcriterion": [0, 174], "acttissueclassifi": 0, "actstoppingcriterion": [0, 37, 174], "cmctissueclassifi": 0, "cmcstoppingcriterion": [0, 32, 174], "tissueclass": 0, "streamlinestatu": [0, 174], "eudx": [0, 30, 31, 63, 127, 142, 149, 173, 205, 216, 217, 219, 222], "tractographi": [0, 1, 22, 25, 26, 27, 29, 30, 31, 40, 41, 57, 63, 70, 72, 80, 82, 95, 96, 97, 101, 106, 107, 110, 112, 117, 119, 122, 124, 138, 141, 142, 144, 151, 153, 154, 157, 161, 164, 165, 167, 168, 169, 171, 173, 206, 210, 212, 217, 218, 224, 226, 227, 236, 237, 242], "perform": [0, 2, 21, 22, 31, 40, 47, 48, 50, 52, 55, 59, 63, 64, 66, 69, 70, 74, 79, 81, 82, 85, 93, 95, 97, 99, 101, 102, 103, 105, 108, 110, 111, 113, 115, 117, 142, 147, 148, 150, 151, 152, 153, 154, 159, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 176, 190, 191, 192, 221, 225, 230], "trackvi": [0, 31, 40, 63, 127, 138, 162, 165, 174, 212, 214, 219, 222, 228], "extern": [0, 68, 81, 137, 172, 173, 210, 219, 228], "quickbund": [0, 219], "peak": [0, 25, 26, 27, 30, 31, 33, 36, 41, 43, 63, 67, 68, 78, 81, 86, 87, 127, 142, 149, 151, 154, 157, 167, 169, 170, 171, 173, 174, 188, 189, 205, 206, 210, 211, 212, 215, 216, 219, 220, 230], "welcom": [0, 2, 18], "viz": [0, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 53, 63, 64, 67, 68, 70, 74, 75, 76, 80, 81, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 105, 106, 108, 109, 110, 111, 115, 118, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 138, 157, 171, 174, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 225, 227], "integr": [0, 1, 2, 9, 31, 59, 63, 71, 73, 75, 90, 141, 153, 154, 163, 166, 167, 212, 213, 218, 227, 230], "variou": [0, 25, 26, 27, 32, 41, 79, 161, 162, 166, 167, 171, 210, 230, 231], "analys": [0, 48, 163], "adjust": [0, 49, 52, 64, 82, 130, 133, 159, 161, 163, 167, 168, 173, 182, 210, 214, 217], "slr": [0, 95, 96, 97, 105, 144, 152, 154, 159, 168, 173, 202, 209, 213, 214, 217, 220, 225], "recobundl": [0, 41, 107, 112, 149, 154, 174, 211, 212, 213, 214, 220, 221, 222, 224], "algorithm": [0, 22, 26, 31, 32, 41, 48, 49, 52, 54, 56, 57, 58, 63, 65, 70, 74, 75, 76, 77, 79, 82, 86, 87, 92, 96, 97, 101, 102, 103, 108, 110, 111, 113, 115, 126, 141, 142, 147, 152, 154, 155, 157, 159, 161, 163, 164, 166, 167, 168, 171, 172, 173, 176, 182, 184, 185, 219, 220, 226, 227, 228], "exclud": [0, 14, 37, 59, 71, 77, 91, 122, 127, 159, 164, 167, 171, 222], "insid": [0, 2, 28, 61, 80, 110, 159, 161, 163, 167, 168, 171, 173, 205, 206, 215], "note": [0, 2, 4, 5, 14, 15, 16, 19, 21, 26, 52, 66, 68, 70, 71, 75, 80, 81, 82, 83, 85, 94, 97, 99, 101, 103, 108, 109, 124, 134, 137, 141, 143, 145, 147, 148, 151, 166, 174, 180, 194, 228, 230, 231, 232], "nose": [0, 139, 154, 213, 225], "pytest": [0, 18, 19, 154, 161, 167, 168, 171, 213, 214, 222, 225, 241], "load_tck": [0, 40, 174], "save_tck": [0, 174], "highli": [0, 55, 59, 70, 82, 108, 147, 150, 173, 180, 241], "manag": [0, 126, 133, 154, 157, 212, 217, 225, 241], "tabl": [0, 21, 22, 26, 41, 49, 53, 64, 69, 80, 81, 83, 84, 85, 91, 93, 133, 154, 156, 157, 161, 162, 163, 165, 167, 169, 171, 173, 193, 211, 213, 215, 217, 221, 222, 226, 236, 241], "b0_thresold": 0, "50": [0, 22, 26, 27, 29, 30, 33, 34, 37, 41, 43, 44, 48, 49, 50, 52, 67, 68, 71, 74, 75, 76, 77, 78, 79, 80, 82, 86, 87, 88, 89, 91, 95, 99, 102, 115, 117, 118, 124, 126, 132, 142, 154, 155, 156, 159, 161, 163, 167, 168, 169, 171, 173, 215], "impact": [0, 29, 70, 82, 108, 117, 151, 163, 167, 168, 169, 173, 184], "your": [0, 2, 3, 4, 9, 12, 13, 14, 15, 18, 19, 20, 31, 41, 43, 44, 51, 53, 55, 57, 61, 63, 67, 69, 73, 75, 79, 90, 91, 108, 109, 119, 134, 137, 138, 141, 143, 144, 147, 148, 150, 151, 152, 153, 154, 161, 162, 163, 167, 168, 210, 228, 229, 239, 241, 242], "want": [0, 4, 7, 9, 15, 16, 18, 19, 20, 41, 53, 57, 59, 69, 72, 81, 91, 93, 94, 95, 96, 102, 103, 108, 109, 110, 119, 121, 122, 124, 126, 127, 130, 131, 133, 134, 138, 139, 141, 143, 147, 148, 150, 159, 161, 165, 166, 167, 168, 171, 172, 173, 197, 200, 201, 208, 229, 231, 236, 241, 242], "assur": [0, 31, 59, 63, 121, 165], "code": [0, 4, 5, 15, 16, 17, 18, 19, 20, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 141, 154, 161, 165, 167, 168, 173, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 221, 222, 224, 225, 226, 228, 238, 241, 242], "run": [0, 3, 4, 19, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 157, 159, 161, 163, 166, 167, 168, 171, 173, 174, 206, 208, 209, 210, 213, 217, 219, 224, 226, 228, 230, 235, 236, 241], "exactli": [0, 2, 29, 31, 63, 97, 139, 159, 161, 165, 166, 167, 168, 217], "manner": [0, 68, 152, 162, 171, 173], "befor": [0, 2, 5, 19, 26, 31, 32, 49, 51, 55, 59, 63, 67, 69, 70, 71, 82, 86, 93, 95, 96, 97, 99, 101, 102, 105, 106, 110, 113, 120, 140, 144, 145, 147, 148, 150, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 206, 212, 214, 215, 216, 217, 219, 225, 226, 241], "pleas": [0, 1, 2, 3, 8, 15, 18, 20, 43, 44, 48, 49, 51, 52, 56, 77, 79, 84, 85, 122, 124, 130, 132, 142, 143, 144, 145, 157, 159, 161, 162, 163, 165, 167, 171, 173, 187, 214, 217, 241], "initi": [0, 4, 7, 21, 26, 28, 31, 35, 36, 44, 63, 66, 71, 77, 79, 80, 83, 86, 87, 88, 91, 93, 94, 96, 111, 126, 130, 132, 133, 143, 159, 161, 163, 164, 166, 167, 168, 169, 171, 173, 208, 215, 218, 221, 225, 241], "keyword": [0, 2, 26, 159, 161, 165, 166, 167, 169, 170, 172], "b0_threshold": [0, 52, 79, 151, 161, 163, 167, 173, 181, 182, 185, 188, 189, 190, 191, 192, 193, 196, 213], "fvtk": [0, 154, 171, 208, 209, 210, 212, 213, 215, 216, 217], "impli": [0, 14, 47, 55, 121, 150, 159, 161, 162, 167, 168, 169, 173, 175, 217, 235], "actor": [0, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 53, 63, 64, 67, 68, 74, 75, 76, 80, 81, 86, 87, 88, 89, 91, 96, 101, 105, 106, 108, 109, 110, 111, 115, 118, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 138, 171, 208, 212, 213, 221], "ren": [0, 133, 171, 210, 213], "ui": [0, 130, 133, 210, 211, 212, 213], "element": [0, 22, 56, 66, 68, 69, 70, 75, 79, 84, 85, 86, 96, 109, 117, 133, 151, 159, 161, 163, 165, 167, 168, 169, 171, 173, 191, 210, 213], "To": [0, 4, 5, 31, 35, 36, 37, 40, 47, 48, 49, 50, 61, 63, 64, 69, 70, 79, 81, 83, 85, 86, 87, 88, 91, 93, 95, 96, 97, 102, 103, 110, 111, 117, 118, 119, 121, 127, 144, 147, 148, 150, 151, 152, 153, 159, 161, 162, 164, 165, 166, 167, 168, 169, 171, 173, 187, 236, 241], "learn": [0, 11, 12, 18, 52, 61, 64, 66, 76, 79, 141, 146, 154, 162, 163, 166, 167, 173, 174, 185, 214, 223, 239, 242], "go": [0, 4, 5, 8, 14, 15, 16, 18, 19, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 138, 139, 143, 161, 166, 168, 171, 210, 212, 219, 241], "http": [0, 1, 5, 8, 19, 35, 41, 48, 50, 61, 70, 80, 82, 84, 85, 86, 97, 110, 130, 138, 139, 143, 144, 145, 148, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 171, 173, 182, 194, 222, 236, 237, 241], "gl": 0, "furthermor": [0, 138], "load_trk": [0, 26, 40, 97, 105, 106, 119, 120, 174, 221], "save_trk": [0, 29, 30, 31, 32, 33, 34, 35, 36, 37, 63, 105, 127, 174], "object": [0, 2, 4, 5, 26, 31, 36, 40, 43, 49, 53, 61, 63, 67, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 85, 86, 87, 89, 90, 91, 93, 102, 103, 108, 109, 110, 111, 127, 130, 131, 132, 133, 134, 137, 138, 139, 140, 154, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 185, 195, 210, 211, 213, 220, 221, 222, 226], "much": [0, 2, 3, 5, 37, 66, 79, 85, 93, 97, 122, 159, 161, 165, 166, 167, 168, 171, 209], "less": [0, 2, 47, 55, 72, 83, 86, 108, 124, 126, 138, 140, 154, 159, 161, 162, 163, 164, 167, 168, 171, 172, 173, 195, 200, 202, 209, 225, 226], "easier": [0, 3, 5, 74, 115, 127, 142, 161, 167, 169, 173, 243], "No": [0, 2, 40, 41, 90, 156, 161, 162, 163, 167, 168, 169, 173, 188, 189, 190, 192, 210, 211, 220, 227, 241], "major": [0, 139, 159, 161, 167, 169, 215], "support": [0, 18, 40, 57, 86, 122, 138, 142, 154, 159, 161, 164, 165, 166, 167, 168, 171, 172, 208, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 225, 227], "It": [0, 4, 5, 11, 14, 15, 21, 30, 32, 40, 46, 49, 53, 56, 59, 67, 68, 69, 70, 75, 78, 79, 80, 81, 82, 83, 87, 96, 97, 102, 104, 105, 106, 108, 109, 111, 121, 127, 131, 133, 134, 137, 138, 139, 143, 152, 153, 154, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 177, 180, 184, 185], "year": [0, 19, 214, 217], "multipl": [0, 2, 41, 48, 56, 59, 66, 67, 68, 69, 70, 73, 75, 77, 79, 83, 86, 90, 99, 133, 134, 137, 138, 141, 142, 147, 148, 150, 151, 152, 153, 154, 156, 159, 161, 162, 163, 166, 167, 168, 169, 171, 172, 173, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 199, 201, 203, 205, 206, 209, 212, 217, 221, 222, 226, 230, 236, 237], "As": [0, 2, 26, 30, 32, 50, 57, 66, 70, 71, 77, 79, 80, 81, 82, 83, 84, 88, 96, 101, 103, 105, 147, 148, 150, 151, 153, 159, 167, 171, 239], "far": [0, 19, 80, 93, 119, 171], "know": [0, 5, 18, 20, 26, 40, 56, 59, 93, 140, 159, 161, 167, 168, 172, 222, 241, 242, 243], "work": [0, 2, 5, 11, 12, 15, 17, 18, 19, 46, 52, 56, 59, 77, 79, 81, 86, 88, 93, 94, 101, 104, 105, 127, 134, 137, 139, 147, 151, 154, 161, 166, 167, 171, 173, 193, 208, 209, 210, 213, 215, 217, 219, 220, 221, 225, 226, 241], "well": [0, 2, 4, 5, 11, 26, 33, 46, 47, 59, 69, 70, 71, 81, 82, 83, 86, 87, 88, 95, 96, 101, 104, 119, 138, 147, 151, 153, 159, 161, 163, 167, 169, 213, 234, 241], "longer": [0, 14, 138, 159, 171, 218], "test": [0, 2, 3, 4, 5, 15, 18, 19, 66, 75, 83, 91, 94, 124, 143, 157, 159, 161, 162, 163, 166, 167, 168, 172, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 236, 237], "upgrad": [0, 141, 213, 214, 220], "newer": [0, 210, 212, 213, 241], "probabilistic_direction_gett": [0, 174], "probabilisticdirectiongett": [0, 22, 32, 33, 35, 171, 174], "input": [0, 22, 29, 31, 40, 43, 47, 49, 50, 56, 63, 67, 79, 81, 88, 91, 93, 95, 96, 99, 102, 105, 109, 110, 113, 124, 130, 131, 134, 137, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 199, 201, 203, 204, 205, 206, 208, 209, 210, 213, 216, 217, 219, 222, 224, 225, 230, 231], "pmf_threshold": [0, 153, 164, 173, 205, 206], "probabl": [0, 15, 21, 30, 32, 33, 73, 80, 83, 90, 93, 113, 151, 153, 159, 164, 166, 167, 168, 169, 171, 232, 241], "lower": [0, 22, 31, 35, 37, 46, 47, 48, 49, 50, 51, 52, 56, 61, 63, 68, 69, 70, 71, 73, 76, 77, 79, 82, 83, 86, 90, 94, 97, 103, 104, 138, 145, 159, 161, 165, 166, 167, 168, 173, 180, 193, 198], "mass": [0, 33, 93, 94, 152, 153, 159, 164, 168, 171, 173, 175], "dki": [0, 41, 50, 69, 71, 82, 114, 116, 141, 149, 154, 156, 169, 173, 174, 190, 208, 209, 210, 212, 213, 219, 220, 221, 223, 224, 225, 226, 227, 228], "model": [0, 1, 15, 21, 22, 25, 26, 27, 30, 31, 32, 33, 34, 37, 41, 43, 44, 46, 48, 50, 51, 52, 59, 61, 63, 64, 65, 67, 68, 72, 73, 78, 79, 81, 82, 83, 84, 85, 90, 91, 92, 104, 105, 106, 113, 117, 119, 120, 122, 124, 127, 141, 142, 143, 144, 151, 153, 154, 156, 159, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 178, 179, 185, 193, 197, 200, 202, 210, 211, 212, 214, 215, 216, 217, 219, 221, 222, 225, 226, 236, 237, 239], "wl": [0, 41, 91, 156, 167, 173, 190, 191], "max_kurtosi": [0, 167], "axial_kurtosi": [0, 174], "mean_kurtosi": [0, 174], "radial_kuroti": 0, "prefer": [0, 5, 41, 96, 97, 105, 133, 138, 143, 156, 168, 208, 214, 225], "rather": [0, 14, 16, 19, 91, 94, 99, 139, 161, 167, 168, 208, 212, 241], "widget": [0, 130, 210], "slicer": [0, 22, 26, 35, 36, 64, 101, 127, 130, 133, 172, 210, 211, 212, 213, 216, 221], "power": [0, 41, 79, 81, 148, 154, 156, 162, 164, 167, 171, 208, 210, 236, 237], "rgb": [0, 75, 131, 142, 143, 165, 167, 173, 190, 191, 216], "too": [0, 37, 70, 79, 102, 108, 164, 171, 173, 209, 219, 241], "see": [0, 3, 5, 8, 10, 11, 15, 16, 18, 19, 22, 26, 35, 36, 37, 40, 41, 43, 47, 48, 49, 50, 52, 59, 61, 66, 69, 70, 71, 72, 75, 77, 79, 80, 81, 82, 83, 84, 87, 88, 89, 93, 96, 97, 102, 103, 108, 109, 110, 111, 126, 127, 130, 131, 133, 134, 137, 139, 140, 141, 142, 143, 147, 148, 154, 155, 156, 159, 166, 168, 170, 173, 187, 194, 230, 235, 241, 243], "tutori": [0, 13, 29, 35, 41, 46, 65, 67, 69, 70, 72, 73, 76, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 93, 94, 97, 103, 104, 105, 106, 109, 110, 120, 122, 124, 130, 132, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 161, 208, 209, 211, 212, 213, 214, 215, 217, 219, 220, 221, 223, 224, 225, 226], "viz_slic": [0, 129, 133], "py": [0, 2, 15, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 161, 167, 168, 171, 173, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 241], "behavior": [0, 133, 159, 161, 166, 167, 171, 173, 212, 213, 219], "interp_rbf": [0, 174, 210, 216], "addit": [0, 2, 21, 50, 69, 70, 77, 81, 85, 95, 130, 138, 147, 151, 155, 159, 162, 165, 166, 167, 170, 171, 173, 210, 215, 219, 228, 229], "norm": [0, 2, 21, 52, 64, 68, 79, 80, 81, 86, 110, 140, 159, 161, 171, 173, 174, 181, 182, 188, 191, 193, 196, 216], "angl": [0, 22, 30, 31, 41, 43, 63, 65, 74, 80, 82, 84, 85, 88, 92, 110, 115, 117, 118, 139, 140, 142, 149, 153, 159, 161, 162, 163, 164, 167, 169, 171, 172, 173, 188, 205, 206, 216, 225, 226, 235], "euclidean_norm": [0, 161], "discourag": [0, 210], "11": [0, 1, 22, 26, 29, 30, 33, 34, 37, 50, 71, 76, 77, 79, 80, 81, 82, 92, 94, 100, 105, 106, 111, 119, 120, 127, 141, 154, 155, 159, 161, 162, 167, 170, 171, 208, 210, 215, 218, 219, 220, 222, 223, 224, 226, 228, 241], "vector_field": [0, 174, 210], "warp_2d_affin": 0, "transform_2d_affin": [0, 174], "warp_2d_affine_nn": 0, "transform_2d_affine_nn": [0, 174], "warp_3d_affin": 0, "transform_3d_affin": [0, 174], "warp_3d_affine_nn": 0, "transform_3d_affine_nn": [0, 174], "gqi": [0, 41, 78, 138, 156, 162, 174, 215, 228, 232], "calcul": [0, 22, 26, 29, 31, 41, 43, 44, 48, 63, 65, 66, 67, 68, 69, 70, 72, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 91, 92, 119, 121, 123, 125, 126, 142, 143, 151, 159, 161, 163, 164, 165, 167, 168, 169, 170, 171, 173, 175, 182, 189, 194, 201, 208, 213, 215, 216, 217, 221, 228, 230, 231, 239], "gqi2": [0, 41, 156, 167, 218], "match": [0, 19, 41, 51, 54, 58, 86, 95, 97, 101, 105, 145, 152, 153, 159, 161, 162, 163, 165, 166, 167, 168, 173, 180, 200, 227], "either": [0, 2, 14, 26, 31, 36, 37, 52, 63, 80, 81, 86, 93, 97, 108, 119, 127, 145, 159, 161, 162, 163, 165, 167, 168, 169, 171, 173, 182, 183, 193, 210], "doc": [0, 2, 3, 19, 37, 41, 79, 85, 161, 165, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 241], "therein": 0, "access": [0, 8, 14, 15, 19, 40, 47, 61, 79, 81, 84, 130, 133, 161, 162, 163, 167, 173, 194, 211, 220, 241], "complet": [0, 14, 19, 31, 35, 61, 63, 80, 85, 97, 111, 122, 124, 132, 142, 143, 145, 153, 159, 167, 210, 215, 216, 225, 241], "resampl": [0, 57, 93, 94, 96, 97, 103, 109, 110, 111, 133, 138, 151, 157, 167, 168, 170, 171, 173, 174, 201, 208, 210, 217, 228], "aniso2iso": [0, 138, 208, 210], "reslic": [0, 41, 54, 58, 72, 78, 101, 173, 174, 201, 208, 210, 217, 225, 228], "peaks_from_model": [0, 22, 31, 33, 34, 36, 43, 44, 63, 67, 68, 78, 81, 86, 87, 122, 124, 127, 132, 174, 210, 215, 216, 217, 219, 225], "like": [0, 3, 4, 5, 6, 14, 16, 19, 33, 40, 56, 61, 66, 68, 69, 79, 86, 87, 90, 93, 94, 96, 97, 103, 105, 111, 130, 133, 134, 137, 138, 139, 143, 152, 153, 159, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 199, 208, 219, 224, 226, 236, 237, 239, 241], "odf": [0, 21, 22, 29, 31, 33, 34, 35, 43, 44, 63, 64, 67, 68, 72, 74, 75, 76, 78, 80, 81, 83, 86, 87, 88, 89, 91, 115, 118, 151, 154, 163, 164, 166, 169, 172, 173, 174, 188, 189, 205, 206, 209, 210, 215, 216, 217, 221, 223, 228, 234], "take": [0, 5, 15, 18, 21, 22, 33, 35, 36, 47, 49, 52, 68, 69, 70, 72, 77, 79, 81, 83, 85, 86, 87, 91, 93, 96, 101, 108, 109, 110, 127, 138, 143, 159, 161, 162, 163, 166, 167, 170, 171, 173, 182, 183, 212, 215, 222, 223, 234, 241], "size": [0, 1, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 47, 50, 51, 52, 53, 57, 61, 63, 64, 67, 68, 70, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 96, 99, 101, 102, 103, 105, 106, 108, 109, 110, 111, 115, 118, 120, 121, 122, 123, 124, 125, 127, 130, 131, 132, 133, 138, 142, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 180, 184, 195, 199, 201, 205, 206, 212, 213, 217, 219, 221, 226], "arrai": [0, 2, 3, 4, 37, 47, 49, 51, 52, 53, 56, 59, 61, 64, 68, 70, 72, 74, 75, 79, 80, 81, 82, 83, 84, 86, 87, 88, 94, 99, 101, 102, 103, 109, 110, 111, 115, 117, 118, 120, 126, 127, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 194, 199, 201, 208, 209, 210, 211, 212, 213, 217, 219, 220, 221, 224, 225, 226, 230, 231], "updat": [0, 4, 9, 13, 19, 53, 86, 88, 130, 141, 154, 159, 161, 165, 166, 167, 168, 173, 174, 176, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 234], "similar": [0, 8, 19, 41, 43, 56, 67, 69, 70, 72, 80, 82, 83, 85, 93, 94, 96, 102, 103, 105, 106, 113, 119, 122, 123, 125, 126, 149, 154, 156, 159, 161, 162, 163, 167, 168, 170, 171, 173, 175, 185, 200, 202, 217, 219, 234], "nib": [0, 2, 40, 49, 50, 57, 76, 77, 101, 159, 165], "anat": 0, "voxel_dim": 0, "header": [0, 40, 61, 101, 119, 165, 173, 195, 210, 219, 222, 224, 230, 231], "pixdim": 0, "someth": [0, 3, 4, 5, 15, 16, 19, 66, 80, 83, 142, 161, 165, 167, 169, 171, 172, 173, 195, 199, 241], "end": [5, 14, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 139, 143, 151, 161, 166, 167, 168, 171, 221, 230, 231, 234, 241], "download": [10, 19, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 138, 142, 143, 144, 145, 149, 154, 155, 161, 162, 173, 187, 210, 212, 213, 216, 217, 218, 225, 226, 236], "full": [1, 18, 19, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 152, 156, 159, 161, 162, 163, 164, 165, 167, 168, 171, 173, 175, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 234], "exampl": [2, 4, 5, 14, 15, 18, 19, 21, 22, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 138, 142, 143, 144, 146, 151, 152, 154, 155, 164, 168, 173, 176, 182, 183, 189, 194, 195, 199, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 227, 228, 236, 237, 239, 241, 242], "demo": [21, 22, 55], "present": [19, 21, 22, 40, 41, 68, 70, 75, 82, 133, 166, 167, 171, 220, 225, 241], "fod": [21, 22, 30, 33, 34, 162, 164, 167, 209, 211, 219], "field": [19, 21, 31, 40, 63, 79, 81, 91, 97, 101, 113, 138, 151, 152, 153, 159, 161, 162, 166, 168, 169, 171, 172, 173, 176, 177, 192, 209, 210, 215, 230, 231], "meesters2016": [21, 22], "implement": [4, 5, 21, 22, 26, 37, 48, 53, 66, 76, 77, 80, 81, 86, 88, 91, 93, 94, 101, 102, 103, 110, 134, 140, 141, 152, 154, 159, 161, 163, 164, 165, 167, 171, 173, 210, 213, 214, 215, 217, 218, 219, 220, 225, 227, 228, 234], "pde": [21, 22, 163, 171], "framework": [21, 52, 56, 76, 79, 80, 83, 84, 85, 89, 95, 105, 108, 109, 113, 120, 121, 149, 154, 163, 167, 168, 169, 170, 172, 173, 179, 195, 200, 211, 212, 213, 214, 217, 219, 221, 234], "portegies2015a": 21, "hardi": [21, 22, 26, 31, 36, 41, 63, 81, 87, 89, 93, 94, 101, 103, 155, 156, 162, 163, 164, 167, 171, 173, 234, 236, 237], "aim": [2, 21, 152, 167, 243], "elong": 21, "structur": [21, 26, 31, 41, 48, 50, 52, 59, 63, 64, 69, 75, 83, 94, 101, 107, 112, 127, 130, 134, 137, 141, 143, 144, 145, 149, 151, 153, 162, 163, 167, 168, 171, 218, 225, 236, 237], "junction": 21, "maintain": [5, 9, 13, 21, 40, 68, 142], "while": [5, 6, 21, 40, 47, 48, 50, 66, 75, 77, 79, 82, 85, 86, 88, 117, 145, 151, 159, 161, 166, 167, 168, 170, 171, 173, 209, 210, 212, 224, 234], "reduc": [1, 2, 5, 21, 32, 37, 40, 55, 80, 83, 95, 105, 126, 127, 139, 153, 154, 159, 161, 162, 163, 168, 171, 173, 174, 199, 200, 206, 210, 216, 217, 221, 241], "nois": [21, 33, 35, 41, 47, 51, 52, 54, 58, 59, 70, 82, 85, 86, 91, 117, 118, 147, 154, 162, 164, 166, 167, 169, 171, 173, 174, 182, 183, 184, 190, 191, 203, 208, 211, 215, 217, 219, 224], "small": [21, 22, 26, 30, 33, 47, 57, 67, 68, 75, 76, 79, 83, 85, 86, 87, 91, 94, 96, 99, 108, 109, 110, 111, 127, 151, 157, 159, 161, 162, 163, 167, 168, 171, 172, 173, 193, 195, 200, 202, 208, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226], "incoher": [21, 41, 65, 92, 149, 167, 173, 192], "achiev": [5, 21, 47, 81, 84, 94, 96, 108, 113, 152, 171], "hypo": 21, "ellipt": [21, 167], "2nd": [21, 69, 142], "domain": [21, 22, 26, 102, 103, 110, 159, 173, 220], "coupl": [21, 66, 102, 173, 217, 221], "posit": [21, 22, 26, 32, 33, 37, 41, 64, 65, 67, 75, 80, 82, 83, 89, 105, 106, 108, 120, 126, 127, 130, 131, 133, 138, 144, 145, 151, 154, 159, 161, 163, 166, 167, 168, 169, 170, 171, 172, 173, 207, 212, 213, 217, 225, 226], "mathbb": [21, 52, 84, 85, 96, 161, 167], "r": [2, 5, 20, 21, 22, 32, 35, 37, 48, 50, 52, 59, 66, 69, 70, 71, 77, 82, 83, 86, 87, 91, 93, 94, 96, 99, 117, 122, 126, 132, 139, 140, 151, 153, 159, 161, 163, 164, 165, 167, 168, 169, 171, 172, 173, 176, 191, 194, 195, 206, 209, 210, 217, 230, 232, 234, 235, 236, 237], "3": [1, 2, 4, 21, 22, 26, 29, 30, 31, 32, 33, 34, 37, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 61, 63, 64, 67, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 99, 101, 102, 103, 105, 106, 108, 109, 110, 111, 113, 120, 121, 124, 126, 127, 130, 133, 138, 139, 140, 142, 151, 152, 154, 155, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 177, 180, 182, 189, 190, 191, 195, 199, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 234, 236, 237, 241], "time": [2, 5, 7, 19, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 138, 143, 151, 156, 159, 161, 162, 163, 165, 166, 167, 168, 169, 171, 173, 176, 185, 192, 211, 213, 215, 216, 217, 221, 230, 232, 236, 237, 241], "2": [1, 4, 5, 19, 21, 22, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 61, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 93, 94, 96, 99, 101, 102, 103, 104, 108, 110, 113, 115, 117, 118, 119, 122, 124, 126, 127, 130, 131, 132, 133, 138, 139, 140, 142, 147, 150, 151, 152, 153, 154, 155, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 176, 177, 182, 183, 184, 190, 191, 192, 193, 194, 195, 205, 206, 208, 209, 210, 213, 214, 216, 217, 219, 220, 222, 225, 227, 228, 230, 232, 234, 235, 236, 237, 238, 241], "carri": [21, 167], "non": [4, 21, 22, 26, 35, 41, 47, 49, 50, 52, 54, 56, 58, 61, 64, 68, 69, 70, 71, 77, 79, 80, 81, 82, 86, 93, 94, 97, 101, 117, 131, 133, 138, 147, 151, 154, 156, 159, 161, 162, 163, 164, 167, 168, 171, 173, 184, 185, 189, 190, 191, 193, 210, 212, 214, 215, 216, 217, 218, 221, 225, 226, 227, 230, 231, 234, 236, 237], "flat": [21, 22, 48, 50, 52, 71, 77, 82, 161, 167, 169], "geometr": [21, 41, 139, 156, 159, 167, 213], "differenti": [21, 69, 79, 159, 167, 171], "allow": [2, 8, 19, 21, 32, 37, 43, 44, 80, 81, 83, 126, 127, 130, 133, 134, 138, 148, 151, 152, 154, 159, 161, 163, 164, 165, 167, 168, 169, 171, 172, 173, 200, 206, 209, 210, 213, 215, 217, 220, 222, 223, 224, 225, 226], "includ": [2, 5, 14, 21, 22, 26, 37, 66, 70, 80, 83, 86, 91, 101, 110, 119, 127, 138, 141, 152, 154, 155, 159, 161, 162, 163, 165, 166, 167, 168, 171, 172, 173, 175, 208, 210, 217, 221, 227, 234, 241], "notion": [21, 168], "between": [2, 21, 26, 40, 41, 48, 49, 50, 51, 54, 58, 64, 68, 69, 70, 71, 73, 75, 77, 79, 80, 81, 83, 85, 86, 87, 94, 95, 96, 97, 101, 102, 103, 106, 109, 110, 113, 119, 121, 127, 132, 138, 141, 143, 145, 149, 152, 159, 161, 162, 163, 164, 165, 166, 167, 168, 171, 173, 177, 180, 182, 195, 205, 206, 213, 217, 222, 226, 228, 230, 231, 234, 235, 241], "neighbor": [21, 22, 86, 105, 159, 161, 164, 167, 168, 171], "let": [5, 14, 18, 21, 26, 29, 31, 40, 47, 48, 49, 50, 51, 52, 53, 55, 61, 63, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 82, 84, 85, 88, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 105, 106, 110, 111, 115, 118, 120, 121, 126, 127, 130, 131, 133, 137, 139, 142, 143, 144, 145, 146, 159, 171, 211, 241, 243], "f": [1, 5, 6, 21, 26, 32, 37, 44, 48, 52, 59, 66, 68, 71, 73, 77, 78, 79, 81, 82, 85, 86, 90, 96, 105, 119, 120, 121, 143, 144, 148, 159, 161, 162, 163, 164, 167, 168, 169, 170, 171, 173, 174, 179, 200, 234, 236, 237], "y": [1, 2, 21, 22, 26, 34, 35, 59, 64, 73, 74, 77, 79, 80, 85, 86, 87, 89, 90, 91, 101, 113, 115, 130, 133, 138, 139, 140, 152, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 191, 224, 230, 235], "n": [1, 2, 19, 21, 26, 35, 36, 37, 47, 48, 51, 52, 55, 56, 66, 67, 69, 70, 77, 79, 82, 84, 85, 86, 87, 91, 93, 94, 96, 101, 102, 103, 110, 111, 113, 120, 126, 142, 147, 150, 152, 159, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 175, 230, 231, 236, 237], "where": [2, 5, 12, 15, 19, 21, 22, 26, 31, 32, 37, 43, 44, 49, 61, 63, 67, 68, 69, 70, 75, 77, 79, 81, 82, 84, 85, 86, 87, 89, 91, 94, 96, 97, 101, 102, 110, 119, 121, 122, 126, 127, 131, 134, 137, 138, 139, 140, 143, 145, 147, 151, 153, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 190, 191, 197, 200, 203, 205, 206, 220, 230, 231, 234, 241], "denot": [21, 26, 79, 84, 85, 96, 138, 159, 161, 167, 234], "part": [2, 21, 22, 31, 41, 52, 61, 63, 66, 68, 75, 76, 80, 82, 85, 86, 87, 93, 110, 134, 138, 140, 141, 143, 155, 159, 161, 163, 165, 166, 167, 168, 169, 171, 173, 190, 191, 210, 217, 229, 234, 241], "angular": [21, 41, 74, 76, 89, 115, 117, 156, 161, 163, 164, 167, 169, 171, 236, 237], "w": [21, 48, 68, 70, 76, 86, 87, 93, 94, 140, 148, 159, 161, 165, 166, 167, 169, 170, 171, 173, 176, 212, 217], "im": [15, 21, 26, 77, 79, 85, 99, 110, 124, 126, 234], "o": [1, 10, 21, 26, 40, 48, 61, 64, 66, 69, 76, 77, 79, 93, 94, 97, 101, 119, 133, 148, 151, 162, 165, 167, 168, 171, 173, 192, 209, 217, 219, 228, 241], "repres": [5, 21, 22, 33, 43, 48, 67, 75, 77, 82, 83, 84, 85, 87, 88, 108, 110, 111, 117, 122, 126, 127, 138, 140, 143, 145, 151, 153, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 180, 193, 199, 213, 234, 235], "evolut": [21, 79, 102, 159, 161, 167, 174, 217], "Then": [5, 6, 15, 16, 19, 21, 22, 49, 57, 59, 79, 81, 95, 113, 130, 151, 152, 153, 159, 161, 163, 167, 171, 173, 230, 231, 241, 242], "t": [2, 5, 7, 8, 15, 16, 19, 20, 21, 22, 31, 35, 37, 43, 46, 47, 48, 49, 50, 51, 52, 56, 59, 61, 63, 66, 68, 69, 71, 72, 73, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 90, 93, 94, 96, 101, 104, 109, 110, 119, 126, 127, 130, 133, 138, 140, 143, 144, 151, 159, 161, 162, 163, 167, 168, 169, 171, 172, 173, 176, 200, 201, 208, 209, 210, 212, 213, 215, 217, 218, 219, 221, 222, 225, 226, 230, 231, 234, 236, 237, 241, 242], "geq": 21, "0": [2, 5, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 145, 150, 151, 153, 154, 155, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 180, 182, 185, 188, 189, 194, 195, 201, 202, 203, 205, 206, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 234, 236, 237, 241], "given": [21, 22, 69, 80, 81, 83, 84, 85, 86, 91, 93, 96, 106, 110, 121, 124, 133, 140, 152, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 195, 201, 208, 213, 214, 230, 234], "egin": [21, 69, 70, 75, 84, 85, 167], "case": [2, 5, 14, 19, 21, 26, 33, 36, 47, 52, 59, 70, 76, 80, 81, 91, 93, 94, 105, 108, 124, 131, 134, 137, 138, 139, 144, 145, 147, 148, 150, 151, 152, 153, 159, 161, 163, 165, 167, 168, 171, 172, 173, 176, 177, 208, 213, 216, 230, 231, 234, 241], "rac": [21, 66, 69, 70, 75, 84, 85, 167], "partial": [19, 21, 32, 37, 77, 86, 97, 149, 153, 159, 165, 167, 171, 173, 206, 236, 237], "d": [1, 2, 4, 5, 6, 19, 21, 32, 36, 37, 48, 50, 52, 59, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 93, 94, 95, 96, 105, 110, 113, 119, 120, 121, 126, 139, 143, 144, 147, 148, 151, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 179, 182, 183, 189, 191, 192, 195, 200, 216, 222, 230, 232, 234, 236, 237], "33": [21, 22, 30, 33, 34, 37, 41, 44, 50, 52, 71, 76, 79, 80, 82, 83, 87, 91, 111, 156, 159, 161, 163, 167, 173, 185, 191, 208, 215, 236, 237, 241], "cdot": [21, 26, 140, 167, 168, 171, 232], "abla": 21, "44": [21, 22, 29, 37, 50, 67, 71, 75, 76, 79, 80, 82, 105, 106, 108, 109, 120, 162, 167], "delta_": [21, 83], "u": [2, 5, 12, 14, 15, 18, 20, 21, 26, 31, 47, 51, 61, 63, 67, 76, 79, 97, 101, 121, 138, 140, 141, 155, 159, 161, 163, 167, 213, 229, 235, 243], "coeffici": [21, 41, 48, 51, 54, 58, 71, 76, 79, 81, 83, 88, 90, 148, 151, 154, 159, 161, 162, 163, 164, 166, 167, 169, 171, 172, 173, 188, 189, 216, 234], "goe": [21, 81, 83, 172], "laplac": [21, 167], "beltrami": [21, 167], "math": [21, 66, 80, 82, 83, 84, 117, 161, 162, 167, 182, 209, 210, 213, 214, 217, 225], "condit": [21, 32, 37, 85, 96, 113, 161, 167, 168, 171, 173, 211, 213, 217], "noisi": [21, 47, 49, 59, 80, 91, 147, 151, 163, 166, 167, 168, 169], "equat": [21, 26, 49, 70, 84, 138, 161, 163, 167, 168, 169, 171, 173, 185, 210, 230, 231], "solv": [21, 55, 77, 80, 84, 85, 86, 150, 154, 159, 161, 163, 167, 171, 173, 174, 185, 210, 218, 241], "shift": [21, 48, 159, 161, 163, 165, 167, 173, 185, 194, 224], "twist": [21, 163], "convolut": [21, 86, 163, 166, 167], "st_": 21, "its": [19, 21, 35, 50, 52, 56, 73, 80, 81, 82, 83, 86, 87, 90, 91, 93, 110, 113, 117, 130, 131, 133, 139, 140, 143, 144, 146, 154, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 196, 217, 221, 222, 224, 236, 237, 238], "kernel": [21, 22, 70, 86, 87, 93, 102, 159, 163, 166, 167, 171, 173, 176, 180, 225], "p_t": [21, 22], "int_": [21, 161, 167, 169, 234], "t_": [21, 167], "prime": [21, 79, 171], "r_": [21, 83, 167], "ani": [2, 4, 5, 7, 14, 15, 19, 21, 33, 40, 41, 52, 55, 57, 59, 75, 79, 83, 86, 88, 90, 94, 95, 96, 110, 127, 133, 134, 138, 139, 140, 142, 143, 144, 145, 147, 148, 150, 151, 153, 156, 159, 161, 162, 164, 165, 166, 167, 168, 169, 171, 173, 187, 195, 196, 201, 204, 210, 212, 217, 226, 228, 234, 241], "3d": [21, 26, 28, 31, 41, 47, 49, 50, 51, 52, 63, 65, 66, 70, 81, 82, 91, 92, 94, 96, 98, 100, 117, 126, 130, 132, 133, 138, 141, 147, 151, 156, 159, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 182, 183, 194, 204, 208, 209, 213, 221, 225, 226], "rotat": [21, 22, 70, 83, 93, 127, 139, 140, 151, 152, 159, 161, 165, 167, 168, 169, 171, 173, 175, 212, 218, 219], "map": [1, 21, 22, 26, 31, 32, 35, 36, 37, 40, 41, 50, 52, 55, 57, 59, 61, 63, 64, 65, 69, 70, 71, 72, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 92, 97, 99, 101, 102, 103, 106, 108, 109, 111, 113, 119, 123, 125, 130, 131, 142, 149, 152, 153, 154, 156, 159, 161, 162, 163, 165, 166, 167, 168, 170, 171, 172, 173, 176, 177, 193, 208, 210, 212, 213, 218, 221, 222, 224, 225, 226, 236, 237, 239], "vector": [2, 21, 53, 55, 61, 69, 70, 75, 79, 84, 85, 96, 97, 109, 110, 117, 118, 131, 138, 140, 142, 147, 150, 151, 157, 159, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 176, 181, 182, 189, 191, 196, 208, 210, 213, 217, 230, 231, 234, 239], "1": [1, 2, 5, 19, 21, 22, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 61, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 138, 139, 140, 141, 142, 143, 144, 145, 148, 151, 152, 154, 155, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 228, 230, 231, 232, 234, 236, 237], "onto": [5, 21, 139, 161, 167, 172, 235], "euclidean": [21, 140, 159, 161, 167, 168, 171, 235], "account": [5, 9, 19, 21, 49, 69, 77, 85, 86, 91, 101, 117, 159, 161, 162, 163, 167, 209, 222, 223, 234], "space": [1, 2, 21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 48, 52, 63, 65, 68, 69, 70, 72, 73, 75, 80, 82, 89, 90, 92, 93, 95, 96, 97, 101, 102, 105, 119, 127, 130, 131, 138, 143, 144, 147, 148, 151, 152, 154, 156, 159, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 197, 200, 202, 210, 211, 212, 223, 225, 228, 230, 231, 232, 236, 237], "stochast": [21, 52, 167], "interpret": [21, 71, 75, 82, 83, 91, 127, 159, 161, 167, 169, 171, 210, 214], "duitsandfranken2011": [21, 22], "seen": [19, 21, 80, 83, 99, 161, 167, 234], "limit": [21, 33, 68, 70, 79, 82, 151, 159, 161, 164, 165, 166, 167, 168, 172, 173, 212, 213, 225], "obtain": [21, 22, 34, 37, 50, 52, 56, 67, 68, 70, 73, 76, 77, 78, 79, 81, 82, 85, 93, 95, 101, 110, 117, 138, 150, 151, 159, 162, 164, 166, 167, 168, 171, 172, 230], "accumul": 21, "random": [21, 22, 33, 36, 50, 52, 53, 66, 81, 82, 88, 105, 111, 113, 118, 120, 121, 126, 131, 153, 154, 159, 161, 163, 166, 167, 168, 169, 172, 173, 174, 182, 183, 195, 208, 209, 210, 213, 214, 219, 220, 225], "walk": [21, 93, 143, 147, 148, 150, 151, 152, 153], "particl": [21, 25, 27, 41, 79, 83, 149, 151, 154, 171, 173, 206, 212], "each": [5, 18, 21, 22, 26, 28, 30, 31, 33, 36, 37, 41, 49, 52, 55, 56, 59, 61, 63, 66, 69, 72, 75, 79, 80, 81, 82, 83, 86, 87, 88, 91, 93, 95, 96, 101, 102, 103, 106, 108, 109, 110, 113, 117, 118, 119, 122, 124, 126, 127, 130, 134, 137, 138, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 182, 183, 184, 185, 195, 199, 202, 210, 216, 219, 225, 234], "step": [7, 19, 21, 26, 31, 33, 36, 41, 44, 47, 48, 49, 52, 55, 56, 61, 63, 64, 71, 77, 79, 81, 87, 91, 96, 99, 105, 119, 122, 124, 126, 132, 142, 143, 147, 148, 150, 151, 152, 153, 156, 159, 161, 163, 164, 166, 167, 169, 171, 173, 176, 205, 206, 209, 210, 219, 225, 227], "randomli": [21, 79, 121, 151, 164, 168, 171], "forward": [14, 21, 26, 69, 70, 75, 79, 82, 101, 159, 167, 216], "along": [21, 22, 28, 31, 33, 41, 63, 69, 70, 75, 80, 97, 119, 124, 127, 134, 137, 138, 144, 151, 153, 156, 159, 161, 163, 164, 165, 167, 168, 170, 171, 172, 173, 222, 239], "current": [4, 5, 14, 16, 19, 21, 37, 81, 83, 94, 102, 126, 130, 137, 147, 148, 150, 151, 152, 155, 159, 161, 162, 164, 165, 167, 168, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 213, 214, 236, 237, 241], "chang": [2, 3, 4, 7, 9, 15, 16, 21, 52, 68, 69, 73, 77, 79, 80, 81, 88, 91, 95, 105, 121, 126, 130, 133, 138, 141, 145, 154, 159, 161, 162, 163, 164, 165, 166, 167, 168, 171, 173, 182, 190, 191, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 224, 225, 226, 234, 241], "extens": [2, 21, 29, 30, 32, 33, 35, 37, 47, 83, 140, 165, 167, 169, 171, 173, 196, 210, 212, 216, 217, 220], "contour": [21, 99, 124, 172, 173, 195, 210, 212, 213], "2d": [21, 22, 41, 91, 94, 98, 100, 103, 138, 147, 156, 159, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 210, 211, 215, 226], "motion": [21, 41, 54, 58, 65, 91, 92, 149, 154, 159, 161, 162, 167, 173, 192, 225], "b": [1, 2, 5, 6, 19, 21, 22, 26, 41, 48, 49, 50, 52, 53, 55, 56, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 96, 101, 102, 103, 105, 110, 113, 117, 118, 120, 121, 122, 126, 132, 138, 142, 143, 144, 145, 147, 148, 150, 151, 152, 154, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 215, 217, 218, 219, 221, 225, 226, 236, 237, 239], "shown": [21, 22, 48, 50, 68, 77, 80, 82, 85, 91, 117, 142, 143, 159, 167, 172, 173, 195], "right": [4, 5, 14, 19, 21, 22, 26, 37, 48, 49, 50, 51, 56, 59, 61, 71, 74, 79, 80, 82, 91, 93, 96, 101, 115, 119, 124, 127, 130, 131, 133, 138, 139, 143, 159, 161, 162, 165, 167, 168, 172], "adapt": [21, 22, 35, 41, 48, 51, 54, 58, 77, 79, 86, 101, 142, 147, 151, 163, 167, 171, 172, 173, 184, 195, 210, 212, 221], "practic": [4, 21, 48, 59, 68, 77, 80, 87, 89, 124, 148, 161, 167, 212, 222, 234], "exact": [19, 21, 49, 87, 101, 106, 159, 161, 163, 167, 168, 169, 171, 224, 241], "analyt": [21, 41, 49, 65, 78, 90, 92, 105, 120, 121, 149, 151, 159, 163, 164, 167, 168, 170, 173, 179, 200, 221, 234], "formula": [21, 138, 161, 167, 230, 231, 235], "unknown": [20, 21, 167], "approxim": [21, 59, 66, 79, 80, 84, 85, 147, 159, 161, 163, 167, 169, 171, 231], "portegies2015b": [21, 163, 171], "numpi": [2, 18, 21, 22, 26, 28, 32, 35, 36, 37, 40, 46, 47, 48, 49, 50, 51, 52, 53, 56, 59, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 86, 88, 90, 91, 93, 94, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 124, 126, 127, 130, 131, 138, 154, 159, 161, 162, 163, 165, 166, 167, 168, 169, 171, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 224, 225, 226, 227, 238, 241], "dipi": [1, 5, 7, 9, 11, 14, 15, 16, 18, 20, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 138, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 228, 229, 232, 234, 236, 237, 239, 241, 243], "gradient_t": [21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 47, 49, 50, 53, 55, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 89, 90, 91, 101, 115, 117, 118, 122, 124, 127, 132, 167, 169, 174, 212, 239], "get_fnam": [21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 84, 86, 87, 89, 90, 91, 101, 102, 103, 104, 108, 109, 110, 111, 113, 115, 117, 122, 124, 127, 132, 159, 166, 168, 169, 174, 220], "load_nifti_data": [21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 48, 63, 79, 101, 102, 113, 122, 124, 127, 132, 133, 174, 220], "read_bvals_bvec": [21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 47, 49, 50, 55, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 84, 86, 87, 89, 90, 91, 101, 117, 122, 124, 127, 132, 169, 174, 208, 212, 216, 222, 239], "add_nois": [21, 174], "odf_sh_to_sharp": [21, 174], "evalu": [1, 21, 22, 25, 27, 36, 41, 43, 66, 67, 70, 71, 81, 82, 83, 87, 101, 102, 103, 110, 113, 142, 152, 153, 154, 159, 161, 162, 163, 164, 166, 167, 169, 171, 174, 222, 236, 237], "stanford": [20, 21, 22, 26, 31, 36, 51, 59, 63, 87, 93, 94, 101, 103, 162, 208, 218, 222, 236, 237], "dataset": [21, 22, 26, 31, 40, 41, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 58, 61, 63, 64, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 90, 91, 93, 94, 97, 101, 103, 104, 111, 113, 117, 122, 126, 130, 131, 132, 133, 138, 142, 145, 147, 148, 149, 150, 151, 153, 154, 157, 159, 162, 163, 165, 166, 167, 168, 171, 173, 187, 201, 212, 213, 215, 216, 217, 219, 220, 221, 222, 225, 226, 228, 237, 238, 239, 241, 242], "150": [21, 22, 52, 68, 76, 80, 86, 87, 169], "2000": [21, 22, 41, 48, 50, 61, 68, 76, 79, 80, 81, 82, 86, 87, 142, 156, 161, 162, 167, 171, 173, 193, 220, 236, 237], "mm": [1, 21, 22, 32, 41, 53, 55, 57, 70, 77, 82, 83, 87, 89, 97, 101, 105, 106, 118, 126, 138, 151, 156, 159, 161, 164, 167, 168, 169, 171, 172, 173, 193, 195, 199, 200, 205, 206, 230, 236, 237], "rician": [21, 35, 47, 49, 51, 56, 86, 117, 118, 162, 163, 167, 169, 173, 184], "constrain": [2, 21, 22, 30, 32, 33, 37, 41, 44, 64, 65, 66, 76, 77, 80, 81, 85, 86, 87, 92, 149, 154, 161, 162, 163, 164, 166, 167, 171, 173, 189, 193, 216, 217, 218, 221, 234], "deconvolut": [2, 21, 22, 25, 27, 30, 32, 33, 37, 41, 44, 50, 64, 65, 66, 76, 81, 87, 92, 114, 116, 149, 154, 155, 163, 164, 166, 167, 171, 173, 189, 215, 216, 219, 221, 234], "fiber": [21, 23, 24, 26, 29, 30, 31, 33, 34, 35, 59, 63, 64, 65, 66, 70, 71, 72, 74, 75, 79, 81, 82, 87, 91, 92, 96, 107, 112, 115, 117, 119, 127, 149, 151, 154, 159, 163, 164, 166, 167, 169, 170, 171, 173, 189, 205, 210, 213, 219, 222, 225, 226, 228, 236, 237], "read": [2, 5, 12, 14, 15, 16, 21, 22, 26, 36, 38, 39, 41, 43, 44, 46, 61, 67, 72, 73, 75, 76, 78, 80, 83, 84, 85, 89, 90, 101, 104, 105, 106, 108, 118, 119, 120, 133, 138, 142, 154, 159, 161, 162, 165, 166, 167, 168, 173, 174, 208, 212, 217, 218, 221, 222, 225, 228, 239, 241, 242], "hardi_fnam": [21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 52, 59, 63, 64, 66, 67, 68, 75, 86, 87, 91, 101, 103, 122, 124, 127, 132], "hardi_bval_fnam": [21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 52, 59, 63, 64, 66, 67, 68, 75, 86, 87, 91, 101, 103, 122, 124, 127, 132], "hardi_bvec_fnam": [21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 52, 59, 63, 64, 66, 67, 68, 75, 86, 87, 91, 101, 103, 122, 124, 127, 132], "stanford_hardi": [21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 52, 59, 63, 64, 66, 67, 68, 75, 86, 87, 91, 101, 103, 122, 124, 127, 132, 147, 151, 153, 236, 237], "bval": [21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 47, 48, 49, 50, 52, 53, 55, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 89, 90, 91, 93, 101, 117, 118, 122, 124, 127, 132, 142, 147, 150, 151, 159, 161, 162, 163, 165, 167, 169, 173, 174, 185, 187, 192, 193, 196, 203, 208, 215, 222, 227, 230, 239], "bvec": [21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 47, 49, 50, 53, 55, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 89, 90, 91, 93, 101, 117, 118, 122, 124, 127, 132, 142, 147, 150, 151, 159, 161, 162, 163, 165, 167, 169, 171, 173, 174, 181, 182, 187, 188, 189, 191, 193, 196, 203, 212, 217, 219, 221, 230, 239], "gtab": [21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 47, 48, 49, 50, 53, 55, 59, 61, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 101, 115, 117, 118, 122, 124, 127, 132, 159, 161, 162, 163, 166, 167, 169, 171, 213, 222, 224, 227, 239], "add": [2, 4, 5, 12, 14, 15, 16, 19, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 53, 63, 64, 67, 68, 69, 74, 75, 76, 79, 80, 81, 86, 87, 88, 89, 91, 96, 101, 105, 106, 108, 109, 110, 111, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 137, 154, 161, 165, 167, 168, 169, 171, 172, 173, 174, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 241], "b0_slice": 21, "b0_mask": [21, 46, 59, 81, 86, 102, 104], "seed": [2, 21, 22, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 63, 66, 122, 124, 127, 132, 142, 153, 154, 159, 161, 162, 164, 167, 171, 173, 205, 206, 208, 209, 210, 213, 216, 217, 219, 220, 221, 224], "data_noisi": 21, "10": [1, 21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 43, 44, 48, 49, 50, 52, 55, 59, 61, 63, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 94, 97, 99, 101, 102, 103, 105, 106, 108, 109, 111, 117, 120, 121, 124, 126, 130, 133, 142, 143, 147, 148, 151, 154, 155, 156, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 176, 179, 182, 183, 189, 192, 194, 200, 209, 210, 211, 212, 213, 214, 219, 220, 221, 225, 226, 227, 228, 236, 237, 241], "mean": [5, 16, 21, 26, 41, 47, 48, 50, 52, 54, 58, 59, 64, 65, 66, 69, 71, 73, 75, 76, 77, 80, 83, 86, 90, 92, 93, 95, 96, 101, 105, 108, 110, 119, 121, 133, 139, 140, 147, 149, 154, 156, 159, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 180, 182, 184, 190, 191, 193, 194, 195, 205, 206, 217, 218, 219, 222, 235], "noise_typ": [21, 169], "pad": [21, 22, 94, 159, 163, 166, 167], "larger": [21, 33, 47, 50, 68, 71, 86, 96, 99, 105, 111, 117, 149, 159, 161, 164, 166, 167, 169, 171, 173, 176, 208, 212, 241], "region": [21, 22, 26, 31, 32, 37, 59, 63, 66, 68, 70, 71, 77, 79, 82, 86, 91, 94, 105, 124, 126, 127, 162, 163, 167, 171, 236, 237], "avoid": [2, 5, 21, 33, 48, 52, 69, 70, 75, 77, 82, 93, 109, 159, 161, 166, 167, 171, 173, 210, 212, 214, 215, 217, 219, 220, 225, 226], "boundari": [21, 37, 159, 164, 168, 171, 172, 173, 201], "effect": [6, 21, 32, 35, 37, 48, 49, 69, 70, 77, 82, 83, 86, 91, 101, 102, 139, 147, 148, 153, 159, 161, 163, 165, 166, 167, 168, 171, 172, 173, 191, 195, 230, 231, 234, 236, 237], "data_smal": [21, 22, 55, 67, 68, 76, 77, 80, 86, 87, 89], "25": [21, 22, 29, 30, 31, 33, 34, 35, 36, 37, 43, 44, 50, 62, 63, 67, 68, 70, 71, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 99, 102, 105, 122, 124, 126, 129, 132, 133, 152, 153, 159, 162, 164, 166, 167, 168, 169, 171, 173, 215], "40": [21, 22, 26, 29, 30, 33, 34, 35, 36, 37, 41, 48, 50, 57, 59, 66, 71, 76, 77, 79, 80, 81, 82, 86, 89, 99, 102, 105, 106, 120, 122, 126, 127, 156, 159, 161, 164, 167, 168, 173, 190, 215, 236, 237], "65": [21, 22, 29, 30, 34, 37, 50, 52, 70, 71, 76, 77, 79, 80, 82, 89, 99, 111, 167, 169, 173, 190, 215], "80": [21, 22, 29, 30, 34, 37, 47, 50, 68, 71, 73, 76, 77, 79, 80, 82, 83, 86, 90, 124, 126, 151, 162, 215, 218, 236, 237], "35": [4, 21, 22, 26, 29, 30, 34, 35, 36, 37, 50, 52, 58, 68, 71, 73, 76, 79, 80, 81, 82, 83, 93, 94, 95, 101, 102, 103, 111, 124, 127, 130, 152, 159, 162, 163, 164, 167, 169, 215, 218, 234], "42": [2, 5, 21, 22, 29, 34, 37, 48, 50, 53, 71, 76, 77, 79, 80, 82, 131, 151, 167, 169, 171, 173, 192, 217], "data_noisy_smal": 21, "enabl": [21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 53, 61, 63, 67, 68, 74, 75, 80, 84, 85, 86, 87, 88, 89, 91, 108, 109, 110, 111, 115, 118, 126, 127, 159, 163, 167, 171, 172, 173, 175, 195, 200, 211, 220, 241], "disabl": [5, 21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 53, 63, 64, 67, 68, 74, 75, 80, 86, 87, 88, 89, 91, 108, 109, 110, 111, 115, 118, 126, 127, 133, 163, 167, 173, 175, 215], "interact": [5, 21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 53, 63, 64, 67, 68, 74, 75, 80, 81, 86, 87, 88, 89, 91, 95, 97, 105, 106, 108, 109, 110, 111, 115, 118, 120, 122, 124, 126, 127, 128, 129, 132, 133, 143, 154, 159, 161, 167, 168, 169, 171, 172, 173, 180, 195, 213, 228, 238], "fals": [5, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 48, 50, 52, 53, 63, 64, 67, 68, 70, 71, 73, 74, 75, 78, 80, 81, 82, 86, 87, 88, 89, 91, 95, 96, 97, 101, 105, 106, 108, 109, 110, 111, 115, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 152, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 180, 185, 191, 208, 225, 227], "csd": [2, 21, 22, 30, 32, 33, 34, 37, 41, 42, 45, 65, 66, 68, 76, 86, 92, 143, 149, 154, 156, 166, 167, 173, 208, 210, 212, 213, 216, 217, 218, 219, 220, 221, 222, 226, 228], "origin": [4, 5, 15, 16, 21, 22, 31, 35, 37, 40, 41, 46, 47, 48, 49, 50, 51, 52, 56, 61, 63, 69, 71, 73, 76, 77, 79, 80, 82, 83, 85, 86, 88, 90, 91, 93, 94, 101, 104, 105, 108, 130, 144, 145, 147, 156, 159, 161, 163, 166, 167, 168, 169, 171, 173, 174, 180, 200, 208, 217, 219, 220, 221, 234, 235], "constrainedsphericaldeconvmodel": [21, 22, 29, 30, 32, 33, 34, 37, 44, 66, 68, 174], "respons": [21, 22, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 44, 63, 65, 66, 81, 87, 92, 117, 151, 154, 162, 167, 168, 171, 173, 189, 208, 216, 217, 218, 219, 221, 222, 226], "ratio": [21, 22, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 59, 63, 66, 68, 79, 80, 86, 87, 138, 159, 166, 167, 168, 169, 171, 173, 203], "roi_radii": [21, 22, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 63, 66, 68, 81, 86, 87, 167, 173, 189], "fa_thr": [21, 22, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 63, 66, 68, 86, 87, 151, 167, 173, 189], "7": [1, 5, 19, 21, 22, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 44, 49, 50, 53, 56, 63, 66, 68, 70, 71, 73, 76, 77, 79, 80, 81, 82, 83, 86, 87, 99, 105, 106, 111, 119, 138, 141, 151, 154, 155, 156, 159, 161, 162, 166, 167, 168, 170, 171, 173, 209, 213, 217, 218, 219, 221, 228, 241], "csd_model_orig": 21, "csd_fit_orig": 21, "csd_shm_orig": 21, "shm_coeff": [21, 22, 30, 32, 33, 37, 81, 164, 165, 167, 174, 221], "csd_model_noisi": 21, "csd_fit_noisi": 21, "csd_shm_noisi": 21, "inspir": [21, 22, 81, 168], "rodrigues2010": [21, 22], "lookup": [21, 22, 133, 163, 164, 171], "contain": [2, 4, 21, 22, 26, 40, 41, 46, 50, 52, 66, 67, 68, 69, 70, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 96, 104, 109, 111, 130, 133, 134, 137, 141, 142, 148, 150, 151, 152, 154, 156, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 199, 201, 203, 205, 206, 208, 210, 211, 212, 213, 214, 219, 220, 221, 223, 224, 225, 226, 227, 235, 241], "sampl": [1, 21, 32, 33, 35, 41, 65, 69, 70, 80, 82, 85, 88, 91, 92, 93, 94, 99, 103, 117, 122, 137, 138, 143, 156, 159, 161, 163, 164, 166, 167, 170, 171, 208, 210, 214, 225, 227], "over": [1, 19, 21, 22, 26, 40, 49, 80, 83, 84, 85, 94, 97, 103, 138, 139, 140, 147, 159, 161, 162, 163, 165, 167, 171, 172, 210, 220, 224, 230], "discret": [21, 22, 33, 35, 43, 67, 80, 93, 152, 153, 159, 161, 162, 164, 167, 168, 171, 173, 175, 202, 215], "ensur": [2, 5, 21, 22, 69, 70, 80, 127, 159, 161, 165, 167, 171, 173, 221], "rotation": [21, 22, 80, 83, 161], "invari": [21, 22, 41, 65, 70, 80, 83, 92, 110, 151, 161, 163, 167, 168, 171, 172, 210], "equal": [4, 21, 22, 26, 33, 68, 73, 75, 79, 80, 83, 90, 96, 99, 126, 151, 159, 161, 164, 167, 168, 169, 171, 172, 173, 206, 212, 215, 217, 221, 230, 231], "By": [19, 21, 22, 33, 40, 52, 61, 73, 75, 81, 86, 91, 95, 108, 109, 113, 133, 137, 139, 145, 159, 161, 166, 167, 168, 169, 171, 172, 230, 234], "100": [21, 22, 26, 29, 30, 33, 34, 37, 40, 41, 48, 50, 53, 55, 68, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 88, 89, 90, 93, 94, 99, 101, 102, 111, 113, 115, 118, 119, 120, 122, 126, 156, 159, 162, 163, 167, 168, 169, 170, 171, 173, 175, 215, 236, 237], "enhancement_kernel": [21, 22, 174], "enhancementkernel": [21, 22, 171, 174], "shift_twist_convolut": [21, 174], "convolv": [21, 174], "d33": [21, 22, 163], "d44": [21, 22, 163], "02": [21, 22, 24, 29, 30, 33, 34, 37, 40, 45, 50, 53, 58, 62, 71, 76, 77, 79, 80, 82, 83, 84, 85, 100, 103, 116, 129, 167, 209, 210, 215, 222], "k": [1, 2, 21, 22, 26, 32, 37, 41, 48, 52, 59, 61, 64, 65, 67, 70, 82, 84, 85, 91, 92, 93, 94, 96, 108, 110, 122, 124, 133, 138, 142, 148, 151, 153, 159, 161, 162, 166, 167, 168, 169, 171, 172, 173, 191, 195, 206, 230, 232, 234, 236, 237], "shm": [21, 22, 29, 30, 31, 33, 34, 43, 63, 64, 67, 81, 88, 122, 124, 127, 132, 164, 173, 174, 208, 213, 215, 216, 217, 221, 234], "sf_to_sh": [21, 88, 174], "sh_to_sf": [21, 88, 174], "delta": [21, 69, 79, 138, 151, 161, 172, 173, 174, 193, 217, 226, 230, 232], "spike": 21, "zero": [2, 21, 22, 26, 40, 41, 50, 70, 71, 72, 77, 79, 81, 82, 83, 84, 86, 94, 99, 106, 117, 124, 126, 132, 156, 159, 161, 163, 164, 165, 166, 167, 168, 169, 171, 210, 211, 212, 213, 219, 225, 227, 230, 231], "get_orient": [21, 163, 174], "shape": [21, 22, 26, 31, 32, 35, 37, 41, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 61, 63, 64, 67, 68, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 83, 84, 86, 88, 89, 90, 93, 94, 96, 97, 99, 101, 103, 104, 105, 108, 110, 113, 118, 120, 123, 125, 126, 127, 130, 131, 133, 140, 145, 149, 152, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 179, 189, 191, 200, 208, 209, 210, 215, 217, 219, 221, 222, 225, 226], "dtype": [21, 71, 99, 101, 102, 106, 111, 159, 161, 163, 165, 167, 169, 171, 173, 174, 208, 215, 216, 219, 221, 226], "spike_shm_conv": 21, "get_spher": [21, 34, 36, 43, 64, 72, 74, 75, 76, 78, 80, 81, 86, 87, 88, 89, 115, 118, 167, 171, 174], "sh_order": [21, 22, 29, 30, 31, 33, 34, 63, 64, 68, 76, 81, 86, 88, 122, 124, 132, 151, 163, 164, 166, 167, 173, 188, 189], "8": [1, 2, 21, 22, 26, 29, 30, 31, 33, 34, 37, 41, 44, 49, 50, 52, 53, 59, 63, 64, 68, 70, 71, 76, 79, 80, 81, 82, 83, 86, 87, 88, 89, 93, 94, 97, 105, 111, 122, 124, 127, 132, 133, 151, 154, 155, 156, 159, 161, 162, 163, 164, 165, 166, 167, 169, 171, 173, 182, 205, 206, 208, 212, 213, 215, 218, 219, 220, 221, 223, 228, 232], "test_mod": [21, 163], "true": [2, 4, 21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 46, 47, 49, 50, 51, 52, 56, 57, 59, 61, 63, 64, 67, 68, 72, 75, 78, 79, 80, 83, 86, 88, 93, 94, 95, 96, 97, 101, 104, 105, 110, 111, 120, 121, 122, 124, 127, 130, 132, 138, 152, 159, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 175, 176, 180, 183, 184, 188, 189, 193, 195, 199, 205, 206, 212, 221], "spike_sf_conv": 21, "model_kernel": 21, "odf_slic": [21, 64, 67, 68, 74, 75, 76, 80, 81, 86, 87, 88, 89, 115, 118, 213], "6": [1, 3, 19, 21, 22, 29, 30, 31, 33, 34, 37, 41, 48, 50, 52, 53, 56, 59, 63, 64, 66, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 82, 83, 84, 85, 89, 90, 95, 96, 103, 105, 106, 108, 109, 110, 111, 119, 120, 122, 124, 127, 130, 132, 141, 151, 154, 155, 156, 159, 161, 162, 165, 167, 168, 169, 171, 173, 190, 191, 199, 203, 208, 210, 211, 213, 214, 216, 217, 225, 227, 228, 230, 231, 241], "scale": [21, 64, 67, 68, 74, 75, 76, 80, 81, 82, 86, 87, 89, 91, 93, 99, 101, 102, 115, 127, 140, 152, 159, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 186, 193, 200, 214, 222, 225, 230, 232], "4": [1, 21, 22, 26, 28, 29, 30, 32, 33, 34, 36, 37, 40, 43, 46, 47, 48, 50, 51, 52, 53, 56, 57, 59, 67, 68, 69, 70, 71, 72, 73, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 90, 93, 94, 96, 101, 102, 103, 104, 108, 109, 111, 113, 120, 122, 127, 130, 133, 138, 140, 142, 147, 148, 151, 154, 155, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 189, 191, 199, 208, 209, 210, 213, 219, 222, 225, 228, 230, 234, 236, 237, 238, 241], "displai": [2, 21, 22, 26, 31, 35, 36, 63, 67, 74, 76, 80, 89, 101, 106, 115, 127, 130, 131, 132, 133, 162, 172, 173, 195, 210, 214, 220], "x": [2, 10, 19, 21, 22, 26, 35, 59, 79, 84, 85, 87, 89, 96, 101, 110, 117, 127, 130, 133, 138, 139, 140, 152, 154, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 184, 208, 211, 215, 219, 221, 224, 228, 230, 235, 241], "set_camera": [21, 22, 28, 64, 105, 106, 120, 126, 127, 131], "30": [21, 22, 29, 30, 33, 34, 35, 37, 41, 48, 50, 66, 71, 73, 74, 76, 77, 79, 80, 82, 83, 89, 90, 100, 101, 105, 106, 111, 115, 120, 126, 131, 143, 144, 155, 156, 159, 161, 171, 173, 213, 215, 236, 237], "focal_point": [21, 22, 64, 105, 106, 120, 126, 127, 131], "view_up": [21, 22, 28, 64, 105, 106, 120, 127, 131], "record": [21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 53, 63, 64, 66, 67, 68, 74, 75, 76, 80, 81, 86, 87, 88, 89, 91, 96, 101, 105, 106, 108, 109, 110, 111, 115, 118, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 166, 168, 171, 172, 212, 213, 214, 217, 219, 221, 227], "out_path": [21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 53, 63, 64, 67, 68, 74, 75, 76, 80, 81, 86, 87, 88, 89, 91, 96, 101, 105, 106, 108, 109, 110, 111, 115, 118, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133], "png": [21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 46, 47, 48, 49, 50, 51, 52, 53, 56, 59, 61, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 172, 173, 214, 221], "900": [21, 22, 31, 36, 63, 68, 77, 79, 89, 96, 101, 121, 126, 130, 132, 133, 209, 236, 237], "show": [5, 14, 16, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 61, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 99, 101, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 120, 121, 122, 124, 126, 127, 130, 132, 133, 139, 142, 163, 166, 167, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 213, 215, 219, 220, 225, 230, 239], "csd_shm_enh": 21, "sharpen": [21, 80, 167, 216], "csd_shm_enh_sharp": 21, "lambda_": [21, 167], "convert": [4, 19, 21, 70, 82, 88, 117, 161, 164, 165, 166, 167, 168, 171, 173, 189, 209, 213, 219, 221, 227], "raw": [21, 47, 67, 72, 73, 75, 78, 90, 91, 138, 162, 164, 166, 217], "form": [14, 19, 21, 75, 76, 93, 94, 151, 159, 161, 162, 163, 167, 168, 169, 171, 173, 230, 231, 241], "csd_sf_orig": 21, "csd_sf_noisi": 21, "csd_sf_enh": 21, "csd_sf_enh_sharp": 21, "normal": [21, 28, 73, 75, 77, 82, 86, 93, 94, 101, 102, 103, 110, 134, 140, 141, 152, 159, 161, 163, 164, 165, 167, 168, 171, 172, 174, 217, 218, 221, 234], "amax": 21, "observ": [2, 21, 33, 47, 48, 56, 64, 74, 77, 82, 85, 86, 97, 113, 115, 139, 153, 161, 167, 168], "diffus": [1, 2, 18, 21, 22, 26, 31, 32, 33, 35, 36, 37, 41, 48, 49, 50, 52, 53, 54, 56, 58, 61, 63, 64, 65, 66, 67, 68, 73, 74, 76, 77, 78, 79, 81, 84, 85, 86, 87, 90, 91, 92, 93, 101, 106, 115, 117, 122, 127, 130, 138, 142, 143, 144, 145, 148, 149, 153, 154, 155, 156, 159, 161, 162, 163, 164, 165, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 215, 223, 225, 230, 231, 232, 234, 236, 237, 241, 242, 243], "closer": [21, 95, 103, 152, 159, 222], "noiseless": [21, 91, 117, 118], "fodf_spheres_org": 21, "z": [2, 21, 22, 26, 35, 59, 67, 69, 79, 84, 85, 89, 101, 117, 127, 130, 133, 138, 139, 140, 152, 159, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 177, 230, 235], "setposit": [21, 126, 133], "fodf_spher": [21, 68, 81, 86, 87], "fodf_spheres_enh": 21, "fodf_spheres_enh_sharp": 21, "top": [2, 5, 14, 21, 26, 71, 93, 102, 103, 124, 132, 139, 161, 172, 209, 215, 219, 241], "left": [5, 21, 22, 26, 37, 47, 48, 49, 50, 51, 52, 56, 59, 61, 66, 69, 71, 74, 80, 82, 83, 84, 85, 87, 93, 94, 95, 96, 97, 101, 105, 106, 115, 119, 120, 124, 127, 130, 131, 133, 138, 139, 143, 144, 145, 159, 161, 162, 163, 165, 167, 168, 172], "bottom": [21, 22, 139], "snr": [21, 41, 50, 51, 54, 56, 58, 74, 82, 115, 117, 118, 147, 162, 167, 169, 210, 217, 221], "meester": [20, 21, 22, 163, 171, 209, 210], "g": [1, 2, 5, 6, 12, 19, 21, 22, 26, 28, 30, 32, 37, 48, 56, 61, 64, 67, 70, 72, 73, 75, 77, 78, 79, 80, 82, 83, 86, 87, 89, 90, 91, 93, 94, 99, 101, 102, 103, 108, 110, 122, 124, 126, 130, 132, 138, 139, 142, 144, 147, 148, 150, 151, 152, 153, 154, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 191, 205, 206, 228, 230, 231], "sanguinetti": [21, 22, 163, 171, 208], "e": [1, 2, 5, 6, 12, 19, 20, 21, 22, 26, 28, 30, 31, 32, 35, 37, 48, 50, 52, 56, 61, 63, 64, 67, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 89, 90, 91, 94, 95, 99, 101, 105, 106, 108, 109, 110, 111, 117, 119, 120, 121, 124, 130, 138, 139, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 215, 217, 228, 229, 230, 231, 234, 236, 237, 242], "garyfallidi": [1, 2, 18, 20, 21, 22, 31, 52, 63, 77, 78, 95, 96, 97, 105, 108, 109, 110, 111, 119, 120, 121, 130, 142, 143, 144, 145, 152, 153, 159, 162, 163, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 236, 237], "j": [1, 2, 21, 22, 26, 29, 32, 35, 37, 41, 48, 50, 52, 59, 61, 66, 68, 69, 70, 71, 75, 76, 77, 79, 81, 84, 85, 86, 87, 89, 96, 101, 102, 103, 105, 113, 119, 120, 121, 133, 138, 143, 144, 148, 151, 152, 156, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 179, 182, 183, 185, 186, 189, 190, 191, 192, 195, 200, 215, 226, 230, 232, 234, 236, 237], "portegi": [21, 22, 163, 171], "duit": [21, 22, 163, 171], "2016": [21, 22, 29, 41, 48, 50, 52, 70, 71, 76, 79, 80, 81, 82, 84, 85, 141, 142, 155, 156, 161, 162, 163, 167, 168, 171, 173, 182, 183, 209, 210, 220, 236, 237], "fast": [1, 14, 21, 31, 41, 63, 70, 71, 79, 81, 82, 83, 93, 107, 110, 112, 113, 127, 141, 142, 151, 154, 159, 163, 164, 167, 168, 169, 171, 172, 173, 195, 208, 210, 215, 227, 234, 236, 237, 241], "ismrm": [21, 66, 79, 95, 96, 155, 159, 163, 167, 168, 171, 172, 173, 195, 202, 217, 221], "confer": [21, 22, 159, 163, 167, 171], "fick": [20, 21, 22, 41, 80, 156, 162, 163, 167, 171, 210, 211, 213, 236, 237], "girard": [20, 21, 22, 28, 32, 37, 153, 163, 171, 173, 206, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 221, 224, 225, 227], "2015": [1, 21, 22, 35, 36, 41, 48, 70, 76, 79, 82, 86, 87, 95, 96, 117, 141, 144, 148, 151, 152, 154, 155, 156, 159, 162, 163, 167, 169, 171, 173, 202, 208, 209, 210, 218, 220, 236, 237, 241], "improv": [21, 22, 26, 32, 37, 47, 50, 51, 81, 85, 86, 97, 101, 141, 145, 152, 154, 159, 161, 163, 167, 168, 171, 173, 208, 210, 211, 212, 215, 217, 219, 220, 221, 222, 223, 225, 226], "combin": [5, 21, 22, 31, 36, 41, 47, 56, 63, 80, 81, 83, 84, 86, 87, 89, 99, 127, 135, 136, 159, 161, 163, 167, 171, 173, 210], "flow": [21, 22, 137, 159, 163, 167, 171, 173, 212, 213, 220, 226], "plo": [21, 22, 35, 36, 49, 50, 52, 86, 87, 119, 162, 163, 166, 167, 170, 171, 173, 182, 236, 237], "One": [21, 22, 26, 33, 35, 48, 52, 56, 59, 66, 68, 70, 75, 81, 86, 91, 119, 131, 142, 159, 161, 162, 163, 166, 167, 170, 171, 209, 211, 213, 226, 231, 241], "se": [21, 76, 77, 163], "applic": [21, 22, 43, 46, 48, 50, 56, 70, 75, 80, 82, 86, 104, 126, 159, 161, 163, 165, 166, 167, 168, 173, 194, 241], "neuroimag": [21, 28, 29, 32, 37, 41, 48, 50, 59, 61, 68, 69, 70, 71, 72, 73, 74, 77, 80, 81, 82, 84, 85, 86, 90, 91, 95, 96, 105, 115, 117, 119, 122, 141, 143, 144, 148, 151, 152, 153, 156, 159, 161, 162, 163, 164, 167, 168, 169, 171, 173, 182, 183, 189, 191, 197, 200, 202, 206, 208, 229, 234, 236, 237, 241, 242], "fifth": [21, 163], "intern": [21, 22, 33, 40, 50, 71, 79, 81, 105, 109, 111, 141, 159, 163, 167, 168, 171, 172, 173, 195, 215], "variat": [21, 26, 52, 86, 159, 163, 167, 168, 173], "comput": [1, 4, 16, 21, 22, 28, 31, 35, 40, 43, 44, 47, 48, 49, 50, 52, 59, 63, 64, 68, 69, 70, 71, 73, 75, 76, 77, 79, 80, 81, 82, 86, 89, 90, 93, 94, 95, 97, 101, 105, 106, 108, 109, 110, 117, 120, 121, 132, 141, 143, 148, 151, 152, 154, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 176, 179, 189, 190, 191, 192, 200, 203, 210, 213, 221, 234, 238, 241], "vision": [18, 21, 22, 159, 163, 167], "franken": [21, 22, 163], "2011": [1, 21, 22, 41, 47, 51, 59, 70, 71, 73, 79, 89, 90, 93, 94, 96, 101, 102, 103, 113, 143, 147, 151, 152, 156, 159, 161, 163, 167, 168, 173, 190, 215, 220, 236, 237], "journal": [21, 22, 35, 36, 49, 50, 52, 79, 86, 87, 122, 130, 151, 155, 163, 166, 167, 169, 171, 173, 182, 191, 192, 236, 237], "92": [21, 22, 30, 34, 37, 41, 50, 71, 76, 77, 79, 80, 82, 86, 156, 163, 167, 169, 217], "231": [21, 22, 76, 79, 80, 161, 163], "264": [21, 22, 76, 79, 80, 163, 216], "p": [2, 5, 14, 21, 22, 35, 49, 50, 51, 52, 64, 73, 74, 86, 90, 113, 115, 141, 143, 147, 159, 161, 163, 165, 166, 167, 168, 169, 171, 173, 182, 191, 232, 234, 235], "rodrigu": [21, 22, 161], "romeni": [21, 22], "A": [2, 5, 6, 12, 17, 21, 22, 26, 28, 31, 32, 35, 36, 37, 48, 49, 50, 52, 55, 56, 63, 64, 66, 68, 69, 70, 71, 76, 77, 80, 81, 82, 85, 86, 87, 91, 93, 96, 105, 110, 113, 119, 120, 121, 122, 124, 126, 130, 131, 132, 133, 134, 137, 138, 140, 141, 142, 143, 144, 145, 148, 150, 151, 153, 154, 155, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 218, 219, 230, 231, 234, 236, 237, 241], "vilanova": [21, 22], "2010": [1, 21, 22, 41, 43, 67, 70, 74, 76, 78, 96, 115, 142, 151, 156, 159, 161, 162, 167, 169, 220, 236, 237, 241], "acceler": [21, 22, 41, 64, 86, 93, 148, 156, 159, 167, 173], "dw": [21, 22, 59, 64, 117, 124, 167], "mri": [1, 2, 18, 21, 22, 26, 31, 32, 35, 36, 37, 41, 46, 48, 50, 52, 56, 59, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 94, 104, 106, 122, 124, 138, 142, 143, 144, 145, 147, 148, 149, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 221, 223, 225, 234, 236, 237, 242], "eurograph": [21, 22], "workshop": [21, 22, 76, 89, 155, 167, 214], "biologi": [21, 22, 127], "medicin": [21, 22, 50, 52, 53, 67, 70, 71, 76, 79, 81, 82, 86, 142, 151, 163, 167, 168, 169, 172, 173, 183, 195], "associ": [21, 22, 52, 69, 71, 77, 133, 159, 161, 162, 164, 165, 167, 168, 169, 171, 173, 185, 205, 206, 215, 234], "total": [21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 142, 161, 163, 166, 167, 169, 171, 173, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "script": [19, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 142, 173, 189, 199, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 235, 241], "minut": [4, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 241], "000": [26, 32, 41, 58, 69, 70, 81, 83, 85, 92, 110, 111, 113, 131, 156, 161, 167, 169], "second": [14, 19, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 151, 159, 161, 166, 167, 168, 169, 171, 172, 173, 215, 220, 230, 241], "sourc": [3, 17, 18, 19, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 138, 159, 161, 163, 167, 168, 171, 173, 215], "contextual_enhanc": [21, 24], "jupyt": [21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 227], "notebook": [21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 210, 212, 219, 221, 227], "ipynb": [21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137], "galleri": [21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 141, 154, 155, 210, 216, 219, 227, 228], "sphinx": [2, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 141, 213, 214, 221, 222, 227, 241], "fbc": [22, 154, 171, 210, 222], "quantit": [22, 32, 37, 70, 76, 153, 167, 170, 171, 173, 191, 236, 237], "surround": [22, 83, 91, 159], "These": [2, 7, 11, 19, 22, 35, 37, 40, 48, 49, 59, 66, 70, 71, 75, 77, 79, 80, 83, 86, 93, 113, 117, 119, 122, 127, 151, 159, 161, 162, 163, 167, 169, 208, 210, 211, 212, 213, 214, 219, 220, 221, 223, 224, 225, 226, 227, 230, 231, 232, 234, 235], "clean": [12, 19, 22, 141, 154, 168, 171, 210, 212, 213, 214, 215, 216, 218, 219, 225, 241], "low": [18, 22, 37, 41, 47, 70, 79, 80, 81, 82, 87, 91, 108, 122, 138, 147, 151, 156, 159, 161, 163, 166, 167, 168, 169, 171], "indic": [22, 28, 41, 43, 50, 59, 65, 67, 70, 71, 75, 76, 80, 91, 92, 102, 106, 108, 109, 110, 111, 121, 124, 151, 159, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 188, 189, 197, 199, 200, 216, 222, 224, 225], "isol": [22, 59, 80, 86, 159], "poorli": [22, 167], "figur": [2, 22, 26, 31, 35, 37, 44, 46, 47, 48, 50, 52, 59, 61, 63, 71, 73, 76, 77, 79, 81, 82, 83, 84, 90, 93, 94, 101, 102, 103, 104, 113, 117, 124, 126, 127, 154, 161, 171, 172, 173, 195, 208, 210, 211, 212, 219], "below": [22, 28, 37, 40, 41, 48, 49, 50, 52, 65, 69, 70, 71, 75, 77, 81, 110, 122, 124, 126, 131, 133, 139, 143, 153, 159, 161, 165, 166, 167, 169, 170, 171, 173, 176, 214, 234, 236, 241], "On": [1, 5, 22, 70, 80, 108, 159, 161, 167, 213, 241], "illustr": [22, 48, 53, 67, 68, 69, 70, 75, 77, 80, 81, 82, 83, 86, 87, 88, 91, 118, 147, 159, 161, 167, 169, 226, 235], "contribut": [2, 18, 20, 22, 26, 71, 77, 79, 82, 83, 94, 117, 118, 119, 141, 159, 166, 167, 169, 171, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 232], "two": [1, 19, 22, 26, 29, 41, 47, 48, 50, 53, 56, 59, 61, 64, 66, 68, 69, 71, 73, 75, 77, 79, 81, 82, 83, 85, 87, 89, 90, 93, 94, 96, 97, 101, 102, 103, 108, 109, 110, 113, 117, 118, 121, 126, 127, 133, 138, 139, 143, 144, 145, 151, 152, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 180, 192, 216, 230, 231, 234, 241], "densiti": [22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 63, 70, 75, 86, 101, 122, 123, 124, 125, 132, 151, 159, 167, 169, 171, 173, 205, 206, 217, 232], "estim": [1, 22, 30, 31, 32, 33, 37, 41, 47, 48, 51, 52, 54, 58, 63, 65, 66, 69, 70, 71, 75, 76, 77, 79, 80, 81, 82, 84, 85, 87, 89, 91, 92, 99, 101, 127, 138, 147, 148, 151, 153, 154, 156, 159, 161, 164, 167, 168, 169, 171, 173, 174, 176, 182, 183, 184, 190, 191, 192, 193, 206, 208, 209, 210, 211, 217, 219, 221, 222, 223, 230, 231], "sum": [22, 26, 59, 68, 70, 72, 73, 78, 80, 81, 82, 84, 86, 87, 90, 99, 102, 108, 110, 139, 152, 159, 161, 162, 166, 167, 168, 169, 170, 171, 173, 176], "color": [4, 22, 26, 28, 31, 35, 36, 48, 53, 59, 63, 66, 75, 79, 83, 91, 95, 96, 97, 99, 101, 102, 103, 105, 106, 108, 109, 110, 111, 113, 120, 121, 122, 126, 127, 130, 132, 133, 143, 144, 154, 159, 165, 167, 168, 171, 172, 173, 190, 191, 195, 208, 210, 212, 213, 217, 225, 239], "spuriou": [19, 22, 80, 91, 96, 167, 171], "badli": [22, 59], "identifi": [22, 31, 32, 35, 41, 59, 63, 91, 127, 130, 153, 156, 159, 161, 162, 163, 165, 166, 167, 168, 171, 173, 196, 205, 230], "lfbc": [22, 171], "deviat": [22, 47, 51, 56, 59, 69, 83, 91, 102, 117, 147, 159, 163, 164, 167, 168, 169, 171, 172, 173, 176, 182, 183, 217, 225], "portegies2015": [22, 163], "5d": [22, 163, 165], "first": [2, 5, 14, 16, 19, 22, 26, 28, 31, 36, 40, 43, 46, 47, 48, 49, 51, 52, 53, 56, 59, 61, 63, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 101, 102, 103, 104, 105, 106, 108, 109, 111, 113, 117, 118, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 137, 142, 143, 144, 145, 146, 151, 152, 153, 159, 161, 163, 166, 167, 168, 169, 171, 172, 173, 211, 229, 241], "induc": [22, 70, 167], "lift": 22, "defin": [2, 22, 30, 32, 36, 37, 48, 50, 59, 69, 70, 71, 75, 77, 79, 82, 83, 84, 85, 89, 91, 94, 95, 96, 99, 102, 103, 108, 109, 110, 113, 117, 122, 140, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 195, 199, 201, 210, 212, 218, 221, 225, 227, 234], "whole": [22, 68, 83, 86, 124, 163, 168, 171, 236, 237], "rel": [2, 4, 5, 22, 26, 36, 66, 75, 91, 119, 122, 145, 161, 163, 164, 167, 170, 171, 173, 208, 210, 213, 214, 215], "rfbc": [22, 171], "averag": [22, 32, 47, 68, 70, 79, 82, 84, 85, 86, 87, 96, 97, 105, 138, 143, 144, 147, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 195, 210, 232, 236, 237], "detail": [8, 9, 12, 13, 22, 26, 37, 40, 48, 50, 51, 52, 56, 70, 71, 77, 79, 81, 82, 84, 89, 93, 122, 138, 141, 142, 146, 161, 162, 167, 168, 208, 217, 221, 236, 241], "found": [22, 32, 48, 80, 83, 85, 93, 122, 124, 134, 137, 141, 153, 154, 161, 163, 164, 167, 171, 173, 184, 185, 199, 208, 210, 227, 229, 230, 231], "load_nifti": [22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 46, 47, 49, 50, 51, 52, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 80, 81, 82, 84, 86, 87, 89, 90, 91, 93, 94, 101, 103, 104, 119, 122, 124, 127, 132, 133, 159, 162, 174, 239], "label_fnam": [22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 63, 122, 124, 127, 132], "stanford_label": [22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 63, 122, 124, 127, 132, 236, 237], "t1_fname": [22, 26, 35, 36, 48, 51, 70, 71, 80, 81, 82, 103, 113, 124, 127], "stanford_t1": [22, 26, 35, 36, 51, 124, 127, 236, 237], "label": [2, 3, 4, 15, 19, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 63, 64, 66, 79, 82, 83, 91, 101, 102, 103, 111, 117, 118, 122, 124, 126, 127, 130, 132, 152, 159, 162, 166, 168, 171, 172, 173, 197, 208, 211, 213, 219, 221, 236, 237], "t1_data": [22, 26, 35, 36, 124, 127], "relev": [2, 22, 41, 69, 70, 71, 77, 79, 82, 85, 117, 142, 143, 144, 145, 154, 166, 167, 170, 171, 173, 241], "hemispher": [22, 33, 53, 82, 88, 97, 118, 145, 162, 164, 167, 174, 215], "coordin": [22, 26, 28, 46, 53, 55, 57, 61, 75, 79, 82, 86, 88, 104, 108, 117, 118, 119, 126, 127, 130, 131, 138, 140, 141, 142, 151, 154, 157, 159, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 195, 208, 209, 219, 224, 226, 233, 234], "bound": [22, 79, 159, 161, 165, 167, 168, 169, 171, 173, 198, 199, 203, 210, 213, 221], "dshape": 22, "xa": 22, "xb": 22, "ya": 22, "yb": 22, "za": [22, 173], "zb": 22, "15": [1, 21, 22, 32, 34, 37, 41, 48, 50, 59, 68, 69, 70, 71, 73, 76, 77, 79, 80, 81, 82, 83, 85, 86, 90, 94, 97, 99, 105, 111, 124, 125, 130, 133, 142, 154, 155, 156, 159, 161, 163, 166, 167, 168, 169, 171, 172, 173, 180, 189, 195, 208, 214, 215, 226, 228, 234, 241], "18": [1, 22, 30, 33, 34, 37, 41, 50, 71, 73, 76, 77, 79, 80, 82, 83, 105, 106, 111, 120, 130, 131, 142, 143, 144, 145, 155, 156, 161, 163, 167, 168, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 215, 218, 220, 221], "selectionmask": 22, "bool": [22, 56, 71, 111, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 224, 225], "constant": [22, 30, 31, 41, 43, 63, 65, 79, 89, 92, 94, 138, 142, 149, 159, 167, 168, 169, 173, 188, 201, 216, 230], "solid": [22, 30, 31, 41, 43, 63, 65, 92, 142, 149, 161, 167, 169, 173, 188], "cda": 22, "csa": [22, 26, 29, 30, 33, 34, 41, 43, 67, 122, 132, 142, 143, 149, 153, 156, 167, 170, 173, 188, 189, 210, 230, 231], "good": [2, 4, 5, 10, 12, 14, 19, 22, 31, 59, 63, 66, 68, 80, 81, 87, 91, 93, 102, 113, 126, 147, 159, 161, 167, 168, 171, 173, 210, 217, 220, 224, 235, 243], "choic": [2, 4, 22, 29, 80, 86, 93, 94, 102, 147, 168, 171, 208, 231, 234], "fraction": [22, 31, 35, 36, 37, 63, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 91, 115, 117, 118, 119, 131, 154, 166, 167, 168, 169, 170, 171, 173, 190, 191, 192, 219, 236, 237], "anisotropi": [22, 31, 35, 36, 37, 63, 69, 72, 75, 76, 77, 80, 81, 82, 83, 84, 91, 119, 131, 154, 161, 167, 168, 170, 171, 173, 190, 191, 218, 219, 221, 236, 237], "gfa": [22, 29, 30, 31, 33, 34, 35, 36, 43, 63, 67, 72, 78, 122, 124, 132, 153, 164, 170, 173, 174, 215, 216, 217, 221], "restrict": [22, 31, 33, 40, 63, 69, 70, 71, 80, 83, 85, 124, 153, 165, 167, 169, 171, 228], "those": [2, 5, 12, 14, 22, 26, 30, 31, 37, 59, 61, 63, 67, 75, 81, 83, 101, 109, 127, 133, 153, 159, 161, 163, 167, 168, 171, 173, 241], "area": [20, 22, 31, 36, 37, 63, 67, 75, 79, 97, 105, 130, 133, 143, 159, 161, 165, 166, 167, 168, 171, 173, 195], "signific": [22, 31, 63, 80, 143, 167, 171], "thu": [2, 19, 22, 56, 59, 70, 71, 77, 79, 81, 101, 109, 147, 161, 166, 167], "interest": [22, 31, 53, 56, 59, 63, 70, 71, 91, 94, 101, 118, 124, 127, 147, 151, 159, 162, 163, 167, 171, 222], "done": [5, 11, 15, 19, 22, 26, 31, 48, 52, 56, 57, 63, 66, 69, 71, 75, 80, 81, 82, 83, 86, 94, 96, 97, 103, 108, 110, 119, 127, 159, 161, 163, 167, 168, 171, 173, 182, 241], "csaodfmodel": [22, 29, 30, 31, 33, 34, 43, 63, 67, 122, 124, 127, 132, 174], "csa_model": [22, 29, 30, 31, 33, 34, 63, 122, 124, 132], "csa_peak": [22, 31, 63, 122, 124, 132, 143], "relative_peak_threshold": [22, 31, 36, 43, 44, 63, 67, 68, 78, 81, 86, 87, 122, 124, 127, 132, 164, 173, 216], "min_separation_angl": [22, 31, 36, 43, 44, 63, 67, 68, 78, 81, 86, 87, 122, 124, 127, 132, 164, 173], "45": [4, 22, 29, 30, 31, 33, 34, 37, 48, 50, 63, 71, 76, 77, 79, 80, 82, 99, 113, 122, 124, 127, 132, 133, 159, 162, 167, 215, 218, 241], "probabilist": [22, 25, 26, 27, 29, 30, 32, 35, 41, 56, 122, 124, 132, 149, 154, 163, 164, 167, 169, 173, 205, 214, 216, 219, 228], "collect": [5, 22, 86, 159, 162, 165, 166, 167, 170, 171, 213, 225, 234, 236, 237], "white": [1, 22, 31, 32, 33, 35, 36, 37, 48, 56, 59, 63, 64, 66, 70, 71, 75, 76, 79, 80, 81, 82, 83, 85, 86, 87, 91, 94, 95, 96, 97, 105, 108, 111, 113, 119, 122, 124, 126, 127, 131, 143, 149, 151, 152, 153, 159, 162, 166, 167, 168, 169, 170, 171, 173, 180, 197, 200, 202, 206, 210, 211, 215, 227, 236, 237], "matter": [1, 22, 31, 32, 33, 35, 36, 37, 40, 48, 56, 59, 63, 64, 66, 70, 71, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 91, 95, 96, 97, 105, 113, 119, 122, 124, 127, 143, 149, 151, 152, 153, 159, 162, 165, 166, 167, 168, 169, 170, 171, 173, 180, 197, 200, 202, 206, 215, 227, 230, 236, 237], "known": [22, 31, 63, 66, 68, 77, 82, 87, 108, 110, 111, 153, 162, 167, 173, 190, 191, 239], "csd_model": [22, 29, 30, 32, 33, 34, 37, 44, 66, 68], "csd_fit": [22, 29, 30, 32, 33, 34, 37, 68], "csd_fit_shm": 22, "lib": [5, 22, 48, 61, 77, 79, 130, 162], "get": [4, 5, 10, 11, 12, 13, 15, 16, 18, 19, 22, 28, 29, 31, 37, 41, 43, 44, 50, 52, 53, 60, 62, 63, 72, 73, 78, 79, 80, 81, 86, 90, 93, 94, 95, 97, 101, 102, 103, 105, 108, 109, 119, 122, 124, 127, 130, 133, 134, 137, 141, 143, 144, 147, 151, 153, 159, 161, 162, 163, 164, 165, 166, 167, 168, 171, 173, 209, 212, 213, 215, 219, 221, 224, 225, 230, 231], "prob_dg": [22, 33, 35], "from_shcoeff": [22, 30, 32, 33, 37, 164, 174, 227], "max_angl": [22, 29, 30, 32, 33, 34, 35, 37, 164, 171, 173, 205, 206, 227], "optic": [22, 159, 162, 167], "radiat": [22, 124, 162], "calcarin": 22, "sulcu": 22, "cortex": [22, 26, 101], "v1": [22, 110, 161], "later": [2, 22, 70, 71, 79, 83, 86, 101, 119, 161, 167, 216], "genicul": 22, "nucleu": 22, "lgn": [22, 162], "roi": [22, 26, 40, 41, 59, 68, 76, 81, 86, 89, 91, 101, 122, 123, 124, 125, 128, 129, 154, 162, 167, 168, 171, 173, 174, 189, 195, 208, 213, 225], "cube": [22, 41, 83, 156, 159, 163, 167], "dimens": [1, 22, 26, 40, 56, 61, 75, 79, 86, 93, 102, 110, 133, 138, 151, 153, 159, 161, 163, 165, 166, 167, 168, 169, 171, 173, 174, 191, 205, 206, 212, 219], "3x3x3": [22, 163], "rad": [22, 161], "26": [19, 22, 29, 30, 33, 34, 37, 50, 56, 59, 71, 76, 77, 79, 80, 82, 95, 101, 102, 103, 111, 152, 155, 159, 167, 168, 210, 215, 217], "29": [22, 29, 33, 37, 50, 67, 71, 75, 76, 77, 78, 79, 80, 82, 89, 90, 215, 216, 226], "31": [22, 27, 29, 30, 33, 34, 37, 50, 71, 76, 77, 79, 80, 82, 84, 99, 131, 142, 161, 167, 217], "getter": [22, 25, 26, 27, 32, 34, 35, 37, 41, 124, 153, 164, 165, 167, 173, 205, 211, 212, 217, 219, 221], "streamlines_gener": [22, 31, 63], "step_siz": [22, 29, 30, 31, 32, 33, 34, 35, 36, 37, 63, 122, 124, 127, 132, 161, 164, 171, 173, 205, 206], "5": [1, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 48, 50, 53, 55, 57, 59, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 95, 97, 99, 101, 102, 103, 104, 108, 113, 115, 121, 122, 124, 126, 127, 130, 131, 132, 133, 141, 142, 143, 150, 151, 153, 154, 155, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 176, 191, 199, 201, 209, 210, 213, 215, 217, 219, 221, 226, 228, 236, 237, 241], "enter": [5, 19, 22, 26, 159, 163, 164, 167, 168, 171, 173, 188, 189, 194, 201, 202, 212], "5x5x5": [22, 50, 163, 173, 182, 183], "find": [5, 8, 11, 15, 19, 22, 26, 32, 43, 56, 68, 75, 78, 80, 87, 96, 101, 102, 103, 105, 106, 113, 119, 126, 127, 130, 138, 146, 151, 153, 159, 161, 163, 164, 167, 168, 170, 171, 173, 181, 182, 188, 189, 190, 191, 193, 196, 210, 215, 217, 241, 242], "travers": [22, 26, 171], "through": [22, 26, 32, 36, 37, 56, 72, 79, 80, 81, 86, 87, 93, 101, 110, 113, 122, 127, 134, 137, 138, 141, 143, 147, 148, 150, 151, 152, 153, 159, 162, 167, 168, 171, 210, 215, 217, 222, 235], "mask_lgn": 22, "28": [22, 24, 30, 33, 34, 37, 50, 58, 67, 71, 75, 76, 79, 80, 82, 84, 106, 112, 154, 166, 167, 168, 169, 171, 212, 215, 223, 224], "discard": [5, 19, 22, 127, 161, 162, 163, 167, 209, 225], "filtered_fibers2": 22, "tol": [22, 159, 161, 162, 163, 167, 171], "sfil": 22, "rang": [2, 22, 41, 43, 44, 47, 48, 67, 70, 71, 75, 79, 80, 82, 84, 85, 101, 105, 106, 120, 143, 154, 156, 159, 161, 163, 165, 166, 167, 168, 171, 172, 173, 205, 206, 213, 221, 230], "len": [22, 28, 40, 106, 108, 109, 110, 111, 120, 126, 127, 159, 161, 162, 166, 167, 168, 169, 171, 172, 208, 222], "append": [22, 83, 88, 120, 122, 126, 134, 137, 168, 173], "propag": [22, 59, 73, 74, 80, 90, 115, 149, 153, 154, 164, 167, 169, 171, 173, 193, 217, 230, 232], "sphx_glr_examples_built_contextual_enhancement_contextual_enhanc": [], "regard": [22, 82, 89, 159, 210], "electrostat": [22, 53, 88, 118, 161, 163, 226], "repuls": [22, 53, 161, 163, 210, 226], "fbcmeasur": [22, 174], "chosen": [22, 31, 33, 63, 83, 88, 153, 164, 167, 171, 231], "recal": [22, 139, 167], "20": [22, 32, 37, 41, 50, 68, 69, 71, 73, 75, 76, 77, 79, 80, 82, 83, 86, 87, 90, 91, 96, 97, 99, 105, 113, 117, 118, 131, 133, 156, 159, 161, 162, 167, 168, 169, 171, 173, 180, 208, 215, 236, 237], "percent": [22, 168], "most": [2, 5, 10, 22, 26, 30, 43, 46, 56, 57, 59, 67, 83, 86, 93, 94, 96, 97, 102, 103, 104, 113, 153, 162, 163, 165, 167, 168, 171, 228, 241], "fbc_sl_orig": 22, "clrs_orig": 22, "rfbc_orig": 22, "get_points_rfbc_threshold": [22, 171, 174], "emphasi": [22, 171], "01": [22, 27, 29, 30, 33, 34, 37, 40, 45, 50, 53, 68, 71, 76, 77, 79, 80, 82, 86, 90, 97, 103, 105, 112, 125, 142, 145, 159, 161, 163, 167, 171, 173, 180, 212, 213, 218, 220, 221, 226, 227], "fbc_sl_thre": 22, "clrs_thre": 22, "rfbc_thre": 22, "125": [22, 41, 50, 76, 79, 80, 99, 111, 133, 156, 215], "procedur": [22, 26, 47, 48, 70, 77, 82, 83, 117, 148, 150, 151, 159, 161, 167, 169, 173, 188, 189, 210, 212], "tau": [22, 83, 159, 161, 163, 167, 169, 171, 173, 174, 182, 222, 230], "lineactor": 22, "vstack": [22, 53, 74, 82, 88, 115, 118, 126, 171], "linewidth": [22, 35, 36, 82, 96, 101, 111, 120, 121, 122, 126, 131, 172], "horizont": [22, 172, 235], "axial": [22, 47, 50, 51, 56, 61, 67, 68, 69, 70, 75, 76, 81, 82, 86, 87, 113, 127, 133, 154, 167, 171, 172, 173, 190, 191], "slice": [22, 31, 35, 41, 46, 47, 48, 50, 51, 52, 56, 59, 61, 63, 64, 67, 70, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 85, 86, 90, 91, 94, 102, 103, 104, 113, 122, 127, 128, 129, 130, 142, 154, 159, 162, 163, 165, 167, 168, 173, 174, 194, 210, 212, 213, 219, 221, 225, 227, 239], "t1": [22, 36, 41, 48, 81, 107, 112, 124, 130, 137, 142, 147, 162, 163, 166, 208, 236, 237], "vol_actor1": 22, "sagitt": [22, 31, 59, 63, 127, 133, 172], "vol_actor2": [22, 26, 35, 36, 127], "285": [22, 76, 79, 80, 216], "155": [22, 79, 80, 217], "14": [1, 5, 22, 29, 30, 33, 34, 37, 50, 71, 76, 79, 80, 82, 83, 85, 111, 154, 155, 162, 167, 168, 171, 211, 213, 214, 215, 222, 224, 228, 241], "9": [1, 22, 26, 29, 30, 33, 34, 37, 40, 41, 49, 50, 52, 53, 56, 68, 70, 71, 76, 77, 78, 79, 80, 82, 83, 84, 90, 103, 113, 154, 155, 156, 159, 162, 163, 165, 166, 167, 171, 173, 182, 208, 209, 215, 224, 227, 228, 241], "n_frame": [22, 26, 67, 75, 96, 101, 108, 121, 122, 124, 127, 208], "or_befor": 22, "rm": [22, 26, 68, 70, 86], "or_aft": 22, "techniqu": [22, 35, 37, 48, 50, 71, 81, 82, 86, 106, 152, 166, 167, 168, 171, 217], "develop": [2, 7, 12, 13, 14, 18, 19, 22, 49, 70, 82, 117, 141, 142, 151, 154, 155, 159, 161, 165, 166, 167, 168, 169, 208, 210, 211, 212, 213, 217, 241], "close": [2, 3, 5, 14, 19, 22, 37, 59, 72, 79, 81, 91, 93, 97, 121, 127, 131, 141, 145, 147, 153, 154, 159, 161, 162, 163, 164, 165, 171, 173, 174, 180, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "collabor": [5, 20, 22, 229, 242, 243], "pauli": [22, 173], "ossenblok": [22, 171], "academ": [22, 85], "center": [20, 22, 26, 52, 68, 79, 82, 86, 93, 99, 101, 124, 127, 130, 132, 138, 147, 152, 153, 159, 161, 163, 165, 167, 168, 169, 171, 173, 175, 189, 205, 206, 208, 220], "epileptologi": 22, "kempenhaegh": 22, "maastricht": 22, "umc": [20, 22], "open": [2, 5, 19, 22, 37, 59, 76, 79, 83, 113, 124, 127, 130, 137, 161, 162, 163, 165, 167, 171, 220, 221, 223, 224, 225, 234, 241, 242], "human": [1, 2, 20, 22, 69, 70, 75, 84, 85, 143, 144, 154, 162, 167, 171, 236, 237], "brain": [1, 20, 22, 26, 31, 37, 40, 41, 48, 50, 54, 55, 58, 59, 63, 64, 66, 68, 69, 70, 71, 75, 76, 77, 82, 84, 85, 86, 87, 91, 97, 101, 102, 103, 105, 106, 107, 112, 113, 120, 121, 124, 127, 142, 143, 145, 150, 152, 153, 154, 156, 159, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 186, 194, 195, 200, 203, 212, 217, 219, 223, 225, 236, 237], "contextu": [22, 24, 154, 163, 171, 173, 209, 210], "cross": [2, 22, 23, 24, 26, 41, 65, 69, 70, 72, 75, 79, 80, 82, 83, 86, 91, 92, 101, 102, 103, 117, 151, 152, 154, 159, 161, 163, 167, 171, 173, 176, 208, 210, 213, 217, 219, 220, 225], "preserv": [22, 23, 24, 41, 47, 50, 52, 140, 145, 161, 163, 171], "enhanc": [22, 24, 28, 107, 112, 147, 154, 163, 171, 209, 210, 217, 220], "fiber_to_bundle_coher": [22, 24, 212], "bundl": [1, 23, 24, 30, 33, 41, 83, 98, 100, 101, 106, 107, 108, 109, 110, 111, 112, 122, 123, 124, 125, 126, 128, 129, 130, 141, 149, 152, 154, 159, 162, 164, 170, 171, 172, 173, 174, 178, 179, 180, 195, 197, 200, 210, 212, 213, 214, 217, 219, 221, 222, 224, 226, 227, 236, 237, 241], "coher": [23, 24, 35, 41, 68, 83, 86, 154, 162, 165, 167, 171, 210], "measur": [23, 24, 41, 48, 50, 53, 66, 68, 69, 70, 71, 73, 75, 76, 77, 79, 80, 82, 83, 85, 86, 87, 90, 91, 105, 138, 143, 148, 151, 154, 156, 159, 161, 162, 163, 166, 167, 169, 170, 171, 173, 190, 192, 210, 222, 224, 230, 232, 236, 237], "surfac": [25, 27, 36, 41, 87, 122, 124, 128, 129, 154, 161, 162, 167, 210, 212, 224, 234], "introduct": [12, 13, 17, 25, 26, 27, 29, 32, 35, 37, 40, 41, 60, 62, 124, 127, 149, 221, 230, 241], "determinist": [25, 27, 29, 31, 33, 37, 41, 63, 149, 154, 167, 171, 173, 205, 213, 217, 225, 228], "transport": [25, 27, 41, 141, 161, 164, 226, 227], "robust": [1, 2, 25, 27, 31, 41, 50, 55, 63, 65, 68, 70, 80, 81, 82, 83, 92, 95, 96, 117, 144, 150, 151, 152, 153, 154, 159, 162, 163, 164, 165, 167, 168, 169, 171, 173, 189, 190, 191, 202, 219, 225, 234], "unbias": [25, 27, 41, 65, 92, 95, 154, 159, 162, 167, 173, 226, 236, 237], "rumba": [25, 27, 41, 86, 154, 156, 173, 174, 225, 226, 227], "sd": [25, 27, 41, 86, 151, 154, 156, 167, 173, 226, 227, 234], "spars": [25, 26, 27, 41, 65, 80, 85, 92, 94, 154, 159, 161, 167, 168, 171, 217], "fascicl": [1, 25, 27, 41, 65, 92, 95, 96, 144, 152, 154, 159, 162, 167, 171, 173, 202, 217], "bootstrap": [25, 27, 41, 91, 154, 157, 164, 167, 173, 191, 212, 215], "closest": [25, 27, 41, 59, 149, 161, 163, 164, 167, 168, 171, 217], "basic": [14, 25, 27, 29, 33, 41, 47, 50, 57, 60, 62, 68, 77, 110, 141, 142, 147, 151, 161, 165, 168, 169, 171, 173, 213, 219, 221], "filter": [25, 26, 27, 41, 47, 49, 51, 52, 82, 86, 99, 101, 105, 127, 147, 149, 154, 159, 161, 163, 164, 166, 167, 168, 171, 173, 184, 199, 206, 210, 212, 225], "linear": [1, 5, 25, 27, 41, 52, 64, 70, 71, 79, 80, 84, 85, 89, 95, 96, 97, 99, 102, 103, 140, 143, 145, 149, 152, 154, 156, 159, 161, 162, 163, 164, 168, 171, 173, 174, 178, 185, 191, 200, 202, 210, 214, 215, 217, 222, 226, 227], "biggest": 26, "challeng": [26, 83, 119, 155, 236, 237], "propos": [4, 26, 37, 47, 49, 74, 75, 77, 79, 83, 85, 91, 101, 102, 103, 113, 115, 142, 151, 152, 159, 163, 166, 167, 171, 234], "predict": [26, 52, 64, 66, 79, 81, 87, 153, 159, 161, 166, 167, 171, 174, 208, 209, 210, 216, 217, 218, 221], "signal": [5, 15, 26, 36, 41, 44, 48, 49, 52, 56, 59, 61, 64, 65, 66, 68, 73, 74, 77, 79, 81, 83, 84, 85, 86, 87, 90, 91, 92, 115, 117, 118, 138, 141, 147, 151, 154, 156, 157, 163, 166, 167, 169, 171, 172, 173, 190, 191, 192, 193, 203, 213, 215, 219, 221, 222, 224, 230, 232, 234], "simultan": [26, 79, 86, 95, 101, 154, 167], "pestilli2014": 26, "For": [2, 4, 5, 11, 14, 19, 26, 31, 35, 36, 44, 46, 47, 48, 50, 52, 53, 55, 56, 61, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 101, 102, 104, 108, 109, 110, 111, 115, 117, 118, 119, 122, 124, 127, 132, 137, 138, 140, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 176, 177, 182, 183, 195, 199, 202, 205, 206, 228, 230, 231, 234, 235, 241], "breviti": [26, 36, 79, 101], "corpu": [26, 29, 30, 31, 32, 33, 34, 37, 59, 63, 64, 66, 67, 68, 75, 80, 83, 86, 87, 91, 101, 122, 124, 127, 132, 162, 167, 168, 171, 173, 203, 236, 237], "callosum": [26, 29, 30, 31, 32, 33, 34, 37, 59, 63, 64, 66, 67, 68, 75, 80, 83, 86, 87, 91, 101, 122, 124, 127, 132, 162, 167, 168, 171, 173, 203, 236, 237], "connect": [16, 26, 31, 32, 33, 37, 40, 63, 87, 96, 101, 122, 124, 125, 130, 153, 162, 164, 171, 173, 206, 210, 225, 235, 236, 237], "superior": [2, 26, 59, 101, 127, 161, 165], "frontal": [26, 101, 127], "fulli": [26, 41, 70, 97, 101, 149, 161, 167, 169], "demonstr": [2, 26, 29, 35, 36, 46, 52, 56, 66, 75, 82, 88, 91, 94, 99, 101, 104, 122, 124, 127, 151, 153], "matric": [26, 41, 95, 101, 123, 125, 140, 159, 161, 162, 167, 171, 210, 213], "intersect": [26, 41, 79, 82, 101, 123, 125, 171], "otherwis": [2, 26, 81, 101, 108, 133, 142, 159, 161, 162, 163, 164, 167, 168, 171, 172, 173, 184, 185, 202, 210, 241], "ll": [4, 5, 14, 16, 18, 19, 26, 31, 33, 63, 69, 86, 87, 101, 119, 127, 130, 133, 167, 241], "path": [2, 26, 33, 40, 41, 55, 57, 61, 69, 70, 76, 77, 93, 94, 97, 101, 119, 123, 125, 133, 134, 137, 147, 148, 150, 151, 152, 153, 159, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 203, 205, 206, 208, 209, 210, 213, 217, 220, 221, 241], "join": [20, 26, 61, 76, 77, 93, 94, 97, 101, 119, 133, 216], "pjoin": [26, 93, 94, 97, 101], "matplotlib": [26, 31, 35, 37, 46, 47, 48, 49, 50, 51, 52, 56, 59, 61, 63, 66, 69, 71, 72, 73, 75, 76, 77, 79, 81, 82, 83, 84, 86, 90, 91, 94, 99, 104, 113, 117, 118, 119, 122, 124, 126, 127, 138, 171, 172, 210, 213, 215, 217, 238, 241], "pyplot": [26, 31, 35, 37, 46, 47, 48, 49, 50, 51, 52, 56, 59, 61, 63, 66, 69, 71, 72, 73, 76, 77, 79, 81, 82, 83, 84, 86, 90, 91, 94, 99, 104, 113, 117, 118, 119, 122, 124, 126, 127, 162, 171], "plt": [26, 31, 35, 37, 46, 47, 48, 49, 50, 51, 52, 56, 59, 61, 63, 66, 69, 71, 72, 73, 76, 77, 79, 81, 82, 83, 84, 86, 90, 91, 94, 99, 104, 113, 117, 118, 119, 122, 126, 127, 171], "mpl_toolkit": [26, 124], "axes_grid1": [26, 124], "axesgrid": [26, 124], "optim": [1, 3, 26, 41, 50, 51, 52, 53, 55, 71, 77, 79, 80, 81, 82, 83, 87, 93, 94, 96, 99, 101, 102, 103, 113, 142, 147, 152, 154, 156, 159, 163, 164, 165, 166, 167, 168, 171, 173, 174, 176, 185, 208, 213, 217, 219, 220, 224, 225, 236, 237], "opt": [3, 26, 77, 79, 173, 213, 216, 217, 220, 225], "fetch_stanford_track": [26, 101, 174], "colormap": [26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 63, 67, 68, 74, 75, 76, 79, 80, 81, 86, 87, 89, 108, 109, 110, 111, 115, 118, 124, 127, 132, 167, 172, 173, 195, 210, 212, 213, 217, 219], "cmap": [26, 31, 35, 37, 46, 47, 48, 49, 50, 51, 52, 56, 61, 63, 69, 71, 76, 77, 79, 80, 81, 82, 83, 84, 94, 104, 106, 110, 113, 124, 127, 132, 172], "hardi_img": [26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 63, 101, 124, 127, 132], "return_img": [26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 61, 63, 93, 94, 101, 124, 127, 132, 165], "cc_slice": [26, 127], "fetch": [5, 14, 16, 26, 28, 40, 43, 44, 48, 50, 56, 64, 66, 69, 70, 75, 80, 81, 82, 91, 93, 94, 101, 103, 105, 106, 113, 120, 121, 130, 146, 147, 148, 150, 151, 152, 153, 162, 208, 210, 215, 218, 219, 220, 222], "ref": [2, 5, 26, 106, 159, 168, 171, 212], "streamline_tool": [26, 125, 127, 210, 212, 217, 219], "candid": [26, 41, 156, 164, 171], "streamlines_fil": [26, 101], "lr_superiorfrontal_path": [26, 101], "lr": [26, 101, 127, 167], "superiorfront": [26, 101, 127], "candidate_sl_sft": 26, "to_vox": [26, 40, 165, 174], "candidate_sl": 26, "term": [26, 70, 79, 80, 85, 86, 108, 113, 138, 151, 159, 167, 216, 233], "connectom": [26, 143, 144, 154, 162, 171, 236, 237], "group": [2, 19, 26, 56, 77, 91, 95, 96, 127, 149, 154, 159, 168, 170, 173, 202, 221, 223, 225], "anatom": [26, 32, 37, 50, 52, 122, 124, 127, 143, 145, 153, 154, 171, 173, 218, 228], "candidate_streamlines_actor": 26, "streamtub": [26, 35, 36, 96, 101, 108, 109, 110, 111, 121, 126, 130, 131, 208, 212, 213, 216], "line_color": [26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 63, 124, 127, 132], "cc_roi_actor": [26, 127], "contour_from_roi": [26, 124, 127, 132], "opac": [26, 64, 83, 108, 111, 127, 130, 132, 133, 208, 212, 213], "vol_actor": [26, 35, 36, 127], "copi": [4, 5, 9, 13, 15, 16, 26, 35, 36, 37, 41, 71, 91, 94, 101, 127, 130, 133, 137, 159, 162, 165, 167, 168, 171, 173, 212, 217, 220], "canva": [26, 127], "life_candid": 26, "800": [26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 63, 79, 122, 124, 127, 142, 169, 236, 237], "next": [18, 19, 26, 29, 31, 36, 53, 59, 61, 63, 66, 70, 75, 79, 81, 83, 85, 88, 91, 93, 118, 119, 126, 127, 132, 134, 159, 161, 164, 166, 167, 169, 171, 213, 241], "fiber_model": [26, 171], "alreadi": [5, 14, 15, 19, 26, 31, 35, 57, 63, 79, 80, 99, 103, 105, 106, 109, 120, 143, 159, 161, 162, 165, 166, 168, 170, 171, 241], "do": [2, 3, 4, 7, 8, 9, 12, 14, 15, 17, 18, 26, 31, 33, 40, 41, 49, 52, 55, 56, 59, 63, 65, 67, 68, 72, 80, 81, 82, 83, 88, 91, 93, 95, 102, 103, 106, 108, 109, 110, 122, 124, 127, 138, 139, 140, 141, 142, 143, 147, 152, 155, 159, 161, 162, 166, 167, 168, 171, 173, 195, 210, 212, 213, 217, 219, 231, 236, 241, 243], "them": [2, 5, 15, 19, 26, 40, 52, 53, 61, 72, 73, 76, 79, 85, 90, 91, 93, 95, 101, 102, 103, 105, 106, 110, 120, 122, 124, 126, 127, 130, 132, 138, 148, 159, 161, 167, 168, 169, 171, 172, 216], "world": [20, 26, 46, 55, 57, 75, 104, 126, 130, 131, 138, 159, 165, 168, 171, 172], "scanner": [26, 35, 47, 51, 69, 86, 138, 161, 162, 163, 167, 173, 230, 231, 236, 237], "iso": [26, 77, 84, 167, 174], "mid": [26, 56, 59, 64, 159, 171], "ac": [26, 162], "pc": 26, "would": [5, 6, 19, 26, 56, 68, 80, 87, 91, 94, 96, 97, 103, 119, 130, 133, 138, 145, 146, 152, 161, 167, 171, 173, 194, 195], "inv_affin": 26, "linalg": [26, 35, 36, 84, 130, 131, 167, 222, 226], "inv": [26, 35, 36, 130, 131, 159, 167], "invers": [26, 80, 83, 102, 103, 130, 140, 159, 161, 164, 167, 170, 171, 172, 173, 174, 176, 211, 219], "produc": [2, 26, 67, 69, 70, 77, 80, 81, 82, 83, 85, 93, 117, 138, 159, 161, 162, 164, 167, 168, 171], "fiberfit": [26, 174], "instanc": [5, 26, 52, 69, 70, 71, 75, 82, 84, 91, 102, 103, 108, 109, 113, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171], "store": [2, 26, 72, 82, 83, 87, 95, 131, 132, 138, 140, 159, 161, 165, 167, 169, 171, 172, 212, 215], "explain": [5, 12, 15, 26, 79, 80, 93, 94, 95, 96, 97, 102, 103, 105, 106, 108, 109, 111, 113, 120, 121, 144, 145, 163, 218, 230, 231, 243], "beta": [26, 81, 87, 97, 113, 139, 159, 167, 168, 171, 173, 180], "weight": [26, 36, 41, 48, 49, 50, 52, 54, 56, 58, 61, 64, 66, 69, 70, 75, 77, 79, 80, 82, 83, 84, 85, 86, 87, 91, 96, 107, 112, 119, 122, 138, 147, 148, 151, 156, 161, 162, 163, 167, 169, 170, 171, 173, 174, 182, 190, 191, 193, 230, 231, 236, 237], "design": [26, 41, 52, 53, 69, 83, 87, 130, 138, 156, 159, 161, 163, 165, 166, 167, 171, 214, 220], "matrix": [26, 40, 46, 48, 50, 52, 55, 57, 69, 70, 75, 82, 86, 87, 96, 103, 104, 106, 127, 131, 133, 139, 140, 142, 147, 151, 152, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 180, 181, 182, 183, 208, 209, 210, 213, 214, 217, 219, 220, 221, 222, 223, 225], "m": [1, 2, 5, 15, 26, 28, 32, 35, 37, 41, 48, 55, 59, 68, 70, 71, 73, 76, 77, 83, 84, 85, 86, 87, 90, 96, 101, 102, 103, 110, 113, 119, 126, 127, 142, 143, 144, 145, 150, 152, 153, 156, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 234, 236, 237], "n_": [26, 70, 167], "consid": [9, 14, 15, 26, 37, 40, 52, 68, 69, 76, 79, 87, 127, 152, 159, 161, 163, 164, 165, 166, 167, 168, 171, 172, 173, 176, 185, 235], "th": [26, 66, 96, 102, 103, 159, 167, 168, 171, 172, 234], "column": [26, 84, 85, 87, 96, 127, 133, 140, 159, 161, 163, 167, 168, 169, 171, 172], "arbitrarili": 26, "becaus": [3, 5, 14, 19, 26, 31, 33, 37, 49, 56, 63, 70, 74, 82, 94, 109, 115, 118, 121, 124, 127, 130, 133, 138, 147, 151, 153, 159, 161, 163, 167, 168, 169, 212, 230], "percentag": [26, 93, 117, 118, 161, 168, 169], "node": [26, 119, 161, 166, 168, 170, 171, 174, 226], "cylindr": [26, 169], "compart": [1, 26, 35, 69, 70, 71, 77, 79, 81, 82, 86, 117, 151, 167, 169, 173], "gaussian": [26, 35, 49, 51, 56, 59, 66, 69, 70, 80, 82, 86, 93, 99, 102, 103, 113, 117, 151, 159, 161, 163, 167, 168, 169, 173, 176, 180, 184, 190, 193, 208, 212, 217], "tensor": [1, 26, 41, 59, 61, 65, 66, 68, 71, 74, 76, 77, 80, 81, 82, 84, 85, 86, 87, 92, 115, 117, 118, 138, 142, 149, 154, 156, 157, 161, 162, 166, 167, 169, 171, 173, 190, 191, 208, 210, 212, 213, 215, 216, 217, 218, 219, 221, 222, 224, 226, 230, 231, 239], "fiber_fit": 26, "ey": [26, 40, 93, 94, 101, 127, 130, 159, 167, 171, 218], "hold": [2, 26, 33, 52, 61, 96, 130, 133, 159, 161, 165, 167, 171], "properti": [26, 43, 52, 67, 75, 78, 80, 82, 83, 91, 96, 110, 117, 119, 139, 151, 159, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 208, 234], "assign": [2, 26, 41, 123, 125, 159, 161, 167, 168, 169, 170, 171, 174, 208, 217], "redund": [2, 26, 49, 50, 147], "beta_i": 26, "fig": [26, 37, 47, 48, 49, 51, 56, 59, 66, 69, 73, 76, 79, 83, 84, 86, 90, 94, 99, 113, 119, 122, 124, 126, 167], "ax": [4, 26, 47, 48, 49, 50, 51, 52, 56, 59, 66, 71, 72, 77, 79, 82, 83, 84, 85, 86, 91, 93, 94, 101, 102, 103, 118, 122, 124, 126, 139, 159, 161, 171, 172], "subplot": [26, 31, 35, 37, 46, 47, 48, 49, 50, 51, 52, 56, 59, 61, 63, 66, 69, 71, 72, 77, 79, 82, 83, 84, 86, 91, 94, 99, 104, 119, 122, 126], "hist": [26, 91, 122, 126, 159, 166], "bin": [26, 93, 122, 134, 137, 159, 161, 168, 171, 173, 175, 241], "histtyp": [26, 91, 122, 126], "set_xlabel": [26, 66, 79, 82, 83, 91, 119, 122, 126], "set_ylabel": [26, 66, 79, 82, 83, 91, 119, 122, 126], "savefig": [26, 31, 35, 37, 46, 47, 48, 49, 50, 51, 52, 56, 59, 61, 63, 66, 71, 72, 73, 76, 77, 79, 81, 82, 83, 86, 90, 91, 94, 99, 104, 113, 117, 118, 119, 122, 124, 126, 127], "beta_histogram": 26, "out": [2, 15, 19, 26, 41, 44, 52, 59, 66, 79, 88, 101, 105, 119, 127, 133, 147, 151, 159, 161, 163, 166, 167, 168, 171, 173, 182, 210, 213, 215, 216, 217, 219, 221, 228, 230, 231, 241], "optimized_sl": 26, "row_stack": 26, "life_optim": 26, "presum": 26, "But": [5, 18, 26, 52, 53, 91, 101, 139, 161], "how": [2, 12, 14, 15, 18, 19, 26, 29, 31, 37, 40, 44, 46, 48, 49, 50, 52, 53, 57, 59, 61, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 130, 131, 134, 139, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 159, 161, 162, 163, 165, 166, 167, 168, 169, 171, 173, 213, 217, 218, 219, 220, 221, 222, 224, 225, 226, 230, 239, 241, 242], "doe": [19, 26, 30, 52, 70, 79, 80, 82, 83, 101, 108, 109, 124, 126, 138, 153, 159, 162, 163, 165, 166, 167, 168, 171, 173, 208, 209, 210, 212, 213, 216, 217, 219, 222, 224, 225, 226], "quantifi": [26, 66, 69, 70, 80, 151, 167, 171], "invert": [2, 26, 59, 102, 103, 159, 167, 172, 173, 195, 215], "back": [5, 15, 19, 26, 102, 103, 124, 130, 139, 141, 166, 167, 171, 173, 206, 208, 215, 217, 221, 224], "unseen": 26, "valid": [19, 26, 32, 37, 40, 41, 64, 65, 68, 80, 83, 87, 92, 121, 154, 159, 162, 165, 166, 167, 171, 208, 209, 217, 220, 221, 225], "sphx_glr_examples_built_reconstruction_kfold_xv": [], "without": [5, 19, 26, 33, 44, 47, 48, 49, 52, 61, 73, 77, 83, 84, 85, 86, 91, 94, 126, 159, 161, 162, 166, 167, 168, 171, 173, 213, 215, 219, 220, 228, 241], "s0": [26, 61, 66, 68, 74, 79, 82, 86, 87, 115, 117, 118, 167, 169, 171, 173, 192, 210, 216], "acquisit": [1, 2, 26, 41, 52, 53, 55, 56, 59, 61, 70, 74, 80, 82, 83, 84, 85, 91, 115, 147, 150, 154, 156, 161, 162, 163, 166, 167, 173, 230, 231], "scheme": [1, 2, 26, 41, 49, 53, 74, 75, 83, 115, 156, 159, 163, 166, 167, 171], "baselin": [26, 91], "model_predict": [26, 66], "focu": [20, 26, 79, 91], "root": [19, 26, 83, 167, 168, 231, 241], "squar": [26, 52, 66, 70, 73, 79, 80, 83, 85, 86, 87, 90, 91, 94, 101, 102, 140, 152, 159, 161, 162, 167, 169, 171, 172, 173, 176, 190, 191, 221, 230, 231], "model_error": 26, "model_rms": 26, "sqrt": [26, 49, 50, 52, 70, 71, 72, 73, 75, 78, 83, 84, 90, 110, 140, 161, 163, 167, 169, 171, 234, 235], "against": [26, 74, 86, 115, 159, 161, 162, 166, 167, 168, 171], "compar": [2, 14, 26, 44, 47, 50, 66, 70, 73, 79, 80, 85, 86, 91, 117, 121, 122, 138, 143, 159, 165, 167, 168, 171, 172, 209, 225], "assum": [14, 26, 35, 52, 53, 56, 75, 79, 81, 86, 91, 96, 99, 101, 108, 109, 110, 117, 151, 159, 161, 163, 167, 168, 169, 171, 172, 173, 182, 183, 184, 189, 209, 210], "naiv": [26, 99, 167, 171], "beta_baselin": 26, "pred_weight": 26, "reshap": [26, 164, 165, 166, 167, 168, 169, 171], "spdot": [26, 174], "life_matrix": [26, 171], "vox_coord": [26, 171], "b0s_mask": [26, 61, 64, 66, 101, 161, 167, 174], "mean_pr": 26, "empti": [26, 82, 143, 159, 161, 167, 168, 169, 171, 219, 221, 225, 227], "b0_signal": [26, 171], "demean": 26, "multipli": [26, 81, 88, 117, 126, 159, 167, 168, 173, 189], "mean_sign": [26, 50, 59], "mean_error": 26, "mean_rms": 26, "overal": [26, 80, 126], "altern": [26, 30, 32, 35, 44, 68, 70, 74, 85, 93, 99, 108, 115, 126, 152, 153, 159, 161, 163, 167, 173, 191, 216, 234], "text": [2, 4, 5, 14, 19, 26, 41, 61, 79, 83, 96, 130, 133, 134, 137, 138, 152, 167, 172, 173, 176, 177, 208, 213, 239], "median": [26, 81, 151, 161, 168, 170, 171, 173, 199, 210, 216, 224], "rmse": 26, "2f": [26, 82], "horizontalalign": [26, 79], "verticalalign": [26, 79], "transax": [26, 79], "error_histogram": 26, "vol_model": 26, "ones": [26, 37, 53, 71, 82, 106, 108, 109, 110, 111, 118, 134, 137, 161, 165, 167], "nan": [26, 71, 75, 161, 167, 169, 171, 208, 209, 213, 214, 217, 221, 222], "vol_mean": 26, "vol_improv": 26, "sl_idx": 26, "49": [21, 22, 26, 27, 29, 37, 49, 50, 58, 71, 76, 77, 79, 80, 82, 90, 92, 117, 154, 167, 215, 222], "subplots_adjust": [26, 48, 50, 52, 77, 82, 124], "05": [22, 26, 29, 30, 33, 34, 37, 50, 52, 53, 71, 76, 77, 79, 80, 82, 92, 100, 108, 111, 124, 143, 159, 161, 163, 167, 168, 173, 212, 213, 219, 223, 224, 225], "95": [22, 26, 29, 30, 34, 37, 50, 71, 76, 77, 79, 80, 82, 91, 124, 161, 167, 173, 190, 191, 215], "111": [26, 70, 76, 79, 80, 82, 99, 117, 124, 151, 167, 169, 173, 191, 215], "nrows_ncol": [26, 124], "label_mod": 26, "share_al": 26, "cbar_loc": [26, 124], "cbar_mod": [26, 124], "cbar_siz": [26, 124], "cbar_pad": [26, 124], "matshow": [26, 81, 124], "rot90": [26, 48, 59, 81, 84, 113, 124], "cm": [26, 71, 76, 81, 124], "bone": [26, 81, 124], "hot": [26, 83], "cbar_ax": [26, 124], "colorbar": [26, 48, 71, 73, 76, 79, 82, 83, 86, 90, 99, 124, 213], "rdbu": 26, "lax": [26, 124], "set_xtick": [26, 84, 124], "set_ytick": [26, 84, 124], "spatial_error": 26, "mani": [12, 26, 30, 36, 40, 53, 66, 68, 70, 80, 85, 93, 96, 122, 130, 131, 138, 154, 159, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 188, 189, 194, 201, 202, 219, 225, 228, 241], "place": [2, 26, 91, 94, 144, 155, 159, 161, 163, 167, 171, 172, 173, 182, 183, 208, 219, 221], "substanti": [19, 26, 50, 66, 91, 171], "reduct": [1, 26, 41, 95, 123, 125, 139, 167, 168, 173, 200], "larg": [3, 26, 47, 70, 93, 106, 127, 138, 141, 143, 154, 159, 164, 165, 167, 171, 173, 200, 212, 216, 228, 238, 241], "amount": [26, 75, 80, 91, 106, 126, 159, 161, 163, 168, 171, 172, 173, 195], "profil": [26, 41, 48, 56, 97, 105, 120, 121, 123, 125, 149, 154, 159, 162, 163, 167, 168, 170, 172, 173, 174, 176, 179, 200, 208, 211, 231], "sphx_glr_examples_built_fiber_tracking_tracking_probabilist": [], "ipython": [5, 26, 138, 210, 219, 227, 228, 238, 241], "matlab": [26, 138, 161, 163, 218, 222, 233], "head": [4, 5, 14, 26, 47, 51, 56, 91, 217], "franco": [26, 36, 87, 167], "pestilli": [1, 26, 36, 66, 87, 105, 120, 121, 143, 167, 168, 170, 171, 173, 179, 200, 236, 237], "github": [7, 9, 10, 11, 12, 14, 15, 16, 18, 19, 26, 138, 154, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 241], "webpag": 26, "yeatman": [1, 26, 36, 66, 87, 119, 167, 170, 171, 236, 237], "rokem": [1, 2, 18, 20, 26, 36, 41, 66, 77, 87, 105, 120, 121, 142, 143, 144, 145, 156, 167, 168, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 236, 237], "kai": [1, 26, 36, 87, 167, 171, 236, 237], "wandel": [26, 36, 66, 87, 119, 167, 170, 171, 236, 237], "2014": [1, 2, 26, 32, 37, 41, 66, 68, 70, 77, 81, 86, 96, 142, 143, 144, 145, 153, 155, 156, 159, 167, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 217, 220, 236, 237], "statist": [26, 41, 54, 58, 66, 69, 70, 75, 77, 91, 101, 119, 141, 154, 159, 161, 167, 170, 171, 173, 179, 208, 216, 224], "infer": [26, 66, 75, 110, 151, 166, 168, 171, 173, 225], "live": [26, 166, 171, 220, 241], "natur": [26, 47, 56, 70, 153, 159, 161, 165, 166, 167, 168, 171, 230, 231, 243], "1058": [26, 79, 171, 210], "1063": [26, 79, 151, 171, 173, 192, 210], "doi": [26, 34, 35, 36, 41, 48, 49, 50, 52, 67, 69, 70, 71, 77, 79, 81, 82, 84, 85, 86, 87, 130, 142, 143, 148, 151, 156, 159, 161, 162, 163, 164, 166, 167, 171, 173, 182, 183, 192, 194, 214, 236, 237], "1038": [26, 70, 71, 79, 81, 82, 142, 162, 171, 210, 236, 237], "nmeth": [26, 171], "3098": [26, 79, 171], "linear_fascicle_evalu": [26, 27, 214], "cortic": [28, 32, 119], "stonge2018": 28, "mesh": [28, 154, 157, 161, 174, 224], "random_coordinates_from_surfac": [28, 174], "seeds_from_surface_coordin": [28, 174], "load_polydata": [28, 174], "get_polydata_triangl": 28, "get_polydata_vertic": 28, "get_actor_from_polydata": 28, "normals_from_v_f": 28, "brain_lh": 28, "fury_surfac": 28, "polydata": [28, 165, 221], "extract": [28, 36, 41, 46, 49, 52, 69, 70, 71, 77, 82, 86, 87, 104, 106, 107, 108, 110, 112, 121, 123, 125, 143, 144, 159, 161, 162, 163, 164, 166, 167, 170, 171, 172, 173, 174, 186, 197, 204, 209, 210, 213, 215, 216, 217, 219, 222], "triangl": [28, 96, 118, 161, 171, 210], "vt": [28, 171], "surface_actor": 28, "500": [28, 41, 48, 79, 156, 171, 217, 236, 237], "uncom": [28, 131, 132, 133], "600": [28, 67, 68, 71, 75, 76, 80, 81, 82, 86, 89, 91, 105, 106, 108, 109, 110, 111, 120, 131, 133, 142, 167, 168, 173, 208, 236, 237], "reset_camera": [28, 64, 130, 131, 133], "surface_seed1": 28, "choos": [5, 28, 46, 47, 55, 75, 80, 104, 131, 147, 152, 155, 167, 171, 225], "nb_seed": [28, 171], "100000": 28, "nb_triangl": [28, 171], "trilinear": [28, 32, 37, 57, 159, 161, 173, 201], "tri_idx": 28, "trilin_co": 28, "cartesian": [28, 41, 72, 82, 86, 118, 151, 156, 161, 167, 168, 169, 235], "seed_pt": 28, "seed_n": 28, "dot": [28, 83, 84, 85, 110, 159, 161, 164, 167, 171, 215, 225, 226], "blue": [4, 28, 53, 59, 66, 71, 97, 113, 124, 131, 132, 167], "seed_actor": 28, "dot_siz": 28, "green": [19, 28, 48, 53, 59, 79, 83, 97, 101, 102, 103, 106, 132, 144, 145, 167, 172, 219], "outsid": [28, 37, 59, 85, 159, 161, 163, 166, 171, 173, 201, 213, 214, 219, 225], "red": [28, 48, 53, 59, 66, 71, 96, 97, 102, 103, 106, 113, 126, 131, 143, 167, 171, 172, 173, 195], "normal_length": 28, "normal_in": 28, "tile": [28, 83], "newaxi": [28, 219], "normal_out": 28, "normal_in_actor": 28, "normal_out_actor": 28, "visualis": [28, 40, 163, 164, 167, 210, 213, 234, 238], "surface_seed2": 28, "st": [1, 4, 20, 28, 77, 106, 167, 168, 172, 173, 195, 208, 209, 210, 215, 216, 217, 218, 224, 227], "ong": [28, 106, 168, 172, 173, 195, 210, 224, 227], "daducci": [28, 35, 86, 167, 173, 236, 237], "descoteaux": [1, 2, 20, 28, 32, 37, 41, 59, 73, 90, 142, 143, 144, 145, 153, 156, 162, 163, 164, 167, 169, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 213, 215, 216, 217, 218, 234], "169": [28, 76, 79, 80, 210, 216], "524": [28, 71, 76, 217], "539": [28, 71, 76, 79, 82, 208], "2018": [28, 41, 48, 50, 70, 76, 82, 124, 141, 143, 144, 155, 156, 162, 163, 167, 173, 194, 212, 213, 214, 220, 236, 237], "surface_se": [27, 28], "type": [2, 5, 15, 29, 48, 52, 61, 72, 81, 82, 110, 113, 127, 139, 142, 148, 152, 153, 159, 161, 162, 164, 165, 167, 168, 169, 171, 172, 173, 177, 187, 193, 195, 196, 200, 208, 209, 212, 214, 215, 217, 225, 226, 241], "describ": [2, 11, 29, 31, 36, 37, 47, 63, 66, 70, 75, 79, 80, 83, 85, 87, 91, 119, 124, 151, 153, 159, 161, 162, 167, 169, 171, 236], "berman": [29, 167], "et": [1, 20, 29, 37, 41, 43, 49, 53, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 84, 85, 86, 89, 90, 91, 95, 96, 97, 101, 102, 103, 105, 106, 108, 109, 110, 111, 113, 115, 117, 119, 124, 144, 145, 151, 152, 154, 156, 159, 161, 162, 163, 164, 166, 167, 168, 169, 171, 173, 180, 188, 189, 192, 197, 200, 202, 212, 234, 236, 237], "al": [1, 29, 37, 41, 43, 49, 53, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 84, 85, 86, 89, 90, 91, 95, 96, 97, 101, 102, 103, 105, 106, 108, 109, 110, 111, 113, 115, 117, 119, 124, 144, 145, 151, 152, 154, 156, 159, 161, 162, 163, 164, 166, 167, 168, 169, 171, 173, 180, 188, 189, 192, 197, 200, 202, 212, 234, 236, 237], "2008": [29, 41, 51, 52, 66, 72, 73, 76, 79, 89, 90, 147, 156, 159, 163, 167, 169, 171, 173, 184, 210, 213, 220, 241], "berman2008": 29, "nd": [29, 82, 164, 167, 168, 171, 210], "amirbekian": [1, 2, 18, 20, 29, 122, 142, 143, 144, 145, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 215, 216, 217, 218], "phd": [29, 31, 63, 78, 142, 153, 167, 169, 173, 205], "thesi": [29, 31, 48, 50, 63, 70, 78, 82, 142, 153, 163, 167, 169, 173, 194, 205], "sphx_glr_examples_built_quick_start_tracking_introduction_eudx": [], "necessari": [19, 29, 35, 36, 40, 46, 47, 49, 50, 52, 56, 67, 70, 72, 73, 75, 76, 78, 80, 83, 85, 89, 90, 95, 104, 105, 106, 108, 109, 110, 111, 113, 120, 121, 126, 159, 161, 162, 167, 171, 173, 222, 241], "execut": [2, 24, 27, 29, 36, 39, 43, 44, 45, 55, 58, 62, 92, 100, 102, 103, 112, 116, 124, 125, 129, 134, 136, 137, 138, 147, 148, 150, 151, 159, 161, 163, 166, 167, 168, 173, 217, 241], "small_spher": [29, 33, 35, 174], "bootdirectiongett": [29, 174], "closestpeakdirectiongett": [29, 174], "stateful_tractogram": [29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 63, 97, 101, 105, 127, 174], "has_furi": [29, 30, 31, 32, 33, 34, 36, 37, 63, 101], "seed_mask": [29, 30, 31, 32, 33, 34, 35, 37, 63, 122, 124, 132, 142], "white_matt": [29, 30, 31, 33, 34, 35, 36, 37, 63, 122, 124, 127, 132], "serv": [29, 105, 121, 134, 167], "our": [11, 14, 16, 18, 19, 29, 43, 50, 55, 59, 67, 68, 71, 75, 76, 79, 81, 83, 86, 88, 91, 93, 95, 96, 102, 108, 109, 110, 122, 124, 127, 130, 134, 137, 138, 141, 144, 145, 154, 159, 161, 162, 167, 171, 211, 213, 222, 224, 239, 241, 242], "up": [3, 4, 9, 12, 13, 15, 19, 29, 33, 36, 41, 56, 70, 83, 85, 86, 88, 95, 101, 105, 122, 124, 126, 131, 132, 133, 138, 139, 154, 156, 159, 161, 163, 164, 165, 166, 167, 168, 171, 173, 174, 199, 208, 209, 210, 213, 215, 217, 218, 219, 220, 221, 225, 230, 231, 241, 243], "boot_dg_csd": 29, "from_data": [29, 164, 174], "boot_streamline_gener": 29, "sft": [29, 30, 31, 32, 33, 34, 35, 36, 37, 63, 101, 127, 165, 220, 221, 226, 227], "rasmm": [29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 63, 97, 101, 105, 165, 168, 174], "tractogram_bootstrap_dg": 29, "repeat": [8, 29, 31, 33, 63, 68, 85, 86, 93, 225, 236, 237], "keep": [3, 5, 15, 29, 31, 37, 40, 63, 78, 81, 86, 111, 127, 159, 167, 168, 171, 173, 200, 202, 208, 213, 225], "NOT": [29, 161, 168, 173, 210, 219], "clip": [29, 33, 34, 67, 70, 75, 86, 163, 164, 166, 167, 173, 185, 213, 214, 221], "min": [29, 33, 34, 59, 61, 83, 86, 96, 106, 122, 131, 133, 142, 159, 161, 164, 166, 167, 168, 171, 174, 225], "peak_dg": 29, "from_pmf": [29, 33, 34, 35, 164, 174], "peak_streamline_gener": 29, "closest_peak_dg_csd": 29, "tractogram_closest_peak_dg": 29, "q": [1, 29, 41, 42, 45, 52, 59, 65, 69, 72, 73, 80, 81, 89, 90, 92, 105, 120, 121, 138, 142, 143, 147, 154, 156, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 179, 188, 195, 200, 219, 223, 225, 231, 234], "ball": [29, 41, 42, 45, 65, 72, 81, 92, 142, 156, 163, 164, 167, 169, 173, 188, 234], "residu": [29, 47, 48, 49, 50, 52, 64, 154, 159, 164, 167, 225], "vol": [1, 2, 29, 47, 51, 53, 68, 72, 73, 74, 78, 81, 90, 95, 108, 109, 110, 111, 115, 119, 142, 161, 163, 167, 168, 169, 171, 236, 237], "39": [22, 29, 37, 41, 43, 45, 50, 68, 71, 75, 76, 77, 79, 80, 82, 86, 87, 90, 91, 100, 102, 125, 156, 161, 167, 211, 215], "tracking_bootstrap_peak": [27, 29], "trajectori": [30, 32, 33, 41, 65, 69, 92, 119, 153, 154, 162, 167, 171, 225], "pathwai": [30, 31, 33, 63, 105, 120, 121, 122, 143, 153, 168, 170, 171, 173, 179, 200], "within": [3, 30, 33, 41, 52, 67, 68, 75, 81, 106, 110, 119, 122, 142, 151, 153, 156, 159, 161, 162, 163, 165, 167, 168, 169, 171], "constraint": [30, 35, 41, 65, 68, 70, 80, 81, 87, 141, 153, 154, 156, 161, 162, 167, 217, 226, 227], "max": [20, 30, 41, 55, 59, 61, 64, 67, 75, 83, 93, 94, 101, 106, 122, 131, 133, 142, 153, 156, 161, 163, 164, 166, 167, 168, 171, 174, 215, 217, 230], "word": [2, 4, 5, 30, 68, 83, 108, 153, 159, 167, 170, 172, 208, 214], "highest": [30, 59, 143, 153, 159, 161, 164, 167, 168, 213], "oppos": [30, 79, 153, 159, 167, 171], "draw": [30, 69, 93, 99, 102, 153, 171, 172], "therefor": [30, 48, 52, 56, 70, 72, 73, 75, 77, 78, 80, 95, 96, 130, 131, 133, 138, 140, 153, 159, 161, 163, 167, 234], "equival": [30, 75, 139, 153, 159, 161, 167, 169, 241], "alwai": [18, 30, 40, 56, 59, 68, 70, 75, 80, 82, 83, 87, 138, 153, 163, 164, 167, 169, 171, 215, 221, 230], "unlik": [30, 33, 153, 167, 171], "entir": [30, 36, 47, 49, 50, 52, 79, 80, 83, 105, 131, 153, 159, 165, 167, 168, 171, 173, 220, 241], "begin": [30, 31, 32, 33, 36, 37, 53, 63, 86, 108, 110, 118, 127, 139, 151, 153, 167, 173, 221, 229, 230, 231, 234], "deterministicmaximumdirectiongett": [30, 37, 174], "represent": [5, 14, 30, 31, 33, 63, 69, 80, 83, 85, 91, 96, 111, 122, 127, 140, 153, 159, 161, 162, 165, 167, 171, 213, 234, 236, 237], "detmax_dg": 30, "streamline_gener": [30, 33, 34, 35, 36, 37, 127], "tractogram_deterministic_dg": 30, "tracking_determinist": [27, 30], "approach": [31, 33, 52, 56, 63, 64, 71, 79, 80, 83, 86, 91, 99, 101, 102, 103, 153, 159, 163, 167, 168, 170, 173, 191], "idea": [18, 31, 50, 52, 63, 68, 79, 94, 102, 138, 147, 151, 153, 159, 167, 171, 217, 224, 229, 243], "direction": [31, 63, 83, 153], "tract": [31, 41, 59, 63, 71, 75, 97, 105, 106, 123, 125, 143, 145, 153, 159, 164, 167, 168, 170, 172, 173, 180, 195, 219, 221, 227], "build": [17, 31, 33, 34, 52, 63, 81, 93, 102, 103, 134, 137, 142, 153, 159, 166, 167, 171, 172, 173, 174, 175, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 243], "wide": [31, 63, 110, 153, 171, 230], "simpl": [2, 15, 18, 31, 41, 56, 63, 68, 71, 72, 75, 77, 79, 86, 89, 95, 96, 108, 109, 110, 126, 128, 129, 132, 153, 154, 159, 161, 166, 167, 168, 171, 172, 173, 217, 222, 228, 241], "three": [5, 31, 41, 61, 63, 75, 79, 80, 81, 82, 83, 86, 89, 93, 94, 99, 102, 110, 113, 127, 138, 139, 140, 151, 153, 156, 159, 161, 162, 163, 165, 167, 169, 171, 172], "thing": [9, 12, 15, 19, 31, 63, 83, 91, 93, 94, 127, 134, 137, 153, 161, 163, 167, 171, 208, 217, 218, 241], "must": [2, 31, 32, 33, 35, 40, 56, 63, 64, 68, 69, 73, 80, 81, 90, 93, 101, 108, 109, 143, 153, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 176, 193], "abov": [2, 4, 5, 14, 19, 31, 37, 41, 43, 44, 47, 48, 50, 52, 53, 63, 68, 69, 70, 75, 77, 78, 79, 81, 82, 85, 94, 113, 117, 126, 127, 133, 139, 143, 154, 156, 159, 161, 162, 165, 166, 167, 168, 169, 171, 173, 230, 234, 241], "internet": [31, 63, 87], "water": [1, 31, 41, 63, 65, 70, 71, 82, 85, 92, 117, 122, 138, 151, 154, 162, 167, 169, 173, 190, 210, 219, 222, 226], "qualiti": [31, 47, 48, 59, 63, 76, 108, 121, 152, 159, 162, 164, 165, 167, 168, 172, 173, 175, 213, 214, 219], "basi": [31, 33, 63, 76, 80, 83, 88, 89, 151, 153, 154, 161, 162, 163, 164, 166, 167, 173, 174, 193, 213, 215, 216, 219, 221, 222, 224, 234], "peak_slic": [31, 63, 68, 86, 87, 213], "peak_dir": [31, 63, 68, 86, 87, 165], "peak_valu": [31, 63, 67, 68, 78, 86, 87, 164, 167, 174, 217], "csa_direction_field": [31, 63], "ve": [5, 14, 15, 16, 31, 63, 69, 119, 127, 161, 171, 231, 241], "further": [19, 31, 35, 36, 59, 63, 79, 80, 91, 105, 159, 167, 168, 171], "again": [2, 4, 5, 19, 31, 63, 83, 86, 93, 139, 161, 163, 167, 168, 210, 212, 215, 217, 235], "sli": [31, 35, 46, 49, 50, 52, 63, 104], "set_axis_off": [31, 35, 46, 47, 49, 56, 61, 63, 72, 73, 76, 90, 104], "imshow": [31, 35, 37, 46, 47, 48, 49, 50, 51, 52, 56, 59, 61, 63, 69, 71, 72, 73, 75, 76, 77, 79, 82, 83, 84, 86, 90, 94, 99, 104, 113, 127, 172], "grai": [31, 32, 35, 37, 46, 47, 48, 49, 50, 51, 52, 56, 61, 63, 69, 71, 76, 77, 79, 81, 82, 84, 94, 104, 113, 127, 153, 159, 167, 168, 171, 172, 236, 237], "gfa_tracking_mask": [31, 63], "deriv": [31, 32, 48, 63, 70, 71, 76, 77, 85, 91, 138, 143, 148, 151, 159, 161, 162, 163, 167, 168, 169, 171, 172, 173, 176, 190, 235], "specifi": [31, 40, 48, 63, 79, 81, 85, 86, 93, 94, 101, 127, 134, 138, 143, 146, 147, 148, 150, 151, 152, 153, 159, 161, 162, 163, 166, 167, 168, 169, 171, 172, 173, 178, 179, 184, 185, 190, 191, 192, 193, 199, 210, 219, 230, 235, 241], "grid": [31, 40, 41, 43, 63, 67, 68, 80, 93, 101, 103, 131, 133, 156, 159, 167, 169, 171, 172, 210, 217, 225], "per": [2, 31, 36, 41, 63, 76, 81, 88, 95, 96, 97, 105, 127, 131, 143, 144, 145, 153, 156, 159, 162, 163, 166, 167, 168, 170, 171, 172, 173, 176, 185, 191, 205, 206, 213, 216, 217, 230, 232], "give": [4, 5, 8, 12, 16, 18, 19, 31, 40, 47, 52, 56, 59, 63, 67, 68, 79, 85, 110, 121, 138, 147, 161, 163, 164, 167, 171, 173, 185, 209, 210, 211, 219, 225], "final": [5, 15, 19, 31, 36, 49, 61, 63, 68, 70, 74, 75, 79, 80, 82, 83, 84, 86, 87, 93, 94, 95, 101, 102, 111, 115, 117, 126, 127, 130, 159, 161, 163, 167, 168, 173, 239, 241], "bring": [5, 31, 63, 101, 103, 130, 152, 159, 222], "togeth": [31, 49, 63, 74, 80, 81, 83, 94, 96, 115, 127, 130, 134, 139, 159, 161, 165, 167, 168, 171, 173, 219, 222], "garyfallidis12": [31, 63, 95, 108, 109, 110, 111, 119, 142, 153, 168, 171], "what": [5, 16, 19, 31, 56, 59, 61, 63, 80, 83, 86, 91, 93, 97, 99, 102, 105, 108, 109, 126, 130, 133, 138, 141, 142, 143, 159, 165, 167, 168, 169, 173, 239, 243], "happen": [31, 63, 80, 99, 131, 132, 161, 173, 219, 241], "prepar": [31, 34, 63, 64, 75, 79, 93, 159, 161, 166, 167], "streamlines_actor": [31, 35, 36, 63, 124, 132], "static": [31, 63, 93, 94, 96, 97, 101, 102, 103, 144, 145, 152, 159, 161, 165, 167, 172, 173, 175, 176, 177, 180, 202], "Or": [4, 5, 31, 57, 61, 63, 68, 138, 167], "tractogram_eudx": [31, 63], "so": [2, 3, 5, 14, 15, 16, 19, 31, 33, 35, 36, 40, 52, 53, 63, 66, 70, 72, 75, 79, 80, 81, 83, 86, 88, 91, 93, 96, 97, 101, 102, 103, 105, 108, 109, 110, 111, 118, 119, 122, 126, 127, 130, 131, 133, 139, 142, 148, 151, 152, 154, 159, 161, 162, 163, 165, 166, 167, 168, 171, 172, 173, 188, 209, 215, 216, 217, 230, 235, 241], "call": [2, 4, 5, 19, 31, 40, 44, 50, 51, 53, 56, 61, 63, 68, 69, 70, 71, 72, 74, 75, 77, 79, 81, 82, 83, 85, 88, 91, 93, 96, 97, 102, 113, 115, 118, 119, 127, 131, 134, 137, 140, 142, 151, 152, 153, 159, 161, 162, 163, 166, 167, 168, 169, 171, 173, 174, 210, 213, 214, 215, 225, 235, 241], "softwar": [1, 2, 31, 36, 40, 63, 101, 102, 103, 130, 152, 161, 162, 163, 167, 168, 173, 191, 230, 231, 234, 243], "toward": [31, 32, 37, 63, 80, 93, 103, 139, 142, 153, 159, 161, 167, 171, 172, 173, 235], "accur": [31, 35, 63, 64, 70, 75, 86, 93, 142, 151, 153, 161, 163, 166, 167, 171, 173, 182, 183, 226], "univers": [20, 31, 63, 82, 141, 142, 153, 162, 167, 169, 171, 173, 205, 236, 237], "cambridg": [20, 31, 63, 82, 142, 153, 161, 167, 173, 205], "2012": [1, 31, 32, 37, 63, 70, 71, 78, 95, 96, 108, 109, 110, 111, 119, 142, 153, 167, 168, 169, 170, 171, 173, 205, 220, 241], "tracking_introduction_eudx_1": [27, 31], "pft": [32, 149, 154, 213, 214], "girard2014": [32, 37, 153], "pve": [32, 37, 81, 113, 153, 168, 171, 173, 206, 218, 236, 237], "incorrectli": [32, 153], "corticospin": [32, 37, 59, 81, 105, 106, 113, 143, 153, 167, 171], "fluid": [32, 37, 77, 79, 81, 86, 113, 153, 161, 167, 171, 173, 206, 236, 237], "reli": [2, 32, 52, 95, 153, 167, 171, 210, 217], "correctli": [5, 32, 69, 208, 212, 213, 217, 224], "kept": [32, 68, 122, 153, 159, 161, 164, 167, 171], "extend": [2, 12, 32, 69, 81, 130, 134, 137, 142, 153, 161, 167, 168, 172, 173, 211, 217, 219, 225], "continu": [32, 37, 41, 65, 92, 142, 153, 154, 167, 171, 210, 216], "until": [19, 32, 37, 68, 79, 86, 153, 159, 167, 168], "whenev": [32, 37, 167], "classifi": [3, 32, 37, 50, 81, 113, 154, 168, 174, 209, 210, 218, 219, 222], "invalidpoint": [32, 37, 171, 174], "sphx_glr_examples_built_fiber_tracking_tracking_stopping_criterion": [], "f_pve_csf": [32, 37], "f_pve_gm": [32, 37], "f_pve_wm": [32, 37], "stanford_pve_map": [32, 37, 153], "pve_csf_data": [32, 37], "pve_gm_data": [32, 37], "pve_wm_data": [32, 37], "_": [32, 37, 50, 64, 69, 74, 82, 84, 85, 86, 94, 96, 97, 101, 113, 115, 121, 161, 162, 163, 167, 169, 171, 173, 230, 231], "return_voxs": [32, 57, 72, 78, 159, 165], "dg": [32, 37, 171, 213], "smith2012": [32, 37], "both": [2, 32, 46, 47, 48, 49, 50, 53, 56, 68, 69, 70, 77, 79, 80, 81, 82, 83, 85, 86, 87, 94, 95, 96, 97, 101, 104, 106, 108, 119, 126, 130, 132, 155, 159, 161, 162, 166, 167, 171, 172, 173, 193, 195, 217, 219, 234], "determin": [32, 37, 59, 68, 79, 80, 81, 113, 127, 140, 159, 163, 164, 168, 169, 171, 173, 174, 185, 189, 234], "reach": [14, 32, 37, 68, 77, 86, 95, 106, 113, 127, 139, 153, 163, 167, 171, 173, 206], "invalid": [32, 37, 40, 72, 79, 82, 84, 86, 159, 161, 165, 171, 208, 212, 225], "conjunct": 32, "cmc_criterion": 32, "from_pv": [32, 171, 174], "average_voxel_s": [32, 171], "pft_back_tracking_dist": [32, 171], "distanc": [32, 95, 96, 97, 105, 106, 109, 110, 111, 124, 126, 138, 159, 161, 163, 164, 165, 167, 168, 170, 172, 173, 174, 180, 195, 200, 206, 220, 224, 228, 235], "backtrack": [32, 37, 171], "wm": [32, 48, 68, 70, 81, 113, 153, 167, 173, 209, 226, 236, 237], "csf": [32, 56, 77, 79, 80, 81, 86, 113, 167, 173, 212, 236, 237], "pft_front_tracking_dist": [32, 171], "event": [32, 130, 161, 168, 172, 173, 210, 213], "particle_count": [32, 171], "min_wm_pve_before_stop": [32, 171, 173, 206], "control": [2, 5, 32, 37, 76, 79, 87, 97, 138, 143, 145, 153, 159, 161, 162, 166, 167, 168, 170, 171, 173, 219], "gm": [32, 48, 81, 86, 113, 161, 167, 173, 236, 237], "wm_pve": 32, "long": [2, 32, 40, 78, 142, 159, 166, 169, 171, 173, 210, 220], "particularlyuseful": 32, "interfac": [19, 32, 37, 79, 93, 130, 137, 141, 151, 153, 154, 159, 161, 163, 167, 169, 173, 185, 210, 216, 220, 224, 225], "sub": [32, 36, 41, 48, 66, 76, 77, 93, 134, 156, 159, 161, 165, 166, 167, 168, 173, 213], "exit": [32, 37, 127, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 213], "deep": [32, 64, 70, 141, 154, 166, 173, 186, 221, 225], "pft_streamline_gen": 32, "max_cross": [32, 171], "maxlen": [32, 171], "1000": [32, 36, 40, 41, 48, 50, 53, 55, 61, 64, 72, 76, 81, 82, 87, 93, 94, 101, 118, 142, 156, 159, 161, 162, 166, 167, 169, 172, 173, 210, 230, 231, 236, 237], "return_al": [32, 37, 171], "pft_streamline_gener": 32, "tractogram_pft": 32, "prob_streamline_gener": 32, "tractogram_probabilistic_cmc": 32, "whittingstal": [32, 37, 153, 162, 171, 173, 206], "derich": [32, 37, 59, 153, 163, 164, 167, 169, 171, 173, 184, 206, 234, 236, 237], "bias": [32, 37, 70, 95, 153, 161, 171, 173, 206], "98": [22, 29, 30, 32, 33, 37, 50, 71, 76, 79, 80, 82, 90, 131, 153, 154, 171, 172, 173, 206, 215], "266": [32, 37, 76, 79, 80, 153, 171, 173, 206, 216], "278": [32, 37, 79, 80, 153, 171, 173, 206, 217], "smith": [1, 2, 18, 20, 32, 37, 55, 113, 142, 143, 144, 145, 150, 163, 167, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 215, 234], "tournier": [32, 37, 41, 68, 81, 156, 163, 164, 166, 167, 171, 173, 189, 213, 234], "calamant": [32, 37, 68, 81, 163, 164, 167, 171, 234], "connelli": [32, 37, 68, 81, 163, 164, 167, 171, 234], "63": [22, 29, 30, 32, 33, 34, 37, 48, 49, 50, 71, 76, 77, 79, 80, 82, 95, 171, 215], "1924": [32, 37, 79, 171, 219], "1938": [32, 37, 76, 79, 171, 221], "tracking_pft": [27, 32], "mr": [1, 33, 47, 48, 49, 51, 53, 59, 75, 79, 86, 89, 113, 138, 147, 148, 150, 151, 153, 161, 162, 163, 167, 173, 192, 215, 230, 243], "possibl": [5, 12, 19, 33, 40, 46, 53, 67, 68, 70, 72, 73, 78, 80, 81, 89, 90, 93, 104, 111, 133, 138, 139, 153, 159, 161, 162, 163, 164, 167, 168, 171, 173, 176, 188, 189, 190, 191, 192, 193, 194, 201, 202, 208, 212, 219, 222, 224, 225, 231], "howev": [5, 33, 35, 40, 43, 50, 55, 69, 70, 73, 77, 80, 81, 82, 83, 85, 86, 108, 126, 127, 130, 133, 138, 153, 161, 163, 166, 167, 168, 173, 182, 183, 234, 241], "few": [5, 33, 43, 91, 130, 142, 171, 209, 210, 214, 215, 216, 217, 218, 228, 238, 241], "latter": [33, 71, 151], "cannot": [33, 66, 77, 82, 86, 161, 163, 166, 171, 208, 214, 217, 219, 225, 226, 227, 241], "neg": [33, 35, 40, 48, 52, 67, 68, 70, 80, 81, 82, 124, 159, 161, 162, 163, 164, 165, 167, 168, 171, 173, 185, 189, 208, 210, 216, 221, 223, 234], "ideal": [33, 41, 52, 70, 156, 167, 234], "strictli": [33, 35, 121, 167, 168], "failur": [3, 33, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 221, 222, 225], "sometim": [5, 33, 43, 52, 126, 127, 138, 219, 241], "tractogram_probabilistic_dg_pmf": 33, "disadvantag": 33, "tend": [33, 52, 80], "lot": [19, 33, 56, 80, 127, 138, 166, 167, 241], "ram": [33, 86, 167], "uniqu": [14, 33, 64, 69, 81, 84, 85, 97, 106, 159, 161, 163, 164, 165, 166, 167, 168, 171, 222, 225], "81": [21, 22, 33, 37, 48, 50, 51, 67, 71, 75, 76, 79, 80, 82, 99, 111, 159, 162, 167, 215, 220], "106": [33, 51, 67, 75, 76, 79, 80, 99, 109, 112, 215], "76": [22, 33, 37, 48, 50, 51, 66, 67, 71, 75, 76, 79, 80, 82, 99, 131, 148, 211, 215], "181": [33, 79, 80, 111, 216, 217], "sh": [33, 81, 88, 154, 163, 164, 165, 166, 167, 173, 205, 213, 219, 221, 222, 225, 226, 234], "362": [33, 36, 76, 80, 84, 85, 87, 162, 163, 167, 217], "worri": [5, 33, 143], "tractogram_probabilistic_dg_sh": 33, "Not": [33, 141, 208], "attribut": [33, 40, 67, 68, 69, 70, 75, 79, 84, 111, 164, 165, 166, 172, 210, 212, 213, 220, 221, 223, 227], "return_sh": [33, 44, 87, 164], "fod_coeff": 33, "tractogram_probabilistic_dg_sh_pfm": 33, "tracking_probabilist": [27, 33], "ptt": [34, 141, 162, 164, 226, 227], "aydogan2021": 34, "pttdirectiongett": [34, 174], "ptt_dg": 34, "probe_length": [34, 164], "direction_gett": [34, 174], "tractogram_ptt_dg_pmf": 34, "aydogan": [34, 164, 227], "db": [34, 164], "shi": [34, 164], "ieee": [1, 34, 51, 52, 73, 78, 86, 90, 93, 94, 113, 147, 155, 159, 161, 163, 164, 167, 168, 171, 236, 237], "tran": [1, 34, 161, 163, 164, 168, 173, 175], "med": [1, 34, 48, 55, 69, 77, 89, 148, 150, 159, 161, 163, 164, 167, 168, 173, 190, 194, 234], "2021": [1, 34, 41, 69, 76, 79, 85, 130, 155, 156, 162, 164, 167, 220, 223, 224, 225], "feb": [34, 164, 236, 237], "635": [34, 71, 79, 82, 164, 208], "647": [34, 76, 79, 164, 213], "1109": [34, 76, 79, 86, 164, 167, 210], "tmi": [34, 164, 167], "2020": [34, 41, 52, 69, 70, 79, 80, 97, 105, 120, 121, 143, 155, 156, 161, 162, 163, 164, 166, 167, 168, 170, 173, 179, 185, 200, 220, 221, 222, 223], "3034038": [34, 164], "epub": [34, 164], "pmid": [34, 161, 164], "33104507": [34, 164], "pmcid": [34, 161, 164], "pmc7931442": [34, 164], "tracking_ptt": [27, 34], "canalesrodriguez2015": [35, 86], "richardson": [35, 74, 86, 115, 167], "luci": [35, 74, 86, 115, 167], "noncentr": [35, 86, 167, 173], "chi": [35, 56, 86, 161, 167, 173], "reflect": [35, 86, 122, 127, 140, 159, 167, 173, 201], "sphx_glr_examples_built_reconstruction_reconst_rumba": [], "transform_streamlin": [35, 36, 130, 131, 174, 226, 227], "rumbasdmodel": [35, 86, 174], "t1_aff": [35, 36], "global": [1, 4, 15, 35, 55, 80, 86, 94, 105, 119, 130, 144, 150, 159, 167, 168, 169, 173, 197, 200, 202, 217, 236, 237], "voxelwis": [35, 86, 167, 173, 210], "tv": [35, 86, 163, 167, 173, 194], "regular": [2, 35, 80, 83, 86, 87, 89, 97, 102, 145, 151, 154, 159, 161, 162, 163, 164, 167, 169, 172, 173, 180, 185, 193, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 234, 236, 237], "use_tv": [35, 86, 167, 173], "turn": [2, 5, 35, 73, 138, 139, 147, 165, 167, 171], "off": [6, 14, 35, 50, 59, 77, 83, 97, 99, 101, 113, 145, 159, 173, 180, 210], "effici": [1, 35, 86, 95, 96, 133, 144, 152, 154, 159, 161, 162, 171, 173, 202, 222, 241], "although": [35, 48, 69, 70, 80, 82, 83, 96, 148, 166, 167, 171], "usag": [35, 72, 142, 154, 166, 167, 173, 207, 217], "wm_respons": [35, 86, 167], "n_iter": [35, 86, 167, 173], "200": [35, 41, 48, 52, 68, 76, 79, 80, 83, 86, 102, 111, 117, 130, 142, 156, 162, 167, 173, 210, 225, 227, 236, 237], "rumba_fit": [35, 86], "fodf": [35, 64, 76, 81, 87, 151, 166, 167, 173, 208], "f_wm": [35, 86, 167, 174], "establish": [35, 91, 159], "common": [2, 4, 12, 35, 40, 55, 57, 67, 70, 79, 80, 82, 86, 91, 95, 101, 105, 134, 137, 143, 150, 159, 161, 162, 165, 167, 170, 171, 173, 215], "caution": [35, 83], "separ": [2, 5, 35, 52, 68, 69, 79, 81, 83, 113, 137, 151, 159, 161, 162, 165, 166, 167, 168, 169, 172, 173, 192, 203, 215, 225, 241], "isotrop": [35, 41, 57, 77, 80, 81, 86, 101, 126, 138, 156, 159, 161, 164, 168, 169, 171, 173, 174, 175, 176, 221, 228], "bia": [35, 49, 80, 113, 161, 163, 167, 171, 208, 214, 219], "advantag": [35, 52, 66, 78, 82, 87, 96, 119, 159, 241], "featur": [2, 3, 4, 9, 14, 15, 35, 41, 47, 69, 94, 107, 109, 111, 112, 117, 119, 141, 154, 155, 161, 163, 165, 166, 167, 169, 173, 174, 191, 208, 210, 223, 226, 227, 236, 237], "f_wm_tracking_mask": 35, "adher": 35, "manipul": [35, 40, 137, 157, 165], "list": [5, 15, 18, 19, 35, 36, 83, 93, 95, 101, 106, 108, 109, 110, 122, 126, 131, 132, 134, 137, 146, 151, 159, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 187, 190, 191, 192, 193, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 241, 242], "tractogram_probabilistic_rumba": 35, "canal": [35, 41, 74, 86, 115, 156, 167, 173, 215], "rodr\u00edguez": [35, 41, 86, 156, 167, 173], "sotiropoulo": [35, 41, 86, 156, 167, 173], "caruy": [20, 35, 86, 167, 173, 216], "aja": [35, 86, 167, 173], "fern\u00e1ndez": [35, 86, 167, 173], "radua": [35, 86, 167, 173], "mendizab": [35, 86, 167, 173], "iturria": [35, 86, 167, 173], "medina": [35, 86, 167, 173], "meli": [35, 86, 167, 173], "garc\u00eda": [35, 86, 167, 173], "l": [1, 35, 49, 50, 52, 66, 69, 70, 71, 76, 77, 83, 84, 86, 91, 101, 102, 103, 105, 120, 121, 142, 143, 152, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 182, 190, 191, 200, 217, 234, 236, 237], "alem\u00e1n": [35, 86, 167, 173], "g\u00f3mez": [35, 86, 167, 173], "thiran": [35, 86, 167, 173], "sarr\u00f3": [35, 86, 167, 173], "pomarol": [35, 86, 167, 173], "clotet": [35, 86, 167, 173], "salvador": [35, 86, 167, 173], "multichannel": [35, 86, 167, 173], "ONE": [35, 36, 49, 50, 52, 86, 87, 163, 166, 167, 173, 182, 236, 237], "e0138910": [35, 86, 167, 173], "org": [1, 19, 35, 41, 48, 50, 70, 80, 82, 84, 85, 86, 110, 130, 138, 139, 143, 144, 145, 148, 156, 157, 159, 161, 162, 163, 165, 166, 167, 168, 171, 173, 182, 194, 216, 222, 236, 237, 242], "1371": [35, 36, 49, 50, 52, 79, 86, 87, 163, 166, 167, 173, 182, 212, 236, 237], "pone": [35, 36, 49, 50, 52, 86, 87, 163, 166, 167, 173, 182, 236, 237], "0138910": [35, 86, 167, 173], "tracking_rumba": [27, 35], "sfm": [36, 41, 87, 156, 174, 209, 210, 212, 218, 221, 225], "rokem2015": [36, 87, 167], "sphx_glr_examples_built_reconstruction_reconst_sfm": [], "select_random_set_of_streamlin": [36, 40, 121, 174], "freesurf": [36, 127, 162], "canon": [36, 163, 167, 171], "deconvolv": [36, 68, 74, 115, 151, 167], "symmetr": [36, 41, 76, 87, 88, 96, 98, 100, 101, 110, 149, 154, 159, 161, 163, 165, 166, 167, 171, 173, 200, 213, 214, 217, 221, 230, 231, 234], "sf_model": [36, 87], "sparsefasciclemodel": [36, 87, 174], "l1_ratio": [36, 87, 167], "alpha": [36, 71, 79, 83, 87, 97, 139, 145, 159, 161, 162, 163, 167, 171, 173, 180, 185], "001": [22, 24, 36, 68, 79, 81, 86, 87, 97, 134, 136, 159, 161, 165, 167, 171, 173], "pnm": 36, "suffici": [36, 41, 43, 86, 156, 167, 217], "high": [36, 41, 47, 48, 52, 59, 68, 70, 76, 77, 79, 80, 81, 88, 91, 108, 118, 138, 156, 159, 163, 166, 167, 168, 169, 171, 173, 180, 212, 236, 237], "sake": [36, 50, 81], "compon": [36, 47, 49, 50, 69, 70, 77, 79, 80, 86, 117, 139, 147, 159, 161, 163, 165, 167, 169, 171, 173, 182, 183, 210, 212, 213, 219], "construct": [2, 36, 64, 86, 93, 159, 161, 162, 163, 167, 169, 171, 219], "subject": [36, 55, 75, 77, 83, 85, 91, 96, 97, 105, 119, 130, 138, 143, 144, 147, 150, 161, 162, 166, 167, 168, 170, 173, 178, 179, 229, 236, 237, 241, 242], "anatomi": [36, 40, 105, 122, 124, 141, 154, 173, 180, 195], "speed": [36, 83, 85, 108, 138, 154, 159, 167, 168, 171, 173, 199, 217, 218, 220, 238, 241], "particularli": [2, 36, 50, 77, 82, 91], "throughout": [36, 97, 159, 171], "purpos": [5, 36, 41, 48, 53, 55, 61, 68, 70, 77, 80, 81, 87, 91, 94, 96, 110, 111, 117, 119, 147, 151, 153, 159, 161, 162, 167, 168, 172, 173, 210, 231, 243], "subset": [36, 159, 166], "plot_streamlin": 36, "tractogram_sfm": 36, "tractogram_sfm_detr": 36, "ariel": [1, 18, 20, 36, 87, 167, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "jason": [36, 87, 119, 167, 170], "kendrick": [36, 87, 167], "aviv": [36, 87, 167], "mezer": [1, 36, 66, 87, 167, 236, 237], "stefan": [18, 20, 36, 87, 167, 173, 208, 215, 216, 217, 218, 219], "van": [1, 2, 18, 20, 36, 70, 87, 142, 143, 144, 145, 167, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 215, 216, 217, 218, 236, 237], "der": [1, 2, 18, 20, 36, 70, 87, 142, 143, 144, 145, 167, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 215, 216, 217, 218, 236, 237], "walt": [1, 2, 18, 20, 36, 87, 142, 143, 144, 145, 167, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 215, 216, 217, 218, 236, 237], "brian": [36, 87, 119, 167, 170], "accuraci": [1, 36, 66, 68, 70, 80, 85, 87, 101, 159, 166, 167, 168, 224, 236, 237], "e0123272": [36, 87, 167, 236, 237], "0123272": [36, 87, 167, 236, 237], "tracking_sfm": [27, 36], "fa": [37, 43, 50, 59, 61, 67, 68, 70, 75, 76, 77, 81, 83, 84, 85, 86, 91, 101, 119, 130, 131, 142, 143, 151, 161, 162, 165, 167, 170, 172, 173, 174, 188, 189, 190, 191, 205, 213, 215, 217, 218, 220, 236, 237, 239], "endpoint": [37, 96, 110, 127, 167, 174], "outsideimag": [37, 171, 174, 210], "trackpoint": [37, 171, 174, 219], "2004": [37, 41, 72, 79, 156, 162, 167, 169, 171, 225], "sphx_glr_examples_built_fiber_tracking_tracking_determinist": [], "dti": [37, 41, 50, 59, 65, 66, 68, 69, 70, 75, 80, 81, 83, 84, 85, 91, 92, 117, 138, 142, 143, 149, 154, 156, 161, 162, 170, 173, 174, 191, 208, 209, 210, 211, 215, 216, 217, 219, 221, 222, 225, 226, 228, 239], "fractional_anisotropi": [37, 68, 75, 76, 174], "tensormodel": [37, 59, 66, 68, 70, 75, 77, 83, 91, 174, 210, 215, 226, 239], "scalar": [1, 37, 41, 65, 72, 76, 79, 80, 92, 110, 131, 151, 159, 161, 166, 167, 168, 171, 172, 208], "metric_map": [37, 171], "float": [2, 37, 46, 73, 99, 104, 106, 138, 142, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 180, 181, 182, 184, 185, 188, 189, 190, 191, 193, 195, 196, 198, 200, 201, 203, 205, 206, 211, 217, 221, 224, 226], "state": [5, 19, 37, 40, 80, 82, 85, 91, 108, 154, 161, 165, 166, 171, 217, 219, 220, 222, 225, 228], "tensor_model": 37, "tenfit": [37, 68, 70, 75, 83, 217, 239], "eval": [37, 68, 74, 75, 86, 91, 115, 117, 142, 167, 169, 171, 173, 174, 190, 191], "threshold_criterion": 37, "mask_fa": 37, "xtick": [37, 48, 50, 52, 71, 77, 82], "ytick": [37, 48, 50, 52, 71, 77, 82], "nearest": [37, 64, 71, 73, 76, 79, 83, 90, 106, 127, 159, 161, 168, 171, 173, 201, 227], "tight_layout": [37, 69, 83, 84, 99], "threshold_fa": 37, "tractogram_probabilistic_thresh_al": 37, "tractogram_deterministic_thresh_al": 37, "neighborhood": [37, 105, 159, 168, 173, 176], "binary_criterion": 37, "white_matter_mask": 37, "tractogram_deterministic_binary_al": 37, "include_map": [37, 171, 173, 206], "exclude_map": [37, 171, 173, 206], "background": [2, 37, 46, 48, 56, 59, 64, 67, 69, 70, 71, 75, 77, 82, 83, 84, 104, 124, 127, 133, 159, 163, 167, 171, 172, 173, 195], "stem": [37, 171], "plausibl": [37, 70, 167], "act_criterion": 37, "121": [37, 76, 79, 80, 99, 215], "122": [37, 79, 80, 84, 99, 111, 167, 215], "act_map": 37, "tractogram_deterministic_act_al": 37, "tractogram_deterministic_act_valid": 37, "respect": [37, 59, 69, 77, 80, 86, 89, 94, 96, 113, 127, 138, 154, 159, 161, 162, 163, 165, 167, 168, 171, 172, 173, 195, 221, 222, 241], "addition": [2, 37, 41, 50, 75, 141, 156], "cut": [37, 171, 172], "subcort": [37, 171], "tracking_stopping_criterion": [27, 37], "write": [2, 4, 5, 8, 14, 15, 16, 38, 39, 41, 61, 67, 72, 73, 78, 80, 89, 90, 130, 137, 147, 148, 150, 159, 165, 167, 172, 173, 217, 221, 241], "format": [2, 4, 15, 19, 40, 57, 61, 69, 79, 81, 117, 127, 133, 138, 143, 159, 161, 162, 163, 165, 166, 167, 169, 171, 173, 191, 193, 208, 210, 211, 212, 214, 217, 219, 221, 226, 228, 236, 237, 238, 241], "short": [8, 40, 82, 94, 122, 159, 164, 169, 171, 173, 217, 230, 231], "made": [4, 5, 14, 15, 18, 40, 68, 80, 108, 109, 134, 137, 159, 167, 171, 218, 230, 231, 235], "complex": [40, 122, 140, 154, 167, 225, 232, 234], "convent": [2, 40, 82, 139, 140, 154, 159, 161, 162, 163, 165, 167, 171, 233], "frequent": [2, 40, 242], "ask": [9, 19, 40, 141, 242], "question": [40, 59, 119, 127, 171, 212, 221, 227, 229, 242], "create_nifti_head": [40, 174], "get_reference_info": [40, 174], "is_header_compat": [40, 174], "fetcher": [40, 71, 79, 83, 93, 101, 119, 130, 154, 166, 174, 209, 210, 213, 216, 217, 219, 221, 222, 224, 226], "fetch_file_format": [40, 174], "get_file_format": [40, 174], "cc_m_sub": 40, "laf_m_sub": 40, "lpt_m_sub": 40, "raf_m_sub": 40, "rpt_m_sub": 40, "And": [18, 20, 40, 91, 93, 94, 101, 102, 103, 113, 119, 143, 171, 173, 205, 206, 241], "template0": 40, "nii": [40, 46, 47, 49, 50, 51, 52, 55, 56, 57, 59, 61, 64, 75, 76, 77, 93, 94, 104, 119, 124, 127, 133, 134, 137, 138, 142, 143, 147, 148, 150, 151, 152, 153, 173, 185, 195, 203, 208, 212, 221, 226, 239], "gz": [40, 46, 47, 49, 50, 51, 52, 55, 56, 57, 59, 61, 64, 75, 76, 77, 93, 94, 104, 119, 124, 127, 130, 133, 134, 137, 142, 143, 147, 148, 150, 151, 152, 153, 173, 185, 195, 203, 221, 226, 239], "bundles_filenam": 40, "ref_anat_filenam": 40, "filenam": [2, 40, 61, 70, 72, 73, 78, 79, 80, 90, 142, 162, 165, 172, 173, 180, 195, 202, 213], "print": [40, 43, 44, 47, 49, 50, 51, 52, 53, 56, 57, 59, 61, 66, 67, 68, 72, 73, 75, 76, 78, 79, 80, 81, 84, 86, 87, 88, 89, 90, 91, 97, 108, 109, 111, 113, 118, 121, 126, 130, 131, 159, 161, 165, 171, 173, 211, 212, 213, 220, 224, 226, 241], "basenam": 40, "reference_anatomi": 40, "simpli": [40, 41, 52, 75, 81, 83, 93, 108, 159, 171], "own": [5, 9, 11, 12, 13, 14, 15, 16, 40, 53, 61, 69, 108, 138, 144, 147, 148, 150, 151, 152, 153, 154, 166, 167, 173, 217, 222, 224, 225], "written": [2, 5, 40, 85, 87, 159, 161, 167, 168, 169, 172, 219, 243], "properli": [2, 40, 73, 80, 88, 130, 134, 137, 165, 167, 171, 173, 212, 215, 217, 221, 226], "technic": [12, 40], "cc_trk": 40, "cc_sft": 40, "laf_sft": 40, "raf_sft": 40, "onc": [8, 19, 40, 50, 70, 75, 78, 80, 81, 82, 83, 86, 91, 127, 131, 134, 137, 138, 148, 150, 159, 161, 167, 168, 171, 173, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 199, 201, 203, 205, 206, 219, 230, 231, 234], "anywai": [40, 230, 231], "lpt_sft": 40, "bbox_valid_check": [40, 97, 101, 105, 106, 108, 109, 110, 111, 119, 120, 165, 168], "rpt_sft": 40, "share": [18, 20, 40, 69, 159, 217, 229, 242], "nifti1": [40, 162, 173, 187, 196, 204], "nifti1imag": [40, 49, 50, 67, 69, 70, 72, 73, 78, 90, 101, 159, 162, 165], "trkfile": [40, 165], "nifti1head": [40, 165], "dict": [40, 48, 159, 161, 162, 165, 166, 167, 169, 171, 172, 173], "reason": [5, 40, 72, 77, 80, 91, 93, 99, 102, 109, 127, 159, 162, 166, 167, 173, 193, 215, 234, 241], "why": [5, 15, 19, 40, 75, 85, 93, 138, 151, 225], "relat": [2, 3, 5, 14, 40, 69, 70, 80, 83, 138, 159, 161, 165, 167, 169, 171, 208, 210, 213, 214, 215, 225, 234, 235], "voxel_ord": [40, 165, 174], "particular": [5, 40, 41, 52, 66, 70, 75, 83, 87, 159, 161, 163, 165, 167, 168, 171, 173, 236], "easili": [3, 40, 59, 61, 75, 110, 134, 137, 161, 167, 168], "verifi": [2, 40, 52, 61, 68, 70, 102, 103, 161, 165, 208, 217], "accept": [40, 155, 161, 168, 215], "varieti": [40, 80, 94, 110, 151], "lost": [5, 40], "fake": 40, "wish": [40, 86], "manual": [5, 13, 14, 19, 40, 44, 59, 109, 111, 159, 162, 163, 166, 221], "api": [4, 40, 119, 141, 154, 159, 165, 167, 170, 208, 211, 212, 213, 215, 217, 222, 241], "freedom": [40, 93, 139, 159], "action": [8, 40, 154, 173, 225, 226], "beginn": [40, 221], "create_tractogram_head": [40, 105, 174], "nifti_head": 40, "self": [2, 40, 41, 54, 56, 58, 84, 106, 110, 134, 137, 154, 159, 161, 163, 165, 167, 168, 171, 173, 185, 191, 213, 219, 223], "lpt": 40, "rpt": 40, "tool": [12, 19, 40, 61, 68, 93, 94, 101, 102, 103, 124, 127, 142, 152, 154, 159, 167, 168, 171, 172, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 241], "safer": [40, 93], "cc": [40, 59, 66, 67, 75, 99, 103, 152, 159, 173, 176, 203, 216, 236, 237, 241], "laf": 40, "raf": 40, "is_bbox_in_vox_valid": [40, 165, 174], "remove_invalid_streamlin": [40, 165, 174], "safe": [15, 40, 154, 159, 165, 221], "removing_invalid_coordin": 40, "to_voxmm": [40, 165, 174], "to_rasmm": [40, 165, 174], "subsampl": [40, 85, 159, 163, 171], "everyth": [5, 18, 19, 40, 130, 134, 137, 171, 215], "mi": [40, 93, 94, 159, 165, 173, 225], "corner": [40, 94, 161, 165, 171, 213, 220], "prevent": [4, 40, 70, 159, 167, 168, 171, 173, 177], "to_corn": [40, 165, 174], "cc_streamlines_vox": 40, "laf_streamlines_vox": 40, "raf_streamlines_vox": 40, "lpt_streamlines_vox": 40, "rpt_streamlines_vox": 40, "reus": [40, 167, 220], "space_attribut": [40, 105, 165, 174], "cc_densiti": 40, "laf_dens": 40, "raf_dens": 40, "lpt_densiti": 40, "rpt_densiti": 40, "re": [1, 5, 8, 14, 15, 16, 40, 77, 103, 127, 130, 159, 166, 167, 168, 171, 212, 231, 234, 241], "explicitli": [37, 40, 79, 80, 159, 161, 166, 167, 168, 209, 210, 219], "Be": [40, 106, 145, 161, 171], "care": [40, 59, 72, 82, 86, 108, 154, 165, 167, 171, 173], "metadata": [40, 166], "look": [3, 5, 6, 10, 14, 18, 19, 40, 53, 61, 66, 68, 85, 86, 87, 91, 93, 97, 99, 105, 113, 126, 138, 139, 142, 143, 163, 167, 171, 209, 210, 212, 215, 217, 228, 239, 241, 242], "mention": [40, 50, 70, 79, 81, 143, 210], "consist": [2, 20, 40, 56, 83, 86, 154, 159, 162, 163, 165, 166, 167, 168, 171, 210, 213, 215, 219, 225], "vox": [40, 127, 165, 174], "cc_1000": 40, "laf_1000": 40, "raf_1000": 40, "lpt_1000": 40, "rpt_1000": 40, "streamline_format": [39, 40], "correct": [19, 41, 48, 49, 53, 54, 58, 70, 74, 77, 85, 101, 113, 115, 127, 138, 149, 154, 159, 161, 162, 163, 165, 166, 171, 172, 173, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 221, 225, 236, 237], "dwi": [41, 52, 54, 56, 58, 59, 64, 76, 77, 80, 82, 83, 93, 138, 142, 147, 151, 159, 162, 163, 165, 166, 167, 168, 171, 173, 203, 221, 222, 227, 239], "piesno": [41, 54, 58, 154, 174, 208, 209, 210, 212, 217], "nlmean": [41, 47, 54, 58, 82, 134, 149, 173, 174, 184, 208, 209, 210, 217, 224], "supervis": [41, 54, 58, 154, 163, 173, 185, 223], "independ": [41, 54, 58, 82, 108, 163, 167, 171, 173, 222], "pca": [41, 52, 54, 58, 70, 81, 82, 149, 154, 171, 173, 174, 182, 183, 210, 211, 213, 219, 222, 226, 227], "empir": [41, 47, 54, 58, 82, 171], "soft": [41, 51, 54, 58, 163], "ascm": [41, 51, 54, 58], "marcenko": [41, 49, 54, 58, 70, 149, 163, 173, 182, 183], "pastur": [41, 49, 54, 58, 70, 149, 163, 173, 182, 183], "suppress": [41, 47, 50, 54, 58, 70, 77, 80, 147, 149, 163, 210, 211, 212, 213], "gibb": [41, 54, 58, 70, 149, 154, 168, 173, 174, 194, 219, 220, 221, 222, 224, 227], "oscil": [41, 54, 58, 70, 80, 89, 149, 159, 167], "overview": [9, 13, 41, 65, 149, 222], "yet": [19, 41, 61, 65, 87, 159, 161], "singl": [41, 48, 64, 67, 68, 70, 72, 75, 76, 82, 85, 86, 87, 91, 94, 96, 97, 99, 117, 118, 119, 124, 138, 140, 142, 144, 145, 151, 154, 156, 159, 161, 165, 166, 167, 168, 169, 171, 173, 177, 188, 189, 208, 213, 219, 222, 226, 228], "shell": [41, 48, 50, 52, 53, 56, 59, 64, 65, 67, 70, 71, 73, 76, 80, 82, 83, 86, 89, 90, 92, 118, 142, 154, 156, 162, 167, 169, 173, 196, 219, 220, 221, 222, 224, 225, 226, 236, 237, 241], "multi": [2, 41, 48, 49, 50, 52, 53, 65, 70, 71, 74, 76, 79, 80, 82, 86, 90, 92, 93, 99, 102, 103, 115, 142, 147, 154, 156, 159, 162, 166, 167, 169, 171, 173, 176, 186, 208, 209, 210, 213, 215, 216, 217, 218, 220, 221, 222, 224, 226, 236, 237], "paper": [2, 41, 50, 56, 59, 70, 71, 81, 82, 83, 91, 142, 143, 144, 145, 154, 155, 156, 163, 167, 173, 180, 212, 217, 219, 221], "descript": [2, 5, 19, 41, 108, 109, 122, 124, 132, 141, 156, 162, 165, 167, 171, 173, 219], "sl": [41, 122, 156, 209], "nnl": [41, 156, 161, 167], "ye": [41, 138, 156], "typic": [41, 70, 85, 87, 93, 127, 147, 156, 159, 164, 165, 167, 168, 169, 170, 171, 173, 230, 231], "1200": [41, 71, 76, 79, 81, 130, 132, 133, 142, 156, 210, 236, 237], "success": [41, 156, 165, 166, 167, 241], "1500": [41, 51, 79, 89, 156, 161, 213, 236, 237, 241], "basser": [41, 49, 75, 151, 156, 163, 167, 173, 191, 230], "1994": [41, 75, 79, 151, 156, 167, 173, 191, 220, 230], "fwdti": [41, 77, 156, 174, 210, 211, 219], "style": [3, 17, 18, 41, 156, 161, 167, 169, 209, 210, 211, 212, 213, 214, 215, 219, 220, 222, 223, 225, 226], "acquist": [41, 156], "32": [22, 27, 29, 33, 37, 41, 50, 51, 64, 71, 76, 77, 79, 80, 82, 93, 94, 101, 156, 159, 161, 166, 167, 169, 173, 208, 212, 215, 217, 218], "500mm": [41, 156], "1500mm": [41, 156], "henriqu": [1, 20, 41, 48, 50, 69, 70, 77, 82, 117, 151, 154, 156, 162, 163, 167, 169, 173, 194, 208, 210, 211, 219, 220, 221, 222, 225], "2017": [1, 41, 76, 77, 79, 101, 105, 119, 122, 144, 155, 156, 159, 162, 167, 168, 171, 173, 197, 200, 202, 205, 210, 211, 212, 220, 236, 237, 241], "pasternak": [41, 77, 156], "2009": [21, 41, 56, 77, 89, 101, 102, 103, 152, 156, 159, 161, 162, 163, 167, 168, 173, 188, 220, 236, 237], "dual": [41, 156, 171], "spin": [41, 79, 80, 138, 151, 156, 162, 166, 167, 169, 173, 191, 192, 193, 230, 232], "echo": [41, 79, 138, 151, 156, 162, 167, 169, 173, 191, 192, 230, 232], "epi": [41, 156], "acquir": [41, 47, 48, 49, 51, 52, 55, 56, 61, 68, 69, 70, 71, 76, 77, 79, 82, 84, 85, 89, 117, 138, 148, 150, 151, 156, 161, 162, 163, 167, 171, 173, 194], "2500": [41, 53, 76, 89, 118, 156, 167, 225, 236, 237], "suggest": [2, 8, 41, 70, 80, 85, 156, 159, 163, 166, 215, 217, 229, 241], "least": [41, 52, 70, 79, 81, 82, 85, 86, 91, 93, 102, 156, 159, 161, 164, 166, 167, 168, 171, 173, 190, 191, 221, 230, 231, 241], "jensen": [70, 71, 82, 151, 167, 173, 190], "2005": [41, 70, 76, 79, 82, 87, 91, 151, 156, 159, 167, 171, 173, 190, 191, 220], "micro": [41, 75, 151, 156, 210], "wmti": [41, 65, 70, 92, 156, 219], "increment": [41, 156, 161], "fiereman": [41, 48, 50, 52, 70, 71, 148, 151, 156, 163, 167, 173, 182, 183], "tabesh": [41, 70, 71, 156, 167, 173, 190], "7t": [41, 52, 156], "3000": [41, 79, 142, 156, 162, 236, 237], "resolut": [18, 41, 57, 74, 76, 88, 93, 101, 102, 103, 115, 118, 138, 156, 159, 163, 165, 167, 168, 169, 173, 176, 199, 201, 213, 221, 225, 236, 237], "aganj": [41, 43, 67, 142, 156, 167, 169, 173, 188], "westin": [41, 84, 85, 156, 161, 162, 167, 216], "ivim": [41, 79, 149, 154, 156, 162, 173, 174, 192, 210, 213, 214, 219, 220, 221, 225, 226, 236, 237], "lebihan": [41, 75, 151, 156, 167, 173, 191, 230], "1984": [41, 79, 105, 156, 161, 220], "project": [1, 5, 8, 11, 12, 19, 41, 79, 83, 133, 138, 154, 156, 159, 161, 167, 171, 174, 208, 215, 217, 235, 236, 237, 242], "fadnavi": [20, 41, 52, 79, 156, 163, 166, 167, 172, 173, 185, 186, 195, 212, 213, 214, 219, 220, 223, 224, 225, 226], "2019": [41, 64, 79, 82, 85, 155, 156, 162, 163, 166, 167, 172, 173, 195, 214, 219, 220, 221, 234, 236, 237], "sdt": [41, 156, 167, 208, 209, 216, 219], "qbi": [41, 138, 156, 228, 234], "60": [22, 29, 30, 34, 37, 41, 47, 50, 52, 61, 71, 72, 73, 74, 76, 78, 79, 80, 82, 84, 86, 88, 90, 115, 118, 121, 124, 126, 138, 156, 162, 167, 215, 236, 237], "64": [22, 33, 37, 41, 48, 49, 50, 53, 67, 71, 76, 79, 80, 82, 88, 89, 95, 99, 108, 109, 111, 118, 130, 142, 156, 162, 166, 167, 169, 209, 210, 217, 236, 237, 241], "1000mm": [41, 156], "dsi": [41, 65, 72, 78, 90, 92, 114, 116, 138, 154, 156, 162, 174, 208, 210, 215, 216, 217, 228, 236, 237], "515": [41, 53, 71, 76, 83, 156, 162, 217], "encod": [41, 69, 82, 84, 85, 154, 156, 159, 161, 162, 165, 166, 167, 230], "12": [1, 22, 27, 29, 37, 41, 48, 50, 52, 56, 66, 71, 76, 77, 79, 80, 82, 83, 84, 86, 94, 96, 99, 101, 102, 103, 105, 108, 109, 111, 126, 152, 154, 155, 156, 159, 161, 167, 168, 171, 173, 209, 211, 213, 214, 215, 216, 217, 218, 221, 226, 228, 241], "subsequ": [41, 87, 156, 163, 168], "studi": [1, 41, 70, 71, 76, 80, 83, 91, 156, 161, 162, 167, 221, 236, 237], "half": [41, 66, 84, 156, 161, 167, 171], "mm2": [41, 156], "wedeen": [1, 41, 72, 156, 167], "2013": [41, 49, 50, 52, 59, 70, 71, 79, 80, 86, 89, 91, 154, 155, 156, 162, 163, 167, 173, 182, 215, 216, 217, 220, 236, 237, 241], "dsid": [41, 74, 115, 156], "203": [41, 72, 73, 76, 78, 79, 80, 90, 156, 162, 216, 236, 237], "radiu": [41, 47, 49, 102, 106, 147, 156, 159, 161, 163, 164, 167, 168, 169, 171, 173, 176, 182, 183, 185, 199, 224, 225, 230, 235], "4000mm": [41, 156], "rodriguez": [41, 74, 86, 115, 156, 167, 215], "benefit": [4, 41, 48, 86, 156], "23": [22, 30, 33, 34, 37, 41, 50, 62, 63, 70, 71, 76, 79, 80, 82, 83, 100, 141, 151, 155, 156, 159, 167, 215, 216, 227], "4000": [41, 79, 156, 236, 237], "258": [41, 76, 79, 80, 156], "yeh": [1, 41, 78, 105, 120, 121, 143, 144, 156, 167, 168, 170, 173, 179, 200, 232, 236, 237], "At": [5, 19, 41, 66, 81, 101, 156, 159, 161], "opdt": [41, 156], "tuch": [41, 72, 156, 167], "2007": [41, 68, 73, 79, 81, 82, 86, 90, 156, 163, 164, 167, 169, 173, 189, 221, 234], "tristan": [41, 156, 167], "vega": [41, 156, 167], "shore": [41, 65, 92, 156, 174, 213, 216, 217, 220, 225, 228], "514": [22, 41, 74, 79, 82, 115, 156, 217], "five": [41, 156, 166, 167], "lattic": [41, 102, 156, 159, 172], "unit": [4, 20, 41, 75, 79, 83, 126, 140, 151, 156, 161, 162, 163, 167, 169, 171, 172, 173, 181, 182, 189, 191, 196, 230, 231, 232, 234], "merlet": [20, 41, 89, 156, 167, 216], "\u00f6zarslan": [41, 89, 156], "six": [41, 75, 89, 151, 156, 159, 167, 216, 219], "5000": [41, 53, 76, 79, 82, 88, 118, 156, 161, 167], "6000": [41, 156], "19": [1, 22, 27, 29, 30, 31, 33, 34, 37, 41, 50, 71, 76, 79, 80, 82, 87, 90, 101, 105, 106, 120, 142, 154, 156, 167, 171, 208, 215, 217, 223], "56": [22, 30, 33, 34, 37, 41, 50, 55, 71, 76, 77, 79, 80, 82, 99, 113, 131, 150, 156, 167, 169, 215], "87": [22, 29, 30, 34, 37, 41, 50, 71, 75, 76, 79, 80, 82, 91, 99, 156, 171, 215, 227], "170": [41, 76, 79, 80, 83, 156, 216, 236, 237], "olson": [41, 156], "ozarslan": [41, 56, 80, 85, 156, 163, 167], "mapl": [41, 80, 154, 156, 167, 211, 212], "wu": [41, 73, 90, 113, 156, 167], "minn": [41, 156], "hcp": [41, 52, 64, 80, 154, 156, 162, 167, 208, 213, 217, 225, 226, 236, 237], "sm": [41, 156], "mt": [41, 83, 156, 161, 162], "jeurissen": [41, 48, 68, 70, 81, 86, 148, 156, 167], "forecast": [41, 65, 92, 154, 156, 174, 212, 213], "alexand": [20, 41, 76, 77, 82, 156, 162, 167], "1480": [41, 76, 79, 156, 212], "36": [22, 30, 33, 34, 37, 41, 50, 71, 73, 76, 77, 79, 80, 82, 84, 90, 99, 156, 159, 161, 167, 215], "anderson": [41, 76, 156, 166, 167], "256": [41, 76, 79, 80, 111, 142, 154, 156, 159, 161, 166, 168, 173, 176, 217, 221], "qti": [41, 65, 69, 92, 154, 156, 172, 174, 226], "216": [41, 76, 79, 80, 156, 216], "250": [41, 76, 79, 80, 133, 151, 156, 159, 167, 173], "200mm": [41, 156], "four": [41, 82, 83, 89, 117, 153, 156, 159, 161, 163, 166, 167], "stick": [41, 82, 118, 156, 167, 169], "prolat": [41, 68, 87, 156, 167, 169, 215], "plane": [41, 80, 83, 117, 130, 133, 140, 151, 156, 161, 167, 171, 219, 230, 235], "120": [41, 48, 70, 76, 79, 80, 93, 94, 130, 148, 156, 159, 215, 236, 237], "morez": [41, 156], "2023": [41, 76, 97, 141, 145, 156, 159, 173, 180, 220, 226, 227], "217": [41, 79, 80, 85, 156, 162, 216], "herberthson": [41, 85, 156, 167], "jone": [41, 53, 59, 91, 156, 161, 167, 173, 190, 191], "1999": [41, 53, 75, 79, 156, 171, 213, 220], "behren": [41, 156, 167, 169], "2003": [41, 76, 79, 93, 94, 156, 159, 220], "qtau": [41, 83, 154, 156, 213], "dmri": [18, 41, 55, 57, 61, 65, 71, 75, 91, 92, 138, 150, 154, 155, 156, 162, 163, 167, 213, 236, 237], "vari": [41, 50, 56, 79, 83, 156, 163, 167], "strength": [41, 75, 83, 138, 151, 156, 159, 161, 162, 167, 169, 173, 180, 236, 237], "dellacqua2014": [41, 81, 156], "smt": [41, 76, 82, 156, 167], "smt2": [41, 154, 156, 167, 222], "72": [22, 29, 34, 37, 41, 50, 58, 70, 71, 75, 76, 77, 79, 80, 81, 82, 142, 154, 156, 159, 168, 215, 225, 236, 237], "\u03bcm2": [41, 156], "\u03bcm": [41, 156], "24": [22, 29, 30, 33, 37, 41, 50, 57, 59, 71, 76, 77, 79, 80, 82, 108, 155, 156, 159, 161, 167, 168, 211, 212, 213, 215, 217], "rapid": [41, 140, 156], "kurtosi": [1, 41, 48, 50, 65, 69, 71, 81, 92, 117, 141, 142, 149, 154, 156, 167, 169, 173, 190, 208, 209, 222, 236, 237], "netohe2019": [41, 82, 156], "kaden2016b": [41, 82, 156], "spectrum": [41, 65, 74, 92, 115, 157, 167], "v": [1, 2, 4, 16, 41, 48, 64, 65, 70, 71, 79, 82, 84, 92, 114, 116, 143, 159, 161, 162, 163, 164, 166, 167, 168, 171, 172, 173, 186, 210, 211, 219, 221, 230, 231, 236, 237, 241], "fold": [26, 41, 65, 92, 167], "comparison": [26, 41, 47, 56, 59, 65, 71, 77, 82, 83, 85, 91, 92, 96, 117, 149, 159, 167, 173, 191, 202, 210, 221, 236, 237], "restor": [19, 41, 65, 86, 92, 147, 154, 156, 167, 173, 190, 191, 208, 210, 216, 217, 225], "sphx_glr_auto_examples_reconstruction_histology_resdnn": [], "histolog": [41, 65, 166], "resdnn": [41, 65, 154, 162, 166, 225], "free": [1, 2, 41, 65, 66, 75, 83, 85, 92, 93, 94, 117, 138, 148, 150, 151, 154, 159, 162, 167, 210, 212, 219, 222, 226, 242], "elimin": [1, 41, 65, 92, 167, 210, 219, 222], "contamin": [41, 65, 92, 167], "intravoxel": [41, 65, 92, 149, 167, 173, 192], "msdki": [41, 48, 65, 70, 92, 174], "qt": [41, 65, 92, 162, 167, 236, 237], "buan": [41, 97, 123, 125, 149, 154, 159, 172, 173, 195, 221, 222, 223], "score": [41, 66, 122, 123, 125, 143, 168, 171, 213], "creation": [41, 110, 123, 125, 141, 166, 168, 173, 208, 213, 215], "afq": [41, 123, 125, 219, 224], "outlier": [41, 70, 91, 105, 123, 125, 159, 167, 173, 190, 191, 213], "cluster": [1, 2, 41, 95, 96, 105, 107, 112, 119, 121, 123, 125, 142, 144, 154, 159, 161, 162, 167, 171, 173, 174, 195, 197, 200, 202, 208, 210, 221, 227, 228, 236, 237], "confid": [41, 123, 125, 161, 171], "index": [19, 41, 72, 80, 83, 91, 123, 125, 159, 161, 163, 167, 168, 169, 171, 172, 210, 215, 216, 219, 225, 226], "groupwis": [41, 98, 100, 154, 159, 226], "diffeomorph": [41, 98, 100, 101, 149, 154, 159, 172, 173, 176, 177, 214, 217, 222, 226], "binari": [17, 41, 46, 83, 98, 100, 102, 104, 127, 153, 159, 161, 165, 166, 167, 168, 171, 172, 173, 195, 198, 199, 205, 206, 210, 213, 219, 225, 241], "fuzzi": [41, 98, 100, 213], "nonrigid": [41, 98, 100, 149, 173, 180], "bundlewarp": [41, 98, 100, 141, 149, 172, 173, 174, 180, 227], "deform": [41, 93, 94, 97, 98, 99, 100, 102, 149, 159, 171, 172, 173, 176, 180, 212, 220, 221], "quickbundl": [1, 41, 95, 105, 107, 108, 109, 112, 119, 154, 159, 171, 174, 208, 209, 211, 212, 215, 216, 228], "classif": [41, 50, 81, 107, 112, 147, 154, 162, 168, 210, 221], "search": [41, 59, 105, 107, 112, 141, 163, 167, 168, 171, 173, 200, 225, 226, 227, 241], "automat": [2, 14, 41, 44, 46, 50, 87, 91, 104, 107, 111, 112, 147, 154, 159, 163, 166, 167, 168, 173, 182, 189, 208, 210, 211, 212, 213, 214, 219, 220, 221, 223, 224, 225, 226, 227, 241], "advanc": [13, 41, 48, 50, 52, 70, 82, 93, 94, 101, 102, 103, 128, 129, 134, 137, 141, 142, 152, 159, 163, 165, 167, 168, 173, 185, 194, 211, 236, 237], "auto_examples_python": [], "zip": [19, 41, 83, 108, 109, 110, 111], "auto_examples_jupyt": [], "mrm": [43, 48, 50, 52, 67, 69, 70, 72, 77, 82, 91, 142, 148, 161, 162, 163, 167, 169, 173, 182, 183, 190, 191, 194], "maskdata": [43, 44, 48, 50, 67, 70, 71, 75, 82], "numpass": [43, 44, 46, 48, 50, 67, 70, 71, 75, 81, 82, 86, 101, 102, 103, 104, 142, 168, 173, 199], "autocrop": [43, 44, 46, 48, 50, 67, 70, 71, 75, 82, 104, 168, 173, 199], "dilat": [43, 44, 48, 50, 67, 70, 71, 75, 82, 127, 168, 173, 199], "instanti": [43, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 89, 90, 93, 102, 161, 167, 169, 173], "csamodel": [43, 67, 127], "mainli": [43, 59, 67, 68, 109, 151, 161, 166], "start_tim": [43, 44], "processor": [43, 171], "system": [2, 43, 44, 52, 53, 86, 122, 124, 126, 127, 130, 141, 142, 154, 159, 161, 162, 163, 164, 165, 167, 171, 172, 173, 185, 216, 221, 235], "sens": [43, 56, 80, 83, 86, 89, 99, 124, 163, 167, 171, 173, 229, 231], "resourc": [11, 13, 17, 43, 76, 159, 162, 166, 212], "csapeaks_parallel": 43, "return_odf": [43, 44, 67, 78, 164], "normalize_peak": [43, 44, 67, 78, 86, 164, 167], "npeak": [43, 44, 86, 164, 173, 219], "time_parallel": [43, 44], "ran": [43, 44], "str": [43, 44, 113, 133, 142, 159, 161, 162, 163, 165, 166, 167, 168, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "114": [43, 44, 71, 73, 76, 79, 80, 215], "333221912": 43, "don": [5, 7, 8, 15, 20, 43, 59, 81, 83, 93, 110, 127, 130, 133, 143, 159, 161, 168, 171, 173, 200, 201, 210, 212, 215, 217, 218, 219, 226, 241], "csapeak": [43, 67, 127], "time_singl": [43, 44], "196": [43, 76, 79, 80, 216], "872478008": 43, "speedup": [43, 44, 110, 154, 168], "factor": [43, 44, 81, 86, 89, 93, 94, 101, 113, 127, 159, 161, 163, 167, 173, 175, 176, 182, 193, 222, 230, 234], "72191839533": 43, "runtim": [43, 44, 70, 80, 208, 210, 217], "frozen": [43, 44, 217], "main": [1, 2, 14, 15, 16, 18, 19, 43, 44, 49, 50, 51, 69, 78, 80, 82, 83, 159, 164, 167, 171, 173, 225], "__name__": [43, 44, 134, 137], "__main__": [43, 44, 134, 137], "freeze_support": [43, 44], "reconst_csa_parallel": [43, 45], "sphx_glr_examples_built_reconstruction_reconst_csd": [], "37": [22, 29, 37, 44, 50, 58, 59, 71, 76, 79, 80, 82, 215], "readi": [5, 12, 19, 44, 68, 76, 102, 110, 134, 137, 162, 209, 241], "cpu": [44, 148, 171, 216], "durat": [44, 75, 83, 138, 151, 161], "csd_peaks_parallel": 44, "425682068": 44, "csd_peak": [44, 68], "242": [44, 76, 79, 80, 216, 226], "772505999": 44, "reconst_csd_parallel": [44, 45], "b0": [46, 48, 50, 52, 53, 59, 64, 68, 73, 82, 86, 93, 94, 101, 102, 103, 104, 118, 141, 142, 151, 154, 159, 161, 162, 163, 166, 167, 169, 173, 181, 182, 185, 188, 189, 190, 191, 192, 193, 196, 208, 209, 213, 217, 236, 237], "save_nifti": [46, 47, 51, 52, 55, 56, 57, 59, 61, 64, 75, 101, 104, 124, 127, 174, 239], "scil_b0": [46, 104, 236, 237], "compani": [46, 104], "come": [2, 5, 12, 15, 46, 56, 86, 104, 155, 166, 167, 173, 215], "tesla": [46, 104, 162], "siemen": [46, 47, 56, 86, 104, 138, 162, 163, 167, 168, 173, 236, 237], "data_fnam": [46, 104], "squeez": [46, 64, 93, 94, 103, 104, 167, 171, 218], "fine": [46, 94, 99, 104], "tune": [46, 104], "num_pass": [46, 104], "yield": [46, 56, 104, 159, 164], "incorrect": [46, 104, 210, 223], "veri": [3, 4, 8, 46, 52, 56, 57, 59, 61, 70, 75, 79, 80, 87, 91, 93, 96, 97, 104, 118, 131, 134, 137, 138, 145, 151, 159, 161, 165, 167, 171, 173, 180, 234], "easi": [12, 46, 75, 104, 127, 130, 131, 133, 138, 139, 141, 225, 235, 241], "float32": [46, 75, 99, 102, 104, 111, 124, 164, 165, 168, 171, 224], "fname": [46, 96, 97, 101, 104, 108, 109, 110, 111, 121, 159, 161, 162, 165, 168, 172, 173], "se_1": [46, 104], "5t": [46, 47, 104, 162, 168], "_binary_mask": [46, 104], "astyp": [46, 47, 51, 56, 59, 64, 73, 75, 79, 94, 99, 104, 124, 127, 167, 171], "_mask": [46, 104], "quick": [15, 46, 75, 79, 104, 167, 171, 239], "view": [46, 104, 124, 131, 132, 161, 167, 169, 172, 208, 209, 219], "middl": [46, 47, 48, 49, 50, 52, 61, 74, 83, 93, 103, 104, 108, 115, 126, 133, 162, 168, 171, 172], "histeq": [46, 104, 174], "crop": [46, 75, 104, 173, 174, 199], "largest": [46, 104, 159, 164, 167, 173], "significantli": [46, 69, 104, 119, 171], "smaller": [46, 47, 68, 79, 80, 83, 85, 104, 105, 117, 120, 138, 159, 161, 163, 167, 168, 171, 172, 173, 182, 195], "auto": [46, 81, 104, 105, 161, 166, 173, 199, 210, 217, 219, 221, 227], "activ": [12, 46, 104, 166, 172, 173, 195, 241], "b0_mask_crop": [46, 104], "mask_crop": [46, 104], "_binary_mask_crop": [46, 104], "_mask_crop": [46, 104], "brain_extraction_dwi": [46, 58], "coupe11": [47, 51, 147, 163], "better": [5, 11, 15, 47, 48, 66, 69, 70, 71, 77, 83, 93, 154, 167, 210, 212, 218, 220, 221, 222, 225, 243], "degre": [47, 70, 74, 75, 82, 93, 115, 139, 151, 159, 161, 162, 163, 164, 167, 168, 169, 171, 234], "sharp": [47, 167], "easiest": [15, 19, 47, 241], "non_local_mean": [47, 51, 174, 219], "radii": [47, 68, 161, 167, 169, 171, 173, 189, 213, 221], "involv": [47, 49, 68, 70, 81, 147, 151, 152, 159, 173, 230], "wavelet": [47, 174], "decomposit": [47, 163, 167, 173, 182, 183, 225, 230, 231], "frequenc": [47, 48, 70], "noise_estim": [47, 51, 56, 91, 174], "estimate_sigma": [47, 51, 91, 174, 208, 217], "adaptive_soft_match": [47, 174, 227], "dwi_fnam": [47, 49, 50, 55, 56], "dwi_bval_fnam": [47, 49, 50, 55, 56], "dwi_bvec_fnam": [47, 49, 50, 55, 56], "sherbrooke_3shel": [47, 55, 56, 61, 146, 147, 150, 236, 237], "pre": [5, 19, 47, 52, 69, 70, 71, 77, 82, 96, 97, 103, 121, 159, 166, 167, 168, 173, 176, 210, 212, 213, 214, 221, 222], "sherbrook": [20, 47, 162, 236, 237], "coil": [47, 51, 56, 86, 163, 167, 173], "sigma": [47, 49, 50, 51, 56, 59, 70, 71, 91, 93, 94, 99, 101, 147, 159, 163, 167, 168, 169, 173, 175, 182, 183, 184, 190, 191, 210, 225], "sharper": [47, 74, 115, 167], "den_smal": 47, "patch_radiu": [47, 49, 50, 51, 81, 147, 163, 173, 182, 183, 184, 185, 221], "block_radiu": [47, 51, 163, 173, 184], "den_larg": 47, "varianc": [47, 49, 50, 69, 75, 80, 83, 147, 151, 159, 163, 167, 168, 171, 173, 190, 191, 217, 219, 224], "itself": [47, 69, 83, 85, 110, 143, 162, 166, 167, 168, 241], "den_fin": 47, "plot": [47, 48, 49, 50, 51, 66, 70, 71, 77, 79, 80, 82, 83, 85, 87, 97, 102, 103, 113, 117, 118, 119, 126, 143, 159, 167, 171, 173, 174, 210, 212, 215, 217, 219, 238], "axial_middl": [47, 51, 61], "final_output": 47, "ab": [47, 48, 51, 77, 94, 161, 167, 171, 215], "set_titl": [47, 48, 49, 50, 51, 52, 56, 69, 77, 79, 82, 83, 84, 86, 94, 99, 113], "denoised_ascm": 47, "bbox_inch": [47, 49, 51, 56, 59, 61, 72, 76, 94, 113], "tight": [47, 49, 51, 56, 59, 61, 72, 76, 94, 113], "realli": [19, 47, 72, 223], "dictat": [47, 85], "ascm_comparison": 47, "outperform": 47, "pierrick": [47, 51, 147, 163], "coup": [47, 49, 50, 51, 52, 147, 163, 168, 173, 182], "jose": [47, 51, 147, 161, 163], "manjon": [47, 49, 50, 51, 52, 147, 163, 173, 182], "montserrat": [47, 51, 147, 163], "robl": [47, 51, 147, 163], "loui": [47, 51, 147, 162, 163], "collin": [47, 49, 50, 51, 52, 147, 162, 163, 173, 182, 236, 237], "multiresolut": [47, 51, 147, 163], "iet": [47, 51, 147, 163], "institut": [20, 47, 51, 141, 147, 162, 163, 213], "engin": [47, 51, 70, 86, 141, 147, 163, 167], "technologi": [20, 47, 51, 147, 163, 167, 228], "00645538": 47, "denoise_ascm": [47, 58], "magnet": [48, 50, 51, 52, 53, 64, 67, 69, 70, 71, 72, 73, 76, 79, 81, 82, 86, 90, 138, 142, 147, 148, 151, 162, 163, 166, 167, 168, 169, 172, 173, 182, 183, 190, 191, 195, 232], "reson": [1, 48, 50, 51, 52, 53, 64, 67, 69, 70, 71, 72, 73, 76, 77, 79, 81, 82, 86, 89, 90, 142, 147, 148, 151, 163, 164, 166, 167, 168, 169, 172, 173, 182, 183, 190, 191, 194, 195, 234], "fourier": [48, 80, 148, 167, 230], "finit": [48, 83, 148, 159, 161, 171], "corrupt": [48, 70, 77, 80, 82, 91, 148, 163, 167, 171], "artefact": [48, 52, 70, 77, 82, 148, 150, 163, 167, 220], "manifest": [48, 148, 217], "intens": [48, 56, 117, 148, 159, 163, 166, 167, 168, 171, 172, 173, 185, 210], "adjac": [48, 86, 110, 148, 167, 168], "edg": [48, 70, 148, 161, 162, 163, 167, 171, 174, 215, 217, 241], "affect": [3, 5, 48, 50, 83, 148, 166], "context": [48, 110, 113, 124, 148, 166], "magnifi": [48, 148], "chapter": 48, "cite": [2, 48, 77, 142, 143, 144, 145, 162, 163], "gibbs_remov": [48, 174, 222, 227], "t1_denoised_fnam": 48, "ap_fnam": 48, "tissue_data": [48, 113, 148, 236, 237], "axial_slic": [48, 71, 82], "88": [22, 29, 30, 33, 37, 48, 50, 67, 71, 75, 76, 77, 79, 80, 82, 90, 95, 111, 127, 167, 215], "t1_slice": 48, "figsiz": [48, 50, 52, 69, 71, 73, 76, 77, 82, 83, 84, 86, 90, 99, 171], "wspace": [48, 50, 52, 77, 82], "vmin": [48, 50, 69, 70, 71, 77, 80, 82, 84, 90, 124, 172], "vmax": [48, 50, 69, 70, 71, 77, 80, 82, 84, 124, 172], "400": [48, 79, 80, 113, 142, 162, 167, 168, 173, 213, 236, 237], "due": [48, 49, 70, 77, 79, 82, 86, 91, 163, 216, 221, 222, 234, 241], "evid": [48, 69, 219], "artifici": [48, 91, 117], "c": [1, 4, 5, 6, 15, 19, 48, 51, 52, 56, 59, 64, 67, 68, 69, 71, 77, 78, 83, 84, 85, 86, 91, 94, 101, 102, 103, 113, 138, 142, 143, 144, 147, 152, 159, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 190, 191, 211, 214, 216, 217, 218, 219, 236, 237, 241], "fft": [48, 167, 222], "fft2": 48, "fftshift": 48, "c_crop": 48, "192": [48, 50, 70, 76, 79, 80, 81, 82, 162, 219], "t1_gibb": 48, "ifft2": 48, "t1_unr": 48, "inplac": [19, 48, 163, 222, 227, 241], "fig1": [48, 50, 52, 71, 77, 82], "subplot_kw": [48, 50, 52, 71, 77, 82], "annot": [19, 48], "ring": [48, 70, 148, 154, 163, 173, 194, 220, 224], "fontsiz": [48, 83], "xy": [48, 75, 151, 161, 219, 230, 231], "70": [22, 29, 30, 34, 37, 48, 50, 66, 71, 73, 76, 77, 79, 80, 82, 85, 90, 99, 111, 117, 151, 162, 166, 212, 215], "xycoord": 48, "xytext": 48, "textcoord": 48, "offset": [48, 97, 101, 159, 161, 167, 169, 171, 172], "arrowprop": 48, "arrowstyl": 48, "75": [22, 29, 30, 34, 37, 48, 50, 71, 76, 77, 79, 80, 82, 111, 130, 133, 154, 161, 171, 215, 226], "gibbs_suppression_structur": 48, "uncorrect": 48, "panel": [48, 49, 50, 70, 71, 77, 82, 130, 133, 174], "characterist": [48, 59, 145, 161, 171], "appreci": [48, 50], "arrow": 48, "artefactu": [48, 70], "compromis": [48, 50], "contrast": [48, 70, 71, 73, 75, 79, 80, 81, 82, 101, 126, 142, 147, 162, 167, 236, 237], "grei": [48, 81, 83, 86, 127, 153, 167, 173, 206], "highlight": [48, 143, 173, 195, 213, 217, 222], "kindli": [48, 50, 70, 71, 81, 82, 142, 235], "suppli": [48, 162, 171], "romain": 48, "valabr\u00e8gu": 48, "cenir": [48, 162, 208, 209, 212, 225, 236, 237], "icm": [48, 113, 168], "pari": 48, "read_cenir_multib": [48, 174], "asarrai": [48, 76, 77, 101, 108, 171], "data_slic": [48, 79], "data_correct": [48, 55], "slice_axi": [48, 163, 173, 194], "dimension": [1, 48, 49, 80, 83, 89, 110, 140, 147, 159, 161, 166, 167, 168, 169, 171, 173, 191, 208, 210, 217], "axi": [4, 48, 50, 52, 53, 59, 64, 72, 73, 77, 78, 80, 83, 89, 90, 94, 99, 101, 113, 117, 118, 139, 140, 151, 159, 161, 163, 165, 167, 168, 169, 171, 172, 173, 194, 199, 213, 215, 219, 222, 230, 235], "fig2": [48, 50, 82], "10000": [48, 55, 79, 93, 94, 159, 167, 172, 173, 214, 219], "gibbs_suppression_b0": 48, "hard": [5, 48, 70, 167, 222], "sphx_glr_examples_built_reconstruction_reconst_msdki": [], "unnecessari": [48, 69, 70, 77, 82, 161, 166, 210, 213, 225, 226], "dki_model": [48, 82], "meandiffusionkurtosismodel": [48, 82, 174], "dki_fit": [48, 82], "mskini": 48, "msk": [48, 82, 167, 174], "mskgib": 48, "fig3": [48, 50, 82], "59": [22, 33, 37, 48, 50, 71, 75, 76, 77, 79, 80, 82, 86, 90, 215], "gibbs_suppression_msdki": 48, "black": [48, 84, 131, 172, 217, 221], "ventricl": [48, 77, 94], "seem": [48, 82, 167, 211, 212, 215, 217], "veraart": [48, 50, 52, 70, 148, 163, 167, 173, 182, 183], "jelescu": [48, 148], "knoll": [48, 52, 148], "novikov": [48, 50, 52, 71, 148, 163, 173, 182, 183], "magn": [48, 69, 77, 148, 163, 164, 167, 173, 174, 190, 191, 194, 234], "301": [48, 76, 79, 80, 87, 148, 167, 217], "314": [48, 79, 80, 148, 217], "1002": [48, 50, 52, 67, 69, 70, 76, 77, 82, 142, 148, 163, 164, 167, 171, 173, 182, 183, 194, 210], "25866": [48, 148], "perron": [48, 70, 148, 167], "aelterman": [48, 70, 148], "piz": [48, 70, 148], "urica": [48, 70, 148], "philip": [48, 70, 86, 148, 162, 163, 167, 168, 173, 236, 237], "leeman": [48, 68, 70, 86, 148, 161, 167], "artifact": [48, 70, 148, 159, 162, 163, 173], "441": [48, 51, 52, 70, 76, 79, 80, 147, 148, 163, 167], "455": [48, 70, 79, 80, 148, 217], "1016": [41, 48, 50, 69, 70, 76, 77, 84, 85, 86, 148, 156, 159, 161, 162, 163, 167, 173, 182, 183, 210, 236, 237], "06": [22, 24, 29, 30, 33, 34, 37, 48, 50, 70, 71, 76, 79, 80, 82, 148, 161, 167, 210, 211, 218, 220, 225], "068": [48, 70, 148], "kellner": [48, 163, 173, 194], "dhital": [48, 163, 173, 194], "kiselev": [48, 163, 173, 194], "reisert": [48, 163, 173, 194, 222], "subvoxel": [48, 163, 173, 194], "1574": [48, 76, 79, 213], "1581": [48, 79, 213], "26054": [48, 163, 173, 194], "neto": [1, 20, 48, 70, 82, 117, 151, 163, 167, 169, 173, 194, 208, 210, 211, 219, 220, 221, 222, 225], "healthi": [48, 50, 70, 76, 82, 85, 113, 143, 154, 162, 163, 167, 173, 194], "ag": [48, 50, 70, 77, 82, 162, 163, 167, 173, 194, 236, 237], "doctor": [48, 50, 70, 82, 163, 167, 173, 194], "17863": [48, 50, 70, 82, 163, 167, 173, 194], "cam": [48, 50, 70, 82, 163, 167, 173, 194], "29356": [48, 50, 70, 82, 163, 167, 173, 194], "retriev": [48, 126, 134, 159, 163, 167, 168, 171, 236], "digit": [48, 61, 130, 162, 171], "washington": [20, 48, 61, 130, 141, 162], "edu": [19, 48, 61, 130, 138, 162, 171], "researchwork": [48, 61, 130, 162], "1773": [48, 61, 76, 79, 130, 162], "33311": [48, 162], "denoise_gibb": [48, 58], "explor": [49, 70, 71, 81, 82, 117, 142, 147, 151, 167, 169, 171, 236, 237], "manjon2013": [49, 50, 52, 173, 182], "around": [49, 59, 68, 79, 139, 147, 161, 163, 167, 171, 172, 173, 182, 183, 185, 208, 217, 234], "eigenvalu": [49, 68, 75, 86, 87, 117, 118, 147, 159, 163, 167, 169, 171, 173, 182, 183, 190, 191, 213, 230], "sphx_glr_examples_built_preprocessing_denoise_mppca": [], "isbi2013_2shel": [49, 89, 236, 237], "koai": [49, 56, 77, 163, 167], "koay2006": 49, "correct_bia": [49, 163], "lowest": [49, 59, 143, 167, 171], "relationship": [49, 83, 127, 163, 167, 171, 173, 182, 230, 231], "tau_factor": [49, 163, 173, 182, 222], "accord": [49, 71, 79, 82, 108, 109, 110, 117, 151, 154, 159, 161, 162, 163, 167, 168, 169, 170, 171, 173, 201, 208, 209, 221], "denoised_arr": [49, 50, 52, 81, 163], "taken": [49, 50, 97, 117, 159, 161, 162, 163, 167, 171, 173, 182, 183, 185, 234], "slow": [49, 79, 108, 138, 151, 159, 213], "gra": [49, 50, 52], "orig": [49, 50, 52], "den": [49, 50, 51, 52], "rms_diff": [49, 50, 52], "denoised_localpca": 49, "jv": [49, 50, 52, 163, 173, 182], "concha": [49, 50, 52, 163, 173, 182], "buad": [49, 50, 52, 163, 173, 182], "dl": [49, 50, 52, 162, 163, 173, 182], "overcomplet": [49, 50, 52, 149, 163, 173, 182], "e73021": [49, 50, 52, 163, 173, 182], "0073021": [49, 50, 52, 163, 173, 182], "cg": [49, 131, 159, 161, 163], "pj": [49, 75, 151, 163], "2006": [49, 76, 79, 86, 91, 161, 163, 167, 173, 191, 220], "magnitud": [49, 86, 97, 159, 161, 163, 167, 171, 172], "jmr": [49, 56], "179": [49, 76, 79, 80, 163, 216], "317": [49, 79, 80, 163, 217], "322": [49, 79, 80, 211], "denoise_localpca": [49, 50, 58], "exploit": [50, 148], "across": [2, 50, 52, 56, 69, 75, 79, 82, 86, 105, 120, 121, 139, 149, 151, 161, 166, 167, 168, 170, 173, 213, 229, 230, 231], "veraart2016a": 50, "loss": [50, 52, 71, 87, 108, 161, 162, 166, 168, 173], "henri2018": 50, "behind": [2, 12, 50, 141, 147, 235, 241], "princip": [50, 75, 83, 117, 118, 147, 161, 163, 167, 169, 171, 173, 182, 183], "veraa2016a": [50, 52], "veraa2016b": 50, "mppca": [50, 81, 147, 154, 174, 220], "auxiliari": 50, "hansen": [50, 64, 70, 71, 81, 82, 142, 154, 166, 167, 236, 237], "jespersen": [50, 69, 70, 71, 81, 82, 142, 167, 236, 237], "hansen2016": [50, 70, 71, 81, 82, 142], "mbyte": [50, 70, 72, 75, 80, 81, 82, 91], "cfin_multib": [50, 70, 71, 80, 81, 82, 142, 147, 151, 236, 237], "simplic": [50, 81, 110], "sel_b": [50, 81], "logical_or": [50, 68, 81], "67": [1, 22, 29, 34, 37, 50, 68, 71, 76, 79, 80, 81, 82, 86, 217, 227], "mp": [50, 70, 81, 139, 154, 171, 224], "slide": [50, 159, 171], "compris": [50, 85, 171], "assess": [50, 70, 167, 172, 173, 175, 219], "hspace": [50, 52, 77, 82], "denoised_mppca": 50, "dkimodel": [50, 70, 71], "diffusionkurtosismodel": [50, 70, 71, 82, 174], "dki_orig": 50, "dki_den": 50, "md": [50, 68, 69, 70, 75, 76, 77, 81, 82, 84, 142, 143, 151, 161, 167, 169, 170, 171, 173, 174, 190, 191, 209, 210, 212, 220, 221], "mk": [50, 69, 70, 71, 82, 84, 167, 173, 174], "fa_orig": 50, "fa_den": 50, "md_orig": 50, "md_den": 50, "mk_orig": 50, "mk_den": 50, "03": [22, 29, 30, 33, 34, 37, 39, 50, 53, 71, 76, 77, 79, 80, 82, 100, 103, 105, 106, 112, 120, 129, 145, 161, 167, 208, 209, 214, 215, 216, 218, 219, 223, 224, 225, 226], "0e": [50, 86, 161, 167, 169], "denoised_dki": 50, "upper": [50, 66, 68, 70, 77, 79, 82, 99, 159, 161, 164, 165, 166, 167, 168, 173, 198, 210], "std": [50, 56, 59, 70, 83, 133, 159, 167, 172, 173, 176, 190, 191, 208, 217], "return_sigma": [50, 163, 173, 183], "pca_sigma": 50, "level": [18, 50, 55, 79, 83, 84, 85, 93, 94, 95, 99, 101, 102, 103, 138, 143, 145, 151, 159, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 176, 209, 215, 219, 220], "mean_sigma": 50, "nomin": [50, 161], "theori": [50, 52, 73, 90, 141, 161, 163, 167, 168, 173, 182, 183, 226], "26059": [50, 52, 163, 173, 182, 183], "christiaen": [50, 163, 173, 182, 183], "aron": [50, 163, 173, 182, 183], "sijber": [50, 70, 163, 167, 173, 182, 183], "142": [50, 76, 80, 111, 142, 163, 168, 173, 182, 183, 215], "394": [50, 76, 80, 163, 173, 182, 183, 210], "406": [50, 76, 79, 80, 91, 163, 173, 182, 183, 217], "08": [22, 29, 30, 33, 34, 37, 50, 58, 68, 71, 76, 79, 80, 82, 86, 100, 163, 167, 173, 182, 183, 219, 220, 221], "016": [50, 163, 173, 182, 183], "denoise_mppca": [50, 58], "coupe08": [51, 52, 147, 163], "boost": [51, 229], "decid": [51, 55, 80, 105, 130, 168], "3t": [51, 69, 162, 167, 168], "ge": [51, 56, 86, 162, 163, 167, 168, 173, 236, 237], "sphx_glr_examples_built_preprocessing_denoise_ascm": [], "yger": [51, 52, 147, 163], "prima": [51, 52, 147, 163, 173], "hellier": [51, 52, 147, 163], "kervrann": [51, 52, 147, 163], "barillot": [51, 52, 147, 163, 173, 184], "blockwis": [51, 52, 147, 163], "transact": [51, 52, 73, 78, 86, 90, 93, 94, 113, 147, 159, 163, 167, 236, 237], "medic": [20, 51, 52, 59, 73, 78, 86, 89, 90, 93, 94, 97, 113, 141, 142, 147, 154, 159, 162, 163, 167, 168, 172, 173, 195, 196, 210, 211, 213, 234, 236, 237], "27": [19, 22, 29, 37, 50, 51, 52, 59, 71, 72, 73, 76, 77, 79, 80, 82, 90, 147, 162, 163, 167, 211, 215, 221, 236, 237], "425": [51, 52, 79, 80, 147, 163, 217], "denoise_nlmean": [51, 58], "fadnavis20": [52, 163, 173, 185], "rank": [52, 84, 147, 159, 167, 219, 230, 231], "oversampl": [52, 147], "explicit": [52, 159, 215], "classic": [52, 59, 102, 138, 230, 231, 232], "knoll11": 52, "etc": [2, 3, 52, 91, 130, 138, 147, 157, 159, 161, 166, 167, 169, 171, 173, 201, 215, 218], "certain": [2, 52, 59, 70, 91, 167, 171], "assumpt": [52, 56, 79, 80, 83, 96, 167, 222], "fact": [3, 52, 140, 151], "fluctuat": 52, "bodi": [2, 41, 52, 152, 171, 173, 175], "regressor": [52, 161], "phase": [52, 86, 163, 166, 167, 168], "train": [52, 64, 166], "rest": [5, 14, 20, 52, 80, 81, 159, 171], "mathcal": [52, 167, 168], "phi_": [52, 167], "ight": [52, 69, 84, 85, 167], "y_": [52, 234], "fed": [52, 173], "phi": [52, 53, 79, 82, 88, 117, 118, 159, 161, 162, 163, 167, 174, 215, 234, 235], "built": [19, 52, 69, 86, 93, 159, 165, 166, 171], "held": [52, 66], "mere": [52, 142], "nor": [52, 161, 168], "kind": [3, 52, 66, 83, 91, 127, 159, 167, 171, 217], "loadtxt": [52, 74, 115, 162, 212], "shift_intens": [52, 163, 173, 185], "clip_negative_v": [52, 163, 173, 185], "ordinari": [52, 70, 167, 173, 190, 191], "regress": [52, 64, 163, 167, 173, 185, 209], "littl": [5, 12, 52, 222], "slower": [52, 85, 152, 161, 171, 173], "switch": [15, 52, 102, 159, 167, 171, 210, 213, 214, 217, 226], "hamper": 52, "exhibit": [52, 59, 70], "attenu": [52, 59, 117, 167, 169, 213], "skip": [52, 159, 161, 162, 163, 164, 167, 169, 173, 185, 210, 215, 217, 219, 226, 241], "b0_denois": [52, 163, 173, 185], "greater": [2, 52, 79, 105, 138, 151, 159, 161, 164, 168, 171, 172, 173, 195, 200, 202], "higher": [52, 68, 70, 74, 77, 80, 87, 97, 115, 121, 133, 138, 145, 159, 161, 167, 168, 171, 173, 199, 238], "accordingli": [52, 105, 142, 159, 168, 171], "pick": [5, 19, 52, 133, 211, 241], "denoised_patch2self": 52, "inspect": [52, 64, 102, 134, 137, 173, 212], "underli": [52, 59, 68, 69, 83, 122, 127, 151, 163, 167, 173, 185, 217, 243], "got": [5, 14, 52], "rid": 52, "lastli": [52, 134, 137], "batch": [52, 166], "300": [52, 53, 74, 76, 79, 80, 82, 88, 115, 118, 130, 162, 172, 217, 236, 237], "split": [52, 151, 159, 163, 164, 166, 167, 171, 173, 174, 192, 194, 201, 204, 210, 219], "denoised_batch1": 52, "denoised_batch2": 52, "merg": [9, 12, 14, 16, 19, 52, 141, 154, 168, 171, 173, 210, 212, 213, 216, 217, 219, 227], "denoised_p2": 52, "concaten": [52, 74, 115, 117, 168, 169, 173], "batson": [52, 163, 173, 185], "neural": [52, 64, 69, 154, 163, 166, 167, 173, 185], "bredi": 52, "pock": 52, "stollberg": 52, "tgv": 52, "pp": [52, 68, 81, 167, 169, 236, 237], "480": [52, 76, 79, 217], "491": [52, 79, 83, 162, 217, 221], "denoise_patch2self": [52, 58], "usual": [2, 5, 53, 57, 61, 94, 133, 134, 137, 167, 168, 171, 241], "saw": [53, 141], "sphx_glr_examples_built_quick_start_quick_start": [], "disk": [19, 53, 61, 130, 138, 161, 162, 165, 170, 172, 173, 178, 179, 225], "sai": [5, 14, 19, 53, 59, 83, 96, 144, 145, 159, 161, 166, 167, 171, 216, 230, 231, 241], "physicist": 53, "scientist": [18, 53, 155], "who": [4, 14, 15, 18, 19, 53, 61, 159, 161, 167], "specif": [2, 8, 53, 61, 69, 72, 76, 78, 80, 81, 82, 83, 86, 95, 108, 117, 118, 126, 130, 134, 137, 138, 142, 146, 147, 149, 161, 162, 165, 166, 167, 168, 171, 172, 211, 213, 214, 215, 225, 228, 238, 241], "disperse_charg": [53, 82, 88, 118, 174, 210, 216, 220], "jones1999": 53, "polar": [53, 88, 117, 118, 161, 167, 169, 235], "n_pt": [53, 82, 88, 118, 126], "theta": [53, 82, 88, 94, 117, 118, 140, 159, 161, 162, 163, 164, 167, 171, 215, 234, 235], "pi": [53, 82, 83, 88, 110, 118, 126, 138, 139, 161, 164, 167, 168, 169, 171, 230, 232, 234], "rand": [53, 82, 88, 118, 120, 131, 161, 171, 172], "hsph_initi": [53, 82, 88, 118], "potenti": [53, 70, 82, 86, 88, 118, 122, 161, 163, 167, 211, 213], "energi": [53, 79, 88, 118, 151, 159, 167, 168, 173, 176], "minim": [53, 80, 88, 96, 99, 118, 159, 161, 166, 167, 213, 225], "hsph_updat": [53, 82, 88, 118], "nice": [4, 12, 15, 53, 64, 88, 169, 173], "setbackground": [53, 88, 96, 105, 106, 108, 109, 110, 111, 120, 121, 126], "point_radiu": [53, 108], "initial_vs_upd": 53, "becom": [53, 83, 96, 126, 133, 139, 161, 167, 171], "sph": [53, 216, 221], "full_spher": 53, "fill": [53, 159, 161, 167, 169, 171, 173, 201, 208, 230, 231], "stack": [53, 94, 118, 221], "discuss": [4, 53, 69, 101, 118, 161, 167, 171, 235], "hstack": [53, 82, 118], "insert": [5, 53, 118, 131, 168, 174], "80451777": 53, "16877559": 53, "56944355": 53, "32822557": 53, "94355999": 53, "04430036": 53, "23584135": 53, "96241331": 53, "13468285": 53, "39207424": 53, "73505312": 53, "55314981": 53, "32539386": 53, "16751384": 53, "93062235": 53, "82043195": 53, "39411534": 53, "41420347": 53, "65741493": 53, "74947875": 53, "07802061": 53, "88853765": 53, "45303621": 53, "07251925": 53, "39638642": 53, "15185138": 53, "90543855": 53, "10175269": 53, "08197111": 53, "99142681": 53, "50577702": 53, "37862345": 53, "77513476": 53, "42845026": 53, "40155296": 53, "80943535": 53, "26939707": 53, "81103868": 53, "51927014": 53, "48938584": 53, "43780086": 53, "75420946": 53, "gradientt": [2, 53, 61, 67, 69, 70, 72, 73, 75, 78, 79, 80, 82, 89, 90, 117, 118, 159, 162, 166, 167, 169, 171, 174, 209, 210, 215, 217, 221, 224], "cyan": 53, "colors_b1000": 53, "colors_b2500": 53, "ascontiguousarrai": [53, 126], "dk": [53, 91, 167, 173, 190, 191], "strategi": [19, 53, 59, 68, 70, 71, 80, 81, 82, 86, 91, 93, 94, 101, 119, 134, 137, 142, 159, 167, 173, 205, 236, 237], "anisotrop": [53, 68, 72, 75, 78, 80, 81, 124, 138, 154, 159, 162, 167, 221, 228], "525": [53, 79, 82, 217], "gradients_spher": [53, 58, 212], "inevit": [55, 150], "misalign": [55, 94, 150, 159], "issu": [1, 5, 19, 55, 70, 77, 82, 121, 130, 141, 150, 154, 161, 163, 167, 171, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 236, 237], "jenkinsonsmith01": [55, 150], "preprocess": [55, 76, 110, 150, 162], "essenti": [2, 55, 80, 94, 231], "motion_correct": [55, 58, 174], "193": [55, 61, 76, 79, 80, 236, 237], "bvals_smal": 55, "bvecs_smal": 55, "reg_affin": [55, 93, 94], "jenkinson": [55, 150], "2001": [55, 79, 105, 113, 150, 168, 221], "optimis": [55, 150, 164, 217], "anal": [55, 150, 159], "143": [55, 76, 79, 80, 111, 150, 167, 215], "often": [5, 19, 56, 57, 75, 86, 91, 124, 126, 127, 140, 161, 167], "identif": [1, 56, 163], "koay2009": 56, "detect": [14, 56, 86, 91, 159, 161, 167, 171, 241], "channel": [56, 102, 103, 159, 161, 165, 166, 167, 168, 172, 229], "grappa": [56, 163], "intuit": [56, 83, 122, 140, 173], "fourth": [56, 70, 79, 84, 85, 161, 167, 169], "quit": [5, 56, 80, 126, 167], "central": [56, 73, 90, 159, 161, 170, 171], "tim": 56, "trio": [56, 162, 230, 231, 236, 237], "receiv": [56, 102, 159, 163, 167], "distinct": 56, "had": [5, 56, 61, 171], "even": [5, 15, 56, 72, 82, 85, 93, 99, 108, 110, 147, 159, 161, 163, 164, 167, 168, 171, 173, 193, 234, 241], "return_mask": [56, 163], "axial_piesno": 56, "mask_piesno": 56, "uint8": [56, 59, 64, 75, 127, 165], "sphx_glr_examples_built_preprocessing_snr_in_cc": [], "pierpaoli": [56, 75, 91, 163, 167, 173, 190, 191], "199": [5, 56, 76, 79, 80, 163, 216], "94": [22, 33, 34, 37, 50, 56, 71, 76, 79, 80, 82, 99, 154, 163, 169, 208, 215, 221], "103": [56, 76, 77, 79, 80, 81, 154, 163, 167, 173, 191, 214, 215], "especi": [57, 171], "facilit": [57, 165, 166], "principl": [2, 57, 167, 169, 171], "fimg": [57, 117, 162, 169], "aniso_vox": [57, 159, 162], "58": [22, 29, 30, 33, 34, 37, 43, 50, 57, 59, 70, 71, 76, 79, 80, 82, 105, 112, 142, 151, 159, 163, 164, 167, 168, 169, 215, 234], "new_voxel_s": 57, "data2": [57, 101, 159, 168], "affine2": [57, 101, 159], "77": [21, 22, 29, 30, 34, 37, 50, 57, 71, 76, 77, 79, 80, 82, 111, 159, 161, 166, 215], "iso_vox": 57, "analyz": [57, 72, 84, 161, 167, 170, 171, 220, 242], "img3": 57, "spm2analyzeimag": 57, "realiz": [57, 159, 163], "problem": [5, 57, 79, 80, 81, 85, 91, 93, 96, 102, 126, 138, 152, 154, 159, 161, 167, 171, 209, 210, 212, 213, 217, 222, 225, 226], "reslice_dataset": [57, 58], "divid": [59, 66, 72, 73, 79, 83, 86, 96, 110, 120, 159, 161, 163, 167, 168, 170, 171, 173, 178, 179, 211, 212, 219], "worst": 59, "sever": [11, 15, 19, 59, 77, 80, 84, 85, 127, 153, 159, 171, 234], "cst": [59, 119, 120, 124, 130, 131, 162, 213, 224], "longitudin": [2, 59, 167], "fasciculu": [2, 59, 97, 105, 106, 130, 143, 144, 145, 162], "slf": [2, 59], "cfa": [59, 75, 168], "being": [2, 59, 83, 86, 138, 143, 153, 159, 161, 165, 167, 168, 170, 171, 172, 173, 177, 210, 211, 214, 219, 224, 228, 234, 241], "adopt": [2, 59], "recent": [10, 59, 83, 162, 163, 171, 210, 216, 226, 228, 241], "descoteaux2011": [59, 73, 90], "jones2013": 59, "explan": [2, 5, 6, 59, 159, 167, 213], "tenmodel": [59, 68, 70, 75, 217, 239], "tensorfit": [59, 75, 168, 174, 215], "just": [5, 6, 7, 8, 11, 14, 15, 16, 18, 19, 59, 61, 72, 73, 75, 78, 79, 80, 87, 90, 93, 97, 99, 101, 131, 134, 137, 138, 150, 159, 165, 166, 167, 171, 172, 173, 195, 208, 218, 219, 228, 241], "could": [59, 68, 70, 82, 83, 85, 99, 108, 110, 113, 124, 126, 159, 161, 163, 167, 169, 173, 180, 194, 199, 209, 219, 221], "unless": [2, 59, 108, 159, 161, 167, 169, 171, 226], "best": [15, 59, 68, 80, 138, 152, 159, 161, 164, 167, 171, 222], "segment_from_cfa": [59, 174], "bounding_box": [59, 167, 174, 221], "cc_box": 59, "zeros_lik": [59, 94, 171], "diff": [4, 5, 6, 12, 14, 59, 159], "bounds_min": 59, "bounds_max": 59, "mask_cc_part": 59, "return_cfa": [59, 168], "cfa_cc_part": 59, "255": [59, 75, 76, 79, 80, 127, 133, 165, 216], "titl": [5, 59, 73, 76, 83, 90, 106, 172, 173, 174, 208, 221], "cc_segment": 59, "catch": [59, 208, 211], "warn": [37, 59, 64, 70, 77, 79, 80, 97, 165, 166, 167, 174, 208, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 241], "manufactur": 59, "ndimag": [59, 64, 70, 71, 127, 161, 225], "binary_dil": [59, 127], "mask_nois": [59, 173], "noise_std": 59, "li": [59, 66, 151, 159, 168, 173], "null": [59, 161, 163, 173, 182, 225], "idx": [59, 86, 161, 163, 166, 171, 174], "inf": [59, 79, 119, 159, 166, 167, 168, 171, 173], "axis_x": 59, "argmin": [59, 85, 96, 171], "axis_i": 59, "axis_z": 59, "els": [5, 15, 59, 106, 130, 138, 159, 161, 163, 165, 167, 169, 171, 172], "98875": 59, "1177": [59, 76, 210], "09229": 59, "46995373635": 59, "126": [40, 59, 76, 79, 80, 99, 102, 111, 154, 215], "11825": 59, "039925": 59, "99218": 59, "9965694823": 59, "perpendicular": [59, 76, 80, 83, 86, 151, 161, 167, 169, 171, 173, 193, 208], "henc": [2, 59, 79, 152, 167, 168, 171, 231, 241], "le": [59, 79, 151, 161, 167, 171, 173, 192], "bihan": [59, 79, 151, 167, 173, 192], "mangin": 59, "poupon": 59, "603": [59, 71, 73, 79, 82, 90, 167, 218], "knosch": 59, "turner": 59, "count": [59, 64, 91, 126, 127, 167, 168, 171, 172, 216], "fallaci": 59, "73": [22, 29, 30, 33, 34, 37, 50, 59, 70, 71, 76, 79, 80, 82, 171, 215], "239": [59, 76, 79, 80, 216], "snr_in_cc": [58, 59, 213, 219], "publicli": [61, 162, 215], "haven": [19, 61, 126, 241], "With": [19, 61, 78, 80, 86, 95, 130, 159, 161, 167, 168, 171, 213, 228], "fetch_sherbrooke_3shel": [61, 174], "folder": [2, 41, 61, 93, 94, 119, 142, 143, 144, 146, 162, 173, 177, 179, 187, 209, 214, 219, 236], "home": [4, 8, 61, 162, 241, 243], "directori": [2, 4, 5, 7, 16, 19, 61, 134, 137, 143, 146, 147, 148, 150, 151, 152, 153, 162, 164, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 213, 215, 216, 223, 241], "expandus": [61, 133], "dname": 61, "fdwi": [61, 239], "hardi193": [61, 147, 150], "fbval": [61, 70, 71, 72, 73, 78, 79, 80, 81, 82, 84, 89, 90, 117, 159, 162, 165, 169, 239], "fbvec": [61, 70, 71, 72, 73, 78, 79, 80, 81, 82, 84, 89, 90, 117, 159, 162, 165, 169, 239], "usernam": [19, 61], "librari": [1, 61, 85, 91, 130, 138, 141, 142, 143, 144, 145, 154, 161, 167, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 212, 217, 226, 238, 241], "last": [5, 19, 61, 75, 79, 83, 91, 108, 111, 127, 133, 134, 138, 143, 151, 154, 159, 161, 162, 163, 165, 166, 167, 168, 171, 173, 191, 211, 214, 226, 241], "128": [47, 61, 79, 80, 111, 113, 131, 166, 215, 225], "get_zoom": [61, 101], "quickli": [61, 159, 167, 214], "info": [19, 61, 77, 95, 142, 161, 165, 166, 171, 173, 174, 208, 213, 214, 217, 222, 224], "000000": [40, 61, 73, 90], "3500": [37, 61, 76, 79, 236, 237], "964050": 61, "999992": 61, "999979": 61, "00504001": 61, "00402795": 61, "00398794": 61, "0257055": 61, "653861": 61, "756178": 61, "589518": 61, "769236": 61, "246462": 61, "235785": 61, "529095": 61, "815147": 61, "893578": 61, "263559": 61, "363394": 61, "79784": 61, "133726": 61, "587851": 61, "232937": 61, "931884": 61, "278087": 61, "93672": 61, "144139": 61, "31903": 61, "tell": [4, 15, 16, 61, 108, 110, 168, 170, 173], "fun": [61, 161], "hardi193_s0": 61, "sphx_glr_examples_built_reconstruction_reconst_dti": [], "quick_start": [61, 62, 213], "tracking_introduction_eudx": [62, 63], "driven": [64, 68, 86, 159, 167], "ground": [64, 74, 82, 85, 115, 172], "truth": [64, 74, 82, 85, 115, 172], "sequenti": [64, 86, 110, 168], "network": [5, 64, 76, 79, 101, 143, 144, 151, 154, 162, 166, 236, 237], "block": [2, 19, 64, 154, 163, 167, 173, 174, 182, 183, 184, 211, 214], "histologi": [64, 166], "squirrel": 64, "monkei": 64, "third": [64, 161, 163, 167, 171, 173, 194], "ndi": 64, "nn": [64, 154, 159, 167, 174, 225], "histo_resdnn": [64, 174], "historesdnn": [64, 174], "sh_to_sf_matrix": [64, 174], "onednn": 64, "tf_cpp_min_log_level": 64, "mean_b0": 64, "mask_label": 64, "return_count": 64, "val": [64, 86, 94, 167, 172, 209, 226, 236, 237], "argmax": 64, "appropri": [2, 64, 101, 102, 130, 133, 148, 159, 161, 162, 165, 172, 225, 236, 237], "resdnn_model": [64, 166], "verbos": [2, 64, 86, 95, 105, 159, 163, 165, 166, 167, 168, 171, 173, 185, 209, 217], "fetch_default_weight": [64, 166, 174], "predicted_sh": 64, "coron": [64, 113, 172, 219], "invb": [64, 164, 167], "basis_typ": [64, 163, 164, 166, 167], "0006": 64, "fod_spher": 64, "b_matrix": [64, 230, 231], "mean_sh": 64, "background_img": 64, "ori_shap": [64, 166], "slice_index": [64, 172], "display_ext": [64, 130], "camera": [64, 131], "zoom": [64, 101, 130, 133, 147, 148, 159, 165, 213], "screenshot": [64, 130, 133], "curvatur": [64, 164, 171, 225, 227], "popul": [64, 66, 68, 70, 75, 82, 86, 95, 105, 117, 120, 121, 144, 149, 151, 167, 168, 170, 173, 236, 237], "visibl": [64, 147, 212, 215, 219, 223], "zoom_factor": 64, "85": [22, 29, 30, 34, 37, 50, 64, 68, 70, 71, 75, 76, 79, 80, 82, 86, 87, 91, 95, 111, 117, 151, 161, 167, 169, 215, 222], "view_posit": 64, "view_cent": 64, "up_vector": 64, "pred_fodf": 64, "nath": [64, 162, 166], "schill": [64, 162, 166], "parvathaneni": [64, 166], "hainlin": [64, 166], "huo": [64, 166], "stepniewska": [64, 166], "reveal": [64, 69, 81, 82, 117, 166, 167], "untap": [64, 166], "62": [22, 29, 37, 50, 64, 67, 71, 75, 76, 77, 79, 80, 82, 86, 142, 166, 167, 214, 215], "220": [64, 76, 79, 80, 166, 217], "227": [64, 79, 80, 166, 216], "bermudez": [64, 166], "st\u0119pniewska": [64, 166], "captur": [64, 69, 70, 82, 101, 117, 138, 166], "arxiv": [64, 159, 166, 167, 171], "preprint": [64, 124, 166], "1911": [64, 79, 166, 219], "07927": [64, 166], "histology_resdnn": [64, 92], "pattern": [66, 113, 161, 168], "hand": [19, 66, 70, 155, 159], "nest": [66, 133, 138, 159, 161, 165, 166, 167, 168, 171], "log": [5, 8, 12, 14, 19, 66, 69, 70, 71, 86, 95, 127, 134, 137, 159, 161, 162, 165, 166, 167, 168, 173, 210, 220, 230, 231], "likelihood": [66, 86, 113, 167, 168], "hastie2008": 66, "rokem2014": [66, 87, 167], "imprevi": 66, "conduct": [66, 75, 151, 167, 214, 224], "cross_valid": [66, 174, 217], "dpd": [66, 87, 91, 119, 167], "xval": [66, 217], "centrum": [66, 87], "semioval": [66, 87], "cso": 66, "cc_vox": 66, "38": [22, 30, 33, 34, 37, 43, 50, 64, 66, 68, 71, 75, 76, 77, 79, 80, 82, 86, 87, 91, 95, 99, 102, 130, 167, 215], "cso_vox": 66, "dti_model": 66, "dti_cc": 66, "kfold_xval": [66, 92, 174], "csd_cc": 66, "dti_cso": 66, "csd_cso": 66, "scatter": [66, 79], "focus": [66, 155], "set_size_inch": 66, "legend": [66, 79, 82, 83, 91, 117, 118, 126], "loc": [66, 79, 82], "this_ax": 66, "cc_dti_r2": 66, "pearsonr": 66, "cc_csd_r2": 66, "cso_dti_r2": 66, "cso_csd_r2": 66, "r2": [66, 167, 216], "782881752597": 66, "805764364116": 66, "431921832012": 66, "604806420501": 66, "pretti": [4, 66], "hasti": [66, 87, 167], "tibshirani": 66, "friedman": 66, "mine": [66, 171], "springer": [66, 167, 168], "verlag": [66, 168], "berlin": 66, "chan": [20, 66, 167, 216], "aganj2010": [67, 142], "160": [67, 75, 76, 79, 80, 83, 162, 216, 236, 237], "apart": [67, 161, 162, 163, 167, 230], "peak_indic": [67, 78, 164, 167], "maxima": [67, 68, 164, 167, 215], "enough": [67, 161, 171, 241], "rectangular": [67, 75, 96, 230, 231], "splenium": [67, 75], "13": [1, 22, 27, 30, 33, 34, 37, 50, 67, 71, 75, 76, 77, 79, 80, 82, 83, 85, 111, 154, 155, 167, 171, 172, 212, 215, 219, 221, 222, 223, 224, 228], "43": [22, 30, 33, 34, 37, 50, 67, 71, 75, 76, 77, 79, 80, 82, 167, 217], "74": [22, 33, 37, 50, 67, 71, 75, 76, 77, 79, 80, 82, 111, 215], "csaodf": 67, "csa_odfs_actor": 67, "plasma": [67, 68, 74, 76, 80, 81, 86, 87, 89, 115, 118], "csa_odf": 67, "lenglet": [67, 142, 167], "sapiro": [67, 142, 167], "yacoub": [67, 142, 167], "ugurbil": [67, 142, 167], "harel": [67, 142, 167], "aug": [67, 142], "554": [67, 71, 79, 82, 142, 167, 169, 218], "66": [5, 22, 30, 33, 37, 50, 67, 71, 76, 77, 79, 80, 82, 111, 142, 167, 215], "22365": [67, 142, 167], "reconst_csa": [67, 92, 212], "tournier2007": [68, 81], "proce": [68, 87, 167], "There": [2, 5, 10, 11, 12, 19, 68, 81, 86, 105, 110, 138, 143, 153, 159, 161, 162, 165, 166, 167, 168, 169, 230, 235], "cuboid": [68, 81, 167, 173, 189], "mask_for_response_ssst": [68, 174], "meet": [1, 68, 71, 81, 97, 155, 162, 166, 167, 171, 219, 220, 221, 222, 223, 225, 236, 237], "ident": [68, 75, 78, 83, 93, 96, 139, 140, 159, 165, 167, 171, 172, 174, 208, 221, 225], "nvoxel": 68, "tupl": [68, 93, 120, 159, 161, 162, 165, 166, 167, 168, 169, 171, 172, 173, 213, 216, 235], "0014": [68, 87], "00029": [68, 87], "416": [68, 76, 79, 80, 86, 87, 217], "206": [68, 76, 79, 80, 87, 216, 236, 237], "radial": [68, 69, 70, 80, 82, 87, 89, 154, 161, 167, 171, 173, 190, 191, 215, 235], "21197": 68, "doubl": [2, 68, 69, 138, 159, 161, 163, 164, 167, 168, 169, 171, 208, 214, 222], "single_tensor_odf": [68, 86, 174], "evec": [68, 75, 86, 91, 117, 142, 167, 169, 173, 174, 190, 191], "response_odf": [68, 86], "1d": [68, 86, 109, 141, 159, 161, 163, 164, 166, 167, 168, 169, 170, 171, 173, 199, 227], "response_actor": [68, 86], "csd_respons": 68, "calibr": [68, 86, 105, 151, 154, 167, 173, 188, 189, 218], "eigenvector": [68, 80, 117, 159, 163, 167, 169, 171, 173, 190, 191, 208, 213, 230], "tax2014": [68, 86], "fat": [68, 86, 167], "converg": [68, 70, 79, 80, 86, 93, 113, 159, 161, 163, 167, 168], "recursive_respons": [68, 86, 174], "shorten": [4, 68, 86], "mean_diffus": [68, 75, 76, 174, 210], "wm_mask": [68, 85], "logical_and": 68, "0011": 68, "peak_thr": [68, 86, 167], "init_fa": [68, 86, 167], "init_trac": [68, 86, 167], "0021": [68, 86, 167], "pancak": [68, 86], "response_sign": 68, "on_spher": [68, 86, 167, 174], "csd_recursive_respons": 68, "recurs": [68, 86, 154, 159, 161, 167], "portion": [68, 79, 86, 167], "55": [22, 29, 30, 34, 37, 50, 68, 71, 75, 76, 79, 80, 82, 83, 86, 87, 91, 112, 130, 133, 167, 209, 215], "csd_odf": 68, "30x30": 68, "fodf_peak": [68, 86, 87], "getproperti": [68, 87], "setopac": [68, 87], "csd_both": 68, "fibr": [68, 81, 162, 163, 164, 167, 173, 189, 234], "super": [68, 81, 110, 154, 163, 164, 167, 173, 189, 234], "resolv": [5, 68, 69, 70, 74, 81, 115, 151, 163, 164, 167, 173, 189, 213, 214, 227, 234], "1459": [68, 79, 81, 163, 164, 167, 212, 234], "1472": [68, 76, 79, 81, 163, 164, 167, 212, 234], "tax": [20, 68, 70, 86, 167, 218], "vo": [68, 86], "viergev": [68, 70, 86], "86": [22, 33, 37, 50, 68, 71, 76, 77, 79, 80, 82, 86, 99, 111, 215], "reconst_csd": [68, 92, 212], "expans": [70, 80, 84, 85, 151, 161, 167, 169], "dt": [69, 70, 71, 117, 119, 151, 165, 167, 169, 170, 230], "biolog": [70, 79, 83, 151, 167], "kt": [69, 70, 71, 117, 151, 167, 169, 174], "jensen2005": [41, 70, 82, 151, 156], "character": [70, 71, 75, 77, 82, 151, 167, 169], "microstructur": [70, 71, 76, 77, 79, 80, 82, 84, 85, 151, 154, 166, 167, 173, 191, 210], "heterogen": [70, 117, 151, 161], "jensen2010": [70, 151], "moreov": [70, 77, 82, 110, 151, 164, 234], "concret": [70, 71, 151, 173], "biophys": [70, 71, 75, 82, 83, 151, 167, 171], "axon": [70, 71, 75, 76, 80, 82, 83, 117, 151, 167, 219], "tortuos": [70, 71, 151, 174, 210], "fierem2011": [70, 71, 151], "sphx_glr_examples_built_reconstruction_reconst_dki_micro": [], "netohe2015": [70, 82, 151], "express": [69, 70, 77, 79, 87, 88, 139, 140, 161, 162, 167, 168, 171, 173, 213, 234], "s_": [69, 70, 79, 96, 167, 169], "bd": [70, 79, 167, 169], "mathbf": [70, 75, 77, 79, 84, 85, 96, 138, 140, 151, 167, 171, 230, 231, 232], "s_0": [70, 75, 77, 79, 84, 85, 151, 167, 169], "absenc": [70, 79], "sensit": [70, 71, 79, 80, 82, 91, 101, 138, 167, 217], "sum_": [70, 85, 87, 96, 161, 167, 234], "d_": [69, 70, 75, 77, 96, 151, 167, 230, 231], "ij": [69, 70, 167, 230, 231], "w_": [69, 70, 167], "ijkl": [69, 70, 167], "antipod": [70, 75, 151, 161, 162, 163, 167, 215], "symmetri": [70, 75, 151, 161, 162, 163, 167, 234], "wijkl": [70, 169], "xxxx": [70, 167], "yyyi": [70, 167], "zzzz": [70, 167], "xxxy": [70, 167], "xxxz": [70, 167], "xyyi": [70, 167], "yyyz": [70, 167], "xzzz": [70, 167], "yzzz": [70, 167], "xxyi": [70, 167], "xxzz": [70, 167], "yyzz": [70, 167], "xxyz": [70, 167], "xyyz": [70, 167], "xyzz": [70, 167], "compare_map": [70, 80, 174], "gaussian_filt": [70, 71], "fraw": [70, 71, 72, 73, 78, 79, 80, 81, 82, 89, 90], "taxcmw2015": 70, "netohe2012": 70, "might": [3, 4, 9, 19, 70, 80, 81, 91, 106, 127, 143, 159, 161, 163, 164, 165, 166, 167, 168, 173, 182, 183, 213, 221, 241], "favor": 70, "fwhm": [70, 71], "pioneer": 70, "sphx_glr_examples_built_preprocessing_denoise_gibb": [], "gauss_std": [70, 71], "data_smooth": [70, 71], "dkifit": [70, 71], "diffusionkurtosisfit": [70, 174], "rd": [69, 70, 142, 143, 167, 173, 174, 190, 191], "diffusionkurtosisifit": 70, "Of": [4, 70, 159], "cours": [4, 12, 18, 70, 78, 83, 155, 159, 230], "analog": [70, 71, 159], "theoret": [2, 70, 85, 89, 96, 159, 167], "decoupl": [70, 82], "veraar2011": 70, "fit_label": [70, 80, 172], "map_kwarg": [70, 80, 172], "2e": [70, 86, 167], "diffusion_tensor_measures_from_dti_and_dki": 70, "underestim": [70, 77], "ak": [69, 70, 161, 167, 173, 174], "rk": [69, 70, 167, 173, 174], "kurtosis_tensor_standard_measur": 70, "behaviour": [20, 70, 108, 159, 167, 171, 215], "confin": [70, 161, 167], "compartment": [70, 77, 82, 117, 167], "myelin": [70, 71, 75], "sheath": 70, "pronounc": 70, "perpendicularli": 70, "amplitud": [70, 77, 138, 167, 230], "band": [70, 167], "dark": 70, "decai": [70, 79, 167, 230], "consequ": [70, 79, 91, 117, 151], "tendenc": [70, 170], "inadequ": 70, "sign": [2, 70, 79, 101, 159, 161, 171, 217, 221, 231, 234], "parametr": [70, 138, 159, 162, 167, 168, 215, 236, 237], "perron2015": 70, "netohe2018": [70, 82], "unring": [70, 149, 154], "overcom": [70, 82, 119, 167], "powder": [70, 82], "physic": [70, 79, 80, 85, 91, 139, 151, 159, 161, 167, 169, 172, 173, 192, 233], "delaha2020": 70, "section": [2, 4, 5, 14, 19, 69, 70, 79, 110, 134, 141, 143, 154, 161, 162, 167, 169, 171, 214, 216, 218, 221, 222], "though": [70, 99, 159, 167, 171, 230, 231], "fit_method": [70, 79, 85, 91, 167, 173, 190, 191, 225], "cl": [70, 71, 167], "cwl": [70, 167], "unconstrain": [70, 85, 159, 161], "unplaus": 70, "mosek": [70, 80, 85], "solver": [70, 80, 85, 159, 161, 167, 213], "www": [1, 70, 80, 85, 138, 139, 161, 165, 167, 171], "com": [4, 5, 7, 8, 14, 15, 16, 70, 80, 85, 97, 143, 144, 145, 152, 161, 164, 171, 173, 175, 236, 237, 241], "cvxpy_solv": [70, 80, 85, 167], "greatli": [70, 80], "solut": [70, 72, 80, 93, 113, 130, 142, 154, 159, 161, 167, 171], "atyp": 70, "scenario": [70, 99], "counterpart": 70, "unexpect": [70, 77, 212], "qualit": [70, 219], "dkimodel_plu": 70, "dkifit_plu": 70, "pure": [70, 140, 161, 163], "kurtosis_tensor_standard_measures_plu": 70, "obviat": 70, "dkifit_noisi": 70, "dkifit_noisy_plu": 70, "kurtosis_tensor_standard_measures_noisi": 70, "unsmooth": 70, "hansen2013": 70, "glennr2015": 70, "mkt": [70, 167, 174], "kfa": [70, 167, 174, 221, 225], "measures_from_kurtosis_tensor_onli": 70, "report": [70, 79, 167, 210, 217, 224], "jh": [70, 71, 82, 151, 167], "helpern": [70, 71, 82, 151, 167, 173, 190], "ja": [70, 71, 82, 151, 167], "ramani": [70, 82, 151, 173, 190], "lu": [70, 82, 91, 151, 159, 167, 173, 190, 191], "h": [4, 70, 71, 82, 86, 87, 93, 94, 134, 137, 142, 150, 151, 159, 161, 163, 166, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 217], "kaczynski": [70, 82, 151, 173, 190], "diffusion": [1, 70, 82, 151, 167, 173, 190], "quantif": [70, 82, 119, 151, 167, 170, 173, 190], "non_gaussian": [70, 82, 151], "53": [22, 29, 30, 33, 34, 37, 50, 67, 70, 71, 76, 79, 80, 82, 91, 100, 103, 141, 151, 167, 173, 190, 191, 217, 227], "1432": [70, 76, 82, 151, 173, 190, 219], "1440": [70, 79, 82, 151, 212], "nmr": [70, 86, 151, 161, 167, 173, 191], "biomedicin": [70, 151, 167], "698": [70, 76, 79, 151, 167, 208], "710": [70, 71, 76, 79, 151, 167, 208], "177": [70, 71, 76, 79, 80, 151, 167, 217], "188": [70, 71, 76, 79, 80, 151, 167], "poot": 70, "dh": 70, "heck": 70, "blockx": 70, "linden": 70, "verhoy": 70, "138": [70, 79, 80, 142, 208, 215], "145": [70, 76, 79, 80, 212, 215], "ferreira": [70, 82, 151, 167], "correia": [1, 70, 77, 82, 151, 162, 167, 171], "master": [4, 6, 9, 14, 15, 16, 19, 70, 208, 210, 213, 215, 217, 220], "dissert": 70, "bachelor": 70, "programin": 70, "biomed": [70, 141, 167, 236, 237], "faculti": 70, "scienc": [20, 70, 141, 161, 171], "repositorio": 70, "ul": 70, "pt": [20, 70, 126, 171, 219], "bitstream": [61, 70, 130], "10451": [70, 71], "8511": 70, "ulfc104137_tm_rafael_henriqu": 70, "pdf": [70, 72, 73, 93, 139, 159, 167, 169, 173, 174, 175, 217, 226], "lund": [70, 167], "te": [70, 171], "sangil": [70, 167], "sn": [70, 71, 81, 82, 142, 161, 167], "experiment": [70, 154, 167, 169], "computationally393fast": 70, "69": [22, 33, 37, 50, 70, 71, 76, 79, 80, 82, 83, 90, 95, 99, 215], "1754": [70, 167, 214], "1760": [70, 79, 167, 219], "394doi": 70, "24743": [70, 167], "glenn": [70, 154, 167], "gr": [20, 70], "diffusional387kurtosi": 70, "biomedicine28": 70, "448": [70, 80, 167, 217], "459": [70, 76, 79, 80, 90, 167, 208], "nbm": [70, 167], "3271": [70, 79, 167], "nune": [70, 82, 151, 167], "rg": [70, 82, 151, 167], "geometri": [70, 82, 117, 151, 157, 167, 169, 171, 174, 212, 217], "novel": [1, 70, 71, 80, 82, 117, 151, 167, 169], "biomark": [70, 82, 117, 151, 167, 169], "99": [22, 33, 34, 37, 50, 70, 71, 76, 77, 79, 80, 82, 95, 99, 117, 151, 161, 167, 169, 215], "cmw": 70, "ott": 70, "ma": [20, 70, 124], "dijkhuizen": 70, "rekindl": 70, "794": [70, 79, 209], "808": [70, 76, 209], "scientif": [2, 70, 71, 76, 79, 81, 82, 130, 142, 162, 167, 238, 241], "160072": [70, 71, 81, 82, 142, 236, 237], "sdata": [70, 71, 81, 82, 142, 162, 236, 237], "dela": [41, 70, 80, 85, 156, 161, 162, 167, 226, 227], "haij": [41, 70, 80, 85, 156, 161, 162, 167, 226, 227], "program": [70, 80, 85, 138, 141, 161, 162, 167, 173, 196], "209": [70, 76, 79, 80, 161, 162, 167, 173, 191, 216], "116405": [41, 70, 80, 156, 161, 162, 167], "reconst_dki": [70, 92, 210], "hinder": [71, 80, 167, 169], "fierem2013": 71, "influenc": [71, 77, 162], "intra": [71, 82, 117, 167, 173, 192, 236, 237], "extra": [71, 77, 82, 94, 117, 134, 137, 139, 159, 161, 165, 167, 168, 172, 238], "cellular": [71, 82, 117, 167], "fierem2012": 71, "distinguish": [71, 161, 171, 172, 173, 195, 196], "degener": [71, 161, 171], "dki_micro": [71, 174], "sphx_glr_examples_built_reconstruction_reconst_dki": [], "kurtosismicrostructuremodel": [71, 174], "dki_micro_model": 71, "meaning": [3, 71, 80, 167], "fieremans2011": 71, "planar": [71, 84, 85, 161, 162, 171, 174], "criteria": [71, 167, 171], "articl": [1, 71, 77, 84, 85, 97, 143, 144, 145, 161, 163, 167, 236, 237], "publish": [71, 77, 85, 167, 219], "nevertheless": 71, "predefin": [71, 163, 168], "well_aligned_mask": 71, "cp": [71, 153, 173, 205], "isnan": [71, 75, 215], "dki_micro_fit": 71, "kurtosismicrostructurefit": 71, "awf": [71, 167, 174], "tort": [71, 161, 168, 173], "im0": [71, 82], "im1": [71, 82], "kurtosis_microstructural_measur": 71, "overlaid": [71, 87, 172], "kim": 71, "grossman": [71, 101, 102, 103, 152, 159], "ri": 71, "ingles": 71, "demyelin": 71, "proceed": [71, 79, 81, 167, 168, 172, 173, 195], "20th": 71, "annual": [1, 71, 162, 167, 236, 237], "societi": [71, 79, 81, 86, 161, 167, 168, 171, 172, 173, 195], "melbourn": 71, "australia": 71, "benitez": 71, "falangola": 71, "deardorff": 71, "spampinato": 71, "babb": 71, "ferri": 71, "alzheim": 71, "diseas": [71, 143], "progress": [5, 15, 71, 83, 86, 105, 143, 152, 154, 159, 163, 166, 173, 175, 185, 202, 210, 222, 225], "ajnr": 71, "am": [5, 15, 19, 71], "neuroradiol": 71, "34": [22, 24, 27, 29, 33, 37, 50, 71, 76, 77, 79, 80, 82, 99, 141, 167, 169, 215, 222, 227], "2105": [71, 221], "2112": [71, 79, 221], "3174": [71, 79], "a3553": 71, "reconst_dki_micro": [71, 92], "wedeen08": 72, "keyhol": [72, 167], "diffusionspectrummodel": [72, 73, 74, 115, 174, 209], "taiwan_ntu_dsi": [72, 73, 78, 90, 236, 237], "96": [22, 29, 33, 37, 50, 71, 72, 73, 76, 78, 79, 80, 82, 90, 142, 215], "dsmodel": [72, 73], "dataslic": [72, 73, 78, 90], "dsfit": [72, 167], "724": [72, 76, 78, 79, 80, 89, 171, 208, 213], "fashion": [72, 79, 151, 159, 166, 171], "17": [22, 29, 37, 50, 71, 72, 76, 79, 80, 82, 83, 89, 92, 119, 125, 161, 166, 167, 171, 215, 219], "345": [72, 79, 80, 84, 85, 167, 217], "ndindex": [72, 86, 174, 215, 217], "disc": [72, 161], "memmap": 72, "mind": [2, 72, 111, 126, 167], "gbyte": 72, "tuch04": 72, "fig_hist": [72, 91, 126], "dsi_gfa": 72, "sphx_glr_examples_built_reconstruction_reconst_dsi_metr": [], "41": [22, 30, 33, 37, 50, 68, 71, 72, 76, 79, 80, 82, 101, 102, 103, 111, 152, 154, 159, 163, 214, 215, 226], "1267": [72, 210], "1277": [72, 211], "52": [22, 29, 34, 37, 50, 68, 71, 72, 76, 77, 79, 80, 82, 86, 92, 131, 169, 215, 220], "1358": [72, 79, 212], "1372": 72, "reconst_dsi": [72, 92], "rtop": [73, 80, 83, 90, 167, 169, 172, 173, 174, 193, 208], "displac": [69, 73, 79, 80, 83, 90, 97, 138, 151, 152, 159, 167, 169, 171, 172, 173, 176, 177, 230], "msd": [73, 80, 82, 83, 90, 167, 169, 173, 174, 193], "wu2007": [73, 90], "wu2008": [73, 90], "qgrid_siz": [73, 167], "filter_width": [73, 167], "rtop_sign": [73, 90, 167, 174], "rtop_pdf": [73, 90, 167, 174], "mse": [73, 90], "leav": [15, 19, 73, 159, 161, 163, 167, 169, 171], "rtop_pdf_norm": 73, "msd_norm": 73, "msd_discret": [73, 167, 174], "ax1": [73, 76, 86, 90, 119], "add_subplot": [73, 76, 90, 113], "ind": [73, 76, 90, 167, 170, 171], "ax2": [73, 76, 90, 119], "ax3": [73, 76, 90], "621": [71, 73, 76, 79, 82, 90, 167, 208], "hybrid": [73, 80, 90, 167], "617": [71, 73, 76, 79, 82, 90, 167, 208], "629": [71, 73, 79, 90, 167, 208], "858": [73, 77, 79, 90, 167, 209], "865": [73, 90, 167, 210], "reconst_dsi_metr": [73, 92], "canales10": [74, 115], "goal": [74, 115, 142, 152], "multi_tensor_odf": [74, 88, 115, 118, 174], "diffusionspectrumdeconvmodel": [74, 115, 174], "btabl": [74, 115], "dsi515btabl": [74, 115], "0015": [74, 88, 115, 118, 167, 169], "0003": [74, 88, 115, 118, 167, 169], "subdivid": [74, 88, 115, 118, 161, 163, 173, 174, 215], "odf_gt": [74, 115], "dsi_model": [74, 115], "dsi_odf": [74, 115], "dsid_model": [74, 115], "dsid_odf": [74, 115], "odf_actor": [74, 75, 76, 88, 115, 118], "rotatex": [74, 80, 88, 89, 96, 115, 118, 121], "90": [22, 29, 30, 34, 37, 50, 71, 74, 76, 79, 80, 82, 86, 88, 89, 96, 115, 117, 118, 121, 164, 167, 169, 173, 205, 206, 215], "136": [74, 76, 79, 80, 92, 115, 167, 215], "149": [74, 76, 79, 80, 115], "reconst_dsid": [74, 92, 210], "colleagu": [75, 151], "basser1994": [75, 151], "influenti": [75, 151], "commonli": [75, 151], "bmathbf": 75, "definit": [2, 75, 79, 85, 87, 94, 140, 151, 154, 159, 161, 163, 164, 167, 210, 213, 215, 217, 222, 225, 234], "quadrat": [75, 151, 167, 171], "pmatrix": [75, 84, 85, 151, 167, 230, 231], "xx": [75, 151, 230, 231], "xz": [75, 151, 230, 231], "yx": [75, 151, 230, 231], "yy": [75, 151, 230, 231], "yz": [75, 151, 230, 231], "zx": [75, 151], "zy": [75, 151], "zz": [75, 151, 230, 231], "covari": [75, 84, 85, 151, 167], "diagon": [75, 143, 151, 167, 173, 200], "numer": [75, 80, 138, 154, 159, 161, 167, 169, 222, 224, 230, 238], "recov": [75, 83, 91, 106, 166, 167, 231, 234], "triangular": [75, 161, 162, 163, 165, 167], "dxx": [75, 151, 167, 173, 191], "dxy": [75, 151, 167, 173, 191], "dyi": [75, 151, 167, 173, 191], "dxz": [75, 151, 167, 173, 191], "dyz": [75, 151, 167, 173, 191], "dzz": [75, 151, 167, 173, 191], "tensor_v": 75, "lower_triangular": [75, 174], "quadratic_form": [75, 167, 174], "eigen": [75, 167, 169], "That": [75, 79, 139, 140, 159, 167, 171], "whether": [19, 75, 110, 151, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 188, 189, 191, 241], "unrestrict": 75, "mathemat": [75, 85, 96, 159, 167, 171, 213, 233, 234, 238], "frac": [69, 75, 96, 138, 140, 151, 161, 167, 168, 169, 171, 234, 235], "lambda_1": [75, 167, 230, 231], "lambda_2": [75, 167, 230, 231], "lambda_3": [75, 167, 230, 231], "carefulli": [75, 147], "pack": 75, "wrap": [75, 134, 137, 159, 166, 167, 171, 173, 182, 183, 184, 199, 201, 208, 218], "decreas": [75, 80, 83, 95, 99, 171, 210, 213], "fan": [75, 96], "color_fa": [75, 91, 174, 239], "possibli": [5, 75, 159, 170, 171, 208], "tensor_fa": 75, "viewer": [75, 133, 139, 235], "tensor_evec": 75, "complimentari": 75, "md1": 75, "tensors_md": 75, "md2": 75, "obvious": [19, 75], "quantiti": [75, 80, 83, 167], "pajevic1999": 75, "tensor_rgb": 75, "ellipsoid": [75, 91, 161, 212], "increas": [2, 75, 79, 80, 83, 105, 154, 159, 161, 166, 167, 171, 213, 217, 219, 222], "tensor_slic": [75, 91], "scalar_color": [75, 91], "tensor_ellipsoid": 75, "did": [5, 75, 91, 103, 152, 154, 161, 166, 224], "tensor_odf": 75, "reliabl": 75, "drawback": 75, "intermedi": [12, 75, 167, 171], "mislead": [75, 210, 221], "lead": [18, 69, 75, 91, 101, 139, 161, 167, 230], "fortun": [75, 88], "mattielo": [75, 151], "spectroscopi": [75, 151, 230], "pajev": 75, "reconst_dti": [75, 92, 210], "anderson2005": 76, "kaden2016": 76, "zucchelli2017": 76, "forecastmodel": [76, 174], "fetch_hbn": [76, 77, 174], "op": [76, 77, 119, 217, 235], "alexander2017": 76, "hbn": [76, 154], "pod2": [76, 162], "richiehalford2022": 76, "data_path": [76, 77], "ndaraa948vfh": [76, 77, 162], "dwi_path": [76, 77], "qsiprep": [76, 77], "hbnsiteru": [76, 77], "ndaraa948vfh_s": [76, 77], "hbnsiteru_acq": [76, 77], "64dir_spac": [76, 77], "t1w_desc": [76, 77], "preproc_dwi": [76, 77], "mask_img": [76, 77, 85, 162], "brain_mask": [76, 77, 142, 151, 173], "51": [22, 30, 33, 37, 50, 71, 76, 77, 79, 80, 82, 95, 161, 215], "mask_smal": [76, 77], "dec_alg": [76, 167], "fm": [76, 167], "f_fit": [76, 167], "d_par": [76, 167], "dpar": [76, 167, 174], "d_perp": [76, 167], "dperp": [76, 167, 174], "forecast_indic": 76, "shrink": [76, 171], "ax4": 76, "dpi": [76, 172], "magnif": 76, "kaden": [76, 82, 167], "zucchelli": [20, 76, 167, 208, 212, 216, 217], "miccai": [76, 89, 163, 167, 173, 184], "cdmri": [76, 167], "lm": [76, 162], "escalera": [76, 162], "ai": [76, 161, 162], "transdiagnost": [76, 162], "research": [20, 76, 138, 162, 221, 243], "pediatr": [76, 162, 236, 237], "mental": [76, 162], "health": [76, 162], "disord": [69, 76, 162], "sci": [76, 105, 120, 121, 143, 162, 168, 170, 173, 179, 200, 236, 237], "170181": [76, 162], "richi": [76, 162, 219], "halford": [76, 162, 219], "cieslak": [20, 76, 101, 162, 213, 219], "2022": [69, 76, 79, 95, 106, 141, 162, 166, 168, 173, 186, 220, 225, 226], "reconst_forecast": [76, 92, 212], "parenchyma": 77, "cerebr": [77, 79], "spinal": [77, 79, 124, 163], "morphologi": [77, 162], "enlarg": 77, "atrophi": 77, "pathologi": 77, "expand": [12, 77, 86, 159, 210, 224], "pasternak2009": 77, "s_0fe": 77, "thebdiffus": 77, "hoy2014": 77, "henriques2017": 77, "freewatertensormodel": [77, 174], "fwdtimodel": 77, "fwdtifit": 77, "freewatertensorfit": [77, 174], "dtimodel": 77, "dtifit": [77, 230, 231], "dti_fa": 77, "dti_md": 77, "fadiff": 77, "5e": [77, 84, 161, 167, 169], "mddiff": 77, "in_vivo_free_water_dti_and_standard_dti_measur": 77, "vivo": [69, 77, 82], "periventricular": 77, "abl": [2, 4, 14, 77, 80, 130, 133, 134, 137, 151, 167, 210, 215, 241], "problemat": 77, "reproduc": [77, 83, 84, 122, 149, 161, 162, 166, 168, 171, 173, 213, 217, 221], "inflat": [77, 122], "in_vivo_free_water_dti_and_standard_dti_correct": 77, "dismiss": 77, "sochen": 77, "gur": 77, "intrat": 77, "assaf": [77, 169], "717": [76, 77, 79, 82, 225], "22055": 77, "hoi": 77, "kecskemeti": 77, "323": [58, 76, 77, 79, 80, 161, 167, 169, 217], "333": [76, 77, 79, 80, 217], "09": [22, 37, 50, 71, 76, 77, 79, 80, 82, 162, 167, 221, 222, 236, 237], "053": 77, "jean": [1, 20, 77, 167, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221], "peterson": [1, 77, 167, 210, 236, 237], "rescienc": [1, 77, 167], "reconst_fwdti": [77, 92, 211], "yeh2010": 78, "think": [5, 15, 78, 122, 138, 167, 169, 230], "generalizedqsamplingmodel": [78, 174], "gqmodel": 78, "sampling_length": [78, 167], "gqfit": 78, "gqpeak": 78, "gqpeak_valu": 78, "gqpeak_indic": 78, "reconst_gqi": [78, 92, 210], "perfus": [79, 141, 151, 154, 167, 173, 192], "sequenc": [79, 96, 109, 110, 138, 139, 140, 151, 159, 161, 162, 166, 167, 168, 169, 171, 172, 173, 175, 221, 230, 231, 232], "understood": [79, 151, 171], "stejskal": [79, 138, 151, 169, 173, 192, 230, 231, 232], "tanner": [79, 138, 143, 151, 169, 173, 192, 230, 231, 232], "stejskal65": [79, 151, 173, 192], "lebihan84": [79, 151, 173, 192], "brownian": [79, 151], "thermal": [79, 91, 151], "vascular": [79, 151], "blood": [79, 151], "pressur": [79, 151], "pseudo": [79, 81, 151, 161, 167, 172, 173, 192], "laid": [79, 151, 167], "macroscop": [79, 151, 167], "fe": 79, "weigh": 79, "ivimmodel": [79, 167], "read_ivim": [79, 174], "21": [22, 29, 30, 33, 34, 37, 44, 45, 50, 71, 76, 79, 80, 82, 84, 85, 155, 167, 209, 210, 215, 227, 236, 237], "regist": [19, 79, 93, 94, 95, 96, 97, 101, 102, 103, 105, 130, 144, 145, 152, 159, 165, 173, 174, 180, 213, 214, 221], "bvalu": [79, 81, 82, 117, 161, 165, 167, 173, 181, 182, 188, 189, 190, 191, 192], "54": [22, 33, 37, 50, 71, 76, 77, 79, 80, 82, 83, 86, 127, 162, 167, 216, 236, 237], "midwai": 79, "axhlin": 79, "axvlin": 79, "ivim_data_slic": 79, "heat": 79, "hair": 79, "medial": 79, "mixtur": [79, 159], "x1": [79, 167, 171], "x2": [79, 167, 171], "y1": [79, 161], "y2": [79, 161], "csf_slice": 79, "exponenti": [79, 167, 217], "pass": [19, 79, 93, 127, 134, 159, 161, 164, 165, 166, 167, 168, 170, 171, 172, 173, 184, 199, 214], "trr": [79, 167], "stage": [5, 79, 93, 102, 151, 161, 167, 173, 192], "guess": [79, 159, 161, 167], "split_b_d": [79, 151, 167, 173, 192], "mono": [79, 159, 167], "logarithm": [79, 85, 167, 171], "split_b_s0": [79, 167, 173, 192], "s0_": 79, "d_star": [79, 167, 173, 174, 192], "two_stag": [79, 167], "flag": [5, 15, 79, 105, 127, 142, 154, 159, 161, 167, 169, 173, 177, 211, 212, 217, 225], "ivimfit": [79, 174], "model_param": [79, 167, 210], "arrang": [79, 162, 169, 171], "ivimparam": 79, "20x20": 79, "height": [79, 212], "estimated_param": 79, "heatmap": [79, 86], "def": [79, 83, 94, 96, 99, 101, 102, 108, 109, 110, 121, 126, 130, 133, 134, 137, 159, 161, 165, 167, 169, 217], "plot_map": 79, "raw_data": 79, "clim": 79, "page": [2, 5, 8, 10, 11, 13, 14, 19, 79, 108, 109, 143, 161, 208, 210, 213, 217, 219, 226, 236, 237], "s0_predict": [79, 167, 173, 174, 192], "predicted_s0": 79, "measured_s0": 79, "perfusion_fract": [79, 167, 173, 174, 192], "perfusion_coeff": 79, "diffusion_coeff": 79, "refin": [79, 93, 105, 159, 167, 168, 173, 174, 200], "varpro": [79, 167, 219, 220, 226], "mix": [79, 143, 154, 166, 167, 173, 177, 178, 211, 212, 214], "farooq16": 79, "convex": [79, 80, 93, 167], "basin": 79, "fadnavis19": 79, "ivimmodel_vp": 79, "ivimfit_vp": 79, "ivim_trr_predict": 79, "s0_est": 79, "f_est": 79, "d_star_est": 79, "d_est": 79, "text_fit": 79, "param": [79, 134, 137, 159, 167, 171, 173, 208, 213, 217, 227], "3f": 79, "4f": [79, 161], "5f": 79, "gca": 79, "ivim_predict_vp": 79, "ivim_voxel_plot": 79, "januari": [79, 141, 151, 155, 173, 192, 236, 237], "1965": [79, 151, 169, 171, 173, 192, 220], "presenc": [79, 85, 91, 151, 169, 173, 192, 234], "chemic": [79, 151, 169, 173, 192], "288": [79, 80, 151, 169, 173, 192, 216], "bibcod": [79, 151, 173, 192], "1965jchph": [79, 151, 173, 192], "1695690": [79, 151, 173, 192], "deni": [79, 151, 167, 173, 192], "radiologi": [79, 151, 167, 173, 192], "168": [76, 79, 80, 151, 167, 173, 192, 216], "1988": [79, 151, 161, 167, 173, 192, 220, 230], "497": [79, 82, 151, 163, 164, 167, 169, 173, 192, 217, 234], "505": [76, 79, 82, 151, 167, 173, 192, 217], "shreya": [20, 79, 167, 212, 213, 214, 219, 220, 223, 224, 225, 226], "microlearn": [79, 167, 214], "machin": [12, 19, 79, 141, 159, 163, 167, 171, 208], "montreal": [20, 79, 155, 162, 167, 172, 173, 195], "canada": [79, 89, 155, 167, 172, 173, 195], "farooq": [79, 167], "hamza": [79, 167], "reconst_ivim": [79, 92], "ozarslan2013": [80, 83], "qiv": [80, 83, 167, 173, 174, 193], "teturn": 80, "ng": [80, 167, 173, 174, 193, 212], "interestingli": 80, "rtap": [80, 83, 151, 167, 173, 174, 193, 208], "rtpp": [80, 83, 151, 167, 173, 174, 193, 208], "delahaije2020": 80, "laplacian": [80, 83, 154, 167, 173, 193, 210], "fick2016a": 80, "mapmri": [80, 83, 151, 173, 174, 193, 208, 210, 211, 212, 213, 214, 221, 228], "187": [76, 79, 80], "big_delta": [80, 83, 161, 167, 173, 193, 211], "small_delta": [80, 83, 161, 167, 173, 193, 211], "0365": [80, 151], "0157": [80, 151], "radial_ord": [80, 83, 89, 167, 173, 193], "anisotropic_sc": [80, 167], "laplacian_regular": [80, 83, 167, 221], "regularization_weight": 80, "gcv": [80, 83, 167, 219], "craven1978": 80, "omit": [80, 159, 167, 171], "custom": [80, 81, 159, 166, 167, 173, 175, 210, 222], "positivity_constraint": [80, 167], "exist": [2, 18, 19, 80, 108, 109, 110, 117, 162, 165, 166, 167, 168, 171, 172, 173, 197, 208, 209, 212, 213, 217, 218, 222], "global_constraint": [80, 167], "everywher": [80, 154, 167], "pos_grid": [80, 167], "pos_radiu": [80, 167], "job": [80, 138, 171, 213], "viabl": 80, "impos": [80, 83, 85, 167], "extrapol": [80, 83, 167, 171], "beyond": [2, 80, 83], "desir": [80, 105, 110, 124, 159, 161, 163, 167, 168, 169, 171], "cvxpy": [80, 85, 154, 161, 167, 211, 212, 213, 214, 221, 222, 238], "map_model_laplacian_aniso": 80, "mapmrimodel": [80, 174], "laplacian_weight": [80, 83, 167, 173, 193], "map_model_positivity_aniso": 80, "map_model_both_aniso": 80, "map_model_plus_aniso": 80, "preset": [80, 83, 167], "faster": [80, 105, 108, 154, 159, 163, 166, 167, 168, 171, 173, 182, 183, 209, 210, 215, 217, 229, 241], "mapfit_laplacian_aniso": [80, 212], "mapfit_positivity_aniso": 80, "mapfit_both_aniso": 80, "mapfit_plus_aniso": 80, "cmapl": 80, "map_label": [80, 172], "mapmri_rtop": 80, "appear": [14, 19, 80, 130, 162], "smoother": [80, 159, 167, 168, 171, 173, 176], "norm_of_laplacian_sign": [80, 167, 174], "mapmri_norm_laplacian": 80, "mapmri_map": 80, "proton": [80, 138, 232], "said": 80, "hosseinbor2013": 80, "composit": [80, 159], "fick2016b": 80, "puls": [80, 83, 138, 161, 162, 167, 169, 230, 232], "appar": [80, 147, 149, 154, 163, 167], "diamet": 80, "under": [2, 80, 81, 96, 102, 103, 159, 161, 162, 167, 172, 173, 176, 219, 220, 224, 228], "strong": 80, "protocol": [5, 80], "pore": [80, 167], "realist": 80, "map_model_both_ng": 80, "bval_threshold": [80, 167, 173, 193], "map_model_plus_ng": 80, "mapfit_both_ng": 80, "mapfit_plus_ng": 80, "ng_perpendicular": [80, 167, 174], "ng_parallel": [80, 167, 174], "mapmri_ng": 80, "clue": 80, "map_model_both_iso": 80, "mapfit_both_iso": 80, "noisier": 80, "sfu": [80, 89], "rutger": [20, 80, 162, 167, 210, 211, 213], "hj": [80, 162, 167], "craven": [80, 167], "spline": [80, 159, 167, 174], "1978": [76, 79, 80, 167, 220], "377": [79, 80, 142, 167, 217], "403": [79, 80, 167, 217], "hosseinbor": [80, 167], "bessel": [80, 167], "bfor": [80, 167], "650": [71, 79, 80, 167, 208], "670": [71, 76, 79, 80, 82, 167, 210], "dispers": [80, 82, 164], "isbi": [80, 89, 155, 162, 167, 215, 236, 237], "reconst_mapmri": [80, 92, 212], "msmt": [81, 154, 167, 219, 220, 222], "jeurissen2014": 81, "cerebrospin": [81, 86, 153, 173, 206, 236, 237], "overestim": [81, 167], "ssst": [81, 167], "otsu": [81, 151, 174, 210, 216], "powermap": 81, "unavail": 81, "dp": [3, 81, 171, 225], "unique_bvals_toler": [81, 167, 174], "auto_response_msmt": [81, 174], "mask_for_response_msmt": [81, 174], "response_from_mask_msmt": [81, 174, 223], "multishelldeconvmodel": [81, 174], "qball_model": 81, "qballmodel": [81, 174], "ap": [81, 167, 171], "anisotropic_pow": [81, 174, 210], "anisotropic_power_map": 81, "treat": [81, 159, 161, 162, 163, 167, 173], "hidden": [81, 113, 159, 162, 166, 167, 212, 221], "markov": [81, 113, 168, 215, 216], "hmrf": [81, 113], "nclass": [81, 113, 168], "initial_segment": [81, 113, 168], "final_segment": [81, 113, 168], "precis": [81, 82, 110, 138, 159, 161, 166, 167, 171, 210, 212, 217, 218], "mask_wm": [81, 167], "mask_gm": [81, 167], "mask_csf": [81, 167], "wm_fa_thr": [81, 167], "gm_fa_thr": [81, 167], "csf_fa_thr": [81, 167], "gm_md_thr": [81, 167], "csf_md_thr": [81, 167], "0032": [81, 167], "nvoxels_wm": 81, "nvoxels_gm": 81, "nvoxels_csf": 81, "precalcul": [81, 173, 180], "response_wm": [81, 167], "response_gm": [81, 167], "response_csf": [81, 167], "auto_response_wm": 81, "auto_response_gm": 81, "auto_response_csf": 81, "multishellrespons": [81, 174], "ubval": [81, 161, 167], "response_mcsd": 81, "wm_rf": [81, 167], "gm_rf": [81, 167], "csf_rf": [81, 167], "mcsd_model_simple_respons": 81, "mcsd_model": 81, "mcsd_fit": 81, "all_shm_coeff": [81, 167, 174], "vf": [81, 159], "volume_fract": [81, 167, 174], "sh_coeff": [81, 88, 167, 174], "csf_sh_coeff": 81, "gm_sh_coeff": 81, "wm_sh_coeff": 81, "mcsd_pred": 81, "mcsd_odf": 81, "reset_camera_tight": 81, "msdodf": 81, "411": [71, 79, 80, 81, 167, 217], "426": [80, 81, 217], "dell": [81, 86, 167], "acqua": [81, 86, 167], "milan": [81, 167], "itali": [81, 167], "reconst_mcsd": [81, 92], "implaus": 82, "mesoscop": 82, "contrari": [82, 108], "confound": [82, 91], "secondli": 82, "sphx_glr_examples_built_simulations_simulate_multi_tensor": [], "sphx_glr_examples_built_simulations_simulate_dki": [], "meval": [82, 88, 117, 118, 167, 169], "00099": [82, 117, 169], "00226": [82, 117, 169], "00087": [82, 117, 169], "loop": [82, 86, 113, 133, 134, 137, 138, 159, 161, 167, 168, 171, 213, 219, 225], "linspac": [82, 83, 126, 169, 171], "num": [82, 161, 209], "ang": 82, "91": [22, 29, 33, 37, 50, 71, 76, 77, 79, 80, 82, 83, 95, 162, 166, 215], "f_i": 82, "individu": [20, 82, 95, 96, 119, 121, 161, 166, 167, 169, 171, 210, 226], "a_i": 82, "msdki_model": 82, "msdki_fit": 82, "nrow": [2, 82, 83, 159, 172], "ncol": [82, 83, 99, 159, 172], "bbox_to_anchor": 82, "msdki_simul": 82, "curv": [82, 171], "art": [82, 154, 228], "sphx_glr_examples_built_preprocessing_denoise_nlmean": [], "sphx_glr_examples_built_preprocessing_denoise_localpca": [], "im2": 82, "im3": 82, "msdki_invivo": 82, "insur": [82, 167, 210], "intris": [82, 167], "di": [82, 225], "microscop": [69, 82, 84, 161, 167], "smt2f": [82, 167, 174], "smt2di": [82, 167, 174], "ufa2": 82, "smt2ufa": [82, 167, 174], "ufa": [82, 84, 85, 167, 172, 174], "msdki_smt2_invivo": 82, "confirm": [82, 84, 95], "rescal": [82, 167], "real": [5, 69, 82, 119, 126, 134, 137, 138, 140, 154, 159, 161, 164, 167, 169, 171, 234], "rn": [1, 82], "down": [5, 7, 82, 108, 126, 133, 139, 159, 161, 166, 167, 171, 174, 217, 223, 230, 231], "colleg": [82, 167], "shemesh": [69, 82, 167], "misestim": [82, 167], "press": [82, 167], "27606": [82, 167], "kelm": [82, 167], "carson": [82, 167], "rp": [82, 167], "dc": 82, "139": [76, 79, 80, 82, 111, 167, 215], "346": [76, 79, 80, 82, 112, 167, 171, 217], "359": [76, 79, 80, 82, 167, 217], "reconst_msdki": [82, 92], "sought": 83, "unsolv": 83, "fick2017": 83, "terminologi": 83, "au": [83, 162], "graphnet": [83, 162, 167, 236, 237], "sparsiti": [83, 87, 161, 167], "drastic": 83, "nervou": 83, "mous": [83, 133], "fetch_qtdmri_test_retest_2subject": [83, 174], "read_qtdmri_test_retest_2subject": [83, 174], "qtdmri": [83, 174], "retest": [83, 162, 236, 237], "mice": [83, 162, 236, 237], "freeli": 83, "citeabl": 83, "wassermann2017": 83, "cc_mask": [83, 162], "5m": [83, 162], "visualise_gradient_table_g_delta_rainbow": [83, 174], "dmri_acquisition_schem": 83, "isolin": [83, 167], "architectur": [83, 167, 219], "subplot_titl": 83, "subject1": 83, "subject2": 83, "data_": 83, "mask_": 83, "gtab_": [83, 167], "enumer": [83, 84, 96, 121, 122, 126, 171], "data_middle_slic": 83, "mask_middle_slic": 83, "tenmod": 83, "overlai": [83, 102], "mask_templ": 83, "greys_r": 83, "dmri_datasets_fa_with_ccmask": 83, "tau_min": 83, "tau_max": 83, "qtdmri_fit": 83, "cc_voxel": 83, "time_ord": [83, 167], "l1": [83, 87, 167, 168, 171], "cv": [83, 167], "qtdmri_mod": 83, "qtdmrimodel": [83, 174], "l1_regular": [83, 167], "l1_weight": [83, 167], "5th": [83, 167, 173, 191], "trend": 83, "topic": [6, 83], "commun": [2, 12, 83, 141, 154, 159, 167, 218, 224, 229], "plot_mean_with_std": 83, "ind1": 83, "plotcolor": 83, "std_mult": 83, "lw": 83, "fill_between": 83, "005": [83, 169], "msd_": 83, "4e": 83, "10e": 83, "delta_grid": 83, "msd_grid": 83, "meshgrid": 83, "d_grid": 83, "d_level": 83, "1e": [83, 84, 89, 159, 161, 163, 164, 165, 167, 168, 173, 219], "contourf": 83, "1e3": 83, "1e5": 83, "dashdot": 83, "marker": [83, 143], "clarifi": [2, 83, 154, 216, 217, 219, 222, 225], "0091": 83, "14e": 83, "set_ylim": 83, "set_xlim": 83, "009": 83, "0185": 83, "cb": [83, 159], "set_label": 83, "qt_indices_msd": 83, "slowli": 83, "nearli": [83, 171], "perfectli": [83, 97, 159, 164], "slightli": [3, 83, 94, 159, 164, 167, 171, 234], "eas": [2, 83], "rtxp_": 83, "rtxp_grid": 83, "d_color": 83, "162": [76, 79, 80, 83, 216], "3e": [83, 84, 167], "22": [22, 27, 29, 37, 46, 48, 50, 58, 71, 76, 77, 79, 80, 82, 83, 89, 93, 94, 104, 112, 155, 159, 163, 167, 215, 218, 220, 225], "140": [40, 76, 79, 80, 83, 95, 96, 130, 144, 152, 159, 162, 173, 202, 215, 236, 237], "113": [79, 80, 83, 99, 131, 142, 215], "6e": 83, "16": [21, 22, 29, 30, 33, 34, 37, 50, 71, 76, 77, 79, 80, 82, 83, 86, 89, 122, 125, 129, 132, 141, 154, 155, 166, 167, 171, 172, 208, 209, 210, 216, 217, 219, 227, 228], "qt_indices_rtop": 83, "experienc": 83, "odd": [83, 163, 167, 222, 234], "arriv": 83, "notic": [5, 83, 96, 127, 139, 147, 159, 161, 162, 168, 171, 173], "experi": [41, 79, 83, 102, 134, 143, 162], "qt_indices_rtap": 83, "9e": 83, "15e": 83, "qt_indices_rtpp": 83, "bigger": [83, 161, 171], "asid": 83, "sharpening_factor": 83, "conclud": 83, "help": [2, 3, 5, 8, 10, 12, 18, 20, 83, 94, 105, 134, 137, 141, 150, 159, 161, 164, 167, 168, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 213, 217, 228, 229, 232, 242], "tempor": [83, 138, 167, 230, 231], "reconst_qtdmri": [83, 92], "briefli": [84, 85], "summar": [84, 85, 170], "dtd": [84, 85, 167], "langl": [84, 85, 167], "otim": [84, 85, 167], "outer": [4, 84, 85, 159, 167], "product": [84, 85, 159, 161, 167, 168, 171, 173], "cumul": [84, 85, 167, 171], "pprox": [84, 85], "exp": [84, 85, 167, 171, 232], "inner": [84, 85, 159, 161, 167, 171], "eta": [64, 84], "ln": [84, 85], "s_1": [84, 85], "s_n": [84, 85], "ext": [84, 85, 167], "_1": [84, 85, 167, 230, 231], "_n": [84, 85, 167], "_i": [84, 85, 87, 167], "voigt": [84, 85, 167], "notat": [84, 85, 167, 214], "qte": [84, 162, 167], "fdata": [69, 84], "fmask": [69, 84], "qte_lte_pt": 84, "bten": [84, 161, 167, 169, 221, 222, 223], "lte": [84, 161], "61": [5, 21, 22, 30, 33, 34, 37, 50, 71, 76, 77, 79, 80, 82, 84, 108, 154, 161, 167, 168, 215, 224], "pte": [84, 161], "matrix_rank": 84, "qtimodel": [84, 85, 174], "qtifit": [84, 85, 174], "\u03bcfa": 84, "v_md": [84, 167, 174], "v_shear": [84, 167, 174], "shear": [84, 93, 127, 140, 152, 159, 161, 167, 168, 171, 173, 175, 210], "v_iso": [84, 167, 174], "c_md": [84, 167, 174], "c_mu": [84, 167, 174], "\u03bc": 84, "c_m": [84, 167, 174], "c_c": [84, 167, 174], "k_bulk": [84, 167, 174], "bulk": [84, 167, 171], "k_shear": [84, 167, 174], "k_mu": [84, 167, 174], "carl": [84, 85, 167], "fredrik": [84, 85, 167], "multidimension": [84, 85, 161, 167, 169, 221], "135": [76, 80, 84, 85, 111, 167, 215], "039": [27, 29, 84, 85, 167], "reconst_qti": [84, 92], "heteroskedast": 85, "mathrm": [85, 161, 167, 171, 230], "s_k": 85, "ldot": [85, 96], "ddot": 85, "semi": [85, 159, 161, 171], "succeq": 85, "violat": [79, 85], "unreli": [85, 166], "enfoc": 85, "semidefinit": [85, 162, 167], "sdp": [85, 167], "instruct": [2, 5, 7, 8, 10, 14, 16, 19, 85, 102, 103, 208, 211, 213, 214, 217, 219, 222, 241], "sc": [85, 138, 167, 171], "readili": 85, "licenc": 85, "latest": [13, 17, 85, 154, 209, 225, 234, 241], "html": [2, 19, 85, 138, 161, 165, 171, 210, 212, 222, 241], "routin": [85, 167, 171, 172, 226], "read_dib_217_lte_pte_st": [85, 174], "read_dib_70_lte_pte_st": [85, 174], "showcas": [85, 86, 147, 148, 150, 151, 153, 221], "richer": 85, "emul": 85, "shorter": [85, 122, 164, 171, 173], "scan": [85, 166], "patient": [85, 91, 143, 162, 170, 173], "clinic": [69, 85, 161, 167], "filip": 85, "szczepankiewicz": [85, 162], "szczepankiewicz_dib_2019": 85, "mark": [85, 99, 167, 171, 212], "_217": 85, "suffix": 85, "data_img": [85, 162], "gtab_217": 85, "data_217": 85, "downsampl": [85, 111, 126, 174, 215, 225], "_70": 85, "gtab_70": 85, "data_70": 85, "consider": [85, 96, 126, 167, 173, 188], "qtimodel_217": 85, "qtifit_217": 85, "qtimodel_unconstrain": 85, "qtifit_unconstrain": 85, "sdpdc": [85, 167], "qtimodel_constrain": 85, "qtifit_constrain": 85, "\u00b5fa": 85, "compare_qti_map": [85, 174], "clearli": [85, 243], "fall": [85, 159, 171, 173, 176, 220, 223], "sound": [5, 85, 96], "rich": 85, "despit": 85, "cost": [85, 87, 96, 159, 167, 168], "dens": [85, 106, 159, 161, 166, 226], "boito": [85, 167, 226], "feragen": [85, 167], "238": [80, 82, 85, 129, 167, 219], "118198": 85, "hoge": [85, 162], "waveform": [85, 162], "oil": [85, 162], "liquid": [85, 162], "crystal": [85, 162], "brief": [85, 108, 109, 162], "dib": [85, 162], "104208": [85, 162], "reconst_qtiplu": 85, "priori": [86, 113, 167], "rl": 86, "richardson1972": 86, "constantinides1997": 86, "promot": [86, 161, 167, 168, 212, 217], "rudin1992": 86, "abil": [5, 86, 97, 133, 148, 154, 220], "wise": [86, 122, 164, 167, 169, 171, 173, 236, 237], "symmetric362": [86, 162, 163, 167], "constructor": [86, 159, 161, 164, 167, 169, 212, 220], "7e": [86, 167], "csf_respons": [86, 167, 173], "gm_respons": [86, 167, 173], "8e": [86, 167], "adequ": [86, 167], "impuls": [86, 167], "imprecis": [86, 167], "acqua2007": 86, "0017": [86, 167], "0002": [15, 86, 167], "003": [86, 136, 167, 173], "0008": [86, 167, 173], "default_respons": 86, "auto_response_sst": 86, "00139919": [68, 86, 87], "0003007": [68, 86, 87], "7372408293461": [68, 86, 87], "estimated_respons": 86, "arang": [86, 108, 109, 110, 111, 167, 169, 171], "rec_respons": 86, "rec_response_sign": 86, "doesn": [5, 19, 86, 161, 208, 209, 210, 212, 217, 226, 242], "bear": 86, "recon_typ": [86, 167, 173], "n_coil": [86, 167, 173], "suitabl": [86, 162, 164, 167, 230, 231], "smf": [86, 167, 173], "isn": [86, 138, 161], "ipat": [86, 167, 173], "asset": [86, 167, 173], "cover": [86, 94, 127, 159, 165, 210], "wherein": 86, "inclus": [86, 159, 171], "neither": [86, 161, 168, 171], "f_iso": [86, 167, 174], "ax0": 86, "wm_iso_partit": 86, "rumbafit": [86, 174], "combined_odf_iso": [86, 167, 174], "rumba_odf": 86, "rumba_peak": 86, "exchang": [69, 86, 167], "demand": 86, "gb": [86, 167], "singleton": [86, 167, 173, 209, 212], "data_tv": 86, "rumba_global_odf": 86, "peak_direct": [86, 174, 219, 227], "pk": 86, "rumba_global_peak": 86, "1972": [86, 220], "bayesian": [86, 113, 154, 210], "josa": 86, "1364": [76, 79, 86, 221], "000055": 86, "constantinid": [86, 167], "atalar": [86, 167], "mcveigh": [86, 167], "1997": [79, 86, 167, 213, 220], "offici": [86, 154, 155, 167], "852": [79, 86, 167, 210, 213], "857": [76, 79, 86, 167, 209], "rudin": [86, 167], "osher": [86, 167], "fatemi": [86, 167], "1992": [86, 167, 220], "nonlinear": [86, 97, 141, 145, 159, 162, 167, 173, 180, 224, 227, 236, 237], "physica": [86, 167], "phenomena": [86, 167], "259": [76, 79, 80, 86, 167, 216], "268": [76, 79, 80, 86, 112, 167, 216], "0167": [86, 161, 167], "2789": [76, 79, 86, 167], "90242": [86, 167], "dellacqua2007": 86, "rizzo": [86, 167], "scifo": [86, 167], "clark": [86, 167], "scotti": [86, 167], "fazio": [86, 167], "bio": [86, 167], "462": [76, 80, 86, 167, 217], "472": [79, 80, 86, 167, 217], "tbme": [86, 167], "888830": [86, 167], "07": [22, 37, 50, 58, 71, 76, 79, 80, 82, 86, 92, 162, 164, 167, 236, 237], "067": [86, 142], "reconst_rumba": [86, 92], "dpp": [87, 225], "guid": [12, 87, 110, 141, 161, 166, 212, 219, 222], "examin": [87, 99, 161, 167, 169, 228], "elast": [87, 167], "net": [87, 161, 166, 167, 171, 173, 186, 216], "zou2005": [87, 167], "y_i": [87, 165, 234], "hat": [2, 87, 140, 174], "lambda": [87, 110, 159, 163, 167, 208], "w_j": 87, "2_j": 87, "balanc": [87, 167], "l2": [87, 140, 161, 167, 168, 171], "autom": [19, 87, 101, 102, 103, 119, 152, 159, 170, 210], "entri": [19, 87, 159, 161, 167, 171, 208, 230], "put": [2, 87, 134, 137, 159, 167, 171, 173, 217], "sf_fit": 87, "sf_odf": 87, "sf_peak": 87, "sf_both": 87, "zou": [87, 167], "soc": [1, 87, 89, 161, 167], "320": [79, 80, 87, 167, 217], "reconst_sfm": [87, 92], "sf": [88, 161, 163, 164, 167, 213], "00015": 88, "symm_sign": 88, "seri": [6, 12, 19, 88, 94, 134, 137, 159, 168, 169, 171, 213, 217, 220, 221, 234], "sh_basi": [88, 167], "reproject": 88, "high_res_sph": 88, "symm_reconst": 88, "fail": [3, 19, 88, 94, 159, 165, 167, 208, 209, 210, 212, 213, 217, 218, 219, 221, 222, 225, 226, 243], "asymmetr": [88, 141, 159, 173, 200, 225, 227, 234], "odf2": 88, "n_pts_hemispher": 88, "int": [2, 79, 88, 130, 142, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 182, 183, 184, 185, 188, 189, 192, 193, 194, 195, 199, 200, 201, 202, 204, 205, 206, 210, 224, 226, 230, 232], "asym_odf": 88, "asym_sign": 88, "asym_reconst": 88, "deal": [88, 91, 168, 224, 225, 228], "full_basi": [88, 163, 167], "asym_reconst_ful": 88, "reconst_sh": [88, 92, 225], "merlet2013": 89, "\u00f6zarslan2008": 89, "\u00f6zarslan2009": 89, "shoremodel": [89, 90, 174], "fetch_isbi2013_2shel": [89, 174], "contest": 89, "xmin": 89, "xmax": 89, "ymin": 89, "ymax": 89, "zmin": 89, "zmax": 89, "zeta": [89, 167], "lambdan": [89, 167], "lambdal": [89, 167], "cheng2011": 89, "700": [76, 89, 167, 208, 236, 237], "asm": [89, 90, 167], "asmfit": [89, 90, 167], "proc": [1, 89, 161, 167], "intl": [1, 89, 167], "mag": [1, 89, 167], "toronto": 89, "honolulu": 89, "hi": [89, 161, 167], "eap": [89, 161, 167], "compress": [89, 126, 165, 167, 171, 173, 188, 189, 208], "cheng": [89, 166, 167, 169], "insight": [89, 167], "unifi": [89, 161, 167, 172, 173, 195], "reconst_shor": [89, 92], "shore_map": 90, "ON": [90, 161, 167, 168, 173], "reconst_shore_metr": [90, 92], "physiolog": [91, 167, 173, 191], "pernici": 91, "wrong": [5, 91, 161, 167, 209, 210, 211, 213, 215, 217, 218, 225], "particip": [91, 168], "young": 91, "children": [20, 91, 159, 161, 163, 167, 171, 173, 174, 194, 201], "prone": [2, 91, 159], "actual": [4, 5, 41, 91, 126, 137, 159, 161, 167, 168, 169, 171, 209, 210, 230, 231], "yendiki": 91, "yendiki2013": [41, 91, 156], "refit": 91, "chang2005": [41, 91, 156, 167], "intermitt": [91, 213, 219, 225], "ne": 91, "fetch_stanford_hardi": [91, 93, 94, 174], "dti_wl": 91, "roi_idx": 91, "fit_wl": 91, "fa1": 91, "evals1": 91, "evecs1": 91, "cfa1": 91, "tensor_ellipsoids_wl": 91, "noisy_data": 91, "noisy_idx": 91, "fit_wls_noisi": 91, "fa2": 91, "evals2": 91, "evecs2": 91, "cfa2": 91, "tensor_ellipsoids_wls_noisi": 91, "distort": [91, 147, 159, 166, 171], "dti_restor": 91, "fit_restore_noisi": 91, "fa3": 91, "evals3": 91, "evecs3": 91, "cfa3": 91, "tensor_ellipsoids_restore_noisi": 91, "convinc": 91, "ourselv": [91, 139], "chung2006": [41, 91, 156], "ravel": [91, 108, 110, 171, 215], "dti_fa_distribut": 91, "resembl": [91, 162], "importantli": 91, "believ": 91, "koldewynb": 91, "kakunooria": 91, "kanwish": 91, "fischl": 91, "reject": [91, 164, 167, 173, 190, 191], "1088": [76, 79, 91, 167, 173, 190, 191, 210], "chung": [91, 167, 222], "sw": [91, 167, 173, 191], "henri": [91, 122, 167, 173, 191], "uncertainti": [91, 138, 167, 173, 191], "531": [71, 79, 91, 167, 173, 191, 217], "541": [71, 76, 79, 82, 91, 167, 173, 191, 217], "restore_dti": [91, 92, 210], "maxim": [20, 93, 94, 96, 99, 101, 113, 152, 159, 161, 163, 164, 167, 168, 171, 173, 174, 176, 184, 188, 189, 194, 201, 202, 208, 215, 216, 217, 218], "mutual": [93, 94, 152, 159, 173, 175], "mattes03": [93, 94, 159], "ant": [93, 94, 101, 102, 103, 113, 152, 159], "avants11": [93, 94, 101, 102, 103, 152, 159], "twice": [93, 139, 161, 171, 210, 213], "simplifi": [93, 111, 139, 154, 159, 165, 167, 171, 212, 216, 222, 228], "regtool": [93, 94, 99, 101, 102, 103, 174, 217, 218, 221], "fetch_syn_data": [93, 174], "transform_centers_of_mass": [93, 174], "mutualinformationmetr": [93, 94, 101, 174], "affineregistr": [93, 94, 101, 174, 209, 225], "translationtransform3d": [93, 94, 101, 174], "rigidtransform3d": [93, 94, 101, 174], "affinetransform3d": [93, 101, 174], "static_data": [93, 94], "static_affin": [93, 94, 101, 103, 159], "static_img": [93, 94], "hardi150": [93, 94, 147, 151], "static_grid2world": [93, 94, 159], "folder2": 93, "moving_data": 93, "moving_affin": [93, 94, 101, 103, 159], "moving_img": 93, "moving_grid2world": [93, 94, 159], "affine_map": [93, 94, 101, 103, 159], "overlay_slic": [93, 94, 101, 103, 174], "resampled_0": 93, "resampled_1": 93, "resampled_2": 93, "rough": [93, 96], "c_of_mass": 93, "occupi": [93, 161, 167, 169], "roughli": [93, 101, 103, 119, 159, 168], "transformed_com_0": 93, "transformed_com_1": 93, "transformed_com_2": 93, "translat": [93, 94, 101, 127, 140, 152, 161, 168, 171, 173, 174, 175, 200, 219], "joint": [93, 159, 173, 175, 232], "margin": [93, 159, 171, 173, 175], "integ": [93, 127, 138, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 208, 210, 217, 221, 224], "consum": [37, 79, 93], "nbin": [93, 94, 101, 159, 168, 173, 175], "sampling_prop": [93, 94, 101, 173, 175], "stuck": [5, 93], "optima": 93, "pyramid": [93, 102, 103, 159, 173, 176], "flexibl": [93, 110, 163, 167, 168, 210, 234], "indirectli": 93, "coarsest": [93, 159, 173, 175], "medium": [93, 117, 173, 200], "finest": [93, 102, 103, 159, 173, 175], "level_it": [93, 94, 99, 101, 102, 103, 159, 173, 175, 176], "request": [2, 4, 5, 14, 93, 141, 154, 159, 162, 171, 172, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231], "configur": [2, 5, 9, 13, 93, 99, 102, 154, 166, 167, 220, 224, 241], "nx": [93, 161], "ny": [5, 20, 93, 161], "nz": [93, 161], "ahead": [5, 93, 130, 211], "affreg": [93, 94], "dictionari": [93, 130, 159, 161, 162, 165, 166, 167, 169, 171, 173, 205, 206, 213], "regtransform": 93, "params0": [93, 101, 159], "starting_affin": [93, 94, 101, 159, 173, 225], "transformed_trans_0": 93, "transformed_trans_1": 93, "transformed_trans_2": 93, "rigid": [93, 94, 96, 97, 101, 152, 168, 173, 174, 175, 180, 200, 202, 213, 219, 222, 225], "slight": [93, 139], "transformed_rigid_0": 93, "transformed_rigid_1": 93, "transformed_rigid_2": 93, "transformed_affine_0": 93, "transformed_affine_1": 93, "transformed_affine_2": 93, "affine_registr": [93, 94, 174], "register_dwi_to_templ": [93, 174], "center_of_mass": [93, 174], "string": [93, 134, 137, 142, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 185, 213, 214, 221, 222], "rigid_isosc": [93, 173, 174, 175], "rigid_sc": [93, 173, 174, 175], "xformed_img": [93, 94], "xformed_affine_0": 93, "xformed_affine_1": 93, "xformed_affine_2": 93, "bvals_fil": [93, 173, 193, 203], "bvecs_fil": [93, 173, 193, 203], "opposit": [93, 119, 159, 167, 212], "revers": [93, 110, 166, 167, 168, 235], "xformed_dwi": 93, "templat": [93, 99, 101, 159, 162, 167, 208, 210, 221, 236, 237], "reg_method": [93, 159], "aff": [93, 95, 159], "xformed_dwi_0": 93, "xformed_dwi_1": 93, "xformed_dwi_2": 93, "dwi_to_templ": 93, "matt": [20, 93, 94, 159, 211, 213, 219], "haynor": [93, 94, 159], "vessel": [93, 94, 159], "lewellen": [93, 94, 159], "eubank": [93, 94, 159], "pet": [93, 94, 159], "ct": [93, 94, 159, 167, 174, 225], "chest": [93, 94, 159], "avant": [93, 94, 101, 102, 103, 113, 152, 159], "tustison": [93, 94, 101, 102, 103, 113, 152, 159], "song": [93, 94, 101, 102, 103, 152, 159], "affine_registration_3d": [93, 100], "pixel": [94, 99, 147, 159, 163, 168, 171, 172], "circumst": 94, "cardiac": 94, "priorit": 94, "heart": [20, 94], "register_seri": [94, 174], "pad_bi": 94, "mode": [15, 94, 113, 142, 151, 159, 161, 163, 165, 166, 168, 169, 171, 172, 173, 174, 190, 191, 195, 201, 208, 211, 216, 217, 241], "constant_valu": 94, "affmat": 94, "co": [4, 19, 94, 126, 139, 159, 161, 169, 171, 234, 235], "sin": [94, 139, 161, 169, 171, 235], "deregist": 94, "centr": [20, 94, 138, 161, 162], "transl": 94, "static_mask": [94, 159], "moving_mask": [94, 159], "conveni": [12, 94, 134, 137, 159, 173], "reg_func": 94, "fignam": 94, "scope": 94, "except": [2, 4, 94, 143, 159, 161, 162, 163, 166, 167, 168, 171, 173, 212, 216, 218], "hopefulli": 94, "transformed_pipelin": 94, "border": [94, 133, 217], "troublesom": 94, "sz": 94, "pd": 94, "squares_st": 94, "int32": [94, 159, 171], "squares_mv": 94, "deregistered_squar": 94, "masked_stat": 94, "transformed_squar": 94, "pin": [94, 219, 226], "attempt": [3, 94, 167, 171, 220], "transformed_squares_mask": 94, "transformed_squares_mask_2": 94, "transformed_squares_mask_3": 94, "xform": [94, 159], "series_affin": [94, 159], "series_mask_1": 94, "series_mask_2": 94, "affine_registration_mask": [94, 100], "coregist": 95, "atla": [95, 105, 106, 119, 120, 143, 144, 162, 168, 170, 236, 237], "garyfallidis15": [95, 96, 105, 144, 152, 159, 173, 202], "shuffl": [95, 166], "pair": [69, 95, 127, 159, 161, 165, 167, 171, 172, 173, 180], "pairwis": [95, 96, 122, 159, 168], "centroid": [95, 105, 108, 110, 111, 119, 121, 159, 168, 170, 173, 174, 202], "streamlinear": [95, 96, 105, 174, 213, 217], "groupwise_slr": [95, 174], "read_five_af_bundl": [95, 174], "show_bundl": [95, 174], "basicconfig": 95, "arcuat": [95, 105, 106, 120, 130, 143, 144, 162], "fasciculi": 95, "57": [22, 29, 37, 50, 71, 76, 77, 79, 80, 82, 95, 167, 215, 236, 237], "save_a": [95, 172], "before_group_registr": 95, "nativ": [95, 96, 126, 130, 131, 142, 143, 144, 159, 165, 172, 173, 195, 202], "bundles_reg": 95, "after_group_registr": 95, "117": [76, 79, 80, 95, 96, 99, 111, 144, 152, 159, 162, 169, 173, 202, 215], "124": [76, 79, 80, 95, 96, 99, 111, 121, 125, 144, 152, 159, 162, 173, 202, 215], "simplif": [1, 95, 96, 108, 109, 110, 111, 119, 168, 171], "frontier": [1, 2, 95, 108, 109, 110, 111, 119, 142, 143, 144, 145, 154, 155, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "neurosci": [1, 20, 41, 95, 101, 108, 109, 110, 111, 119, 168, 171], "175": [1, 79, 80, 95, 108, 109, 110, 111, 119, 168, 171], "romerobascones22": 95, "romero": [95, 224, 225, 226], "bascon": [95, 224, 225, 226], "bundleatlas": 95, "atlas": [95, 159, 162, 236, 237], "bundle_group_registr": [95, 100], "garyfallidis14": [96, 142, 143, 144, 145, 159, 173, 202], "concept": [12, 96, 97, 121, 141, 231], "cingulum": [96, 121, 131, 162], "sleep": 96, "two_cingulum_bundl": [96, 121, 174], "cb_subj1": [96, 121], "cb_subj2": 96, "streamlinelinearregistr": [96, 174], "set_number_of_point": [96, 97, 108, 109, 126, 174, 208, 210, 211, 213, 217], "srr": 96, "srm": 96, "finish": [5, 15, 96, 102, 166, 217, 241], "cb_subj2_align": 96, "show_both_bundl": [96, 121], "lines_actor": [96, 101], "rotatez": [96, 121], "orang": [96, 101, 131], "before_registr": 96, "after_registr": 96, "stai": [96, 110, 230, 231], "bmd": [96, 159], "operatornam": [96, 139, 232, 235], "flip": [96, 101, 105, 159, 168, 171, 211, 221, 234], "mdf": [96, 97, 105, 108, 111, 159, 171, 173, 174, 180, 200, 221], "eq": [96, 159, 161, 167, 211], "row": [96, 106, 110, 126, 127, 133, 140, 159, 161, 162, 163, 165, 167, 168, 169, 171, 172, 219], "primarili": [96, 167], "visser": 96, "intact": [96, 159, 171], "x_": 96, "prove": 96, "nonneg": [96, 167, 171], "satisfi": [96, 161, 171], "inequ": [96, 161, 167], "formul": [96, 113, 161, 167, 230, 232], "underset": 96, "compos": [96, 159, 161, 167, 171, 173], "bundle_registr": [96, 100], "nonlinearli": [97, 145, 159, 173, 180], "chandio23": [97, 145], "chandio20": [97, 143], "uncin": [97, 143, 145], "streamwarp": [97, 174], "bundlewarp_vector_fil": [97, 174], "bundlewarp_shape_analysi": [97, 174], "fetch_bundle_warp_dataset": [97, 174], "unlist_streamlin": [97, 159, 174], "viz_two_bundl": [97, 174], "viz_vector_field": [97, 174], "viz_displacement_mag": [97, 174], "loaf": 97, "uf_l": [97, 143], "figshar": [97, 143, 144, 145, 236, 237], "test_bundles_for_dipi": [97, 145], "22557733": [97, 145], "bundle_warp_fil": 97, "s_uf_l_path": 97, "s_uf_l": [97, 145], "m_uf_l_path": 97, "m_uf_l": [97, 145], "uf_subj1": 97, "uf_subj2": 97, "static_and_mov": 97, "trade": [97, 145, 159, 173, 180], "deformed_bundl": [97, 159], "moving_align": [97, 159], "match_pair": 97, "warp_map": 97, "max_it": [97, 159, 168, 173, 180], "warp": [97, 99, 101, 102, 103, 145, 152, 159, 162, 172, 173, 176, 180, 224], "static_and_partially_deform": 97, "linearli": [97, 159, 171, 173, 180], "linearly_and_nonlinearly_mov": 97, "c1": [97, 162, 172], "points_align": [97, 172], "partially_vectorfield": 97, "partially_vectorfield_over_linearly_mov": 97, "partially_deformation_magnitude_over_linearly_mov": 97, "new_tractogram": 97, "partially_deformed_bundl": 97, "deformed_bundle2": 97, "dist": [19, 97, 110, 159, 161, 171, 173, 174, 180], "static_and_fully_deform": 97, "fully_vectorfield": 97, "fully_vectorfield_over_linearly_mov": 97, "fully_deformation_magnitude_over_linearly_mov": 97, "no_disk": [97, 159, 170, 173, 178, 179], "fully_deformed_bundl": 97, "chandio": [20, 97, 105, 120, 121, 143, 145, 159, 168, 170, 172, 173, 179, 180, 195, 200, 224], "biorxiv": [97, 124, 145, 159, 173, 180], "stnd": 97, "neurip": 97, "bundlewarp_registr": [97, 100], "skimag": [99, 168, 208, 210], "imwarp": [99, 101, 102, 103, 174, 210], "symmetricdiffeomorphicregistr": [99, 101, 102, 103, 174], "ssdmetric": [99, 102, 174], "ellips": [99, 161], "draw_ellips": 99, "rr": 99, "img_ref": 99, "img_in": 99, "show_imag": 99, "img_warp": 99, "fig_nam": 99, "axarr": [69, 99], "ssd": [99, 102, 152, 159, 167, 173, 176], "02f": 99, "step_length": [99, 159, 173, 176], "sdr": [99, 101, 102, 103, 212, 213, 226], "ndim": [99, 102, 161, 167, 169, 219], "inv_it": [99, 102, 159, 173, 176], "ss_sigma_factor": [99, 159, 173, 176], "opt_tol": [99, 159, 173, 176], "plot_2d_diffeomorphic_map": [99, 102, 174, 217], "register_binary_fuzzi": [99, 100], "greene17": 101, "ra": [40, 101, 130, 142, 161, 165, 168], "vox_siz": [101, 165, 171], "t2": [101, 162, 163, 171, 208, 236, 237], "mni": [101, 105, 143, 144, 162, 208, 210, 236, 237], "2x2x2": [101, 159], "fetch_mni_templ": [101, 174], "read_mni_templ": [101, 174], "img_t2_mni": 101, "new_zoom": [101, 159], "b0_idx_stanford": 101, "b0_data_stanford": 101, "skull": [101, 102, 103, 113], "b0_masked_stanford": 101, "mean_b0_masked_stanford": 101, "rigidli": 101, "eventu": 101, "syn": [101, 102, 103, 113, 152, 159, 208, 210, 225, 236, 237], "transform_origin": [101, 174], "mismatch": [101, 210, 213], "affine_reg": [101, 152], "rigid_map": 101, "bump": [19, 101, 225], "highres_map": 101, "avants09": [101, 102, 103, 152], "ccmetric": [101, 102, 103, 174, 210, 219], "warped_mov": [101, 102, 103, 152, 159, 173], "transformed_sagitt": 101, "transformed_coron": 101, "transformed_axi": 101, "whose": [101, 159, 171, 173], "extent": 101, "isocent": 101, "target_isocent": 101, "diag": [101, 159, 161, 167], "origin_affin": 101, "fov": 101, "mirror": [9, 101, 140, 161, 163, 174], "implicitli": 101, "mni_streamlin": 101, "deform_field": [101, 171], "get_forward_field": [101, 159, 174], "stream_to_current_grid": [101, 171], "current_grid_to_world": [101, 171], "stream_to_ref_grid": [101, 171], "ref_grid_to_world": [101, 171], "show_template_bundl": 101, "template_actor": 101, "streamlines_dsn_mni": 101, "epstein": [101, 102, 103, 152, 159], "gee": [101, 102, 103, 113, 152, 159], "correl": [41, 65, 101, 102, 103, 147, 152, 154, 159, 161, 167, 171, 173, 176, 210], "elderli": [101, 102, 103, 152, 159], "neurodegen": [101, 102, 103, 152, 159], "grafton": 101, "streamline_registr": [100, 101, 174], "fname_mov": 102, "reg_o": [102, 162], "fname_stat": 102, "reg_c": [102, 162], "overlay_imag": [102, 174], "input_imag": [102, 168], "letter": [2, 102, 171], "decis": 102, "dim": [102, 154, 159, 212, 226], "n_0": [102, 103], "n_1": [102, 103], "n_k": [102, 103, 167], "diffeomorphicmap": [102, 103, 172, 174, 222, 226], "forth": [102, 103], "diffeomorphic_map": 102, "direct_warp_result": 102, "warped_stat": [102, 103], "inverse_warp_result": 102, "callback_cc": 102, "statu": [4, 5, 12, 15, 102, 159, 171, 208, 220, 225], "react": [102, 212], "registrationstag": [102, 174], "scale_end": 102, "wmove": 102, "moving_imag": [102, 159], "wstatic": 102, "static_imag": [102, 159], "t1_name": 102, "b0_name": 102, "syn_data": [102, 103, 236, 237], "sigma_diff": [102, 159, 225], "callback": [102, 130, 133, 159, 161, 166, 172], "t1_slices_input": 102, "t1_slices_r": 102, "inv_warp": 102, "t1_slices_res2": 102, "diffeomorphic_map_b0": 102, "syn_registration_2d": [100, 102], "modal": [103, 159, 173, 176], "stanford_b0": 103, "stanford_b0_affin": 103, "b0_fname": 103, "syn_b0": 103, "syn_b0_affin": 103, "stanford_b0_mask": 103, "syn_b0_mask": 103, "suppos": [5, 103, 217], "pre_align": 103, "02783543e": 103, "00": [21, 22, 27, 29, 30, 33, 34, 37, 39, 40, 45, 50, 53, 58, 62, 68, 71, 72, 73, 76, 77, 78, 79, 80, 82, 89, 90, 92, 100, 103, 112, 116, 125, 129, 131, 136], "83019053e": 103, "07735639e": 103, "57654118e": 103, "34051706e": 103, "41918267e": 103, "66525861e": 103, "23579799e": 103, "34288908e": 103, "90262026e": 103, "80820307e": 103, "46216651e": 103, "00000000e": [53, 79, 103], "input_3d": 103, "syn_registration_3d": [100, 103, 208], "brain_extraction_dwi_1": [104, 112], "garyfallidis17": [105, 119, 144, 159, 168, 173, 197, 200, 202], "whole_brain_slr": 105, "get_two_hcp842_bundl": [105, 106, 119, 120, 174], "fetch_target_tractogram_hcp": [105, 106, 174], "fetch_bundle_atlas_hcp842": [105, 106, 120, 174], "get_bundle_atlas_hcp842": [105, 174], "get_target_tractogram_hcp": [105, 106, 174], "target_fil": 105, "target_fold": 105, "atlas_fil": [105, 120], "atlas_fold": [105, 120], "all_bundles_fil": 105, "sft_atla": 105, "atlas_head": 105, "sft_target": 105, "target_head": 105, "tractograms_initi": [105, 106], "qb_centroids1": 105, "qb_centroids2": 105, "x0": [79, 105, 159, 161, 168, 173, 202, 219], "rng": [105, 121, 159, 168, 171, 174, 221], "randomst": [105, 121, 159, 166, 168, 171], "slr_transform": [105, 173, 200], "npy": [105, 138, 143, 144, 165, 173, 208], "tractograms_after_registr": 105, "tri": [105, 159, 161, 164, 172], "kei": [2, 8, 40, 105, 130, 141, 145, 159, 161, 162, 165, 167, 170, 171, 173, 205, 206, 213, 214, 215, 217, 225, 236], "millimet": [105, 126, 138, 159, 167, 168], "model_clust_thr": [105, 168, 173, 200], "reduction_thr": [105, 168, 173, 200], "pruning_thr": [105, 168, 173, 200], "reduction_dist": [105, 168, 173, 200], "pruning_dist": [105, 168, 173, 200], "diferect": 105, "mam": [105, 168, 173, 200, 220], "neighbour": [105, 163, 171, 173, 194], "model_af_l_fil": [105, 106, 119, 120], "model_cst_l_fil": [105, 106, 119, 120], "sft_af_l": [105, 106, 120], "model_af_l": [105, 106, 119, 120], "17281532": [105, 106, 120], "55606842": [105, 106, 120], "92485857": [105, 106, 120], "360": [76, 80, 82, 105, 106, 120, 217], "46": [4, 21, 22, 27, 30, 33, 36, 37, 50, 71, 76, 79, 80, 82, 105, 106, 120, 125, 127, 167, 215], "028": [105, 106, 120], "89": [22, 33, 34, 37, 50, 71, 76, 77, 79, 80, 82, 99, 105, 106, 111, 113, 120, 142, 167, 209, 215, 224], "af_l_model_bundl": [105, 106], "rb": [105, 168, 223], "recognized_af_l": [105, 106], "af_l_label": 105, "recogn": [19, 105, 106, 168, 173, 174, 197, 200], "model_bundl": [105, 168, 170], "af_l_recognized_bundl": [105, 106], "reco_af_l": 105, "af_l_rec_1": 105, "af_l_org_1": 105, "af_l_recognized_bundle2": 105, "af_l_rec_2": 105, "af_l_org_2": 105, "af_l_recognized_bundle3": 105, "af_l_rec_3": 105, "af_l_org_3": 105, "rule": [2, 12, 105, 154, 159, 166, 171, 208], "thumb": [12, 105, 171], "r_recognized_af_l": 105, "r_af_l_label": 105, "pruned_streamlin": [105, 168], "af_l_refine_recognized_bundl": 105, "af_l_rec_refin": 105, "af_l_org_refin": 105, "sft_cst_l": 105, "model_cst_l": [105, 119], "cst_l_model_bundl": 105, "recognized_cst_l": 105, "cst_l_label": 105, "cst_l_recognized_bundl": 105, "reco_cst_l": 105, "cst_l_rec_1": 105, "cst_l_org_1": 105, "cst_l_recognized_bundle2": 105, "cst_l_rec_2": 105, "cst_l_org_2": 105, "cst_l_recognized_bundle3": 105, "cst_l_rec_3": 105, "cst_l_org_3": 105, "r_recognized_cst_l": 105, "r_cst_l_label": 105, "cst_l_refine_recognized_bundl": 105, "cst_l_rec_refin": 105, "cst_l_org_refin": 105, "recognit": [1, 105, 119, 144, 159, 168, 173, 197, 200, 202, 212, 236, 237], "chandio2020": [105, 120, 121, 168, 170, 173, 179, 200], "risach": [105, 120, 121, 143, 168, 170, 173, 179, 200], "bullock": [105, 120, 121, 143, 168, 170, 173, 179, 200, 225], "fc": [105, 120, 121, 143, 168, 170, 173, 179, 200], "koudoro": [20, 105, 120, 121, 130, 143, 168, 170, 172, 173, 179, 195, 200, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 224, 225, 226, 227], "harezlak": [105, 120, 121, 143, 168, 170, 173, 179, 200], "investig": [16, 105, 120, 121, 143, 145, 159, 167, 168, 170, 173], "rep": [105, 120, 121, 143, 168, 170, 171, 173, 179, 200], "17149": [105, 120, 121, 143, 168, 170, 173, 179, 200], "bundle_extract": [105, 112, 213, 220], "stonge2022": [106, 168], "fss": [106, 174], "faststreamlinesearch": [106, 174], "nearest_from_matrix_row": [106, 174], "hcp_file": 106, "faststreamlinessearch": 106, "ref_streamlin": [106, 168], "tree": [7, 106, 168, 171, 173, 174, 241], "max_radiu": [106, 168], "radius_search": [106, 168, 174], "cautiou": 106, "fs_tree_af": 106, "coo_mdist_mtx": 106, "ids_": 106, "ids_ref": 106, "col": [106, 133], "af": [106, 119, 120, 130, 161, 162], "nn_": 106, "nn_ref": 106, "nn_dist": 106, "colormap_lookup_t": [106, 122, 131, 133], "scale_rang": [106, 122, 131, 133], "lookup_colormap": [106, 122, 131, 133], "scalar_bar": [106, 122, 131], "af_l_recognized_bundle_dist": 106, "ref_color": 106, "af_l_model_bundle_reach": 106, "neuroinformat": [1, 2, 20, 106, 113, 141, 142, 143, 144, 145, 154, 155, 168, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "fast_streamline_search": [106, 112], "familiar": [108, 109], "get_streamlin": [108, 109], "fornix": [108, 109, 110, 111, 154, 162, 168], "identityfeatur": [108, 109, 174], "unalt": 108, "averagepointwiseeuclideanmetr": [108, 109, 119, 174], "nb_point": [108, 109, 119, 168, 171, 210], "qb": [108, 109, 110, 111, 119, 168, 212], "nb": [108, 109, 111, 167], "191": [80, 92, 108, 109, 111, 168, 216], "47": [22, 29, 34, 37, 40, 50, 59, 71, 76, 77, 79, 80, 82, 108, 111, 154, 159, 162, 168, 215, 223, 236, 237], "predetermin": 108, "fly": [5, 108, 109, 139], "perman": 108, "centerofmassfeatur": [108, 174], "graviti": [108, 159], "wiki": [108, 109, 110, 139, 161, 162, 167, 168], "euclideanmetr": 108, "belong": [108, 109, 110, 127, 143, 168, 170, 173], "create_colormap": [108, 109, 110, 111], "colormap_ful": [108, 109, 110, 111], "center_of_mass_featur": 108, "midpointfeatur": [108, 174], "halfwai": [108, 159], "midpoint_featur": 108, "arclengthfeatur": [108, 110, 174], "arclength_featur": 108, "vectorofendpointsfeatur": [108, 109, 110, 174], "extrem": [97, 108, 110, 121, 159, 168, 173, 180], "ambigu": 108, "cosinemetr": [108, 109, 110, 174], "vector_of_endpoints_featur": 108, "segment_clustering_featur": [108, 112], "won": [109, 119, 171, 213, 219, 221], "sumpointwiseeuclideanmetr": [109, 110, 174], "cosine_metr": 109, "segment_clustering_metr": [109, 112], "datum": [2, 110, 168], "n_i": [110, 126, 167, 171], "modular": [110, 172, 173, 195], "subclass": [110, 161, 167, 168], "capabl": [110, 130, 161, 167, 221], "hierarch": [110, 165], "clustermap": [110, 111, 174], "sphx_glr_examples_built_segmentation_segment_clustering_featur": [], "arc": [110, 159, 168], "redefin": 110, "infer_shap": [110, 174], "__init__": [110, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 210], "is_order_invari": [110, 168, 174], "educ": [110, 111], "neuroanatomi": [110, 111], "fornix_clusters_arclength": 110, "sphx_glr_examples_built_segmentation_segment_clustering_metr": [], "cosin": [110, 126, 161, 168], "minu": [110, 159, 161, 163, 164, 167, 168, 171, 173, 188, 189, 194, 201, 202], "en": [20, 110, 139, 161, 167, 168, 173, 213], "wikipedia": [110, 139, 140, 161, 167, 168, 235], "cosine_similar": [110, 166], "are_compat": [110, 165, 168, 174, 225], "shape1": [110, 168], "shape2": [110, 168], "v2": [110, 161], "cos_theta": 110, "arccosin": 110, "arcco": [110, 161, 168, 214, 235], "fornix_clusters_cosin": 110, "segment_extending_clustering_framework": [110, 112], "pickl": [111, 138, 174, 210], "save_pickl": [111, 138, 174], "10mm": [111, 168, 171], "upsampl": [111, 163, 168, 171], "101": [76, 79, 80, 111, 162, 215], "105": [76, 79, 80, 100, 102, 111, 215], "115": [76, 79, 80, 92, 99, 111, 211], "116": [76, 79, 80, 82, 97, 111, 163, 167, 215, 226, 234], "119": [76, 79, 80, 111, 163, 215, 223], "123": [76, 79, 80, 99, 111, 161, 215], "129": [76, 79, 80, 111, 154, 215], "144": [76, 79, 80, 111, 167, 209, 215], "148": [76, 79, 80, 111], "151": [79, 80, 111], "159": [79, 80, 111, 115, 116, 216], "167": [76, 79, 80, 111, 216], "180": [80, 111, 216, 236, 237], "185": [79, 80, 111, 216], "208": [76, 79, 80, 111, 216], "210": [76, 79, 80, 111, 216], "224": [40, 76, 79, 80, 94, 100, 111], "237": [71, 79, 80, 111, 216], "246": [76, 79, 80, 111], "249": [76, 80, 111, 216], "251": [76, 79, 80, 111, 127, 216], "267": [79, 80, 111, 216], "270": [79, 80, 111, 216], "280": [76, 79, 80, 111], "284": [76, 79, 80, 111, 222], "293": [79, 80, 111], "296": [27, 36, 76, 79, 80, 111], "297": [71, 76, 79, 80, 111, 236, 237], "299": [76, 80, 111, 217], "84": [22, 33, 34, 37, 50, 71, 76, 77, 79, 80, 82, 111, 215, 216], "83773804": 111, "92590332": 111, "32278442": 111, "10850525": 111, "84362793": 111, "91885376": 111, "40357208": 111, "112": [76, 79, 80, 99, 111, 215], "25676727": 111, "72930145": 111, "48336792": 111, "107": [76, 79, 80, 99, 111, 215], "60327911": 111, "13782501": 111, "23897552": 111, "102": [79, 80, 111, 162, 215], "5100708": 111, "29447174": 111, "04563904": 111, "97": [21, 22, 30, 34, 37, 50, 71, 76, 77, 79, 80, 82, 99, 111, 167, 169, 215, 219, 227], "46020508": 111, "54240417": 111, "82": [22, 29, 30, 34, 37, 50, 71, 76, 77, 79, 80, 82, 111, 215], "60240173": 111, "93": [22, 29, 30, 33, 37, 50, 71, 76, 77, 79, 80, 82, 111, 154, 209, 213], "14851379": 111, "84208679": 111, "78": [22, 29, 30, 33, 34, 37, 50, 71, 76, 79, 80, 82, 111, 215], "98937225": 111, "57682037": 111, "63652039": 111, "72344208": 111, "60827637": 111, "9391861": 111, "40846252": 111, "15874481": 111, "4484024": 111, "74534607": 111, "00262451": 111, "82582092": 111, "02451324": 111, "43942261": 111, "0697403": 111, "fornix_initi": 111, "fornix_centroid": 111, "fornix_clust": 111, "pkl": 111, "video": [12, 18, 111, 154], "segment_quickbundl": [111, 112, 208, 212, 216], "mrf": [113, 154, 174, 210], "zhang": [113, 168, 171], "zhang2001": 113, "avants2011": [113, 159], "fsl": [113, 162, 173, 191, 221, 230, 231], "atropo": 113, "strip": [113, 219], "img_ax": 113, "imgplot": 113, "img_cor": 113, "t1_imag": 113, "pad_inch": 113, "adult": 113, "100th": 113, "task": [5, 113, 171], "t0": [113, 161], "total_tim": 113, "final_seg": 113, "yellow": [4, 113, 127, 143], "light": 113, "bradi": 113, "cook": 113, "multivari": 113, "public": [5, 18, 19, 113, 139, 141, 154, 162, 167, 210], "381": [79, 80, 113, 217], "tissue_classif": [112, 113], "reconst_dsid_1": [115, 116], "barrier": 117, "media": 117, "rnh2015": 117, "multi_tensor_dki": [117, 174], "decompose_tensor": [117, 174], "from_lower_triangular": [117, 174], "small_64d": [117, 162, 169], "circ": [117, 167], "fie": 117, "signal_dki": 117, "signal_noisi": [117, 118], "decompos": 117, "dt_eval": 117, "dt_evec": 117, "signal_dti": 117, "simulated_dki_sign": 117, "simulate_dki": [116, 117], "someon": [5, 14, 118], "simulated_sign": 118, "cach": [118, 163, 171, 174, 215], "multi_tensor_simul": 118, "simulate_multi_tensor": [116, 118], "diverg": [119, 171], "yeatman2012": [119, 170], "dsa": 119, "metricspe": [119, 174], "grab": [119, 162], "bundles_path": 119, "fetch_bundles_2_subject": [119, 130, 131, 133, 174], "bundles_fold": 119, "cst_l_file": 119, "bundles_2_subject": [119, 130, 133, 162, 236, 237], "subj_2": [119, 162], "bundles_cst": 119, "af_l_fil": 119, "bundles_af": 119, "cst_l": [119, 143, 224], "af_l": [119, 120, 143, 144, 162, 168, 173], "pull": [4, 5, 7, 12, 14, 15, 119, 141, 154, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "cluster_cst_l": 119, "standard_cst_l": 119, "cluster_af_l": 119, "standard_af_l": 119, "oriented_cst_l": 119, "orient_by_streamlin": [119, 170, 174], "oriented_af_l": 119, "volumetr": 119, "fetch_bundle_fa_hcp": [119, 174, 236], "fa_affin": 119, "hcp_bundle_fa": 119, "w_cst_l": 119, "gaussian_weight": [119, 174], "w_af_l": 119, "profile_cst_l": 119, "profile_af_l": 119, "tract_profil": 119, "robert": [119, 170, 226], "dougherti": [119, 170], "nathaniel": [119, 170], "myall": [119, 170], "heidi": [119, 170], "feldman": [119, 170], "e49790": [119, 170], "afq_tract_profil": [119, 125], "assignment_map": [120, 174], "fasiculu": 120, "fake_tub": 120, "af_l_before_assignment_map": 120, "indx": 120, "si": [120, 171], "disks_color": 120, "af_l_after_assignment_map": 120, "bundle_assignment_map": [120, 125], "whatsoev": 121, "dissimilar": [121, 159], "bundle_shape_similar": [121, 125, 174, 222], "bundle1": [121, 131, 168, 171], "bundle2": [121, 131, 168, 171], "streamtube_actor": 121, "two_bundl": 121, "cluster_thr": [121, 142, 172, 173, 195], "clust_thr": [121, 168, 173, 200], "ba_scor": 121, "lenient": 121, "jordan_2018_plm": [122, 124], "cluster_confid": [122, 125, 174], "40mm": 122, "cci": [122, 171], "long_streamlin": 122, "hue": [122, 131], "satur": [122, 131], "lut_cmap": [122, 131], "hue_rang": [122, 131, 133], "saturation_rang": [122, 131, 133], "bar3": [122, 131], "stream_actor": [122, 130, 131], "pop": [122, 124, 132], "cci_streamlin": 122, "landscap": 122, "probe": [122, 164], "stabl": [122, 167, 217, 225], "phenomenon": 122, "lone": 122, "vote": 122, "lend": 122, "cci_histogram": 122, "histogram": [122, 126, 159, 161, 168, 172], "keep_streamlin": 122, "keep_streamlines_actor": 122, "filtered_cci_streamlin": 122, "jordan": [20, 122, 124, 171, 210, 212, 213, 214, 217], "keshavan": 122, "therapi": 124, "shortest": [124, 161, 171], "treatment": [124, 139], "gross": 124, "tumor": [124, 225], "gtv": 124, "mpl": [124, 172, 210, 217], "lesion": 124, "electrod": 124, "surface_opac": [124, 132], "surface_color": [124, 132], "seedroi_actor": [124, 132], "plm_roi_sl": 124, "transpar": [124, 132, 172, 173, 195], "hypothesi": 124, "motor": 124, "cortico": 124, "path_length_map_base_roi": 124, "wmpl": 124, "example_cc_path_length_map": 124, "ignor": [124, 159, 161, 163, 166, 167, 168, 170, 171, 213, 217, 221], "wmpl_show": 124, "masked_wher": 124, "slx": 124, "sly": 124, "slz": 124, "cool": [5, 14, 124], "path_length_map": [124, 125], "plan": [124, 140, 213, 219, 230, 231], "neuro": 124, "oncologi": 124, "approx_polygon_track": [126, 174, 225], "simulated_bundl": 126, "no_streamlin": 126, "randint": [126, 208, 214], "burlywood": 126, "length_histogram": 126, "2mm": 126, "bundle_downsampl": 126, "n_pts_d": 126, "curvi": 126, "bundle_downsampled2": 126, "n_pts_ds2": 126, "thought": [5, 126, 140], "lossi": 126, "bundle_actor": 126, "bundle_actor2": 126, "bundle_actor3": 126, "simulated_cosine_bundl": 126, "equidist": 126, "obviou": 126, "great": [126, 161], "n_pts_histogram": 126, "lengths_downsampl": 126, "lengths_downsampled2": 126, "id": [126, 161, 168, 172, 173], "lengths_plot": 126, "streamline_length": [125, 126], "meant": [127, 161, 163, 166, 167, 171], "labels_img": 127, "cc_streamlin": 127, "other_streamlin": 127, "assert": [4, 127, 212, 217, 222], "cc_streamlines_actor": 127, "corpuscallosum_axi": 127, "corpuscallosum_sagitt": 127, "return_map": [127, 161, 167, 171], "mapping_as_streamlin": [127, 171], "log1p": 127, "gyru": 127, "surpris": 127, "anyon": [5, 127], "tricki": 127, "literatur": [79, 127, 167, 234], "lr_superiorfrontal_track": 127, "dm": [127, 159, 171], "int16": [127, 142, 161, 165, 167, 169], "lr_sf_trk": 127, "footnot": 127, "aparc": [127, 162, 221], "aseg": 127, "mgz": 127, "remain": [5, 127, 159, 161, 162, 163, 167, 171, 230], "lie": [127, 161, 171], "label_info": 127, "txt": [2, 127, 137, 152, 165, 173, 175, 177, 209, 217, 221], "4x4": [127, 159, 161, 165, 172], "thin": [130, 164, 171], "tailor": [11, 130], "dialog": 130, "snapshot": [130, 143], "primit": 130, "button": [5, 8, 130, 133, 210, 219], "slider": [130, 172, 210, 212, 213, 225], "lineslider2d": 130, "read_bundles_2_subject": [130, 131, 174, 210], "subj_1": [130, 131, 133, 162], "cc_1": [130, 162], "1mm": [130, 168, 171], "world_coord": [130, 172], "image_actor_z": 130, "slicer_opac": 130, "image_actor_x": 130, "x_midpoint": 130, "round": [130, 161, 166, 167, 171, 209, 212, 217, 218], "image_actor_i": 130, "y_midpoint": 130, "image_actor": 130, "showmanag": [130, 133, 172], "show_m": [130, 133], "line_slider_z": 130, "min_valu": 130, "max_valu": [130, 167], "initial_valu": 130, "text_templ": 130, "0f": 130, "line_slider_x": 130, "line_slider_i": 130, "opacity_slid": 130, "change_slice_z": 130, "change_slice_x": 130, "change_slice_i": 130, "change_opac": 130, "on_chang": 130, "build_label": [130, 174], "textblock2d": [130, 133, 172, 212], "messag": [5, 15, 17, 18, 130, 133, 159, 161, 163, 167, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 213, 219, 220, 222, 225, 226], "font_siz": [130, 172], "font_famili": 130, "arial": 130, "justif": 130, "bold": [2, 4, 130, 172], "ital": 130, "shadow": 130, "background_color": 130, "line_slider_label_z": 130, "line_slider_label_x": 130, "line_slider_label_i": 130, "opacity_slider_label": 130, "panel2d": [130, 133, 212], "1030": [76, 79, 130, 210], "add_el": [130, 133], "screen": [130, 139, 162], "re_align": 130, "getsiz": 130, "win_callback": 130, "obj": [5, 130, 133, 159, 162, 165, 168, 173, 221], "size_old": 130, "size_chang": 130, "reset_clipping_rang": 130, "add_window_callback": 130, "bundles_and_3_slic": 130, "del": 130, "garyfallidis2021": 130, "eleftherio": [1, 18, 19, 20, 130, 171, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "serg": [20, 130, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 224, 225, 226, 227], "javier": [20, 130, 213, 225, 227], "guaj": [20, 130, 172, 173, 195, 213, 225, 227], "marc": [20, 130, 208, 209, 210, 211, 212, 213, 217, 218, 219], "alexandr": [20, 130, 208, 209, 210, 211, 212, 213, 217, 218, 219], "c\u00f4t\u00e9": [20, 130, 167, 208, 209, 210, 211, 212, 213, 218, 219], "soham": 130, "biswa": 130, "david": [130, 167, 208, 210, 211, 212, 213, 224, 225, 226], "reagan": [130, 172, 173, 195, 210, 211, 212, 213], "nasim": [130, 224, 225], "anousheh": [130, 224, 225], "filipi": 130, "silva": 130, "geoffrei": 130, "fox": 130, "contributor": [1, 2, 18, 19, 20, 130, 161, 168, 208, 210], "3384": [79, 130], "21105": [50, 130], "joss": [130, 219], "03384": 130, "viz_advanc": [129, 130, 213], "dix": [131, 162, 165], "subj_id": [131, 162], "bundle_n": 131, "176": [76, 79, 80, 131, 142, 216], "118": [76, 79, 80, 95, 100, 131, 215], "wonder": [20, 131], "knew": 131, "camera_info": 131, "focal": 131, "stream_actor2": 131, "bar": [2, 131, 154, 166, 167, 172, 210, 213, 222, 225], "stream_actor3": 131, "bar2": 131, "bundle3": 131, "stream_actor4": 131, "bundle4": 131, "stream_actor5": 131, "bundle5": 131, "stream_actor6": 131, "bundle6": 131, "summari": [3, 4, 9, 13, 18, 19, 131, 154, 165, 166, 174, 219], "viz_bundl": [129, 131], "decim": [132, 211], "contour_from_roi_tutori": 132, "viz_roi_contour": [129, 132], "fname_t1": 133, "exp_bundles_and_map": [130, 133], "t1_warp": 133, "value_rang": [133, 222], "slice_actor": [133, 172, 174], "slice_actor2": 133, "hsv": 133, "fname_fa": 133, "fa_1x1x1": 133, "lut": 133, "fa_actor": 133, "slices_lut": 133, "click": [5, 8, 133, 147, 148, 212], "label_posit": 133, "label_valu": 133, "result_posit": 133, "result_valu": 133, "panel_pick": 133, "left_click_callback": 133, "ev": 133, "event_po": 133, "iren": [133, 172], "geteventposit": 133, "picker": [133, 213], "getpointijk": 133, "8f": 133, "setinterpol": 133, "addobserv": 133, "leftbuttonpressev": 133, "perspect": [133, 161], "show_m_mosa": 133, "left_click_callback_mosa": 133, "cnt": [2, 133], "slice_mosa": 133, "drag": 133, "scroll": [133, 213], "wheel": [19, 133, 212, 213, 222, 224, 225, 226], "combinedworkflow": [134, 174], "organ": [1, 5, 134, 141, 159, 161, 162, 165, 166, 167, 168, 236, 237], "combined_workflow": [134, 174], "nlmeansflow": [134, 174], "medianotsuflow": [134, 174], "denoiseandseg": 134, "_get_sub_flow": 134, "commandlin": [134, 143, 173], "input_fil": [134, 137, 142, 173, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 201, 204], "out_dir": [134, 137, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 162, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 236], "out_fil": [134, 137, 173, 177, 203], "wildcard": [134, 137, 148, 150, 173, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 199, 201, 203, 205, 206], "out_": [134, 137], "front": [1, 2, 134, 137, 217, 219], "document": [3, 17, 18, 19, 41, 134, 137, 154, 159, 161, 162, 163, 165, 168, 171, 173, 208, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 242], "parser": [134, 137, 173], "io_it": [134, 137], "get_io_iter": [134, 137, 173, 174, 213], "in_fil": [134, 137], "nl_flow": 134, "run_sub_flow": [134, 173, 174], "last_generated_output": 134, "out_denois": [134, 173, 182, 183, 184, 185], "me_flow": 134, "ioiter": [134, 137, 174], "globbin": 134, "bit": [134, 137, 161, 209, 210, 212, 213, 217, 218, 230, 241], "flow_runn": [134, 137, 174], "run_flow": [134, 137, 174], "argpars": [134, 137, 173], "combined_workflow_cr": [134, 136], "forc": [14, 19, 134, 137, 142, 144, 145, 161, 163, 171, 173, 225], "overwrit": [134, 137, 166, 222], "wrote": [134, 137], "callabl": [137, 159, 161, 162, 164, 167, 170, 217, 221], "anywher": [20, 137, 167], "t1_denois": 137, "my_workflow": 137, "shutil": 137, "Will": [137, 162, 165, 166, 167], "appendtextflow": 137, "text_to_append": 137, "myfil": 137, "glob": 137, "anyth": [5, 15, 137, 159, 161, 171, 217, 224], "newli": 137, "comment": [2, 137, 208, 212, 215, 219, 221], "workflow_cr": [136, 137], "text_fil": 137, "brett": [1, 2, 4, 18, 19, 20, 142, 143, 144, 145, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 215, 216, 217, 218], "nimmo": [1, 2, 18, 20, 142, 143, 144, 145, 167, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 215], "16th": 1, "tsiara": 1, "vogiatzi": 1, "william": [1, 167], "chamberlain": 1, "sr": [1, 161], "hampshir": 1, "menzi": 1, "la": [1, 142], "grant": [1, 162], "je": 1, "odlaug": 1, "bl": 1, "craig": 1, "fineberg": 1, "sahakian": 1, "bj": 1, "trichotillomania": 1, "arch": 1, "gen": 1, "psychiatri": 1, "965": [1, 169, 210], "71": [1, 22, 30, 33, 37, 50, 67, 71, 75, 76, 79, 80, 82, 215], "nguyen": [1, 20], "olivetti": [1, 20, 215], "halchenko": [1, 6, 210, 215, 227], "17th": 1, "vj": 1, "tseng": 1, "wy": 1, "cote": [1, 172, 173, 195, 217], "rheault": [1, 171, 213, 214, 219, 220, 221, 225, 226, 227, 236, 237], "sidhu": 1, "hau": 1, "petit": 1, "fortin": 1, "cunann": 1, "ocegueda": [1, 20, 162, 208, 209, 210, 217, 218, 226], "wassermann": [1, 20, 162, 213, 217, 236, 237], "jd": 1, "kn": 1, "dalmau": 1, "rivera": 1, "rectangl": 1, "arbitrari": [1, 16, 159, 161, 165, 166, 167, 168, 171, 217, 231], "rafael": [1, 20, 154, 208, 210, 211, 213, 219, 220, 221, 222, 225], "samuel": [1, 20, 208, 209, 210, 215, 216, 217, 218], "eric": [1, 20, 210, 220, 222, 225, 226, 236, 237], "thoma": 1, "marta": 1, "morgado": 1, "marral": 1, "hum": 1, "390": [1, 76, 80, 208], "frontiersin": 1, "3389": [1, 79], "fnhum": 1, "675433": 1, "citat": [1, 208, 210, 211, 217, 222, 223, 225, 236, 237], "synthet": [41, 141, 162, 167, 236, 237], "phantom": [157, 162, 174, 236, 237], "anim": [172, 173, 195, 236, 237], "bundle_file_formats_exampl": [236, 237], "zenodo": [162, 236, 237], "5281": [162, 236, 237], "3352379": [236, 237], "202": [64, 76, 79, 80, 163, 167, 216, 234, 236, 237], "204": [79, 80, 216, 236, 237], "eddi": [162, 212, 236, 237], "cenir_multib": [220, 236, 237], "cfin": [162, 212, 236, 237], "1400": [142, 212, 236, 237], "1600": [79, 142, 213, 236, 237, 241], "1800": [76, 77, 79, 142, 219, 236, 237, 241], "2200": [76, 79, 142, 221, 236, 237], "2400": [73, 79, 90, 142, 236, 237], "2600": [79, 142, 226, 236, 237], "2800": [142, 236, 237], "496": [76, 79, 80, 142, 217, 227, 236, 237], "gold": [162, 236, 237], "gold_standard_io": [236, 237], "2651349": [236, 237], "hcp842": [162, 236, 237], "bundle_atlas_hcp842": [236, 237], "283": [76, 79, 80, 219, 236, 237], "macroscal": [143, 144, 236, 237], "topologi": [143, 144, 167, 171, 236, 237], "178": [76, 79, 80, 82, 216, 236, 237], "68": [22, 29, 30, 33, 34, 37, 50, 71, 76, 77, 79, 80, 82, 215, 236, 237], "advanced_atlas_of_80_bundles_in_mni_spac": [236, 237], "7375883": [236, 237], "bundle_fa_hcp": [236, 237], "target_tractogram_hcp": [236, 237], "recoveri": [5, 236, 237], "384": [76, 80, 217, 236, 237], "399": [79, 80, 217, 236, 237], "fetch_ivim": [174, 236, 237], "ivim_dataset": [236, 237], "3395704": [236, 237], "2009a": [162, 236, 237], "2009c": [162, 210, 236, 237], "mni_templ": [236, 237], "fonov": [162, 236, 237], "evan": [162, 236, 237], "botteron": [162, 236, 237], "almli": [162, 236, 237], "mckinstri": [162, 236, 237], "bdcg": [162, 236, 237], "issn": [161, 236, 237], "1053": [79, 162, 211, 236, 237], "8119": [162, 236, 237], "033": [62, 63, 162, 236, 237], "birth": [162, 236, 237], "adulthood": [162, 236, 237], "supplement": [161, 236, 237], "juli": [162, 236, 237], "s102": [162, 236, 237], "s1053": [162, 236, 237], "70884": [162, 236, 237], "icbm": [236, 237], "152": [27, 37, 76, 79, 80, 236, 237], "c57bl6": [162, 236, 237], "qtdmri_test_retest_2subject": [236, 237], "santin": [236, 237], "philipp": [221, 222, 223, 236, 237], "leherici": [236, 237], "petiet": [236, 237], "996889": [162, 236, 237], "scil": [162, 213, 236, 237], "lab": [219, 220, 221, 222, 236, 237], "snail": [162, 236, 237], "discoveri": [236, 237], "mr750": [236, 237], "fetch_stanford_pve_map": [174, 236, 237], "taiwan": [162, 236, 237], "ntu": [162, 236, 237], "308": [76, 79, 80, 217, 236, 237], "615": [71, 79, 82, 208, 236, 237], "923": [55, 76, 213, 236, 237], "1231": [76, 79, 210, 236, 237], "1538": [79, 213, 236, 237], "1846": [79, 219, 236, 237], "2462": [79, 236, 237], "2769": [79, 236, 237], "3077": [76, 79, 236, 237], "3385": [143, 236, 237], "3692": [236, 237], "nation": [20, 141, 236, 237], "hospit": [20, 236, 237], "fetchflow": [154, 174, 219, 220, 236], "available_data": [173, 236], "get_fetcher_datanam": [173, 174, 236], "fetch_flow": 236, "temporarydirectori": [226, 236], "languag": [2, 138, 212, 217, 220, 238], "cython": [17, 138, 154, 159, 161, 167, 168, 171, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 227, 238, 241], "h5py": [2, 138, 154, 165, 211, 213, 238, 241], "piec": [2, 159], "systemat": [2, 161], "stabil": [2, 167], "readabl": [2, 5], "toolkit": 2, "obscur": 2, "member": [2, 226], "decod": [2, 162], "effort": 2, "english": 2, "spell": [2, 221], "abid": 2, "pep8": [2, 3, 18, 208, 209, 210, 211, 218, 222], "conform": [2, 3, 167, 222], "syntax": [2, 167, 214, 222], "push": [2, 5, 12, 15, 16, 19], "complianc": 2, "editor": [2, 5, 138], "aspect": [2, 167], "shorthand": [2, 214], "npt": [2, 222], "sp": [2, 171, 221], "alia": [2, 4, 5, 161, 167, 168, 169, 171, 225], "cimport": 2, "prefix": [2, 3, 173], "cnp": [2, 161, 171, 224], "symbol": [2, 167], "cdef": [2, 171], "cpdef": 2, "ctypedef": 2, "statement": [2, 210, 217, 220, 221, 225], "char": [2, 171], "xf": 2, "clustermapcentroid": [2, 174], "pyarray_data": [2, 224], "npy_intp": [2, 161, 171, 210, 224], "pstr": 2, "qa": [2, 167, 170, 171], "stride": [2, 161, 166, 167, 169, 171], "tmp": [2, 5, 172, 173, 216, 217], "ftmp": [2, 217], "get_direction_c": 2, "bad": [2, 138, 210, 212, 213, 216, 220], "void": 2, "estimate_kernel_s": 2, "kernelmax": 2, "k2": [2, 164], "libc": 2, "stdlib": 2, "calloc": 2, "realloc": 2, "side": [2, 159, 163, 167, 173, 208], "colon": [2, 5], "c_extract": [2, 168], "data2d": 2, "nogil": [2, 159, 167], "awai": [2, 139, 171, 212], "whitespac": [2, 3, 213], "websit": [2, 19, 144, 145, 162, 208, 209, 212, 213, 214, 215, 217, 218, 220, 223, 229], "interleav": 2, "intermix": 2, "former": [2, 241], "rational": 2, "edit": [2, 4, 9, 12, 15, 19, 41, 241], "valid_exampl": 2, "restructuredtext": [2, 212, 222], "rst": [2, 210, 211, 212, 213, 216, 217, 221], "markup": [2, 212], "pars": [2, 173, 224], "content": [2, 4, 9, 13, 210, 211, 215, 220], "compil": [2, 19, 166, 167, 174, 208, 209, 212, 217, 218, 226, 241], "web": [2, 19, 162, 215, 217, 221], "enrich": 2, "encourag": [2, 20, 147], "acronym": 2, "referenc": [2, 159, 162, 167, 168, 217], "comma": [2, 173, 203, 225], "nameyear": 2, "garyfallidis2014": 2, "_specific_filenam": 2, "specific_filenam": 2, "cap": 2, "capit": 2, "lowercas": [2, 220, 221], "customari": 2, "underscor": 2, "font": [2, 222], "caption": 2, "face": [2, 161, 162, 163, 167, 169, 174, 215, 217], "backquot": 2, "inlin": [2, 208, 212], "devel": [2, 37, 72, 79, 84, 86, 97, 220, 241], "enclos": 2, "categori": [3, 163, 167, 171], "bf": [3, 15, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 227], "rf": [3, 138, 167, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 232], "refactor": [3, 5, 154, 208, 209, 212, 213, 215, 216, 217, 218, 219, 221, 222], "nf": [3, 4, 5, 141, 154, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "bw": [3, 210], "address": [3, 4, 211, 214], "bk": 3, "pl": [3, 20], "pylint": 3, "happier": 3, "relax": [3, 209, 217], "habit": [3, 18], "glanc": 3, "person": 4, "gitconfig": 4, "yourdomain": [4, 15], "ci": [4, 19, 154, 209, 210, 213, 219, 220, 221, 222, 227], "commit": [4, 6, 12, 15, 17, 18, 19, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "checkout": [4, 5, 12, 14, 15, 19], "br": 4, "branch": [4, 6, 9, 12, 14, 15, 16, 19, 168, 171, 209, 210, 220], "wdiff": 4, "vim": [4, 19, 138], "config": [4, 12, 15, 173, 208, 213, 217, 218, 227], "simplest": [4, 15], "lg": [4, 5], "graph": [4, 5, 6, 14, 171, 174, 219], "cred": 4, "creset": 4, "cgreen": 4, "cr": [4, 162], "abbrev": 4, "date": [4, 165, 209, 210], "6d8e1e": 4, "my": [4, 5, 14, 138, 209, 210, 215, 221, 225], "ago": 4, "matthew": [4, 18, 19, 20, 208, 209, 210, 212, 213, 215, 216, 217, 218], "d304a73": 4, "placehold": [4, 159], "48": [4, 22, 27, 30, 33, 34, 35, 37, 50, 71, 76, 79, 80, 82, 162, 167, 210, 215], "hhuuggoo": 4, "week": 4, "jonathan": 4, "terhorst": 4, "4aff2a8": 4, "test_bugfix": 4, "hugo": 4, "a7ff2e5": 4, "summit": 4, "corran": 4, "webster": 4, "68f6752": 4, "axisindex": 4, "index_bi": 4, "sketchi": 4, "corr": 4, "376adbd": 4, "b605216": 4, "joshu": 4, "2e991e8": 4, "ufunc": [4, 208, 225], "7beda5a": 4, "throw": [4, 212, 219], "65af65": 4, "956fbab": 4, "remot": [4, 5, 12, 14, 15, 16, 162], "upstream": [4, 5, 12, 14, 15, 19], "thank": [4, 6, 15, 19, 167], "yuri": 4, "zaytsev": 4, "post": [4, 12, 159, 229], "fork": [5, 9, 13, 15, 215], "git": [5, 6, 7, 11, 13, 14, 15, 16, 17, 19, 212, 241], "bugfix": [5, 208], "databas": 5, "yourself": [5, 8, 16], "mail": [5, 15, 19, 20, 161, 208, 229, 241, 242], "linux": [5, 12, 19, 142, 213, 218, 222, 223, 228], "strang": [5, 213, 222], "confus": [5, 167, 217, 225], "link": [5, 12, 14, 19, 143, 161, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 225, 226], "repo": [5, 14, 15, 19, 217, 221, 224], "branchnam": 5, "remind": [5, 14, 139, 213], "hack": [5, 15], "my_new_fil": 5, "readm": [5, 19, 208, 209, 210, 211, 212, 213, 217, 219, 220, 221, 225], "untrack": 5, "new_file_nam": 5, "faith": [5, 15], "tangl": 5, "url": [5, 16, 162, 210, 217, 221], "dropdown": 5, "menu": [5, 213], "attent": 5, "complic": 5, "happi": [5, 18, 20, 208, 217, 229], "preliminari": [5, 167], "unwant": 5, "stuff": [5, 11, 14, 17, 215, 217, 219, 224], "clone": [5, 7, 12, 15, 19, 241], "githhub": 5, "rememb": [5, 14, 19], "ssh": [5, 8, 19], "enh": [5, 208, 210, 211, 212, 213, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227], "graphic": 5, "gitk": 5, "fanci": 5, "mayb": [5, 19, 159, 163, 167, 171, 220], "meantim": 5, "sternli": 5, "advis": [5, 161, 167, 168, 173], "messi": 5, "situat": [5, 139], "replai": [5, 172], "tear": 5, "backup": 5, "succinctli": 5, "conflict": [5, 19, 173, 212, 241], "man": 5, "luckili": 5, "straightforward": [5, 166], "mistak": [5, 138, 165, 219, 221], "abort": [5, 213], "reset": [5, 161, 173, 174], "forgot": 5, "reflog": 5, "8630830": 5, "immedi": [5, 139, 241], "278dd2a": 5, "11ee694744f2552d": 5, "26aa21a": 5, "seek_gzip_factori": 5, "leak": [5, 208, 217], "gzip": 5, "botch": 5, "embarrass": 5, "typo": [5, 141, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 227], "perhap": [5, 222], "poster": 5, "onelin": [5, 14], "eadc391": 5, "a815645": 5, "2dec1ac": 5, "13d7934": 5, "6ad92e5": 5, "maskedconst": 5, "29001ed": 5, "nep": [5, 222], "copul": 5, "structured_array_extens": 5, "sensibl": [5, 14], "reword": [5, 216], "amend": 5, "squash": [5, 167, 215], "meld": 5, "fixup": [5, 215], "THAT": 5, "WILL": 5, "BE": [5, 20, 161, 168, 173], "ii": [5, 161, 171], "collaps": [5, 139], "revis": [5, 19], "detach": 5, "721fc64": 5, "foo": 5, "0f22701": 5, "79": [5, 22, 33, 37, 50, 71, 76, 77, 79, 80, 82, 90, 215], "successfulli": [5, 234], "sophist": 5, "went": 5, "yarik": 6, "imagin": [6, 139, 142, 161, 167, 171], "repositori": [7, 14, 15, 18, 241], "cd": [7, 15, 16, 19, 142, 241], "paus": 8, "hardcor": 8, "trunk": [9, 16, 19], "review": [9, 19, 225], "debian": [10, 217], "ubuntu": [10, 210, 213, 221, 225], "sudo": [10, 19, 241], "apt": [10, 241], "fedora": 10, "yum": [10, 241], "msysgit": 10, "osx": [10, 19, 154, 208, 210, 213, 220, 222], "comprehens": [11, 69], "host": 11, "servic": [11, 19, 161, 168, 173], "quicker": 11, "excel": [12, 15, 161], "pro": [12, 209], "book": [12, 168, 212], "depth": [12, 159, 161, 165, 166, 167, 168, 172, 173, 195], "cheat": 12, "sheet": 12, "cast": [12, 79, 165, 166, 167, 173, 208, 210], "snippet": [12, 214, 239], "tos": 12, "magic": 12, "parabl": 12, "foundat": [12, 141], "fernando": 12, "perez": 12, "tip": [12, 139, 222], "svn": 12, "crash": [12, 210, 212, 213, 219], "subvers": 12, "linu": 12, "torvald": 12, "histori": [12, 161, 166, 217], "onlin": [13, 209, 216, 228], "peopl": [14, 138, 231], "Being": 14, "scari": 14, "rw": [14, 19], "incorpor": [14, 159], "rebas": [14, 19, 210, 211, 212, 213, 214, 216], "ff": [14, 168], "rejoin": 14, "compact": [14, 140, 171], "discov": 15, "quickest": 15, "email": [15, 208], "somewher": 15, "test_my_bug": 15, "funni": 15, "send": [15, 18, 20, 241, 242], "warmli": 15, "unmodifi": 15, "0001": [15, 167], "refresh": 15, "pointer": 15, "accident": [16, 209], "deliber": [16, 161], "satisfact": 16, "checklist": 17, "upload": [17, 210, 212, 227], "guidelin": [17, 18, 154, 211, 212, 214, 225, 242], "futur": [19, 159, 164, 165, 219, 221], "divis": [167, 210, 213, 217], "xrang": [], "seek": 18, "courag": 18, "willing": 18, "ian": [18, 20, 171, 215], "bago": [18, 20, 208, 209, 210, 212, 215, 216, 217, 218], "primari": [18, 167], "nipi": [18, 19, 141, 161, 210, 215, 216, 221, 224, 229, 241, 243], "pitch": [18, 139, 161], "feedback": 18, "hope": [18, 241, 243], "enjoi": 18, "apologi": 18, "outstand": 19, "delai": [19, 165], "travi": [19, 208, 209, 210, 211, 212, 213, 214, 217, 220, 221, 222], "inde": 19, "pr": [19, 72, 167, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "changelog": [19, 208, 217, 218, 221], "shortlog": 19, "tag": [19, 167, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "opportun": [19, 138], "mailmap": 19, "duplic": [19, 161, 162, 163, 167, 171, 208, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 227], "author": [19, 159, 162, 168, 173, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "copyright": [19, 159, 161, 162, 168, 173, 209, 210, 213, 217], "conf": [19, 161, 210], "licens": [19, 159, 162, 217], "pyx": [19, 161, 210, 211, 216, 217, 224], "doctest": [19, 161, 209, 211, 215, 216], "doctest_extmod": 19, "buildbot": [19, 208, 210, 216, 217, 218, 222, 228], "long_descript": 19, "diffthi": 19, "distclean": 19, "fxd": [19, 241], "build_ext": [19, 241], "sv": [19, 161, 162], "moment": [19, 159, 167], "autodoc": 19, "builder": 19, "yml": [19, 210], "appveyor": [19, 154, 213, 220, 221], "trigger": [19, 161, 215], "macpython": 19, "privileg": 19, "trick": [19, 167, 173], "pypi": 19, "_version_extra": 19, "setuptool": [19, 227, 241], "intro": [19, 165, 213], "sdist": [19, 226], "gztar": 19, "pypirc": 19, "server": 19, "password": 19, "login": 19, "mainten": [19, 209, 222], "maint": [19, 208, 210, 216, 217, 219, 220, 221, 223, 225, 226], "dev": [19, 159, 173, 176, 209, 210, 211, 213, 217, 218, 241], "_version_micro": 19, "_version_minor": 19, "bdist32": 19, "ex": [19, 167, 171, 173, 203], "bic": 19, "berkelei": [19, 20, 155], "win32": [19, 217], "admin": 19, "python26": 19, "bdist_egg": 19, "bdist_wininst": 19, "bdist": 19, "mpkg": [19, 216], "egg": 19, "dmg": [19, 216], "permiss": [19, 161, 162, 168], "build_dmg": 19, "box": [19, 165, 168, 171, 173, 199, 203, 212], "bdist_mpkg": 19, "reown_mpkg": 19, "announc": [19, 213], "fear": 19, "trembl": 19, "advic": [161, 213], "howto": [], "pyport": [], "python3port": [], "ptgmedia": [], "pearsoncmg": [], "imprint_download": [], "informit": [], "python2python3": [], "__future__": 221, "print_funct": [], "absolute_import": [], "configpars": [], "python3": [77, 79, 210, 211, 220], "builtin": [], "namespac": [159, 161, 165, 166, 167, 168, 173, 221], "functool": [], "unicod": [], "my_str": [], "byte": [161, 167, 169, 174, 215, 219], "rt": [167, 173, 191], "stringio": [], "bytesio": [], "basestr": [], "string_typ": [], "isinst": [], "a_vari": [], "meanwhil": 152, "gone": [], "__next__": [], "valueerror": [159, 161, 163, 167, 171, 208, 217, 219, 227], "err": [], "has_kei": [], "hello": [], "item": [161, 162, 165, 167, 169, 171, 225], "iteritem": [], "team": [20, 155, 168], "indiana": [20, 141], "IN": [20, 161, 167, 168, 173], "usa": 20, "birmingham": 20, "uk": [20, 161], "databrick": 20, "san": [20, 161, 173, 205], "francisco": [20, 173, 205], "ca": [20, 138, 155, 167], "omar": [20, 208, 209, 210, 217, 218, 226], "googl": [20, 141, 154, 220, 241], "microsoft": 20, "qc": 20, "gabriel": [20, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 221, 224, 225, 227], "swiss": 20, "feder": 20, "epfl": 20, "lausann": 20, "ch": 20, "matthieu": [20, 209, 210, 211, 216, 217], "dumont": [20, 209, 210, 211, 216, 217], "imeka": 20, "ranveer": [20, 210, 211], "aggarw": [20, 172, 173, 195, 210, 211], "hyderabad": 20, "telangana": 20, "india": 20, "retir": [20, 208, 213], "formerli": 20, "mrc": 20, "cognit": 20, "california": [20, 173, 205], "christoph": [20, 161, 208, 209, 210, 212, 213, 214, 216, 217, 219, 221], "houd": [20, 171, 208, 209, 210, 212, 213, 214, 216, 217, 219, 221], "francoi": [20, 213, 214, 219, 220, 221, 225, 226, 227], "rh\u00e9ault": 20, "utrecht": 20, "nl": [20, 167], "michael": [20, 208, 215, 217], "paquett": [20, 208, 215, 217], "planck": 20, "leipzig": 20, "de": 20, "massachusett": 20, "emanuel": [20, 215], "laboratori": 20, "nilab": 20, "trento": 20, "IT": 20, "yaroslav": [20, 210, 215, 227], "halchenco": 20, "pb": 20, "depart": [20, 141], "dartmouth": 20, "nh": 20, "emmanuel": [20, 216, 226], "recherch": 20, "informatiqu": 20, "syst\u00e8m": 20, "al\u00e9atoir": 20, "irisa": 20, "renn": 20, "fr": [20, 167], "sylvain": [20, 163, 173, 184, 216], "inria": [20, 167], "sophia": [20, 167, 169], "antipoli": [20, 167, 169], "erick": 20, "ziegler": [20, 216], "universit\u00e9": 20, "li\u00e8g": 20, "kimberli": [20, 167, 216], "chantal": [20, 218], "cardiff": 20, "demian": [20, 162, 213, 217], "mauro": [20, 208, 212, 216, 217], "franc": 20, "gregori": [20, 209, 210, 217, 221, 222], "lee": [20, 167, 171, 209, 210, 217, 221, 222], "cincinnati": 20, "oh": 20, "endolith": [20, 215], "york": 20, "matthia": [20, 216, 217], "ekman": [20, 216, 217], "donder": 20, "nijmegen": 20, "andrew": [20, 143, 217], "lawrenc": [20, 217, 220], "kesshi": [20, 210, 212, 213, 214, 217], "maria": [20, 215], "luisa": [20, 215], "mandelli": [20, 215], "adam": [20, 166, 219], "rybinski": 20, "jagiellonian": 20, "krakow": 20, "qiyuan": [20, 218], "tian": [20, 218], "jon": [20, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 225, 226], "haitz": [20, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 225, 226], "legarreta": [20, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 225, 226], "gorro\u00f1o": [20, 211, 212, 213, 214, 219, 220, 221, 222, 223, 225, 226], "champalimaud": 20, "programm": 20, "lisbon": 20, "stephan": [20, 209, 210], "eindhoven": 20, "himanshu": [20, 209], "mishra": [20, 209], "indian": 20, "karaghpur": 20, "gauvin": [20, 208, 210], "oscar": [20, 208], "esteban": [20, 208], "bishakh": [20, 209, 210], "ghosh": [20, 209, 210], "durgapur": 20, "dimitri": [20, 208], "rozaki": [20, 208], "tomotech": 20, "athen": 20, "rohan": [20, 208], "prinja": [20, 208], "bombai": 20, "sagun": [20, 209], "pai": [20, 209], "vatsala": [20, 209], "swaroop": [20, 209], "mombai": 20, "shahnawaz": [20, 210], "ahm": [20, 210], "birla": 20, "pilani": 20, "goa": 20, "nil": [20, 210, 212], "goyett": [20, 210, 212], "scott": [20, 219], "trinkl": [20, 219], "chicago": 20, "il": 20, "kevin": [20, 219], "sitek": [20, 219], "mit": [20, 159], "mcgovern": 20, "derek": [20, 220, 221, 225], "pisner": [20, 220, 221, 225], "texa": 20, "austin": 20, "ross": [20, 220], "john": [20, 224], "hopkin": 20, "larson": [20, 220, 222, 225, 226], "jakob": [20, 213], "wasserth": [20, 213], "german": 20, "cancer": 20, "bramsh": [20, 213, 214, 221, 222, 223, 224, 227], "qamar": [20, 213, 214, 221, 222, 223, 224, 227], "pennsylvania": 20, "sven": [20, 210], "dorkenwald": [20, 210], "princeton": 20, "boundless": 20, "everyon": 20, "mission": [], "boot": [157, 174, 210], "dipy_align_affin": [152, 207], "dipy_align_syn": [152, 207, 222], "dipy_apply_transform": [152, 207], "dipy_buan_lmm": [143, 207], "dipy_buan_profil": [143, 207], "dipy_bundlewarp": [145, 207], "dipy_correct_mot": [150, 207], "dipy_denoise_lpca": [147, 207], "dipy_denoise_mppca": [147, 207], "dipy_denoise_patch2self": 207, "dipy_evac_plu": 207, "dipy_fetch": [142, 146, 207, 220], "dipy_fit_csa": [142, 151, 207, 219], "dipy_fit_csd": [151, 207, 219], "dipy_fit_dki": [151, 207], "dipy_fit_dti": [142, 151, 207, 219, 226], "dipy_fit_ivim": [151, 207], "dipy_fit_mapmri": [151, 207], "dipy_gibbs_ring": [148, 207], "dipy_horizon": [142, 143, 144, 145, 207, 219, 222, 225], "dipy_info": [142, 207], "dipy_labelsbundl": [144, 207], "dipy_mask": [142, 153, 207], "dipy_median_otsu": [142, 151, 207], "dipy_recobundl": [144, 207], "dipy_reslic": 207, "dipy_slr": [144, 152, 154, 207], "dipy_snr_in_cc": 207, "dipy_split": 207, "dipy_track_pft": [153, 207], "paradigm": [138, 230], "bloch": 138, "torrei": 138, "pgse": [138, 230, 231, 232], "readout": 138, "gamma": [138, 139, 163, 167, 230], "gyromagnet": [138, 230], "width": [138, 159, 167, 172, 230], "wave": [138, 162, 167, 232], "proport": [138, 159, 166], "stand": [138, 166], "gather": [138, 173, 175], "mobil": 138, "molecul": 138, "movement": 138, "counterintuit": 138, "dephas": 138, "dwmri": 138, "speak": 138, "plenti": 138, "nonisotrop": [138, 217], "textrm": [138, 167], "batteri": 138, "painless": 138, "noth": [138, 159, 219], "ever": 138, "consol": [138, 241], "dicom": [138, 219], "npz": [138, 162, 213], "pydicom": 138, "v4": 138, "v6": 138, "v7": 138, "loadmat": 138, "pytabl": [138, 154, 210, 211], "hdf5": [138, 154, 165, 166, 210, 220], "serial": [138, 167], "load_pickl": [138, 174], "huge": [138, 173, 200, 228], "pycharm": 138, "sublim": 138, "aptana": 138, "emac": 138, "eclips": 138, "pydev": 138, "chri": [138, 143, 213], "rorden": 138, "dcm2nii": 138, "cabiatl": [], "mricro": [], "mricron": 138, "reader": [138, 174], "openli": 138, "grade": 138, "fcon_1000": 138, "nitrc": 138, "humanconnectom": [138, 162], "openneuro": 138, "gimbal_lock": [139, 221], "euler": [139, 140, 161, 221], "defici": 139, "indistinguish": 139, "spitfir": 139, "aircraft": 139, "tail": 139, "wing": 139, "roll": [139, 161], "tilt": 139, "violent": 139, "straight": [139, 171], "wait": 139, "pm": [139, 167, 230, 231], "radian": [139, 161, 164, 171, 230], "smallmatrix": 139, "pm1": 139, "proof": 139, "mathworld": [139, 140, 161, 235], "rewrit": 139, "v_": [139, 161, 167], "v_1": [139, 168], "v_2": [139, 168], "conclus": 139, "gregslabaugh": 139, "homogen": [140, 159, 161, 167, 169], "theorem": 140, "boldsymbol": 140, "x_1": 140, "x_n": 140, "pythagora": 140, "gimbal": 140, "lock": [140, 167], "quaternion": 140, "suffer": [140, 167], "orthogon": [140, 167, 171, 234, 235], "transpos": [140, 159, 161, 167, 169, 172], "synonym": 140, "paragon": 141, "special": [141, 159, 161, 163, 166, 167, 168, 173], "synb0": [141, 162, 174, 227], "cnn": [141, 174, 227], "horizon": [141, 154, 173, 174, 195, 214, 219, 220, 221, 222, 225, 227], "older": [141, 167, 210, 212, 213, 215, 217], "april": [141, 155], "march": [141, 155], "past": 141, "dec": [142, 165, 213, 239], "colorfa": [215, 239], "exercis": 239, "filepath": [166, 239], "acknowledg": [141, 219], "intellig": 141, "bioengin": 141, "nih": [141, 165, 214], "gordon": 141, "betti": 141, "moor": [141, 167, 171], "alfr": 141, "sloan": [141, 167], "escienc": 141, "summer": [141, 154, 155, 220], "facil": 141, "gotten": 241, "greatest": 241, "bleed": 241, "platform": [148, 217, 241], "conda": [208, 210, 211, 213, 218, 241], "forg": 241, "appl": [161, 241], "xcode": 241, "mint": 241, "neurodebian": 241, "mac": [142, 209, 213, 222, 226, 228, 241], "big": [151, 161, 167, 173, 193, 211, 217, 219, 241], "uninstal": 241, "__file__": 241, "canopi": 241, "pythonxi": 241, "64bit": [154, 241], "alloc": [159, 161, 167, 169, 174, 241], "chunk": [167, 241], "32bit": [218, 241], "okai": 241, "among": [171, 241], "temporari": [159, 164, 165, 167, 171, 226, 241], "old": [154, 213, 215, 217, 221, 222, 241], "pythonpath": 241, "bashrc": 241, "bash_profil": 241, "retyp": 241, "export": [172, 241], "user_dir": 241, "restart": 241, "cmd": [213, 241], "powershel": 241, "python_compil": 241, "msc": 241, "1900": [79, 220, 241], "amd64": 241, "visualstudiobuildtool": 241, "msc_ver": 241, "1700": [214, 241], "1910": [79, 219, 241], "unabl": [167, 210, 217, 222, 241], "vcvarsal": 241, "bat": 241, "reinstal": 241, "multithread": [154, 241], "gcc": 241, "clang": 241, "brew": 241, "multilib": 241, "bash": 241, "usr": 241, "cellar": 241, "omp": [210, 241], "hombrew": 241, "hour": [162, 241], "encount": [72, 79, 84, 86, 241], "build_modref_templ": 241, "docgen_cmd": 241, "reference_cmd": 241, "examples_built": 241, "make_exampl": 241, "traceback": [162, 163, 171, 241], "modulenotfounderror": [220, 241], "virtual": 241, "sphinxbuild": 241, "path_to_sphinx": 241, "mkdir": [142, 143, 144, 146, 147, 148, 150, 151, 152, 153], "data_fold": [142, 146], "__dti_ax_ep2d_2_5_iso_33d_20141015095334_4": [142, 147, 151], "mv": 142, "uint16": [142, 208], "888": [77, 142, 210], "avg": [142, 171], "940581408413976": 142, "percentil": [142, 172], "98th": 142, "psr": 142, "569": [71, 76, 79, 82, 142, 218], "451": [79, 80, 142, 217], "131": [76, 79, 80, 142, 215], "289": [79, 80, 142, 154, 216, 219], "1257": [142, 210], "62918037280702": 142, "234": [76, 79, 80, 142, 216], "498": [76, 79, 142, 217], "084": 142, "641": [71, 79, 142, 213], "069": 142, "488": [76, 79, 142, 217], "104": [76, 79, 80, 142, 215], "082": 142, "486": [76, 79, 142, 217], "504": [82, 100, 101, 142, 217], "elef": 142, "b0_thr": 142, "out_work": 142, "ga": [142, 167, 173, 174, 190, 191], "fastest": 142, "out_mask": [142, 173, 186, 198, 199], "pam5": [142, 143, 153, 154, 165, 173, 220], "out_tractogram": [142, 173, 205, 206], "tracks_from_peak": 142, "tracking_method": [142, 153, 173, 205], "random_color": [142, 144, 145, 172, 173, 195, 225], "length_gt": [142, 172, 173, 195], "length_lt": [142, 172, 173, 195], "clusters_gt": [142, 172, 173, 195], "clusters_lt": [142, 172, 173, 195], "native_coord": [142, 173, 195], "stealth": [142, 172, 173, 195], "emergency_head": [142, 173, 195], "bg_color": [142, 172, 173, 195], "disable_order_transpar": [142, 173, 195], "out_stealth_png": [142, 173, 195], "out_strat": 142, "mix_nam": [142, 144, 173], "log_level": [142, 165, 166], "log_fil": 142, "stretch": 142, "nonetheless": 142, "parkinson": 143, "ppmi": 143, "marek11": 143, "yeh18": [143, 144], "atlas_of_30_human_brain_bundles_in_mni_spac": [143, 144], "12089652": [143, 144], "35092": 143, "yhjc": 143, "12098397": 143, "h5": [143, 165], "subjects_smal": 143, "af_r": 143, "ccmid": 143, "cc_forcepsmajor": [143, 162], "cc_forcepsminor": 143, "cst_r": [143, 162], "emc_l": 143, "emc_r": 143, "fpt_l": 143, "fpt_r": 143, "ifof_l": 143, "ifof_r": 143, "ilf_l": 143, "ilf_r": 143, "mlf_l": 143, "mlf_r": 143, "ml_l": 143, "ml_r": 143, "mdlf_l": 143, "mdlf_r": 143, "opt_l": 143, "opt_r": 143, "or_l": 143, "or_r": 143, "stt_l": 143, "stt_r": 143, "uf_r": 143, "3805": [76, 143], "anatomical_measur": [143, 174], "org_bundl": 143, "rec_bundl": 143, "3806": [50, 79, 143], "3809": [76, 143], "3850": [79, 143], "3851": [76, 143], "3383": [76, 79, 143], "3387": [79, 143], "3392": [79, 143], "3552": [79, 143], "streamlines_moved_af_l__labels__recognized_orig": 143, "streamlines_moved_af_r__labels__recognized_orig": 143, "streamlines_moved_ccmid__labels__recognized_orig": 143, "streamlines_moved_uf_l__labels__recognized_orig": 143, "streamlines_moved_uf_r__labels__recognized_orig": 143, "streamlines_moved_v__labels__recognized_orig": 143, "moved_af_l__recogn": 143, "moved_af_r__recogn": 143, "moved_ccmid__recogn": 143, "moved_uf_l__recogn": 143, "moved_uf_r__recogn": 143, "moved_v__recogn": 143, "overridden": 143, "eg": [143, 168, 170, 173, 216, 227], "bundle_profil": 143, "lmm": [143, 173], "lmm_plot": 143, "buan_thr": [143, 173, 195], "buan_highlight": [143, 173, 195], "af_l_fa_pvalu": 143, "pvalu": [143, 173, 195], "cst_l_fa_pvalu": 143, "sm_plot": 143, "dipy_buan_shap": [143, 221], "12033390": 143, "marek": 143, "kenneth": 143, "jen": [143, 173, 190], "danna": 143, "lasch": 143, "shirlei": 143, "siderowf": 143, "carolin": 143, "simuni": 143, "tanya": 143, "coffei": 143, "kieburtz": 143, "karl": 143, "flagg": 143, "emili": 143, "chowdhuri": 143, "sohini": 143, "neurobiologi": 143, "panesar": [143, 144], "fernand": [143, 144], "meola": [143, 144], "yoshino": [143, 144], "fernandez": [143, 144], "miranda": [143, 144], "vettel": [143, 144], "verstynen": [143, 144], "hcp_tractogram_zip": 144, "7013003": 144, "whole_brain_mni": 144, "rb_output": 144, "pink": [144, 145], "org_output": 144, "visit": [144, 145, 157, 168], "chandio2023": [145, 159, 173, 180], "m_uf": 145, "s_uf_li": 145, "capac": 145, "\u03bb": [145, 173, 180], "requirs": 145, "nonlinearly_mov": [145, 173], "caustiou": 145, "destin": 146, "specific_dataset": 146, "specific_data_out_fold": 146, "eigenspectrum": 147, "lpca": [147, 154, 173, 182, 219, 220, 225], "ow": 147, "denoise_lpca_output": 147, "suffic": [147, 148, 150], "dwi_lpca": [147, 173], "subtl": 147, "hardli": 147, "denoise_mppca_output": 147, "textur": 147, "denoise_nlmeans_output": 147, "lcpa": 147, "veraart15": 148, "perrone15": 148, "gibbs_ringing_output": 148, "t1_brain_denois": 148, "motion_output": 150, "recons_csd_output": 151, "stanford_hardi_mask": 151, "recons_mapmri_output": 151, "recons_dti_output": 151, "save_metr": [151, 173, 175, 190, 191, 192, 193], "out_tensor": [151, 173, 191], "dti_tensor": [151, 173], "recons_dki_output": 151, "cfin_multib_mask": 151, "recons_csa_output": 151, "pam": [151, 164, 165, 172, 173, 188, 189, 205, 206, 213], "extract_pam_valu": [151, 173, 188, 189], "recons_ivim_output": 151, "ivim_mask": 151, "sort": [152, 159, 162, 164, 167, 171, 172, 173, 195, 217], "image_reg_output": 152, "path_to_static_fil": 152, "path_to_moving_fil": 152, "affine_reg_output": 152, "out_affin": [152, 173, 175, 181, 202], "syn_reg_output": 152, "out_warp": [152, 173, 176], "em": [152, 159, 168, 173, 176], "syn_reg_warp": 152, "transform_typ": [152, 173, 177], "transform_reg_output": 152, "path_to_transform_map_fil": 152, "nb_pt": [152, 159, 168, 173, 202], "sl_reg_output": 152, "stop_fil": 153, "seed_dens": [153, 173, 205, 206], "recon": [153, 210, 219], "pve_wm": 153, "eudx_tracking_output": 153, "det_tracking_output": 153, "det": [153, 159, 161, 167, 173, 205, 211, 212], "prob_tracking_output": 153, "prob": [153, 173, 205, 219], "closest_peaks_output": 153, "prematur": 153, "pft_output": 153, "pve_gm": 153, "pve_csf": 153, "expertis": 242, "didn": 242, "depict": 242, "replic": [41, 161], "tripl": 214, "quot": [214, 217], "alter": [41, 171], "pymvpa": [], "dtiflow": 154, "lpcaflow": [154, 174], "rumbaflow": 154, "vtp": [154, 165, 225, 226], "dkiflow": 154, "imageregistrationflow": [154, 174], "motioncorrectionflow": [154, 174], "parallelis": 154, "govern": [154, 167, 224], "cli": [154, 219, 221, 222, 223, 224, 225, 226], "10x": 154, "multiplatform": [154, 228], "134": [76, 79, 80, 154, 215, 222], "vtk9": [154, 221], "typographi": 154, "tensorflow": [154, 166, 220], "smarter": 154, "critic": [154, 165, 166], "mtm": [154, 219], "quickbundlesx": [154, 159, 172, 173, 174, 195, 202, 212], "tractometri": [154, 157, 214], "almost": [154, 167, 215], "287": [79, 80, 154, 208, 213], "cvxopt": [154, 211, 217, 219], "reorient": [154, 161, 171, 208, 209, 213], "cleaner": 154, "exhibitor": [154, 155], "ohbm": [154, 155], "massiv": 154, "geodes": [154, 167, 173, 190, 191, 218], "robustli": 154, "novemb": [155, 161], "septemb": 155, "august": 155, "decemb": [155, 161], "octob": [155, 159], "june": [155, 161], "februari": 155, "magazin": 155, "nov": [155, 163, 167, 234], "22nd": 155, "3x": 155, "teach": 155, "fundament": 155, "seminar": 155, "neuroscientist": 155, "qbin": 155, "dont": 155, "creator": 155, "attend": 155, "hbm": [155, 208, 217], "0dev": 155, "win": 155, "took": 155, "mia": 155, "school": 155, "mcgill": [155, 162], "3rd": [155, 168, 171], "sprint": 155, "gui": 157, "unittest": [157, 217], "__version__": 157, "pycpd": 159, "siavashk": 159, "encapsul": 159, "codomain": 159, "parzenjointhistogram": 174, "parzen": 159, "parzen62": 159, "cubic": [159, 167, 171, 173, 176], "annal": 159, "1065": [159, 210], "1076": [76, 159, 210], "1962": [76, 79, 159, 220], "kwd": 159, "enum": [159, 165], "diagnos": 159, "debug": [159, 161, 165, 166, 210], "prealign": 159, "metric_kwarg": 159, "ride": [159, 165], "ndarrai": [159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 222], "dwi_affin": 159, "template_affin": 159, "reg_kwarg": 159, "warped_b0": 159, "fist": 159, "disp": [159, 161], "domain_img": 159, "codomain_img": 159, "between_affin": 159, "ret_metr": 159, "gradual": 159, "boolean": [159, 161, 163, 166, 167, 171, 172, 173], "sampling_proport": 159, "interv": [159, 164, 171], "xopt": [159, 161, 165, 174], "fopt": [159, 161, 165, 174], "isosc": [159, 222, 225], "kwarg": [159, 161, 162, 164, 165, 166, 167, 168, 173, 208, 222, 226], "ref_affin": 159, "b0_ref": 159, "xform_img": 159, "affine_arrai": 159, "n_point": [159, 163, 170, 171, 173, 194, 221], "native_resampl": 159, "sigma2": 159, "low_rank": 159, "num_eig": 159, "max_iter": 159, "arg": [159, 161, 162, 164, 165, 166, 167, 168, 173, 214], "cloud": 159, "nxd": 159, "mxd": 159, "ty": 159, "consecut": [159, 171, 219], "span": [159, 161, 167], "exclus": [69, 159, 171], "absolut": [159, 161, 166, 167, 171, 173, 210, 214, 221, 234], "mxn": 159, "pt1": 159, "nx1": 159, "p1": 159, "mx1": 159, "likelihoo": 159, "lowrank": 159, "get_registration_paramet": [159, 174], "registration_paramet": 159, "transform_point_cloud": [159, 174], "update_transform": [159, 174], "0905": 159, "2635": [79, 159, 226], "update_vari": [159, 174], "eig_fgt": 159, "gauss": [159, 173, 176], "domain_grid_shap": 159, "domain_grid2world": 159, "codomain_grid_shap": 159, "codomain_grid2world": 159, "domain_grid": 159, "codomain_grid": 159, "stream": [159, 171], "get_affin": [159, 174, 210], "set_affin": [159, 174], "affine_inv": 159, "unchang": [159, 161, 167, 169, 171], "image_grid2world": 159, "sampling_grid_shap": 159, "sampling_grid2world": 159, "resample_onli": 159, "domain_shap": 159, "codomain_shap": 159, "drive": 159, "neg_mi": 159, "distance_and_gradi": [159, 174], "neg_mi_grad": 159, "grad": [159, 171], "bfg": [159, 161, 168, 217], "newton": [159, 161, 166, 225], "dogleg": [159, 161], "trust": [159, 161, 167], "ncg": [159, 161], "n_scale": [159, 173, 176], "never": [159, 171], "docstring_addendum": [159, 174], "accomplish": [159, 167, 173], "disp_shap": 159, "disp_grid2world": 159, "compute_inversion_error": [159, 174], "perfect": 159, "comp": [159, 167], "dinv": 159, "expand_field": [159, 174], "expand_factor": 159, "new_shap": 159, "get_backward_field": [159, 174], "is_invers": 159, "get_simplified_transform": [159, 174], "diffeomorh": 159, "interpret_matrix": [159, 174], "shallow_copi": [159, 174], "shallow": 159, "new_map": 159, "image_world2grid": 159, "out_shap": 159, "out_grid2world": 159, "_warp_forward": 159, "_warp_backward": 159, "transform_point": [159, 174], "coord2world": 159, "world2coord": 159, "transform_points_invers": [159, 174], "warp_endomorph": [159, 174], "endomorph": 159, "inherit": [159, 163, 167, 168, 173, 185], "costli": 159, "computation": [159, 167], "simpler": [159, 215], "abstract": [159, 161, 167, 168, 171, 172, 173], "get_map": [159, 174, 222], "upon": [69, 159, 167, 171, 173, 215, 216], "set_level_it": [159, 174], "inv_tol": [159, 173, 176], "static_to_ref": 159, "current_displac": 159, "new_displac": 159, "disp_world2grid": 159, "time_sc": 159, "intend": [159, 166, 172, 173, 193, 226], "d2": [159, 165, 167], "d1": [159, 167], "mean_norm": 159, "csv": [159, 161, 165, 166, 167, 168], "xl": [159, 161, 165, 166, 167, 168], "gnumer": [159, 161, 165, 166, 167, 168], "cater": [159, 161, 165, 166, 167, 168], "hierarchi": [159, 161, 165, 166, 167, 168], "period": [159, 161, 165, 166, 167, 168, 221], "java": [159, 161, 165, 166, 167, 168], "gnu": [159, 161, 165, 166, 167, 168], "charg": [159, 161, 163], "compute_backward": [159, 174], "compute_forward": [159, 174], "free_iter": [159, 174], "registrationoptim": 159, "get_energi": [159, 174], "initialize_iter": [159, 174], "unpract": 159, "set_levels_abov": [159, 174], "set_levels_below": [159, 174], "set_moving_imag": [159, 174], "moving_spac": 159, "moving_direct": 159, "set_static_imag": [159, 174], "static_spac": 159, "static_direct": 159, "use_moving_image_dynam": [159, 174], "original_moving_imag": 159, "diffeomorficmap": 159, "use_static_image_dynam": [159, 174], "original_static_imag": 159, "inner_it": 159, "q_level": 159, "double_gradi": 159, "step_typ": 159, "gauss_newton": [159, 173, 176], "transfer": [159, 214], "seidel": [159, 173, 176], "quantiz": [159, 173, 176], "demon": [159, 173, 176, 212, 213], "schedul": [159, 171, 173, 176, 210], "compute_demons_step": [159, 174], "forward_step": 159, "compute_gauss_newton_step": [159, 174], "bruhn": 159, "weickert": 159, "bruhn05": 159, "andr": 159, "joachim": 159, "ultim": 159, "iccv": 159, "use_double_gradi": 159, "dynam": [159, 164, 168], "originalstaticimag": 159, "vercauteren": 159, "vercauteren09": 159, "tom": [41, 156, 159, 210, 226, 227], "xavier": 159, "pennec": [159, 167], "aymer": 159, "perchant": 159, "nichola": 159, "ayach": [159, 167], "delta_field": 159, "sigma_sq_field": 159, "gradient_field": 159, "lambda_param": 159, "coarser": 159, "infinit": [159, 169, 171, 219], "sigmafield": 159, "cval": [159, 173, 201], "pool": [159, 163, 166, 167, 173, 194, 201, 216], "f_name": 159, "num_level": 159, "input_spac": 159, "sigma_factor": 159, "mask0": 159, "weaker": 159, "from_level": 159, "get_affine_inv": [159, 174], "get_domain_shap": [159, 174], "get_expand_factor": [159, 174], "to_level": 159, "get_imag": [159, 174], "get_scal": [159, 174], "get_sigma": [159, 174], "get_spac": [159, 174], "print_level": [159, 174], "aka": 159, "hungri": [159, 209], "l_bfgs_b": [159, 168], "powel": [159, 161, 168], "mat": [159, 161, 167, 171, 216], "matopt": 159, "matopt_histori": 159, "func": [159, 161, 167, 169, 173], "optimum": [159, 161, 167], "matrix_histori": 159, "matrix1": 159, "matrix2": 159, "block_siz": 159, "min_siz": [159, 168], "default_bound": 159, "rm_small_clust": [159, 173, 202, 227], "maxit": [159, 161, 167], "select_random": 159, "greater_than": [159, 168, 173, 200, 202], "less_than": [159, 167, 168, 173, 200, 202], "qbx_thr": [159, 173, 202], "n_bundl": 159, "lst": 159, "unmatch": 159, "precomput": [159, 167], "ml": [159, 173, 180], "matched_pair": [159, 173], "unitari": [159, 172], "shape_profilen": 159, "stdv": 159, "algebra": 161, "descriptor": 161, "reserv": [161, 166, 168], "redistribut": [161, 168, 173], "permit": [161, 167, 168, 173], "met": [161, 168, 173], "retain": [37, 79, 161, 168, 172, 173], "disclaim": [161, 168, 173], "materi": [161, 168, 173], "endors": [161, 168], "BY": [161, 168, 173], "THE": [161, 168, 173], "holder": 161, "AND": [161, 165, 168, 173], "AS": [161, 168, 173], "OR": [161, 168, 173], "warranti": [161, 162, 168, 173], "BUT": [161, 168, 173], "TO": [161, 168, 173], "OF": [161, 168, 173], "merchant": [161, 168, 173], "FOR": [161, 168, 173], "NO": [161, 168, 173], "shall": [161, 168, 171, 173], "owner": 161, "liabl": [161, 168, 173], "indirect": [161, 168, 173], "incident": [161, 168, 173], "exemplari": [161, 168, 173], "consequenti": [161, 168, 173], "damag": [161, 162, 168, 173], "procur": [161, 168, 173], "substitut": [161, 167, 168, 173], "profit": [161, 168, 173], "busi": [161, 168, 173], "interrupt": [161, 168, 173], "liabil": [161, 168, 173], "contract": [159, 161, 168, 173], "strict": [161, 162, 165, 168, 173], "neglig": [161, 168, 173], "aris": [161, 168, 173], "IF": [161, 168, 173], "SUCH": [161, 168, 173], "declar": [161, 166, 171, 214, 215, 219], "overhead": [161, 167], "untrigg": 161, "raymond": 161, "hetting": 161, "rcn": 161, "htm": 161, "datamodel": 161, "octahedron": [161, 215], "modulu": 161, "singular": [159, 161, 163, 173, 182, 183, 231], "lon": 161, "lat": 161, "parameter": [161, 226], "inclin": [161, 162, 163, 235], "azimuth": [161, 162, 163, 167, 235], "south": [161, 235], "north": [161, 235], "west": [161, 235], "east": [161, 235], "posterior": [161, 164, 165], "anterior": [161, 165], "zenith": [161, 235], "counter": 161, "clockwis": 161, "geograph": 161, "nomenclatur": [161, 220], "latitud": [161, 235], "longitud": [161, 235], "array_lik": [161, 162, 163, 167, 170, 171], "spherical_coordinate_system": 161, "wolfram": 161, "sphericalcoordin": 161, "hypotenus": 161, "sph2cart": [161, 235], "unusu": [161, 219], "trivial": [161, 214], "vec": [161, 167, 171], "nvec": 161, "l2n": 161, "allclos": [161, 167, 171, 215], "keepdim": 161, "flatten": [161, 167, 169, 171], "instabl": 161, "taylor": [161, 169], "tetha": 161, "teta2": 161, "theta2": 161, "ur": 161, "rad2deg": 161, "npd": 161, "niethamm": 161, "estepar": 161, "bouix": 161, "shenton": 161, "cf": [161, 167, 216], "eng": 161, "biol": 161, "2622": [79, 161, 226], "pubm": 161, "17946125": 161, "pmc2791793": 161, "pts1": 161, "pts2": 161, "check_radiu": 161, "broadcast": [161, 167, 168, 171, 219, 226], "5708": 161, "7124": 161, "vecs1": 161, "vecs2": 161, "v_co": 161, "vco": 161, "lambert": 161, "mardia": 161, "jupp": 161, "161": [79, 80, 161, 216], "y_1": 161, "y_2": 161, "annulu": 161, "vice": [161, 221], "versa": [161, 221], "aj": 161, "sxyz": 161, "gohlk": 161, "lfd": [], "uci": [], "yaw": 161, "syxz": 161, "34786452": 161, "383436184": 161, "_axes2tupl": 161, "partit": [161, 171], "persp": 161, "m0": 161, "smallest": [161, 163, 167, 168, 171], "collinear": [161, 171, 208], "furthest": [161, 171], "3x3": [161, 163, 167], "ru": 161, "mat1": 161, "mat2": 161, "matn": 161, "circumfer": 161, "otherw": 161, "psampl": 161, "frame": [161, 164, 171, 173], "a_": [161, 167], "gsoc2015dipydki": [], "blogspot": [], "rnh": [], "is_hemi": 161, "pole": [161, 167, 171], "rstudio": 161, "pub": 161, "s3": [161, 162], "amazonaw": 161, "27121_a22e51b47c544980bad594d5e0bb2d04": 161, "noqa": [111, 161, 162], "qval": [161, 167, 174], "ie": [161, 167, 171], "immut": 161, "factori": [161, 212], "gradient_strength": [161, 174], "bmag": [161, 167], "rbval": 161, "expireddeprecationerror": [161, 165, 167, 171], "log_": [161, 167], "atol": [161, 165], "bo_threshold": 161, "ste": 161, "cte": 161, "cigar": 161, "30m": 161, "10m": 161, "sq2": 161, "gt": [161, 168, 172], "03e": 161, "compens": 161, "leemans2009": 161, "1336": [79, 161, 211], "1349": [79, 161, 211], "bvector": [161, 167, 173, 181, 182, 188, 189, 191, 209], "bmagmax": 161, "bmaxmag": 161, "gap": [161, 167], "regroup": 161, "n_bval": 161, "non_zero": 161, "ztol": 161, "trace": [161, 174, 230], "asymmetri": 161, "bdelta": 161, "b_eta": 161, "topgaard": 161, "valiullin": 161, "ed": [161, 168], "porou": 161, "royal": [161, 171], "chemistri": 161, "ornt1": [161, 165], "ornt2": [161, 165], "orn1": [161, 165], "orn2": [161, 165], "current_ornt": [161, 165], "new_ornt": [161, 165], "stort": [161, 165], "lp": [161, 165], "inferior": [161, 165], "string_ornt": [161, 165], "ornt": [161, 165], "add_nod": [161, 174], "add_edg": [161, 174], "up_short": [161, 174], "wp": 161, "attr": [161, 210], "all_path": [161, 174], "del_nod": [161, 174], "del_node_and_edg": [161, 174], "down_short": [161, 174], "shortest_path": [161, 174], "arr": [161, 163, 167, 171], "num_bin": 161, "janeriksolem": 161, "mixin": 161, "offer": [161, 234], "accessor": [161, 163], "uniformtimeseri": 161, "sampling_r": 161, "sampling_interv": 161, "lose": [161, 224], "circular": [161, 169, 210, 211], "chain": 161, "_no_reset": 161, "protect": [161, 171], "caveat": 161, "emptor": 161, "recomput": 161, "fire": 161, "mostli": [161, 167, 171, 208, 215, 218], "decor": [161, 167, 208, 210, 212, 213, 215, 220, 226], "afterward": 161, "magicprop": 161, "__dict__": 161, "jac": [161, 167], "hess": 161, "hessp": 161, "jacobian": [159, 161, 167, 174], "hessian": 161, "nelder": 161, "mead": 161, "anneal": 161, "tnc": 161, "cobyla": 161, "slsqp": 161, "ineq": 161, "wherea": [161, 167, 171, 173], "xk": [161, 171], "show_opt": 161, "nfev": [161, 174], "nit": [161, 174, 217], "print_summari": [161, 174], "sklearn": [161, 163, 167, 173, 185, 220, 225], "signatur": [161, 167, 218, 227], "coef_": 161, "y_hat": 161, "n_sampl": 161, "n_featur": 161, "a_0": 161, "h_i": 161, "s_j": 161, "slack": 161, "polynomi": [161, 167, 234], "design_matrix": [161, 174, 222], "pipermail": 161, "027700": 161, "momentum": 161, "non_neg": [161, 167], "check_error_it": 161, "max_error_check": 161, "converge_on_ss": 161, "xh": 161, "descent": [159, 161], "persist": [161, 210], "sse": [161, 167], "h_best": 161, "caller": 161, "print_stat": [161, 174], "prin": 161, "1000000": [161, 168, 173], "src": 161, "profiling_tutori": 161, "line_profil": 161, "pstat": 161, "slowest": 161, "function_nam": 161, "ix": 161, "100001": 161, "200002": 161, "iz": 161, "300003": 161, "400004": 161, "wichmann": 161, "hill": 161, "1614": [161, 213], "1622": [71, 76, 161, 213], "9473": 161, "csda": 161, "019": 161, "sciencedirect": 161, "b6v8v": [], "4k7f86w": [], "a3a33291b8264e4c882a8f21b6e43351": [], "r_number": 161, "uniformli": [161, 168], "183": [77, 79, 80, 161, 216], "1982": [76, 79, 161, 220], "rectangularli": 161, "95e": 161, "claim": 161, "30000": 161, "arithmet": 161, "5212632": 161, "s1": [161, 168], "s2": [161, 168], "ecuy": 161, "portabl": 161, "742": [79, 161, 209, 213], "749": [71, 79, 161, 208], "774": [79, 161], "30584e": 161, "unspecifi": [161, 162, 163, 172], "delaunai": [161, 162, 163, 215], "triangul": [161, 162, 163, 172], "find_closest": [161, 163, 174], "vertex": [161, 163, 164, 167, 171, 217], "____": [161, 163], "subdivis": [161, 163], "new_spher": [161, 163], "remap": [161, 162, 163, 219], "classmethod": [161, 163, 164, 171, 173], "from_spher": [161, 163, 174], "__________": 161, "return_invers": 161, "hemi": [161, 163], "const": [161, 163], "felt": [161, 163], "unstabl": [161, 163, 213], "init_pointset": 161, "reimplement": 161, "fmin_slsqp": 161, "number_of_edg": 161, "buffer": [159, 161, 162, 167, 169, 210], "__new__": [161, 167, 169], "expos": [161, 162, 167, 169], "fortran": [161, 167, 169], "c_contigu": [161, 167, 169], "owndata": [161, 167, 169], "writeabl": [161, 167, 169, 217], "flatit": [161, 167, 169], "todo": [161, 167, 169, 210], "imaginari": [161, 167, 169, 234], "items": [161, 167, 169, 171], "nbyte": [161, 167, 169, 174], "contigu": [161, 167, 169, 171], "jump": [161, 167, 169], "ctype": [161, 167, 169], "garbag": [161, 167, 169], "coord": [161, 209], "spherepointpick": 161, "fisher": 161, "lewi": 161, "embleton": 161, "coverag": [161, 210, 217, 219, 224, 225], "b1": [161, 172, 220], "max_mean_cosin": 161, "max_cosine_dist": 161, "7071067811865475": 161, "unimport": 161, "12f": 161, "707106781187": 161, "recursion_level": 161, "n1": [161, 171], "n2": [161, 171], "n3": [161, 214], "perm": 161, "permut": [161, 167], "bank": 161, "n1xn2xn2": 161, "ni": [161, 171, 208, 214], "lowpass": 161, "highpass": 161, "lo": 161, "subband": 161, "synthesi": 161, "n1xn2xn3": 161, "sf1": 161, "sf2": 161, "sf3": 161, "sfi": 161, "af1": 161, "af2": 161, "af3": 161, "afi": 161, "cell": [159, 161, 171, 208], "byte_data": 162, "bytes_or_buff": 162, "handler": 162, "__str__": [162, 224], "repr": [162, 212], "sy": [162, 173], "getdefaultencod": 162, "fib1": 162, "fib0": 162, "fib2": 162, "sv2": 162, "skeleton": [162, 218], "lsc": 162, "c3": 162, "symmetric642": [162, 163], "repulsion100": [162, 163, 167], "repulsion200": [162, 163], "vert": [162, 163, 172], "720": [76, 79, 162, 163, 210, 219, 227], "func_coef": 162, "func_discret": 162, "dwi2sh": 162, "maptlotlib": 162, "model_nam": 162, "unsign": [162, 167, 171, 173, 221], "sdp_constraint": 162, "id_constraint_ord": 162, "fsrc": 162, "fdst": 162, "total_length": 162, "16384": 162, "stored_md5": 162, "md5": [162, 173, 187, 210, 216], "data_s": 162, "checksum": [162, 173, 187], "mb": [24, 27, 39, 45, 58, 62, 92, 100, 112, 116, 125, 129, 136, 162], "fetchererror": 162, "site": [77, 79, 162, 217, 220], "3shell": 162, "evac": [162, 173, 174, 186, 227], "park": [162, 166, 173, 186, 227], "session": 162, "rc": [162, 208], "1993": [79, 162, 171, 220], "mcconnel": 162, "neurolog": 162, "fee": 162, "herebi": 162, "equip": 162, "injuri": 162, "misus": [162, 210], "oneof": 162, "rat": 162, "dde": [69, 162, 167], "cti": [41, 69, 156, 162, 174], "small_101d": [162, 169], "pittsburgh": 162, "competit": 162, "gqi_vector": [162, 218], "small_25": 162, "10x8x2": 162, "test_piesno": 162, "cb_2": 162, "wild": 162, "bruker": 162, "80x160x5": 162, "110x110x500\u03bcm": 162, "spread": [161, 162], "drawn": [162, 171, 172], "subject1_test": 162, "subject1_retest": 162, "subject2_test": 162, "subject2_retest": 162, "with_raw": 162, "meta": 162, "uw": 162, "exp_bundles_map": 162, "renauld": [162, 226], "bernier": 162, "thalamu": 162, "eeg": [162, 214], "submiss": 162, "bundles_list": 162, "ref_anat": 162, "file1": 162, "file2": 162, "arraysequ": [162, 165, 171, 210, 211, 227], "dataset_descript": 162, "json": [162, 173], "bidsvers": 162, "dump": [162, 227], "bid": 162, "hcp_bucket": 162, "openaccess": 162, "profile_nam": 162, "hcp_1200": 162, "aws_access_key_id": 162, "aws_secret_access_kei": 162, "bucket": 162, "aw": 162, "credenti": 162, "xxxxxxxxxxxxxxxx": 162, "publicdata": 162, "gorgolewski": [162, 213], "160044": 162, "ndarek918ec2": 162, "ima": [163, 164, 171], "fimau": 163, "fimao": 163, "5x5": 163, "fima": 163, "vg": [163, 173, 194], "pca_method": [163, 173, 182, 183], "eig": [163, 173, 182, 183], "out_dtyp": 163, "suppress_warn": 163, "svd": [163, 173, 182, 183, 210, 211], "occasion": [163, 173, 182, 183], "tau_": [163, 173, 182], "patch_siz": [163, 226], "patch_radius_sigma": 163, "descoteaux08": [163, 173, 184], "wiest": [163, 173, 184], "daessl\u00e9": [163, 173, 184], "nicola": [163, 173, 184], "christian": [163, 167, 173, 184], "rachid": [163, 173, 184], "itermax": 163, "ep": [163, 167, 168, 171], "realis": 163, "fmri": 163, "repetit": 163, "cord": 163, "floor": [159, 163], "197": [76, 79, 80, 163, 171, 217], "108": [76, 79, 80, 163, 167, 215], "disable_background_mask": 163, "ok": 163, "oversmooth": 163, "un": [163, 212, 217], "inaccuraci": 163, "nonloc": 163, "1x1x1": [163, 168, 173, 199], "lasso": [163, 167, 173, 185], "sklearnlinearsolv": [163, 167, 173, 174, 185], "scikit": [163, 167, 168, 173, 185], "linear_model": [163, 167, 173, 185, 220], "linearregress": [163, 173, 185], "regressormixin": [163, 167, 173, 185], "sphere_ev": 164, "xtol": [164, 167], "finder": [164, 215], "is_symmetr": 164, "descend": [164, 167], "gfa_thr": 164, "sh_basis_typ": 164, "tempfil": [163, 164, 165, 226], "tempdir": [163, 164, 217], "subprocess": [164, 167, 173, 188, 189], "cpu_count": [164, 167, 173, 188, 189], "angelino": [163, 164, 167, 169, 234], "fitzgibbon": [163, 164, 167, 169, 234], "510": [79, 163, 164, 167, 169, 217, 234], "fibernavig": [164, 210], "hdfgroup": 165, "storag": [165, 171], "mkstemp": 165, "temp": [165, 216], "dpy_exampl": 165, "fd": 165, "dpw": 165, "write_track": [165, 174], "dpr": 165, "read_track": [165, 174], "read_tracksi": [165, 174], "as_ndarrai": 165, "arrayproxi": 165, "return_coord": 165, "aff2axcod": 165, "hdr": 165, "peaksandmetr": [165, 167, 172, 174, 210], "fname_shm": 165, "fname_dir": 165, "fname_valu": 165, "fname_indic": 165, "fname_gfa": 165, "reshape_dir": 165, "attach": 165, "fh": 165, "neat": 165, "voxmm": [40, 165, 168, 171, 174], "data_per_point": [40, 165, 174, 225], "data_per_streamlin": [40, 165, 173, 174, 205, 206], "awar": [165, 171, 231], "verif": 165, "sft_1": 165, "sft_2": 165, "compute_bounding_box": [165, 174], "dtype_dict": [165, 174], "from_sft": [165, 174], "get_data_per_point_kei": [165, 174], "get_data_per_streamline_kei": [165, 174], "get_streamlines_copi": [165, 174], "epsilon": [161, 165, 168, 221], "indices_to_remov": 165, "indices_to_keep": 165, "to_cent": [165, 174], "to_origin": [165, 174], "target_origin": 165, "to_spac": [165, 174], "target_spac": 165, "trk_header_check": 165, "ttype": 165, "loader": 165, "saver": 165, "image_data": 165, "intent": 165, "img_orig": 165, "compliant": 165, "incom": [164, 165], "nimh": 165, "gov": 165, "nifti1field": 165, "nifti1fields_pag": 165, "reference_1": 165, "reference_2": 165, "tractogram_typ": 165, "datafram": [165, 170], "panda": 165, "helper": [165, 166, 167, 171], "file_nam": [165, 172], "ply": 165, "stl": 165, "xml": 165, "vtkpolydata": 165, "color_array_nam": 165, "to_lp": 165, "mitkdiffus": 165, "crucial": 166, "advers": 166, "layer": [166, 167, 168, 173, 186, 221], "speech": 166, "relu": 166, "vinci": 166, "booher": 166, "wang": 166, "caron": 166, "wen": 166, "newman": 166, "e0274396": 166, "0274396": 166, "sig_length": 166, "mean_squared_error": 166, "loss_weight": 166, "sgd": 166, "rmsprop": 166, "adagrad": 166, "adadelta": 166, "mean_absolute_error": 166, "mean_absolute_percentage_error": 166, "mean_squared_logarithmic_error": 166, "squared_hing": 166, "hing": 166, "categorical_hing": 166, "logcosh": 166, "categorical_crossentropi": 166, "sparse_categorical_crossentropi": 166, "binary_crossentropi": 166, "kullback_leibler_diverg": 166, "poisson": 166, "binary_accuraci": 166, "categorical_accuraci": 166, "top_k_categorical_accuraci": 166, "sparse_categorical_accuraci": 166, "sparse_top_k_categorical_accuraci": 166, "batch_siz": 166, "max_queue_s": 166, "worker": [166, 167, 171], "use_multiprocess": 166, "return_dict": 166, "silent": 166, "epoch": [69, 166, 167], "queue": [166, 221], "validation_split": 166, "validation_data": 166, "initial_epoch": 166, "steps_per_epoch": 166, "validation_step": 166, "validation_batch_s": 166, "validation_freq": 166, "kera": 166, "x_val": 166, "y_val": 166, "tf": [166, 171], "Its": [166, 167, 169], "load_weight": [166, 174], "save_weight": [166, 174], "textual": 166, "nonetyp": 166, "train_test_split": [166, 174], "test_siz": 166, "train_siz": 166, "random_st": 166, "stratifi": 166, "complement": 166, "glossari": 166, "x_train": 166, "x_test": 166, "y_train": 166, "y_test": 166, "out_channel": 166, "kernel_s": 166, "drop_r": 166, "n_layer": 166, "layer_typ": 166, "invoc": [166, 216, 217], "init_scop": 166, "input_shap": 166, "input_spec": 166, "savedmodel": 166, "ecosystem": [141, 166], "tfmot": 166, "tflite": 166, "came": 166, "crf": [166, 173], "load_model_weight": [166, 174], "weights_path": 166, "voxsiz": 166, "return_affin": 166, "return_prob": 166, "wrapper": [159, 161, 166, 167, 171, 215], "ndarri": [166, 167, 171], "pred_output": 166, "input_data": 166, "model_scal": 166, "fetch_model_weights_path": 166, "histo_resdnn_weight": 166, "mimick": 166, "chunk_siz": 166, "assembl": 166, "nonzero": [166, 167, 168], "pred_sh_coef": 166, "num_hidden": 166, "act_hidden": 166, "dropout": 166, "num_out": 166, "act_out": 166, "softmax": 166, "perceptron": 166, "batchsiz": 166, "testsiz": 166, "outputs": 166, "disco": 166, "alon": 166, "blaber": 166, "landman": 166, "synthes": 166, "cai": 166, "roger": 166, "e0236418": 166, "min_v": 166, "max_v": 166, "new_min": 166, "new_max": 166, "norm_min": 166, "norm_max": 166, "init_shap": 166, "voxelspac": 166, "transformed_img": 166, "recovered_img": 166, "methodologi": 167, "funk": 167, "radon": 167, "bx": 167, "plug": 167, "rewritten": 167, "sh_coef": 167, "mymodel": 167, "mymodelfit": 167, "cache_get": [167, 174], "odf_basis_matrix": 167, "_compute_basis_matrix": 167, "cache_set": [167, 174], "cache_clear": [167, 174], "compute_expensive_matrix": 167, "expens": [167, 171], "expensive_matrix": 167, "cod": 167, "coefficient_of_determin": 167, "model_arg": 167, "model_kwarg": 167, "dwi_respons": 167, "reg_spher": 167, "inject": 167, "knowledg": 167, "tractomet": 167, "pred_sig": 167, "sdtmodel": 167, "csdmodel": 167, "opppos": 167, "roi_cent": [167, 173, 189], "roi_radiu": 167, "fa_cal": 167, "return_number_of_voxel": 167, "fa_oper": [167, 211], "versu": 167, "r2_term": 167, "frt": 167, "dwsignal": 167, "b_reg": 167, "r_rh": 167, "fodf_sh": 167, "num_it": 167, "minimis": 167, "f_n": 167, "xf_n": 167, "h_": 167, "b_": [167, 230, 231], "reg": 167, "hf_": 167, "rightarrow": 167, "2x": 167, "th_": 167, "tx": 167, "regularis": 167, "superresolut": 167, "mu": [167, 168], "qf_n": 167, "choleski": [167, 218], "l_y": 167, "tf_n": 167, "rankn": 167, "f_0": 167, "pf_0": 167, "l_": 167, "h_n": 167, "f_": 167, "donald": 167, "odf_sh": [167, 174], "odfs_sh": [163, 167], "plai": 167, "odfdeconv": [167, 217], "20x20x20": 167, "ull": [167, 173, 190], "wll": 167, "uwll": [167, 173, 190], "lmi": 167, "ardekani": [167, 173, 190], "823": [79, 167, 173, 190], "836": [76, 82, 167, 173, 190, 209], "multi_fit": [167, 174], "dki_param": 167, "fifteen": 167, "min_kurtosi": 167, "42857142857142855": 167, "e1": [167, 169], "1111": [76, 167, 213], "analogi": 167, "barmpouti": 167, "zhuo": 167, "8th": 167, "symposium": 167, "nano": [167, 173, 200], "macro": 167, "262": [76, 79, 80, 167, 216], "265": [79, 80, 89, 167, 216], "5872402": 167, "akc": [167, 174], "adc": [167, 174, 216], "equiv": 167, "_f": 167, "frobeniu": 167, "kmax": [167, 174], "gtol": 167, "4pi": 167, "domega_mathbf": 167, "f_1": 167, "2222": [79, 167, 222], "3333": [79, 167], "f_2": 167, "2233": [79, 167, 222], "1133": [76, 79, 167], "1122": [76, 79, 167, 210], "lambda_2lambda_3": 167, "r_f": 167, "3lambda_1": 167, "lambda_1lambda_2": 167, "lambda_1lambda_3": 167, "r_d": 167, "2lambda_1": 167, "3sqrt": 167, "carlson": 167, "hardin": 167, "1996": [79, 167, 173, 191, 221, 224], "mclaren": 167, "snub": 167, "429": [79, 80, 167, 217], "omega_": 167, "mathnbf": 167, "n_j": 167, "n_l": 167, "tr": 167, "2w_": 167, "medicine69": 167, "388": [76, 80, 167, 217], "2pi": 167, "domega": 167, "_mathbf": 167, "k_": 167, "bot": [167, 208, 212, 213, 217, 219], "g_1": 167, "g_2": 167, "errtol": 167, "incomplet": [167, 208, 210, 211, 212, 213, 214, 219, 220, 221, 223, 224, 225, 226, 227], "infti": [167, 234], "9409227": 167, "min_diffus": [167, 215], "adv": 167, "biologicali": 167, "pluasibl": 167, "advc": 167, "eingenvalu": 167, "max_dir": 167, "inverse_design_matrix": 167, "sunaert": 167, "pitfal": 167, "335": [76, 79, 80, 167, 217], "positivedefiniteleastsquar": [167, 174], "wrot": 167, "hui": 167, "cheung": 167, "qi": 167, "indi": 167, "indj": 167, "indk": 167, "indl": 167, "wre": 167, "ind_i": [167, 169], "ind_j": [167, 169], "ind_k": [167, 169], "ind_l": [167, 169], "k_element": 167, "eigval": 167, "eigvec": 167, "columnar": 167, "kurtosismicrostruturemodel": 167, "ols_fit_dki": 167, "wls_fit_dki": 167, "006": 167, "awf_onli": 167, "optiom": 167, "kurtosismicrostructur": 167, "axonal_diffus": [167, 174], "hindered_ad": [167, 174], "hindered_ev": [167, 174], "hindered_rd": [167, 174], "adc_": 167, "restricted_ev": [167, 174], "rde": 167, "edt": 167, "idt": 167, "r_start": 167, "r_end": 167, "r_step": 167, "nowrap": 167, "eqnarrai": 167, "i2pimathbf": 167, "cdotmathbf": 167, "dmathbf": 167, "sit": 167, "q_space": 167, "han": [167, 171], "dsi_voxel": [167, 174], "gqrid_siz": 167, "generalizedqsampl": 167, "dr_x": 167, "dr_y": 167, "dr_z": 167, "psi_": 167, "rhat": 167, "dr": 167, "2002": [167, 171, 220], "truncat": [167, 234], "p_": [167, 232], "iiintlimits_": 167, "q_": [69, 167], "bigg": 167, "1766": [79, 167, 219], "1775": [79, 167, 219], "qspace": 167, "qgrid": 167, "qtabl": 167, "premultipli": 167, "rradiu": 167, "interp_coord": 167, "diffusionspectrum": 167, "new_data": 167, "new_gtab": 167, "estimated_snr": 167, "qgrid_sampl": 167, "siz_x": 167, "siz_i": 167, "siz_z": 167, "psf": 167, "ifft": 167, "prop": 167, "numit": 167, "acc_factor": 167, "return_s0_hat": 167, "nll": [167, 173, 191, 220], "min_sign": [167, 217, 219], "consumpt": 167, "1e4": 167, "mattiello": [167, 173, 191], "247": [69, 76, 80, 167, 173, 191, 216], "254": [69, 79, 80, 167, 173, 191], "elucid": [167, 173, 191], "219": [79, 80, 167, 173, 191, 216], "lin": [167, 173, 191], "ching": [167, 173, 191], "1095": [76, 79, 167, 173, 191], "cutoff": 167, "dti_param": 167, "model_s0": 167, "s0_hat": [167, 174], "ec": 167, "columnwis": [163, 167], "pele": 167, "gubjartsson": 167, "kikini": 167, "jolesz": 167, "dodf": 167, "scratch": [167, 210, 219], "566": [71, 79, 82, 167, 169, 218], "ftp": 167, "sop": 167, "athena": [167, 210], "descoteaux_thesi": 167, "heta": 167, "infin": [167, 171], "lambda_i": [167, 230, 231], "quad": [69, 167], "lambda_1lambda_2lambda_3": 167, "denomin": 167, "appendix": 167, "batchelor": 167, "moakher": 167, "atkinson": 167, "rigor": 167, "calculu": 167, "221": [79, 80, 167, 216], "225": [79, 80, 82, 167, 215, 216], "newcomb": 167, "1103": [76, 79, 167, 210], "1115": [79, 167, 210], "etal": 167, "thompson": 167, "monozygot": 167, "dizygot": 167, "twin": 167, "943": [77, 79, 167, 210], "946": [76, 79, 167, 210], "arsigni": 167, "fillard": 167, "medecin": 167, "421": [76, 79, 80, 82, 167, 217], "q_form": 167, "a_hat": 167, "daniel": [167, 213], "enni": 167, "kindlmann": 167, "146": [76, 79, 80, 167, 215], "a_squiggl": 167, "widetild": 167, "mo": 167, "orthotropi": 167, "fit_tensor": [167, 208, 210], "counteract": 167, "heteroscedast": 167, "return_lower_triangular": 167, "fail_is_nan": 167, "npar": 167, "gmm": 167, "geman": 167, "mclure": 167, "nlls_param": 167, "n_direct": 167, "5267": [167, 173, 190, 191], "background_nois": [167, 173, 190, 191], "num_vox": 167, "restore_param": 167, "sixth": 167, "dummi": 167, "1994a": 167, "hermitian": 167, "bxx": 167, "byi": 167, "bzz": 167, "bxy": 167, "bxz": 167, "byz": 167, "odf_vertic": [167, 171, 217], "lambda_lb": 167, "lambda_csd": 167, "rho": [167, 230, 232], "po": [167, 216], "tessel": 167, "get_3shell_gtab": [167, 174], "descoteaux07_legacy_msg": 167, "catch_warn": 167, "filterwarn": 167, "pendingdeprecationwarn": 167, "analyticalmodel": 167, "clip_neg": 167, "b_uniqu": 167, "data_norm": 167, "lb_matrix": 167, "fwdti_param": 167, "diso": 167, "sig": 167, "mdreg": 167, "0027": 167, "piter": 167, "md_reg": 167, "inter": 167, "fw_param": 167, "f_transform": 167, "ft": 167, "arcsin": 167, "tensor_el": 167, "cholesky_el": 167, "r0": 167, "r1": 167, "r3": 167, "r4": 167, "r5": 167, "carew": 167, "meyerand": 167, "anomal": 167, "930": [56, 71, 76, 79, 167, 210], "936": [21, 76, 79, 167, 226], "20832": 167, "pg": 167, "1628": [79, 167, 213], "subdivide_octahedron": [167, 174], "create_unit_spher": [167, 174], "gq": 167, "voxel_sign": 167, "max_qa": 167, "nqa": 167, "equatori": 167, "zone": 167, "conjug": [167, 234], "cone": 167, "x_scale": 167, "ftol": 167, "extracellular": 167, "fill_na": 167, "least_squar": 167, "federau": 167, "874": [76, 79, 167, 210], "881": [79, 167, 210, 211], "estimate_f_d_star": [167, 174], "params_f_d_star": 167, "estimate_linear_fit": [167, 174], "split_b": 167, "intercept": 167, "ivim_param": 167, "ivim_sign": 167, "cvx_fit": [167, 174], "f1": 167, "f2": 167, "ivim_mix_cost_on": [167, 174], "stoc_search_cost": [167, 174], "penros": 167, "thorough": 167, "nlls_cost": [167, 174], "x_f": 167, "stationari": 167, "exp_phi1": 167, "x_and_f_to_x_f": [167, 174], "x_f_to_x_and_f": [167, 174], "selector": [167, 211], "eigenvalue_threshold": 167, "dti_scale_estim": 167, "static_diffus": 167, "0007": [167, 169], "eapoc": 167, "ensembl": [167, 169], "ph": [167, 171], "avram": 167, "feasibl": [79, 167], "posiv": 167, "vastli": 167, "golden_direct": 167, "map_model": 167, "mapfit": 167, "mapmri_coef": 167, "lopt": 167, "errorcod": 167, "linalgerror": [167, 209, 213], "fitted_sign": [167, 174], "mapmri_r": [167, 174], "mapmri_coeff": [167, 174], "mapmri_mu": [167, 174], "c13": 167, "gaussiann": 167, "act": [167, 171, 210, 218], "c8": 167, "r_point": 167, "recalcul": 167, "qvals_or_gtab": 167, "qvalu": [167, 217], "c14": 167, "44a": 167, "c11": 167, "mu_squar": 167, "u0": 167, "index_matrix": 167, "q_gradient": 167, "rgrad": 167, "psi": 167, "binomi": 167, "odf_mat": 167, "n_vertic": 167, "n_mapmri_coef": 167, "odf_sh_mat": 167, "n_sh_coef": 167, "c7": 167, "n_coef": 167, "ind_mat": 167, "gridsiz": 167, "radius_max": 167, "tab": [167, 174, 215, 217, 227], "phi_n": 167, "phi_m": 167, "submatric": 167, "s_mat": 167, "t_mat": 167, "u_mat": 167, "weights_arrai": 167, "ncoef": 167, "n_of_weight": 167, "gcv_startpoint": 167, "startpoint": [167, 174], "optimal_lambda": 167, "understand": [159, 167, 232], "coeff": 167, "setter": 167, "warm": 167, "qp": 167, "iso_comp": 167, "osqp": 167, "primal": 167, "002": [136, 137, 167], "multishel": [167, 225], "msdki_param": 167, "diffusit": 167, "intrins": 167, "msignal": 167, "nub": 167, "fit_arrai": 167, "single_voxel_fit": 167, "sum_i": 167, "psi_i": 167, "bracket": [167, 171], "cohen": 167, "adad": 167, "wald": 167, "jmri": 167, "1194": [76, 79, 167, 210], "1208": [79, 167, 210], "ndrrai": 167, "constrain_q0": 167, "10000000000": 167, "eco": 167, "textbf": 167, "sum_k": 167, "ik": 167, "phi_i": 167, "t_k": 167, "c_i": 167, "q0": 167, "uniti": 167, "cham": 167, "qtdmri_coef": 167, "ut": 167, "tau_scal": 167, "cvxpy_solution_optim": 167, "rt_point": 167, "qtdmri_to_mapmri_coef": [167, 174], "convers": [167, 168, 219, 235], "depen": 167, "sparsity_ab": [167, 174], "sparsity_dens": [167, 174], "part1_ut_precomp": 167, "part23_ut_precomp": 167, "part4_ut_precomp": 167, "part1_uq_iso_precomp": 167, "b2": [167, 172], "c4": 167, "0005": 167, "grid_size_r": 167, "max_radius_r": 167, "grid_size_tau": 167, "min_radius_tau": 167, "max_radius_tau": 167, "weight_arrai": 167, "04": [22, 24, 29, 30, 33, 34, 37, 50, 58, 71, 76, 77, 79, 80, 82, 112, 125, 167, 227], "big_delta_start": 167, "big_delta_end": 167, "g_start": 167, "g_end": 167, "bval_isolin": 167, "7500": 167, "14000": 167, "alpha_shad": 167, "shade": 167, "_ols_fit": 167, "_wls_fit": 167, "_sdpdc_fit": 167, "c_": [167, 171], "d_sq": [167, 174], "mean_d_sq": [167, 174], "themselv": 167, "bmatrix": 167, "ig": 167, "bmat": 167, "otimesmathbf": 167, "_notimesmathbf": 167, "alongsid": [167, 171], "f_csf": [167, 174], "f_gm": [167, 174], "fit_vec": 167, "s_i": 167, "f_j": 167, "b_i": 167, "_j": 167, "b_id_": 167, "v_i": 167, "d_j": 167, "hf": 167, "modern": 167, "prod_": 167, "i_": 167, "i_n": 167, "t_n": 167, "gautschi": 167, "slavik": 167, "875": [77, 79, 116, 167, 210], "1090": [79, 167, 210], "s0025": 167, "5718": 167, "0470267": 167, "discontinu": 167, "global_fit": 167, "elsewher": 167, "alpha_": 167, "div": 167, "triangledown": 167, "lvert": 167, "rvert": 167, "biggr": 167, "rvert_": 167, "discrep": [167, 210, 217, 222], "chambol": 167, "boil": 167, "n_vox": 167, "elasticnet": 167, "parallel_backend": 167, "joblib": [167, 225], "parallelbackendbas": 167, "backend": 167, "loki": 167, "bottleneck": 167, "gil": 167, "tensor_matrix": 167, "behrens2007": 167, "stick_matrix": 167, "tej": [167, 210], "berg": 167, "jbabdi": 167, "rushworth": 167, "mf": [167, 169], "woolrich": 167, "mw": 167, "gain": [167, 169, 171], "sampling_matrix": [167, 174], "assume_norm": 167, "qball": [167, 215], "shm_coef": 167, "999": [79, 167, 210], "signal_object": 167, "where_dwi": 167, "residualbootstrapwapp": 167, "rh": 167, "r_sh": 167, "legaci": [163, 164, 167, 211, 212, 219, 225, 227, 234], "dirac": [167, 226], "colatitudin": 167, "use_scipi": 167, "y_mn": 167, "m_n": 167, "sph_harm": [167, 208], "onward": 167, "interchang": 167, "agre": [167, 234], "0_n": 167, "mrtrix3": [163, 167, 219, 234], "real_sh": 167, "raffelt": [163, 167, 234], "tabbara": [163, 167, 234], "dholland": [163, 167, 234], "pietsch": [163, 167, 234], "137": [76, 79, 80, 163, 167, 215, 234], "gadian": 167, "1176": [76, 79, 167, 210, 217], "1185": [79, 167, 210], "m_list": 167, "n_list": 167, "kx1": 167, "lazi": 167, "where_b0": 167, "leverag": 167, "hd": 167, "lcr": 167, "ruturn": 167, "haroon": 167, "return_inv": 167, "n_coeff": 167, "rarrow": 167, "2n": 167, "3l": 167, "8n": 167, "norm_factor": 167, "rectifi": 167, "log_ap": 167, "ixjxkxc": 167, "2l": [69, 167, 234], "ixjxkx6": 167, "lacerda": 167, "catani": 167, "simmon": 167, "full_sh_coeff": 167, "out_sh_coeff": 167, "025330295910584444": [167, 169], "constrain_e0": 167, "positive_constraint": 167, "amongst": 167, "rathi": 167, "20e": 167, "get_isbi2013_2shell_gtab": [167, 174], "shore_coef": 167, "pdf_grid": [167, 174], "shore_coeff": [167, 174], "qtextbf": 167, "nlm": 167, "biggl": 167, "dfrac": 167, "expbiggl": 167, "2zeta": 167, "y_l": [167, 234], "rtab": 167, "sphere_vertic": 167, "bxxxx": 167, "byyyi": 167, "bzzzz": 167, "bxxxy": 167, "bxxxz": 167, "bxyyi": 167, "byyyz": 167, "bxzzz": 167, "byzzz": 167, "bxxyi": 167, "bxxzz": 167, "byyzz": 167, "bxxyz": 167, "bxyyz": 167, "bxyzz": 167, "blogs0": 167, "cluster_map": 168, "evaluate_result": [168, 174], "slr_select": 168, "neirborhood": 168, "ba_valu": 168, "prune": [168, 171, 173, 200], "bmd_valu": 168, "slr_metric": [168, 173, 200], "slr_x0": 168, "slr_bound": 168, "slr_method": 168, "bundlemindistancemetr": [168, 174], "recognized_transf": 168, "recognized_label": 168, "lt": 168, "dtracks0": 168, "dtracks1": 168, "ba": 168, "recognized_bundl": 168, "expert_bundl": 168, "select_randomli": 168, "500000": 168, "refdata": [168, 174], "id_datum": 168, "add_clust": [168, 174], "clusters_s": [168, 174], "get_large_clust": [168, 174], "get_small_clust": [168, 174], "max_siz": 168, "remove_clust": [168, 174], "mdf_12point": 168, "max_nb_clust": 168, "2147483647": 168, "nk": 168, "farther": 168, "exceed": 168, "tradeoff": [168, 171], "garyfallidis16": 168, "million": [168, 171], "singapor": 168, "4187": [79, 168], "quickbundlex": 168, "child": [168, 173], "is_leaf": [168, 174], "return_indic": [167, 168, 174], "get_clust": [168, 174], "wanted_level": 168, "iter_preord": [168, 174], "traverse_postord": [168, 174], "nb_mpt": 168, "bin_siz": 168, "bidirect": 168, "barycent": 168, "use_neg": 168, "nb_sline": 168, "nb_slines_ref": 168, "coo_matrix": [168, 171], "non_zero_id": 168, "nb_non_empty_row": 168, "sline": 168, "nearest_id": 168, "nearest_dist": 168, "nb_non_empty_col": 168, "masked_vol": 168, "npmin": 168, "npmax": 168, "input_volum": [168, 173, 199], "bet": 168, "maskedvolum": 168, "tensor_fit": 168, "r_min": 168, "r_max": 168, "g_min": 168, "g_max": 168, "b_min": 168, "b_max": 168, "coars": 168, "new_cc_mask": 168, "manhattan": [168, 171], "rate": [159, 168], "upperbound": 168, "upper_bound": 168, "save_histori": 168, "posteriori": 168, "rice": 169, "rayleigh": 169, "gudbjartson": 169, "patz": 169, "910": [27, 35, 169, 209], "914": [79, 169, 209], "signal_w_nois": 169, "dx": 169, "dy": 169, "dz": 169, "0004": 169, "00628947": 169, "01257895": 169, "01886842": 169, "0251579": 169, "03144737": 169, "03773685": 169, "04402632": 169, "0503158": 169, "05660527": 169, "06289475": 169, "06918422": 169, "0754737": 169, "08176317": 169, "08805265": 169, "09434212": 169, "1006316": 169, "10692107": 169, "11321055": 169, "11950002": 169, "1257895": 169, "13207897": 169, "13836845": 169, "14465792": 169, "15094739": 169, "15723687": 169, "16352634": 169, "16981582": 169, "17610529": 169, "18239477": 169, "18868424": 169, "19497372": 169, "20126319": 169, "20755267": 169, "21384214": 169, "22013162": 169, "22642109": 169, "23271057": 169, "23900004": 169, "24528952": 169, "25157899": 169, "25786847": 169, "26415794": 169, "27044742": 169, "27673689": 169, "28302637": 169, "28931584": 169, "29560531": 169, "30189479": 169, "30818426": 169, "31447374": 169, "32076321": 169, "32705269": 169, "33334216": 169, "33963164": 169, "34592111": 169, "35221059": 169, "35850006": 169, "36478954": 169, "37107901": 169, "37736849": 169, "38365796": 169, "38994744": 169, "39623691": 169, "40252639": 169, "40881586": 169, "41510534": 169, "42139481": 169, "42768429": 169, "43397376": 169, "44026323": 169, "44655271": 169, "45284218": 169, "45913166": 169, "46542113": 169, "47171061": 169, "47800008": 169, "48428956": 169, "49057903": 169, "49686851": 169, "50315798": 169, "50944746": 169, "51573693": 169, "52202641": 169, "52831588": 169, "53460536": 169, "54089483": 169, "54718431": 169, "55347378": 169, "55976326": 169, "56605273": 169, "57234221": 169, "57863168": 169, "58492115": 169, "59121063": 169, "5975001": 169, "60378958": 169, "61007905": 169, "61636853": 169, "622658": 169, "62894748": 169, "63523695": 169, "64152643": 169, "6478159": 169, "65410538": 169, "66039485": 169, "66668433": 169, "6729738": 169, "67926328": 169, "68555275": 169, "69184223": 169, "6981317": 169, "70442118": 169, "71071065": 169, "71700013": 169, "7232896": 169, "72957907": 169, "73586855": 169, "74215802": 169, "7484475": 169, "75473697": 169, "76102645": 169, "76731592": 169, "7736054": 169, "77989487": 169, "78618435": 169, "79247382": 169, "7987633": 169, "80505277": 169, "81134225": 169, "81763172": 169, "8239212": 169, "83021067": 169, "83650015": 169, "84278962": 169, "8490791": 169, "85536857": 169, "86165805": 169, "86794752": 169, "87423699": 169, "88052647": 169, "88681594": 169, "89310542": 169, "89939489": 169, "90568437": 169, "91197384": 169, "91826332": 169, "92455279": 169, "93084227": 169, "93713174": 169, "94342122": 169, "94971069": 169, "95600017": 169, "96228964": 169, "96857912": 169, "97486859": 169, "98115807": 169, "98744754": 169, "99373702": 169, "00002649": 169, "00631597": 169, "01260544": 169, "01889491": 169, "02518439": 169, "03147386": 169, "03776334": 169, "04405281": 169, "05034229": 169, "05663176": 169, "06292124": 169, "06921071": 169, "07550019": 169, "08178966": 169, "08807914": 169, "09436861": 169, "10065809": 169, "10694756": 169, "11323704": 169, "11952651": 169, "12581599": 169, "13210546": 169, "13839494": 169, "14468441": 169, "15097389": 169, "15726336": 169, "16355283": 169, "16984231": 169, "17613178": 169, "18242126": 169, "18871073": 169, "19500021": 169, "20128968": 169, "20757916": 169, "21386863": 169, "22015811": 169, "22644758": 169, "23273706": 169, "23902653": 169, "24531601": 169, "25160548": 169, "25789496": 169, "26418443": 169, "27047391": 169, "27676338": 169, "28305286": 169, "28934233": 169, "29563181": 169, "30192128": 169, "30821075": 169, "31450023": 169, "3207897": 169, "32707918": 169, "33336865": 169, "33965813": 169, "3459476": 169, "35223708": 169, "35852655": 169, "36481603": 169, "3711055": 169, "37739498": 169, "38368445": 169, "38997393": 169, "3962634": 169, "40255288": 169, "40884235": 169, "41513183": 169, "4214213": 169, "42771078": 169, "43400025": 169, "44028973": 169, "4465792": 169, "45286867": 169, "45915815": 169, "46544762": 169, "4717371": 169, "47802657": 169, "48431605": 169, "49060552": 169, "496895": 169, "50318447": 169, "50947395": 169, "51576342": 169, "5220529": 169, "52834237": 169, "53463185": 169, "54092132": 169, "5472108": 169, "55350027": 169, "55978975": 169, "56607922": 169, "5723687": 169, "57865817": 169, "58494765": 169, "59123712": 169, "59752659": 169, "60381607": 169, "61010554": 169, "61639502": 169, "62268449": 169, "62897397": 169, "63526344": 169, "64155292": 169, "64784239": 169, "65413187": 169, "66042134": 169, "66671082": 169, "67300029": 169, "67928977": 169, "68557924": 169, "69186872": 169, "69815819": 169, "70444767": 169, "71073714": 169, "71702662": 169, "72331609": 169, "72960557": 169, "73589504": 169, "74218451": 169, "74847399": 169, "75476346": 169, "76105294": 169, "76734241": 169, "77363189": 169, "77992136": 169, "78621084": 169, "79250031": 169, "79878979": 169, "80507926": 169, "81136874": 169, "81765821": 169, "82394769": 169, "83023716": 169, "83652664": 169, "84281611": 169, "84910559": 169, "85539506": 169, "86168454": 169, "86797401": 169, "87426349": 169, "88055296": 169, "88684243": 169, "89313191": 169, "89942138": 169, "90571086": 169, "91200033": 169, "91828981": 169, "92457928": 169, "93086876": 169, "93715823": 169, "94344771": 169, "94973718": 169, "95602666": 169, "96231613": 169, "96860561": 169, "97489508": 169, "98118456": 169, "98747403": 169, "99376351": 169, "00005298": 169, "00634246": 169, "01263193": 169, "01892141": 169, "02521088": 169, "03150035": 169, "03778983": 169, "0440793": 169, "05036878": 169, "05665825": 169, "06294773": 169, "0692372": 169, "07552668": 169, "08181615": 169, "08810563": 169, "0943951": 169, "10068458": 169, "10697405": 169, "11326353": 169, "119553": 169, "12584248": 169, "13213195": 169, "13842143": 169, "1447109": 169, "15100038": 169, "15728985": 169, "16357932": 169, "1698688": 169, "17615827": 169, "18244775": 169, "18873722": 169, "1950267": 169, "20131617": 169, "20760565": 169, "21389512": 169, "2201846": 169, "22647407": 169, "23276355": 169, "23905302": 169, "2453425": 169, "25163197": 169, "25792145": 169, "26421092": 169, "2705004": 169, "27678987": 169, "28307935": 169, "28936882": 169, "2956583": 169, "30194777": 169, "30823724": 169, "31452672": 169, "32081619": 169, "32710567": 169, "33339514": 169, "33968462": 169, "34597409": 169, "35226357": 169, "35855304": 169, "36484252": 169, "37113199": 169, "37742147": 169, "38371094": 169, "39000042": 169, "39628989": 169, "40257937": 169, "40886884": 169, "41515832": 169, "42144779": 169, "42773727": 169, "43402674": 169, "44031622": 169, "44660569": 169, "45289516": 169, "45918464": 169, "46547411": 169, "47176359": 169, "47805306": 169, "48434254": 169, "49063201": 169, "49692149": 169, "50321096": 169, "50950044": 169, "51578991": 169, "52207939": 169, "52836886": 169, "53465834": 169, "54094781": 169, "54723729": 169, "55352676": 169, "55981624": 169, "56610571": 169, "57239519": 169, "57868466": 169, "58497414": 169, "59126361": 169, "59755308": 169, "60384256": 169, "61013203": 169, "61642151": 169, "62271098": 169, "62900046": 169, "63528993": 169, "64157941": 169, "64786888": 169, "65415836": 169, "66044783": 169, "66673731": 169, "67302678": 169, "67931626": 169, "68560573": 169, "69189521": 169, "69818468": 169, "70447416": 169, "71076363": 169, "71705311": 169, "72334258": 169, "72963206": 169, "73592153": 169, "742211": 169, "74850048": 169, "75478995": 169, "76107943": 169, "7673689": 169, "77365838": 169, "77994785": 169, "78623733": 169, "7925268": 169, "79881628": 169, "80510575": 169, "81139523": 169, "8176847": 169, "82397418": 169, "83026365": 169, "83655313": 169, "8428426": 169, "84913208": 169, "85542155": 169, "86171103": 169, "8680005": 169, "87428998": 169, "88057945": 169, "88686892": 169, "8931584": 169, "89944787": 169, "90573735": 169, "91202682": 169, "9183163": 169, "92460577": 169, "93089525": 169, "93718472": 169, "9434742": 169, "94976367": 169, "95605315": 169, "96234262": 169, "9686321": 169, "97492157": 169, "98121105": 169, "98750052": 169, "99379": 169, "00007947": 169, "00636895": 169, "01265842": 169, "0189479": 169, "02523737": 169, "03152684": 169, "03781632": 169, "04410579": 169, "05039527": 169, "05668474": 169, "06297422": 169, "06926369": 169, "07555317": 169, "08184264": 169, "08813212": 169, "09442159": 169, "10071107": 169, "10700054": 169, "11329002": 169, "11957949": 169, "12586897": 169, "13215844": 169, "13844792": 169, "14473739": 169, "15102687": 169, "15731634": 169, "16360582": 169, "16989529": 169, "17618476": 169, "18247424": 169, "18876371": 169, "19505319": 169, "20134266": 169, "20763214": 169, "21392161": 169, "22021109": 169, "22650056": 169, "23279004": 169, "23907951": 169, "24536899": 169, "25165846": 169, "25794794": 169, "26423741": 169, "27052689": 169, "27681636": 169, "28310584": 169, "28939531": 169, "29568479": 169, "30197426": 169, "30826374": 169, "31455321": 169, "32084268": 169, "32713216": 169, "33342163": 169, "33971111": 169, "34600058": 169, "35229006": 169, "35857953": 169, "36486901": 169, "37115848": 169, "37744796": 169, "38373743": 169, "39002691": 169, "39631638": 169, "40260586": 169, "40889533": 169, "41518481": 169, "42147428": 169, "42776376": 169, "43405323": 169, "44034271": 169, "44663218": 169, "45292166": 169, "45921113": 169, "4655006": 169, "47179008": 169, "47807955": 169, "48436903": 169, "4906585": 169, "49694798": 169, "50323745": 169, "50952693": 169, "5158164": 169, "52210588": 169, "52839535": 169, "53468483": 169, "5409743": 169, "54726378": 169, "55355325": 169, "55984273": 169, "5661322": 169, "57242168": 169, "57871115": 169, "58500063": 169, "5912901": 169, "59757958": 169, "60386905": 169, "61015852": 169, "616448": 169, "62273747": 169, "62902695": 169, "63531642": 169, "6416059": 169, "64789537": 169, "65418485": 169, "66047432": 169, "6667638": 169, "67305327": 169, "67934275": 169, "68563222": 169, "6919217": 169, "69821117": 169, "70450065": 169, "71079012": 169, "7170796": 169, "72336907": 169, "72965855": 169, "73594802": 169, "7422375": 169, "74852697": 169, "75481644": 169, "76110592": 169, "76739539": 169, "77368487": 169, "77997434": 169, "78626382": 169, "79255329": 169, "79884277": 169, "80513224": 169, "81142172": 169, "81771119": 169, "82400067": 169, "83029014": 169, "83657962": 169, "84286909": 169, "84915857": 169, "85544804": 169, "86173752": 169, "86802699": 169, "87431647": 169, "88060594": 169, "88689542": 169, "89318489": 169, "89947436": 169, "90576384": 169, "91205331": 169, "91834279": 169, "92463226": 169, "93092174": 169, "93721121": 169, "94350069": 169, "94979016": 169, "95607964": 169, "96236911": 169, "96865859": 169, "97494806": 169, "98123754": 169, "98752701": 169, "99381649": 169, "00010596": 169, "00639544": 169, "01268491": 169, "01897439": 169, "02526386": 169, "03155334": 169, "03784281": 169, "04413228": 169, "05042176": 169, "05671123": 169, "06300071": 169, "06929018": 169, "07557966": 169, "08186913": 169, "08815861": 169, "09444808": 169, "10073756": 169, "10702703": 169, "11331651": 169, "11960598": 169, "12589546": 169, "13218493": 169, "13847441": 169, "14476388": 169, "15105336": 169, "15734283": 169, "16363231": 169, "16992178": 169, "17621126": 169, "18250073": 169, "1887902": 169, "19507968": 169, "20136915": 169, "20765863": 169, "2139481": 169, "22023758": 169, "22652705": 169, "23281653": 169, "239106": 169, "24539548": 169, "25168495": 169, "25797443": 169, "2642639": 169, "27055338": 169, "27684285": 169, "28313233": 169, "2894218": 169, "29571128": 169, "30200075": 169, "30829023": 169, "3145797": 169, "32086918": 169, "32715865": 169, "33344812": 169, "3397376": 169, "34602707": 169, "35231655": 169, "35860602": 169, "3648955": 169, "37118497": 169, "37747445": 169, "38376392": 169, "3900534": 169, "39634287": 169, "40263235": 169, "40892182": 169, "4152113": 169, "42150077": 169, "42779025": 169, "43407972": 169, "4403692": 169, "44665867": 169, "45294815": 169, "45923762": 169, "4655271": 169, "47181657": 169, "47810604": 169, "48439552": 169, "49068499": 169, "49697447": 169, "50326394": 169, "50955342": 169, "51584289": 169, "52213237": 169, "52842184": 169, "53471132": 169, "54100079": 169, "54729027": 169, "55357974": 169, "55986922": 169, "56615869": 169, "57244817": 169, "57873764": 169, "58502712": 169, "59131659": 169, "59760607": 169, "60389554": 169, "61018502": 169, "61647449": 169, "62276396": 169, "62905344": 169, "63534291": 169, "64163239": 169, "64792186": 169, "65421134": 169, "66050081": 169, "66679029": 169, "67307976": 169, "67936924": 169, "68565871": 169, "69194819": 169, "69823766": 169, "70452714": 169, "71081661": 169, "71710609": 169, "72339556": 169, "72968504": 169, "73597451": 169, "74226399": 169, "74855346": 169, "75484294": 169, "76113241": 169, "76742188": 169, "77371136": 169, "78000083": 169, "78629031": 169, "79257978": 169, "79886926": 169, "80515873": 169, "81144821": 169, "81773768": 169, "82402716": 169, "83031663": 169, "83660611": 169, "84289558": 169, "84918506": 169, "85547453": 169, "86176401": 169, "86805348": 169, "87434296": 169, "88063243": 169, "88692191": 169, "89321138": 169, "89950086": 169, "90579033": 169, "9120798": 169, "91836928": 169, "92465875": 169, "93094823": 169, "9372377": 169, "94352718": 169, "94981665": 169, "95610613": 169, "9623956": 169, "96868508": 169, "97497455": 169, "98126403": 169, "9875535": 169, "99384298": 169, "00013245": 169, "00642193": 169, "0127114": 169, "01900088": 169, "02529035": 169, "03157983": 169, "0378693": 169, "04415878": 169, "05044825": 169, "05673772": 169, "0630272": 169, "06931667": 169, "07560615": 169, "08189562": 169, "0881851": 169, "09447457": 169, "10076405": 169, "10705352": 169, "113343": 169, "11963247": 169, "12592195": 169, "13221142": 169, "1385009": 169, "14479037": 169, "15107985": 169, "15736932": 169, "1636588": 169, "16994827": 169, "17623775": 169, "18252722": 169, "1888167": 169, "19510617": 169, "20139564": 169, "20768512": 169, "21397459": 169, "22026407": 169, "22655354": 169, "23284302": 169, "23913249": 169, "24542197": 169, "25171144": 169, "25800092": 169, "26429039": 169, "27057987": 169, "27686934": 169, "28315882": 169, "28944829": 169, "29573777": 169, "30202724": 169, "30831672": 169, "31460619": 169, "32089567": 169, "32718514": 169, "33347462": 169, "33976409": 169, "34605356": 169, "35234304": 169, "35863251": 169, "36492199": 169, "37121146": 169, "37750094": 169, "38379041": 169, "39007989": 169, "39636936": 169, "40265884": 169, "40894831": 169, "41523779": 169, "42152726": 169, "42781674": 169, "43410621": 169, "44039569": 169, "44668516": 169, "45297464": 169, "45926411": 169, "46555359": 169, "47184306": 169, "47813254": 169, "48442201": 169, "49071148": 169, "49700096": 169, "50329043": 169, "50957991": 169, "51586938": 169, "52215886": 169, "52844833": 169, "53473781": 169, "54102728": 169, "54731676": 169, "55360623": 169, "55989571": 169, "56618518": 169, "57247466": 169, "57876413": 169, "58505361": 169, "59134308": 169, "59763256": 169, "60392203": 169, "61021151": 169, "61650098": 169, "62279046": 169, "62907993": 169, "6353694": 169, "64165888": 169, "64794835": 169, "65423783": 169, "6605273": 169, "66681678": 169, "67310625": 169, "67939573": 169, "6856852": 169, "69197468": 169, "69826415": 169, "70455363": 169, "7108431": 169, "71713258": 169, "72342205": 169, "72971153": 169, "736001": 169, "74229048": 169, "74857995": 169, "75486943": 169, "7611589": 169, "76744838": 169, "77373785": 169, "78002732": 169, "7863168": 169, "79260627": 169, "79889575": 169, "80518522": 169, "8114747": 169, "81776417": 169, "82405365": 169, "83034312": 169, "8366326": 169, "84292207": 169, "84921155": 169, "85550102": 169, "8617905": 169, "86807997": 169, "87436945": 169, "88065892": 169, "8869484": 169, "89323787": 169, "89952735": 169, "90581682": 169, "9121063": 169, "91839577": 169, "92468524": 169, "93097472": 169, "93726419": 169, "94355367": 169, "94984314": 169, "95613262": 169, "96242209": 169, "96871157": 169, "97500104": 169, "98129052": 169, "98757999": 169, "99386947": 169, "00015894": 169, "00644842": 169, "01273789": 169, "01902737": 169, "02531684": 169, "03160632": 169, "03789579": 169, "04418527": 169, "05047474": 169, "05676422": 169, "06305369": 169, "06934316": 169, "07563264": 169, "08192211": 169, "08821159": 169, "09450106": 169, "10079054": 169, "10708001": 169, "11336949": 169, "11965896": 169, "12594844": 169, "13223791": 169, "13852739": 169, "14481686": 169, "15110634": 169, "15739581": 169, "16368529": 169, "16997476": 169, "17626424": 169, "18255371": 169, "18884319": 169, "19513266": 169, "20142214": 169, "20771161": 169, "21400108": 169, "22029056": 169, "22658003": 169, "23286951": 169, "23915898": 169, "24544846": 169, "25173793": 169, "25802741": 169, "26431688": 169, "27060636": 169, "27689583": 169, "28318531": 169, "datashap": 169, "2026834": 169, "40536679": 169, "60805019": 169, "81073359": 169, "01341699": 169, "21610038": 169, "41878378": 169, "62146718": 169, "82415057": 169, "02683397": 169, "22951737": 169, "43220076": 169, "63488416": 169, "83756756": 169, "04025096": 169, "24293435": 169, "44561775": 169, "64830115": 169, "85098454": 169, "05366794": 169, "25635134": 169, "45903473": 169, "66171813": 169, "86440153": 169, "06708493": 169, "26976832": 169, "47245172": 169, "67513512": 169, "87781851": 169, "08050191": 169, "orbit": 169, "thick": 169, "unweight": [169, 171], "remaind": 169, "cylind": [164, 169, 171], "soderman": 169, "s\u00f6derman": 169, "oll": 169, "bengt": 169, "j\u00f6nsson": 169, "1995": [79, 169, 220], "yaniv": 169, "978": [79, 169, 210], "ten": 169, "nr": 169, "292": [71, 76, 79, 80, 169, 216], "e0": [169, 217, 218], "multicompartment": 169, "imperm": 169, "neglect": [169, 171], "bvals_2": 169, "bvecs_2": 169, "d_comp": 169, "odf_vert": 169, "pdf_point": 169, "pname": 170, "bname": 170, "group_id": [170, 173], "dir_nam": 170, "hd5": 170, "10001": [170, 173], "target_bundl": 170, "return_mahalnobi": 170, "mahalanobi": 170, "return_mahalanobi": 170, "n_streamlin": [170, 171], "profile_stat": 170, "orient_bi": 170, "weights_kwarg": 170, "outlin": 170, "voxel_to_rasmm": [170, 171], "phrase": 171, "tracks1": 171, "tracks2": 171, "nm": 171, "m1": 171, "track2track": 171, "tl": 171, "mam_dist": 174, "indices2": 171, "speedi": 171, "maker": 171, "calc_sign": [171, 174], "reconstmodel": [171, 174], "bunch": [171, 174], "to_fit": 171, "weighted_sign": 171, "relative_sign": 171, "mean_sig": 171, "vox_data": 171, "reconstfit": [171, 174], "interior": 171, "mitig": [164, 171], "n_node": 171, "unique_idx": 171, "v2f": 171, "v2fn": 171, "answer": [141, 171], "minlen": 171, "fixedstep": [164, 171], "random_se": 171, "save_se": [171, 173, 205, 206, 222], "useless": [159, 171], "stepsiz": [171, 227], "pft_max_trial": 171, "back_tracking_dist": [171, 173, 206], "front_tracking_dist": [171, 173, 206], "trial": 171, "triangles_mask": 171, "triangles_weight": 171, "rand_gen": 171, "triangles_indic": 171, "trilinear_coord": 171, "triangles_idx": 171, "trilin_coord": 171, "trilinear_coordin": 171, "vts_valu": 171, "vertices_norm": 171, "vertices_color": 171, "triangles_valu": 171, "expected_len": 171, "len_along": 171, "cumsum": 171, "n_pol": 171, "xyz2": 171, "frenet": 171, "serret": 171, "mathwork": 171, "matlabcentr": 171, "fileexchang": 171, "11169": 171, "parametris": 171, "qquad": 171, "tangent": [164, 171], "binorm": 171, "kappa": 171, "torsion": 171, "helix": 171, "tm": 171, "ic": 171, "longest": [171, 173], "longest_or_indic": 171, "sph_cent": 171, "sph_radiu": 171, "rai": [171, 226], "wasp": [], "uwa": [], "pbourk": [], "spherelin": [], "cpp": 171, "xyzn": 171, "cookbook": 171, "netlib": 171, "fitpack": 171, "dierckx": 171, "datapoint": 171, "knot": 171, "ascend": 171, "spiral": 171, "splprep": 171, "splev": 171, "travel": 171, "va": 171, "51010101": 171, "09883545": 171, "new_streamlin": 171, "inv_shift": 171, "in_plac": 171, "selected_streamlin": 171, "roi1": 171, "roi2": 171, "n_roi": 171, "either_end": 171, "both_end": 171, "mask1": 171, "mask2": 171, "max_mdf": 171, "overrid": [168, 171, 210, 221], "subsamplen": 171, "degrad": 171, "5mm": 171, "jordan17": 171, "as_gener": 171, "ndarrrai": 171, "vol_dim": 171, "image_volum": 171, "indexerror": [171, 219], "label_volum": 171, "defaultdict": 171, "bincount": 171, "new_label": 171, "max_segment_length": 171, "output_streamlin": 171, "seeds_count": 171, "seed_count_per_voxel": 171, "0640051": 171, "47407377": 171, "04966248": 171, "0507979": 171, "20814782": 171, "20909526": 171, "46702984": 171, "04723225": 171, "47268436": 171, "27800683": 171, "37073231": 171, "29328084": 171, "39286015": 171, "16802019": 171, "32122912": 171, "42369171": 171, "27991879": 171, "06159077": 171, "70671916": 171, "48962585": 171, "00187459": 171, "99577329": 171, "target_mask": 171, "whatev": 171, "bresenham5": 171, "bresenham": 171, "jack": 171, "elton": 171, "plotter": 171, "ibm": 171, "houde15": 171, "compress_streamlin": [174, 208, 226], "roi_coord": 171, "region_of_interest": 171, "in_arrai": 171, "f4": 171, "u_return": 171, "tracking_output": 171, "include_roi": 171, "exclude_roi": 171, "aoi": 171, "fill_valu": [171, 174], "seq": 171, "plm": 171, "min_radius_curvatur": [164, 171], "onlinelibrari": [164, 171], "wilei": [164, 171], "22005": [164, 171], "out_png": 172, "recorded_ev": 172, "return_showm": 172, "order_transpar": 172, "buan_color": 172, "roi_imag": [172, 173, 195], "roi_color": [172, 173, 195], "peakandmetr": 172, "pictur": [172, 173, 195], "cababl": 172, "peel": [172, 173, 195], "anti": [172, 173, 195], "alias": [172, 173, 195], "horizon_ismrm19": [172, 173, 195], "juneja": [172, 173, 195, 212], "build_scen": [172, 174], "build_show": [172, 174], "abc": [172, 225], "tab_id": 172, "tab_ui": [172, 174], "win_siz": 172, "reposit": [172, 174], "clusters_visu": 172, "peak_actor": 172, "contour_actor": 172, "slices_visu": 172, "show_manag": 172, "enable_callback": 172, "add_cluster_actor": [172, 174], "tract_idx": 172, "thr": [171, 172], "centroid_actor": [172, 174], "cluster_actor": [172, 174], "recluster_tractogram": [172, 174], "tractogram_clust": [172, 174], "interactor": [172, 210, 211], "change_volum": [172, 174], "prev_idx": 172, "next_idx": 172, "visible_slic": 172, "data_shap": [172, 174], "intensities_rang": [172, 174], "register_picker_callback": [172, 174], "selected_slic": [172, 174], "volume_max": [172, 174], "volume_min": [172, 174], "mem": 172, "fit_kwarg": 172, "fit1": 172, "fit2": 172, "fitnam": 172, "xlimit": 172, "disprang": 172, "shape_profil": 172, "cbar": 172, "basemap_arg": 172, "triang": 172, "xlabel": 172, "ylabel": 172, "ylabl": 172, "img0": 172, "img1": 172, "title0": 172, "title_mid": 172, "title1": 172, "fig_kwarg": [172, 221], "segular": 172, "direct_grid_shap": 172, "direct_grid2world": 172, "inverse_grid_shap": 172, "inverse_grid2world": 172, "show_figur": 172, "warped_forward": 172, "warped_backward": 172, "wouldn": 172, "slice_indic": 172, "slice_typ": 172, "ltitl": 172, "rtitl": 172, "sagit": 172, "c2": 172, "magnitdu": 172, "docscrap": 173, "numpydoc": 173, "mentat": 173, "virtanen": 173, "pav": 173, "iki": 173, "fi": 173, "output_strategi": 173, "get_short_nam": [173, 174], "troubl": 173, "subworkflow": 173, "strongli": 173, "new_vox_s": [173, 201], "out_resl": [173, 201], "new_vox_sz": [173, 201], "static_fil": [173, 180, 202], "moving_fil": [173, 180, 202], "out_mov": [173, 175, 181, 202], "out_stat_centroid": [173, 202], "static_centroid": 173, "out_moving_centroid": [173, 202], "moving_centroid": 173, "out_moved_centroid": [173, 202], "moved_centroid": 173, "static_image_fil": [173, 175, 176, 177], "moving_image_fil": [173, 175, 176, 177], "out_qual": [173, 175], "quality_metr": [173, 175], "transform_map_fil": [173, 177], "overwritten": [173, 177], "prealign_fil": [173, 176], "inv_stat": [173, 176], "mopt_sigma_diff": [173, 176], "mopt_radiu": [173, 176], "mopt_smooth": [173, 176], "mopt_inner_it": [173, 176], "mopt_q_level": [173, 176], "mopt_double_gradi": [173, 176], "mopt_step_typ": [173, 176], "out_inv_stat": [173, 176], "inc_stat": 173, "out_field": [173, 176], "displacement_field": [159, 173], "bvalues_fil": [173, 181, 182, 188, 189, 190, 191, 192], "bvectors_fil": [173, 181, 182, 188, 189, 190, 191, 192], "bvecs_tol": [173, 181, 182, 188, 189, 191, 196], "out_linear_mov": [173, 180], "linearly_mov": 173, "out_nonlinear_mov": [173, 180], "out_warp_transform": [173, 180], "warp_transform": 173, "out_warp_kernel": [173, 180], "warp_kernel": 173, "out_dist": [173, 180], "distance_matrix": [171, 173, 174], "out_matched_pair": [173, 180], "cpd": [173, 174, 180], "treamlin": [173, 180], "prog": 173, "epilog": 173, "formatter_class": 173, "rawtexthelpformatt": 173, "prefix_char": 173, "fromfile_prefix_char": 173, "argument_default": 173, "conflict_handl": 173, "add_help": 173, "argumentpars": 173, "augment": 173, "argv": 173, "helpformatt": 173, "charact": [173, 210, 212, 216, 217], "add_descript": [173, 174], "add_epilogu": [173, 174], "add_sub_flow_arg": [173, 174], "sub_flow": 173, "introspect": 173, "sub_flow_opt": 173, "add_workflow": [173, 174], "arpars": 173, "get_flow_arg": [173, 174], "optional_paramet": [173, 174], "output_paramet": [173, 174], "positional_paramet": [173, 174], "show_argu": [173, 174], "dest": 173, "update_argu": [173, 174], "karg": 173, "get_opt": [173, 174], "get_sub_run": [173, 174], "set_sub_flows_opt": [173, 174], "_option": 173, "bval_fil": [173, 185], "dwi_patch2self": [173, 185], "globe": [173, 184, 185, 190, 191, 192, 199, 235], "dwi_nlmean": 173, "dwi_mppca": 173, "out_sigma": [173, 183], "dwi_sigma": 173, "out_unr": [173, 194], "dwi_unr": 173, "eof": [173, 174], "is_empti": [173, 174], "peek": [173, 174], "read_to_condit": [173, 174], "condition_func": 173, "read_to_next_empty_lin": [173, 174], "read_to_next_unindented_lin": [173, 174], "seek_next_non_empty_lin": [173, 174], "deindent": 173, "lvl": 173, "bshell_thr": [173, 196], "load_modul": [173, 174], "module_path": 173, "reload": [173, 210], "data_nam": [173, 187], "out_split": [173, 204], "lb": [173, 198, 227], "ub": [173, 198], "out_fnam": 173, "create_directori": [173, 174], "create_output": [173, 174], "file_existence_check": [173, 174], "set_input": [173, 174], "set_out_dir": [173, 174], "set_out_fnam": [173, 174], "set_output_kei": [173, 174], "sa": [171, 173], "sb": [171, 173], "substr": 173, "dir_str": 173, "prepend": 173, "multi_input": 173, "out_kei": 173, "fnc": 173, "frameobject": 173, "save_mask": [173, 186, 199], "dwi_mask": 173, "park2022": [173, 186], "data_fil": [173, 193, 203], "out_rtop": [173, 193], "out_lapnorm": [173, 193], "lapnorm": [173, 193], "out_msd": [173, 193], "out_qiv": [173, 193], "out_rtap": [173, 193], "out_rtpp": [173, 193], "out_ng": [173, 193], "out_perng": [173, 193], "perng": [173, 193], "out_parng": [173, 193], "parng": [173, 193], "laplacian_sign": [173, 193], "get_fitted_tensor": [173, 174], "optional_arg": 173, "mask_fil": [173, 188, 189, 190, 191, 192, 203], "out_fa": [173, 190, 191], "out_ga": [173, 190, 191], "out_rgb": [173, 190, 191], "out_md": [173, 190, 191], "out_ad": [173, 190, 191], "out_rd": [173, 190, 191], "out_mod": [173, 190, 191], "out_evec": [173, 190, 191], "out_ev": [173, 190, 191], "nifti_tensor": [173, 191], "hung": [173, 191], "frf": [173, 189], "odf_to_sh_ord": [173, 188, 189], "out_pam": [173, 188, 189], "out_shm": [173, 188, 189], "out_peaks_dir": [173, 188, 189], "peaks_dir": 173, "out_peaks_valu": [173, 188, 189], "peaks_valu": 173, "out_peaks_indic": [173, 188, 189], "peaks_indic": 173, "out_gfa": [173, 188, 189], "peak_from_model": [173, 188, 189, 216], "out_dt_tensor": [173, 190], "out_dk_tensor": [173, 190], "dki_tensor": 173, "out_mk": [173, 190], "out_ak": [173, 190], "out_rk": [173, 190], "joseph": [173, 190], "anita": [173, 190], "hanzhang": [173, 190], "kyle": [173, 190], "get_fitted_ivim": [173, 174], "out_s0_predict": [173, 192], "out_perfusion_fract": [173, 192], "out_d_star": [173, 192], "out_d": [173, 192], "sphere_nam": 173, "streamline_fil": [173, 197, 200], "model_bundle_fil": [173, 200], "no_slr": [173, 200], "slr_matrix": [173, 200], "r_reduction_thr": [173, 200], "r_pruning_thr": [173, 200], "no_r_slr": [173, 200], "out_recognized_transf": [173, 200], "out_recognized_label": [173, 200], "tini": [173, 200], "labels_fil": [173, 197], "out_bundl": [173, 197], "recognized_orig": 173, "bbox_threshold": [173, 203], "out_mask_cc": [173, 203], "out_mask_nois": [173, 203], "model_bundle_fold": [173, 179], "subject_fold": [173, 179], "get_metric_nam": [173, 174], "af_l_fa": 173, "h5_file": [173, 178], "save_lmm_plot": [173, 174], "plot_fil": 173, "bundle_nam": 173, "log10": 173, "bundle_fold": 173, "orig_bundle_fold": 173, "metric_fold": 173, "orig_fold": 173, "pam_fil": [173, 205, 206], "stopping_fil": [173, 205], "seeding_fil": [173, 205, 206], "use_binary_mask": [173, 205], "stopping_thr": [173, 205], "binar": [173, 205], "regularli": [173, 205, 206, 221], "closestpeak": [173, 205, 214], "wm_file": [173, 206], "gm_file": [173, 206], "csf_file": [173, 206], "pft_back": [173, 206], "pft_front": [173, 206], "pft_count": [173, 206], "cmc": [171, 173, 206], "100000000": 173, "icbm_2009a": [173, 195], "emerg": [173, 195], "icbm_2009c": [173, 195], "manage_output_overwrit": [173, 174], "_force_overwrit": 173, "outcom": 173, "liter": [173, 221, 222], "subpackag": 174, "get_info": [174, 208, 209], "_public": [174, 223], "scalespac": 174, "verbositylevel": 174, "syn_registr": [174, 217], "write_map": [174, 226], "read_map": 174, "_method_dict": 174, "register_dwi_seri": 174, "deformableregistr": 174, "gaussian_kernel": 174, "low_rank_eigen": 174, "initialize_sigma2": 174, "lowrankq": 174, "affineinversionerror": 174, "affineinvalidvalueserror": 174, "_transform_method": 174, "transform_geometric_cent": 174, "diffeomorphicregistr": [174, 219], "logger": [174, 226], "mult_aff": 174, "get_direction_and_spac": 174, "similaritymetr": 174, "emmetr": 174, "v_cycle_2d": 174, "v_cycle_3d": 174, "isotropicscalespac": 174, "streamlinedistancemetr": 174, "bundlemindistancematrixmetr": 174, "bundlemindistanceasymmetricmetr": 174, "bundlesumdistancematrixmetr": 174, "jointbundlemindistancemetr": 174, "streamlineregistrationmap": 174, "jointstreamlineregistrationmap": 174, "bundle_sum_dist": 174, "bundle_min_dist": 174, "bundle_min_distance_fast": 174, "bundle_min_distance_asymmetric_fast": 174, "remove_clusters_by_s": 174, "progressive_slr": 174, "slr_with_qbx": [174, 227], "get_unique_pair": 174, "compose_matrix44": 174, "decompose_matrix44": 174, "average_bundle_length": 174, "find_miss": 174, "onetim": 174, "sphere_stat": [174, 216, 217], "_tuple2ax": 174, "sphere2cart": [174, 215, 235], "cart2spher": [174, 215, 218], "sph2latlon": 174, "normalized_vector": 174, "vector_norm": [174, 215], "rodrigues_axis_rot": 174, "nearest_pos_semi_def": 174, "sphere_dist": 174, "cart_dist": 174, "vector_cosin": 174, "lambert_equal_area_projection_polar": 174, "lambert_equal_area_projection_cart": 174, "euler_matrix": 174, "compose_matrix": [174, 217], "decompose_matrix": 174, "circumradiu": 174, "vec2vec_rotmat": [174, 208, 224], "compose_transform": 174, "perpendicular_direct": 174, "dist_to_corn": 174, "is_hemispher": [174, 219], "gradient_table_from_bvals_bvec": 174, "gradient_table_from_qvals_bvec": 174, "gradient_table_from_gradient_strength_bvec": 174, "reorient_bvec": [174, 221], "generate_bvec": 174, "round_bval": 174, "get_bval_indic": 174, "check_multi_b": 174, "btens_to_param": 174, "params_to_bten": 174, "ornt_map": 174, "reorient_vector": 174, "reorient_on_axi": 174, "orientation_from_str": 174, "orientation_to_str": 174, "resetmixin": 174, "onetimeproperti": 174, "auto_attr": [174, 217], "nonnegativeleastsquar": 174, "sparse_nnl": 174, "wichmannhill2006": 174, "wichmannhill1982": 174, "lecuy": 174, "faces_from_sphere_vertic": 174, "unique_edg": 174, "unique_set": 174, "disperse_charges_alt": 174, "euler_characteristic_check": 174, "octahedron_vertic": 174, "octahedron_fac": 174, "icosahedron_vertic": 174, "icosahedron_fac": 174, "unit_octahedron": 174, "unit_icosahedron": 174, "hemi_icosahedron": 174, "random_uniform_on_spher": [174, 216, 217], "eigenstat": 174, "compare_orientation_set": 174, "angular_similar": 174, "create_unit_hemispher": 174, "cshift3d": 174, "permutationinvers": 174, "afb3d_a": 174, "sfb3d_a": 174, "sfb3d": 174, "afb3d": 174, "dwt3d": 174, "idwt3d": 174, "dataerror": [163, 174], "loads_compat": 174, "data_dir": 174, "get_sim_voxel": 174, "get_skeleton": 174, "get_gtab_taiwan_dsi": 174, "dsi_deconv_voxel": 174, "mrtrix_spherical_funct": 174, "get_cmap": [174, 217], "matlab_life_result": 174, "load_sdp_constraint": 174, "copyfileobj_withprogress": 174, "check_md5": 174, "fetch_data": 174, "fetch_stanford_label": 174, "fetch_resdnn_weight": 174, "fetch_synb0_weight": 174, "fetch_synb0_test": 174, "fetch_evac_weight": 174, "fetch_evac_test": 174, "fetch_stanford_t1": 174, "fetch_taiwan_ntu_dsi": 174, "fetch_scil_b0": 174, "fetch_cfin_multib": 174, "fetch_gold_standard_io": [174, 221], "fetch_qte_lte_pt": 174, "fetch_cti_rat1": 174, "fetch_fury_surfac": 174, "fetch_dib_70_lte_pte_st": 174, "fetch_dib_217_lte_pte_st": 174, "fetch_ptt_minimal_dataset": 174, "read_scil_b0": 174, "read_siemens_scil_b0": 174, "read_isbi2013_2shel": 174, "read_sherbrooke_3shel": 174, "read_stanford_label": 174, "read_stanford_hardi": 174, "read_stanford_t1": 174, "read_stanford_pve_map": 174, "read_taiwan_ntu_dsi": 174, "read_syn_data": 174, "fetch_tissue_data": 174, "read_tissue_data": 174, "fetch_cenir_multib": 174, "read_cfin_dwi": 174, "read_cfin_t1": 174, "read_qte_lte_pt": 174, "extract_example_tract": 174, "to_bids_descript": 174, "fetch_hcp": 174, "peak_directions_nl": 174, "reshape_peaks_for_visu": 174, "read_bvec_fil": 174, "save_qa_metr": 174, "load_peak": [174, 220], "save_peak": 174, "peaks_to_nifti": 174, "set_sft_logger_level": 174, "load_gener": 174, "save_gener": 174, "load_vtk": 174, "load_vtp": 174, "load_fib": 174, "load_dpi": 174, "save_vtk": 174, "save_vtp": 174, "save_fib": 174, "save_dpi": 174, "nifti1_symmat": 174, "make5d": 174, "decfa": [174, 214, 219], "decfa_to_float": 174, "is_reference_info_valid": 174, "save_buan_profiles_hdf5": 174, "read_img_arr_or_path": 174, "save_polydata": 174, "save_vtk_streamlin": [174, 221], "load_vtk_streamlin": [174, 221], "cnn_1d_denois": 174, "cnn1ddenois": 174, "channelsum": 174, "evacplu": 174, "prepare_img": 174, "init_model": 174, "singlelayerperceptron": 174, "multiplelayerpercepton": 174, "encoderblock": 174, "decoderblock": 174, "unet3d": 174, "unnorm": 174, "set_logger_level": 174, "transform_img": 174, "recover_img": 174, "multi_voxel": [174, 215, 221], "coeff_of_determin": 174, "axsymshrespons": 174, "constrainedsdtmodel": 174, "estimate_respons": 174, "forward_sdt_deconv_mat": 174, "odf_deconv": 174, "fa_trace_to_lambda": 174, "carlson_rf": 174, "carlson_rd": 174, "directional_diffus": 174, "directional_diffusion_vari": 174, "directional_kurtosi": 174, "apparent_kurtosis_coef": 174, "radial_kurtosi": 174, "kurtosis_maximum": 174, "mean_kurtosis_tensor": 174, "kurtosis_fractional_anisotropi": 174, "dki_predict": 174, "params_to_dki_param": 174, "ls_fit_dki": 174, "cls_fit_dki": 174, "wrotat": 174, "wrotate_el": 174, "wcon": 174, "split_dki_param": 174, "kurtosismicrostructuralfit": 174, "axonal_water_fract": 174, "diffusion_compon": 174, "dkimicro_predict": 174, "diffusionspectrumfit": 174, "diffusionspectrumdeconvfit": 174, "create_qspac": 174, "create_qt": 174, "hanning_filt": 174, "pdf_interp_coord": 174, "pdf_odf": [174, 215], "half_to_full_qspac": 174, "project_hemisph_bvec": 174, "threshold_propag": 174, "gen_psf": 174, "lr_deconv": 174, "geodesic_anisotropi": 174, "axial_diffus": 174, "radial_diffus": 174, "deviator": 174, "apparent_diffusion_coef": 174, "tensor_predict": 174, "iter_fit_tensor": [174, 208], "wls_fit_tensor": 174, "ols_fit_tensor": 174, "nlls_fit_tensor": 174, "restore_fit_tensor": 174, "_lt_indic": 174, "_lt_row": 174, "_lt_col": 174, "quantize_evec": [174, 210, 221], "eig_from_lo_tri": [174, 217], "forecastfit": 174, "find_signal_mean": 174, "forecast_error_func": 174, "psi_l": 174, "forecast_matrix": 174, "rho_matrix": 174, "lb_forecast": 174, "fwdti_predict": 174, "wls_iter": 174, "nls_iter": 174, "nls_fit_tensor": 174, "lower_triangular_to_choleski": 174, "cholesky_to_lower_triangular": 174, "generalizedqsamplingfit": 174, "normalize_qa": 174, "squared_radial_compon": 174, "npa": 174, "equatorial_zone_vertic": 174, "polar_zone_vertic": 174, "upper_hemi_map": 174, "equatorial_maximum": 174, "patch_vertic": 174, "patch_maximum": 174, "odf_sum": 174, "patch_sum": 174, "triple_odf_maxima": 174, "ivimmodeltrr": 174, "ivimmodelvp": 174, "ivim_predict": 174, "f_d_star_predict": 174, "f_d_star_error": 174, "ivim_model_selector": 174, "mapmrifit": 174, "isotropic_scale_factor": 174, "mapmri_index_matrix": 174, "b_mat": 174, "b_mat_isotrop": 174, "mapmri_phi_1d": 174, "mapmri_phi_matrix": 174, "mapmri_psi_1d": 174, "mapmri_psi_matrix": 174, "mapmri_odf_matrix": 174, "mapmri_isotropic_phi_matrix": 174, "mapmri_isotropic_radial_signal_basi": 174, "mapmri_isotropic_m_mu_independ": 174, "mapmri_isotropic_m_mu_depend": 174, "mapmri_isotropic_psi_matrix": 174, "mapmri_isotropic_radial_pdf_basi": 174, "mapmri_isotropic_k_mu_independ": 174, "mapmri_isotropic_k_mu_depend": 174, "binomialfloat": 174, "mapmri_isotropic_odf_matrix": 174, "mapmri_isotropic_odf_sh_matrix": 174, "mapmri_isotropic_laplacian_reg_matrix": 174, "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix": 174, "mapmri_isotropic_index_matrix": 174, "create_rspac": 174, "map_laplace_u": 174, "map_laplace_t": 174, "map_laplace_": 174, "mapmri_stu_reg_matric": 174, "mapmri_laplacian_reg_matrix": 174, "generalized_crossvalidation_arrai": 174, "generalized_crossvalid": 174, "gcv_cost_funct": 174, "msdeconvfit": 174, "qpfitter": 174, "multi_tissue_basi": 174, "solve_qp": [174, 222, 227], "meandiffusionkurtosisfit": 174, "mean_signal_bvalu": 174, "msk_from_awf": 174, "awf_from_msk": 174, "msdki_predict": 174, "wls_fit_msdki": 174, "multivoxelfit": 174, "callablearrai": 174, "multi_voxel_fit": [174, 225], "odfmodel": 174, "odffit": 174, "minmax_norm": [174, 216, 219], "qtdmrifit": 174, "qtdmri_to_mapmri_matrix": 174, "qtdmri_isotropic_to_mapmri_matrix": 174, "qtdmri_temporal_norm": 174, "qtdmri_mapmri_norm": 174, "qtdmri_mapmri_isotropic_norm": 174, "qtdmri_signal_matrix_": 174, "qtdmri_signal_matrix": 174, "qtdmri_eap_matrix": 174, "qtdmri_isotropic_signal_matrix_": 174, "qtdmri_isotropic_signal_matrix": 174, "qtdmri_eap_matrix_": 174, "qtdmri_isotropic_eap_matrix_": 174, "qtdmri_isotropic_eap_matrix": 174, "radial_basis_opt": 174, "angular_basis_opt": 174, "radial_basis_eap_opt": 174, "angular_basis_eap_opt": 174, "temporal_basi": 174, "qtdmri_index_matrix": 174, "qtdmri_isotropic_index_matrix": 174, "qtdmri_laplacian_reg_matrix": 174, "qtdmri_isotropic_laplacian_reg_matrix": 174, "part23_reg_matrix_q": 174, "part23_iso_reg_matrix_q": 174, "part4_reg_matrix_q": 174, "part4_iso_reg_matrix_q": 174, "part1_reg_matrix_tau": 174, "part23_reg_matrix_tau": 174, "part4_reg_matrix_tau": 174, "qtdmri_isotropic_sc": 174, "qtdmri_anisotropic_sc": 174, "design_matrix_spati": 174, "create_rt_space_grid": 174, "qtdmri_number_of_coeffici": 174, "l1_crossvalid": 174, "elastic_crossvalid": 174, "from_3x3_to_6x1": 174, "from_6x1_to_3x3": 174, "from_6x6_to_21x1": 174, "from_21x1_to_6x6": 174, "cvxpy_1x6_to_3x3": 174, "cvxpy_1x21_to_6x6": 174, "dtd_covari": 174, "qti_sign": 174, "rumba_deconv": 174, "mbessel_ratio": 174, "generate_kernel": 174, "rumba_deconv_glob": 174, "isotropicmodel": 174, "isotropicfit": 174, "exponentialisotropicmodel": 174, "exponentialisotropicfit": 174, "sparsefasciclefit": 174, "sfm_design_matrix": 174, "sphharmmodel": [174, 216], "qballbasemodel": [174, 219], "sphharmfit": [174, 216], "opdtmodel": 174, "residualbootstrapwrapp": 174, "forward_sdeconv_mat": 174, "sh_to_rh": 174, "gen_dirac": 174, "spherical_harmon": 174, "real_sph_harm": [174, 210], "real_sh_tournier_from_index": 174, "real_sh_descoteaux_from_index": 174, "real_sh_tourni": 174, "real_sh_descoteaux": [164, 174], "real_sym_sh_mrtrix": 174, "real_sym_sh_basi": 174, "sph_harm_ind_list": 174, "order_from_ncoef": 174, "smooth_pinv": 174, "lazy_index": 174, "normalize_data": 174, "lcr_matrix": 174, "bootstrap_data_arrai": 174, "bootstrap_data_voxel": 174, "calculate_max_ord": [174, 213], "convert_sh_to_full_basi": 174, "convert_sh_from_legaci": 174, "convert_sh_to_legaci": [174, 226], "shorefit": 174, "shore_matrix": 174, "shore_matrix_pdf": 174, "shore_matrix_odf": 174, "l_shore": 174, "n_shore": 174, "shore_indic": 174, "shore_ord": 174, "dki_design_matrix": 174, "check_rang": 174, "bundle_adjac": 174, "ba_analysi": 174, "cluster_bundl": 174, "clustercentroid": 174, "treeclust": 174, "treeclustermap": 174, "qbx_and_merg": 174, "nearest_from_matrix_col": 174, "applymask": 174, "clean_cc_mask": 174, "mean_manhattan_dist": 174, "mean_euclidean_dist": 174, "upper_bound_by_r": 174, "upper_bound_by_perc": 174, "diff2eigenvector": 174, "orbital_phantom": 174, "diffusion_ev": 174, "callaghan_perpendicular": 174, "gaussian_parallel": 174, "cylinders_and_ball_soderman": 174, "kurtosis_el": 174, "dki_sign": [174, 210], "all_tensor_evec": [174, 218], "single_tensor_rtop": 174, "multi_tensor_rtop": 174, "single_tensor_pdf": 174, "multi_tensor_pdf": 174, "single_tensor_msd": 174, "multi_tensor_msd": 174, "detect_corresponding_track": 174, "detect_corresponding_tracks_plu": 174, "lifesignalmak": 174, "streamline_sign": 174, "streamline_gradi": 174, "grad_tensor": 174, "streamline_tensor": 174, "triangles_area": 174, "vertices_to_triangles_valu": 174, "wind": [174, 210], "midpoint": 174, "frenet_serret": 174, "mean_curvatur": 174, "mean_orient": 174, "generate_combin": 174, "longest_track_bundl": 174, "intersect_spher": 174, "inside_spher": 174, "inside_sphere_point": 174, "arbitrarypoint": 174, "principal_compon": 174, "midpoint2point": 174, "relist_streamlin": 174, "center_streamlin": 174, "ndbincount": 174, "reduce_label": 174, "subseg": 174, "streamline_near_roi": [174, 225], "unique_row": [174, 217], "transform_tracking_output": 174, "reduce_roi": [174, 225], "max_angle_from_curvatur": 174, "min_radius_curvature_from_angl": 174, "gmem": 174, "app": 174, "globalhorizon": 174, "horizontab": 174, "tabmanag": 174, "color_single_slid": 174, "color_double_slid": 174, "clusterstab": 174, "peakstab": 174, "roistab": 174, "slicestab": 174, "clustersvisu": 174, "slicesvisu": 174, "slicer_panel": 174, "bundle_shape_profil": 174, "sph_project": [174, 215, 217], "simple_plot": 174, "draw_lattice_2d": 174, "plot_slic": 174, "docstring_pars": 174, "multi_io": [174, 211, 213], "resliceflow": 174, "slrwithqbxflow": 174, "applytransformflow": 174, "synregistrationflow": [174, 227], "bundlewarpflow": 174, "check_dimens": 174, "introspectiveargumentpars": 174, "get_args_default": 174, "none_or_dtyp": 174, "patch2selfflow": 174, "mppcaflow": 174, "gibbsringingflow": 174, "numpydocstr": 174, "dedent_lin": 174, "get_level": 174, "ioinfoflow": 174, "splitflow": [174, 220], "maskflow": 174, "common_start": 174, "slash_to_und": 174, "connect_output_path": 174, "concatenate_input": 174, "basename_without_extens": 174, "io_iter": 174, "io_iterator_": 174, "evacplusflow": 174, "reconstmapmriflow": 174, "reconstdtiflow": 174, "reconstcsdflow": 174, "reconstcsaflow": 174, "reconstdkiflow": 174, "reconstivimflow": 174, "reconstrumbaflow": 174, "recobundlesflow": 174, "labelsbundlesflow": 174, "snrinccflow": 174, "bundleanalysistractometryflow": 174, "linearmixedmodelsflow": 174, "bundleshapeanalysi": 174, "buan_bundle_profil": 174, "localfibertrackingpamflow": 174, "pftrackingpamflow": 174, "horizonflow": 174, "andgaryfallidi": [179, 200], "forinvestig": [179, 200], "acrosspopul": [179, 200], "randommatrix": [182, 219], "noisemap": [182, 183], "inmedicin": 182, "matrixtheori": 183, "andprima": 184, "onhardi": 184, "featurecrf": 186, "mridata": 194, "ringingartifact": 194, "2016doi": 194, "linearregistr": 202, "ofstreamlin": 202, "fiberbundl": 202, "matterbundl": 202, "registrationand": 202, "towardsquantit": 206, "alphabet": 208, "1022": [76, 79, 208, 210, 219], "qixiang": 208, "chen": [159, 208], "gonzalo": 208, "232": [79, 80, 208, 216], "github_stat": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "769": [76, 208], "altogeth": 208, "772": [76, 79, 208], "xvfb": 208, "headless": 208, "754": [76, 79, 208], "car": 208, "gitter": [208, 209, 212, 221, 229], "chat": [208, 209, 212], "753": [76, 79, 208], "tst": [208, 209, 210, 212, 213, 215, 217, 220, 221, 222], "767": [76, 77, 208], "offscreen": 208, "test_slic": 208, "768": [76, 79, 208], "766": [76, 79, 208], "751": [79, 89, 208], "765": [76, 208], "757": [76, 79, 208], "587": [71, 79, 82, 208], "pr1": [208, 218], "748": 208, "_to_voxel_toler": 208, "678": [76, 82, 208], "714": [71, 76, 82, 208], "739": [79, 208], "733": [71, 76, 79, 208], "743": [76, 79, 208], "memleak": 208, "sinkpoint": 208, "741": [76, 208], "727": [76, 79, 208], "726": [76, 79, 208], "729": [71, 76, 79, 208], "736": [125, 208], "tk": 208, "735": [76, 79, 208], "732": [76, 82, 208], "wip": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227], "731": [76, 79, 208], "640": [76, 82, 208], "682": [71, 76, 82, 208], "716": [76, 79, 208], "699": [79, 208], "712": [76, 79, 208], "gh707": 208, "713": [76, 78, 79, 208], "677": [76, 79, 82, 208], "pr3": 208, "721": [76, 79, 82, 208], "572": [71, 79, 82, 208], "708": [76, 208], "707": [76, 79, 208, 219], "709": [76, 79, 124, 125, 208], "703": [76, 77, 79, 208], "705": [79, 208], "702": [71, 76, 208], "689": [71, 76, 208], "681": [71, 76, 79, 208], "da": [208, 225], "696": [76, 79, 82, 208], "691": [71, 76, 79, 82, 208], "661": [71, 76, 79, 208], "690": [71, 79, 90, 208], "segfault": [208, 213, 216], "667": [76, 208], "sourceforg": 208, "makefil": 208, "gh": [208, 217], "upl": 208, "676": [71, 76, 82, 208, 213], "infrastructur": 208, "533": [71, 76, 79, 208], "mrg": [208, 209, 210, 211, 212, 216, 217], "686": [76, 82, 208], "pyhon26": 208, "683": [76, 79, 208], "654": [71, 76, 79, 82, 208], "684": [71, 76, 79, 82, 208], "674": [76, 82, 208], "679": [76, 79, 208], "680": [71, 76, 208], "664": [76, 79, 208], "pr2": 208, "671": [71, 76, 79, 208], "663": [71, 76, 82, 208], "usherbrook": 208, "648": [71, 79, 82, 208], "582": [71, 76, 82, 89, 208], "660": [71, 76, 208], "612": [71, 76, 79, 208], "wrt": 208, "651": [76, 79, 82, 208], "659": [27, 34, 71, 76, 79, 82, 208], "658": [71, 76, 79, 82, 208], "resav": 208, "657": [71, 76, 79, 208], "628": [71, 79, 82, 208], "637": [71, 79, 82, 208], "639": [71, 79, 82, 208], "614": [71, 76, 79, 82, 208], "633": [71, 79, 82, 208], "tissuetyp": 208, "632": [76, 79, 208], "627": [79, 82, 208], "miss": [171, 208, 210, 211, 212, 213, 215, 217, 219, 220, 222, 224, 226], "626": [71, 76, 79, 82, 208], "loosevers": 208, "625": [71, 76, 79, 82, 208], "624": [71, 76, 82, 208], "619": [71, 76, 79, 82, 208], "618": [71, 76, 79, 82, 208], "616": [71, 76, 79, 82, 208], "576": [71, 79, 82, 208], "387": [79, 80, 208, 213], "610": [71, 79, 82, 208], "609": [71, 76, 82, 208], "607": [71, 76, 79, 82, 208], "606": [62, 71, 76, 82, 208], "605": [71, 79, 82, 208], "594": [71, 82, 208, 218], "771": 208, "761": [76, 77, 79, 208], "dconn": 208, "723": [76, 79, 208], "738": [76, 208], "tkinter": 208, "752": [76, 79, 208], "mesa": 208, "763": [76, 208], "overflow": [171, 208, 213, 217], "764": [76, 79, 208], "404": [76, 79, 80, 208, 218, 220], "286": [79, 80, 208], "cleanup": [208, 210, 215, 216, 217, 218, 221, 224, 225], "755": [76, 79, 208], "test_shm": 208, "test_sf_to_sh": 208, "typeerror": [208, 216, 217, 227], "same_kind": 208, "737": [76, 79, 82, 208], "672": [76, 82, 208], "730": 208, "734": [76, 208], "688": [76, 79, 208], "cento": [208, 213], "python2": 208, "725": [76, 79, 208], "611": [71, 76, 79, 82, 208], "715": [79, 208], "719": [76, 79, 208], "693": [71, 76, 79, 208], "694": [29, 71, 76, 79, 82, 208], "timeout": [208, 217, 222, 225], "697": [79, 208], "test_spher": 208, "test_interp_rbf": 208, "649": [76, 79, 208], "656": [77, 79, 208], "701": [79, 208], "704": [71, 76, 82, 208], "hyp1f1": 208, "622": [76, 79, 82, 208], "233": [76, 79, 80, 208, 217], "652": [71, 82, 208], "653": [71, 76, 79, 208], "revisit": [208, 216], "cuba": 208, "655": [50, 71, 76, 79, 82, 208], "638": [76, 82, 208], "630": [53, 58, 71, 79, 82, 208], "623": [71, 79, 208], "604": [71, 76, 79, 82, 208], "arm": 208, "613": [71, 76, 82, 208], "test_vector_field": [208, 210], "test_reorient_vector_field_2d": 208, "icon": [208, 213], "nanmean": [208, 218], "271": [76, 79, 80, 209], "933": [77, 209, 210], "925": [77, 209], "915": [76, 79, 209], "dipy_quickbundl": 209, "922": [58, 59, 77, 79, 209], "921": [76, 209], "918": [76, 79, 209], "test_expectmax": 209, "917": [77, 79, 209], "916": [76, 79, 209], "908": 209, "911": [76, 77, 79, 209], "904": [77, 209], "851": [76, 77, 79, 209], "upcom": [209, 211, 217, 219, 220, 224, 227], "856": [79, 209], "room": 209, "762": [76, 79, 209], "816": [76, 79, 209], "811": [79, 209], "853": [76, 79, 209], "miscellan": [209, 225, 226], "849": [79, 209], "850": [77, 209], "848": [79, 209], "847": [79, 209], "845": [79, 209], "examples_index": 209, "846": [76, 77, 209], "826": [79, 209], "841": [76, 79, 209], "839": [76, 79, 209], "819": [76, 209], "843": [79, 209], "838": [76, 77, 209], "833": [79, 209], "817": 209, "695": [76, 79, 209], "829": [76, 79, 209], "813": [79, 209, 210], "830": 209, "825": [76, 79, 209], "toollib": 209, "802": [76, 79, 209], "760": [76, 209], "824": [79, 209], "815": [46, 77, 79, 209], "anymor": [209, 213, 215, 217, 222, 226], "669": [76, 79, 82, 209], "moco": 209, "809": [79, 209], "821": [79, 209], "revert": [209, 210, 213, 215, 217], "commit_info": 209, "818": [79, 209], "797": 209, "806": [76, 79, 209], "814": [76, 209, 216], "745": [76, 209], "807": [79, 209], "shebang": [209, 210], "801": [77, 79, 209], "886": [50, 106, 112, 209], "863": [76, 209], "919": 209, "896": [77, 209, 210], "906": [77, 79, 209], "890": [76, 209], "905": [76, 77, 79, 209], "broken": [209, 210, 211, 212, 213, 214, 217, 219, 220, 221, 227], "898": [79, 209], "891": [79, 209, 210], "892": [76, 77, 209], "894": [82, 209], "895": [51, 71, 76, 77, 79, 209], "893": [79, 100, 103, 209], "860": [76, 79, 209], "badg": [209, 210, 211, 212, 213, 225], "692": [76, 209], "quickstart": [209, 213], "822": [76, 209], "me": 209, "urlerror": 209, "urlopen": 209, "errno": 209, "10060": 209, "840": [76, 209], "855": [76, 77, 209], "3rc": 209, "153": [67, 76, 79, 80, 209, 224], "665": [47, 58, 71, 76, 82, 209], "macosx": 209, "758": [76, 209], "842": [76, 209], "pip": [209, 210, 217], "805": [79, 209], "812": [76, 209], "685": [76, 79, 209, 223], "pr5": [209, 223], "666": [79, 209], "747": [76, 79, 209], "631": [71, 79, 209], "820": [79, 209], "hash": [209, 213], "810": [77, 209], "_voxel2stream": 209, "803": [77, 79, 209], "vm": 209, "1491": [76, 79, 210, 212], "antonio": 210, "ossa": 210, "etienn": [210, 224, 227], "julio": 210, "villalon": 210, "manu": 210, "sharma": [210, 213, 214], "gonzalez": 210, "riddhish": 210, "bhalodia": 210, "sourav": 210, "singh": [210, 212], "stong": 210, "guillaum": [210, 211, 213], "theaud": [210, 211, 213], "tingyi": 210, "wanyan": 210, "wright": 210, "vibhatha": 210, "abeykoon": 210, "theaveragegui": 210, "511": [76, 210, 217], "342": [79, 80, 210, 222], "1273": 210, "1272": [79, 210], "1269": [76, 79, 210], "1271": [76, 79, 210], "tut": 210, "1268": [79, 210], "1243": [76, 210], "1223": 210, "1270": [79, 210], "1263": 210, "1254": [68, 76, 79, 210], "1261": 210, "1255": 210, "1260": [76, 79, 210], "1241": [76, 210], "1250": [76, 79, 82, 210], "1244": [79, 210], "1235": [76, 79, 210], "1233": [76, 79, 210], "dipy_hom": 210, "1234": [159, 210], "ascii": [210, 212, 216, 217], "1222": [76, 79, 210], "lightweight": [210, 211, 213], "1228": [76, 79, 210], "1227": 210, "1226": [76, 77, 79, 210], "1229": [79, 210], "1225": 210, "1219": 210, "dropbox": 210, "1221": [79, 210], "1212": [79, 210], "1217": [79, 210], "1205": [79, 210], "1166": [76, 79, 210], "1216": [76, 210], "1214": 210, "clarif": 210, "simplify_warp_funcion_3d": 210, "1206": [79, 210], "1204": [79, 210], "1196": [76, 79, 210], "1199": [79, 210], "1202": [76, 79, 210], "1198": [76, 79, 210], "1201": [79, 210], "cla": 210, "1052": 210, "1183": 210, "textbox": 210, "1186": [76, 79, 210], "wheelhous": 210, "1195": [79, 210], "assert_arrays_equ": 210, "1193": [79, 210], "accent": [210, 219], "anticip": 210, "1140": [71, 79, 210], "1171": [76, 210], "int64": 210, "1123": 210, "1174": [76, 79, 210], "1162": [79, 210], "1147": [76, 210], "1050": 210, "denspe": [174, 210], "1082": [76, 210], "1153": [76, 210], "1159": 210, "1157": [76, 210], "get_head": 210, "1160": [76, 79, 210], "1158": [76, 79, 210], "1151": [76, 210], "fmin": 210, "studio": 210, "1149": [76, 210], "1137": 210, "942": [76, 79, 210], "1141": [76, 210], "benchmark": [174, 210, 215], "1098": [76, 210], "1136": [76, 79, 210], "1113": [76, 79, 210], "1134": [79, 210], "993": [76, 79, 210], "1064": [76, 79, 210], "1114": [79, 210], "pathlength": 210, "1132": [77, 79, 210], "1125": 210, "1130": [79, 82, 210], "minor": [210, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223], "1092": [79, 210], "1129": 210, "1127": 210, "1034": [79, 210], "1060": [79, 210], "1124": [79, 210], "1110": [79, 210], "1120": [79, 210], "1119": [79, 210], "1075": [76, 79, 210], "drop26": 210, "835": [71, 76, 77, 79, 210], "1046": [76, 79, 210], "nbr_process": 210, "1049": 210, "1087": [76, 79, 210], "1112": [79, 210], "1106": 210, "1066": [79, 210], "1091": [76, 79, 210], "1105": [76, 79, 210], "imp": 210, "1102": 210, "py35": 210, "1100": 210, "1094": 210, "1059": [79, 210], "1061": [76, 210], "1089": [76, 79, 210], "1079": [76, 79, 210], "1080": 210, "828": 210, "1072": [79, 82, 210], "1025": [76, 79, 210], "1077": [76, 79, 210], "1069": [76, 210], "1068": [79, 210], "test_shor": 210, "1067": [76, 210], "1062": [79, 210], "1056": [79, 210], "1028": [22, 79, 210], "1041": [79, 210], "1039": [76, 79, 210], "1019": [76, 79, 210], "heavi": 210, "1018": [76, 79, 210], "1035": 210, "974": [79, 210], "1021": [71, 79, 210], "1024": [79, 210], "981": 210, "979": [76, 79, 210], "958": [76, 79, 210], "1005": [76, 79, 210], "951": [79, 210], "1015": [76, 79, 210], "progressbar": [210, 222], "992": 210, "1003": [79, 210], "1004": [21, 210], "pkg_info": 210, "1006": 210, "1010": 210, "929": [52, 58, 210], "941": [77, 210], "976": [79, 210], "956": [76, 79, 210, 217], "955": [79, 82, 210], "952": [79, 210], "982": [76, 79, 210], "972": [79, 210, 215], "901": [79, 129, 130, 210], "971": 210, "989": [76, 79, 210], "977": 210, "957": [48, 58, 79, 210], "959": [79, 210], "967": [76, 210], "954": [50, 79, 84, 210], "948": [76, 79, 210], "test_sumsqdiff": 210, "test_scalespac": 210, "964": [79, 82, 92, 210], "test_imaffin": 210, "963": [76, 79, 210], "947": [79, 210], "897": [76, 79, 210], "926": [27, 33, 76, 77, 79, 210], "937": [77, 210], "clamp": 210, "907": [76, 79, 210], "mathjax": 210, "932": [76, 79, 90, 210], "931": 210, "927": 210, "test_bvectxt": 210, "913": [76, 77, 79, 210], "935": 210, "934": [76, 77, 79, 210], "todai": 210, "1143": [76, 210], "1246": [76, 79, 210], "1265": 210, "test_nlmeans_4d_3dsigma_and_thread": 210, "1251": 210, "1238": 210, "cryptic": 210, "1242": [79, 210], "intermittenli": 210, "1252": [79, 210], "revamp": 210, "1179": 210, "1253": 210, "1001": [79, 210], "1258": [76, 79, 210], "369": [76, 79, 80, 210], "1155": [76, 79, 210], "1070": [79, 210], "711": [76, 79, 210], "api_chang": 210, "321": [76, 80, 210], "994": 210, "608": [71, 79, 82, 210], "test_imwarp": 210, "591": [71, 76, 79, 82, 210], "seed_from_mask": [210, 219], "518": [71, 76, 79, 82, 210], "328": [80, 210], "incompat": [210, 217, 226, 227], "1210": [79, 210], "1209": [79, 210], "909": [76, 77, 79, 210], "inconsist": [210, 217, 222, 223], "1182": [76, 79, 210], "1211": 210, "1027": [76, 79, 210], "1218": [76, 79, 210], "1215": [79, 210], "tracking_quick_start": [210, 211, 217], "1213": [76, 79, 210], "simplify_warp_function_3d": [174, 210], "1191": [76, 79, 210], "1207": [79, 210], "1107": [76, 79, 210], "swallow": [210, 221], "rework": [210, 215, 217], "1188": [76, 79, 210], "1187": [79, 210], "1170": [76, 79, 210], "1086": 210, "1173": [76, 210], "1190": [79, 210], "test_peaksfrommodelparallel": 210, "1189": [79, 210], "np1": 210, "1139": [76, 210], "nearestneighbor_interpol": [174, 210], "1142": [79, 210], "streamlines_format": 210, "1097": [76, 79, 210], "1163": 210, "940": [76, 79, 210], "1040": [79, 210], "1118": [76, 79, 159, 210], "ivim_linear": 210, "1128": [79, 210], "1138": [79, 210], "1148": [79, 210], "740": [79, 210], "1045": 210, "1154": [79, 210], "1145": 210, "827": [76, 79, 210], "1051": [79, 210], "673": [71, 76, 79, 210], "859": [76, 79, 210], "983": [79, 210], "884": [76, 210], "984": 210, "1009": [76, 79, 210], "1036": [79, 210], "anaconda": [210, 211, 213, 222], "973": 210, "1121": [79, 210], "1083": [79, 210], "332": [79, 80, 210], "nipyp": [210, 225], "1116": [76, 79, 210], "bufferediobas": 210, "351": [71, 79, 80, 210], "912": [77, 79, 210], "1104": 210, "367": [79, 80, 210, 217], "1101": [79, 210], "1085": [76, 79, 210], "1081": [71, 76, 79, 210], "1031": [79, 210], "1071": [76, 79, 210], "1037": [76, 77, 79, 210], "1078": [76, 79, 210], "953": [76, 210], "883": [79, 210], "1011": [76, 79, 210], "1055": [79, 210], "1057": [79, 210], "workaround": [210, 216], "slowadcopdfmodel": 210, "1054": 210, "1043": [79, 210], "899": [77, 79, 210], "991": [76, 79, 210], "footer": 210, "1008": 210, "charm": 210, "1033": [76, 210], "1032": [79, 210], "1029": [76, 79, 210], "1014": [76, 79, 82, 210], "1013": [76, 79, 210], "make_fetch": 210, "1020": [76, 210], "1023": [76, 79, 210], "882": [76, 210], "885": [79, 210], "902": [77, 79, 210], "997": [76, 79, 210], "675": [76, 79, 210], "stabilis": 210, "1012": [79, 210], "996": 210, "998": 210, "1007": [76, 79, 210], "980": [79, 210], "1017": [79, 210], "877": [79, 210], "887": [76, 79, 210], "995": [76, 79, 210], "344": [76, 79, 80, 210], "970": [79, 210], "986": 210, "pip3": [210, 221], "990": 210, "988": 210, "975": 210, "517": [76, 210], "960": [71, 79, 210], "961": [79, 210], "880": [210, 211], "962": [79, 92, 210], "889": [77, 79, 210], "866": [77, 79, 210], "test_metr": 210, "867": [77, 210], "test_parzenhist": 210, "868": [79, 210], "869": 210, "870": [76, 79, 210], "test_transform": 210, "871": 210, "864": [76, 77, 79, 210], "862": [76, 79, 210], "test_crosscorr": 210, "873": [77, 79, 210], "831": [76, 79, 210], "weird": 210, "876": [76, 77, 79, 210], "968": [79, 210], "872": [76, 79, 210], "966": [79, 210], "920": [76, 79, 210], "950": [76, 79, 210], "949": [79, 210], "878": [76, 210], "939": 210, "945": 210, "indent": 210, "unus": [210, 217, 219, 220, 225, 227], "streamlinespe": [174, 210, 217], "924": [76, 79, 210], "879": [79, 210], "938": [76, 79, 210], "212": [79, 80, 100, 211, 216], "bennet": [211, 212], "fauber": [211, 212], "saber": 211, "sheybani": 211, "1367": [79, 211], "1361": [79, 211], "1316": 211, "1360": [50, 76, 79, 211], "1348": [76, 79, 211], "1357": [76, 211], "1332": [76, 79, 211], "1239": [76, 211], "1356": [79, 211], "1351": 211, "1353": 211, "epilogu": 211, "1262": [71, 76, 79, 211], "1352": [79, 211], "1314": [82, 211], "1345": [76, 79, 211], "1330": [76, 79, 211], "1315": [76, 79, 211], "gpl": [211, 217, 223], "1328": [76, 211], "1329": [79, 211], "1335": [76, 79, 211], "test_csdeconv": 211, "1319": [76, 79, 211], "1297": [79, 211], "eigh": 211, "1298": [76, 211], "textactor2d": 211, "1312": [76, 211], "1285": [76, 79, 211], "1307": [79, 211], "1310": [76, 211], "1308": [76, 211], "1304": 211, "1303": [76, 79, 211], "reciproc": [211, 230], "1289": [79, 211], "1288": 211, "1290": 211, "1279": 211, "1287": [76, 79, 211], "1286": [76, 79, 211], "1284": [76, 79, 211], "1278": [76, 79, 211], "viz_ui": 211, "1366": [76, 79, 211], "1146": [79, 211], "1084": 211, "1248": [76, 79, 211], "1359": [79, 211], "1324": 211, "1334": [76, 79, 211], "1344": [79, 211], "1346": [79, 211], "1333": [76, 79, 211], "clinicalgraph": 211, "1044": [76, 79, 211], "1247": 211, "1337": [79, 211], "coveral": 211, "baggi": 211, "1341": [76, 79, 211], "activeax": [211, 212], "1325": [76, 79, 211], "1323": [76, 79, 211], "1042": [76, 79, 211], "1317": [76, 79, 211], "1313": [77, 79, 211], "vtkcommoncor": 211, "1318": [79, 211], "func_mul": 211, "1167": 211, "1180": [79, 211], "375": [79, 80, 211], "directiion": 211, "ppc": [211, 217, 222], "804": [37, 76, 77, 211], "662": [71, 76, 79, 211], "1306": 211, "1309": [79, 211], "step_help": 211, "1293": [79, 211], "1292": 211, "570": [71, 79, 82, 211], "1169": 211, "645": [71, 76, 79, 82, 212, 213], "conor": 212, "corbin": 212, "jiri": [212, 213], "borovec": [212, 213, 221], "mendoza": 212, "karandeep": [212, 213], "kumar": 212, "ashutosh": 212, "pradeep": 212, "reddi": 212, "raamana": 212, "ricci": [212, 213, 220], "woo": [212, 213, 220], "aman": 212, "arya": 212, "215": [79, 80, 212], "1504": [76, 212], "test_whole_brain_slr": 212, "1503": [76, 79, 212], "1424": [76, 79, 212], "1502": 212, "1498": [79, 212], "1431": [79, 212], "1443": [79, 212], "1398": 212, "1447": 212, "1423": 212, "1493": [79, 212], "vtk8": 212, "1497": [79, 212], "1496": [76, 79, 212], "1495": [79, 212], "sfm_reconst": 212, "1494": [76, 79, 212], "1474": [79, 212], "1471": 212, "1457": 212, "1468": [79, 212], "1484": [76, 212], "punctuat": 212, "1475": 212, "_iter": 212, "1482": [76, 79, 212], "test_mapmri": 212, "1460": [79, 212], "diskslid": 212, "1452": [76, 79, 212], "1466": [79, 212], "logo": [212, 217], "1464": [79, 212], "banner": [212, 217], "1465": 212, "progit": 212, "1451": 212, "1379": [79, 212], "1445": [71, 79, 212], "1450": [76, 79, 212], "delimit": 212, "1425": [79, 212], "1446": [76, 79, 212], "hyperlink": [212, 214], "1437": [79, 212], "mdfmetric": 212, "qbx": [212, 227], "1428": [76, 79, 212], "1385": [79, 212], "textblock": 212, "1422": [76, 79, 212], "1434": [76, 212], "1430": [76, 212], "1421": [79, 212], "1416": [76, 79, 212], "1413": [76, 79, 212], "getargspec": 212, "1393": [79, 212], "1294": 212, "1419": [79, 212], "rcond": [212, 222], "1384": [71, 212], "1411": [79, 212], "eddy_rotated_bvec": 212, "1407": [21, 76, 79, 212], "1408": 212, "1406": 212, "assert_tru": 212, "assert_equ": [212, 215, 221], "1347": [79, 212], "1322": [71, 212], "1326": [76, 212], "1399": [76, 79, 212], "1391": [79, 212], "1331": [76, 79, 212], "1386": 212, "1165": [86, 212], "1300": 212, "ravel_multi_index": [212, 217], "1381": [76, 79, 212], "1375": [79, 212], "1342": [79, 212], "whatnot": 212, "1378": 212, "1377": [79, 82, 212], "1374": 212, "1368": 212, "affili": [212, 213], "1370": 212, "1369": [79, 212], "1418": [76, 79, 212, 226], "parallel_voxel_fit": [212, 213, 226], "1291": [79, 212], "644": [71, 82, 212], "1490": [79, 212], "1469": [76, 212], "1485": [79, 212], "1483": [79, 212], "1479": [79, 212], "1477": [76, 79, 212], "1448": [76, 79, 212], "1481": 212, "globalimmediatemoderenderingon": 212, "1454": [76, 79, 212], "1467": 212, "1488": [77, 79, 212], "1478": [79, 212], "1476": [79, 212], "1470": [79, 212], "1458": [79, 212], "1438": [79, 82, 212], "1473": 212, "1462": [79, 212], "1461": 212, "1463": 212, "1455": [76, 212], "pyautogui": 212, "monitor": [212, 228], "1456": [76, 79, 212], "1453": 212, "1339": [79, 212], "1441": [76, 79, 212], "1449": [50, 212], "1362": [76, 79, 212], "1395": [77, 79, 212], "1436": [79, 212], "1417": [79, 212], "1435": [79, 212], "1439": 212, "memview": 212, "struct": [212, 225], "1184": [79, 212], "1380": 212, "1429": [79, 212], "syntaxerror": 212, "xe2": [212, 216], "596": [27, 30, 71, 82, 212, 218], "1390": [76, 212], "coding_style_guidelin": 212, "1427": [79, 212], "1426": [76, 79, 212], "987": [76, 79, 129, 133, 212], "faq": [212, 215, 221], "1327": [76, 79, 212], "1181": [76, 212], "1150": [79, 212], "streamline_map": [174, 212], "1409": [79, 212], "1415": [79, 212], "1117": [79, 212], "1412": [79, 212], "791": [76, 79, 212], "1410": 212, "1403": [79, 212], "jet": 212, "1387": [79, 212], "1405": [76, 79, 212], "1402": [76, 212], "rint": 212, "1321": [76, 79, 212], "1161": [76, 212], "1394": [76, 212], "misc": [212, 213, 225], "1382": 212, "1350": [79, 212], "1392": 212, "chrome": 212, "1388": 212, "1340": [79, 212], "1383": [79, 212], "mmriflow": 212, "1299": [79, 212], "test_rmi": [212, 217], "1301": [79, 212], "1376": 212, "1343": [76, 79, 212], "1282": [79, 212], "filo": 213, "albai": 213, "parichit": [213, 214], "chandan": 213, "gangwar": 213, "enrico": 213, "cahal": 213, "hunt": 213, "194": [76, 79, 80, 213], "1684": [71, 76, 213], "1686": 213, "1685": [79, 213], "1663": [76, 79, 213], "1681": [76, 79, 213], "1680": [76, 213], "1683": [79, 213], "1667": 213, "1677": [79, 213], "msg": 213, "1678": [76, 79, 213], "1676": [76, 79, 213], "1283": [76, 79, 213], "1670": [76, 213], "1669": [79, 213], "1659": [79, 213], "1621": [33, 79, 213], "1657": [79, 213], "1660": [79, 213], "1658": [76, 79, 213], "honor": 213, "1281": [76, 79, 213], "1651": [79, 213], "1656": [76, 213], "neurostar": [213, 229], "1624": [79, 213], "1655": [79, 213], "1650": [76, 90, 213], "codecov": [213, 224, 227], "1649": [79, 213], "1556": [79, 213], "1645": [76, 79, 213], "1647": [79, 213], "1644": 213, "1643": [76, 79, 213], "787": [76, 79, 213], "starter": 213, "1642": 213, "1641": [79, 213], "evenly_distributed_sphere_642": 213, "1564": [71, 213], "listbox2d": 213, "1636": [79, 213], "1584": [79, 213], "1554": 213, "1528": [79, 213], "timer": [174, 213], "imread": 213, "1526": [79, 213], "1623": [79, 213], "1626": 213, "1619": [79, 213], "1592": [79, 213], "1559": [76, 79, 213], "checkbox": 213, "radiobutton": 213, "1583": [76, 77, 213], "1602": [79, 213], "1609": [79, 213], "1560": 213, "1593": [76, 213], "1597": [76, 79, 213], "1601": 213, "nosetest": [213, 227], "1515": 213, "1590": [79, 213], "1570": [79, 213], "1589": [76, 79, 213], "1580": [79, 213], "1533": [76, 213], "1523": 213, "1543": [76, 79, 213], "out_strategi": 213, "1547": [79, 213], "1561": [76, 79, 213], "1578": [79, 213], "1563": [76, 79, 213], "major_vers": 213, "1557": [76, 79, 213], "button2d": 213, "1555": [76, 79, 213], "1522": [76, 79, 213], "1355": 213, "listbox": 213, "1540": [79, 213], "1548": 213, "1542": 213, "1546": 213, "1545": [79, 213], "1492": [79, 213], "mistakenli": 213, "1536": [79, 213], "1537": [76, 213], "1530": [79, 213], "1529": 213, "1520": [76, 79, 213], "1524": [79, 213], "1521": [76, 213], "1518": [76, 79, 213], "1517": 213, "1516": [76, 79, 213], "1514": [76, 79, 213], "pep8speak": [213, 220], "1513": [22, 213], "1510": [76, 79, 213], "1508": [76, 79, 213], "appeas": 213, "1506": [21, 76, 79, 213], "1679": [37, 79, 213], "1220": [76, 79, 213], "746": [76, 79, 213], "1637": 213, "1673": [77, 213], "1338": [76, 79, 213], "1682": [76, 79, 213], "634": [71, 76, 213], "944": [76, 79, 213], "1099": [76, 79, 213], "1544": 213, "643": [44, 45, 76, 79, 213], "1674": [76, 79, 213], "1397": [79, 213], "1668": [76, 79, 213], "1662": [79, 213], "1296": [76, 213], "ana": 213, "mini": 213, "1653": [76, 79, 213], "1654": 213, "1414": [79, 90, 213], "1093": [76, 79, 213], "1611": [79, 213], "preload": 213, "1615": [76, 79, 213], "1631": [79, 213], "1638": [79, 213], "noddix": 213, "1618": 213, "filemenu2d": 213, "1569": [79, 213], "listboxitem2d": 213, "1532": [79, 213], "sierra": 213, "ananoda": 213, "1420": [76, 79, 213], "1396": 213, "1295": [79, 213], "1232": 213, "disappear": 213, "928": [76, 79, 213], "854": [79, 213], "759": [79, 213], "vtk6": [213, 216, 217], "voxsz": 213, "646": [71, 79, 213], "353": [76, 79, 80, 213], "1203": 213, "1156": [76, 79, 213], "642": [76, 82, 116, 118, 213], "1135": 213, "442": [80, 213], "558": [71, 77, 82, 213], "1236": 213, "1389": [79, 213], "1519": [76, 213], "1596": [79, 213], "gsoc": [213, 214], "noddix_pr": 213, "1576": [76, 79, 213], "1568": [76, 213], "1108": [79, 213], "1629": 213, "userwarn": [79, 97, 213, 219], "1591": [76, 79, 213], "1582": [79, 213], "1575": [79, 213], "1620": [76, 213], "1598": [79, 213], "1595": [76, 79, 213], "1588": [79, 213], "1608": [76, 213], "1610": [76, 213], "tortois": 213, "1607": [79, 213], "1586": [79, 213], "1585": [76, 213], "1594": [79, 213], "1577": [79, 213], "1571": [76, 79, 213], "1579": [76, 213], "1433": [79, 213], "mess": 213, "1541": [76, 79, 213], "1573": [79, 213], "test_ui_listbox_2d": 213, "1566": [76, 79, 213], "1572": [79, 213], "1567": [79, 213], "1551": [79, 213], "1549": [79, 213], "1562": 213, "1550": 213, "1527": 213, "1534": [79, 213], "1487": [79, 213], "check_scratch": 213, "1486": [76, 213], "1539": [76, 213], "1535": [76, 213], "1507": [79, 213], "1512": [76, 79, 213], "1511": 213, "exaampl": 213, "1509": 213, "361": [76, 79, 80, 214, 217], "cl\u00e9ment": 214, "zotti": 214, "katrin": 214, "leinweb": 214, "yijun": 214, "liu": [214, 224], "1755": [76, 79, 214], "1748": [76, 79, 214], "1714": 214, "1726": 214, "1753": [76, 79, 214], "1751": [76, 79, 214], "1743": [79, 214], "1749": [79, 214], "1739": [79, 214], "1695": [76, 79, 214], "1741": [79, 214], "1742": [79, 214], "1745": [76, 79, 214], "1746": [79, 214], "sponsor": 214, "1735": [79, 214], "1738": 214, "1740": [79, 214], "1730": [76, 79, 214], "1666": [79, 214], "1737": [79, 214], "1733": [76, 79, 214], "1732": [79, 214], "maiincrement": 214, "1716": 214, "1640": [76, 79, 214], "1652": 214, "1720": 214, "1719": [79, 214], "1715": [76, 79, 214], "bullet": 214, "1706": [76, 214], "liner": 214, "1705": [79, 82, 214], "random_integ": 214, "1704": 214, "1701": [79, 214], "1707": [79, 214], "pendingdeprec": 214, "1703": [79, 214], "blank": [214, 217], "1708": [76, 214], "1710": 214, "1702": 214, "1697": [76, 79, 214], "1696": 214, "1690": 214, "1693": [76, 79, 214], "1757": [76, 214], "sensor": 214, "acsept": 214, "deprecationwarn": 214, "usersranjianaconda3libsit": 214, "packagesipykernel_launch": 214, "imsav": 214, "imageio": 214, "imwrit": 214, "1616": 214, "1605": [76, 79, 214], "1661": [76, 79, 214], "1604": [79, 214, 225], "1734": [79, 214], "1565": [79, 214], "1729": 214, "n4": 214, "1280": [76, 79, 214], "1727": [79, 214], "1723": [79, 214], "1718": [214, 219], "1717": [76, 79, 214], "1664": [79, 214], "1633": [34, 79, 214], "1698": 214, "1691": [76, 79, 214], "1692": 214, "1632": 214, "mdesco": 215, "141": [76, 79, 80, 215], "sf2sh": 215, "dsi_deconv": 215, "133": [76, 79, 80, 215], "132": [79, 80, 215], "130": [76, 79, 80, 215, 220], "127": [76, 79, 80, 99, 102, 215], "rbf": [161, 215], "result_typ": 215, "getitem": [215, 227], "_squash": 215, "vec_val_vect": [174, 215], "109": [37, 40, 76, 79, 80, 171, 215], "einsum": 215, "110": [76, 79, 80, 99, 215], "xp": 215, "sty": 215, "multivoxel": 215, "remove_similar_vertic": [174, 215], "ip": 215, "yai": 215, "l2norm": 215, "suit": [215, 217], "e1381s6_edcor": 215, "optional_trait": 215, "brought": 215, "_filter": 215, "reduce_antipod": 215, "preview": 215, "_filter_peak": 215, "unique_vertic": [167, 215], "optionalimporterror": 215, "trait": 215, "gitwash": 215, "frontpag": 215, "longest_track_len": 215, "mayavi": 215, "83": [22, 29, 30, 33, 37, 50, 71, 76, 79, 80, 82, 171, 215], "refacotor": 215, "tb": 215, "hap": 215, "triangle_subdivid": 215, "badrequest": 215, "erik": 216, "279": [76, 80, 216], "257": [79, 80, 216], "274": [79, 80, 216], "275": [76, 79, 80, 216], "261": [39, 40, 76, 79, 80, 216], "273": [76, 77, 79, 80, 216], "autopep8": 216, "shmfit": 216, "260": [76, 79, 80, 216], "peaks_from_model_parallel": 216, "sdeconv": 216, "253": [76, 79, 80, 216, 217], "263": [79, 80, 216], "252": [76, 79, 80, 216], "243": [76, 79, 80, 216], "240": [79, 80, 216], "245": [76, 79, 80, 216], "230": [71, 76, 79, 80, 216], "229": [76, 79, 80, 216], "brainextract": 216, "226": [76, 79, 80, 216], "setinput": 216, "vtk5": 216, "setinputdata": 216, "223": [79, 80, 90, 216], "222": [76, 79, 80, 216], "mask_voxel_s": 216, "promote_dtyp": 216, "wi": 216, "211": [69, 76, 79, 80, 167, 216], "213": [76, 79, 80, 216], "207": [79, 80, 216], "205": [79, 80, 216], "173": [72, 79, 80, 97, 100, 216], "tensor_": 216, "201": [79, 80, 216], "testfail": 216, "189": [76, 79, 80, 216], "probabilisticodfweightedtrack": 216, "190": [76, 79, 80, 216], "182": [76, 80, 216], "soureforg": 216, "py3": 216, "supersed": 216, "174": [50, 58, 71, 74, 76, 80, 216], "172": [27, 71, 76, 80, 119, 125, 216], "stamp": 216, "166": [76, 79, 80, 216], "pyc": 216, "archiv": 216, "164": [76, 79, 80, 216, 221], "163": [76, 79, 80, 216, 221], "544": [71, 76, 82, 217], "propspe": [174, 217], "543": [71, 76, 79, 82, 217], "plot_2d": 217, "537": [76, 79, 217], "534": [71, 82, 217], "536": [71, 82, 217], "535": [76, 79, 82, 217], "527": [79, 82, 217], "npymath": 217, "528": [76, 82, 217], "530": [76, 82, 217], "ugli": 217, "msvc": 217, "529": [79, 217], "526": [76, 82, 217], "523": [71, 76, 79, 82, 217], "522": [71, 76, 79, 82, 217], "521": [71, 76, 217], "520": [71, 76, 79, 217], "519": [76, 82, 217], "christma": 217, "513": [27, 31, 71, 76, 217], "reinstat": 217, "508": [79, 217], "516": [71, 79, 217], "495": [71, 217], "509": [76, 79, 217], "460": [76, 80, 217], "499": [71, 79, 217], "501": [76, 79, 82, 217], "507": [76, 79, 217], "mergsort": 217, "494": [76, 77, 79, 217], "503": [71, 76, 79, 217], "471": [76, 79, 80, 217], "importlib": 217, "__import__": 217, "419": [24, 71, 79, 80, 217], "489": [79, 217], "484": [79, 217], "490": [76, 217], "341": [80, 217], "traco": 217, "redesign": 217, "483": [79, 82, 217], "485": 217, "482": [71, 76, 79, 82, 217], "479": [76, 217], "481": [76, 217], "476": [76, 79, 217], "478": [76, 79, 217], "477": [76, 112, 217], "474": [76, 79, 80, 217], "virtualenv": 217, "473": [76, 80, 92, 217], "469": [68, 71, 76, 80, 217], "463": [79, 80, 217], "466": [49, 80, 217], "465": [71, 76, 79, 80, 217], "433": [79, 80, 217], "458": [76, 79, 80, 217], "crosscorr": [174, 217], "npy_math": 217, "447": [76, 79, 80, 217], "439": [76, 79, 80, 217], "443": [76, 79, 80, 217], "456": [50, 76, 80, 217], "454": [76, 80, 88, 217], "checker": 217, "453": [79, 80, 217], "446": [80, 217], "445": [79, 80, 217], "pxi": 217, "var": [168, 217, 221, 226], "440": [80, 217], "431": [79, 80, 217], "408": [76, 79, 80, 217], "438": [80, 217, 232], "405": [79, 80, 217], "418": [43, 45, 76, 79, 80, 217], "437": [76, 79, 80, 217], "435": [79, 80, 217], "434": [76, 80, 217], "430": [80, 217], "427": [79, 80, 217], "422": [80, 217], "415": [79, 80, 217], "420": [80, 108, 112, 217], "413": [50, 76, 79, 80, 217], "memory_leak": 217, "test_strealin": 217, "417": [21, 24, 79, 80, 217], "409": [79, 80, 217], "pipe": 217, "396": [76, 80, 217], "407": [79, 80, 217], "omarocegueda": 217, "402": [76, 80, 217], "ae": 217, "test_peak_directions_thorough": 217, "401": [79, 80, 217], "skiptest": 217, "340": [79, 80, 217], "397": [76, 79, 80, 217], "393": [79, 80, 171, 217], "382": [76, 80, 217], "386": [76, 80, 217], "352": [76, 80, 217], "odf_sh_sharpen": 217, "374": [76, 80, 217], "bumpi": 217, "380": [80, 217], "378": [80, 217], "379": [76, 79, 80, 217], "339": [76, 79, 80, 217], "373": [79, 80, 217], "371": [79, 80, 217], "fopenmp": 217, "372": [76, 80, 217], "crossplatform": 217, "337": [76, 79, 80, 217], "370": [77, 80, 217], "tone": 217, "364": [80, 217], "368": [80, 217], "363": [37, 79, 80, 84, 217], "355": [76, 79, 80, 217], "357": [76, 79, 80, 217], "sent": 217, "356": [76, 80, 217], "349": [79, 80, 217], "348": [76, 79, 80, 217], "347": [79, 80, 217], "338": [76, 79, 80, 217], "334": [76, 79, 80, 86, 92, 217], "vec2vec": 217, "324": [79, 80, 217], "331": [76, 79, 80, 217], "326": [80, 217], "327": [76, 79, 80, 217], "319": [76, 79, 80, 217], "318": [79, 80, 217], "316": [79, 80, 99, 100, 217], "315": [76, 79, 80, 217], "305": [76, 79, 80, 217], "311": [76, 79, 80, 217], "309": [79, 80, 217], "pep": 217, "stuf": 217, "303": [76, 79, 80, 217], "304": [76, 79, 80, 217], "302": [76, 79, 80, 217], "298": [76, 79, 80, 122, 125, 217], "290": [76, 79, 80, 217], "540": [76, 79, 217], "542": [71, 76, 82, 217], "538": [71, 82, 217], "449": [79, 80, 217], "512": [71, 79, 217], "467": [76, 79, 80, 217], "464": [77, 80, 217], "wheezi": [217, 218], "argsort": 217, "mergesort": 217, "506": 217, "383": [79, 80, 217], "350": [76, 79, 80, 217], "424": [80, 217], "493": 217, "dpy_math": 217, "hyp2f1": 217, "502": [21, 79, 217], "492": [71, 79, 217], "410": [76, 79, 80, 217], "487": [82, 217], "428": [80, 217], "travis": 217, "475": [76, 80, 217], "tmp_file": 217, "470": [79, 80, 217], "461": [79, 80, 217], "432": [79, 80, 217], "450": [76, 80, 82, 217], "matrix44": 217, "452": [76, 79, 80, 217], "398": [79, 80, 217], "444": [80, 217], "mkl": 217, "nlmeans_3d": [174, 217], "412": [76, 79, 80, 171, 217], "pow": 217, "391": [79, 80, 217], "16gb": 217, "wasn": 217, "385": [79, 80, 217], "376": [76, 80, 217], "demianw": 217, "358": [71, 80, 217], "343": [79, 80, 217], "277": [76, 80, 217], "336": [76, 79, 80, 217], "235": [76, 79, 80, 217, 218], "329": [27, 76, 79, 80, 96, 100, 104, 112, 125, 126, 217], "330": [80, 217], "312": [80, 217], "quicki": 217, "307": [76, 79, 80, 217], "241": [76, 79, 80, 217], "248": [76, 79, 80, 217], "peaksfrommodel": 217, "282": [76, 79, 80, 217], "incomprehens": 217, "228": [76, 79, 80, 217], "dipy_fit_tensor": 217, "brittl": 217, "171": [76, 79, 80, 217], "runtimewarn": [37, 72, 77, 79, 84, 86, 217, 221], "create_half_unit_spher": 217, "306": [79, 80, 217], "310": [79, 80, 217], "575": [71, 76, 79, 82, 218], "595": [71, 76, 79, 82, 218], "599": [71, 79, 82, 218], "dpy_rint": 218, "test_center_of_mass": 218, "601": [71, 79, 82, 218], "598": [71, 76, 82, 218], "undetect": 218, "593": [71, 76, 79, 82, 218], "588": [71, 79, 82, 218], "565": [71, 75, 76, 79, 82, 218], "589": [71, 76, 79, 82, 218], "typograph": 218, "584": [71, 79, 82, 218], "568": [71, 79, 82, 218], "quickbundles2": 218, "559": [71, 79, 82, 218], "586": [71, 79, 82, 218], "574": [71, 79, 82, 218], "581": [71, 76, 79, 82, 218], "580": [71, 76, 79, 82, 218], "579": [71, 76, 82, 218], "577": [71, 76, 79, 82, 218], "553": [71, 76, 82, 87, 218], "552": [71, 79, 218], "571": [71, 76, 79, 82, 218], "557": [71, 76, 79, 82, 218], "563": [71, 76, 79, 82, 218], "564": [71, 82, 218], "561": [71, 76, 79, 82, 218], "francopestilli": 218, "556": [71, 82, 218], "550": [71, 79, 82, 218], "551": [76, 79, 82, 218], "549": [71, 79, 82, 218], "602": [71, 76, 79, 82, 218], "test_feature_center_of_mass": 218, "597": [71, 79, 82, 218], "585": [71, 76, 79, 82, 218], "amico": 218, "567": [71, 76, 79, 82, 218], "414": [76, 79, 80, 218], "560": [71, 82, 218], "three_shells_voxel": 218, "555": [71, 76, 79, 82, 218], "chatroom": 218, "354": [76, 80, 218], "532": [71, 218], "sparc": 218, "antoin": 219, "theberg": 219, "clint": 219, "1946": [76, 79, 219], "1947": [50, 82, 219], "1942": [79, 219], "1917": 219, "1940": [76, 79, 219], "1909": [76, 219], "1931": 219, "1944": [76, 79, 219], "1939": 219, "1943": 219, "1941": 219, "1926": [76, 79, 219], "1935": 219, "1903": [79, 219], "endian": 219, "s390x": 219, "1892": [82, 219], "1804": [76, 79, 219], "1937": 219, "1928": [76, 79, 219], "1925": [71, 219], "1927": 219, "1923": 219, "1894": 219, "1812": [79, 219], "stateful": 219, "1922": [76, 79, 219], "1885": [76, 79, 90, 219], "1913": 219, "1915": 219, "1630": [79, 82, 219], "1896": [76, 219], "1912": [76, 79, 219], "1916": [76, 79, 219], "1918": [79, 219], "1881": [76, 79, 219], "python_requir": 219, "1914": [79, 219], "1907": [79, 219], "1908": [79, 219], "1887": [76, 79, 219], "1905": [79, 219], "1849": [76, 219], "1902": [79, 219], "1904": 219, "1771": [76, 79, 219], "1899": [79, 219], "1898": [79, 219], "1897": [79, 219], "1893": [76, 79, 219], "1891": [76, 79, 219], "test_refine_rb": 219, "test_bundl": 219, "1888": 219, "1879": [79, 219], "1884": 219, "1875": 219, "1882": 219, "1880": 219, "1878": [21, 219], "numpy_less_0": 219, "1877": [76, 79, 219], "scipy_less_0": 219, "1876": [76, 79, 219], "1874": [76, 79, 219], "oversight": 219, "1858": [76, 77, 79, 219], "1843": 219, "1866": [76, 79, 219], "1850": [79, 219], "1855": 219, "statsmodel": 219, "1835": [76, 219], "1836": [79, 219], "1792": 219, "1851": [76, 219], "1842": [50, 79, 219], "tput": 219, "1830": [79, 219], "1821": [79, 219], "1816": [79, 219], "1818": [79, 219], "1827": 219, "1824": [79, 219], "1819": [79, 219], "diffeormorph": 219, "1823": [76, 219], "1814": [79, 219], "1815": 219, "1813": 219, "1772": [79, 219], "1810": [79, 219], "1806": [79, 219], "1789": [79, 219], "1770": [79, 82, 219], "1796": [79, 219], "1795": [76, 79, 219], "1768": [77, 79, 219], "1788": 219, "1769": [76, 79, 219], "1767": [76, 219], "1759": 219, "1230": 219, "1798": [76, 79, 219], "1817": [79, 219], "1774": [79, 219], "1587": [76, 219], "1890": 219, "1933": [79, 219], "985": [76, 79, 219], "1558": [79, 82, 219], "389": [79, 80, 219], "peaks_direct": 219, "590": [71, 79, 82, 219], "1722": 219, "1832": [79, 219], "728": [76, 219], "1920": [79, 219], "bedpostx": 219, "1779": 219, "1906": 219, "1901": [79, 219], "1747": 219, "1839": 219, "583": [71, 79, 82, 219], "1694": 219, "test_streamlin": 219, "1724": [219, 221], "844": 219, "1752": 219, "1856": [76, 79, 219], "1807": [76, 219], "1889": [76, 79, 219], "1713": [79, 219], "668": [71, 79, 82, 219], "592": [71, 82, 219], "shouldn": [219, 225], "nodirect": 219, "1811": 219, "1831": [82, 219], "1857": 219, "1863": 219, "1781": 219, "1869": [79, 219], "1844": [76, 79, 219], "1865": [71, 219], "1860": [76, 79, 219], "1168": [76, 79, 219], "1854": [76, 79, 219], "1764": [79, 219], "1731": [79, 219], "1845": 219, "1829": 219, "reco": 219, "1606": 219, "1837": 219, "1786": 219, "1828": [76, 79, 219], "infeas": 219, "1833": [76, 79, 219], "1834": [79, 219], "1721": [79, 219], "b0slice": 219, "implicit": 219, "1499": [76, 79, 82, 219], "dii": 219, "1822": [79, 219], "1825": 219, "1048": [79, 219], "1797": [79, 219], "1802": [71, 76, 79, 219], "1787": [76, 79, 219], "1763": [76, 219], "1756": [79, 219], "1761": [76, 219], "795": [76, 219], "620": [71, 76, 79, 82, 219], "436": [79, 80, 219], "1758": [79, 219], "1808": [79, 219], "1794": 219, "dettrackpamflow": 219, "1801": 219, "1803": [79, 219], "1809": 219, "1799": [79, 219], "nifiti": 219, "1712": [76, 219], "initial_direct": [164, 167, 171, 174, 219], "3075": [79, 219], "1783": [76, 79, 219], "trilinear_interpolate4d": [174, 219], "1784": 219, "1790": 219, "operand": 219, "1782": 219, "1320": 219, "1245": 219, "1240": [37, 79, 219], "1237": [76, 79, 219], "flesh": 219, "1192": [79, 82, 219], "1096": [76, 219], "832": [76, 77, 219], "578": [71, 79, 82, 219], "behnel": 219, "1780": [79, 219], "1126": [79, 219], "1603": [76, 79, 219], "392": [76, 80, 171, 220, 222], "2030": 220, "2029": [79, 220], "proxi": 220, "dead": [220, 225], "1862": [76, 79, 220], "1952": [76, 77, 79, 220], "1998": [79, 220], "1975": [79, 220], "1711": [79, 220], "1989": [22, 76, 79, 220], "1987": [79, 220], "1986": [79, 220], "1977": [79, 220], "1983": 220, "1981": [79, 220], "1980": [76, 79, 220], "1979": [79, 220], "1956": [76, 79, 220], "stateful_tractogram_post_1": 220, "0_fix": 220, "1971": [76, 79, 220], "1970": 220, "1929": 220, "reloc": 220, "sim_respons": 220, "1966": [76, 220], "1967": [76, 79, 220], "1961": [79, 220], "1963": 220, "1948": [76, 79, 220], "1951": [79, 220], "1958": [76, 79, 220], "1197": [79, 220], "1959": 220, "1777": [79, 220], "read_": 220, "1634": 220, "1949": [79, 220], "1870": [76, 79, 220], "1953": 220, "184": [76, 79, 80, 220], "1976": [76, 220], "785": [76, 220], "1859": 220, "1950": 220, "statefulltractogram": 220, "1930": [76, 79, 220], "ioerror": 220, "1968": 220, "1960": [76, 79, 220], "1867": [79, 220], "circleci": 220, "1954": [76, 79, 220], "1964": [76, 79, 220], "1840": [79, 220], "1841": 220, "1955": 220, "intersphinx": 220, "inventori": 220, "1401": [79, 220], "1442": 220, "1791": [79, 220], "aryansh": 221, "omrai": 221, "charl": [221, 222, 227], "poirier": [221, 222, 227], "fabio": 221, "neri": 221, "jirka": 221, "leevi": [221, 225], "kerkela": [221, 225], "leon": [221, 225], "wening": [221, 225], "martijn": 221, "nagtega": 221, "sarath": 221, "chandra": 221, "shrishti": 221, "hore": 221, "shubham": 221, "shaswat": 221, "taki": 221, "panagopoulo": 221, "tashrif": 221, "billah": 221, "kunal": 221, "mehta": 221, "svabhishek29": 221, "areesha": [221, 222, 223], "tariq": [221, 222, 223], "karan": [221, 222, 223], "2191": [79, 221], "2212": [76, 79, 221], "2207": 221, "shader": 221, "2208": [79, 221], "2157": [76, 221], "uniniti": 221, "2205": 221, "2204": [79, 221], "2183": [79, 221], "_streamlines_in_mask": 221, "2203": [76, 221], "2142": [76, 77, 79, 221], "2195": [76, 79, 221], "2161": [79, 221], "2163": [76, 79, 221], "2174": 221, "2168": [79, 221], "2178": [76, 79, 221], "2193": [79, 221], "buan_flow": 221, "2196": 221, "2188": 221, "2176": [79, 221], "2173": [79, 221], "ssl": 221, "certif": 221, "2171": [79, 221], "2154": [79, 221], "2162": [79, 221], "2156": [79, 221], "2160": [76, 79, 221], "assert_": 221, "2158": [79, 221], "2155": 221, "2147": [76, 79, 221], "2148": [79, 221], "2150": 221, "2149": [76, 79, 221], "2145": [79, 221], "2152": [79, 221], "2146": 221, "2134": [79, 221], "2135": [79, 221], "2141": [79, 221], "2136": [76, 79, 221], "2140": [76, 79, 221], "rag": 221, "2139": 221, "2108": [71, 79, 221], "2121": [82, 221], "initialis": 221, "2129": [76, 221], "2133": [76, 79, 221], "2125": [37, 221], "2124": [76, 79, 221], "2033": [76, 79, 221], "2111": 221, "2086": [79, 221], "2091": [79, 221], "2057": [76, 221], "2103": [76, 221], "grammar": [221, 226], "2088": [79, 221], "2120": [79, 221], "2113": [76, 221], "cigar_tensor": 221, "2116": [76, 79, 221], "2100": [76, 79, 221], "grammat": 221, "2101": 221, "2095": 221, "2099": 221, "2102": [79, 221], "2055": [79, 221], "2097": [76, 221], "sform": 221, "get_best_affin": 221, "2104": [79, 221], "2065": 221, "2090": [79, 221], "2067": [79, 221], "2093": 221, "2077": [76, 79, 221], "2071": [76, 79, 221], "2084": [79, 221], "kunakl07": 221, "2085": [79, 221], "2068": [79, 221], "2069": [76, 79, 221], "2063": [79, 221], "2045": [79, 221], "2060": [79, 221], "2058": [79, 221], "2059": [76, 221], "2056": [79, 221], "2053": [76, 79, 221], "_gibbs_removal_2d": 221, "2043": [76, 79, 221], "2047": [76, 79, 221], "2044": 221, "2041": [76, 79, 221], "2039": [79, 221], "2042": 221, "2040": 221, "2038": 221, "2037": [76, 79, 221], "fw": 221, "2028": [76, 221], "2035": [76, 79, 221], "2114": [79, 221], "1793": [79, 221], "wf": 221, "2061": 221, "colab": 221, "kaggl": 221, "2070": 221, "2107": [76, 221], "2153": 221, "2138": [76, 79, 221], "2194": 221, "2177": [79, 221], "maco": 221, "2182": [79, 221], "tp_print": 221, "2199": 221, "2175": [76, 79, 221], "2190": [90, 221, 222], "2051": [76, 79, 221], "2172": [79, 221], "2169": [79, 221], "2170": [79, 221], "2144": [76, 221], "2159": 221, "2151": [79, 221], "2130": [79, 221], "2131": [76, 221], "elementwis": 221, "2128": [79, 221], "1765": [76, 79, 221], "2122": [76, 79, 221], "2127": [76, 221], "2126": [79, 221], "2096": [79, 221], "2118": [79, 90, 221], "1861": 221, "2024": [79, 221], "winter": 221, "2094": [79, 221], "friendli": 221, "regn": 221, "2078": [79, 221], "1305": [76, 79, 221], "polici": 221, "2089": [79, 221], "2072": [79, 221], "2073": [76, 79, 221], "old_highlight": 221, "2074": [79, 221], "2075": [76, 79, 221], "maintainer_workflow": 221, "2076": [79, 221], "2079": [79, 221], "2080": [79, 221], "2081": [79, 221], "2082": 221, "2083": [79, 221], "2066": [76, 79, 221], "1363": [79, 221], "1871": 221, "2052": [79, 221], "1785": [76, 79, 221], "gifti": 221, "1728": [79, 221], "1699": [76, 79, 221], "1671": [79, 221], "1552": [76, 221], "1373": [79, 221], "troubleshoot": 221, "1152": [79, 221], "1047": 221, "2049": [76, 79, 221], "2048": [71, 77, 221], "218": [76, 79, 80, 221], "313": [76, 79, 80, 221], "1848": [79, 221], "hub": 221, "2034": 221, "backlog": 221, "1864": [76, 79, 221], "basil": 222, "pinsard": 222, "jaewon": 222, "siddharth": 222, "kapoor": 222, "2181": [76, 79, 222], "2223": [76, 222], "2238": [76, 79, 222], "2265": [79, 222], "2206": [76, 79, 222], "2266": 222, "2255": [79, 222], "2271": [79, 222], "2263": [79, 222], "part2": 222, "2259": [79, 222], "2264": 222, "2268": 222, "2267": [79, 222], "2262": 222, "2244": [79, 222], "2119": [76, 222], "2260": 222, "2258": 222, "2257": [79, 222], "2261": [79, 222], "1919": [76, 222], "2256": 222, "2253": [79, 222], "2240": [76, 79, 222], "2198": [79, 222], "btensor": 222, "2025": 222, "2197": [79, 222], "2227": [76, 79, 222], "2250": 222, "2252": 222, "2248": [76, 82, 222], "2249": [79, 222], "2247": [79, 222], "2246": 222, "backtick": 222, "2239": [77, 79, 222], "2242": [79, 222], "2241": [79, 82, 222], "2235": [79, 222], "2234": [76, 79, 222], "2231": [79, 222], "2221": [76, 79, 222], "robustifi": 222, "solvererror": 222, "2226": [79, 90, 222], "2225": [76, 222], "rackspac": 222, "nightli": [222, 225], "2224": [79, 222], "xfail": 222, "assert_rais": 222, "2220": [79, 222], "2218": [76, 79, 222], "2217": [79, 82, 222], "lstsq": 222, "2211": 222, "2272": [76, 222], "2180": [79, 222], "2054": [79, 222], "unr": 222, "2046": [79, 222], "2132": [79, 222], "1266": [79, 222], "test_mapmri_isotropic_static_scale_factor": 222, "1264": [76, 79, 222], "2117": 222, "2202": [79, 222], "2115": 222, "1744": [71, 79, 222], "1489": [76, 79, 222], "2192": [76, 222], "2201": 222, "2232": [76, 222], "somesuch": 222, "2219": [79, 222], "2236": [71, 76, 79, 222], "2254": [76, 222], "2251": [76, 79, 222], "2243": [79, 222], "2237": 222, "2245": [79, 222], "verbatim": 222, "2230": [79, 222], "2228": [79, 222], "2109": 222, "spring": [222, 225], "2214": [76, 79, 222], "2216": [76, 79, 222], "test_multi_shell_fiber_respons": 222, "2185": [76, 79, 82, 222], "2215": [79, 222], "1762": [79, 222], "1354": [79, 222], "325": [76, 79, 80, 222], "2318": [79, 223], "p2": [223, 224], "2317": [76, 90, 223], "2315": [76, 79, 223], "weekli": 223, "2307": [79, 223], "2278": [76, 223], "2275": [76, 79, 90, 223], "2277": [79, 223], "2289": [76, 79, 223], "2292": 223, "2296": [79, 223], "2294": 223, "2291": [76, 79, 90, 223], "2295": [76, 79, 223], "2280": 223, "2287": [79, 90, 223], "doctstr": 223, "2286": 223, "2284": 223, "doctsr": 223, "2283": [76, 79, 223], "2282": 223, "2210": [79, 223], "arclength": 223, "722": [79, 223], "2328": [76, 79, 223], "2323": 223, "2229": [76, 79, 223], "2098": [79, 223], "2303": 223, "2279": [79, 90, 223], "felix": 224, "kruper": 224, "2367": [76, 224], "2387": 224, "2386": [76, 79, 224], "2375": 224, "2382": [76, 79, 224], "2385": 224, "2384": [76, 79, 224], "2351": [79, 90, 224], "2381": 224, "2371": 224, "2352": [79, 224], "2373": 224, "2372": [76, 79, 224], "2348": [79, 224], "2363": 224, "2365": 224, "2349": [76, 79, 224], "2350": 224, "size_t": 224, "2346": [79, 224], "mnt": [224, 225], "wherev": [224, 225], "2347": [76, 90, 224], "2340": [79, 224], "reactiv": 224, "2344": [79, 224], "2339": [76, 224], "1648": 224, "2337": 224, "2333": [50, 224], "2335": 224, "2332": [77, 79, 224], "1973": [79, 224], "2377": 224, "2380": [76, 79, 224], "2300": [79, 224], "2320": [76, 79, 90, 224], "2341": [79, 224], "2353": [79, 224], "1311": [79, 224], "1302": 224, "366": [80, 224], "1672": [76, 79, 224], "fault": 224, "1444": [76, 79, 224], "562": [71, 82, 224], "2324": [76, 79, 224], "vr": 224, "2345": [76, 224], "423": [76, 79, 80, 224], "837": [76, 79, 224], "636": [71, 76, 79, 82, 224], "861": [79, 224], "1895": [79, 224], "545": [79, 82, 224], "1847": [76, 224], "1872": [76, 79, 224], "1646": 224, "1635": [79, 224], "2309": [79, 224], "2334": [79, 224], "aphys": 224, "1873": 224, "2343": [90, 224], "2311": [79, 224], "2274": 224, "1675": [79, 224], "2316": [79, 224], "translationtransform2d": [174, 224], "2331": 224, "573": [61, 62, 71, 76, 79, 82, 225], "dan": 225, "franci": 225, "jerom": 225, "giulia": 225, "bert\u00f2": 225, "joshua": 225, "kenji": 225, "marshal": 225, "luca": 225, "costa": 225, "sam": [225, 226, 227], "covenei": [225, 226, 227], "2561": [79, 225], "2520": [79, 225], "2558": [76, 225], "errant": 225, "2557": [79, 225], "2556": 225, "2554": 225, "2555": [79, 225], "2539": 225, "embarrassingli": 225, "2545": [76, 79, 225], "2548": [29, 79, 225], "concurr": 225, "gha": 225, "2549": [76, 79, 225], "2550": [79, 225], "2551": [79, 225], "2536": [71, 76, 79, 225], "2533": 225, "underlin": 225, "2342": [76, 79, 225], "2512": [79, 225], "2526": [79, 225], "2534": [79, 225], "2532": [79, 225], "2529": [79, 225], "2528": [79, 225], "2527": 225, "2493": [79, 225], "2522": [76, 79, 225], "2521": 225, "2420": 225, "2482": [76, 79, 225], "2423": [77, 79, 225], "2518": [79, 225], "2515": 225, "2513": [77, 225], "2506": [79, 225], "2510": [76, 79, 225], "reboot": 225, "2487": [79, 225], "2442": 225, "2470": 225, "2485": [79, 225], "2481": [82, 225], "2480": [76, 79, 225], "2478": [76, 79, 225], "2479": [22, 225], "2475": [79, 225], "2476": [76, 79, 225], "2472": 225, "2471": [76, 79, 225], "2468": [76, 79, 225], "2467": [79, 225], "2466": [79, 225], "2453": [79, 225], "2413": [76, 79, 225], "2447": [79, 225], "bitwis": 225, "2444": [76, 79, 225], "2434": [79, 225], "2435": 225, "2436": [79, 225], "2438": [79, 225], "misplac": 225, "2374": [76, 79, 225], "2390": [79, 225], "2417": [76, 79, 225], "2419": [76, 79, 225], "2406": [79, 225], "2411": [79, 225], "c_compress_streamlin": 225, "2416": 225, "2415": [76, 79, 225], "2410": [76, 225], "2409": [79, 225], "2405": [76, 79, 225], "2407": [79, 225], "2392": [79, 225], "2389": 225, "bundles_distances_mdf": [174, 225], "2368": [79, 225], "_local_track": 225, "generate_streamlin": [164, 174, 225], "2123": 225, "2489": [79, 225], "2525": [76, 225], "2509": 225, "2543": [79, 225], "2546": [79, 225], "2542": [79, 225], "2477": 225, "2541": [79, 225], "2507": [76, 79, 225], "2422": 225, "1969": [79, 225], "2456": [79, 225], "2524": [79, 225], "2449": [79, 225], "nonsens": 225, "2179": [79, 82, 225], "2492": [79, 225], "reusabl": 225, "2497": 225, "2495": [79, 225], "2305": [79, 225], "2499": [79, 225], "2488": [79, 225], "footprint": 225, "2504": [79, 225], "fwdwi": 225, "2502": [79, 225], "2490": [79, 225], "2402": [79, 225], "dipy_to_nipype_interfac": 225, "2486": [76, 225], "2484": [76, 79, 225], "2483": 225, "2463": [76, 79, 225], "2460": [71, 79, 225], "2429": [79, 225], "2461": 225, "2464": [79, 225], "homepag": 225, "2457": 225, "2454": [79, 225], "2446": 225, "bitwise_or": 225, "2443": [50, 79, 225], "2441": [79, 225], "2430": [76, 225], "2431": [79, 225], "2432": [79, 225], "2314": [71, 79, 225], "1805": 225, "2418": 225, "365": [79, 80, 225], "2404": [79, 225], "2209": [76, 225], "_pytest": 225, "pathlib": 225, "importpathmismatcherror": 225, "1934": [76, 79, 225], "2312": [79, 225], "2383": 225, "dcperror": 225, "2391": [71, 225], "2393": 225, "probtrackx2": 225, "fmrib": 225, "toolbox": 225, "2310": [76, 79, 225], "deneb": 226, "jacob": 226, "malinda": 226, "dilhara": 226, "2710": [79, 226], "2711": [79, 226], "2702": [76, 79, 226], "2704": [79, 226], "2701": [79, 226], "progbar": 226, "2700": 226, "2694": 226, "2697": [79, 226], "2692": [79, 226], "2693": [76, 79, 226], "2687": [79, 226], "2690": [76, 79, 226], "2688": [79, 226], "2683": [79, 226], "2668": [79, 226], "2674": [79, 226], "2670": [79, 82, 226], "2672": [76, 79, 226], "2669": 226, "inaccur": 226, "2664": 226, "2553": [79, 226], "2369": 226, "diffeormorphicmap": 226, "2631": [79, 226], "2630": [79, 226], "2629": [79, 226], "2618": [79, 226], "multi_dot": 226, "2606": 226, "2531": 226, "2589": [33, 79, 226], "intemporarydirectori": 226, "tmpfile": 226, "2577": 226, "2595": [79, 226], "2591": [79, 226], "mutabl": 226, "2592": [79, 226], "2579": [79, 226], "2584": 226, "2566": 226, "2581": [79, 226], "2580": 226, "2576": [76, 79, 226], "2568": 226, "2709": [79, 226], "2708": 226, "2699": [79, 226], "noreg": 226, "redux": 226, "2696": 226, "port": [163, 226], "pyafq": 226, "2679": [79, 226], "2676": [79, 226], "2673": 226, "2667": [79, 226], "2662": 226, "cmd_line": 226, "2658": [76, 226], "chanc": 226, "arm64": 226, "2659": [79, 226], "2649": [79, 226], "2424": 226, "2327": 226, "2313": [76, 79, 226], "wholebrain": 226, "2616": [79, 226], "2627": [79, 226], "tvis_hdr": 226, "nii_aff": 226, "2634": [76, 226], "2559": [79, 226], "2564": 226, "2572": [76, 79, 226], "2617": 226, "2602": 226, "dear": 226, "expert": 226, "2603": [79, 226], "dti_peak": 226, "2587": [79, 226], "safeti": 226, "concern": 226, "relianc": 226, "tmpdir": 226, "2450": 226, "2594": 226, "2573": 226, "2567": [76, 79, 226], "2565": [79, 226], "dogu": 227, "baran": 227, "jong": 227, "sung": 227, "martino": 227, "pilia": 227, "mitesh": 227, "gulecha": 227, "rahul": 227, "ubal": 227, "shilpi": 227, "karp2601": 227, "ujjwal": 227, "shekhar": 227, "2765": [76, 79, 227], "2788": [79, 227], "2768": 227, "2749": [79, 227], "2744": [71, 227], "2785": 227, "2540": [79, 227], "2609": [34, 227], "2596": [76, 227], "2740": [79, 227], "2773": [77, 79, 227], "2783": 227, "test_roi_imag": 227, "2782": [76, 79, 227], "mtn": 227, "2780": [79, 227], "pmfgendirectiongett": [174, 227], "2778": [79, 227], "2767": [76, 79, 227], "fast_numpi": 227, "2626": [79, 227], "2763": [79, 227], "2751": [79, 227], "2762": [76, 227], "2753": [79, 227], "2722": [79, 227], "2741": [79, 227], "2739": [79, 227], "codespel": 227, "2590": [76, 79, 227], "2733": 227, "2648": 227, "2723": [79, 227], "trx": 227, "2727": 227, "extras_requir": 227, "2725": [76, 79, 227], "2716": 227, "2717": [76, 79, 227], "2628": [79, 227], "2713": [76, 79, 227], "2625": [79, 227], "2537": 227, "1778": [76, 79, 227], "1990": 227, "1073": [76, 227], "2530": [79, 227], "2756": 227, "2754": 227, "2775": 227, "2770": [76, 227], "2750": [76, 227], "2745": [79, 227], "2742": [76, 79, 227], "2729": 227, "attributeerror": 227, "2726": [79, 227], "2707": [79, 227], "fixdenois": 227, "2575": 227, "2414": 227, "2599": [79, 227], "broader": 229, "respond": 229, "privat": [230, 231], "req": [230, 231], "g_x": [230, 231], "g_y": [230, 231], "g_z": [230, 231], "supposedli": [230, 231], "envelop": 230, "int_0": 230, "matiello": 230, "onset": 230, "g_i": 230, "g_j": 230, "direcrt": 230, "trse": [230, 231], "ramp": [230, 231], "2b_": [230, 231], "_2": [230, 231], "_3": [230, 231], "dft": [230, 231], "callaghan": 230, "eccl": 230, "xia": 230, "narrow": [230, 232], "mysteri": 230, "loos": [171, 230], "exposit": 231, "clearer": 231, "frank": 232, "calaghan": 232, "transit": 232, "orthonorm": 234, "p_l": 234, "legendr": 234, "overlin": [167, 234], "a_l": 234, "m_l": 234, "formal": 234, "leq": 234, "Their": 234, "foral": 234, "omiss": 234, "motiv": 234, "jorg": 235, "stolfi": 235, "atan2": 235, "cart2sph": 235, "__config__": 174, "sphx_glr_examples_built_reconstruction_histology_resdnn": [41, 65, 92], "examples_built_python": 41, "examples_built_jupyt": 41, "opm_get_num_proc": [159, 163, 171], "streamlines_a": 159, "streamlines_b": 159, "grad_mov": 159, "avants2008": 159, "avants08": 159, "grad_stat": 159, "pointwis": [159, 168], "sq": 159, "ocegueda2016": 159, "gradient_mov": 159, "sigma_sq_x": 159, "arce14": 159, "sigma_i": 159, "sigma_x": 159, "demons_step": 159, "santana": 159, "campo": 159, "delgado": 159, "viguera": 159, "multimod": 159, "168140": 159, "suppl": 159, "s61": 159, "040": 159, "num_label": 159, "undefin": [159, 171], "secial": 159, "ti": 159, "_joint_pdf_gradient_dense_2d": 159, "_joint_pdf_gradient_dense_3d": 159, "bin_index": [159, 174], "xnorm": 159, "bin_normalize_mov": [159, 174], "mmin": 159, "mmax": 159, "bin_normalize_stat": [159, 174], "smin": 159, "smax": 159, "smask": 159, "mmask": 159, "ones_lik": 159, "update_gradient_dens": [159, 174], "grid2world": 159, "mgradient": 159, "joint_grad": 159, "update_gradient_spars": [159, 174], "sval": 159, "mval": 159, "sample_point": 159, "sampled_point": 159, "update_pdfs_dens": [159, 174], "smargin": 159, "mmargin": 159, "update_pdfs_spars": [159, 174], "joint_gradi": 159, "mi_gradi": 159, "total_voxel": 159, "lexicograph": 159, "perturb": 159, "increasingli": 159, "total_pixel": 159, "isampl": 159, "greedi": 159, "sigmasq_field": 159, "max_displac": 159, "mx": 159, "2x2": 159, "is_singular": 159, "_jacobian": 159, "_get_identity_paramet": 159, "_param_to_matrix": 159, "get_dim": [159, 174], "get_identity_paramet": [159, 174], "get_number_of_paramet": [159, 174], "param_to_matrix": [159, 174], "premult_index": 159, "premult_disp": 159, "sinv": 159, "cancel": 159, "standard_devi": 159, "iff": 159, "ruchala": 159, "olivera": 159, "2816107": 159, "nslice": 159, "from_shap": 159, "from_grid2world": 159, "to_shap": 159, "to_grid2world": 159, "int_field": 159, "ceil": [159, 174], "img_world2grid": 159, "img_spac": 159, "d_world2grid": 159, "affine_idx_in": 159, "affine_idx_out": 159, "affine_disp": 159, "rinv": 159, "cinv": 159, "pinv": 159, "tinv": 159, "ref_shap": 159, "bilinear": [159, 161], "necessarili": 159, "bi": 159, "in2world": 159, "world2out": 159, "field_world2grid": 159, "dipycor": 161, "bench": [161, 167, 168, 171], "svv": [161, 167, 168, 171], "ini": [161, 167, 168, 171], "duration_in_second": [161, 174], "init_hemispher": 161, "num_iter": 161, "sphere_origin": 161, "sphere_target": 161, "multiquadr": 161, "_interpolate_scalar_2d": 161, "map_coordin": 161, "_interpolate_scalar_3d": 161, "_interpolate_scalar_nn_2d": 161, "_interpolate_scalar_nn_3d": 161, "_interpolate_vector_2d": 161, "_interpolate_vector_3d": 161, "data_strid": 161, "len_point": 161, "dim_siz": 163, "force_recomput": 163, "meesters2016_ismrm": 163, "duitsandfranken_ijcv": 163, "evaluate_kernel": [163, 174], "kernel_valu": 163, "get_lookup_t": [163, 174], "upfirdn": 163, "image_as_sampl": 163, "sigma_corr": 163, "stacklevel": [163, 171], "odfs_sf": 163, "trekker": 164, "max_attempt": 164, "get_pmf": [164, 174], "get_pmf_no_boot": [164, 174], "shcoeff": 164, "pmf_gen": 164, "cylinder": 164, "k1": 164, "max_curvatur": 164, "probe_radiu": 164, "harder": 164, "intric": 164, "erod": 164, "probe_qu": 164, "probe_count": 164, "data_support_expon": 164, "datasupportexpon": 164, "dir": 164, "stream_statu": [164, 171], "dire": 167, "summat": 167, "ang_thr": [167, 171, 174], "qa_thr": [167, 171, 174], "total_weight": [167, 171, 174], "obj_arr": 167, "adj_ind": 167, "adj_indic": 167, "unrol": 167, "vertex_ind": 167, "vertind": 167, "adj_count": 167, "uint32": 167, "odfn": 167, "radiusn": 167, "anglesn": 167, "return_index": 167, "remove_antipod": 167, "relative_threshold": 167, "intp": 167, "outn": 167, "ellid": 167, "dipyseg": 168, "features1": 168, "features2": 168, "clusters_list": 168, "centroid_shap": 168, "get_cluster_map": [168, 174], "get_stat": [168, 174], "get_tree_cluster_map": [168, 174], "datum_idx": 168, "nb_dimens": 168, "c_infer_shap": 168, "c_dist": 168, "c_are_compat": 168, "datum1": 168, "datum2": 168, "data1": 168, "spawn": 168, "llist": 168, "mu_": 168, "sigma_": 168, "eta_": 168, "initialize_param_uniform": [168, 174], "negloglikelihood": [168, 174], "sigmasq": 168, "nloglik": 168, "prob_imag": [168, 174], "p_l_n": 168, "prob_neighborhood": [168, 174], "p_l_y": 168, "seg_stat": [168, 174], "seg_imag": 168, "update_param": [168, 174], "jan": 168, "mu_upd": 168, "var_upd": 168, "icm_is": [168, 174], "seg": 168, "pott": 168, "Ising": 168, "potts_model": 168, "new_seg": 168, "initialize_maximum_likelihood": [168, 174], "loglikelihood": 168, "neglog": 168, "likelihhood": 168, "stan": 168, "pln": 168, "dipytrack": 171, "distanch": 171, "nb_streamlin": 171, "min_nb_point": 171, "max_nb_point": 171, "get_direct": [171, 174], "vec1": 171, "vec2": 171, "rougher": 171, "decahexagon": 171, "7853": 171, "octagon": 171, "characteristic_point": 171, "xyza": 171, "tracksa": 171, "tracksb": 171, "hit": 171, "rcd": 171, "refx": 171, "bundlex": 171, "70710683": 171, "70710677": 171, "collis": 171, "ericson": 171, "reassign": 171, "distant": 171, "sqd_thr": 171, "larch_fast_split": 171, "3track": 171, "sqd_trh": 171, "trh": 171, "rep3": 171, "start0": 171, "end0": 171, "start1": 171, "end1": 171, "whang": 171, "sigmod07": 171, "angle_dist": 171, "l_0": 171, "l_1": 171, "cos_theta_squar": 171, "perpendicular_dist": 171, "l0": 171, "k0": 171, "u1": 171, "u2": 171, "pe": 171, "lperp1": 171, "lperp2": 171, "6f": 171, "787888": 171, "d_thr": 171, "t_1": 171, "t_2": 171, "fo": 171, "xyz1": 171, "laidlaw": 171, "ieeexplor": 171, "xpl": 171, "freeabs_al": 171, "jsp": 171, "arnumb": 171, "4479455": 171, "coroug": 171, "avg_mcd": 171, "average_mean_closest_dist": 171, "min_mcd": 171, "minimum_mean_closest_dist": 171, "max_mcd": 171, "maximum_mean_closest_dist": 171, "minab": 171, "minba": 171, "avg_minab": 171, "avg_minba": 171, "min_minab": 171, "min_minba": 171, "vagu": 171, "tracks_combinations_of_2": 171, "mean_closest_dist": 171, "mcd_i": 171, "mcd_j": 171, "vec_out": 171, "sq_dist_thr": 171, "sq_distanc": 171, "tracka": 171, "trackb": 171, "3pt": 171, "721573": 171, "min_fiberlength": 171, "minimum_length": 171, "max_windows": 171, "meesters2016_hbm": 171, "stress": 171, "leafsiz": 171, "compact_nod": 171, "copy_data": 171, "balanced_tre": 171, "boxsiz": 171, "ckdtree": 171, "kd": 171, "rapidli": 171, "bogu": 171, "brute": 171, "hyperrectangl": 171, "queri": [171, 174], "toroid": 171, "x_i": 171, "l_i": 171, "maneewongvatana": 171, "mount": 171, "count_neighbor": [171, 174], "nearbi": 171, "minkowski": 171, "cosmologi": 171, "assembli": 171, "landi": 171, "szalai": 171, "xi": 171, "redshift": 171, "sky": 171, "astro": 171, "0012333": 171, "astrophys": 171, "adsab": 171, "harvard": 171, "1993apj": 171, "64l": 171, "sheth": 171, "connolli": 171, "skibba": 171, "galaxi": 171, "0511773": 171, "hawkin": 171, "2df": 171, "survei": [79, 171], "peculiar": 171, "veloc": 171, "monthli": 171, "astronom": 171, "2003mnra": 171, "78h": 171, "5647": 171, "default_rng": 171, "points1": 171, "points2": 171, "kd_tree1": 171, "kd_tree2": 171, "query_ball_tre": [171, 174], "innernod": [171, 174], "ckdtreenod": 171, "split_dim": [171, 174], "leafnod": [171, 174], "ckdtree_nod": 171, "distance_upper_bound": 171, "kth": 171, "query_ball_point": [171, 174], "mgrid": 171, "dd": 171, "sep": 171, "2236068": 171, "unsqueez": 171, "23606798": 171, "80622577": 171, "return_sort": 171, "return_length": 171, "nearer": 171, "indici": 171, "nearby_point": 171, "markers": 171, "og": 171, "query_pair": [171, 174], "output_typ": 171, "kd_tree": 171, "sparse_distance_matrix": [171, 174], "max_dist": 171, "dok_matrix": 171, "sdm": 171, "toarrai": 171, "12295571": 171, "28942611": 171, "2333084": 171, "24617575": 171, "29571802": 171, "26836782": 171, "56906522": 171, "39923701": 171, "8658745": 171, "79428925": 171, "37327919": 171, "7225693": 171, "87665969": 171, "32580855": 171, "75679479": 171, "30088013": 171, "6395831": 171, "33630734": 171, "31994999": 171, "72658602": 171, "71124834": 171, "55396483": 171, "90785663": 171, "57714465": 171, "6473269": 171, "bounds_error": 171, "assume_sort": 171, "_interpolator1d": 171, "npoint": 171, "slinear": 171, "zeroth": 171, "x_new": 171, "monoton": 171, "__call__": 171, "splrep": 171, "univariatesplin": 171, "interp2d": 171, "xnew": 171, "ynew": 171, "streamlines_length": 171, "streamline_scor": 171, "streamlines_scor": 171, "seed_po": 171, "first_step": 171, "workhors": 171, "prev_dir": 171, "fixed_step": 171, "pft_max_nbr_back_step": 171, "pft_max_nbr_front_step": 171, "particle_path": 171, "particle_dir": 171, "particle_weight": 171, "particle_step": 171, "particle_stream_status": 171, "pft_max_step": 171, "step_sz": 171, "max_point": 171, "lenind": 171, "types": 171, "interp_out_doubl": 171, "interp_out_view": 171, "wm_map": 171, "gm_map": 171, "csf_map": 171, "kw": 171, "get_exclud": [171, 174], "get_includ": [171, 174], "correction_factor": 171, "check_point": [171, 174], "intflag": 171, "pyerror": [171, 174], "pxd": 171, "tol_error": 171, "presseau15": 171, "rheault15": 171, "01mm": 171, "probabilit": 171, "compressed_streamlin": 171, "wiggl": 171, "c_streamlin": 171, "presseau": 171, "common_shap": 171, "expected_length": 171, "modified_streamlin": 171, "return_el": 171, "trackviz": 171, "tc": 171, "vox_track0": 171, "vox_track1": 171, "vox_dim": 171, "bundlemin": 174, "expectmax": 174, "parzenhist": 174, "sumsqdiff": 174, "determine_num_thread": 174, "distance_matrix_mdf": 174, "compute_cc_backward_step_2d": 174, "compute_cc_backward_step_3d": 174, "compute_cc_forward_step_2d": 174, "compute_cc_forward_step_3d": 174, "precompute_cc_factors_2d": 174, "precompute_cc_factors_2d_test": 174, "precompute_cc_factors_3d": 174, "precompute_cc_factors_3d_test": 174, "compute_em_demons_step_2d": 174, "compute_em_demons_step_3d": 174, "compute_masked_class_stats_2d": 174, "compute_masked_class_stats_3d": 174, "quantize_positive_2d": 174, "quantize_positive_3d": 174, "compute_parzen_mi": 174, "cubic_splin": 174, "cubic_spline_deriv": 174, "sample_domain_regular": 174, "compute_energy_ssd_2d": 174, "compute_energy_ssd_3d": 174, "compute_residual_displacement_field_ssd_2d": 174, "compute_residual_displacement_field_ssd_3d": 174, "compute_ssd_demons_step_2d": 174, "compute_ssd_demons_step_3d": 174, "iterate_residual_displacement_field_ssd_2d": 174, "iterate_residual_displacement_field_ssd_3d": 174, "solve_2d_symmetric_positive_definit": 174, "solve_3d_symmetric_positive_definit": 174, "affinetransform2d": 174, "rigidisoscalingtransform2d": 174, "rigidisoscalingtransform3d": 174, "rigidscalingtransform2d": 174, "rigidscalingtransform3d": 174, "rigidtransform2d": 174, "rotationtransform2d": 174, "rotationtransform3d": 174, "scalingtransform2d": 174, "scalingtransform3d": 174, "compose_vector_fields_2d": 174, "compose_vector_fields_3d": 174, "create_circl": 174, "create_harmonic_fields_2d": 174, "create_harmonic_fields_3d": 174, "create_random_displacement_2d": 174, "create_random_displacement_3d": 174, "create_spher": 174, "downsample_displacement_field_2d": 174, "downsample_displacement_field_3d": 174, "downsample_scalar_field_2d": 174, "downsample_scalar_field_3d": 174, "invert_vector_field_fixed_point_2d": 174, "invert_vector_field_fixed_point_3d": 174, "is_valid_affin": 174, "reorient_vector_field_2d": 174, "reorient_vector_field_3d": 174, "resample_displacement_field_2d": 174, "resample_displacement_field_3d": 174, "simplify_warp_function_2d": 174, "sparse_gradi": 174, "warp_2d": 174, "warp_2d_nn": 174, "warp_3d": 174, "warp_3d_nn": 174, "warp_coordinates_2d": 174, "warp_coordinates_3d": 174, "bench_spher": 174, "func_minimize_adhoc": 174, "func_minimize_scipi": 174, "bench_disperse_charges_alt": 174, "nearestneighborinterpol": 174, "trilinearinterpol": 174, "interpolate_scalar_2d": 174, "interpolate_scalar_3d": 174, "interpolate_scalar_nn_2d": 174, "interpolate_scalar_nn_3d": 174, "interpolate_vector_2d": 174, "interpolate_vector_3d": 174, "map_coordinates_trilinear_iso": 174, "trilinear_interp": 174, "nlmeans_block": 174, "add_padding_reflect": 174, "correspond_indic": 174, "remove_pad": 174, "gettempdir": 174, "firdn": 174, "upfir": 174, "convolve_sf": 174, "bootstrap_direction_gett": 174, "ptt_direction_gett": 174, "bootpmfgen": 174, "shcoeffpmfgen": 174, "simplepmfgen": 174, "bench_bounding_box": 174, "bench_csd": 174, "bench_peak": 174, "bench_squash": 174, "bench_vec_val_sum": 174, "quick_squash": 174, "recspe": 174, "vec_val_sum": 174, "num_grad": 174, "bench_csdeconv": 174, "bench_local_maxima": 174, "old_squash": 174, "bench_quick_squash": 174, "bench_vec_val_vect": 174, "adj_to_countarr": 174, "argmax_from_adj": 174, "argmax_from_countarr": 174, "le_to_odf": 174, "local_maxima": 174, "proc_reco_arg": 174, "search_descend": 174, "sum_on_blocks_1d": 174, "bench_quickbundl": 174, "clustering_algorithm": 174, "clusteringspe": 174, "cythonutil": 174, "mdfpy": 174, "clusters_centroid2clustermap_centroid": 174, "clusterscentroid": 174, "evaluate_aabb_check": 174, "cythonfeatur": 174, "cythonmetr": 174, "minimumaveragedirectflipmetr": 174, "constantobservationmodel": 174, "iteratedconditionalmod": 174, "bench_streamlin": 174, "vox2track": 174, "bench_set_number_of_point": 174, "bench_length": 174, "bench_compress_streamlin": 174, "add_3vec": 174, "approximate_mdl_trajectori": 174, "bundles_distances_mam": 174, "cut_plan": 174, "inner_3vec": 174, "intersect_segment_cylind": 174, "larch_3merg": 174, "larch_3split": 174, "lee_angle_dist": 174, "lee_perpendicular_dist": 174, "local_skeleton_clust": 174, "local_skeleton_clustering_3pt": 174, "minimum_closest_dist": 174, "most_similar_track_mam": 174, "mul_3vec": 174, "norm_3vec": 174, "normalized_3vec": 174, "point_segment_sq_dist": 174, "point_track_sq_distance_check": 174, "sub_3vec": 174, "track_dist_3pt": 174, "track_roi_intersection_check": 174, "kdtree": 174, "interp1d": 174, "compute_rfbc": 174, "min_moving_averag": 174, "pft_tracker": 174, "eudx_both_direct": 174, "ndarray_offset": 174, "track_count": 174, "3087": [21, 79], "5019": [21, 37, 79], "81it": [21, 22, 29, 33, 71, 76, 79, 80, 82], "4988": [21, 50, 79], "76it": [21, 22, 34, 37, 50, 71, 76, 77, 79, 80, 82], "5002": [21, 50], "79it": [21, 22, 29, 30, 33, 50, 71, 76, 79, 80, 82], "5012": [21, 37, 79], "09it": [21, 30, 34, 37, 50, 71, 76, 79, 80, 82], "2511": 21, "4973": [21, 22, 37, 50, 79], "82it": [21, 22, 33, 50, 71, 76, 77, 79, 80, 82], "3009": [21, 79], "4909": [21, 79], "98it": [21, 22, 30, 37, 50, 71, 76, 79, 80, 82], "4936": [21, 50], "96it": [21, 22, 33, 34, 50, 71, 76, 79, 80, 82], "468": [21, 79, 80], "4678": [21, 76, 79], "55it": [21, 22, 29, 34, 50, 71, 76, 79, 80, 82], "4596": [21, 79], "75it": [21, 22, 33, 37, 71, 76, 79, 80, 82], "4647": [21, 79], "33it": [21, 22, 29, 50, 71, 76, 79, 80, 82, 90], "4669": [21, 79], "91it": [21, 22, 33, 37, 50, 71, 76, 77, 79, 80, 82], "2364": [21, 76, 79], "4733": [21, 78, 79], "11it": [21, 22, 33, 34, 37, 71, 76, 79, 80, 82], "2844": [21, 76, 79], "4752": [21, 71, 79], "97it": [21, 22, 29, 30, 34, 37, 50, 71, 76, 77, 79, 80, 82], "4728": [21, 22, 79], "69795": 22, "5137": 22, "90it": [22, 29, 33, 34, 37, 50, 71, 73, 76, 77, 79, 80, 82], "4835": 22, "14it": [22, 29, 30, 34, 37, 50, 71, 76, 79, 80, 82], "4744": [22, 37, 76], "49it": [22, 29, 34, 37, 50, 71, 76, 77, 79, 80, 82], "4697": [22, 76, 79], "35it": [22, 37, 50, 71, 76, 79, 80, 82, 90], "4767": [22, 76], "65it": [22, 29, 37, 50, 71, 76, 79, 80, 82], "2990": [22, 76, 79], "4879": [22, 76, 79], "3479": [22, 71], "4797": 22, "71it": [22, 29, 37, 71, 76, 79, 80, 82], "3960": [22, 79], "4796": [22, 79], "4441": [22, 76, 79], "4725": [22, 76, 79], "92it": [22, 33, 34, 37, 50, 71, 76, 77, 79, 80, 82], "4926": [22, 50, 76], "4761": [22, 50, 76], "94it": [22, 29, 30, 33, 34, 37, 50, 71, 76, 79, 80, 82], "5421": 22, "4816": [22, 79], "25it": [22, 50, 71, 76, 79, 80, 82], "5903": 22, "4771": [22, 79], "86it": [22, 29, 30, 33, 37, 50, 71, 76, 77, 79, 80, 82], "6381": 22, "4717": 22, "72it": [22, 30, 33, 37, 50, 71, 76, 77, 79, 80, 82], "6854": 22, "4715": 22, "44it": [22, 29, 30, 33, 37, 50, 71, 76, 77, 79, 80, 82], "7327": 22, "4719": [22, 79], "18it": [22, 33, 37, 50, 71, 76, 79, 80, 82], "7811": 22, "4751": [22, 76, 82], "29it": [22, 30, 33, 37, 50, 71, 76, 77, 79, 80, 82], "8304": 22, "4803": 22, "04it": [22, 30, 37, 50, 71, 76, 77, 79, 80, 82], "8785": 22, "60it": [22, 37, 50, 71, 73, 76, 77, 79, 80, 82], "9276": 22, "9766": 22, "4828": [22, 37, 79], "48it": [22, 30, 33, 34, 37, 50, 71, 76, 79, 80, 82], "10253": 22, "4840": [22, 79], "74it": [22, 29, 34, 37, 50, 71, 76, 77, 79, 80, 82], "10755": 22, "4892": [22, 37, 76], "45it": [22, 29, 30, 37, 50, 71, 76, 79, 80, 82], "11245": 22, "4798": [22, 79], "11726": 22, "4794": [22, 79], "78it": [22, 30, 33, 34, 37, 50, 71, 76, 77, 79, 80, 82], "12206": 22, "4782": [22, 79], "83it": [22, 33, 34, 37, 50, 71, 76, 79, 80, 82], "12685": 22, "4770": [22, 76, 79], "10it": [22, 33, 37, 50, 71, 76, 77, 79, 80, 82], "13186": 22, "61it": [22, 33, 37, 50, 71, 76, 77, 79, 80, 82], "13671": 22, "4826": [22, 79], "54it": [22, 37, 50, 71, 76, 79, 80, 82, 90], "14156": 22, "4831": 22, "52it": [22, 33, 37, 50, 71, 76, 79, 80, 82], "14641": 22, "4833": [22, 76], "16it": [22, 29, 30, 33, 34, 37, 50, 71, 76, 77, 79, 80, 82], "15125": 22, "4819": 22, "46it": [22, 29, 30, 33, 37, 50, 71, 76, 77, 79, 80, 82], "15607": 22, "4788": [22, 79], "20it": [22, 30, 34, 37, 50, 71, 73, 76, 79, 80, 82], "16086": 22, "4730": 22, "37it": [22, 29, 30, 34, 37, 50, 71, 76, 79, 80, 82], "16564": 22, "4743": [22, 79], "02it": [22, 29, 33, 34, 37, 71, 76, 77, 79, 80, 82, 90], "17053": 22, "4785": [22, 76], "17540": 22, "4809": [22, 37], "24it": [22, 30, 37, 71, 76, 79, 80, 82, 90], "18022": 22, "18510": 22, "4813": 22, "15it": [22, 30, 33, 37, 50, 71, 76, 77, 79, 80, 82], "19001": 22, "4841": [22, 76, 79], "38it": [22, 33, 34, 50, 71, 76, 77, 79, 80, 82], "19492": 22, "4859": [22, 50, 79], "19987": [22, 37], "4886": [22, 79], "84it": [22, 29, 30, 34, 37, 50, 71, 76, 79, 80, 82], "20476": 22, "4882": [22, 37, 79], "00it": [22, 29, 37, 50, 71, 76, 79, 80, 82], "20969": 22, "21459": 22, "4821": [22, 76], "80it": [22, 29, 37, 50, 71, 76, 79, 80, 82], "21942": 22, "4811": [22, 37], "68it": [22, 29, 30, 33, 37, 50, 71, 76, 77, 79, 80, 82], "22439": 22, "4858": [22, 76], "22925": 22, "4847": [22, 76], "23421": 22, "4880": [22, 79], "23910": 22, "4827": 22, "24393": 22, "24867": 22, "4690": [22, 79], "53it": [22, 34, 37, 50, 71, 76, 79, 80, 82], "25337": 22, "4637": [22, 76, 79], "25818": 22, "4686": [22, 79], "21it": [22, 33, 34, 37, 50, 71, 76, 79, 80, 82], "26305": 22, "4737": [22, 76, 79], "26780": 22, "4720": [22, 37, 76], "27253": 22, "4723": [22, 79], "08it": [22, 29, 33, 37, 50, 71, 76, 77, 79, 80, 82], "27733": 22, "28218": 22, "4775": 22, "64it": [22, 34, 37, 50, 71, 73, 76, 77, 79, 80, 82], "28709": 22, "93it": [22, 29, 33, 34, 37, 50, 71, 76, 79, 80, 82], "29191": 22, "4780": [22, 76, 79], "29670": 22, "4722": [22, 79], "30162": 22, "4778": [22, 79], "30648": 22, "4801": [22, 50], "67it": [22, 30, 33, 37, 50, 71, 76, 77, 78, 79, 80, 82, 90], "31129": 22, "28it": [22, 33, 50, 71, 76, 79, 80, 82, 90], "31610": 22, "32087": 22, "4665": [22, 79], "22it": [22, 29, 33, 34, 37, 50, 71, 76, 79, 80, 82, 90], "32568": 22, "4707": [22, 76, 79], "33072": 22, "33553": 22, "4799": 22, "85it": [22, 29, 30, 33, 37, 50, 71, 76, 79, 80, 82], "34041": 22, "58it": [22, 30, 33, 34, 37, 50, 71, 76, 77, 79, 80, 82], "34524": 22, "12it": [22, 29, 37, 50, 71, 76, 77, 79, 80, 82], "35023": 22, "4864": 22, "35536": 22, "4942": [22, 37, 50], "34it": [22, 30, 37, 50, 71, 76, 79, 80, 82], "36031": 22, "36520": 22, "4871": [22, 79], "37008": 22, "4837": 22, "95it": [22, 30, 37, 50, 71, 76, 79, 80, 82, 90], "37497": 22, "4852": [22, 79], "37990": 22, "4875": [22, 79], "30it": [22, 29, 30, 34, 37, 50, 71, 76, 79, 80, 82], "38478": 22, "4851": [22, 76, 79], "38964": 22, "4832": [22, 79], "39it": [22, 33, 37, 71, 76, 77, 79, 80, 82], "39448": 22, "4786": [22, 79], "39927": 22, "4742": [22, 76, 79], "40426": 22, "4815": 22, "26it": [22, 30, 33, 34, 37, 71, 76, 77, 79, 80, 82], "40918": 22, "4843": [22, 76], "41403": 22, "41896": 22, "4866": [22, 79], "42383": 22, "4784": [22, 79], "42888": 22, "4861": [22, 76, 79], "43393": 22, "4915": [22, 37, 50, 76], "43900": 22, "4960": [22, 50, 79], "44401": 22, "07it": [22, 30, 34, 37, 50, 71, 76, 77, 79, 80, 82], "44899": 22, "41it": [22, 29, 33, 37, 71, 76, 77, 79, 80, 82], "45401": 22, "47it": [22, 33, 34, 37, 50, 71, 76, 79, 80, 82], "45911": 22, "4946": [22, 50, 79], "46407": 22, "4929": [22, 50, 79], "73it": [22, 33, 34, 37, 50, 71, 76, 77, 79, 80, 82], "46907": 22, "4947": [22, 37, 50, 79], "47403": 22, "4845": [22, 76], "47895": 22, "48401": 22, "4923": [22, 76, 79], "59it": [22, 34, 37, 50, 71, 76, 77, 79, 80, 82], "48909": 22, "4969": [22, 50, 76, 79], "49407": 22, "4951": [22, 37, 50, 76], "49903": 22, "4869": [22, 79], "50391": 22, "4800": [22, 79], "50882": 22, "66it": [22, 29, 34, 37, 50, 71, 76, 77, 79, 80, 82], "51369": 22, "51866": 22, "4876": [22, 37, 50, 76, 79], "52354": 22, "4806": [22, 50, 79], "31it": [22, 29, 30, 34, 37, 50, 71, 76, 77, 79, 80, 82], "52835": 22, "4766": [22, 79], "03it": [22, 30, 34, 37, 50, 71, 76, 77, 79, 80, 82], "53329": 22, "05it": [22, 29, 37, 50, 71, 76, 79, 80, 82], "53823": 22, "4849": [22, 76], "54311": 22, "4857": [22, 79], "54797": 22, "55280": 22, "4713": [22, 68, 76, 79], "55752": 22, "4680": [22, 76], "56237": 22, "4727": [22, 79], "43it": [22, 29, 34, 37, 50, 71, 76, 79, 80, 82], "56730": 22, "06it": [22, 29, 34, 37, 50, 71, 76, 79, 80, 82], "57209": 22, "99it": [22, 29, 30, 33, 37, 50, 68, 71, 76, 79, 80, 82], "57687": 22, "58157": 22, "4631": 22, "58641": 22, "59111": 22, "4681": [22, 50, 79], "59606": 22, "4758": [22, 79], "60088": 22, "60566": 22, "4650": [22, 76, 79], "13it": [22, 29, 30, 33, 34, 37, 50, 71, 76, 77, 79, 80, 82], "61032": 22, "4630": [22, 79], "61507": 22, "4664": [22, 76, 79], "61976": 22, "4671": [22, 79, 82], "62479": 22, "4776": [22, 79], "01it": [22, 29, 37, 50, 71, 76, 79, 80, 82], "62957": 22, "63432": 22, "4688": [22, 37, 79], "17it": [22, 29, 30, 37, 50, 71, 76, 77, 79, 80, 82, 89], "63902": 22, "4670": 22, "88it": [22, 29, 37, 50, 71, 73, 76, 77, 79, 80, 82], "64372": 22, "4677": [22, 79], "64874": 22, "4777": 22, "65352": 22, "4749": [22, 79], "65828": 22, "4702": [22, 79], "66302": 22, "4712": [22, 37, 79], "27it": [22, 29, 30, 33, 34, 37, 50, 71, 76, 77, 79, 80, 82], "66794": 22, "4773": 22, "56it": [22, 29, 33, 34, 37, 50, 71, 76, 77, 79, 80, 82], "67283": 22, "4805": [22, 79], "67769": 22, "4820": [22, 79], "68252": 22, "4675": [22, 79], "68721": 22, "69204": 22, "4703": [22, 76, 79], "69683": 22, "4726": [22, 79], "4792": [22, 79], "examples_built_contextual_enhanc": 24, "examples_built_fiber_track": 27, "969": [27, 105, 112], "096": [27, 28], "58788": [29, 30, 33, 34], "6937": 29, "1599": 29, "8177": 29, "8772": 29, "3463": [29, 76, 79], "8919": 29, "4414": [29, 76], "9128": 29, "5369": 29, "9270": 29, "50it": [29, 30, 34, 37, 50, 71, 76, 79, 80, 82], "6341": 29, "9416": 29, "7305": 29, "9486": 29, "8274": 29, "9547": [29, 33, 82], "9229": 29, "9539": 29, "10183": 29, "9492": 29, "11133": 29, "9441": 29, "12107": 29, "9530": [29, 33], "13071": 29, "9562": 29, "14028": [29, 82], "9548": 29, "15016": 29, "9644": 29, "15982": 29, "9648": [29, 33], "16947": 29, "9627": 29, "17940": [29, 37], "9714": [29, 33], "18912": 29, "9663": 29, "23it": [29, 30, 37, 50, 71, 76, 79, 80, 82, 89], "19879": 29, "69it": [29, 50, 71, 76, 79, 80, 82], "20846": 29, "9639": 29, "21814": 29, "9650": [29, 33], "22780": 29, "9629": 29, "23761": 29, "9681": 29, "24730": 29, "9680": 29, "32it": [29, 30, 34, 50, 71, 76, 77, 79, 80, 82], "25699": 29, "9633": 29, "26663": 29, "9583": 29, "27622": 29, "9584": 29, "28581": 29, "9475": 29, "29529": 29, "9386": 29, "30468": 29, "9359": 29, "31405": 29, "9324": 29, "32359": 29, "9387": 29, "33319": 29, "9447": 29, "34281": 29, "9496": [29, 33], "35231": 29, "9493": 29, "36201": 29, "9554": 29, "37160": 29, "9565": 29, "38135": 29, "9618": 29, "39117": 29, "9677": [29, 30, 34], "40099": 29, "9717": [29, 30, 33, 50], "41080": 29, "9743": 29, "42069": 29, "9785": [29, 82], "43048": 29, "9738": 29, "44028": 29, "9755": 29, "45004": 29, "9744": 29, "45979": 29, "9682": 29, "46956": 29, "9706": 29, "47942": 29, "9751": 29, "48918": 29, "49892": 29, "50875": 29, "9765": 29, "51852": 29, "9688": 29, "52821": 29, "9669": 29, "53789": 29, "54755": 29, "89it": [29, 33, 34, 50, 71, 76, 79, 80, 82], "55720": 29, "9574": 29, "56678": 29, "9489": 29, "57628": 29, "9412": 29, "58570": 29, "9238": 29, "9494": 29, "718": [30, 34, 76, 79], "7178": 30, "1627": [30, 76, 79], "8301": 30, "2598": [30, 37], "8942": 30, "3535": [30, 76, 79], "9110": 30, "4515": [30, 76], "9357": 30, "5490": 30, "9490": [30, 82], "62it": [30, 37, 50, 71, 76, 77, 79, 80, 82], "6475": 30, "9607": 30, "7471": [30, 82], "8470": [30, 71], "9802": 30, "51it": [30, 37, 50, 71, 76, 77, 79, 80, 82], "9464": 30, "9843": 30, "10449": 30, "9819": 30, "11431": 30, "12400": 30, "9661": 30, "13399": 30, "9758": 30, "40it": [30, 34, 37, 50, 71, 76, 77, 79, 80, 82, 90], "14376": 30, "9749": 30, "15352": 30, "9747": 30, "16362": 30, "9851": [30, 34], "17348": 30, "9850": [30, 34], "18338": 30, "9863": [30, 34], "19325": 30, "9864": 30, "20317": 30, "9880": [30, 33, 34], "21306": 30, "9824": 30, "22322": 30, "9921": 30, "23315": 30, "24318": 30, "9923": 30, "25320": 30, "9950": [30, 34], "26316": 30, "9830": 30, "27300": 30, "9803": 30, "28281": 30, "9761": 30, "29258": 30, "9671": 30, "30226": 30, "9551": 30, "31182": 30, "9546": 30, "32137": 30, "9479": 30, "33125": 30, "9595": 30, "34107": 30, "9660": 30, "35074": 30, "9630": [30, 71], "36060": 30, "9696": 30, "37044": 30, "9739": 30, "38027": 30, "9764": [30, 34], "39008": 30, "9777": 30, "39999": 30, "9816": 30, "41007": 30, "9894": 30, "42021": 30, "9966": [30, 34], "43018": 30, "9887": 30, "44024": [30, 50], "9938": 30, "45019": 30, "9936": 30, "46013": 30, "9897": 30, "47011": 30, "9919": 30, "48006": 30, "9926": [30, 50], "48999": 30, "9901": 30, "49999": 30, "9929": 30, "50994": 30, "9933": 30, "51988": [30, 50], "9932": 30, "52982": 30, "53972": 30, "9835": [30, 34], "54956": 30, "9784": 30, "55935": 30, "9711": 30, "56912": 30, "9727": 30, "57885": 30, "9550": 30, "9686": 30, "706": [33, 76], "7055": 33, "8285": 33, "8920": 33, "3517": [33, 76, 79], "9061": 33, "4489": [33, 79], "9296": 33, "5461": 33, "9436": 33, "6435": 33, "9535": 33, "7413": 33, "9612": 33, "8408": 33, "9381": 33, "9719": 33, "10354": 33, "9720": 33, "11329": 33, "9729": [33, 34], "12330": [33, 82], "9811": [33, 34], "13331": 33, "9868": 33, "14318": 33, "9839": 33, "15302": 33, "9799": 33, "16314": 33, "9893": 33, "17307": 33, "9902": 33, "18298": 33, "19287": 33, "9881": 33, "20276": 33, "9837": 33, "21260": 33, "9809": 33, "22252": 33, "23237": 33, "9790": [33, 34], "24224": 33, "9812": [33, 34], "25220": 33, "9854": 33, "26206": 33, "9782": 33, "27185": 33, "9718": [33, 34], "28157": 33, "87it": [33, 37, 50, 71, 76, 77, 79, 80, 82], "29123": 33, "9524": 33, "30076": 33, "9425": 33, "31024": 33, "9439": 33, "31975": 33, "9456": 33, "32935": 33, "33897": 33, "34873": 33, "9593": 33, "35853": 33, "9653": 33, "36820": 33, "9657": 33, "37805": 33, "38788": [33, 82], "9746": 33, "39777": 33, "9788": 33, "40770": 33, "9829": 33, "70it": [33, 34, 37, 68, 71, 76, 79, 80, 82], "41763": 33, "9856": [33, 34], "42749": 33, "9805": 33, "43731": 33, "9808": 33, "44712": 33, "9741": [33, 71], "45688": 33, "57it": [33, 50, 71, 76, 79, 80, 82], "46690": 33, "9826": 33, "47673": 33, "9807": [33, 34], "48654": 33, "9770": 33, "49648": 33, "9818": 33, "50630": 33, "9795": 33, "51610": 33, "9762": 33, "52587": 33, "9705": 33, "53563": 33, "9721": 33, "54536": [33, 82], "9707": 33, "55517": 33, "9735": 33, "56491": 33, "57457": 33, "58413": 33, "9423": 33, "9622": 33, "7177": 34, "8333": 34, "8982": 34, "3529": [34, 79, 82], "9067": 34, "4511": 34, "9336": 34, "36it": [34, 50, 71, 76, 79, 80, 82], "5503": 34, "9531": 34, "6496": 34, "9658": 34, "7484": 34, "8477": 34, "9791": 34, "9471": 34, "10463": 34, "9860": 34, "11454": 34, "9874": 34, "12444": 34, "9882": 34, "19it": [34, 37, 50, 71, 76, 79, 80, 82], "13455": 34, "14451": 34, "9895": 34, "15441": 34, "16470": 34, "9980": 34, "17471": 34, "9987": 34, "18470": 34, "9988": 34, "19469": 34, "9937": 34, "20463": 34, "9853": 34, "21449": 34, "22451": 34, "23437": 34, "9821": 34, "24434": 34, "25421": 34, "9848": 34, "26406": 34, "9844": 34, "27391": 34, "28368": 34, "9673": 34, "29336": 34, "9521": 34, "30289": 34, "9511": 34, "31241": 34, "9499": 34, "32211": 34, "9556": 34, "33176": 34, "9582": 34, "34156": 34, "9647": 34, "35121": 34, "9626": 34, "36107": 34, "9694": 34, "37077": 34, "9695": 34, "38086": 34, "39103": 34, "9917": 34, "40117": 34, "9982": 34, "41116": 34, "9979": 34, "42119": 34, "9994": 34, "43119": 34, "9964": 34, "44116": 34, "9915": [34, 71], "45124": 34, "9963": 34, "46122": 34, "47127": 34, "9990": 34, "48142": 34, "10037": 34, "49146": 34, "10006": 34, "50147": 34, "9972": [34, 71], "51145": 34, "9925": 34, "52138": 34, "53127": 34, "9847": [34, 82], "54114": 34, "55100": 34, "56082": 34, "57064": 34, "58033": 34, "9564": 34, "77848": 37, "3572": [37, 79], "4061": [37, 79], "4194": [37, 79], "4270": [37, 79], "4337": [37, 79], "4468": [37, 79], "3047": [37, 79], "4473": 37, "4490": 37, "3968": [37, 79], "4548": [37, 76, 79], "4423": [37, 76], "4485": [37, 79, 82], "4924": [37, 50], "4643": [37, 76, 79], "5389": 37, "4623": [37, 76, 79], "5882": 37, "6357": 37, "63it": [37, 50, 71, 72, 76, 77, 79, 80, 82], "6830": 37, "4704": 37, "7314": 37, "77it": [37, 50, 71, 76, 79, 80, 82], "7789": 37, "8308": 37, "4836": [37, 50, 76, 79], "8801": 37, "4860": 37, "9288": 37, "4830": [37, 79], "9792": 37, "4891": [37, 79], "10282": 37, "10797": 37, "4922": [37, 50, 79], "11297": 37, "11792": 37, "4897": [37, 79], "12320": 37, "5008": [37, 50], "12829": 37, "5030": [37, 79], "13333": 37, "4944": [37, 50, 79], "13862": 37, "5045": [37, 79], "14385": 37, "5098": [37, 79], "14896": 37, "5017": [37, 79], "15416": 37, "5068": [37, 79], "15924": 37, "5060": 37, "16431": 37, "5049": 37, "16937": 37, "4965": [37, 50], "17441": 37, "4984": [37, 50, 76, 79], "4966": [37, 50, 76, 79], "18437": 37, "18963": 37, "4987": [37, 50, 76], "19471": 37, "5013": [37, 76, 79], "5056": [37, 76], "20493": 37, "21004": 37, "5064": [37, 79], "21514": 37, "5074": [37, 79], "22022": 37, "5001": [37, 50, 79], "22542": 37, "23063": 37, "5103": [37, 76, 79], "23574": 37, "5072": [37, 79], "24082": 37, "4979": [37, 79], "24615": 37, "5082": [37, 76, 79], "25133": 37, "5110": [37, 79], "25645": 37, "4999": [37, 50, 79], "26146": 37, "26685": 37, "5078": [37, 76, 79], "27195": 37, "5084": 37, "27704": 37, "28211": 37, "4990": [37, 50, 76, 79], "28733": [37, 82], "29240": 37, "5048": [37, 79], "29746": 37, "5039": 37, "30251": 37, "4981": [37, 50, 76, 79], "30767": 37, "5033": [37, 79], "31279": 37, "31785": 37, "5054": 37, "32301": 37, "5085": [37, 76, 79], "32810": 37, "5047": [37, 79], "33324": 37, "5073": [37, 76, 79], "33841": 37, "5101": [37, 79], "34352": 37, "5075": [37, 76, 79], "34860": 37, "35380": 37, "35889": 37, "5083": 37, "36403": 37, "5096": [37, 79], "36918": 37, "37430": 37, "5087": [37, 76, 79, 82], "37939": 37, "5079": [37, 79], "38447": 37, "5044": [37, 79], "38952": 37, "5041": [37, 79], "39457": 37, "5014": [37, 50, 79], "39968": [37, 71], "5042": [37, 76, 79], "40473": 37, "40976": 37, "42it": [37, 50, 71, 76, 77, 79, 80, 82, 90], "41473": 37, "4900": [37, 50, 79], "41973": 37, "4927": [37, 50, 79], "42466": 37, "4914": [37, 50, 79], "42959": 37, "4918": [37, 50, 76, 79], "43451": 37, "43942": 37, "4872": [37, 50, 76], "44431": 37, "44922": 37, "4885": [37, 76, 79], "45411": 37, "4846": [37, 79], "45896": 37, "4838": [37, 50, 79], "46380": 37, "46862": 37, "4789": [37, 50, 76, 79], "47379": 37, "4899": [37, 50, 76, 79], "47877": 37, "4921": [37, 50, 76], "48370": 37, "4888": 37, "48860": 37, "49350": 37, "49835": 37, "4834": [37, 79], "50335": 37, "50824": 37, "4850": [37, 50, 79], "51319": 37, "4877": [37, 79], "51812": 37, "52302": 37, "4887": [37, 76, 79], "52791": 37, "4862": 37, "53306": 37, "4945": [37, 50, 79], "53818": 37, "4996": [37, 50, 79], "54318": 37, "4968": [37, 50, 79], "54817": 37, "55333": 37, "5027": [37, 79], "55850": 37, "5069": 37, "56358": 37, "5026": [37, 79], "56874": 37, "57381": 37, "5040": [37, 79], "57915": 37, "5129": [37, 79], "58429": 37, "58938": 37, "5076": [37, 79], "59446": 37, "5063": [37, 76, 79], "59956": 37, "60472": 37, "5097": [37, 76, 79], "60982": 37, "61497": 37, "5050": [37, 76, 79], "62003": 37, "4994": [37, 50, 71], "62548": 37, "5127": [37, 79], "63069": 37, "5151": [37, 79], "63585": 37, "5140": [37, 79], "64106": 37, "5160": [37, 79], "64623": 37, "5144": [37, 79], "65161": 37, "5213": [37, 82], "65683": 37, "5178": [37, 79], "66207": 37, "5195": 37, "66727": 37, "5071": [37, 77, 79], "67282": 37, "5210": 37, "67804": 37, "5200": [37, 79], "68325": 37, "5150": [37, 79, 82], "68841": 37, "5089": [37, 79], "69376": 37, "5163": [37, 79], "69909": 37, "70431": 37, "70948": 37, "5162": [37, 79], "71465": 37, "5100": [37, 76, 79], "71986": 37, "5130": [37, 79], "72500": 37, "73009": 37, "5057": [37, 79], "73525": 37, "74044": 37, "5112": 37, "74556": 37, "5108": [37, 79], "75067": 37, "4986": [37, 50, 79], "75608": 37, "5107": [37, 79], "76120": 37, "5099": [37, 79], "76631": 37, "5052": [37, 79], "77137": 37, "4964": [37, 50, 79], "77701": 37, "5158": [37, 79], "78218it": 37, "5116": [37, 79], "78731it": 37, "5086": 37, "79241it": 37, "5011": [37, 50], "79810it": 37, "5206": 37, "80332it": 37, "5139": [37, 76], "80847it": 37, "5125": [37, 79], "81360it": 37, "5043": [37, 79], "81906it": 37, "82423it": 37, "82934it": 37, "5066": [37, 76, 79], "83455it": 37, "5106": [37, 79], "83966it": 37, "5092": [37, 79], "84476it": 37, "84982it": 37, "85496it": 37, "5036": [37, 79], "86000it": 37, "4998": [37, 50, 79], "86501it": 37, "4954": [37, 50, 76, 79], "87026it": 37, "87531it": 37, "4908": [37, 50], "88038it": 37, "88545it": 37, "89045it": 37, "4863": [37, 50, 79], "89547it": 37, "4907": [37, 50, 76, 79], "90039it": 37, "90548it": 37, "4905": [37, 79], "91040it": 37, "4853": [37, 79], "91547it": 37, "92040it": 37, "92522it": 37, "93004it": 37, "4769": 37, "93482it": 37, "4724": 37, "93955it": 37, "4674": [37, 76, 79], "94423it": 37, "4652": [37, 76, 79], "94889it": 37, "4597": [37, 76, 79], "95355it": 37, "4615": [37, 79], "95817it": 37, "4535": [37, 79], "96271it": 37, "4460": [37, 76], "96718it": 37, "4422": [37, 79, 82], "96989it": 37, "skoudoro": [37, 61, 72, 79, 84, 86, 97, 130], "examples_revamp": [37, 79], "fiber_track": 37, "rcparam": [37, 79], "max_open_warn": [37, 79], "examples_built_file_format": 39, "998783": 40, "041415": 40, "026771": 40, "003548": 40, "044491": 40, "990912": 40, "126939": 40, "781647": 40, "021270": 40, "127975": 40, "991549": 40, "033348": 40, "streamline_count": 40, "6276": 40, "point_count": 40, "205884": 40, "9878335e": 40, "1415159e": 40, "6770778e": 40, "0900355e": 40, "4491168e": 40, "9091226e": 40, "2693870e": 40, "2678165e": 40, "1270305e": 40, "2797531e": 40, "9154925e": 40, "7033348e": 40, "0000000e": 40, "410614013671875": 43, "23120999336243": 43, "5160187226539936": 43, "247523069381714": 44, "786135911941528": 44, "065306012244982": 44, "061": [45, 129, 132], "examples_built_multiprocess": 45, "1698808670043945": 47, "8697910308837891": 49, "3449993133545": 49, "046": [49, 58], "0189471244812": 50, "57345": 50, "4123": [50, 76, 79, 82], "4478": [50, 79], "4594": [50, 79], "2823": [50, 76], "3313": [50, 76], "4295": 50, "4870": 50, "4889": [50, 79], "5284": 50, "4906": [50, 79], "5776": 50, "6267": 50, "6763": 50, "7256": [50, 71], "7748": 50, "4912": [50, 79], "8240": 50, "4901": [50, 76, 79], "8731": 50, "4903": [50, 79], "9222": 50, "4904": [50, 79], "10209": 50, "4911": [50, 79], "10706": 50, "11200": 50, "11693": 50, "4925": [50, 79], "12187": 50, "12680": 50, "4916": [50, 79], "13176": [50, 82], "4928": [50, 76, 79], "13673": 50, "4938": [50, 76], "14168": 50, "4941": [50, 76, 79], "14663": 50, "15158": 50, "4943": [50, 76, 79], "15653": 50, "16148": 50, "4937": [50, 79], "16642": 50, "4932": [50, 79], "17142": 50, "4950": [50, 79], "17638": 50, "18135": 50, "18631": 50, "4949": [50, 79], "19126": 50, "4930": [50, 79], "19621": 50, "4934": [50, 71, 79], "20115": 50, "20609": 50, "21602": 50, "22099": 50, "22595": 50, "23092": 50, "23589": 50, "4953": 50, "24085": 50, "4940": 50, "24583": 50, "25081": 50, "4956": [50, 79], "25577": 50, "26073": 50, "4957": [50, 79], "26569": 50, "27064": 50, "27557": 50, "28050": 50, "28547": [50, 82], "4933": [50, 79], "29041": 50, "4931": [50, 79], "29535": 50, "30033": 50, "30531": 50, "31027": 50, "31526": 50, "32023": 50, "4958": [50, 76, 79, 82], "32520": 50, "4961": 50, "33019": [50, 82], "4967": 50, "33516": 50, "4963": 50, "34014": 50, "34511": 50, "35006": 50, "35502": 50, "35997": 50, "36492": 50, "36989": 50, "37484": 50, "37978": 50, "38472": 50, "38966": 50, "39464": 50, "39959": 50, "40455": 50, "40950": 50, "41448": 50, "41945": 50, "4955": 50, "42443": 50, "42940": 50, "43437": 50, "43934": 50, "44430": 50, "44926": 50, "45424": 50, "45920": 50, "46419": 50, "46915": 50, "47410": 50, "47904": 50, "48398": 50, "48891": 50, "49381": 50, "4854": [50, 79], "49873": 50, "50364": 50, "4881": [50, 76, 79], "50859": 50, "51355": 50, "51847": 50, "52341": 50, "52834": 50, "53327": 50, "4873": [50, 79], "53815": 50, "54303": 50, "54792": 50, "55284": 50, "55780": 50, "56277": 50, "4920": [50, 79], "56772": 50, "57274": 50, "4952": [50, 79], "4556": 50, "4865": [50, 79], "2939": [50, 76, 79], "3435": [50, 76, 79], "3933": [50, 79], "4434": [50, 76], "4978": [50, 76, 79], "5432": 50, "5929": 50, "6427": 50, "6927": 50, "4975": [50, 76, 77, 79], "7428": 50, "4983": [50, 79], "7927": 50, "4977": [50, 79], "8427": 50, "4982": [50, 79], "8926": 50, "4976": [50, 79], "9426": 50, "10426": 50, "4989": [50, 79], "10928": 50, "4997": [50, 79], "11428": 50, "11929": 50, "4993": [50, 79], "12429": 50, "4992": [50, 76, 79], "12929": 50, "4991": [50, 79], "13429": 50, "13929": 50, "14434": 50, "14937": 50, "5009": [50, 79], "15439": 50, "15945": 50, "5025": [50, 76, 79], "16448": 50, "16950": 50, "5006": [50, 76, 79], "17451": [50, 71], "5007": [50, 79], "17952": 50, "18454": 50, "18955": 50, "19458": 50, "5004": [50, 79], "19959": 50, "20460": 50, "20963": 50, "21466": [50, 82], "21969": 50, "5016": [50, 79], "22471": 50, "22971": [50, 99], "4980": [50, 79], "23471": 50, "23970": 50, "4974": [50, 79], "24470": 50, "24972": 50, "25472": 50, "25972": 50, "26473": 50, "26974": 50, "27476": 50, "5003": [50, 76, 79], "27977": 50, "28478": 50, "28979": 50, "29479": 50, "29982": 50, "30483": [50, 71], "30984": 50, "31484": 50, "31984": 50, "32484": 50, "32983": 50, "33484": 50, "33988": 50, "34489": 50, "4995": [50, 79], "34990": 50, "35496": 50, "35998": 50, "36503": 50, "5024": [50, 79], "37007": 50, "37510": 50, "38012": [50, 82], "38514": 50, "39015": 50, "39516": 50, "40018": 50, "40523": 50, "41024": 50, "41525": 50, "42027": 50, "42527": 50, "43027": 50, "43526": 50, "4972": [50, 76, 79], "44519": 50, "45020": 50, "45516": 50, "46014": 50, "46516": 50, "47014": 50, "47512": 50, "48012": 50, "48513": 50, "49012": 50, "49510": 50, "50003": 50, "50496": 50, "4913": [50, 79], "50990": 50, "51490": 50, "52484": 50, "52980": 50, "53475": 50, "53971": 50, "54468": 50, "54964": [50, 71], "55460": 50, "55956": 50, "56452": 50, "56951": 50, "6833844": 50, "56180377412377": 50, "6397178173065186": 51, "15648148e": 53, "96653949e": 53, "61992976e": 53, "92500873e": 53, "96146650e": 53, "33141189e": 53, "40950862e": 53, "42065561e": 53, "15351148e": 53, "81424084e": 53, "01045073e": 53, "78199977e": 53, "89130944e": 53, "49575968e": 53, "92392283e": 53, "89783100e": 53, "13774682e": 53, "22714803e": 53, "81423596e": 53, "70696898e": 53, "44279264e": 53, "42099735e": 53, "97981663e": 53, "06339054e": 53, "23235494e": 53, "45938553e": 53, "51485692e": 53, "85273506e": 53, "85712224e": 53, "66241563e": 53, "68230772e": 53, "06019564e": 53, "65669104e": 53, "92058858e": 53, "61326543e": 53, "74347555e": 53, "11628880e": 53, "53574085e": 53, "08871570e": 53, "03390712e": 53, "93681525e": 53, "91824605e": 53, "24988505e": 53, "55542284e": 53, "34660195e": 53, "80632225e": 53, "85819050e": 53, "12966289e": 53, "32356007e": 53, "22782138e": 53, "40054148e": 53, "98992178e": 53, "46941922e": 53, "84770195e": 53, "43204317e": 53, "48937322e": 53, "35158623e": 53, "47082419e": 53, "71041827e": 53, "05168859e": 53, "15488883e": 53, "55585770e": 53, "41418633e": 53, "58244550e": 53, "13618976e": 53, "89179859e": 53, "76564778e": 53, "93552695e": 53, "55779820e": 53, "77725800e": 53, "17958100e": 53, "83233661e": 53, "05255621e": 53, "51391513e": 53, "27121140e": 53, "58566010e": 53, "78290675e": 53, "08728633e": 53, "06917064e": 53, "52503687e": 53, "27563920e": 53, "63024349e": 53, "79882937e": 53, "72841697e": 53, "30609142e": 53, "05050926e": 53, "70486057e": 53, "09488103e": 53, "97963095e": 53, "88389091e": 53, "31527195e": 53, "13363567e": 53, "56717925e": 53, "16209588e": 53, "76366604e": 53, "37506982e": 53, "77359884e": 53, "47561074e": 53, "09743721e": 53, "31221703e": 53, "11530800e": 53, "17730845e": 53, "40161873e": 53, "76965999e": 53, "58130709e": 53, "27252533e": 53, "63327780e": 53, "84547184e": 53, "80683390e": 53, "17978461e": 53, "20573605e": 53, "93145071e": 53, "51942054e": 53, "37700037e": 53, "87800384e": 53, "76254055e": 53, "16981263e": 53, "77895613e": 53, "97589989e": 53, "43818288e": 53, "26651926e": 53, "40283700e": 53, "81762736e": 53, "78157655e": 53, "46853663e": 53, "08904088e": 53, "49647159e": 53, "10481889e": 53, "32094051e": 53, "37974339e": 53, "13738787e": 53, "47553761e": 53, "30915122e": 53, "62291294e": 53, "27198063e": 53, "59985848e": 53, "49737818e": 53, "61950172e": 53, "03151996e": 53, "52933543e": 53, "06568106e": 53, "87195476e": 53, "00176605e": 53, "14671877e": 53, "67732722e": 53, "40695880e": 53, "65159767e": 53, "35699903e": 53, "37876826e": 53, "54622493e": 53, "14432233e": 53, "59488631e": 53, "45076292e": 53, "00599752e": 53, "23990746e": 53, "82382062e": 53, "78176177e": 53, "93635874e": 53, "24416581e": 53, "91224709e": 53, "12781330e": 53, "17360433e": 53, "48567167e": 53, "62230854e": 53, "31284426e": 53, "90664681e": 53, "74729365e": 53, "13012808e": 53, "83803293e": 53, "32727396e": 53, "60388303e": 53, "66641835e": 53, "22643594e": 53, "83355655e": 53, "33993474e": 53, "76825167e": 53, "78926291e": 53, "70548142e": 53, "23753076e": 53, "90195785e": 53, "38148408e": 53, "43712808e": 53, "96594945e": 53, "00768071e": 53, "12452894e": 53, "94846390e": 53, "62504123e": 53, "07032932e": 53, "00453919e": 53, "18714655e": 53, "82819862e": 53, "82543529e": 53, "263329": 56, "933178": 56, "5934806": 56, "708311737182022": 56, "060": 57, "examples_built_preprocess": 58, "17113266785504": 59, "366354266706736": 59, "918432129721111": 59, "72068171809924": 59, "592653853373644": 59, "38475": 61, "0b735e8f16695a37bfbd66aab136eb66": 61, "e9b9bb56252503ea49d31fb30a0ac637": 61, "0c83f7e8b917cd677ad58a078658ebb7": 61, "examples_built_quick_start": 62, "714u": 64, "758u": 64, "766u": 64, "689u": 64, "700u": 64, "685u": 64, "688u": 64, "676u": 64, "746u": 64, "883u": 64, "814u": 64, "692u": 64, "705u": 64, "696u": 64, "634u": 64, "664u": 64, "644u": 64, "695u": 64, "624u": 64, "698u": 64, "704u": 64, "731u": 64, "656u": 64, "709u": 64, "678u": 64, "639u": 64, "710u": 64, "648u": 64, "668u": 64, "646u": 64, "732u": 64, "697u": 64, "687u": 64, "671u": 64, "655u": 64, "670u": 64, "703u": 64, "733u": 64, "659u": 64, "693u": 64, "718u": 64, "728u": 64, "682u": 64, "684u": 64, "725u": 64, "672u": 64, "690u": 64, "739u": 64, "629u": 64, "720u": 64, "723u": 64, "686u": 64, "694u": 64, "711u": 64, "679u": 64, "651u": 64, "691u": 64, "707u": 64, "681u": 64, "749u": 64, "699u": 64, "680u": 64, "734u": 64, "643u": 64, "716u": 64, "726u": 64, "632u": 64, "654u": 64, "729u": 64, "683u": 64, "730u": 64, "713u": 64, "701u": 64, "667u": 64, "898u": 64, "971u": 64, "712u": 64, "727u": 64, "658u": 64, "674u": 64, "662u": 64, "721u": 64, "717u": 64, "657u": 64, "677u": 64, "7828795917128741": 66, "8051656184264849": 66, "43192536287529": 66, "6038698891074241": 66, "770": [66, 79], "21491283972219535": 68, "4689": [68, 76, 79], "076": 68, "3121": [76, 79], "158": [76, 80], "1131": [], "1256": [76, 79], "2396": [76, 79], "2517": [76, 79], "2633": 79, "2752": [], "2810": 76, "2876": 79, "2936": 79, "2998": 79, "3056": 71, "3118": [], "156": [79, 80], "186": [76, 79, 80, 129], "272": [79, 80], "457": [79, 80], "773": [76, 77], "778": [79, 82], "783": [76, 77], "788": 79, "793": [76, 79], "798": 79, "1178": [76, 79], "1505": [71, 76, 79], "1525": [], "1625": [76, 79], "1689": [76, 79], "1709": 79, "1820": [76, 79], "1868": [76, 79], "1883": 79, "2143": 79, "2213": [], "2273": 79, "2299": [76, 79, 82], "2325": [], "2330": 79, "2355": [], "2361": [76, 82], "2366": 79, "2376": [76, 79], "2401": 76, "2421": [79, 82], "2426": [], "2452": [], "2547": 79, "2552": 79, "2562": [], "2582": [], "2597": 79, "2607": [71, 76], "2612": 79, "2632": 79, "2637": 79, "2642": [], "2647": [76, 79], "2652": [], "2657": 79, "2677": [71, 79], "2698": 76, "2703": [], "2718": [], "2724": 79, "2734": [76, 79], "2759": 79, "2764": [], "2774": 79, "2779": 76, "2784": [76, 79], "2794": 79, "2799": 79, "2804": 79, "2809": [71, 79], "2814": 79, "2819": [], "2824": 79, "2829": [76, 79], "2834": [], "2839": [76, 79], "2849": 76, "2854": 79, "2859": 79, "2864": [76, 79], "2869": 79, "2874": 79, "2879": 79, "2884": [], "2889": [76, 79], "2894": 79, "2899": [], "2904": 79, "2909": [], "2914": 79, "2919": 76, "2924": 79, "2929": 79, "2934": [71, 79], "2944": 79, "2949": 79, "2954": 76, "2959": 79, "2964": 79, "2969": [], "2974": 79, "2979": [], "2984": 79, "2989": [], "2995": [71, 79], "3005": 79, "3010": 79, "3015": [], "3020": [76, 79], "3025": [76, 79], "3030": [], "3035": [76, 79], "3040": [], "3045": 79, "3050": [], "3055": 79, "3060": [], "3065": 79, "3070": 79, "3076": [], "3081": [], "3086": 79, "3091": 79, "3096": 76, "3101": 82, "3106": 79, "3111": [], "3116": 76, "784": 79, "548": [76, 93, 100], "1531": [], "2297": [76, 79], "2356": 79, "2474": 76, "2771": 79, "2830": [], "2948": 76, "3006": [76, 79], "3061": 79, "3117": [71, 79], "homebrew": [77, 79], "caskroom": [77, 79], "miniforg": [77, 79], "env": [77, 79], "x86": [77, 79], "optimal_inaccur": [], "157": [79, 80], "269": [79, 80], "276": [79, 80], "294": [76, 79, 80], "395": [76, 79, 80], "756": [76, 77], "776": [76, 79], "781": [76, 79], "786": 79, "796": [76, 79], "1172": [76, 79, 90], "1404": [], "1687": [76, 79], "1852": 79, "1932": 79, "1957": 79, "2027": 79, "2032": [], "2062": 79, "2087": 79, "2092": [76, 79], "2137": 79, "2167": 79, "2187": [76, 79], "2302": 79, "2322": [76, 79], "2357": 76, "2362": 79, "2397": [], "2412": [], "2427": 79, "2437": 79, "2640": [], "2645": 79, "2650": [], "2655": [76, 79], "2660": 76, "2665": 79, "2675": [76, 79], "2680": 77, "2685": 79, "2695": 79, "2705": [], "2715": 79, "2720": [], "2730": 79, "2735": 79, "2755": [76, 79], "2760": 76, "2790": 79, "2795": 79, "2805": 79, "2815": [], "2820": [76, 79], "2825": 76, "2835": [76, 79], "2840": [], "2845": 76, "2850": 79, "2855": 76, "2860": 79, "2865": 77, "2870": 79, "2875": [76, 79], "2880": [76, 79], "2885": 79, "2890": 79, "2895": 79, "2900": 79, "2906": 79, "2913": 76, "2994": [76, 79], "2999": 76, "3004": [], "3014": 79, "3019": [], "3024": 79, "3029": [76, 79], "3034": 79, "3039": [79, 82], "3044": 79, "3049": [76, 77, 79], "3054": [], "3057": 79, "3062": 79, "3067": 76, "3072": 79, "3082": [76, 79], "3085": [], "3105": 76, "3108": 79, "3113": 79, "3114": 76, "3115": 79, "57580": [71, 82], "775": [71, 76], "1985": 71, "2165": [71, 79], "2873": [71, 76, 79], "3177": [71, 79], "3237": [71, 79], "3299": [71, 79], "3359": [71, 76], "3419": [71, 79], "3540": [71, 76, 79], "3599": 71, "3665": [71, 79], "3726": 71, "3788": 71, "3849": [71, 76], "3909": 71, "3970": [71, 79], "4030": [71, 79], "4088": 71, "4148": [71, 79], "4209": [71, 76, 79], "4268": [71, 79], "4332": [71, 79], "4392": [71, 79], "4453": [71, 76, 79], "4513": 71, "4573": [71, 76, 79], "4632": [71, 79], "4691": [71, 79], "4812": [71, 76, 79], "4874": 71, "5058": 71, "5119": [71, 79], "5182": [71, 79], "5243": 71, "5303": 71, "5364": 71, "5425": 71, "5485": 71, "5545": 71, "5616": 71, "5692": 71, "5769": 71, "5839": 71, "5907": 71, "5972": 71, "6036": 71, "6097": 71, "6158": 71, "6219": 71, "6281": 71, "6342": 71, "6405": 71, "6465": 71, "6524": 71, "6584": 71, "6646": 71, "6706": 71, "6767": 71, "6828": 71, "6892": 71, "6953": 71, "7014": 71, "7074": 71, "7135": 71, "7195": 71, "7316": 71, "7376": 71, "7437": 71, "7498": 71, "7563": 71, "7625": 71, "7686": 71, "7746": 71, "7806": 71, "7867": 71, "7929": 71, "7989": 71, "8048": 71, "8109": 71, "8169": 71, "8230": 71, "8290": 71, "8349": 71, "8410": 71, "8531": 71, "8591": 71, "8653": 71, "8713": 71, "8776": 71, "8836": 71, "8907": 71, "8975": 71, "9037": 71, "9097": 71, "9156": 71, "547": [71, 76, 79, 82], "9213": 71, "9272": 71, "9333": 71, "9392": 71, "9450": 71, "9507": 71, "9571": 71, "9683": 71, "9797": 71, "9858": 71, "10034": 71, "10094": 71, "10153": 71, "10212": 71, "10272": 71, "10332": 71, "10392": 71, "10510": 71, "10569": 71, "10633": [71, 82], "10696": 71, "10757": 71, "10817": 71, "10879": 71, "10943": 71, "11004": 71, "11062": 71, "11122": 71, "11177": 71, "11237": 71, "11296": 71, "11353": 71, "11411": 71, "11472": [71, 82], "11531": 71, "11593": 71, "11653": 71, "11712": 71, "11772": 71, "11831": 71, "11909": 71, "11985": 71, "12062": 71, "12132": 71, "12199": 71, "12265": 71, "12329": 71, "12392": 71, "12454": 71, "12517": 71, "12577": 71, "12636": 71, "12698": 71, "12757": 71, "12816": 71, "12875": [71, 82], "12935": [71, 82], "12995": 71, "13055": 71, "13115": 71, "13174": 71, "13233": 71, "13292": 71, "13354": 71, "13413": 71, "13471": 71, "13532": 71, "13593": 71, "13653": 71, "13717": 71, "13778": 71, "13840": 71, "13901": 71, "13964": 71, "14025": 71, "14085": 71, "14147": 71, "14208": 71, "14271": 71, "14333": 71, "14395": 71, "14456": 71, "14516": 71, "14576": 71, "14636": 71, "14695": 71, "14754": 71, "14818": [71, 82], "14878": 71, "14940": [71, 82], "15001": 71, "15062": 71, "15121": 71, "15190": 71, "15263": 71, "15326": 71, "15387": 71, "15447": 71, "15506": 71, "15568": 71, "15629": 71, "15688": 71, "15748": 71, "15807": 71, "15866": 71, "15929": 71, "15989": 71, "16049": 71, "16109": 71, "16169": 71, "16228": 71, "16290": 71, "16350": 71, "16411": 71, "16472": 71, "16534": 71, "16597": 71, "16658": 71, "16719": 71, "16782": 71, "16843": 71, "16903": 71, "16963": 71, "17024": 71, "17084": 71, "17144": 71, "17206": 71, "17269": 71, "17330": 71, "17391": 71, "17511": 71, "17571": 71, "17629": 71, "17687": 71, "17746": 71, "17807": 71, "17866": 71, "17926": 71, "17986": 71, "18045": 71, "18105": 71, "18164": 71, "18225": 71, "18301": 71, "18378": 71, "18449": 71, "18518": 71, "18584": 71, "18648": 71, "18711": 71, "18773": 71, "18833": 71, "18895": 71, "18956": 71, "19016": 71, "19076": 71, "19136": 71, "19196": 71, "19255": 71, "19318": 71, "19378": 71, "19437": 71, "19498": 71, "19557": 71, "19618": 71, "19679": 71, "19742": 71, "19803": 71, "19865": 71, "19925": 71, "19985": 71, "20048": 71, "20107": 71, "20167": 71, "20229": 71, "20289": 71, "20353": 71, "20414": 71, "20475": 71, "20536": 71, "20596": 71, "20655": 71, "20714": 71, "20773": 71, "20833": 71, "20892": 71, "20951": 71, "21012": 71, "21074": 71, "21134": 71, "21194": 71, "21252": 71, "21317": 71, "21381": 71, "21442": 71, "21498": 71, "21572": 71, "21633": 71, "21694": 71, "21754": 71, "21815": 71, "21879": 71, "21940": 71, "22003": 71, "22064": 71, "22125": 71, "22185": 71, "22246": 71, "22305": 71, "22366": 71, "22425": 71, "22485": 71, "22549": 71, "22609": 71, "22669": 71, "22731": 71, "22791": 71, "22850": 71, "22909": 71, "22969": 71, "23029": 71, "23091": 71, "23152": 71, "23214": 71, "23275": 71, "23337": 71, "23401": 71, "23463": 71, "23524": 71, "23584": 71, "23644": 71, "23705": 71, "23765": 71, "23824": 71, "23887": 71, "23947": 71, "24009": 71, "24069": 71, "24129": 71, "24189": 71, "24249": 71, "24309": 71, "24370": 71, "24429": 71, "24492": 71, "24553": 71, "24614": 71, "24683": 71, "24758": 71, "24836": 71, "24911": 71, "24983": 71, "25051": 71, "25116": 71, "25179": 71, "25241": 71, "25302": 71, "25363": 71, "25424": 71, "25485": 71, "25549": 71, "25610": 71, "25671": 71, "25732": 71, "25792": 71, "25854": 71, "25914": 71, "25973": 71, "26035": 71, "26095": 71, "26154": 71, "26213": 71, "26272": 71, "26335": 71, "26395": 71, "26454": 71, "26513": 71, "26576": 71, "26636": 71, "26695": 71, "26753": 71, "26811": 71, "26870": 71, "26928": 71, "26989": 71, "27048": 71, "27109": 71, "27168": 71, "27230": 71, "27290": 71, "27350": 71, "27410": 71, "27472": 71, "27534": 71, "27595": 71, "27655": 71, "27715": 71, "27775": 71, "27834": 71, "27893": [71, 82], "27968": 71, "28043": 71, "28110": 71, "28177": 71, "28241": 71, "28303": 71, "28365": 71, "28427": 71, "28488": 71, "28549": 71, "28610": 71, "28670": [71, 82], "28729": 71, "28789": 71, "28848": 71, "28912": 71, "28972": 71, "29032": 71, "29092": 71, "29151": 71, "29210": 71, "29272": 71, "29332": 71, "29390": 71, "29448": 71, "29508": 71, "29566": 71, "29628": 71, "29692": 71, "29753": 71, "29814": 71, "29875": 71, "29935": 71, "29995": 71, "30059": 71, "30120": 71, "30181": 71, "30241": 71, "30302": 71, "30362": 71, "30423": 71, "30546": 71, "30607": 71, "30667": 71, "30727": 71, "30788": [71, 82], "30848": 71, "30909": 71, "30970": 71, "31030": 71, "31090": 71, "31145": 71, "31222": 71, "31291": 71, "31355": 71, "31418": [71, 82], "31480": 71, "31542": 71, "31605": 71, "31666": 71, "31727": 71, "31788": 71, "31850": 71, "31911": 71, "31973": 71, "32034": 71, "32097": 71, "32158": 71, "32220": 71, "32281": 71, "32343": 71, "32405": 71, "32466": 71, "32527": 71, "32587": 71, "32647": 71, "32706": 71, "32767": 71, "32827": 71, "32888": 71, "32948": 71, "33009": 71, "33069": 71, "33129": 71, "33190": 71, "33250": 71, "33310": 71, "33369": 71, "33430": 71, "33489": 71, "33548": 71, "33607": 71, "33666": 71, "33725": 71, "33786": 71, "33845": 71, "33904": 71, "33963": 71, "34026": 71, "34088": 71, "34148": 71, "34207": 71, "34266": 71, "34341": 71, "34418": 71, "34491": 71, "34560": 71, "34626": 71, "34690": 71, "34753": 71, "34814": 71, "34874": 71, "34934": 71, "34994": 71, "35056": 71, "35116": 71, "35177": 71, "35237": 71, "35298": 71, "35358": 71, "35417": 71, "35476": 71, "35539": 71, "35601": 71, "35662": 71, "35723": 71, "35785": 71, "35846": 71, "35907": 71, "35967": 71, "36029": 71, "36089": 71, "36153": [71, 82], "36217": 71, "36278": 71, "36339": 71, "36400": 71, "36461": 71, "36521": 71, "36582": 71, "36642": 71, "36704": 71, "36764": 71, "36824": 71, "36884": 71, "36945": 71, "37006": 71, "37068": 71, "37128": 71, "37192": 71, "37256": 71, "37318": 71, "37381": 71, "37442": 71, "37502": 71, "37559": 71, "37633": 71, "37704": 71, "37774": 71, "37839": 71, "37903": 71, "37966": 71, "38029": 71, "38091": 71, "38153": 71, "38215": 71, "38276": 71, "38337": 71, "38398": 71, "38457": 71, "38516": 71, "38578": 71, "38637": 71, "38697": 71, "38756": 71, "38816": 71, "38880": 71, "38940": 71, "39000": 71, "39059": 71, "39122": 71, "39185": 71, "39245": 71, "39305": 71, "39368": 71, "39429": 71, "39489": 71, "39549": 71, "39608": 71, "39667": 71, "39727": 71, "39787": 71, "39846": 71, "39905": 71, "40032": 71, "40094": 71, "40154": 71, "40214": 71, "40274": 71, "40334": 71, "40396": 71, "40457": 71, "40518": 71, "40580": 71, "40641": 71, "40702": 71, "40762": 71, "40836": 71, "40913": 71, "40987": [71, 82], "41057": 71, "41125": 71, "41191": 71, "41256": 71, "41319": 71, "41381": 71, "41441": 71, "41502": 71, "41566": 71, "41626": 71, "41686": 71, "41745": 71, "41805": 71, "41866": 71, "41926": 71, "41986": 71, "42044": 71, "42103": 71, "42165": 71, "42224": 71, "42283": 71, "42342": 71, "42401": 71, "42463": 71, "42522": 71, "42584": 71, "42646": 71, "42706": 71, "42767": 71, "42827": 71, "42887": 71, "42945": 71, "43004": 71, "43062": 71, "43120": 71, "43179": 71, "43240": 71, "43302": 71, "43363": 71, "43423": 71, "43483": 71, "43545": 71, "43605": 71, "43664": 71, "43723": 71, "43781": 71, "43839": 71, "43897": 71, "43956": [71, 82], "44014": 71, "44088": 71, "44156": 71, "44218": 71, "44280": 71, "44341": 71, "44402": 71, "44461": 71, "44522": 71, "44584": 71, "44644": 71, "44706": 71, "44766": 71, "44826": 71, "44881": 71, "44940": 71, "45001": 71, "45060": 71, "45120": 71, "45181": 71, "45244": 71, "45306": 71, "45366": 71, "45425": 71, "45485": 71, "45548": 71, "45608": 71, "45669": 71, "45729": 71, "45789": 71, "45849": 71, "45909": 71, "45967": 71, "46032": 71, "46092": 71, "46151": 71, "46211": 71, "46275": 71, "46336": 71, "46398": 71, "46459": 71, "46520": 71, "46582": 71, "46643": 71, "46704": 71, "46765": 71, "46825": 71, "46885": 71, "46945": 71, "47007": 71, "47067": 71, "47139": 71, "47213": 71, "47285": 71, "47353": 71, "47419": 71, "47483": 71, "47546": 71, "47607": 71, "47668": 71, "47729": 71, "47791": 71, "47852": 71, "47911": 71, "47969": 71, "48030": 71, "48092": 71, "48153": 71, "48212": 71, "48271": 71, "48329": 71, "48387": 71, "48447": 71, "48505": 71, "48563": 71, "48628": 71, "48688": 71, "48748": 71, "48810": 71, "48871": 71, "48931": 71, "48990": 71, "49049": 71, "49108": 71, "49167": 71, "49226": 71, "49286": 71, "49345": 71, "49405": 71, "49464": 71, "49528": 71, "49590": 71, "49650": 71, "49710": 71, "49770": 71, "49829": 71, "49888": 71, "49950": 71, "50012": 71, "50072": 71, "50132": 71, "50191": 71, "50252": 71, "50328": 71, "50406": 71, "50480": 71, "50550": 71, "50617": 71, "50681": 71, "50743": 71, "50807": 71, "50868": 71, "50928": 71, "50988": 71, "51050": 71, "51110": 71, "51172": 71, "51233": 71, "51293": 71, "51353": 71, "51415": 71, "51476": 71, "51536": 71, "51599": 71, "51662": 71, "51724": 71, "51785": 71, "51846": 71, "51905": 71, "51965": 71, "52023": 71, "52088": 71, "52149": [71, 82], "52209": 71, "52270": 71, "52330": 71, "52390": 71, "52450": 71, "52509": 71, "52568": 71, "52626": 71, "52685": 71, "52744": 71, "52803": 71, "52860": 71, "52920": 71, "52978": 71, "53036": 71, "53093": 71, "53150": 71, "53211": 71, "53270": 71, "53331": 71, "53394": 71, "53455": 71, "53531": 71, "53608": 71, "53677": 71, "53744": 71, "53807": 71, "53869": 71, "53930": 71, "53991": 71, "54054": 71, "54115": 71, "54176": 71, "54236": 71, "54295": 71, "54354": 71, "54413": 71, "54473": 71, "54537": 71, "54598": 71, "54661": [71, 82], "54722": 71, "54783": 71, "54844": 71, "54904": 71, "55023": 71, "55084": 71, "55146": 71, "55208": 71, "55269": 71, "55329": 71, "55388": 71, "55447": 71, "55506": 71, "55565": 71, "55625": 71, "55685": 71, "55750": 71, "55811": 71, "55873": 71, "55934": 71, "55994": 71, "56054": 71, "56114": 71, "56174": 71, "56236": 71, "56299": 71, "56360": 71, "56423": 71, "56484": 71, "56545": 71, "56605": 71, "56665": 71, "56719": 71, "56796": 71, "56872": 71, "56947": 71, "57027": 71, "57107": 71, "57187": [71, 82], "57263": 71, "57337": 71, "57407": 71, "57472": 71, "57536": 71, "9216": 72, "560757": 72, "095": [72, 79], "552487": 73, "567372": 73, "597479": 73, "593463": 73, "596134": 73, "5148": [76, 77, 79], "165": [76, 79, 80], "195": [76, 79, 80], "236": [76, 80], "244": [76, 79, 80], "281": [76, 79, 80], "546": [76, 82], "687": [76, 79], "750": [76, 77, 79], "777": 76, "789": [76, 79], "834": 76, "903": [76, 77, 79], "1026": [76, 79], "1164": [76, 79], "1175": 76, "1224": [76, 79], "1274": [76, 79], "1276": [76, 79], "1501": [76, 79], "1665": [76, 79], "1736": 76, "1776": 76, "1826": [76, 79], "2031": [76, 79], "2110": [76, 79], "2269": [76, 79], "2281": [76, 79], "2285": [76, 79], "2293": [76, 79], "2301": [76, 79, 90], "2304": [76, 79], "2306": [76, 79], "2308": [76, 79], "2326": [76, 79], "2370": [76, 79], "2388": [76, 79], "2394": [76, 79], "2398": [76, 79], "2403": 76, "2433": [76, 79], "2455": 76, "2459": 76, "2503": [76, 79], "2563": [76, 79], "2570": [76, 79], "2574": [76, 79], "2578": 76, "2593": [76, 79], "2604": 76, "2615": 76, "2639": [76, 79], "2643": [76, 79], "2651": [76, 79], "2666": 76, "2678": 76, "2681": [76, 79], "2721": [76, 79], "2728": [76, 79], "2731": [76, 82], "2736": [76, 79], "2747": [76, 79], "2758": 76, "2772": 76, "2787": [76, 79], "2806": [76, 79], "2816": [76, 79], "2827": 76, "2833": [76, 79], "2837": [76, 79], "2841": [76, 79], "2842": 76, "2843": [76, 79], "2851": [76, 79, 82], "2853": [76, 79], "2857": 76, "2866": [76, 79], "2871": [76, 79], "2896": [76, 79], "2903": [76, 79], "2907": 76, "2910": [76, 79], "2916": [76, 79], "2921": 76, "2930": [76, 79], "2933": 76, "2935": 76, "2937": [76, 79], "2941": [76, 79], "2943": [76, 79], "2945": [76, 79], "2947": [76, 79], "2956": [76, 77], "2958": [76, 79], "2960": [76, 79], "2978": [76, 79], "2985": 76, "3003": [76, 79], "3008": [76, 79], "3011": [76, 79], "3016": [76, 79], "3018": [76, 89], "3023": [76, 79], "3027": 76, "3031": [76, 79], "3033": [76, 79], "3042": [76, 79], "3046": [76, 79], "3051": [76, 79], "3071": 76, "3074": 76, "3080": [76, 79], "3084": [76, 79], "3088": [76, 79], "3090": [76, 79], "3092": [76, 79], "3094": [76, 79], "3099": 76, "3103": 76, "3109": 76, "3112": [76, 79], "3119": [76, 79], "3123": [76, 79], "3125": [76, 79], "3132": [76, 79], "3134": [76, 79], "3136": [76, 79], "3140": [76, 79], "3157": [76, 79], "3161": [76, 79], "3164": [76, 79, 82], "3167": 76, "3171": [76, 79], "3173": [76, 79], "3178": [76, 79], "3181": [76, 79], "3183": 76, "3185": [76, 79], "3188": [76, 79], "3192": [76, 79], "3196": [76, 79], "3201": 76, "3204": [76, 79], "3209": 76, "3212": [76, 79], "3214": [76, 79], "3216": [76, 79], "3222": [76, 79], "3224": [76, 79], "3226": [76, 79, 82], "3228": [76, 79], "3246": [76, 79], "3253": [76, 79], "3258": 76, "3263": [76, 79], "3270": 76, "3274": 76, "3277": [76, 79], "3280": 76, "3282": 76, "3284": [76, 79], "3288": [76, 82], "3294": 76, "3309": [76, 79], "3316": [76, 79], "3319": [76, 79], "3322": 76, "3327": 76, "3338": 76, "3341": [76, 79], "3344": [76, 79], "3347": [76, 79], "3350": [76, 79], "3352": [76, 79], "3354": [76, 79], "3366": [76, 79], "3369": [76, 79], "3372": 76, "3377": [76, 79], "3380": 76, "3395": 76, "3401": 76, "3405": 76, "3408": 76, "3411": [76, 79], "3426": [76, 79], "3430": [76, 79], "3438": [76, 79], "3441": [76, 79], "3445": [76, 79], "3448": 76, "3452": 76, "3456": 76, "3459": [76, 79], "3461": [76, 79], "3465": [76, 79], "3467": [76, 79], "3469": 76, "3471": 76, "3472": [76, 79], "3473": 76, "3488": [76, 79], "3491": [76, 79], "3495": [76, 79], "3498": [76, 79], "3514": [76, 79], "3520": [76, 79], "3523": 76, "3528": [76, 79], "3532": [76, 79], "3538": [76, 79], "3544": 76, "3546": [76, 79], "3548": [76, 79], "3550": [76, 79], "3555": [76, 79], "3559": [76, 79], "3577": [76, 79], "3581": [76, 79], "3584": [76, 79], "3589": [76, 79], "3600": [76, 79], "3604": [76, 79], "3607": [76, 79], "3611": [76, 77, 79], "3614": [76, 79], "3617": [76, 79], "3619": [76, 79], "3621": [76, 79], "3623": 76, "3630": 76, "3633": [76, 79], "3635": [76, 79], "3638": 76, "3642": 76, "3648": 76, "3651": [76, 79], "3655": [76, 79], "3658": 76, "3662": 76, "3666": [76, 79], "3669": [76, 79], "3672": [76, 79], "3674": [76, 79], "3686": 76, "3689": [76, 79], "3699": [76, 79], "3703": [76, 79], "3706": [76, 82], "3709": [76, 79], "3714": [76, 79], "3717": [76, 79], "3719": [76, 79], "3721": [76, 79], "3723": [76, 79], "3725": [76, 79], "3727": [76, 79], "3730": 76, "3732": 76, "3734": [76, 79], "3736": 76, "3742": 76, "3744": 76, "3749": [76, 79], "3751": [76, 79], "3756": [76, 79], "3759": [76, 79], "3761": [76, 79], "3763": [76, 79], "3767": [76, 79], "3769": 76, "3773": 76, "3783": [76, 79], "3789": [76, 79], "3793": [76, 79], "3796": [76, 79], "3800": [76, 79], "3803": 76, "3807": 76, "3810": [76, 79], "3811": [76, 79], "3812": [76, 79], "3814": [76, 79], "3815": 76, "3816": [76, 79], "3817": 76, "3818": [76, 79], "3820": [76, 79], "3822": [76, 79], "3835": [76, 79], "3838": [76, 79], "3840": [76, 79], "3842": [76, 79], "3844": [76, 79], "3853": 76, "3859": 76, "3861": 76, "3864": 76, "3872": [76, 79], "3876": 76, "3879": [76, 79], "3885": [76, 79], "3888": [76, 79], "3891": [76, 79], "3894": 76, "3896": 76, "3898": [76, 79], "3900": [76, 79], "3903": 76, "3905": 76, "3911": [76, 79], "3913": 76, "3920": 76, "3924": 76, "3927": [76, 79], "3929": [76, 79], "3936": [76, 79], "3939": 76, "3948": 76, "3954": 76, "3957": [76, 77, 79], "3969": [76, 79], "3973": [76, 79], "3976": [76, 79], "3979": 76, "3982": [76, 79], "3985": 76, "3988": [76, 79], "3990": [76, 79], "4002": [76, 79], "4006": 76, "4009": 76, "4012": [76, 79], "4016": [76, 79], "4018": [76, 79], "4020": [76, 79], "4033": [76, 79], "4036": 76, "4051": 76, "4055": 76, "4059": [76, 79], "4062": [76, 79], "4064": [76, 79, 82], "4066": [76, 79], "4068": [76, 79], "4070": [76, 79], "4078": 76, "4081": [76, 79], "4083": [76, 79], "4089": [76, 79], "4092": [76, 79], "4095": [76, 79], "4098": 76, "4100": 76, "4102": [76, 79], "4105": 76, "4107": [76, 79], "4109": [76, 79], "4114": 76, "4117": [76, 79], "4119": [76, 79], "4121": [76, 79], "4128": 76, "4132": 76, "4134": 76, "4137": [76, 79], "4139": [76, 79], "4142": [76, 79], "4145": 76, "4149": [76, 79], "4152": [76, 79], "4154": [76, 79], "4156": [76, 79], "4158": [76, 79], "4160": [76, 79], "4163": 76, "4165": [76, 79], "4167": [76, 79], "4169": [76, 79], "4171": [76, 79], "4181": [76, 79], "4184": [76, 79], "4190": [76, 79], "4195": 76, "4213": 76, "4216": 76, "4219": [76, 79], "4224": 76, "4233": [76, 79], "4237": [76, 79], "4240": 76, "4242": 76, "4245": [76, 79], "4250": 76, "4253": [76, 79], "4258": [76, 79], "4261": 76, "4263": [76, 79], "4271": 76, "4277": 76, "4280": 76, "4283": [76, 79], "4285": 76, "4287": 76, "4289": [76, 79], "4291": [76, 79], "4293": 76, "4298": [76, 79], "4300": [76, 79, 82], "4302": [76, 79], "4304": [76, 79], "4312": [76, 79], "4315": 76, "4323": [76, 79], "4326": [76, 79], "4329": 76, "4331": 76, "4333": [76, 79], "4336": 76, "4338": [76, 79], "4340": [76, 79], "4346": [76, 79], "4348": [76, 79], "4351": 76, "4353": 76, "4355": 76, "4357": 76, "4359": 76, "4361": [76, 79], "4363": 76, "4365": [76, 79], "4367": [76, 79], "4369": [76, 79], "4371": [76, 79], "4372": [76, 79], "4373": 76, "4374": [76, 79], "4375": 76, "4381": [76, 79], "4383": [76, 79], "4393": [76, 79], "4397": 76, "4400": [76, 79], "4403": 76, "4405": 76, "4407": 76, "4409": 76, "4412": [76, 79], "4420": [76, 79], "4426": [76, 79], "4428": [76, 79], "4430": 76, "4432": 76, "4436": 76, "4437": [76, 79], "4443": [76, 79], "4445": [76, 79], "4447": [76, 79], "4449": [76, 79], "4451": [76, 79], "4455": 76, "4457": 76, "4459": [76, 79], "4466": [76, 79], "4472": [76, 79], "4475": [76, 79], "4477": 76, "4479": 76, "4483": [76, 79], "4486": 76, "4491": [76, 79], "4494": 76, "4497": [76, 79], "4499": [76, 79], "4501": [76, 79], "4503": 76, "4505": 76, "4508": [76, 79], "4510": [76, 79], "4512": [76, 77, 79], "4522": [76, 79], "4525": 76, "4527": 76, "4529": [76, 79], "4531": [76, 79], "4543": [76, 79], "4552": [76, 79], "4555": [76, 79], "4558": 76, "4560": 76, "4562": 76, "4564": 76, "4566": 76, "4569": [76, 79], "4571": [76, 79], "4575": [76, 79], "4577": [76, 79], "4579": [76, 79], "4581": [76, 79], "4583": [76, 79], "4585": 76, "4586": [76, 79], "4593": [76, 79], "4595": [76, 79], "4599": [76, 79], "4601": [76, 79], "4603": [76, 79], "4606": [76, 79], "4608": [76, 79], "4610": [76, 79, 82], "4618": 76, "4621": [76, 79], "4627": [76, 79], "4629": [76, 79], "4633": [76, 79], "4635": [76, 79], "4639": [76, 79], "4641": [76, 79], "4646": [76, 79], "4648": 76, "4658": [76, 79], "4660": [76, 79], "4662": [76, 79], "4668": 76, "4672": 76, "4676": [76, 79], "4685": [76, 79], "4687": 76, "4692": 76, "4694": [76, 79], "4699": [76, 79], "4701": [76, 79], "4705": [76, 79], "4709": [76, 79], "4711": [76, 79], "4716": [76, 79], "4718": [76, 79], "4731": [76, 79], "4734": [76, 79], "4740": [76, 79], "4753": 76, "4755": 76, "4764": [76, 79], "4772": [76, 79], "4774": [76, 79], "4783": [76, 79], "4787": 76, "4791": [76, 77, 79], "4793": 76, "4804": [76, 79], "4825": [76, 82], "4829": [76, 79], "4839": 76, "4883": [76, 79], "4890": 76, "4895": [76, 79], "4910": [76, 79], "4935": [76, 79], "5010": [76, 79], "5015": [76, 79], "5020": [76, 79], "5023": [76, 82], "5037": 76, "5046": [76, 79], "5053": [76, 79], "5059": [76, 79], "5070": [76, 79], "5105": [76, 79], "5109": [76, 79], "5111": [76, 79], "5131": 76, "5135": 76, "5142": [76, 79], "5145": 76, "_minpack_pi": 77, "maxfev": 77, "2601": 77, "3141": 77, "3234": [77, 79], "3328": [77, 79], "3422": 77, "3518": [77, 79], "3704": 77, "3791": 77, "3873": [77, 79], "4050": [77, 79], "4140": [77, 79], "4231": [77, 79], "4324": 77, "4419": [77, 79], "4607": [77, 79], "4700": 77, "4884": [77, 79], "510797": 78, "bounds_warn": 79, "leastsq": 79, "warningmsg": 79, "unfeas": 79, "214": [79, 80], "154": [79, 80, 112], "198": [79, 80], "2319": 79, "2360": 79, "2798": 79, "2821": 79, "2955": 79, "2987": 79, "3066": 79, "3144": 79, "3225": 79, "3275": 79, "3361": 79, "3397": 79, "291": [79, 80], "3433": 79, "3496": 79, "3525": 79, "3574": 79, "3596": 79, "3616": 79, "3641": 79, "3660": 79, "3678": 79, "3695": 79, "3750": 79, "3766": 79, "3827": 79, "3843": 79, "3908": 79, "3926": 79, "3953": 79, "3971": 79, "3987": 79, "4001": 79, "4029": 79, "4047": 79, "4063": 79, "4077": 79, "4112": 79, "4127": 79, "4141": 79, "4170": 79, "4197": 79, "4210": 79, "4222": 79, "4234": 79, "4252": 79, "4269": 79, "4297": 79, "4310": 79, "4322": 79, "4342": 79, "4356": 79, "4382": 79, "4394": 79, "4410": 79, "4424": 79, "4450": 79, "4461": 79, "4484": 79, "4507": 79, "4521": 79, "4561": 79, "4598": 79, "4612": 79, "4625": 79, "4638": 79, "4714": 79, "4738": 79, "4760": 79, "4817": 79, "4917": 79, "5005": 79, "5029": 79, "5141": 79, "5152": 79, "5174": 79, "5185": 79, "5196": 79, "97863113e": 79, "69394176e": 79, "71052305e": 79, "_lsq": 79, "trf": 79, "scale_inv": 79, "min_step": 79, "147": [79, 80], "delta_new": 79, "744": 79, "780": 79, "782": 79, "790": 79, "792": 79, "1074": 79, "1144": 79, "1365": 79, "1553": 79, "1613": 79, "1617": 79, "1725": 79, "1838": 79, "1936": 79, "1991": 79, "2026": 79, "2050": 79, "2064": [79, 82], "2106": 79, "2166": 79, "2184": 79, "2189": 79, "2298": 79, "2336": 79, "2338": 79, "2354": 79, "2358": 79, "2378": 79, "2425": 79, "2439": 79, "2440": 79, "2445": 79, "2451": 79, "2458": 79, "2465": 79, "2469": 79, "2473": 79, "2494": 79, "2496": 79, "2498": 79, "2501": 79, "2505": 79, "2508": 79, "2514": 79, "2516": 79, "2538": 79, "2544": [79, 82], "2569": 79, "2571": 79, "2583": 79, "2585": 79, "2605": 79, "2608": [79, 82], "2610": 79, "2614": 79, "2620": 79, "2621": 79, "2623": 79, "2624": 79, "2641": 79, "2653": 79, "2661": 79, "2663": 79, "2682": 79, "2706": 79, "2714": 79, "2719": 79, "2732": 79, "2738": 79, "2743": 79, "2746": 79, "2748": 79, "2757": 79, "2761": 79, "2776": 79, "2777": 79, "2786": 79, "2791": [79, 82], "2793": 79, "2797": 79, "2801": 79, "2802": 79, "2807": 79, "2808": 79, "2812": 79, "2817": 79, "2818": 79, "2822": 79, "2826": 79, "2828": 79, "2831": 79, "2846": 79, "2848": 79, "2852": 79, "2856": 79, "2858": 79, "2861": 79, "2862": 79, "2867": 79, "2868": 79, "2872": 79, "2877": 79, "2878": 79, "2881": 79, "2882": 79, "2883": 79, "2886": 79, "2887": 79, "2888": 79, "2892": 79, "2893": 79, "2897": 79, "2898": 79, "2902": 79, "2908": 79, "2912": 79, "2918": 79, "2920": 79, "2922": 79, "2926": 79, "2928": 79, "2931": 79, "2932": 79, "2940": 79, "2942": 79, "2951": [79, 89], "2953": 79, "2957": 79, "2961": 79, "2962": 79, "2966": 79, "2967": 79, "2968": 79, "2970": 79, "2972": 79, "2976": 79, "2980": 79, "2982": 79, "2986": 79, "2988": 79, "2992": 79, "2993": 79, "2996": 79, "2997": 79, "3002": 79, "3012": 79, "3013": 79, "3017": 79, "3021": 79, "3026": 79, "3028": 79, "3032": 79, "3036": 79, "3037": 79, "3038": 79, "3041": 79, "3043": 79, "3048": 79, "3053": 79, "3059": 79, "3063": 79, "3064": 79, "3068": 79, "3073": 79, "3079": 79, "3089": 79, "3093": 79, "3095": 79, "3097": 79, "3100": 79, "3102": 79, "3104": 79, "3110": 79, "3127": 79, "3128": 79, "3129": 79, "3130": 79, "3131": 79, "3133": 79, "3138": 79, "3142": 79, "3143": 79, "3145": 79, "3147": 79, "3148": 79, "3149": 79, "3151": 79, "3152": 79, "3153": 79, "3155": 79, "3156": 79, "3158": 79, "3159": 79, "3163": 79, "3165": 79, "3166": 79, "3168": 79, "3169": 79, "3170": 79, "3172": 79, "3176": 79, "3180": 79, "3182": 79, "3184": 79, "3186": 79, "3190": 79, "3191": 79, "3194": 79, "3198": 79, "3200": 79, "3202": 79, "3206": 79, "3208": 79, "3210": 79, "3218": 79, "3220": 79, "3229": 79, "3231": 79, "3233": 79, "3235": 79, "3236": 79, "3238": 79, "3239": 79, "3241": 79, "3242": 79, "3243": 79, "3244": 79, "3245": 79, "3247": 79, "3249": 79, "3250": 79, "3251": 79, "3252": 79, "3254": 79, "3255": 79, "3256": 79, "3257": 79, "3259": 79, "3260": 79, "3262": 79, "3265": 79, "3267": 79, "3269": 79, "3273": 79, "3279": 79, "3281": 79, "3283": 79, "3285": 79, "3287": 79, "3289": 79, "3291": 79, "3293": 79, "3295": 79, "3297": 79, "3301": 79, "3303": 79, "3304": 79, "3306": 79, "3308": 79, "3310": 79, "3312": 79, "3314": 79, "3317": 79, "3321": 79, "3323": 79, "3325": 79, "3326": 79, "3329": 79, "3331": 79, "3334": 79, "3335": 79, "3337": 79, "3339": 79, "3343": 79, "3345": 79, "3346": 79, "3349": [79, 82], "3355": 79, "3356": 79, "3358": 79, "3360": 79, "3362": 79, "3364": 79, "3368": 79, "3371": 79, "3373": 79, "3375": 79, "3379": 79, "3381": 79, "3386": 79, "3391": 79, "3394": 79, "3396": 79, "3398": 79, "3400": 79, "3402": 79, "3404": 79, "3406": 79, "3407": 79, "3409": 79, "3413": 79, "3415": 79, "3417": 79, "3421": 79, "3423": 79, "3425": 79, "3427": 79, "3428": 79, "3431": 79, "3432": 79, "3434": 79, "3437": 79, "3439": 79, "3440": 79, "3443": 79, "3447": 79, "3449": 79, "3451": 79, "3453": 79, "3455": 79, "3457": 79, "3462": 79, "3464": 79, "3466": 79, "3468": 79, "3470": [79, 82], "3474": 79, "3475": 79, "3476": 79, "3477": 79, "3478": 79, "3480": 79, "3481": 79, "3482": 79, "3483": 79, "3484": 79, "3485": 79, "3486": 79, "3490": 79, "3492": 79, "3493": 79, "3494": 79, "3497": 79, "3499": 79, "3501": 79, "3502": 79, "3504": 79, "3505": 79, "3506": 79, "3507": 79, "3508": 79, "3509": 79, "3511": 79, "3513": 79, "3516": 79, "3519": 79, "3521": 79, "3522": 79, "3524": 79, "3527": 79, "3530": 79, "3531": 79, "3533": 79, "3534": 79, "3537": 79, "3541": 79, "3542": 79, "3543": 79, "3545": 79, "3554": 79, "3556": 79, "3557": 79, "3561": 79, "3562": 79, "3563": 79, "3564": 79, "3566": 79, "3568": 79, "3570": 79, "3571": 79, "3573": 79, "3575": 79, "3576": 79, "3578": 79, "3579": 79, "3580": 79, "3582": 79, "3583": 79, "3586": 79, "3587": 79, "3588": [79, 82], "3591": 79, "3593": 79, "3594": 79, "3595": 79, "3598": 79, "3601": 79, "3603": 79, "3605": 79, "3609": 79, "3613": 79, "3615": 79, "3618": 79, "3620": 79, "3622": 79, "3624": 79, "3625": 79, "3627": 79, "3629": 79, "3631": 79, "3637": 79, "3639": 79, "3643": 79, "3645": 79, "3647": [79, 82], "3649": 79, "3653": 79, "3657": 79, "3659": 79, "3661": 79, "3663": 79, "3664": 79, "3667": 79, "3668": 79, "3670": 79, "3671": 79, "3673": 79, "3675": 79, "3676": 79, "3677": 79, "3679": 79, "3681": 79, "3683": 79, "3685": 79, "3687": 79, "3691": 79, "3693": 79, "3696": 79, "3697": 79, "3698": 79, "3700": 79, "3701": 79, "3705": 79, "3707": 79, "3711": 79, "3713": 79, "3715": 79, "3716": 79, "3718": 79, "3729": 79, "3731": 79, "3733": 79, "3735": 79, "3737": 79, "3739": 79, "3741": 79, "3743": 79, "3745": 79, "3746": 79, "3747": 79, "3748": 79, "3752": 79, "3754": 79, "3755": 79, "3757": 79, "3758": 79, "3760": 79, "3762": 79, "3764": 79, "3765": [79, 82], "3768": 79, "3770": 79, "3772": 79, "3774": 79, "3775": 79, "3776": 79, "3777": 79, "3778": 79, "3780": 79, "3781": 79, "3785": 79, "3786": 79, "3787": 79, "3790": 79, "3792": 79, "3794": 79, "3795": 79, "3797": 79, "3798": 79, "3802": 79, "3804": 79, "3808": 79, "3821": 79, "3823": 79, "3824": 79, "3825": [79, 82], "3829": 79, "3830": 79, "3832": 79, "3834": 79, "3836": 79, "3837": 79, "3839": 79, "3841": 79, "3846": 79, "3848": 79, "3852": 79, "3854": 79, "3855": 79, "3856": 79, "3857": 79, "3858": 79, "3860": 79, "3862": 79, "3863": 79, "3865": 79, "3866": 79, "3868": 79, "3869": 79, "3871": 79, "3875": 79, "3877": 79, "3881": 79, "3883": 79, "3884": [79, 82], "3886": 79, "3887": 79, "3889": 79, "3890": 79, "3893": 79, "3895": 79, "3897": 79, "3899": 79, "3902": 79, "3904": 79, "3906": 79, "3910": 79, "3912": 79, "3914": 79, "3915": 79, "3916": 79, "3917": 79, "3918": 79, "3919": 79, "3921": 79, "3923": 79, "3925": 79, "3931": 79, "3935": 79, "3937": 79, "3938": 79, "3940": 79, "3942": 79, "3943": 79, "3945": [79, 82], "3947": 79, "3949": 79, "3951": 79, "3955": 79, "3959": 79, "3961": 79, "3962": 79, "3964": 79, "3965": 79, "3966": 79, "3967": 79, "3972": 79, "3974": 79, "3978": 79, "3980": 79, "3984": 79, "3986": 79, "3989": 79, "3992": 79, "3994": 79, "3995": 79, "3996": 79, "3997": 79, "3998": 79, "3999": 79, "4003": 79, "4004": 79, "4005": [79, 82], "4007": 79, "4010": 79, "4014": 79, "4015": 79, "4022": 79, "4023": 79, "4024": 79, "4025": 79, "4027": 79, "4028": 79, "4031": 79, "4032": 79, "4035": 79, "4038": 79, "4040": 79, "4041": 79, "4043": 79, "4044": 79, "4046": 79, "4048": 79, "4052": 79, "4054": 79, "4056": 79, "4057": 79, "4058": 79, "4067": 79, "4069": 79, "4071": 79, "4072": 79, "4074": 79, "4075": 79, "4076": 79, "4079": 79, "4085": 79, "4087": 79, "4091": 79, "4093": 79, "4094": 79, "4097": 79, "4099": 79, "4101": 79, "4103": 79, "4104": 79, "4106": 79, "4108": 79, "4110": 79, "4111": 79, "4113": 79, "4115": 79, "4125": 79, "4129": 79, "4131": 79, "4133": 79, "4135": 79, "4143": 79, "4144": 79, "4146": 79, "4147": 79, "4150": 79, "4151": 79, "4153": 79, "4162": 79, "4173": 79, "4174": 79, "4175": 79, "4176": 79, "4178": 79, "4180": 79, "4183": 79, "4185": 79, "4186": 79, "4189": 79, "4192": 79, "4196": 79, "4198": 79, "4200": 79, "4202": 79, "4203": 79, "4204": 79, "4205": 79, "4207": 79, "4208": 79, "4211": 79, "4212": 79, "4214": 79, "4215": 79, "4217": 79, "4218": 79, "4220": 79, "4223": 79, "4225": 79, "4227": 79, "4229": 79, "4235": 79, "4239": 79, "4241": [79, 82], "4243": 79, "4247": 79, "4249": 79, "4251": 79, "4255": 79, "4256": 79, "4260": 79, "4262": 79, "4264": 79, "4266": 79, "4272": 79, "4274": 79, "4276": 79, "4278": 79, "4279": 79, "4281": 79, "4282": 79, "4284": 79, "4286": 79, "4288": 79, "4290": 79, "4292": 79, "4294": 79, "4296": 79, "4299": 79, "4301": 79, "4303": 79, "4305": 79, "4306": 79, "4307": 79, "4308": 79, "4311": 79, "4314": 79, "4316": 79, "4318": 79, "4319": 79, "4321": 79, "4325": 79, "4327": 79, "4328": 79, "4330": 79, "4334": 79, "4335": 79, "4339": 79, "4341": 79, "4343": 79, "4344": 79, "4345": 79, "4347": 79, "4350": 79, "4352": 79, "4354": 79, "4358": 79, "4360": [79, 82], "4362": 79, "4364": 79, "4366": 79, "4368": 79, "4370": 79, "4376": 79, "4377": 79, "4378": 79, "4379": 79, "4385": 79, "4386": 79, "4387": 79, "4388": 79, "4389": 79, "4390": 79, "4391": 79, "4395": 79, "4396": 79, "4398": 79, "4402": 79, "4404": 79, "4406": 79, "4408": 79, "4411": 79, "4413": 79, "4415": 79, "4417": 79, "4418": 79, "4421": 79, "4425": 79, "4427": 79, "4429": 79, "4431": 79, "4433": 79, "4435": 79, "4439": 79, "4446": 79, "4448": 79, "4452": 79, "4454": 79, "4456": 79, "4458": 79, "4462": 79, "4463": 79, "4464": 79, "4470": 79, "4474": 79, "4476": 79, "4481": 79, "4487": 79, "4493": 79, "4495": 79, "4500": 79, "4502": 79, "4504": 79, "4506": 79, "4514": 79, "4516": 79, "4518": 79, "4520": 79, "4524": 79, "4526": 79, "4528": 79, "4530": 79, "4532": 79, "4533": 79, "4534": 79, "4536": 79, "4537": 79, "4539": 79, "4541": 79, "4544": 79, "4545": 79, "4546": [79, 82], "4547": 79, "4549": 79, "4550": 79, "4553": 79, "4554": 79, "4557": 79, "4559": 79, "4563": 79, "4565": 79, "4567": 79, "4568": 79, "4572": 79, "4576": 79, "4580": 79, "4582": 79, "4584": 79, "4588": 79, "4590": 79, "4592": 79, "4605": 79, "4609": 79, "4613": 79, "4614": 79, "4616": 79, "4617": 79, "4619": 79, "4645": 79, "4649": 79, "4651": 79, "4653": 79, "4654": 79, "4655": 79, "4656": 79, "4657": 79, "4659": 79, "4661": 79, "4663": 79, "4667": 79, "4673": 79, "4679": 79, "4682": 79, "4683": 79, "4693": 79, "4695": 79, "4696": 79, "4706": 79, "4708": 79, "4710": 79, "4721": 79, "4729": 79, "4735": 79, "4736": 79, "4739": 79, "4741": 79, "4746": 79, "4748": 79, "4750": 79, "4754": 79, "4756": 79, "4762": 79, "4768": 79, "4779": 79, "4790": 79, "4795": 79, "4802": 79, "4808": 79, "4810": 79, "4814": 79, "4818": 79, "4822": 79, "4824": 79, "4842": 79, "4844": 79, "4848": 79, "4855": 79, "4856": 79, "4867": 79, "4878": 79, "4893": [79, 82], "4894": 79, "4898": 79, "4902": 79, "4919": 79, "4939": 79, "4948": 79, "4962": 79, "4970": 79, "4971": 79, "4985": 79, "5018": 79, "5021": 79, "5022": 79, "5031": 79, "5032": 79, "5034": 79, "5035": 79, "5038": 79, "5051": 79, "5055": 79, "5061": 79, "5062": 79, "5077": 79, "5080": 79, "5081": 79, "5091": 79, "5093": 79, "5094": 79, "5095": 79, "5102": 79, "5104": 79, "5113": 79, "5114": 79, "5117": 79, "5118": 79, "5120": 79, "5121": 79, "5122": 79, "5123": 79, "5124": 79, "5126": 79, "5128": 79, "5132": 79, "5134": 79, "5136": 79, "5138": 79, "5146": 79, "5147": 79, "5149": 79, "5153": 79, "5154": 79, "5155": 79, "5156": 79, "5157": 79, "5159": 79, "5161": 79, "5165": 79, "5166": 79, "5167": 79, "5168": 79, "5169": 79, "5170": 79, "5171": 79, "5172": 79, "5173": 79, "5175": 79, "5176": 79, "5177": 79, "5179": 79, "5180": 79, "5184": 79, "5186": 79, "5188": 79, "5189": 79, "5190": 79, "5191": 79, "5192": 79, "5193": 79, "5194": 79, "5197": 79, "5198": 79, "5199": 79, "15609783e": 79, "09732577e": 79, "86659301e": 79, "19170291e": 79, "295": 80, "thetax": [], "msg_bval": [], "56692320e": [], "46085143e": [], "62131485e": [], "34276461e": [], "52534556e": [], "71997238e": [], "03193240e": [], "83911565e": [], "84828549e": [], "24057454e": [], "48173768e": [], "33583578e": [], "54048426e": [], "19247972e": [], "03434085e": [], "70814058e": [], "99497542e": [], "66589967e": [], "37647490e": [], "22844899e": [], "02876747e": [], "64284096e": [], "90155949e": [], "05450074e": [], "52760292e": [], "33298612e": [], "19461602e": [], "31346774e": [], "09567957e": [], "48548376e": [], "2448": [], "2613": [], "2905": [], "3124": [], "3137": [], "3160": [], "3195": [], "3221": [], "3240": [], "3290": [], "3307": [], "3311": [], "3315": [], "3330": [], "3367": [], "3376": [], "3412": [], "3487": [], "3510": [], "3526": [], "3551": [], "3585": [], "3597": [], "3606": [], "3608": [], "3610": [], "3628": [], "3634": [], "3688": [], "3708": [], "3720": [], "3779": [], "3874": [], "3880": [], "3932": [], "3944": [], "3983": [], "3993": [], "4008": [], "4045": [], "4053": [], "4082": [], "4084": [], "4090": [], "4096": [], "4118": [], "4159": [], "4166": [], "4172": [], "4177": [], "4179": [], "4191": [], "4221": [], "4248": [], "4257": [], "4273": [], "4275": [], "4380": [], "4384": [], "4465": [], "4482": [], "4542": [], "4551": [], "4578": [], "4602": [], "4624": [], "5115": [], "5143": [], "5164": [], "5204": [], "5215": [], "5220": [], "5224": [], "5228": [], "5231": [], "5234": [], "5237": [], "5240": [], "5242": [], "5247": [], "5250": [], "5253": [], "5256": [], "5259": [], "5261": [], "5263": [], "5265": [], "5277": [], "5289": [], "5296": [], "5309": [], "5313": [], "5317": [], "5321": [], "5324": [], "5327": [], "5330": [], "5333": [], "5336": [], "5339": [], "5342": [], "5344": [], "5346": [], "5348": [], "5350": [], "5352": [], "5353": [], "5354": [], "5356": [], "5360": [], "5370": [], "5382": [], "5390": [], "5397": [], "5402": [], "5406": [], "5410": [], "5415": [], "5419": [], "5422": [], "5428": [], "5431": [], "5434": [], "5437": [], "5439": [], "5441": [], "5443": [], "5445": [], "5447": [], "5449": [], "5451": [], "5453": [], "5455": [], "5462": [], "5475": [], "5486": [], "5493": [], "5499": [], "5504": [], "5508": [], "5512": [], "5516": [], "5519": [], "5522": 82, "5525": [], "5528": [], "5531": [], "5534": [], "5537": [], "5539": [], "5541": [], "5543": [], "5547": [], "5549": [], "5551": [], "5559": [], "5572": [], "5583": 82, "5591": [], "5597": [], "5602": [], "5608": [], "5612": [], "5619": [], "5622": [], "5625": [], "5628": [], "5630": [], "5632": [], "5634": [], "5636": [], "5638": [], "5640": [], "5642": [], "5644": [], "5648": [], "5661": [], "5674": [], "5682": [], "5688": [], "5693": [], "5698": [], "5702": 82, "5706": [], "5709": [], "5712": [], "5715": [], "5720": [], "5722": [], "5724": [], "5727": [], "5729": [], "5731": [], "5733": [], "5735": [], "5738": [], "5740": [], "5746": [], "5759": [], "5772": [], "5780": [], "5786": [], "5791": [], "5795": [], "5799": [], "5802": [], "5805": [], "5807": [], "5809": [], "5811": [], "5813": [], "5815": [], "5818": [], "5821": [], "5824": [], "5826": [], "5828": [], "5830": [], "5832": [], "5835": [], "5844": [], "5857": [], "5870": [], "5879": [], "5886": [], "5891": [], "5895": [], "5899": [], "5902": [], "5905": [], "5908": [], "5912": [], "5916": [], "5919": [], "5922": [], "5925": [], "5928": [], "5931": [], "5941": [], "5954": [], "5967": [], "5976": [], "5983": [], "5988": [], "5992": [], "5996": [], "5999": [], "6002": [], "6005": 82, "6010": [], "6015": [], "6019": [], "6022": [], "6025": [], "6028": [], "6040": [], "6053": [], "6065": 82, "6074": [], "6081": [], "6086": [], "6090": [], "6094": [], "6098": [], "6102": [], "6106": [], "6110": [], "6114": [], "6117": [], "6120": [], "6123": 82, "6125": [], "6138": [], "6151": [], "6162": [], "6170": [], "6176": [], "6181": 82, "6185": [], "6189": [], "6194": [], "6198": [], "6202": [], "6206": [], "6209": [], "6212": [], "6215": [], "6218": [], "6228": [], "6241": [], "6254": [], "6263": [], "6271": [], "6277": [], "6282": [], "6287": [], "6292": [], "6296": [], "6300": [], "6304": [], "6307": [], "6310": [], "6315": [], "6328": [], "6354": [], "6364": [], "6372": [], "6378": [], "6383": [], "6388": [], "6392": [], "6396": [], "6399": [], "6402": [], "6404": [], "6406": [], "6414": [], "6440": [], "6453": [], "6463": [], "6471": [], "6477": [], "6482": [], "6486": [], "6490": [], "6493": [], "6499": [], "6503": [], "6513": [], "6526": [], "6539": [], "6551": [], "6561": [], "6569": [], "6575": [], "6581": [], "6586": [], "6590": [], "6594": [], "6598": [], "6605": [], "6618": [], "6631": [], "6644": [], "6654": [], "6662": [], "6668": [], "6675": [], "6681": [], "6686": [], "6691": [], "6701": [], "6714": [], "6727": [], "6740": [], "6751": [], "6761": [], "6768": [], "6774": [], "6780": [], "6785": [], "6789": [], "6802": [], "6815": [], "6841": [], "6852": 82, "6860": [], "6866": [], "6872": [], "6877": [], "6882": [], "6895": [], "6908": [], "6921": [], "6934": [], "6945": [], "6956": [], "6964": [], "6971": [], "6984": [], "6997": [], "7010": [], "7023": [], "7036": [], "7048": [], "7058": [], "7067": [], "7080": [], "7093": [], "7106": [], "7119": [], "7132": [], "7144": [], "7155": [], "7168": [], "7181": [], "7194": [], "7207": [], "7220": [], "7233": [], "7246": [], "7259": [], "7272": [], "7285": [], "7298": [], "7311": [], "7324": [], "7337": [], "7350": [], "7363": [], "7389": [], "7402": [], "7415": [], "7441": [], "7454": [], "7467": [], "7480": [], "7493": [], "7506": [], "7519": [], "7532": [], "7545": [], "7558": [], "7571": [], "7584": [], "7597": [], "7610": [], "7623": [], "7636": [], "7649": [], "7662": [], "7675": [], "7688": [], "7701": [], "7714": [], "7727": [], "7740": [], "7753": [], "7766": [], "7779": [], "7792": [], "7805": [], "7818": [], "7831": [], "7844": [], "7857": [], "7870": [], "7883": [], "7896": [], "7909": [], "7922": [], "7935": [], "7948": [], "7961": 82, "7974": [], "7987": [], "8000": [], "8013": [], "8026": [], "8039": [], "8052": [], "8065": [], "8078": [], "8091": [], "8104": [], "8117": [], "8130": [], "8143": [], "8156": [], "8182": [], "8195": [], "8208": [], "8221": [], "8234": [], "8247": [], "8260": [], "8273": [], "8286": [], "8299": [], "8312": [], "8325": [], "8338": [], "8351": [], "8364": [], "8377": [], "8390": [], "8403": [], "8416": [], "8429": [], "8442": [], "8455": [], "8468": [], "8481": [], "8494": [], "8507": [], "8520": [], "8533": [], "8546": [], "8559": [], "8572": [], "8585": [], "8598": [], "8611": [], "8624": [], "8637": [], "8650": [], "8663": [], "8676": [], "8689": [], "8702": [], "8715": [], "8728": [], "8741": [], "8754": [], "8767": 82, "8780": [], "8793": [], "8806": [], "8819": [], "8832": [], "8845": [], "8858": [], "8871": [], "8884": [], "8897": [], "8910": [], "8923": [], "8936": [], "8949": [], "8962": [], "8988": [], "9001": [], "9014": [], "9027": [], "9040": [], "9053": [], "9066": [], "9079": [], "9092": [], "9105": [], "9118": [], "9131": 82, "9144": [], "9157": [], "9170": [], "9183": [], "9196": [], "9209": [], "07825714e": [], "48320688e": [], "86296574e": [], "78587170e": [], "13735690e": [], "90413144e": [], "91231786e": [], "78762352e": [], "98478870e": [], "62344531e": [], "17122629e": [], "22765485e": [], "38664442e": [], "01082781e": [], "16166084e": [], "06773266e": [], "41480505e": [], "65267032e": [], "38412226e": [], "35372242e": [], "67682855e": [], "33196727e": [], "37010673e": [], "26876858e": [], "69441781e": [], "45155684e": [], "79924130e": [], "77920204e": [], "30414334e": [], "04371319e": [], "12873011e": [], "58197594e": [], "04074927e": [], "23541599e": [], "53194270e": [], "99136992e": [], "66444502e": [], "10730689e": [], "39150785e": [], "84296018e": [], "67754591e": [], "53366214e": [], "37294028e": [], "11570872e": [], "04505730e": [], "97962172e": [], "41602185e": [], "40733046e": [], "15893785e": [], "28407355e": [], "98608252e": [], "42820604e": [], "33807225e": [], "95418963e": [], "73769172e": [], "12470030e": [], "61559671e": [], "29336264e": [], "62753571e": [], "59015145e": [], "00676680e": [], "11111760e": [], "20283855e": [], "52107559e": [], "07375854e": [], "29958882e": [], "87700865e": [], "55472608e": [], "42076050e": [], "96028375e": [], "09408894e": [], "07250667e": [], "60013139e": [], "08099370e": [], "87255730e": [], "04596989e": [], "93302298e": [], "46639760e": [], "88176082e": [], "67566968e": [], "08017508e": [], "69246541e": [], "03389847e": [], "06214708e": [], "97455817e": [], "01074331e": [], "83107191e": [], "05432765e": [], "29875192e": [], "50743469e": [], "69107948e": [], "72161258e": [], "71912972e": [], "02315620e": [], "61453459e": [], "72171800e": [], "70710508e": [], "20540576e": [], "80871371e": [], "74810860e": [], "37481277e": [], "04012366e": [], "76952950e": [], "88628982e": [], "98581560e": [], "11698750e": [], "16370265e": [], "02031598e": [], "15078161e": [], "34125626e": [], "57636814e": [], "87057751e": [], "08372530e": [], "73156134e": [], "23466158e": [], "42254193e": [], "16393361e": [], "97176333e": [], "89462386e": [], "01111645e": [], "44506317e": [], "44825417e": [], "17301579e": [], "25120845e": [], "88156543e": [], "43064774e": [], "60591938e": [], "65014580e": [], "62778847e": [], "22901817e": [], "12828243e": [], "80152378e": [], "11872383e": [], "74946717e": [], "21786048e": [], "36295168e": [], "99807838e": [], "15505101e": [], "70146711e": [], "41700758e": [], "26276630e": [], "32720643e": [], "28680221e": [], "38750248e": [], "78389703e": [], "13442956e": [], "47154094e": [], "56322265e": [], "83758020e": [], "77165982e": [], "97217733e": [], "26284263e": [], "84276583e": [], "62880666e": [], "03669802e": [], "04120838e": [], "54014665e": [], "45846373e": [], "01404115e": [], "09567480e": [], "53773308e": [], "48612768e": [], "38566743e": [], "18646811e": [], "19626835e": [], "43518929e": [], "50190348e": [], "42733094e": [], "41860290e": [], "33033575e": [], "62874065e": [], "10453134e": [], "68331457e": [], "71118430e": [], "43995453e": [], "39594177e": [], "78945359e": [], "73880579e": [], "33509989e": [], "02294699e": [], "02849534e": [], "29218291e": [], "81699502e": [], "01333399e": [], "40521983e": [], "21620846e": [], "74911001e": [], "81117988e": [], "05512944e": [], "39219383e": [], "33589970e": [], "94852606e": [], "97354508e": [], "70845545e": [], "36840692e": [], "44512043e": [], "18406153e": [], "12789423e": [], "50548952e": [], "25164556e": [], "07545195e": [], "44507819e": [], "95032378e": [], "10790142e": [], "53192098e": [], "05477408e": [], "42565078e": [], "28451785e": [], "63248989e": [], "45732303e": [], "24078865e": [], "35111453e": [], "89079865e": [], "81911446e": [], "00037849e": [], "98130298e": [], "64082879e": [], "95458303e": [], "06277180e": [], "48686190e": [], "63461534e": [], "62134858e": [], "61983453e": [], "00689115e": [], "80014854e": [], "02479403e": [], "63986776e": [], "19701223e": [], "12828761e": [], "04013277e": [], "31057955e": [], "02732914e": [], "00853583e": [], "63258297e": [], "32776999e": [], "45073241e": [], "48253675e": [], "24362168e": [], "11416894e": [], "55594227e": [], "66211961e": [], "66886607e": [], "88707047e": [], "61079769e": [], "48963962e": [], "50954495e": [], "06762823e": [], "62260204e": [], "05394052e": [], "57027962e": [], "19017156e": [], "53315878e": [], "93977986e": [], "00634246e": [], "04843097e": [], "22854463e": [], "29006140e": [], "35060517e": [], "25226224e": [], "55946751e": [], "97190232e": [], "38455423e": [], "30405431e": [], "29341975e": [], "74269074e": [], "73567857e": [], "98495256e": [], "77695478e": [], "76407017e": [], "37220435e": [], "90821002e": [], "25568377e": [], "27628010e": [], "25484024e": [], "30601546e": [], "83352609e": [], "39557189e": [], "03764614e": [], "02919100e": [], "60554893e": [], "71033953e": [], "54295431e": [], "17083871e": [], "58058228e": [], "33512713e": [], "51400640e": [], "60319120e": [], "99770887e": [], "82553416e": [], "44161611e": [], "13505427e": [], "07856758e": [], "09364381e": [], "87529083e": [], "75690864e": [], "18739736e": [], "57024130e": [], "79057318e": [], "09783747e": [], "45253011e": [], "85215762e": [], "51340946e": [], "20780614e": [], "84502352e": [], "66357823e": [], "13090933e": [], "16813681e": [], "43923789e": [], "49644586e": [], "33582602e": [], "62862393e": [], "59266012e": [], "14100138e": [], "27178993e": [], "17189219e": [], "94850871e": [], "09268151e": [], "61374828e": [], "80829657e": [], "55534409e": [], "38498453e": [], "84362522e": [], "10932934e": [], "72180943e": [], "07894493e": [], "27947146e": [], "26764599e": [], "83527206e": [], "54044597e": [], "66744918e": [], "42317391e": [], "12562647e": [], "83840281e": [], "57695119e": [], "48376096e": [], "04471758e": [], "09779280e": [], "60482926e": [], "72692458e": [], "45709255e": [], "54483280e": [], "70784301e": [], "52923050e": [], "17282803e": [], "58778170e": [], "10633216e": [], "06985422e": [], "70202356e": [], "25659716e": [], "15013999e": [], "35414498e": [], "99825768e": [], "17744343e": [], "64915308e": [], "12219560e": [], "90813033e": [], "60830121e": [], "51522181e": [], "26438843e": [], "78209872e": [], "35279596e": [], "46778239e": [], "2911": 82, "2975": 82, "3410": 82, "4182": 82, "5276": 82, "5338": 82, "5398": 82, "5458": 82, "5643": 82, "5764": 82, "5825": 82, "5885": 82, "5945": 82, "6243": 82, "6303": 82, "6366": 82, "6428": 82, "6489": 82, "6548": 82, "6610": 82, "6672": 82, "6732": 82, "6792": 82, "6913": 82, "6976": 82, "7037": 82, "7099": 82, "7159": 82, "7219": 82, "7283": 82, "7345": 82, "7408": 82, "7533": 82, "7595": 82, "7656": 82, "7715": 82, "7774": 82, "7835": 82, "7894": 82, "8035": 82, "8097": 82, "8158": 82, "8219": 82, "8278": 82, "8342": 82, "8402": 82, "8463": 82, "8523": 82, "8583": 82, "8643": 82, "8703": 82, "8828": 82, "8890": 82, "8950": 82, "9011": 82, "9071": 82, "9191": 82, "9253": 82, "9313": 82, "9372": 82, "9431": 82, "9604": 82, "9666": 82, "9725": 82, "9908": 82, "9968": 82, "10028": 82, "10090": 82, "10151": 82, "10216": 82, "10278": 82, "10338": 82, "10398": 82, "10457": 82, "10517": 82, "10576": 82, "10690": 82, "10746": 82, "10804": 82, "10864": 82, "10926": 82, "10985": 82, "11063": 82, "11142": 82, "11210": 82, "11278": 82, "11343": 82, "11408": 82, "11535": 82, "11599": 82, "11661": 82, "11722": 82, "11782": 82, "11841": 82, "11900": 82, "11960": 82, "12021": 82, "12083": 82, "12146": 82, "12208": 82, "12269": 82, "12390": 82, "12451": 82, "12513": 82, "12572": 82, "12631": 82, "12688": 82, "12753": 82, "12814": 82, "12996": 82, "13056": 82, "13116": 82, "13240": 82, "13301": 82, "13363": 82, "13425": 82, "13485": 82, "13545": 82, "13606": 82, "13666": 82, "13725": 82, "13787": 82, "13847": 82, "13906": 82, "13968": 82, "14088": 82, "14145": 82, "14202": 82, "14257": 82, "14319": 82, "14386": 82, "14449": 82, "14510": 82, "14571": 82, "14637": 82, "14699": 82, "14760": 82, "14881": 82, "14998": 82, "15059": 82, "15119": 82, "15180": 82, "15240": 82, "15300": 82, "15360": 82, "15418": 82, "15476": 82, "15539": 82, "15597": 82, "15658": 82, "15720": 82, "15780": 82, "15840": 82, "15901": 82, "15960": 82, "16021": 82, "16082": 82, "16142": 82, "16202": 82, "16261": 82, "16320": 82, "16378": 82, "16436": 82, "16496": 82, "16554": 82, "16610": 82, "16670": 82, "16729": 82, "16790": 82, "16852": 82, "16914": 82, "16977": 82, "17038": 82, "17098": 82, "17157": 82, "17223": 82, "17288": 82, "17352": 82, "17428": 82, "17506": 82, "17576": 82, "17645": 82, "17710": 82, "17774": 82, "17837": 82, "17899": 82, "17960": 82, "18021": 82, "18082": 82, "18143": 82, "18203": 82, "18263": 82, "18322": 82, "18382": 82, "18440": 82, "18498": 82, "18558": 82, "18623": 82, "18682": 82, "18741": 82, "18801": 82, "18862": 82, "18925": 82, "18985": 82, "19047": 82, "19109": 82, "19170": 82, "19231": 82, "19292": 82, "19353": 82, "19414": 82, "19473": 82, "19531": 82, "19588": 82, "19647": 82, "19703": 82, "19764": 82, "19827": 82, "19888": 82, "19947": 82, "20005": 82, "20065": 82, "20124": 82, "20186": 82, "20247": 82, "20309": 82, "20369": 82, "20429": 82, "20489": 82, "20561": 82, "20642": 82, "20716": 82, "20786": 82, "20854": 82, "20918": 82, "20980": 82, "21041": 82, "21103": 82, "21164": 82, "21225": 82, "21285": 82, "21348": 82, "21408": 82, "21523": 82, "21584": 82, "21642": 82, "21699": 82, "21760": 82, "21822": 82, "21885": 82, "21945": 82, "22004": 82, "22062": 82, "22120": 82, "22181": 82, "22240": 82, "22299": 82, "22353": 82, "22414": 82, "22469": 82, "22529": 82, "22586": 82, "22648": 82, "22713": 82, "22773": 82, "22833": 82, "22893": 82, "22958": 82, "23020": 82, "23083": 82, "23145": 82, "23206": 82, "23266": 82, "23326": 82, "23386": 82, "23446": 82, "23505": 82, "23563": 82, "23621": 82, "23678": 82, "23756": 82, "23825": 82, "23888": 82, "23951": 82, "24013": 82, "24074": 82, "24139": 82, "24200": 82, "24260": 82, "24321": 82, "24381": 82, "24439": 82, "24501": 82, "24560": 82, "24616": 82, "24678": 82, "24737": 82, "24795": 82, "24860": 82, "24920": 82, "24981": 82, "25043": 82, "25104": 82, "25167": 82, "25228": 82, "25290": 82, "25350": 82, "25411": 82, "25471": 82, "25530": 82, "25589": 82, "25648": 82, "25710": 82, "25770": 82, "25830": 82, "25889": 82, "25948": 82, "26007": 82, "26071": 82, "26131": 82, "26190": 82, "26253": 82, "26314": 82, "26374": 82, "26437": 82, "26497": 82, "26560": 82, "26621": 82, "26683": 82, "26745": 82, "26806": 82, "26880": 82, "26957": 82, "27025": 82, "27092": 82, "27158": 82, "27222": 82, "27284": 82, "27344": 82, "27404": 82, "27466": 82, "27526": 82, "27586": 82, "27649": 82, "27709": 82, "27769": 82, "27832": 82, "27954": 82, "28014": 82, "28073": 82, "28132": 82, "28190": 82, "28250": 82, "28308": 82, "28367": 82, "28424": 82, "28485": 82, "28606": 82, "28794": 82, "28852": 82, "28910": 82, "28970": 82, "29034": 82, "29094": 82, "29154": 82, "29213": 82, "29277": 82, "29337": 82, "29397": 82, "29456": 82, "29515": 82, "29575": 82, "29636": 82, "29697": 82, "29757": 82, "29816": 82, "29874": 82, "29932": 82, "29990": 82, "30048": 82, "30107": 82, "30189": 82, "30267": 82, "30347": 82, "30424": 82, "30502": 82, "30577": 82, "30651": 82, "30721": 82, "30857": 82, "30924": 82, "30990": 82, "31053": 82, "31115": 82, "31177": 82, "31238": 82, "31298": 82, "31358": 82, "31477": 82, "31536": 82, "31597": 82, "31656": 82, "31717": 82, "31777": 82, "31834": 82, "31893": 82, "31951": 82, "32009": 82, "32066": 82, "32125": 82, "32184": 82, "32244": 82, "32303": 82, "32362": 82, "32420": 82, "32478": 82, "32536": 82, "32595": 82, "32653": 82, "32714": 82, "32775": 82, "32835": 82, "32895": 82, "32955": 82, "33079": 82, "33139": 82, "33198": 82, "33259": 82, "33322": 82, "33382": 82, "33442": 82, "33502": 82, "33561": 82, "33625": 82, "33686": 82, "33748": 82, "33809": 82, "33869": 82, "33932": 82, "34010": 82, "34085": 82, "34153": 82, "34221": 82, "34284": 82, "34346": 82, "34406": 82, "34465": 82, "34526": 82, "34589": 82, "34650": 82, "34712": 82, "34773": 82, "34832": 82, "34891": 82, "34950": 82, "35011": 82, "35070": 82, "35129": 82, "35189": 82, "35248": 82, "35307": 82, "35368": 82, "35427": 82, "35488": 82, "35547": 82, "35608": 82, "35670": 82, "35731": 82, "35792": 82, "35852": 82, "35911": 82, "35971": 82, "36035": 82, "36095": 82, "36211": 82, "36268": 82, "36330": 82, "36388": 82, "36447": 82, "36505": 82, "36567": 82, "36630": 82, "36690": 82, "36749": 82, "36814": 82, "36875": 82, "36936": 82, "36997": 82, "37057": 82, "37114": 82, "37168": 82, "37219": 82, "37285": 82, "37344": 82, "37403": 82, "37465": 82, "37528": 82, "37588": 82, "37647": 82, "37708": 82, "37768": 82, "37828": 82, "37890": 82, "37950": 82, "38073": 82, "38134": 82, "38193": 82, "38252": 82, "38310": 82, "38368": 82, "38427": 82, "38485": 82, "38546": 82, "38607": 82, "38666": 82, "38728": 82, "38848": 82, "38912": 82, "38972": 82, "39032": 82, "39094": 82, "39157": 82, "39218": 82, "39279": 82, "39342": 82, "39404": 82, "39465": 82, "39526": 82, "39587": 82, "39647": 82, "39707": 82, "39769": 82, "39830": 82, "39891": 82, "39952": 82, "40010": 82, "40072": 82, "40131": 82, "40189": 82, "40255": 82, "40333": 82, "40412": 82, "40481": 82, "40549": 82, "40615": 82, "40679": 82, "40742": 82, "40804": 82, "40865": 82, "40926": 82, "41050": 82, "41112": 82, "41174": 82, "41234": 82, "41297": 82, "41358": 82, "41417": 82, "41476": 82, "41538": 82, "41598": 82, "41658": 82, "41718": 82, "41778": 82, "41837": 82, "41897": 82, "41956": 82, "42018": 82, "42077": 82, "42138": 82, "42199": 82, "42258": 82, "42318": 82, "42377": 82, "42437": 82, "42500": 82, "42561": 82, "42621": 82, "42681": 82, "42741": 82, "42800": 82, "42861": 82, "42921": 82, "42981": 82, "43041": 82, "43100": 82, "43159": 82, "43216": 82, "43273": 82, "43332": 82, "43394": 82, "43453": 82, "43510": 82, "43590": 82, "43652": 82, "43714": 82, "43775": 82, "43835": 82, "43895": 82, "44016": 82, "44076": 82, "44135": 82, "44198": 82, "44258": 82, "44321": 82, "44384": 82, "44445": 82, "44509": 82, "44572": 82, "44634": 82, "44695": 82, "44753": 82, "44813": 82, "44873": 82, "44931": 82, "44990": 82, "45051": 82, "45110": 82, "45171": 82, "45232": 82, "45292": 82, "45351": 82, "45415": 82, "45476": 82, "45537": 82, "45597": 82, "45656": 82, "45717": 82, "45777": 82, "45836": 82, "45894": 82, "45956": 82, "46015": 82, "46073": 82, "46131": 82, "46190": 82, "46252": 82, "46314": 82, "46376": 82, "46436": 82, "46496": 82, "46556": 82, "46628": 82, "46708": 82, "46789": 82, "46861": 82, "46929": 82, "46995": 82, "47059": 82, "47121": 82, "47182": 82, "47242": 82, "47300": 82, "47358": 82, "47417": 82, "47475": 82, "47533": 82, "47595": 82, "47654": 82, "47715": 82, "47775": 82, "47834": 82, "47897": 82, "47957": 82, "48017": 82, "48077": 82, "48136": 82, "48197": 82, "48256": 82, "48318": 82, "48378": 82, "48441": 82, "48501": 82, "48559": 82, "48617": 82, "48682": 82, "48743": 82, "48803": 82, "48864": 82, "48923": 82, "48982": 82, "49043": 82, "49105": 82, "49165": 82, "49225": 82, "49287": 82, "49348": 82, "49408": 82, "49465": 82, "49523": 82, "49583": 82, "49641": 82, "49702": 82, "49761": 82, "49816": 82, "49896": 82, "49971": 82, "50036": 82, "50098": 82, "50160": 82, "50221": 82, "50282": 82, "50342": 82, "50401": 82, "50463": 82, "50523": 82, "50582": 82, "50644": 82, "50707": 82, "50768": 82, "50829": 82, "50892": 82, "50953": 82, "51013": 82, "51072": 82, "51133": 82, "51192": 82, "51253": 82, "51312": 82, "51371": 82, "51434": 82, "51494": 82, "51554": 82, "51614": 82, "51673": 82, "51732": 82, "51791": 82, "51850": 82, "51908": 82, "51966": 82, "52028": 82, "52087": 82, "52210": 82, "52272": 82, "52332": 82, "52393": 82, "52453": 82, "52515": 82, "52575": 82, "52635": 82, "52695": 82, "52755": 82, "52814": 82, "52877": 82, "52937": 82, "53014": 82, "53096": 82, "53170": 82, "53241": 82, "53308": 82, "53372": 82, "53435": 82, "53497": 82, "53559": 82, "53620": 82, "53681": 82, "53739": 82, "53798": 82, "53859": 82, "53921": 82, "53982": 82, "54047": 82, "54108": 82, "54168": 82, "54230": 82, "54292": 82, "54355": 82, "54416": 82, "54475": 82, "54600": 82, "54721": 82, "54781": 82, "54840": 82, "54899": 82, "54959": 82, "55018": 82, "55078": 82, "55139": 82, "55200": 82, "55259": 82, "55320": 82, "55382": 82, "55441": 82, "55501": 82, "55559": 82, "55618": 82, "55684": 82, "55748": 82, "55813": 82, "55875": 82, "55938": 82, "55999": 82, "56060": 82, "56120": 82, "56187": 82, "56259": 82, "56329": 82, "56394": 82, "56457": 82, "56517": 82, "56577": 82, "56637": 82, "56696": 82, "56755": 82, "56816": 82, "56876": 82, "56939": 82, "57001": 82, "57062": 82, "57126": 82, "57250": 82, "57314": 82, "57376": 82, "57438": 82, "57499": 82, "57559": 82, "single_peak_mask": 86, "2646": 89, "063": 90, "examples_built_reconstruct": 92, "640x480": [93, 94, 101, 102, 103], "998363733291626": 97, "6401262283325195": 97, "38399": 99, "57997": 99, "46935": 99, "357605": 99, "70613": 99, "00001": [99, 102], "511505": 99, "32039": 99, "232216": 99, "77921": 99, "14425": 99, "19761": 99, "96389": 99, "99999": [99, 102], "195205": 99, "391754": 99, "773254": 99, "26481": 99, "818726": 99, "945564": 99, "12815": 99, "529335": 99, "99735": 99, "59097": 99, "39428": 99, "35901": 99, "08593": 99, "9184668": 99, "04836": 99, "811745": 99, "813194": 99, "31409": 99, "539505": 99, "62846": 99, "748116": 99, "96909": 99, "10664": 99, "97683": 99, "18689": 99, "738045": 99, "76541": 99, "99135": 99, "97298": 99, "17303": 99, "87969": 99, "326607": 99, "examples_built_registr": 100, "87221": 102, "88522": 102, "86069": 102, "99708": 102, "999725": 102, "99444": 102, "0x2a610ddf0": 109, "0x2a580dd30": 109, "0x2c4c13b50": [], "83774": [], "9259": [], "322784": [], "108505": [], "84363": [], "91885": [], "40357": [], "25677": [], "7293": [], "48337": [], "60328": [], "137825": [], "238976": [], "51007": [], "29447": [], "04564": [], "460205": [], "542404": [], "6024": [], "14851": [], "84209": [], "98937": [], "57682": [], "63652": [], "72344": [], "60828": [], "939186": [], "40846": [], "158745": [], "745346": [], "002625": [], "82582": [], "02451": [], "06974": [], "examples_built_segment": 112, "78566002845764": [], "examples_built_simul": 116, "073": [116, 117], "094": [120, 125], "6833333333333333": 121, "9583333333333333": 121, "examples_built_streamline_analysi": 125, "012": [125, 127], "examples_built_visu": 129, "tar": 130, "38477": 130, "97756fbef11ce2df31f1bedf1fc7aac7": 130, "examples_built_workflow": 136, "netohe2020": [41, 69, 156, 167], "k_aniso": [69, 167, 174], "k_iso": [69, 167, 174], "k_micro": [69, 167, 174], "novellol2022": [41, 69, 156], "alvesr2022": 69, "correlationtensormodel": [69, 174], "diffusionkurtosistensorfit": 69, "necess": 69, "e_": 69, "q_1": 69, "q_2": 69, "1i": 69, "1j": 69, "2i": 69, "2j": 69, "1k": 69, "1l": 69, "2k": 69, "z_": 69, "4th": 69, "diffusionkurtosi": 69, "netohe2021": 69, "fbvals1": 69, "fbvecs1": 69, "fbvals2": 69, "fbvecs2": 69, "cti_rat1": 69, "bvals1": 69, "bvecs1": 69, "bvals2": 69, "bvecs2": 69, "filefdata": 69, "bvec1": 69, "bvec2": 69, "gtab1": [69, 167], "gtab2": [69, 167], "mask_affin": 69, "ctimodel": 69, "ctifit": 69, "correlationtensorfit": [69, 174], "inher": 69, "kiso_map": 69, "kaniso_map": 69, "kmicro_map": 69, "slice_idx": 69, "kiso": 69, "kaniso": 69, "kmicro": 69, "116605": [69, 167], "novello": 69, "ianu": 69, "feiweier": 69, "jovicich": 69, "119137": 69, "alv": 69, "kerkel\u00e4": 69, "chavarr\u00eda": 69, "deciph": 69, "stroke": 69, "118833": 69, "nethe2021": [41, 69, 156], "28938": 69, "reconst_cti": 69, "e501": 111, "cgohlk": 161, "rkern": 161, "pii": 161, "s0167947306001836": 161, "cti_param": 167, "twenti": 167, "aniso": 167, "d_c": 167, "rangl": 167, "k_total": [167, 174], "excess": 167, "2d_": 167, "plu": 167, "ccti": 167, "paulbourk": 171, "circlespher": 171, "readthedoc": 171, "from_qte_to_cti": 174, "multi_gaussian_k_from_c": 174, "split_cti_param": 174, "cti_predict": 174, "params_to_cti_param": 174, "ls_fit_cti": 174, "cti_design_matrix": 174, "bdg": [], "danger": [], "078": [], "__": [41, 156], "2fsdata": [], "26175": [], "s1053811921004754": [], "3dihub": [], "tbl0001": [], "sici": [], "199909": [], "3c515": [], "aid": [], "mrm14": [], "3e3": [], "brows": 141, "recip": 141, "confort": 141, "image1": 147, "image2": 147, "dipy_": [], "anaconda_": [], "fury_": [], "nibabel_": [], "xcode_": [], "neurodebian_": [], "numpy_": [], "scipy_": [], "canopy_": [], "pythonxy_": [], "powershell_": [], "visualstudiobuildtools_": [], "openmp_": [], "homebrew_": [], "ipython_": [], "html_theme": [], "sidebar_secondari": [], "dedic": 141, "python_": [], "cython_": [], "h5py_": [], "vtk_": [], "matplotlib_": [], "cvxpy_": []}, "objects": {"": [[157, 0, 0, "-", "dipy"]], "dipy": [[158, 0, 0, "-", "__config__"], [159, 0, 0, "-", "align"], [160, 0, 0, "-", "boots"], [161, 0, 0, "-", "core"], [162, 0, 0, "-", "data"], [163, 0, 0, "-", "denoise"], [164, 0, 0, "-", "direction"], [157, 3, 1, "", "get_info"], [165, 0, 0, "-", "io"], [166, 0, 0, "-", "nn"], [167, 0, 0, "-", "reconst"], [168, 0, 0, "-", "segment"], [169, 0, 0, "-", "sims"], [170, 0, 0, "-", "stats"], [171, 0, 0, "-", "tracking"], [172, 0, 0, "-", "viz"], [173, 0, 0, "-", "workflows"]], "dipy.align": [[159, 1, 1, "", "Bunch"], [159, 3, 1, "", "VerbosityLevels"], [159, 0, 0, "-", "_public"], [159, 0, 0, "-", "bundlemin"], [159, 0, 0, "-", "cpd"], [159, 0, 0, "-", "crosscorr"], [159, 0, 0, "-", "expectmax"], [159, 0, 0, "-", "imaffine"], [159, 0, 0, "-", "imwarp"], [159, 0, 0, "-", "metrics"], [159, 0, 0, "-", "parzenhist"], [159, 0, 0, "-", "reslice"], [159, 0, 0, "-", "scalespace"], [159, 0, 0, "-", "streamlinear"], [159, 0, 0, "-", "streamwarp"], [159, 0, 0, "-", "sumsqdiff"], [159, 0, 0, "-", "transforms"], [159, 0, 0, "-", "vector_fields"]], "dipy.align.Bunch": [[159, 2, 1, "", "__init__"]], "dipy.align._public": [[159, 3, 1, "", "_METHOD_DICT"], [159, 3, 1, "", "affine"], [159, 3, 1, "", "affine_registration"], [159, 3, 1, "", "center_of_mass"], [159, 3, 1, "", "motion_correction"], [159, 3, 1, "", "read_mapping"], [159, 3, 1, "", "register_dwi_series"], [159, 3, 1, "", "register_dwi_to_template"], [159, 3, 1, "", "register_series"], [159, 3, 1, "", "resample"], [159, 3, 1, "", "rigid"], [159, 3, 1, "", "rigid_isoscaling"], [159, 3, 1, "", "rigid_scaling"], [159, 3, 1, "", "streamline_registration"], [159, 3, 1, "", "syn_registration"], [159, 3, 1, "", "translation"], [159, 3, 1, "", "write_mapping"]], "dipy.align.bundlemin": [[159, 3, 1, "", "determine_num_threads"], [159, 3, 1, "", "distance_matrix_mdf"]], "dipy.align.cpd": [[159, 1, 1, "", "DeformableRegistration"], [159, 3, 1, "", "gaussian_kernel"], [159, 3, 1, "", "initialize_sigma2"], [159, 3, 1, "", "low_rank_eigen"], [159, 3, 1, "", "lowrankQS"]], "dipy.align.cpd.DeformableRegistration": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "expectation"], [159, 2, 1, "", "get_registration_parameters"], [159, 2, 1, "", "iterate"], [159, 2, 1, "", "maximization"], [159, 2, 1, "", "register"], [159, 2, 1, "", "transform_point_cloud"], [159, 2, 1, "", "update_transform"], [159, 2, 1, "", "update_variance"]], "dipy.align.crosscorr": [[159, 3, 1, "", "compute_cc_backward_step_2d"], [159, 3, 1, "", "compute_cc_backward_step_3d"], [159, 3, 1, "", "compute_cc_forward_step_2d"], [159, 3, 1, "", "compute_cc_forward_step_3d"], [159, 3, 1, "", "precompute_cc_factors_2d"], [159, 3, 1, "", "precompute_cc_factors_2d_test"], [159, 3, 1, "", "precompute_cc_factors_3d"], [159, 3, 1, "", "precompute_cc_factors_3d_test"]], "dipy.align.expectmax": [[159, 3, 1, "", "compute_em_demons_step_2d"], [159, 3, 1, "", "compute_em_demons_step_3d"], [159, 3, 1, "", "compute_masked_class_stats_2d"], [159, 3, 1, "", "compute_masked_class_stats_3d"], [159, 3, 1, "", "quantize_positive_2d"], [159, 3, 1, "", "quantize_positive_3d"]], "dipy.align.imaffine": [[159, 1, 1, "", "AffineInvalidValuesError"], [159, 1, 1, "", "AffineInversionError"], [159, 1, 1, "", "AffineMap"], [159, 1, 1, "", "AffineRegistration"], [159, 1, 1, "", "MutualInformationMetric"], [159, 3, 1, "", "_transform_method"], [159, 3, 1, "", "transform_centers_of_mass"], [159, 3, 1, "", "transform_geometric_centers"], [159, 3, 1, "", "transform_origins"]], "dipy.align.imaffine.AffineInvalidValuesError": [[159, 2, 1, "", "__init__"]], "dipy.align.imaffine.AffineInversionError": [[159, 2, 1, "", "__init__"]], "dipy.align.imaffine.AffineMap": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "get_affine"], [159, 2, 1, "", "set_affine"], [159, 2, 1, "", "transform"], [159, 2, 1, "", "transform_inverse"]], "dipy.align.imaffine.AffineRegistration": [[159, 2, 1, "", "__init__"], [159, 4, 1, "", "docstring_addendum"], [159, 2, 1, "", "optimize"]], "dipy.align.imaffine.MutualInformationMetric": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "distance"], [159, 2, 1, "", "distance_and_gradient"], [159, 2, 1, "", "gradient"], [159, 2, 1, "", "setup"]], "dipy.align.imwarp": [[159, 1, 1, "", "DiffeomorphicMap"], [159, 1, 1, "", "DiffeomorphicRegistration"], [159, 3, 1, "", "RegistrationStages"], [159, 1, 1, "", "SymmetricDiffeomorphicRegistration"], [159, 3, 1, "", "get_direction_and_spacings"], [159, 3, 1, "", "logger"], [159, 3, 1, "", "mult_aff"]], "dipy.align.imwarp.DiffeomorphicMap": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "allocate"], [159, 2, 1, "", "compute_inversion_error"], [159, 2, 1, "", "expand_fields"], [159, 2, 1, "", "get_backward_field"], [159, 2, 1, "", "get_forward_field"], [159, 2, 1, "", "get_simplified_transform"], [159, 2, 1, "", "interpret_matrix"], [159, 2, 1, "", "inverse"], [159, 2, 1, "", "shallow_copy"], [159, 2, 1, "", "transform"], [159, 2, 1, "", "transform_inverse"], [159, 2, 1, "", "transform_points"], [159, 2, 1, "", "transform_points_inverse"], [159, 2, 1, "", "warp_endomorphism"]], "dipy.align.imwarp.DiffeomorphicRegistration": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "get_map"], [159, 2, 1, "", "optimize"], [159, 2, 1, "", "set_level_iters"]], "dipy.align.imwarp.SymmetricDiffeomorphicRegistration": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "get_map"], [159, 2, 1, "", "optimize"], [159, 2, 1, "", "update"]], "dipy.align.metrics": [[159, 1, 1, "", "CCMetric"], [159, 1, 1, "", "EMMetric"], [159, 1, 1, "", "SSDMetric"], [159, 1, 1, "", "SimilarityMetric"], [159, 3, 1, "", "v_cycle_2d"], [159, 3, 1, "", "v_cycle_3d"]], "dipy.align.metrics.CCMetric": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "compute_backward"], [159, 2, 1, "", "compute_forward"], [159, 2, 1, "", "free_iteration"], [159, 2, 1, "", "get_energy"], [159, 2, 1, "", "initialize_iteration"]], "dipy.align.metrics.EMMetric": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "compute_backward"], [159, 2, 1, "", "compute_demons_step"], [159, 2, 1, "", "compute_forward"], [159, 2, 1, "", "compute_gauss_newton_step"], [159, 2, 1, "", "free_iteration"], [159, 2, 1, "", "get_energy"], [159, 2, 1, "", "initialize_iteration"], [159, 2, 1, "", "use_moving_image_dynamics"], [159, 2, 1, "", "use_static_image_dynamics"]], "dipy.align.metrics.SSDMetric": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "compute_backward"], [159, 2, 1, "", "compute_demons_step"], [159, 2, 1, "", "compute_forward"], [159, 2, 1, "", "compute_gauss_newton_step"], [159, 2, 1, "", "free_iteration"], [159, 2, 1, "", "get_energy"], [159, 2, 1, "", "initialize_iteration"]], "dipy.align.metrics.SimilarityMetric": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "compute_backward"], [159, 2, 1, "", "compute_forward"], [159, 2, 1, "", "free_iteration"], [159, 2, 1, "", "get_energy"], [159, 2, 1, "", "initialize_iteration"], [159, 2, 1, "", "set_levels_above"], [159, 2, 1, "", "set_levels_below"], [159, 2, 1, "", "set_moving_image"], [159, 2, 1, "", "set_static_image"], [159, 2, 1, "", "use_moving_image_dynamics"], [159, 2, 1, "", "use_static_image_dynamics"]], "dipy.align.parzenhist": [[159, 1, 1, "", "ParzenJointHistogram"], [159, 3, 1, "", "compute_parzen_mi"], [159, 3, 1, "", "cubic_spline"], [159, 3, 1, "", "cubic_spline_derivative"], [159, 3, 1, "", "sample_domain_regular"]], "dipy.align.parzenhist.ParzenJointHistogram": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "bin_index"], [159, 2, 1, "", "bin_normalize_moving"], [159, 2, 1, "", "bin_normalize_static"], [159, 2, 1, "", "setup"], [159, 2, 1, "", "update_gradient_dense"], [159, 2, 1, "", "update_gradient_sparse"], [159, 2, 1, "", "update_pdfs_dense"], [159, 2, 1, "", "update_pdfs_sparse"]], "dipy.align.reslice": [[159, 3, 1, "", "reslice"]], "dipy.align.scalespace": [[159, 1, 1, "", "IsotropicScaleSpace"], [159, 1, 1, "", "ScaleSpace"], [159, 3, 1, "", "logger"]], "dipy.align.scalespace.IsotropicScaleSpace": [[159, 2, 1, "", "__init__"]], "dipy.align.scalespace.ScaleSpace": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "get_affine"], [159, 2, 1, "", "get_affine_inv"], [159, 2, 1, "", "get_domain_shape"], [159, 2, 1, "", "get_expand_factors"], [159, 2, 1, "", "get_image"], [159, 2, 1, "", "get_scaling"], [159, 2, 1, "", "get_sigmas"], [159, 2, 1, "", "get_spacing"], [159, 2, 1, "", "print_level"]], "dipy.align.streamlinear": [[159, 1, 1, "", "BundleMinDistanceAsymmetricMetric"], [159, 1, 1, "", "BundleMinDistanceMatrixMetric"], [159, 1, 1, "", "BundleMinDistanceMetric"], [159, 1, 1, "", "BundleSumDistanceMatrixMetric"], [159, 1, 1, "", "JointBundleMinDistanceMetric"], [159, 1, 1, "", "JointStreamlineRegistrationMap"], [159, 1, 1, "", "StreamlineDistanceMetric"], [159, 1, 1, "", "StreamlineLinearRegistration"], [159, 1, 1, "", "StreamlineRegistrationMap"], [159, 3, 1, "", "bundle_min_distance"], [159, 3, 1, "", "bundle_min_distance_asymmetric_fast"], [159, 3, 1, "", "bundle_min_distance_fast"], [159, 3, 1, "", "bundle_sum_distance"], [159, 3, 1, "", "compose_matrix44"], [159, 3, 1, "", "decompose_matrix44"], [159, 3, 1, "", "get_unique_pairs"], [159, 3, 1, "", "groupwise_slr"], [159, 3, 1, "", "logger"], [159, 3, 1, "", "progressive_slr"], [159, 3, 1, "", "remove_clusters_by_size"], [159, 3, 1, "", "slr_with_qbx"]], "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "distance"]], "dipy.align.streamlinear.BundleMinDistanceMatrixMetric": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "distance"], [159, 2, 1, "", "setup"]], "dipy.align.streamlinear.BundleMinDistanceMetric": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "distance"], [159, 2, 1, "", "setup"]], "dipy.align.streamlinear.BundleSumDistanceMatrixMetric": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "distance"]], "dipy.align.streamlinear.JointBundleMinDistanceMetric": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "distance"], [159, 2, 1, "", "setup"]], "dipy.align.streamlinear.JointStreamlineRegistrationMap": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "transform"]], "dipy.align.streamlinear.StreamlineDistanceMetric": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "distance"], [159, 2, 1, "", "setup"]], "dipy.align.streamlinear.StreamlineLinearRegistration": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "optimize"]], "dipy.align.streamlinear.StreamlineRegistrationMap": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "transform"]], "dipy.align.streamwarp": [[159, 3, 1, "", "average_bundle_length"], [159, 3, 1, "", "bundlewarp"], [159, 3, 1, "", "bundlewarp_shape_analysis"], [159, 3, 1, "", "bundlewarp_vector_filed"], [159, 3, 1, "", "find_missing"]], "dipy.align.sumsqdiff": [[159, 3, 1, "", "compute_energy_ssd_2d"], [159, 3, 1, "", "compute_energy_ssd_3d"], [159, 3, 1, "", "compute_residual_displacement_field_ssd_2d"], [159, 3, 1, "", "compute_residual_displacement_field_ssd_3d"], [159, 3, 1, "", "compute_ssd_demons_step_2d"], [159, 3, 1, "", "compute_ssd_demons_step_3d"], [159, 3, 1, "", "iterate_residual_displacement_field_ssd_2d"], [159, 3, 1, "", "iterate_residual_displacement_field_ssd_3d"], [159, 3, 1, "", "solve_2d_symmetric_positive_definite"], [159, 3, 1, "", "solve_3d_symmetric_positive_definite"]], "dipy.align.transforms": [[159, 1, 1, "", "AffineTransform2D"], [159, 1, 1, "", "AffineTransform3D"], [159, 1, 1, "", "RigidIsoScalingTransform2D"], [159, 1, 1, "", "RigidIsoScalingTransform3D"], [159, 1, 1, "", "RigidScalingTransform2D"], [159, 1, 1, "", "RigidScalingTransform3D"], [159, 1, 1, "", "RigidTransform2D"], [159, 1, 1, "", "RigidTransform3D"], [159, 1, 1, "", "RotationTransform2D"], [159, 1, 1, "", "RotationTransform3D"], [159, 1, 1, "", "ScalingTransform2D"], [159, 1, 1, "", "ScalingTransform3D"], [159, 1, 1, "", "Transform"], [159, 1, 1, "", "TranslationTransform2D"], [159, 1, 1, "", "TranslationTransform3D"]], "dipy.align.transforms.AffineTransform2D": [[159, 2, 1, "", "__init__"]], "dipy.align.transforms.AffineTransform3D": [[159, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidIsoScalingTransform2D": [[159, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidIsoScalingTransform3D": [[159, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidScalingTransform2D": [[159, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidScalingTransform3D": [[159, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidTransform2D": [[159, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidTransform3D": [[159, 2, 1, "", "__init__"]], "dipy.align.transforms.RotationTransform2D": [[159, 2, 1, "", "__init__"]], "dipy.align.transforms.RotationTransform3D": [[159, 2, 1, "", "__init__"]], "dipy.align.transforms.ScalingTransform2D": [[159, 2, 1, "", "__init__"]], "dipy.align.transforms.ScalingTransform3D": [[159, 2, 1, "", "__init__"]], "dipy.align.transforms.Transform": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "get_dim"], [159, 2, 1, "", "get_identity_parameters"], [159, 2, 1, "", "get_number_of_parameters"], [159, 2, 1, "", "jacobian"], [159, 2, 1, "", "param_to_matrix"]], "dipy.align.transforms.TranslationTransform2D": [[159, 2, 1, "", "__init__"]], "dipy.align.transforms.TranslationTransform3D": [[159, 2, 1, "", "__init__"]], "dipy.align.vector_fields": [[159, 3, 1, "", "compose_vector_fields_2d"], [159, 3, 1, "", "compose_vector_fields_3d"], [159, 3, 1, "", "create_circle"], [159, 3, 1, "", "create_harmonic_fields_2d"], [159, 3, 1, "", "create_harmonic_fields_3d"], [159, 3, 1, "", "create_random_displacement_2d"], [159, 3, 1, "", "create_random_displacement_3d"], [159, 3, 1, "", "create_sphere"], [159, 3, 1, "", "downsample_displacement_field_2d"], [159, 3, 1, "", "downsample_displacement_field_3d"], [159, 3, 1, "", "downsample_scalar_field_2d"], [159, 3, 1, "", "downsample_scalar_field_3d"], [159, 3, 1, "", "gradient"], [159, 3, 1, "", "invert_vector_field_fixed_point_2d"], [159, 3, 1, "", "invert_vector_field_fixed_point_3d"], [159, 3, 1, "", "is_valid_affine"], [159, 3, 1, "", "reorient_vector_field_2d"], [159, 3, 1, "", "reorient_vector_field_3d"], [159, 3, 1, "", "resample_displacement_field_2d"], [159, 3, 1, "", "resample_displacement_field_3d"], [159, 3, 1, "", "simplify_warp_function_2d"], [159, 3, 1, "", "simplify_warp_function_3d"], [159, 3, 1, "", "sparse_gradient"], [159, 3, 1, "", "transform_2d_affine"], [159, 3, 1, "", "transform_2d_affine_nn"], [159, 3, 1, "", "transform_3d_affine"], [159, 3, 1, "", "transform_3d_affine_nn"], [159, 3, 1, "", "warp_2d"], [159, 3, 1, "", "warp_2d_nn"], [159, 3, 1, "", "warp_3d"], [159, 3, 1, "", "warp_3d_nn"], [159, 3, 1, "", "warp_coordinates_2d"], [159, 3, 1, "", "warp_coordinates_3d"]], "dipy.core": [[161, 0, 0, "-", "benchmarks"], [161, 0, 0, "-", "geometry"], [161, 0, 0, "-", "gradients"], [161, 0, 0, "-", "graph"], [161, 0, 0, "-", "histeq"], [161, 0, 0, "-", "interpolation"], [161, 0, 0, "-", "ndindex"], [161, 0, 0, "-", "onetime"], [161, 0, 0, "-", "optimize"], [161, 0, 0, "-", "profile"], [161, 0, 0, "-", "rng"], [161, 0, 0, "-", "sphere"], [161, 0, 0, "-", "sphere_stats"], [161, 0, 0, "-", "subdivide_octahedron"], [161, 0, 0, "-", "wavelet"]], "dipy.core.benchmarks": [[161, 0, 0, "-", "bench_sphere"]], "dipy.core.benchmarks.bench_sphere": [[161, 1, 1, "", "Timer"], [161, 3, 1, "", "bench_disperse_charges_alt"], [161, 3, 1, "", "func_minimize_adhoc"], [161, 3, 1, "", "func_minimize_scipy"]], "dipy.core.benchmarks.bench_sphere.Timer": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "duration_in_seconds"]], "dipy.core.geometry": [[161, 3, 1, "", "_TUPLE2AXES"], [161, 3, 1, "", "cart2sphere"], [161, 3, 1, "", "cart_distance"], [161, 3, 1, "", "circumradius"], [161, 3, 1, "", "compose_matrix"], [161, 3, 1, "", "compose_transformations"], [161, 3, 1, "", "decompose_matrix"], [161, 3, 1, "", "dist_to_corner"], [161, 3, 1, "", "euler_matrix"], [161, 3, 1, "", "is_hemispherical"], [161, 3, 1, "", "lambert_equal_area_projection_cart"], [161, 3, 1, "", "lambert_equal_area_projection_polar"], [161, 3, 1, "", "nearest_pos_semi_def"], [161, 3, 1, "", "normalized_vector"], [161, 3, 1, "", "perpendicular_directions"], [161, 3, 1, "", "rodrigues_axis_rotation"], [161, 3, 1, "", "sph2latlon"], [161, 3, 1, "", "sphere2cart"], [161, 3, 1, "", "sphere_distance"], [161, 3, 1, "", "vec2vec_rotmat"], [161, 3, 1, "", "vector_cosine"], [161, 3, 1, "", "vector_norm"]], "dipy.core.gradients": [[161, 1, 1, "", "GradientTable"], [161, 3, 1, "", "btens_to_params"], [161, 3, 1, "", "check_multi_b"], [161, 3, 1, "", "generate_bvecs"], [161, 3, 1, "", "get_bval_indices"], [161, 3, 1, "", "gradient_table"], [161, 3, 1, "", "gradient_table_from_bvals_bvecs"], [161, 3, 1, "", "gradient_table_from_gradient_strength_bvecs"], [161, 3, 1, "", "gradient_table_from_qvals_bvecs"], [161, 3, 1, "", "logger"], [161, 3, 1, "", "orientation_from_string"], [161, 3, 1, "", "orientation_to_string"], [161, 3, 1, "", "ornt_mapping"], [161, 3, 1, "", "params_to_btens"], [161, 3, 1, "", "reorient_bvecs"], [161, 3, 1, "", "reorient_on_axis"], [161, 3, 1, "", "reorient_vectors"], [161, 3, 1, "", "round_bvals"], [161, 3, 1, "", "unique_bvals"], [161, 3, 1, "", "unique_bvals_magnitude"], [161, 3, 1, "", "unique_bvals_tolerance"]], "dipy.core.gradients.GradientTable": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "b0s_mask"], [161, 2, 1, "", "bvals"], [161, 2, 1, "", "bvecs"], [161, 2, 1, "", "gradient_strength"], [161, 5, 1, "", "info"], [161, 2, 1, "", "qvals"], [161, 2, 1, "", "tau"]], "dipy.core.graph": [[161, 1, 1, "", "Graph"]], "dipy.core.graph.Graph": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "add_edge"], [161, 2, 1, "", "add_node"], [161, 2, 1, "", "all_paths"], [161, 2, 1, "", "children"], [161, 2, 1, "", "del_node"], [161, 2, 1, "", "del_node_and_edges"], [161, 2, 1, "", "down"], [161, 2, 1, "", "down_short"], [161, 2, 1, "", "parents"], [161, 2, 1, "", "shortest_path"], [161, 2, 1, "", "up"], [161, 2, 1, "", "up_short"]], "dipy.core.histeq": [[161, 3, 1, "", "histeq"]], "dipy.core.interpolation": [[161, 1, 1, "", "Interpolator"], [161, 1, 1, "", "NearestNeighborInterpolator"], [161, 1, 1, "", "OutsideImage"], [161, 1, 1, "", "TriLinearInterpolator"], [161, 3, 1, "", "interp_rbf"], [161, 3, 1, "", "interpolate_scalar_2d"], [161, 3, 1, "", "interpolate_scalar_3d"], [161, 3, 1, "", "interpolate_scalar_nn_2d"], [161, 3, 1, "", "interpolate_scalar_nn_3d"], [161, 3, 1, "", "interpolate_vector_2d"], [161, 3, 1, "", "interpolate_vector_3d"], [161, 3, 1, "", "map_coordinates_trilinear_iso"], [161, 3, 1, "", "nearestneighbor_interpolate"], [161, 3, 1, "", "trilinear_interp"], [161, 3, 1, "", "trilinear_interpolate4d"]], "dipy.core.interpolation.Interpolator": [[161, 2, 1, "", "__init__"]], "dipy.core.interpolation.NearestNeighborInterpolator": [[161, 2, 1, "", "__init__"]], "dipy.core.interpolation.OutsideImage": [[161, 2, 1, "", "__init__"]], "dipy.core.interpolation.TriLinearInterpolator": [[161, 2, 1, "", "__init__"]], "dipy.core.ndindex": [[161, 3, 1, "", "ndindex"]], "dipy.core.onetime": [[161, 1, 1, "", "OneTimeProperty"], [161, 1, 1, "", "ResetMixin"], [161, 3, 1, "", "auto_attr"]], "dipy.core.onetime.OneTimeProperty": [[161, 2, 1, "", "__init__"]], "dipy.core.onetime.ResetMixin": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "reset"]], "dipy.core.optimize": [[161, 1, 1, "", "NonNegativeLeastSquares"], [161, 1, 1, "", "Optimizer"], [161, 1, 1, "", "PositiveDefiniteLeastSquares"], [161, 1, 1, "", "SKLearnLinearSolver"], [161, 3, 1, "", "sparse_nnls"], [161, 3, 1, "", "spdot"]], "dipy.core.optimize.NonNegativeLeastSquares": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "fit"]], "dipy.core.optimize.Optimizer": [[161, 2, 1, "", "__init__"], [161, 5, 1, "", "evolution"], [161, 5, 1, "", "fopt"], [161, 5, 1, "", "message"], [161, 5, 1, "", "nfev"], [161, 5, 1, "", "nit"], [161, 2, 1, "", "print_summary"], [161, 5, 1, "", "xopt"]], "dipy.core.optimize.PositiveDefiniteLeastSquares": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "solve"]], "dipy.core.optimize.SKLearnLinearSolver": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "fit"], [161, 2, 1, "", "predict"]], "dipy.core.profile": [[161, 1, 1, "", "Profiler"]], "dipy.core.profile.Profiler": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "print_stats"]], "dipy.core.rng": [[161, 3, 1, "", "LEcuyer"], [161, 3, 1, "", "WichmannHill1982"], [161, 3, 1, "", "WichmannHill2006"]], "dipy.core.sphere": [[161, 1, 1, "", "HemiSphere"], [161, 1, 1, "", "Sphere"], [161, 3, 1, "", "disperse_charges"], [161, 3, 1, "", "disperse_charges_alt"], [161, 3, 1, "", "euler_characteristic_check"], [161, 3, 1, "", "faces_from_sphere_vertices"], [161, 3, 1, "", "hemi_icosahedron"], [161, 3, 1, "", "icosahedron_faces"], [161, 3, 1, "", "icosahedron_vertices"], [161, 3, 1, "", "octahedron_faces"], [161, 3, 1, "", "octahedron_vertices"], [161, 3, 1, "", "unique_edges"], [161, 3, 1, "", "unique_sets"], [161, 3, 1, "", "unit_icosahedron"], [161, 3, 1, "", "unit_octahedron"]], "dipy.core.sphere.HemiSphere": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "faces"], [161, 2, 1, "", "find_closest"], [161, 2, 1, "", "from_sphere"], [161, 2, 1, "", "mirror"], [161, 2, 1, "", "subdivide"]], "dipy.core.sphere.Sphere": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "edges"], [161, 2, 1, "", "faces"], [161, 2, 1, "", "find_closest"], [161, 2, 1, "", "subdivide"], [161, 2, 1, "", "vertices"], [161, 5, 1, "", "x"], [161, 5, 1, "", "y"], [161, 5, 1, "", "z"]], "dipy.core.sphere_stats": [[161, 3, 1, "", "angular_similarity"], [161, 3, 1, "", "compare_orientation_sets"], [161, 3, 1, "", "eigenstats"], [161, 3, 1, "", "random_uniform_on_sphere"]], "dipy.core.subdivide_octahedron": [[161, 3, 1, "", "create_unit_hemisphere"], [161, 3, 1, "", "create_unit_sphere"]], "dipy.core.wavelet": [[161, 3, 1, "", "afb3D"], [161, 3, 1, "", "afb3D_A"], [161, 3, 1, "", "cshift3D"], [161, 3, 1, "", "dwt3D"], [161, 3, 1, "", "idwt3D"], [161, 3, 1, "", "permutationinverse"], [161, 3, 1, "", "sfb3D"], [161, 3, 1, "", "sfb3D_A"]], "dipy.data": [[162, 3, 1, "", "DATA_DIR"], [162, 1, 1, "", "DataError"], [162, 3, 1, "", "default_sphere"], [162, 3, 1, "", "dsi_deconv_voxels"], [162, 3, 1, "", "dsi_voxels"], [162, 0, 0, "-", "fetcher"], [162, 3, 1, "", "get_3shell_gtab"], [162, 3, 1, "", "get_cmap"], [162, 3, 1, "", "get_gtab_taiwan_dsi"], [162, 3, 1, "", "get_isbi2013_2shell_gtab"], [162, 3, 1, "", "get_sim_voxels"], [162, 3, 1, "", "get_skeleton"], [162, 3, 1, "", "get_sphere"], [162, 3, 1, "", "load_sdp_constraints"], [162, 3, 1, "", "loads_compat"], [162, 3, 1, "", "matlab_life_results"], [162, 3, 1, "", "mrtrix_spherical_functions"], [162, 3, 1, "", "small_sphere"], [162, 3, 1, "", "two_cingulum_bundles"]], "dipy.data.DataError": [[162, 2, 1, "", "__init__"]], "dipy.data.fetcher": [[162, 3, 1, "", "check_md5"], [162, 3, 1, "", "copyfileobj_withprogress"], [162, 3, 1, "", "extract_example_tracts"], [162, 3, 1, "", "fetch_DiB_217_lte_pte_ste"], [162, 3, 1, "", "fetch_DiB_70_lte_pte_ste"], [162, 3, 1, "", "fetch_bundle_atlas_hcp842"], [162, 3, 1, "", "fetch_bundle_fa_hcp"], [162, 3, 1, "", "fetch_bundle_warp_dataset"], [162, 3, 1, "", "fetch_bundles_2_subjects"], [162, 3, 1, "", "fetch_cenir_multib"], [162, 3, 1, "", "fetch_cfin_multib"], [162, 3, 1, "", "fetch_cti_rat1"], [162, 3, 1, "", "fetch_data"], [162, 3, 1, "", "fetch_evac_test"], [162, 3, 1, "", "fetch_evac_weights"], [162, 3, 1, "", "fetch_file_formats"], [162, 3, 1, "", "fetch_fury_surface"], [162, 3, 1, "", "fetch_gold_standard_io"], [162, 3, 1, "", "fetch_hbn"], [162, 3, 1, "", "fetch_hcp"], [162, 3, 1, "", "fetch_isbi2013_2shell"], [162, 3, 1, "", "fetch_ivim"], [162, 3, 1, "", "fetch_mni_template"], [162, 3, 1, "", "fetch_ptt_minimal_dataset"], [162, 3, 1, "", "fetch_qtdMRI_test_retest_2subjects"], [162, 3, 1, "", "fetch_qte_lte_pte"], [162, 3, 1, "", "fetch_resdnn_weights"], [162, 3, 1, "", "fetch_scil_b0"], [162, 3, 1, "", "fetch_sherbrooke_3shell"], [162, 3, 1, "", "fetch_stanford_hardi"], [162, 3, 1, "", "fetch_stanford_labels"], [162, 3, 1, "", "fetch_stanford_pve_maps"], [162, 3, 1, "", "fetch_stanford_t1"], [162, 3, 1, "", "fetch_stanford_tracks"], [162, 3, 1, "", "fetch_syn_data"], [162, 3, 1, "", "fetch_synb0_test"], [162, 3, 1, "", "fetch_synb0_weights"], [162, 3, 1, "", "fetch_taiwan_ntu_dsi"], [162, 3, 1, "", "fetch_target_tractogram_hcp"], [162, 3, 1, "", "fetch_tissue_data"], [162, 3, 1, "", "get_bundle_atlas_hcp842"], [162, 3, 1, "", "get_file_formats"], [162, 3, 1, "", "get_fnames"], [162, 3, 1, "", "get_target_tractogram_hcp"], [162, 3, 1, "", "get_two_hcp842_bundles"], [162, 3, 1, "", "read_DiB_217_lte_pte_ste"], [162, 3, 1, "", "read_DiB_70_lte_pte_ste"], [162, 3, 1, "", "read_bundles_2_subjects"], [162, 3, 1, "", "read_cenir_multib"], [162, 3, 1, "", "read_cfin_dwi"], [162, 3, 1, "", "read_cfin_t1"], [162, 3, 1, "", "read_five_af_bundles"], [162, 3, 1, "", "read_isbi2013_2shell"], [162, 3, 1, "", "read_ivim"], [162, 3, 1, "", "read_mni_template"], [162, 3, 1, "", "read_qtdMRI_test_retest_2subjects"], [162, 3, 1, "", "read_qte_lte_pte"], [162, 3, 1, "", "read_scil_b0"], [162, 3, 1, "", "read_sherbrooke_3shell"], [162, 3, 1, "", "read_siemens_scil_b0"], [162, 3, 1, "", "read_stanford_hardi"], [162, 3, 1, "", "read_stanford_labels"], [162, 3, 1, "", "read_stanford_pve_maps"], [162, 3, 1, "", "read_stanford_t1"], [162, 3, 1, "", "read_syn_data"], [162, 3, 1, "", "read_taiwan_ntu_dsi"], [162, 3, 1, "", "read_tissue_data"], [162, 3, 1, "", "to_bids_description"]], "dipy.denoise": [[163, 0, 0, "-", "adaptive_soft_matching"], [163, 0, 0, "-", "denspeed"], [163, 0, 0, "-", "enhancement_kernel"], [163, 0, 0, "-", "gibbs"], [163, 0, 0, "-", "localpca"], [163, 0, 0, "-", "nlmeans"], [163, 0, 0, "-", "nlmeans_block"], [163, 0, 0, "-", "noise_estimate"], [163, 0, 0, "-", "non_local_means"], [163, 0, 0, "-", "patch2self"], [163, 0, 0, "-", "pca_noise_estimate"], [163, 0, 0, "-", "shift_twist_convolution"]], "dipy.denoise.adaptive_soft_matching": [[163, 3, 1, "", "adaptive_soft_matching"]], "dipy.denoise.denspeed": [[163, 3, 1, "", "add_padding_reflection"], [163, 3, 1, "", "correspond_indices"], [163, 3, 1, "", "determine_num_threads"], [163, 3, 1, "", "nlmeans_3d"], [163, 3, 1, "", "remove_padding"]], "dipy.denoise.enhancement_kernel": [[163, 1, 1, "", "EnhancementKernel"], [163, 1, 1, "", "HemiSphere"], [163, 1, 1, "", "Sphere"], [163, 3, 1, "", "ceil"], [163, 3, 1, "", "disperse_charges"], [163, 3, 1, "", "get_sphere"], [163, 3, 1, "", "gettempdir"]], "dipy.denoise.enhancement_kernel.EnhancementKernel": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "evaluate_kernel"], [163, 2, 1, "", "get_lookup_table"], [163, 2, 1, "", "get_orientations"], [163, 2, 1, "", "get_sphere"]], "dipy.denoise.enhancement_kernel.HemiSphere": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "faces"], [163, 2, 1, "", "find_closest"], [163, 2, 1, "", "from_sphere"], [163, 2, 1, "", "mirror"], [163, 2, 1, "", "subdivide"]], "dipy.denoise.enhancement_kernel.Sphere": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "edges"], [163, 2, 1, "", "faces"], [163, 2, 1, "", "find_closest"], [163, 2, 1, "", "subdivide"], [163, 2, 1, "", "vertices"], [163, 5, 1, "", "x"], [163, 5, 1, "", "y"], [163, 5, 1, "", "z"]], "dipy.denoise.gibbs": [[163, 3, 1, "", "gibbs_removal"]], "dipy.denoise.localpca": [[163, 3, 1, "", "genpca"], [163, 3, 1, "", "localpca"], [163, 3, 1, "", "mppca"]], "dipy.denoise.nlmeans": [[163, 3, 1, "", "nlmeans"]], "dipy.denoise.nlmeans_block": [[163, 3, 1, "", "firdn"], [163, 3, 1, "", "nlmeans_block"], [163, 3, 1, "", "upfir"]], "dipy.denoise.noise_estimate": [[163, 3, 1, "", "estimate_sigma"], [163, 3, 1, "", "piesno"]], "dipy.denoise.non_local_means": [[163, 3, 1, "", "non_local_means"]], "dipy.denoise.patch2self": [[163, 3, 1, "", "patch2self"]], "dipy.denoise.pca_noise_estimate": [[163, 3, 1, "", "pca_noise_estimate"], [163, 3, 1, "", "warn"]], "dipy.denoise.shift_twist_convolution": [[163, 3, 1, "", "convolve"], [163, 3, 1, "", "convolve_sf"], [163, 3, 1, "", "determine_num_threads"], [163, 3, 1, "", "sf_to_sh"], [163, 3, 1, "", "sh_to_sf"]], "dipy.direction": [[164, 0, 0, "-", "bootstrap_direction_getter"], [164, 0, 0, "-", "closest_peak_direction_getter"], [164, 0, 0, "-", "peaks"], [164, 0, 0, "-", "pmf"], [164, 0, 0, "-", "probabilistic_direction_getter"], [164, 0, 0, "-", "ptt_direction_getter"]], "dipy.direction.bootstrap_direction_getter": [[164, 1, 1, "", "BootDirectionGetter"], [164, 1, 1, "", "BootPmfGen"]], "dipy.direction.bootstrap_direction_getter.BootDirectionGetter": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "from_data"]], "dipy.direction.bootstrap_direction_getter.BootPmfGen": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "get_pmf"], [164, 2, 1, "", "get_pmf_no_boot"]], "dipy.direction.closest_peak_direction_getter": [[164, 1, 1, "", "BaseDirectionGetter"], [164, 1, 1, "", "BasePmfDirectionGetter"], [164, 1, 1, "", "ClosestPeakDirectionGetter"], [164, 1, 1, "", "PmfGenDirectionGetter"], [164, 3, 1, "", "peak_directions"]], "dipy.direction.closest_peak_direction_getter.BaseDirectionGetter": [[164, 2, 1, "", "__init__"]], "dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "initial_direction"]], "dipy.direction.closest_peak_direction_getter.ClosestPeakDirectionGetter": [[164, 2, 1, "", "__init__"]], "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "from_pmf"], [164, 2, 1, "", "from_shcoeff"]], "dipy.direction.peaks": [[164, 1, 1, "", "PeaksAndMetrics"], [164, 3, 1, "", "peak_directions"], [164, 3, 1, "", "peak_directions_nl"], [164, 3, 1, "", "peaks_from_model"], [164, 3, 1, "", "reshape_peaks_for_visualization"]], "dipy.direction.peaks.PeaksAndMetrics": [[164, 2, 1, "", "__init__"]], "dipy.direction.pmf": [[164, 1, 1, "", "BootPmfGen"], [164, 1, 1, "", "PmfGen"], [164, 1, 1, "", "SHCoeffPmfGen"], [164, 1, 1, "", "SimplePmfGen"]], "dipy.direction.pmf.BootPmfGen": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "get_pmf"], [164, 2, 1, "", "get_pmf_no_boot"]], "dipy.direction.pmf.PmfGen": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "get_pmf"], [164, 2, 1, "", "get_pmf_value"]], "dipy.direction.pmf.SHCoeffPmfGen": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "get_pmf"]], "dipy.direction.pmf.SimplePmfGen": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "get_pmf"], [164, 2, 1, "", "get_pmf_value"]], "dipy.direction.probabilistic_direction_getter": [[164, 1, 1, "", "DeterministicMaximumDirectionGetter"], [164, 1, 1, "", "ProbabilisticDirectionGetter"], [164, 3, 1, "", "random"]], "dipy.direction.probabilistic_direction_getter.DeterministicMaximumDirectionGetter": [[164, 2, 1, "", "__init__"]], "dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter": [[164, 2, 1, "", "__init__"]], "dipy.direction.ptt_direction_getter": [[164, 1, 1, "", "PTTDirectionGetter"], [164, 3, 1, "", "min_radius_curvature_from_angle"]], "dipy.direction.ptt_direction_getter.PTTDirectionGetter": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "generate_streamline"]], "dipy.io": [[165, 0, 0, "-", "bvectxt"], [165, 0, 0, "-", "dpy"], [165, 0, 0, "-", "gradients"], [165, 0, 0, "-", "image"], [165, 0, 0, "-", "peaks"], [165, 0, 0, "-", "pickles"], [165, 0, 0, "-", "stateful_tractogram"], [165, 0, 0, "-", "streamline"], [165, 0, 0, "-", "utils"], [165, 0, 0, "-", "vtk"]], "dipy.io.bvectxt": [[165, 3, 1, "", "orientation_from_string"], [165, 3, 1, "", "orientation_to_string"], [165, 3, 1, "", "ornt_mapping"], [165, 3, 1, "", "read_bvec_file"], [165, 3, 1, "", "reorient_on_axis"], [165, 3, 1, "", "reorient_vectors"]], "dipy.io.dpy": [[165, 1, 1, "", "Dpy"]], "dipy.io.dpy.Dpy": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "close"], [165, 2, 1, "", "read_track"], [165, 2, 1, "", "read_tracks"], [165, 2, 1, "", "read_tracksi"], [165, 2, 1, "", "version"], [165, 2, 1, "", "write_track"], [165, 2, 1, "", "write_tracks"]], "dipy.io.gradients": [[165, 3, 1, "", "read_bvals_bvecs"]], "dipy.io.image": [[165, 3, 1, "", "load_nifti"], [165, 3, 1, "", "load_nifti_data"], [165, 3, 1, "", "save_nifti"], [165, 3, 1, "", "save_qa_metric"]], "dipy.io.peaks": [[165, 3, 1, "", "load_peaks"], [165, 3, 1, "", "peaks_to_niftis"], [165, 3, 1, "", "save_peaks"]], "dipy.io.pickles": [[165, 3, 1, "", "load_pickle"], [165, 3, 1, "", "save_pickle"]], "dipy.io.stateful_tractogram": [[165, 1, 1, "", "Origin"], [165, 1, 1, "", "Space"], [165, 1, 1, "", "StatefulTractogram"], [165, 3, 1, "", "logger"], [165, 3, 1, "", "set_sft_logger_level"]], "dipy.io.stateful_tractogram.Origin": [[165, 4, 1, "", "NIFTI"], [165, 4, 1, "", "TRACKVIS"], [165, 2, 1, "", "__init__"]], "dipy.io.stateful_tractogram.Space": [[165, 4, 1, "", "RASMM"], [165, 4, 1, "", "VOX"], [165, 4, 1, "", "VOXMM"], [165, 2, 1, "", "__init__"]], "dipy.io.stateful_tractogram.StatefulTractogram": [[165, 2, 1, "", "__init__"], [165, 5, 1, "", "affine"], [165, 2, 1, "", "are_compatible"], [165, 2, 1, "", "compute_bounding_box"], [165, 5, 1, "", "data_per_point"], [165, 5, 1, "", "data_per_streamline"], [165, 5, 1, "", "dimensions"], [165, 5, 1, "", "dtype_dict"], [165, 2, 1, "", "from_sft"], [165, 2, 1, "", "get_data_per_point_keys"], [165, 2, 1, "", "get_data_per_streamline_keys"], [165, 2, 1, "", "get_streamlines_copy"], [165, 2, 1, "", "is_bbox_in_vox_valid"], [165, 5, 1, "", "origin"], [165, 2, 1, "", "remove_invalid_streamlines"], [165, 5, 1, "", "space"], [165, 5, 1, "", "space_attributes"], [165, 5, 1, "", "streamlines"], [165, 2, 1, "", "to_center"], [165, 2, 1, "", "to_corner"], [165, 2, 1, "", "to_origin"], [165, 2, 1, "", "to_rasmm"], [165, 2, 1, "", "to_space"], [165, 2, 1, "", "to_vox"], [165, 2, 1, "", "to_voxmm"], [165, 5, 1, "", "voxel_order"], [165, 5, 1, "", "voxel_sizes"]], "dipy.io.streamline": [[165, 3, 1, "", "load_dpy"], [165, 3, 1, "", "load_fib"], [165, 3, 1, "", "load_generator"], [165, 3, 1, "", "load_tck"], [165, 3, 1, "", "load_tractogram"], [165, 3, 1, "", "load_trk"], [165, 3, 1, "", "load_vtk"], [165, 3, 1, "", "load_vtp"], [165, 3, 1, "", "save_dpy"], [165, 3, 1, "", "save_fib"], [165, 3, 1, "", "save_generator"], [165, 3, 1, "", "save_tck"], [165, 3, 1, "", "save_tractogram"], [165, 3, 1, "", "save_trk"], [165, 3, 1, "", "save_vtk"], [165, 3, 1, "", "save_vtp"]], "dipy.io.utils": [[165, 3, 1, "", "create_nifti_header"], [165, 3, 1, "", "create_tractogram_header"], [165, 3, 1, "", "decfa"], [165, 3, 1, "", "decfa_to_float"], [165, 3, 1, "", "get_reference_info"], [165, 3, 1, "", "is_header_compatible"], [165, 3, 1, "", "is_reference_info_valid"], [165, 3, 1, "", "make5d"], [165, 3, 1, "", "nifti1_symmat"], [165, 3, 1, "", "read_img_arr_or_path"], [165, 3, 1, "", "save_buan_profiles_hdf5"]], "dipy.io.vtk": [[165, 3, 1, "", "load_polydata"], [165, 3, 1, "", "load_vtk_streamlines"], [165, 3, 1, "", "save_polydata"], [165, 3, 1, "", "save_vtk_streamlines"]], "dipy.nn": [[166, 0, 0, "-", "cnn_1d_denoising"], [166, 0, 0, "-", "evac"], [166, 0, 0, "-", "histo_resdnn"], [166, 0, 0, "-", "model"], [166, 0, 0, "-", "synb0"], [166, 0, 0, "-", "utils"]], "dipy.nn.cnn_1d_denoising": [[166, 1, 1, "", "Cnn1DDenoiser"]], "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "compile"], [166, 2, 1, "", "evaluate"], [166, 2, 1, "", "fit"], [166, 2, 1, "", "load_weights"], [166, 2, 1, "", "predict"], [166, 2, 1, "", "save_weights"], [166, 2, 1, "", "summary"], [166, 2, 1, "", "train_test_split"]], "dipy.nn.evac": [[166, 1, 1, "", "Block"], [166, 1, 1, "", "ChannelSum"], [166, 1, 1, "", "EVACPlus"], [166, 3, 1, "", "init_model"], [166, 3, 1, "", "logger"], [166, 3, 1, "", "prepare_img"]], "dipy.nn.evac.Block": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "call"]], "dipy.nn.evac.ChannelSum": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "call"]], "dipy.nn.evac.EVACPlus": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "fetch_default_weights"], [166, 2, 1, "", "load_model_weights"], [166, 2, 1, "", "predict"]], "dipy.nn.histo_resdnn": [[166, 1, 1, "", "HistoResDNN"], [166, 3, 1, "", "logger"]], "dipy.nn.histo_resdnn.HistoResDNN": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "fetch_default_weights"], [166, 2, 1, "", "load_model_weights"], [166, 2, 1, "", "predict"]], "dipy.nn.model": [[166, 1, 1, "", "MultipleLayerPercepton"], [166, 1, 1, "", "SingleLayerPerceptron"]], "dipy.nn.model.MultipleLayerPercepton": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "evaluate"], [166, 2, 1, "", "fit"], [166, 2, 1, "", "predict"], [166, 2, 1, "", "summary"]], "dipy.nn.model.SingleLayerPerceptron": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "evaluate"], [166, 2, 1, "", "fit"], [166, 2, 1, "", "predict"], [166, 2, 1, "", "summary"]], "dipy.nn.synb0": [[166, 1, 1, "id69", "DecoderBlock"], [166, 1, 1, "id0", "EncoderBlock"], [166, 1, 1, "", "Synb0"], [166, 3, 1, "id90", "UNet3D"], [166, 3, 1, "", "logger"], [166, 3, 1, "", "normalize"], [166, 3, 1, "", "unnormalize"]], "dipy.nn.synb0.DecoderBlock": [[166, 2, 1, "id70", "__init__"], [166, 2, 1, "id71", "call"]], "dipy.nn.synb0.EncoderBlock": [[166, 2, 1, "id62", "__init__"], [166, 2, 1, "id63", "call"]], "dipy.nn.synb0.Synb0": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "fetch_default_weights"], [166, 2, 1, "", "load_model_weights"], [166, 2, 1, "", "predict"]], "dipy.nn.utils": [[166, 3, 1, "", "normalize"], [166, 3, 1, "", "recover_img"], [166, 3, 1, "", "set_logger_level"], [166, 3, 1, "", "transform_img"], [166, 3, 1, "", "unnormalize"]], "dipy.reconst": [[167, 0, 0, "-", "base"], [167, 0, 0, "-", "benchmarks"], [167, 0, 0, "-", "cache"], [167, 0, 0, "-", "cross_validation"], [167, 0, 0, "-", "csdeconv"], [167, 0, 0, "-", "cti"], [167, 0, 0, "-", "dki"], [167, 0, 0, "-", "dki_micro"], [167, 0, 0, "-", "dsi"], [167, 0, 0, "-", "dti"], [167, 0, 0, "-", "eudx_direction_getter"], [167, 0, 0, "-", "forecast"], [167, 0, 0, "-", "fwdti"], [167, 0, 0, "-", "gqi"], [167, 0, 0, "-", "ivim"], [167, 0, 0, "-", "mapmri"], [167, 0, 0, "-", "mcsd"], [167, 0, 0, "-", "msdki"], [167, 0, 0, "-", "multi_voxel"], [167, 0, 0, "-", "odf"], [167, 0, 0, "-", "qtdmri"], [167, 0, 0, "-", "qti"], [167, 0, 0, "-", "quick_squash"], [167, 0, 0, "-", "recspeed"], [167, 0, 0, "-", "rumba"], [167, 0, 0, "-", "sfm"], [167, 0, 0, "-", "shm"], [167, 0, 0, "-", "shore"], [167, 0, 0, "-", "utils"], [167, 0, 0, "-", "vec_val_sum"]], "dipy.reconst.base": [[167, 1, 1, "", "ReconstFit"], [167, 1, 1, "", "ReconstModel"]], "dipy.reconst.base.ReconstFit": [[167, 2, 1, "", "__init__"]], "dipy.reconst.base.ReconstModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fit"]], "dipy.reconst.benchmarks": [[167, 0, 0, "-", "bench_bounding_box"], [167, 0, 0, "-", "bench_csd"], [167, 0, 0, "-", "bench_peaks"], [167, 0, 0, "-", "bench_squash"], [167, 0, 0, "-", "bench_vec_val_sum"]], "dipy.reconst.benchmarks.bench_bounding_box": [[167, 3, 1, "", "bench_bounding_box"]], "dipy.reconst.benchmarks.bench_csd": [[167, 3, 1, "", "bench_csdeconv"], [167, 3, 1, "", "num_grad"]], "dipy.reconst.benchmarks.bench_peaks": [[167, 3, 1, "", "bench_local_maxima"]], "dipy.reconst.benchmarks.bench_squash": [[167, 3, 1, "", "bench_quick_squash"], [167, 3, 1, "", "old_squash"]], "dipy.reconst.benchmarks.bench_vec_val_sum": [[167, 3, 1, "", "bench_vec_val_vect"]], "dipy.reconst.cache": [[167, 1, 1, "", "Cache"]], "dipy.reconst.cache.Cache": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "cache_clear"], [167, 2, 1, "", "cache_get"], [167, 2, 1, "", "cache_set"]], "dipy.reconst.cross_validation": [[167, 3, 1, "", "coeff_of_determination"], [167, 3, 1, "", "kfold_xval"]], "dipy.reconst.csdeconv": [[167, 1, 1, "", "AxSymShResponse"], [167, 1, 1, "", "ConstrainedSDTModel"], [167, 1, 1, "", "ConstrainedSphericalDeconvModel"], [167, 3, 1, "", "auto_response"], [167, 3, 1, "", "auto_response_ssst"], [167, 3, 1, "", "csdeconv"], [167, 3, 1, "", "estimate_response"], [167, 3, 1, "", "fa_trace_to_lambdas"], [167, 3, 1, "", "forward_sdt_deconv_mat"], [167, 3, 1, "", "mask_for_response_ssst"], [167, 3, 1, "", "odf_deconv"], [167, 3, 1, "", "odf_sh_to_sharp"], [167, 3, 1, "", "recursive_response"], [167, 3, 1, "", "response_from_mask"], [167, 3, 1, "", "response_from_mask_ssst"]], "dipy.reconst.csdeconv.AxSymShResponse": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "basis"], [167, 2, 1, "", "on_sphere"]], "dipy.reconst.csdeconv.ConstrainedSDTModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fit"]], "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fit"], [167, 2, 1, "", "predict"]], "dipy.reconst.cti": [[167, 1, 1, "", "CorrelationTensorFit"], [167, 1, 1, "", "CorrelationTensorModel"], [167, 3, 1, "", "cti_prediction"], [167, 3, 1, "", "from_qte_to_cti"], [167, 3, 1, "", "ls_fit_cti"], [167, 3, 1, "", "multi_gaussian_k_from_c"], [167, 3, 1, "", "params_to_cti_params"], [167, 3, 1, "", "split_cti_params"]], "dipy.reconst.cti.CorrelationTensorFit": [[167, 5, 1, "", "K_aniso"], [167, 5, 1, "", "K_iso"], [167, 5, 1, "", "K_micro"], [167, 2, 1, "", "K_total"], [167, 2, 1, "", "__init__"], [167, 5, 1, "", "ct"], [167, 2, 1, "", "predict"]], "dipy.reconst.cti.CorrelationTensorModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fit"], [167, 2, 1, "", "predict"]], "dipy.reconst.dki": [[167, 1, 1, "", "DiffusionKurtosisFit"], [167, 1, 1, "", "DiffusionKurtosisModel"], [167, 3, 1, "", "Wcons"], [167, 3, 1, "", "Wrotate"], [167, 3, 1, "", "Wrotate_element"], [167, 3, 1, "", "apparent_kurtosis_coef"], [167, 3, 1, "", "axial_kurtosis"], [167, 3, 1, "", "carlson_rd"], [167, 3, 1, "", "carlson_rf"], [167, 3, 1, "", "cls_fit_dki"], [167, 3, 1, "", "directional_diffusion"], [167, 3, 1, "", "directional_diffusion_variance"], [167, 3, 1, "", "directional_kurtosis"], [167, 3, 1, "", "dki_prediction"], [167, 3, 1, "", "kurtosis_fractional_anisotropy"], [167, 3, 1, "", "kurtosis_maximum"], [167, 3, 1, "", "ls_fit_dki"], [167, 3, 1, "", "mean_kurtosis"], [167, 3, 1, "", "mean_kurtosis_tensor"], [167, 3, 1, "", "params_to_dki_params"], [167, 3, 1, "", "radial_kurtosis"], [167, 3, 1, "", "split_dki_param"]], "dipy.reconst.dki.DiffusionKurtosisFit": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "ak"], [167, 2, 1, "", "akc"], [167, 5, 1, "", "kfa"], [167, 2, 1, "", "kmax"], [167, 5, 1, "", "kt"], [167, 2, 1, "", "mk"], [167, 2, 1, "", "mkt"], [167, 2, 1, "", "predict"], [167, 2, 1, "", "rk"]], "dipy.reconst.dki.DiffusionKurtosisModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fit"], [167, 2, 1, "", "multi_fit"], [167, 2, 1, "", "predict"]], "dipy.reconst.dki_micro": [[167, 1, 1, "", "KurtosisMicrostructuralFit"], [167, 1, 1, "", "KurtosisMicrostructureModel"], [167, 3, 1, "", "axonal_water_fraction"], [167, 3, 1, "", "diffusion_components"], [167, 3, 1, "", "dkimicro_prediction"], [167, 3, 1, "", "tortuosity"]], "dipy.reconst.dki_micro.KurtosisMicrostructuralFit": [[167, 2, 1, "", "__init__"], [167, 5, 1, "", "awf"], [167, 5, 1, "", "axonal_diffusivity"], [167, 5, 1, "", "hindered_ad"], [167, 5, 1, "", "hindered_evals"], [167, 5, 1, "", "hindered_rd"], [167, 2, 1, "", "predict"], [167, 5, 1, "", "restricted_evals"], [167, 5, 1, "", "tortuosity"]], "dipy.reconst.dki_micro.KurtosisMicrostructureModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fit"], [167, 2, 1, "", "predict"]], "dipy.reconst.dsi": [[167, 1, 1, "", "DiffusionSpectrumDeconvFit"], [167, 1, 1, "", "DiffusionSpectrumDeconvModel"], [167, 1, 1, "", "DiffusionSpectrumFit"], [167, 1, 1, "", "DiffusionSpectrumModel"], [167, 3, 1, "", "LR_deconv"], [167, 3, 1, "", "create_qspace"], [167, 3, 1, "", "create_qtable"], [167, 3, 1, "", "gen_PSF"], [167, 3, 1, "", "half_to_full_qspace"], [167, 3, 1, "", "hanning_filter"], [167, 3, 1, "", "pdf_interp_coords"], [167, 3, 1, "", "pdf_odf"], [167, 3, 1, "", "project_hemisph_bvecs"], [167, 3, 1, "", "threshold_propagator"]], "dipy.reconst.dsi.DiffusionSpectrumDeconvFit": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "pdf"]], "dipy.reconst.dsi.DiffusionSpectrumDeconvModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fit"]], "dipy.reconst.dsi.DiffusionSpectrumFit": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "msd_discrete"], [167, 2, 1, "", "odf"], [167, 2, 1, "", "pdf"], [167, 2, 1, "", "rtop_pdf"], [167, 2, 1, "", "rtop_signal"]], "dipy.reconst.dsi.DiffusionSpectrumModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fit"]], "dipy.reconst.dti": [[167, 1, 1, "", "TensorFit"], [167, 1, 1, "", "TensorModel"], [167, 3, 1, "", "_lt_cols"], [167, 3, 1, "", "_lt_indices"], [167, 3, 1, "", "_lt_rows"], [167, 3, 1, "", "apparent_diffusion_coef"], [167, 3, 1, "", "axial_diffusivity"], [167, 3, 1, "", "color_fa"], [167, 3, 1, "", "decompose_tensor"], [167, 3, 1, "", "design_matrix"], [167, 3, 1, "", "determinant"], [167, 3, 1, "", "deviatoric"], [167, 3, 1, "", "eig_from_lo_tri"], [167, 3, 1, "", "fractional_anisotropy"], [167, 3, 1, "", "from_lower_triangular"], [167, 3, 1, "", "geodesic_anisotropy"], [167, 3, 1, "", "isotropic"], [167, 3, 1, "", "iter_fit_tensor"], [167, 3, 1, "", "linearity"], [167, 3, 1, "", "lower_triangular"], [167, 3, 1, "", "mean_diffusivity"], [167, 3, 1, "", "mode"], [167, 3, 1, "", "nlls_fit_tensor"], [167, 3, 1, "", "norm"], [167, 3, 1, "", "ols_fit_tensor"], [167, 3, 1, "", "planarity"], [167, 3, 1, "", "quantize_evecs"], [167, 3, 1, "", "radial_diffusivity"], [167, 3, 1, "", "restore_fit_tensor"], [167, 3, 1, "", "sphericity"], [167, 3, 1, "", "tensor_prediction"], [167, 3, 1, "", "trace"], [167, 3, 1, "", "wls_fit_tensor"]], "dipy.reconst.dti.TensorFit": [[167, 5, 1, "", "S0_hat"], [167, 2, 1, "", "__init__"], [167, 2, 1, "", "ad"], [167, 2, 1, "", "adc"], [167, 2, 1, "", "color_fa"], [167, 5, 1, "", "directions"], [167, 5, 1, "", "evals"], [167, 5, 1, "", "evecs"], [167, 2, 1, "", "fa"], [167, 2, 1, "", "ga"], [167, 2, 1, "", "linearity"], [167, 2, 1, "", "lower_triangular"], [167, 2, 1, "", "md"], [167, 2, 1, "", "mode"], [167, 2, 1, "", "odf"], [167, 2, 1, "", "planarity"], [167, 2, 1, "", "predict"], [167, 5, 1, "", "quadratic_form"], [167, 2, 1, "", "rd"], [167, 5, 1, "", "shape"], [167, 2, 1, "", "sphericity"], [167, 2, 1, "", "trace"]], "dipy.reconst.dti.TensorModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fit"], [167, 2, 1, "", "predict"]], "dipy.reconst.eudx_direction_getter": [[167, 1, 1, "", "EuDXDirectionGetter"]], "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter": [[167, 2, 1, "", "__init__"], [167, 4, 1, "", "ang_thr"], [167, 2, 1, "", "initial_direction"], [167, 4, 1, "", "qa_thr"], [167, 4, 1, "", "total_weight"]], "dipy.reconst.forecast": [[167, 1, 1, "", "ForecastFit"], [167, 1, 1, "", "ForecastModel"], [167, 3, 1, "", "find_signal_means"], [167, 3, 1, "", "forecast_error_func"], [167, 3, 1, "", "forecast_matrix"], [167, 3, 1, "", "lb_forecast"], [167, 3, 1, "", "psi_l"], [167, 3, 1, "", "rho_matrix"]], "dipy.reconst.forecast.ForecastFit": [[167, 2, 1, "", "__init__"], [167, 5, 1, "", "dpar"], [167, 5, 1, "", "dperp"], [167, 2, 1, "", "fractional_anisotropy"], [167, 2, 1, "", "mean_diffusivity"], [167, 2, 1, "", "odf"], [167, 2, 1, "", "predict"], [167, 5, 1, "", "sh_coeff"]], "dipy.reconst.forecast.ForecastModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fit"]], "dipy.reconst.fwdti": [[167, 1, 1, "", "FreeWaterTensorFit"], [167, 1, 1, "", "FreeWaterTensorModel"], [167, 3, 1, "", "cholesky_to_lower_triangular"], [167, 3, 1, "", "fwdti_prediction"], [167, 3, 1, "", "lower_triangular_to_cholesky"], [167, 3, 1, "", "nls_fit_tensor"], [167, 3, 1, "", "nls_iter"], [167, 3, 1, "", "wls_fit_tensor"], [167, 3, 1, "", "wls_iter"]], "dipy.reconst.fwdti.FreeWaterTensorFit": [[167, 2, 1, "", "__init__"], [167, 5, 1, "", "f"], [167, 2, 1, "", "predict"]], "dipy.reconst.fwdti.FreeWaterTensorModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fit"], [167, 2, 1, "", "predict"]], "dipy.reconst.gqi": [[167, 1, 1, "", "GeneralizedQSamplingFit"], [167, 1, 1, "", "GeneralizedQSamplingModel"], [167, 3, 1, "", "equatorial_maximum"], [167, 3, 1, "", "equatorial_zone_vertices"], [167, 3, 1, "", "normalize_qa"], [167, 3, 1, "", "npa"], [167, 3, 1, "", "odf_sum"], [167, 3, 1, "", "patch_maximum"], [167, 3, 1, "", "patch_sum"], [167, 3, 1, "", "patch_vertices"], [167, 3, 1, "", "polar_zone_vertices"], [167, 3, 1, "", "squared_radial_component"], [167, 3, 1, "", "triple_odf_maxima"], [167, 3, 1, "", "upper_hemi_map"]], "dipy.reconst.gqi.GeneralizedQSamplingFit": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "odf"]], "dipy.reconst.gqi.GeneralizedQSamplingModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fit"]], "dipy.reconst.ivim": [[167, 1, 1, "", "IvimFit"], [167, 1, 1, "", "IvimModelTRR"], [167, 1, 1, "", "IvimModelVP"], [167, 3, 1, "", "f_D_star_error"], [167, 3, 1, "", "f_D_star_prediction"], [167, 3, 1, "", "ivim_model_selector"], [167, 3, 1, "", "ivim_prediction"]], "dipy.reconst.ivim.IvimFit": [[167, 5, 1, "", "D"], [167, 5, 1, "", "D_star"], [167, 5, 1, "", "S0_predicted"], [167, 2, 1, "", "__init__"], [167, 5, 1, "", "perfusion_fraction"], [167, 2, 1, "", "predict"], [167, 5, 1, "", "shape"]], "dipy.reconst.ivim.IvimModelTRR": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "estimate_f_D_star"], [167, 2, 1, "", "estimate_linear_fit"], [167, 2, 1, "", "fit"], [167, 2, 1, "", "predict"]], "dipy.reconst.ivim.IvimModelVP": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "cvx_fit"], [167, 2, 1, "", "fit"], [167, 2, 1, "", "ivim_mix_cost_one"], [167, 2, 1, "", "nlls_cost"], [167, 2, 1, "", "phi"], [167, 2, 1, "", "stoc_search_cost"], [167, 2, 1, "", "x_and_f_to_x_f"], [167, 2, 1, "", "x_f_to_x_and_f"]], "dipy.reconst.mapmri": [[167, 1, 1, "", "MapmriFit"], [167, 1, 1, "", "MapmriModel"], [167, 3, 1, "", "b_mat"], [167, 3, 1, "", "b_mat_isotropic"], [167, 3, 1, "", "binomialfloat"], [167, 3, 1, "", "create_rspace"], [167, 3, 1, "", "delta"], [167, 3, 1, "", "gcv_cost_function"], [167, 3, 1, "", "generalized_crossvalidation"], [167, 3, 1, "", "generalized_crossvalidation_array"], [167, 3, 1, "", "isotropic_scale_factor"], [167, 3, 1, "", "map_laplace_s"], [167, 3, 1, "", "map_laplace_t"], [167, 3, 1, "", "map_laplace_u"], [167, 3, 1, "", "mapmri_STU_reg_matrices"], [167, 3, 1, "", "mapmri_index_matrix"], [167, 3, 1, "", "mapmri_isotropic_K_mu_dependent"], [167, 3, 1, "", "mapmri_isotropic_K_mu_independent"], [167, 3, 1, "", "mapmri_isotropic_M_mu_dependent"], [167, 3, 1, "", "mapmri_isotropic_M_mu_independent"], [167, 3, 1, "", "mapmri_isotropic_index_matrix"], [167, 3, 1, "", "mapmri_isotropic_laplacian_reg_matrix"], [167, 3, 1, "", "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix"], [167, 3, 1, "", "mapmri_isotropic_odf_matrix"], [167, 3, 1, "", "mapmri_isotropic_odf_sh_matrix"], [167, 3, 1, "", "mapmri_isotropic_phi_matrix"], [167, 3, 1, "", "mapmri_isotropic_psi_matrix"], [167, 3, 1, "", "mapmri_isotropic_radial_pdf_basis"], [167, 3, 1, "", "mapmri_isotropic_radial_signal_basis"], [167, 3, 1, "", "mapmri_laplacian_reg_matrix"], [167, 3, 1, "", "mapmri_odf_matrix"], [167, 3, 1, "", "mapmri_phi_1d"], [167, 3, 1, "", "mapmri_phi_matrix"], [167, 3, 1, "", "mapmri_psi_1d"], [167, 3, 1, "", "mapmri_psi_matrix"]], "dipy.reconst.mapmri.MapmriFit": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fitted_signal"], [167, 5, 1, "", "mapmri_R"], [167, 5, 1, "", "mapmri_coeff"], [167, 5, 1, "", "mapmri_mu"], [167, 2, 1, "", "msd"], [167, 2, 1, "", "ng"], [167, 2, 1, "", "ng_parallel"], [167, 2, 1, "", "ng_perpendicular"], [167, 2, 1, "", "norm_of_laplacian_signal"], [167, 2, 1, "", "odf"], [167, 2, 1, "", "odf_sh"], [167, 2, 1, "", "pdf"], [167, 2, 1, "", "predict"], [167, 2, 1, "", "qiv"], [167, 2, 1, "", "rtap"], [167, 2, 1, "", "rtop"], [167, 2, 1, "", "rtpp"]], "dipy.reconst.mapmri.MapmriModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fit"]], "dipy.reconst.mcsd": [[167, 1, 1, "", "MSDeconvFit"], [167, 1, 1, "", "MultiShellDeconvModel"], [167, 1, 1, "", "MultiShellResponse"], [167, 1, 1, "", "QpFitter"], [167, 3, 1, "", "auto_response_msmt"], [167, 3, 1, "", "mask_for_response_msmt"], [167, 3, 1, "", "multi_shell_fiber_response"], [167, 3, 1, "", "multi_tissue_basis"], [167, 3, 1, "", "response_from_mask_msmt"], [167, 3, 1, "", "solve_qp"]], "dipy.reconst.mcsd.MSDeconvFit": [[167, 2, 1, "", "__init__"], [167, 5, 1, "", "all_shm_coeff"], [167, 5, 1, "", "shm_coeff"], [167, 5, 1, "", "volume_fractions"]], "dipy.reconst.mcsd.MultiShellDeconvModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fit"], [167, 2, 1, "", "predict"]], "dipy.reconst.mcsd.MultiShellResponse": [[167, 2, 1, "", "__init__"], [167, 5, 1, "", "iso"]], "dipy.reconst.mcsd.QpFitter": [[167, 2, 1, "", "__init__"]], "dipy.reconst.msdki": [[167, 1, 1, "", "MeanDiffusionKurtosisFit"], [167, 1, 1, "", "MeanDiffusionKurtosisModel"], [167, 3, 1, "", "awf_from_msk"], [167, 3, 1, "", "design_matrix"], [167, 3, 1, "", "mean_signal_bvalue"], [167, 3, 1, "", "msdki_prediction"], [167, 3, 1, "", "msk_from_awf"], [167, 3, 1, "", "wls_fit_msdki"]], "dipy.reconst.msdki.MeanDiffusionKurtosisFit": [[167, 5, 1, "", "S0_hat"], [167, 2, 1, "", "__init__"], [167, 2, 1, "", "msd"], [167, 2, 1, "", "msk"], [167, 2, 1, "", "predict"], [167, 2, 1, "", "smt2di"], [167, 2, 1, "", "smt2f"], [167, 2, 1, "", "smt2uFA"]], "dipy.reconst.msdki.MeanDiffusionKurtosisModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fit"], [167, 2, 1, "", "predict"]], "dipy.reconst.multi_voxel": [[167, 1, 1, "", "CallableArray"], [167, 1, 1, "", "MultiVoxelFit"], [167, 3, 1, "", "multi_voxel_fit"]], "dipy.reconst.multi_voxel.CallableArray": [[167, 2, 1, "", "__init__"]], "dipy.reconst.multi_voxel.MultiVoxelFit": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "predict"], [167, 5, 1, "", "shape"]], "dipy.reconst.odf": [[167, 1, 1, "", "OdfFit"], [167, 1, 1, "", "OdfModel"], [167, 3, 1, "", "gfa"], [167, 3, 1, "", "minmax_normalize"]], "dipy.reconst.odf.OdfFit": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "odf"]], "dipy.reconst.odf.OdfModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fit"]], "dipy.reconst.qtdmri": [[167, 3, 1, "", "GCV_cost_function"], [167, 3, 1, "", "H"], [167, 1, 1, "", "QtdmriFit"], [167, 1, 1, "", "QtdmriModel"], [167, 3, 1, "", "angular_basis_EAP_opt"], [167, 3, 1, "", "angular_basis_opt"], [167, 3, 1, "", "create_rt_space_grid"], [167, 3, 1, "", "design_matrix_spatial"], [167, 3, 1, "", "elastic_crossvalidation"], [167, 3, 1, "", "generalized_crossvalidation"], [167, 3, 1, "", "l1_crossvalidation"], [167, 3, 1, "", "part1_reg_matrix_tau"], [167, 3, 1, "", "part23_iso_reg_matrix_q"], [167, 3, 1, "", "part23_reg_matrix_q"], [167, 3, 1, "", "part23_reg_matrix_tau"], [167, 3, 1, "", "part4_iso_reg_matrix_q"], [167, 3, 1, "", "part4_reg_matrix_q"], [167, 3, 1, "", "part4_reg_matrix_tau"], [167, 3, 1, "", "qtdmri_anisotropic_scaling"], [167, 3, 1, "", "qtdmri_eap_matrix"], [167, 3, 1, "", "qtdmri_eap_matrix_"], [167, 3, 1, "", "qtdmri_index_matrix"], [167, 3, 1, "", "qtdmri_isotropic_eap_matrix"], [167, 3, 1, "", "qtdmri_isotropic_eap_matrix_"], [167, 3, 1, "", "qtdmri_isotropic_index_matrix"], [167, 3, 1, "", "qtdmri_isotropic_laplacian_reg_matrix"], [167, 3, 1, "", "qtdmri_isotropic_scaling"], [167, 3, 1, "", "qtdmri_isotropic_signal_matrix"], [167, 3, 1, "", "qtdmri_isotropic_signal_matrix_"], [167, 3, 1, "", "qtdmri_isotropic_to_mapmri_matrix"], [167, 3, 1, "", "qtdmri_laplacian_reg_matrix"], [167, 3, 1, "", "qtdmri_mapmri_isotropic_normalization"], [167, 3, 1, "", "qtdmri_mapmri_normalization"], [167, 3, 1, "", "qtdmri_number_of_coefficients"], [167, 3, 1, "", "qtdmri_signal_matrix"], [167, 3, 1, "", "qtdmri_signal_matrix_"], [167, 3, 1, "", "qtdmri_temporal_normalization"], [167, 3, 1, "", "qtdmri_to_mapmri_matrix"], [167, 3, 1, "", "radial_basis_EAP_opt"], [167, 3, 1, "", "radial_basis_opt"], [167, 3, 1, "", "temporal_basis"], [167, 3, 1, "", "visualise_gradient_table_G_Delta_rainbow"]], "dipy.reconst.qtdmri.QtdmriFit": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fitted_signal"], [167, 2, 1, "", "msd"], [167, 2, 1, "", "norm_of_laplacian_signal"], [167, 2, 1, "", "odf"], [167, 2, 1, "", "odf_sh"], [167, 2, 1, "", "pdf"], [167, 2, 1, "", "predict"], [167, 2, 1, "", "qiv"], [167, 2, 1, "", "qtdmri_to_mapmri_coef"], [167, 2, 1, "", "rtap"], [167, 2, 1, "", "rtop"], [167, 2, 1, "", "rtpp"], [167, 2, 1, "", "sparsity_abs"], [167, 2, 1, "", "sparsity_density"]], "dipy.reconst.qtdmri.QtdmriModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fit"]], "dipy.reconst.qti": [[167, 1, 1, "", "QtiFit"], [167, 1, 1, "", "QtiModel"], [167, 3, 1, "", "cvxpy_1x21_to_6x6"], [167, 3, 1, "", "cvxpy_1x6_to_3x3"], [167, 3, 1, "", "design_matrix"], [167, 3, 1, "", "dtd_covariance"], [167, 3, 1, "", "from_21x1_to_6x6"], [167, 3, 1, "", "from_3x3_to_6x1"], [167, 3, 1, "", "from_6x1_to_3x3"], [167, 3, 1, "", "from_6x6_to_21x1"], [167, 3, 1, "", "qti_signal"]], "dipy.reconst.qti.QtiFit": [[167, 2, 1, "", "S0_hat"], [167, 2, 1, "", "__init__"], [167, 2, 1, "", "c_c"], [167, 2, 1, "", "c_m"], [167, 2, 1, "", "c_md"], [167, 2, 1, "", "c_mu"], [167, 2, 1, "", "d_sq"], [167, 2, 1, "", "fa"], [167, 2, 1, "", "k_bulk"], [167, 2, 1, "", "k_mu"], [167, 2, 1, "", "k_shear"], [167, 2, 1, "", "md"], [167, 2, 1, "", "mean_d_sq"], [167, 2, 1, "", "mk"], [167, 2, 1, "", "predict"], [167, 2, 1, "", "ufa"], [167, 2, 1, "", "v_iso"], [167, 2, 1, "", "v_md"], [167, 2, 1, "", "v_shear"]], "dipy.reconst.qti.QtiModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fit"], [167, 2, 1, "", "predict"]], "dipy.reconst.quick_squash": [[167, 3, 1, "", "quick_squash"], [167, 3, 1, "", "reduce"]], "dipy.reconst.recspeed": [[167, 3, 1, "", "adj_to_countarrs"], [167, 3, 1, "", "argmax_from_adj"], [167, 3, 1, "", "argmax_from_countarrs"], [167, 3, 1, "", "le_to_odf"], [167, 3, 1, "", "local_maxima"], [167, 3, 1, "", "proc_reco_args"], [167, 3, 1, "", "remove_similar_vertices"], [167, 3, 1, "", "search_descending"], [167, 3, 1, "", "sum_on_blocks_1d"]], "dipy.reconst.rumba": [[167, 1, 1, "", "RumbaFit"], [167, 1, 1, "", "RumbaSDModel"], [167, 3, 1, "", "generate_kernel"], [167, 3, 1, "", "logger"], [167, 3, 1, "", "mbessel_ratio"], [167, 3, 1, "", "rumba_deconv"], [167, 3, 1, "", "rumba_deconv_global"]], "dipy.reconst.rumba.RumbaFit": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "combined_odf_iso"], [167, 2, 1, "", "f_csf"], [167, 2, 1, "", "f_gm"], [167, 2, 1, "", "f_iso"], [167, 2, 1, "", "f_wm"], [167, 2, 1, "", "odf"], [167, 2, 1, "", "predict"]], "dipy.reconst.rumba.RumbaSDModel": [[167, 2, 1, "", "__init__"]], "dipy.reconst.sfm": [[167, 1, 1, "", "ExponentialIsotropicFit"], [167, 1, 1, "", "ExponentialIsotropicModel"], [167, 1, 1, "", "IsotropicFit"], [167, 1, 1, "", "IsotropicModel"], [167, 1, 1, "", "SparseFascicleFit"], [167, 1, 1, "", "SparseFascicleModel"], [167, 3, 1, "", "sfm_design_matrix"]], "dipy.reconst.sfm.ExponentialIsotropicFit": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "predict"]], "dipy.reconst.sfm.ExponentialIsotropicModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fit"]], "dipy.reconst.sfm.IsotropicFit": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "predict"]], "dipy.reconst.sfm.IsotropicModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fit"]], "dipy.reconst.sfm.SparseFascicleFit": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "odf"], [167, 2, 1, "", "predict"]], "dipy.reconst.sfm.SparseFascicleModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "design_matrix"], [167, 2, 1, "", "fit"]], "dipy.reconst.shm": [[167, 1, 1, "", "CsaOdfModel"], [167, 1, 1, "", "OpdtModel"], [167, 1, 1, "", "QballBaseModel"], [167, 1, 1, "", "QballModel"], [167, 1, 1, "", "ResidualBootstrapWrapper"], [167, 1, 1, "", "SphHarmFit"], [167, 1, 1, "", "SphHarmModel"], [167, 3, 1, "", "anisotropic_power"], [167, 3, 1, "", "bootstrap_data_array"], [167, 3, 1, "", "bootstrap_data_voxel"], [167, 3, 1, "", "calculate_max_order"], [167, 3, 1, "", "convert_sh_from_legacy"], [167, 3, 1, "", "convert_sh_to_full_basis"], [167, 3, 1, "", "convert_sh_to_legacy"], [167, 3, 1, "", "forward_sdeconv_mat"], [167, 3, 1, "", "gen_dirac"], [167, 3, 1, "", "hat"], [167, 3, 1, "", "lazy_index"], [167, 3, 1, "", "lcr_matrix"], [167, 3, 1, "", "normalize_data"], [167, 3, 1, "", "order_from_ncoef"], [167, 3, 1, "", "real_sh_descoteaux"], [167, 3, 1, "", "real_sh_descoteaux_from_index"], [167, 3, 1, "", "real_sh_tournier"], [167, 3, 1, "", "real_sh_tournier_from_index"], [167, 3, 1, "", "real_sph_harm"], [167, 3, 1, "", "real_sym_sh_basis"], [167, 3, 1, "", "real_sym_sh_mrtrix"], [167, 3, 1, "", "sf_to_sh"], [167, 3, 1, "", "sh_to_rh"], [167, 3, 1, "", "sh_to_sf"], [167, 3, 1, "", "sh_to_sf_matrix"], [167, 3, 1, "", "smooth_pinv"], [167, 3, 1, "", "sph_harm_ind_list"], [167, 3, 1, "", "spherical_harmonics"]], "dipy.reconst.shm.CsaOdfModel": [[167, 2, 1, "", "__init__"], [167, 4, 1, "", "max"], [167, 4, 1, "", "min"]], "dipy.reconst.shm.OpdtModel": [[167, 2, 1, "", "__init__"]], "dipy.reconst.shm.QballBaseModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fit"]], "dipy.reconst.shm.QballModel": [[167, 2, 1, "", "__init__"]], "dipy.reconst.shm.ResidualBootstrapWrapper": [[167, 2, 1, "", "__init__"]], "dipy.reconst.shm.SphHarmFit": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "gfa"], [167, 2, 1, "", "odf"], [167, 2, 1, "", "predict"], [167, 5, 1, "", "shape"], [167, 5, 1, "", "shm_coeff"]], "dipy.reconst.shm.SphHarmModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "sampling_matrix"]], "dipy.reconst.shore": [[167, 1, 1, "", "ShoreFit"], [167, 1, 1, "", "ShoreModel"], [167, 3, 1, "", "create_rspace"], [167, 3, 1, "", "l_shore"], [167, 3, 1, "", "n_shore"], [167, 3, 1, "", "shore_indices"], [167, 3, 1, "", "shore_matrix"], [167, 3, 1, "", "shore_matrix_odf"], [167, 3, 1, "", "shore_matrix_pdf"], [167, 3, 1, "", "shore_order"]], "dipy.reconst.shore.ShoreFit": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fitted_signal"], [167, 2, 1, "", "msd"], [167, 2, 1, "", "odf"], [167, 2, 1, "", "odf_sh"], [167, 2, 1, "", "pdf"], [167, 2, 1, "", "pdf_grid"], [167, 2, 1, "", "rtop_pdf"], [167, 2, 1, "", "rtop_signal"], [167, 5, 1, "", "shore_coeff"]], "dipy.reconst.shore.ShoreModel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "fit"]], "dipy.reconst.utils": [[167, 3, 1, "", "cti_design_matrix"], [167, 3, 1, "", "dki_design_matrix"]], "dipy.reconst.vec_val_sum": [[167, 3, 1, "", "vec_val_vect"]], "dipy.segment": [[168, 0, 0, "-", "benchmarks"], [168, 0, 0, "-", "bundles"], [168, 0, 0, "-", "clustering"], [168, 0, 0, "-", "clustering_algorithms"], [168, 0, 0, "-", "clusteringspeed"], [168, 0, 0, "-", "cythonutils"], [168, 0, 0, "-", "featurespeed"], [168, 0, 0, "-", "fss"], [168, 0, 0, "-", "mask"], [168, 0, 0, "-", "metric"], [168, 0, 0, "-", "metricspeed"], [168, 0, 0, "-", "mrf"], [168, 0, 0, "-", "threshold"], [168, 0, 0, "-", "tissue"]], "dipy.segment.benchmarks": [[168, 0, 0, "-", "bench_quickbundles"]], "dipy.segment.benchmarks.bench_quickbundles": [[168, 1, 1, "", "MDFpy"], [168, 3, 1, "", "bench_quickbundles"]], "dipy.segment.benchmarks.bench_quickbundles.MDFpy": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "are_compatible"], [168, 2, 1, "", "dist"]], "dipy.segment.bundles": [[168, 1, 1, "", "RecoBundles"], [168, 3, 1, "", "ba_analysis"], [168, 3, 1, "", "bundle_adjacency"], [168, 3, 1, "", "bundle_shape_similarity"], [168, 3, 1, "", "check_range"], [168, 3, 1, "", "cluster_bundle"], [168, 3, 1, "", "logger"]], "dipy.segment.bundles.RecoBundles": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "evaluate_results"], [168, 2, 1, "", "recognize"], [168, 2, 1, "", "refine"]], "dipy.segment.clustering": [[168, 1, 1, "", "Cluster"], [168, 1, 1, "", "ClusterCentroid"], [168, 1, 1, "", "ClusterMap"], [168, 1, 1, "", "ClusterMapCentroid"], [168, 1, 1, "", "Clustering"], [168, 1, 1, "", "Identity"], [168, 1, 1, "", "QuickBundles"], [168, 1, 1, "", "QuickBundlesX"], [168, 1, 1, "", "TreeCluster"], [168, 1, 1, "", "TreeClusterMap"], [168, 3, 1, "", "logger"], [168, 3, 1, "", "qbx_and_merge"]], "dipy.segment.clustering.Cluster": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "assign"]], "dipy.segment.clustering.ClusterCentroid": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "assign"], [168, 2, 1, "", "update"]], "dipy.segment.clustering.ClusterMap": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "add_cluster"], [168, 2, 1, "", "clear"], [168, 5, 1, "", "clusters"], [168, 2, 1, "", "clusters_sizes"], [168, 2, 1, "", "get_large_clusters"], [168, 2, 1, "", "get_small_clusters"], [168, 5, 1, "", "refdata"], [168, 2, 1, "", "remove_cluster"], [168, 2, 1, "", "size"]], "dipy.segment.clustering.ClusterMapCentroid": [[168, 2, 1, "", "__init__"], [168, 5, 1, "", "centroids"]], "dipy.segment.clustering.Clustering": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "cluster"]], "dipy.segment.clustering.Identity": [[168, 2, 1, "", "__init__"]], "dipy.segment.clustering.QuickBundles": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "cluster"]], "dipy.segment.clustering.QuickBundlesX": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "cluster"]], "dipy.segment.clustering.TreeCluster": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "add"], [168, 5, 1, "", "is_leaf"], [168, 2, 1, "", "return_indices"]], "dipy.segment.clustering.TreeClusterMap": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "get_clusters"], [168, 2, 1, "", "iter_preorder"], [168, 5, 1, "", "refdata"], [168, 2, 1, "", "traverse_postorder"]], "dipy.segment.clustering_algorithms": [[168, 1, 1, "", "ClusterCentroid"], [168, 1, 1, "", "ClusterMapCentroid"], [168, 4, 1, "", "DTYPE"], [168, 3, 1, "", "clusters_centroid2clustermap_centroid"], [168, 3, 1, "", "peek"], [168, 3, 1, "", "quickbundles"], [168, 3, 1, "", "quickbundlesx"]], "dipy.segment.clustering_algorithms.ClusterCentroid": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "assign"], [168, 2, 1, "", "update"]], "dipy.segment.clustering_algorithms.ClusterMapCentroid": [[168, 2, 1, "", "__init__"], [168, 5, 1, "", "centroids"]], "dipy.segment.clusteringspeed": [[168, 1, 1, "", "ClusterCentroid"], [168, 1, 1, "", "ClusterMapCentroid"], [168, 1, 1, "", "Clusters"], [168, 1, 1, "", "ClustersCentroid"], [168, 4, 1, "", "DTYPE"], [168, 1, 1, "", "QuickBundles"], [168, 1, 1, "", "QuickBundlesX"], [168, 1, 1, "", "TreeCluster"], [168, 1, 1, "", "TreeClusterMap"], [168, 3, 1, "", "evaluate_aabb_checks"]], "dipy.segment.clusteringspeed.ClusterCentroid": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "assign"], [168, 2, 1, "", "update"]], "dipy.segment.clusteringspeed.ClusterMapCentroid": [[168, 2, 1, "", "__init__"], [168, 5, 1, "", "centroids"]], "dipy.segment.clusteringspeed.Clusters": [[168, 2, 1, "", "__init__"]], "dipy.segment.clusteringspeed.ClustersCentroid": [[168, 2, 1, "", "__init__"]], "dipy.segment.clusteringspeed.QuickBundles": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "get_cluster_map"], [168, 2, 1, "", "get_stats"]], "dipy.segment.clusteringspeed.QuickBundlesX": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "get_stats"], [168, 2, 1, "", "get_tree_cluster_map"], [168, 2, 1, "", "insert"]], "dipy.segment.clusteringspeed.TreeCluster": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "add"], [168, 5, 1, "", "is_leaf"], [168, 2, 1, "", "return_indices"]], "dipy.segment.clusteringspeed.TreeClusterMap": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "get_clusters"], [168, 2, 1, "", "iter_preorder"], [168, 5, 1, "", "refdata"], [168, 2, 1, "", "traverse_postorder"]], "dipy.segment.featurespeed": [[168, 1, 1, "", "ArcLengthFeature"], [168, 1, 1, "", "CenterOfMassFeature"], [168, 1, 1, "", "CythonFeature"], [168, 1, 1, "", "Feature"], [168, 1, 1, "", "IdentityFeature"], [168, 1, 1, "", "MidpointFeature"], [168, 1, 1, "", "ResampleFeature"], [168, 1, 1, "", "VectorOfEndpointsFeature"], [168, 3, 1, "", "extract"], [168, 3, 1, "", "infer_shape"]], "dipy.segment.featurespeed.ArcLengthFeature": [[168, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.CenterOfMassFeature": [[168, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.CythonFeature": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "extract"], [168, 2, 1, "", "infer_shape"]], "dipy.segment.featurespeed.Feature": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "extract"], [168, 2, 1, "", "infer_shape"], [168, 4, 1, "", "is_order_invariant"]], "dipy.segment.featurespeed.IdentityFeature": [[168, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.MidpointFeature": [[168, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.ResampleFeature": [[168, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.VectorOfEndpointsFeature": [[168, 2, 1, "", "__init__"]], "dipy.segment.fss": [[168, 1, 1, "", "FastStreamlineSearch"], [168, 3, 1, "", "nearest_from_matrix_col"], [168, 3, 1, "", "nearest_from_matrix_row"]], "dipy.segment.fss.FastStreamlineSearch": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "radius_search"]], "dipy.segment.mask": [[168, 3, 1, "", "applymask"], [168, 3, 1, "", "bounding_box"], [168, 3, 1, "", "clean_cc_mask"], [168, 3, 1, "", "crop"], [168, 3, 1, "", "median_otsu"], [168, 3, 1, "", "multi_median"], [168, 3, 1, "", "segment_from_cfa"]], "dipy.segment.metric": [[168, 3, 1, "", "mdf"], [168, 3, 1, "", "mean_euclidean_distance"], [168, 3, 1, "", "mean_manhattan_distance"]], "dipy.segment.metricspeed": [[168, 1, 1, "", "AveragePointwiseEuclideanMetric"], [168, 1, 1, "", "CosineMetric"], [168, 1, 1, "", "CythonMetric"], [168, 1, 1, "", "Metric"], [168, 1, 1, "", "MinimumAverageDirectFlipMetric"], [168, 1, 1, "", "SumPointwiseEuclideanMetric"], [168, 3, 1, "", "dist"], [168, 3, 1, "", "distance_matrix"]], "dipy.segment.metricspeed.AveragePointwiseEuclideanMetric": [[168, 2, 1, "", "__init__"]], "dipy.segment.metricspeed.CosineMetric": [[168, 2, 1, "", "__init__"]], "dipy.segment.metricspeed.CythonMetric": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "are_compatible"], [168, 2, 1, "", "dist"]], "dipy.segment.metricspeed.Metric": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "are_compatible"], [168, 2, 1, "", "dist"], [168, 4, 1, "", "feature"], [168, 4, 1, "", "is_order_invariant"]], "dipy.segment.metricspeed.MinimumAverageDirectFlipMetric": [[168, 2, 1, "", "__init__"], [168, 4, 1, "", "is_order_invariant"]], "dipy.segment.metricspeed.SumPointwiseEuclideanMetric": [[168, 2, 1, "", "__init__"]], "dipy.segment.mrf": [[168, 1, 1, "", "ConstantObservationModel"], [168, 1, 1, "", "IteratedConditionalModes"]], "dipy.segment.mrf.ConstantObservationModel": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "initialize_param_uniform"], [168, 2, 1, "", "negloglikelihood"], [168, 2, 1, "", "prob_image"], [168, 2, 1, "", "seg_stats"], [168, 2, 1, "", "update_param"]], "dipy.segment.mrf.IteratedConditionalModes": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "icm_ising"], [168, 2, 1, "", "initialize_maximum_likelihood"], [168, 2, 1, "", "prob_neighborhood"]], "dipy.segment.threshold": [[168, 3, 1, "", "otsu"], [168, 3, 1, "", "upper_bound_by_percent"], [168, 3, 1, "", "upper_bound_by_rate"]], "dipy.segment.tissue": [[168, 1, 1, "", "TissueClassifierHMRF"]], "dipy.segment.tissue.TissueClassifierHMRF": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "classify"]], "dipy.sims": [[169, 0, 0, "-", "phantom"], [169, 0, 0, "-", "voxel"]], "dipy.sims.phantom": [[169, 3, 1, "", "add_noise"], [169, 3, 1, "", "diff2eigenvectors"], [169, 3, 1, "", "orbital_phantom"]], "dipy.sims.voxel": [[169, 3, 1, "", "add_noise"], [169, 3, 1, "", "all_tensor_evecs"], [169, 3, 1, "", "callaghan_perpendicular"], [169, 3, 1, "", "cylinders_and_ball_soderman"], [169, 3, 1, "", "diffusion_evals"], [169, 3, 1, "", "dki_signal"], [169, 3, 1, "", "gaussian_parallel"], [169, 3, 1, "", "kurtosis_element"], [169, 3, 1, "", "multi_tensor"], [169, 3, 1, "", "multi_tensor_dki"], [169, 3, 1, "", "multi_tensor_msd"], [169, 3, 1, "", "multi_tensor_odf"], [169, 3, 1, "", "multi_tensor_pdf"], [169, 3, 1, "", "multi_tensor_rtop"], [169, 3, 1, "", "single_tensor"], [169, 3, 1, "", "single_tensor_msd"], [169, 3, 1, "", "single_tensor_odf"], [169, 3, 1, "", "single_tensor_pdf"], [169, 3, 1, "", "single_tensor_rtop"], [169, 3, 1, "", "sticks_and_ball"]], "dipy.stats": [[170, 0, 0, "-", "analysis"]], "dipy.stats.analysis": [[170, 3, 1, "", "afq_profile"], [170, 3, 1, "", "anatomical_measures"], [170, 3, 1, "", "assignment_map"], [170, 3, 1, "", "gaussian_weights"], [170, 3, 1, "", "peak_values"]], "dipy.tracking": [[171, 0, 0, "-", "_utils"], [171, 0, 0, "-", "benchmarks"], [171, 0, 0, "-", "direction_getter"], [171, 0, 0, "-", "distances"], [171, 0, 0, "-", "fbcmeasures"], [171, 0, 0, "-", "learning"], [171, 0, 0, "-", "life"], [171, 0, 0, "-", "local_tracking"], [171, 0, 0, "-", "localtrack"], [171, 0, 0, "-", "mesh"], [171, 0, 0, "-", "metrics"], [171, 0, 0, "-", "propspeed"], [171, 0, 0, "-", "stopping_criterion"], [171, 0, 0, "-", "streamline"], [171, 0, 0, "-", "streamlinespeed"], [171, 0, 0, "-", "utils"], [171, 0, 0, "-", "vox2track"]], "dipy.tracking.benchmarks": [[171, 0, 0, "-", "bench_streamline"]], "dipy.tracking.benchmarks.bench_streamline": [[171, 3, 1, "", "bench_compress_streamlines"], [171, 3, 1, "", "bench_length"], [171, 3, 1, "", "bench_set_number_of_points"], [171, 3, 1, "", "generate_streamlines"], [171, 3, 1, "", "setup"]], "dipy.tracking.direction_getter": [[171, 1, 1, "", "DirectionGetter"]], "dipy.tracking.direction_getter.DirectionGetter": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "generate_streamline"], [171, 2, 1, "", "get_direction"], [171, 2, 1, "", "initial_direction"]], "dipy.tracking.distances": [[171, 3, 1, "", "add_3vecs"], [171, 3, 1, "", "approx_polygon_track"], [171, 3, 1, "", "approximate_mdl_trajectory"], [171, 3, 1, "", "bundles_distances_mam"], [171, 3, 1, "", "bundles_distances_mdf"], [171, 3, 1, "", "cut_plane"], [171, 3, 1, "", "inner_3vecs"], [171, 3, 1, "", "intersect_segment_cylinder"], [171, 3, 1, "", "larch_3merge"], [171, 3, 1, "", "larch_3split"], [171, 3, 1, "", "lee_angle_distance"], [171, 3, 1, "", "lee_perpendicular_distance"], [171, 3, 1, "", "local_skeleton_clustering"], [171, 3, 1, "", "local_skeleton_clustering_3pts"], [171, 3, 1, "", "mam_distances"], [171, 3, 1, "", "minimum_closest_distance"], [171, 3, 1, "", "most_similar_track_mam"], [171, 3, 1, "", "mul_3vec"], [171, 3, 1, "", "mul_3vecs"], [171, 3, 1, "", "norm_3vec"], [171, 3, 1, "", "normalized_3vec"], [171, 3, 1, "", "point_segment_sq_distance"], [171, 3, 1, "", "point_track_sq_distance_check"], [171, 3, 1, "", "sub_3vecs"], [171, 3, 1, "", "track_dist_3pts"], [171, 3, 1, "", "track_roi_intersection_check"], [171, 3, 1, "", "warn"]], "dipy.tracking.fbcmeasures": [[171, 1, 1, "", "FBCMeasures"], [171, 1, 1, "", "KDTree"], [171, 3, 1, "", "compute_rfbc"], [171, 3, 1, "", "determine_num_threads"], [171, 1, 1, "", "interp1d"], [171, 3, 1, "", "min_moving_average"]], "dipy.tracking.fbcmeasures.FBCMeasures": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "get_points_rfbc_thresholded"]], "dipy.tracking.fbcmeasures.KDTree": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "count_neighbors"], [171, 1, 1, "", "innernode"], [171, 1, 1, "", "leafnode"], [171, 1, 1, "", "node"], [171, 2, 1, "", "query"], [171, 2, 1, "", "query_ball_point"], [171, 2, 1, "", "query_ball_tree"], [171, 2, 1, "", "query_pairs"], [171, 2, 1, "", "sparse_distance_matrix"], [171, 5, 1, "", "tree"]], "dipy.tracking.fbcmeasures.KDTree.innernode": [[171, 5, 1, "", "children"], [171, 5, 1, "", "split"], [171, 5, 1, "", "split_dim"]], "dipy.tracking.fbcmeasures.KDTree.leafnode": [[171, 5, 1, "", "children"], [171, 5, 1, "", "idx"]], "dipy.tracking.fbcmeasures.interp1d": [[171, 2, 1, "", "__init__"], [171, 4, 1, "", "dtype"], [171, 5, 1, "", "fill_value"]], "dipy.tracking.learning": [[171, 3, 1, "", "detect_corresponding_tracks"], [171, 3, 1, "", "detect_corresponding_tracks_plus"]], "dipy.tracking.life": [[171, 1, 1, "", "FiberFit"], [171, 1, 1, "", "FiberModel"], [171, 1, 1, "", "LifeSignalMaker"], [171, 3, 1, "", "grad_tensor"], [171, 3, 1, "", "gradient"], [171, 3, 1, "", "streamline_gradients"], [171, 3, 1, "", "streamline_signal"], [171, 3, 1, "", "streamline_tensors"], [171, 3, 1, "", "voxel2streamline"]], "dipy.tracking.life.FiberFit": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "predict"]], "dipy.tracking.life.FiberModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fit"], [171, 2, 1, "", "setup"]], "dipy.tracking.life.LifeSignalMaker": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "calc_signal"], [171, 2, 1, "", "streamline_signal"]], "dipy.tracking.local_tracking": [[171, 1, 1, "", "LocalTracking"], [171, 1, 1, "", "ParticleFilteringTracking"]], "dipy.tracking.local_tracking.LocalTracking": [[171, 2, 1, "", "__init__"]], "dipy.tracking.local_tracking.ParticleFilteringTracking": [[171, 2, 1, "", "__init__"]], "dipy.tracking.localtrack": [[171, 3, 1, "", "local_tracker"], [171, 3, 1, "", "pft_tracker"], [171, 3, 1, "", "random"]], "dipy.tracking.mesh": [[171, 3, 1, "", "random_coordinates_from_surface"], [171, 3, 1, "", "seeds_from_surface_coordinates"], [171, 3, 1, "", "triangles_area"], [171, 3, 1, "", "vertices_to_triangles_values"]], "dipy.tracking.metrics": [[171, 3, 1, "", "arbitrarypoint"], [171, 3, 1, "", "bytes"], [171, 3, 1, "", "center_of_mass"], [171, 3, 1, "", "downsample"], [171, 3, 1, "", "endpoint"], [171, 3, 1, "", "frenet_serret"], [171, 3, 1, "", "generate_combinations"], [171, 3, 1, "", "inside_sphere"], [171, 3, 1, "", "inside_sphere_points"], [171, 3, 1, "", "intersect_sphere"], [171, 3, 1, "", "length"], [171, 3, 1, "", "longest_track_bundle"], [171, 3, 1, "", "magn"], [171, 3, 1, "", "mean_curvature"], [171, 3, 1, "", "mean_orientation"], [171, 3, 1, "", "midpoint"], [171, 3, 1, "", "midpoint2point"], [171, 3, 1, "", "principal_components"], [171, 3, 1, "", "spline"], [171, 3, 1, "", "startpoint"], [171, 3, 1, "", "winding"]], "dipy.tracking.propspeed": [[171, 3, 1, "", "eudx_both_directions"], [171, 3, 1, "", "ndarray_offset"]], "dipy.tracking.stopping_criterion": [[171, 1, 1, "", "ActStoppingCriterion"], [171, 1, 1, "", "AnatomicalStoppingCriterion"], [171, 1, 1, "", "BinaryStoppingCriterion"], [171, 1, 1, "", "CmcStoppingCriterion"], [171, 1, 1, "", "StoppingCriterion"], [171, 1, 1, "", "StreamlineStatus"], [171, 1, 1, "", "ThresholdStoppingCriterion"]], "dipy.tracking.stopping_criterion.ActStoppingCriterion": [[171, 2, 1, "", "__init__"]], "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "from_pve"], [171, 2, 1, "", "get_exclude"], [171, 2, 1, "", "get_include"]], "dipy.tracking.stopping_criterion.BinaryStoppingCriterion": [[171, 2, 1, "", "__init__"]], "dipy.tracking.stopping_criterion.CmcStoppingCriterion": [[171, 2, 1, "", "__init__"]], "dipy.tracking.stopping_criterion.StoppingCriterion": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "check_point"]], "dipy.tracking.stopping_criterion.StreamlineStatus": [[171, 4, 1, "", "ENDPOINT"], [171, 4, 1, "", "INVALIDPOINT"], [171, 4, 1, "", "OUTSIDEIMAGE"], [171, 4, 1, "", "PYERROR"], [171, 4, 1, "", "TRACKPOINT"], [171, 2, 1, "", "__init__"]], "dipy.tracking.stopping_criterion.ThresholdStoppingCriterion": [[171, 2, 1, "", "__init__"]], "dipy.tracking.streamline": [[171, 3, 1, "", "center_streamlines"], [171, 3, 1, "", "cluster_confidence"], [171, 3, 1, "", "deform_streamlines"], [171, 3, 1, "", "nbytes"], [171, 3, 1, "", "orient_by_rois"], [171, 3, 1, "", "orient_by_streamline"], [171, 3, 1, "", "relist_streamlines"], [171, 3, 1, "", "select_by_rois"], [171, 3, 1, "", "select_random_set_of_streamlines"], [171, 3, 1, "", "transform_streamlines"], [171, 3, 1, "", "unlist_streamlines"], [171, 3, 1, "", "values_from_volume"]], "dipy.tracking.streamlinespeed": [[171, 4, 1, "", "Streamlines"], [171, 3, 1, "", "compress_streamlines"], [171, 3, 1, "", "length"], [171, 3, 1, "", "set_number_of_points"]], "dipy.tracking.utils": [[171, 3, 1, "", "connectivity_matrix"], [171, 3, 1, "", "density_map"], [171, 3, 1, "", "length"], [171, 3, 1, "", "max_angle_from_curvature"], [171, 3, 1, "", "min_radius_curvature_from_angle"], [171, 3, 1, "", "ndbincount"], [171, 3, 1, "", "near_roi"], [171, 3, 1, "", "path_length"], [171, 3, 1, "", "random_seeds_from_mask"], [171, 3, 1, "", "reduce_labels"], [171, 3, 1, "", "reduce_rois"], [171, 3, 1, "", "seeds_from_mask"], [171, 3, 1, "", "streamline_near_roi"], [171, 3, 1, "", "subsegment"], [171, 3, 1, "", "target"], [171, 3, 1, "", "target_line_based"], [171, 3, 1, "", "transform_tracking_output"], [171, 3, 1, "", "unique_rows"]], "dipy.tracking.vox2track": [[171, 3, 1, "", "streamline_mapping"], [171, 3, 1, "", "track_counts"]], "dipy.viz": [[172, 0, 0, "-", "gmem"], [172, 0, 0, "-", "horizon"], [172, 0, 0, "-", "panel"], [172, 0, 0, "-", "plotting"], [172, 0, 0, "-", "projections"], [172, 0, 0, "-", "regtools"], [172, 0, 0, "-", "streamline"]], "dipy.viz.gmem": [[172, 1, 1, "", "GlobalHorizon"]], "dipy.viz.gmem.GlobalHorizon": [[172, 2, 1, "", "__init__"]], "dipy.viz.horizon": [[172, 0, 0, "-", "app"], [172, 0, 0, "-", "tab"], [172, 0, 0, "-", "visualizer"]], "dipy.viz.horizon.app": [[172, 1, 1, "", "Horizon"], [172, 3, 1, "", "horizon"]], "dipy.viz.horizon.app.Horizon": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "build_scene"], [172, 2, 1, "", "build_show"]], "dipy.viz.horizon.tab": [[172, 0, 0, "-", "base"], [172, 0, 0, "-", "cluster"], [172, 0, 0, "-", "peak"], [172, 0, 0, "-", "roi"], [172, 0, 0, "-", "slice"]], "dipy.viz.horizon.tab.base": [[172, 1, 1, "", "HorizonTab"], [172, 1, 1, "", "TabManager"], [172, 3, 1, "", "build_label"], [172, 3, 1, "", "color_double_slider"], [172, 3, 1, "", "color_single_slider"]], "dipy.viz.horizon.tab.base.HorizonTab": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "build"], [172, 5, 1, "", "name"]], "dipy.viz.horizon.tab.base.TabManager": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "reposition"], [172, 5, 1, "", "tab_ui"]], "dipy.viz.horizon.tab.cluster": [[172, 1, 1, "", "ClustersTab"]], "dipy.viz.horizon.tab.cluster.ClustersTab": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "build"], [172, 5, 1, "", "name"]], "dipy.viz.horizon.tab.peak": [[172, 1, 1, "", "PeaksTab"]], "dipy.viz.horizon.tab.peak.PeaksTab": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "build"], [172, 5, 1, "", "name"]], "dipy.viz.horizon.tab.roi": [[172, 1, 1, "", "ROIsTab"]], "dipy.viz.horizon.tab.roi.ROIsTab": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "build"], [172, 5, 1, "", "name"]], "dipy.viz.horizon.tab.slice": [[172, 1, 1, "", "SlicesTab"]], "dipy.viz.horizon.tab.slice.SlicesTab": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "build"], [172, 5, 1, "", "name"]], "dipy.viz.horizon.visualizer": [[172, 0, 0, "-", "cluster"], [172, 0, 0, "-", "slice"]], "dipy.viz.horizon.visualizer.cluster": [[172, 1, 1, "", "ClustersVisualizer"]], "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "add_cluster_actors"], [172, 5, 1, "", "centroid_actors"], [172, 5, 1, "", "cluster_actors"], [172, 5, 1, "", "lengths"], [172, 2, 1, "", "recluster_tractograms"], [172, 5, 1, "", "sizes"], [172, 5, 1, "", "tractogram_clusters"]], "dipy.viz.horizon.visualizer.slice": [[172, 1, 1, "", "SlicesVisualizer"]], "dipy.viz.horizon.visualizer.slice.SlicesVisualizer": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "change_volume"], [172, 5, 1, "", "data_shape"], [172, 5, 1, "", "intensities_range"], [172, 2, 1, "", "register_picker_callback"], [172, 5, 1, "", "selected_slices"], [172, 5, 1, "", "slice_actors"], [172, 5, 1, "", "volume_max"], [172, 5, 1, "", "volume_min"]], "dipy.viz.panel": [[172, 3, 1, "", "build_label"], [172, 3, 1, "", "slicer_panel"]], "dipy.viz.plotting": [[172, 3, 1, "", "bundle_shape_profile"], [172, 3, 1, "", "compare_maps"], [172, 3, 1, "", "compare_qti_maps"]], "dipy.viz.projections": [[172, 3, 1, "", "sph_project"]], "dipy.viz.regtools": [[172, 3, 1, "", "draw_lattice_2d"], [172, 3, 1, "", "overlay_images"], [172, 3, 1, "", "overlay_slices"], [172, 3, 1, "", "plot_2d_diffeomorphic_map"], [172, 3, 1, "", "plot_slices"], [172, 3, 1, "", "simple_plot"]], "dipy.viz.streamline": [[172, 3, 1, "", "show_bundles"], [172, 3, 1, "", "viz_displacement_mag"], [172, 3, 1, "", "viz_two_bundles"], [172, 3, 1, "", "viz_vector_field"]], "dipy.workflows": [[173, 0, 0, "-", "align"], [173, 0, 0, "-", "base"], [173, 0, 0, "-", "combined_workflow"], [173, 0, 0, "-", "denoise"], [173, 0, 0, "-", "docstring_parser"], [173, 0, 0, "-", "flow_runner"], [173, 0, 0, "-", "io"], [173, 0, 0, "-", "mask"], [173, 0, 0, "-", "multi_io"], [173, 0, 0, "-", "nn"], [173, 0, 0, "-", "reconst"], [173, 0, 0, "-", "segment"], [173, 0, 0, "-", "stats"], [173, 0, 0, "-", "tracking"], [173, 0, 0, "-", "viz"], [173, 0, 0, "-", "workflow"]], "dipy.workflows.align": [[173, 1, 1, "", "ApplyTransformFlow"], [173, 1, 1, "", "BundleWarpFlow"], [173, 1, 1, "", "ImageRegistrationFlow"], [173, 1, 1, "", "MotionCorrectionFlow"], [173, 1, 1, "", "ResliceFlow"], [173, 1, 1, "", "SlrWithQbxFlow"], [173, 1, 1, "", "SynRegistrationFlow"], [173, 3, 1, "", "check_dimensions"]], "dipy.workflows.align.ApplyTransformFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "run"]], "dipy.workflows.align.BundleWarpFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.align.ImageRegistrationFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "run"]], "dipy.workflows.align.MotionCorrectionFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "run"]], "dipy.workflows.align.ResliceFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.align.SlrWithQbxFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.align.SynRegistrationFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "run"]], "dipy.workflows.base": [[173, 1, 1, "", "IntrospectiveArgumentParser"], [173, 3, 1, "", "get_args_default"], [173, 3, 1, "", "none_or_dtype"]], "dipy.workflows.base.IntrospectiveArgumentParser": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "add_description"], [173, 2, 1, "", "add_epilogue"], [173, 2, 1, "", "add_sub_flow_args"], [173, 2, 1, "", "add_workflow"], [173, 2, 1, "", "get_flow_args"], [173, 5, 1, "", "optional_parameters"], [173, 5, 1, "", "output_parameters"], [173, 5, 1, "", "positional_parameters"], [173, 2, 1, "", "show_argument"], [173, 2, 1, "", "update_argument"]], "dipy.workflows.combined_workflow": [[173, 1, 1, "", "CombinedWorkflow"]], "dipy.workflows.combined_workflow.CombinedWorkflow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_optionals"], [173, 2, 1, "", "get_sub_runs"], [173, 2, 1, "", "run_sub_flow"], [173, 2, 1, "", "set_sub_flows_optionals"]], "dipy.workflows.denoise": [[173, 1, 1, "", "GibbsRingingFlow"], [173, 1, 1, "", "LPCAFlow"], [173, 1, 1, "", "MPPCAFlow"], [173, 1, 1, "", "NLMeansFlow"], [173, 1, 1, "", "Patch2SelfFlow"]], "dipy.workflows.denoise.GibbsRingingFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.denoise.LPCAFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.denoise.MPPCAFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.denoise.NLMeansFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.denoise.Patch2SelfFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.docstring_parser": [[173, 1, 1, "", "NumpyDocString"], [173, 1, 1, "", "Reader"], [173, 3, 1, "", "dedent_lines"]], "dipy.workflows.docstring_parser.NumpyDocString": [[173, 2, 1, "", "__init__"]], "dipy.workflows.docstring_parser.Reader": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "eof"], [173, 2, 1, "", "is_empty"], [173, 2, 1, "", "peek"], [173, 2, 1, "", "read"], [173, 2, 1, "", "read_to_condition"], [173, 2, 1, "", "read_to_next_empty_line"], [173, 2, 1, "", "read_to_next_unindented_line"], [173, 2, 1, "", "reset"], [173, 2, 1, "", "seek_next_non_empty_line"]], "dipy.workflows.flow_runner": [[173, 3, 1, "", "get_level"], [173, 3, 1, "", "run_flow"]], "dipy.workflows.io": [[173, 1, 1, "", "FetchFlow"], [173, 1, 1, "", "IoInfoFlow"], [173, 1, 1, "", "SplitFlow"]], "dipy.workflows.io.FetchFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_fetcher_datanames"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "load_module"], [173, 2, 1, "", "run"]], "dipy.workflows.io.IoInfoFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.io.SplitFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.mask": [[173, 1, 1, "", "MaskFlow"]], "dipy.workflows.mask.MaskFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.multi_io": [[173, 1, 1, "", "IOIterator"], [173, 3, 1, "", "basename_without_extension"], [173, 3, 1, "", "common_start"], [173, 3, 1, "", "concatenate_inputs"], [173, 3, 1, "", "connect_output_paths"], [173, 3, 1, "", "io_iterator"], [173, 3, 1, "", "io_iterator_"], [173, 3, 1, "", "slash_to_under"]], "dipy.workflows.multi_io.IOIterator": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "create_directories"], [173, 2, 1, "", "create_outputs"], [173, 2, 1, "", "file_existence_check"], [173, 2, 1, "", "set_inputs"], [173, 2, 1, "", "set_out_dir"], [173, 2, 1, "", "set_out_fnames"], [173, 2, 1, "", "set_output_keys"]], "dipy.workflows.nn": [[173, 1, 1, "", "EVACPlusFlow"]], "dipy.workflows.nn.EVACPlusFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.reconst": [[173, 1, 1, "", "ReconstCSAFlow"], [173, 1, 1, "", "ReconstCSDFlow"], [173, 1, 1, "", "ReconstDkiFlow"], [173, 1, 1, "", "ReconstDtiFlow"], [173, 1, 1, "", "ReconstIvimFlow"], [173, 1, 1, "", "ReconstMAPMRIFlow"], [173, 1, 1, "", "ReconstRUMBAFlow"]], "dipy.workflows.reconst.ReconstCSAFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstCSDFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstDkiFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_fitted_tensor"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstDtiFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_fitted_tensor"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstIvimFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_fitted_ivim"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstMAPMRIFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstRUMBAFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.segment": [[173, 1, 1, "", "LabelsBundlesFlow"], [173, 1, 1, "", "MedianOtsuFlow"], [173, 1, 1, "", "RecoBundlesFlow"]], "dipy.workflows.segment.LabelsBundlesFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.segment.MedianOtsuFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.segment.RecoBundlesFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.stats": [[173, 1, 1, "", "BundleAnalysisTractometryFlow"], [173, 1, 1, "", "BundleShapeAnalysis"], [173, 1, 1, "", "LinearMixedModelsFlow"], [173, 1, 1, "", "SNRinCCFlow"], [173, 3, 1, "", "buan_bundle_profiles"]], "dipy.workflows.stats.BundleAnalysisTractometryFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.stats.BundleShapeAnalysis": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.stats.LinearMixedModelsFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_metric_name"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"], [173, 2, 1, "", "save_lmm_plot"]], "dipy.workflows.stats.SNRinCCFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.tracking": [[173, 1, 1, "", "LocalFiberTrackingPAMFlow"], [173, 1, 1, "", "PFTrackingPAMFlow"]], "dipy.workflows.tracking.LocalFiberTrackingPAMFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.tracking.PFTrackingPAMFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.viz": [[173, 1, 1, "", "HorizonFlow"]], "dipy.workflows.viz.HorizonFlow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "run"]], "dipy.workflows.workflow": [[173, 1, 1, "", "Workflow"]], "dipy.workflows.workflow.Workflow": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_io_iterator"], [173, 2, 1, "", "get_short_name"], [173, 2, 1, "", "get_sub_runs"], [173, 2, 1, "", "manage_output_overwrite"], [173, 2, 1, "", "run"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"api": [0, 174], "chang": [0, 5, 14], "dipi": [0, 2, 8, 13, 17, 19, 41, 61, 146, 149, 156, 157, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 240, 242], "1": [0, 29, 68, 86, 219, 220, 221, 222, 223, 224, 225, 226, 227], "7": [0, 216, 227], "0": [0, 59, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219], "6": [0, 215, 226], "5": [0, 225], "4": [0, 223, 224], "3": [0, 222], "2": [0, 29, 68, 86, 221], "16": [0, 214], "15": [0, 213], "14": [0, 212], "13": [0, 211], "12": [0, 210], "10": [0, 208], "9": [0, 218], "8": [0, 217], "between": [0, 55, 82, 108, 150], "cross": [21, 66, 76], "preserv": 21, "contextu": [21, 23, 41], "enhanc": [21, 23, 41, 110], "refer": [2, 21, 22, 26, 28, 29, 31, 32, 34, 35, 36, 37, 47, 48, 50, 51, 52, 53, 55, 56, 59, 63, 64, 66, 67, 68, 69, 70, 71, 75, 76, 77, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 95, 96, 97, 101, 102, 103, 105, 106, 109, 110, 117, 119, 120, 121, 122, 124, 130, 142, 144, 145, 147, 148, 150, 151, 152, 153, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 234], "fiber": [22, 25, 41, 68, 76, 86, 105, 153], "bundl": [22, 95, 96, 97, 105, 119, 120, 121, 131, 143, 144, 145, 168], "coher": 22, "measur": 22, "acknowledg": 22, "track": [25, 31, 35, 36, 41, 63, 153, 171, 173], "linear": [26, 144, 167], "fascicl": [26, 36, 87], "evalu": 26, "life": [26, 171], "surfac": [28, 132], "seed": 28, "tractographi": [28, 32, 34, 37, 108, 109, 111], "displai": 28, "gener": [28, 78], "list": [28, 236], "posit": [28, 85, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "bootstrap": 29, "closest": [29, 153], "peak": [29, 153, 164, 165, 172], "direct": [29, 30, 33, 59, 96, 164], "getter": [29, 30, 33], "exampl": [29, 41, 84, 85, 95, 159, 161, 162, 163, 165, 167, 169, 171, 172], "csd": [29, 44, 81, 151], "model": [29, 35, 36, 66, 69, 70, 71, 75, 76, 77, 80, 86, 87, 89, 166], "an": [30, 33, 131], "introduct": [11, 18, 30, 31, 33, 63, 142], "determinist": [30, 153], "maximum": 30, "basic": [31, 63], "particl": [32, 153], "filter": [32, 153], "cmc": 32, "act": [32, 37], "stop": [32, 37], "criterion": [32, 37], "probabilist": [33, 153], "parallel": [34, 43, 44], "transport": 34, "robust": [35, 86, 91], "unbias": [35, 86], "base": [35, 73, 86, 101, 144, 152, 163, 167, 172, 173, 234], "spheric": [35, 68, 86, 88, 151, 167, 234, 235], "deconvolut": [35, 68, 74, 86, 115, 151], "rumba": [35, 167], "sd": 35, "spars": [36, 87], "us": [2, 37, 43, 44, 47, 49, 50, 51, 56, 64, 77, 82, 83, 88, 91, 147, 166, 241], "variou": 37, "threshold": [37, 49, 168], "binari": [19, 37, 99], "note": [1, 37, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 241], "file": [38, 40, 41], "format": [38, 41], "read": 40, "write": 40, "streamlin": [40, 41, 101, 106, 123, 126, 131, 132, 144, 152, 165, 171, 172], "overview": [4, 5, 10, 15, 16, 40, 55, 57, 147, 153, 228], "content": 41, "quick": [41, 60, 141, 228], "start": [41, 60, 61, 239], "preprocess": [41, 54], "reconstruct": [41, 43, 44, 64, 65, 67, 68, 69, 70, 71, 72, 75, 78, 81, 82, 84, 86, 87, 88, 151, 156], "analysi": [41, 123, 170], "connect": [41, 123, 127], "registr": [41, 93, 94, 95, 96, 97, 98, 99, 102, 103, 144, 145, 152], "segment": [41, 46, 104, 107, 119, 144, 168, 173], "simul": [41, 114, 117, 118], "multiprocess": [41, 42], "visual": [41, 128, 130, 131, 132, 172], "workflow": [5, 12, 14, 41, 134, 135, 137, 149, 173], "q": [43, 67, 78, 83, 84, 85, 230, 232], "ball": [43, 67], "brain": [46, 104], "median_otsu": [46, 104, 168], "denois": [47, 49, 50, 51, 52, 147, 163, 166, 173], "imag": [47, 49, 50, 51, 59, 72, 78, 82, 84, 85, 99, 101, 113, 141, 151, 152, 157, 165, 166, 232], "adapt": 47, "soft": 47, "coeffici": 47, "match": 47, "ascm": 47, "suppress": [48, 148], "gibb": [48, 148, 163], "oscil": [48, 148], "local": [7, 49, 51, 64, 147, 153, 163], "pca": [49, 50, 147, 163], "via": [49, 52], "empir": 49, "estim": [49, 50, 56, 59, 68, 83, 86, 163], "nois": [49, 50, 56, 163], "standard": [49, 50], "deviat": [49, 50], "perform": 49, "localpca": [49, 163], "function": [49, 68, 76, 86], "marcenko": [50, 147], "pastur": [50, 147], "algorithm": [50, 91], "non": 51, "mean": [51, 70, 82, 151], "nlmean": [51, 147, 163], "patch2self": [52, 163], "self": 52, "supervis": 52, "statist": 52, "independ": 52, "gradient": [53, 159, 161, 165, 171], "sphere": [53, 161, 163], "volum": [55, 131, 133, 150], "motion": [55, 79, 150, 151], "correct": [55, 150], "dwi": 55, "dataset": [55, 57, 143, 146, 236], "piesno": [56, 163], "reslic": [57, 159], "diffus": [57, 59, 69, 70, 71, 72, 75, 80, 82, 83, 89, 141, 147, 151, 157, 166], "snr": 59, "weight": [59, 113, 166], "b": [59, 230, 231], "i": [59, 242], "42": 59, "0695455758": 59, "57": 59, "05039": 59, "99871": 59, "0054406": 59, "23": 59, "9329492871": 59, "get": [7, 61, 236, 239, 241], "histolog": 64, "resdnn": 64, "k": 66, "fold": 66, "valid": 66, "comparison": [66, 143], "constant": [67, 151], "solid": [67, 151], "angl": [67, 151], "constrain": [68, 70, 151], "step": [68, 86, 239], "respons": [68, 76, 86], "fodf": [68, 86], "signal": [69, 70, 71, 75, 80, 82, 88, 89], "kurtosi": [70, 82, 151], "tensor": [69, 70, 75, 91, 151], "optim": [70, 161], "dki": [70, 117, 151, 167], "fraction": 70, "anisotropi": 70, "wmti": 71, "spectrum": 72, "calcul": [73, 90, 122, 124], "dsi": [73, 74, 115, 167], "scalar": [73, 90], "map": [73, 80, 90, 120, 124, 127, 151], "v": [74, 115], "invari": 76, "forecast": [76, 167], "free": 77, "water": 77, "elimin": 77, "remov": 77, "dti": [77, 151, 167], "contamin": 77, "sampl": [78, 232], "intravoxel": [79, 151], "incoher": [79, 151], "continu": [80, 89], "analyt": [80, 89, 143], "mri": [80, 151], "multi": 81, "shell": 81, "tissu": [81, 113, 168], "msdki": [82, 167], "test": [82, 241], "synthet": 82, "data": [82, 162, 166, 236], "relationship": 82, "smt2": 82, "time": [24, 27, 39, 45, 58, 62, 83, 92, 100, 112, 116, 125, 129, 136], "depend": [83, 238], "space": [83, 84, 85, 165], "indic": 83, "qt": 83, "dmri": 83, "trajectori": [84, 85], "qti": [84, 85, 167], "theori": [84, 85, 233], "usag": [84, 85, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "appli": [85, 101, 152], "constraint": 85, "instal": [10, 85, 241], "harmon": [88, 234], "3d": [89, 93, 103], "shore": [89, 90, 167], "restor": 91, "fit": 91, "affin": [93, 94, 159], "mask": [94, 168, 173], "groupwis": 95, "how": [95, 236], "work": [1, 13, 95], "extend": [95, 110], "capabl": 95, "nonrigid": [97, 145], "bundlewarp": [97, 145, 159], "diffeomorph": [99, 102, 103, 152], "fuzzi": 99, "deform": [101, 145], "symmetr": [102, 103, 152], "2d": 102, "automat": 105, "extract": [105, 119, 168], "recobundl": [105, 144, 168], "fast": 106, "search": 106, "cluster": [108, 109, 110, 111, 122, 168, 172], "avail": [41, 108, 109, 156], "featur": [5, 108, 110, 168, 228], "ident": [108, 168], "resampl": [108, 159], "center": 108, "mass": 108, "midpoint": [108, 171], "arclength": 108, "vector": 108, "endpoint": [108, 171], "metric": [109, 110, 131, 159, 168, 171], "averag": 109, "pointwis": 109, "euclidean": 109, "sum": 109, "cosin": 109, "quickbundl": [110, 111, 168], "differ": [6, 110, 131], "framework": [110, 143], "classif": 113, "t1": [113, 133], "structur": [113, 147], "multitensor": [117, 118], "afq": 119, "tract": 119, "profil": [119, 143, 161], "from": [5, 15, 119, 131, 133, 241], "buan": [120, 121, 143], "assign": 120, "creation": 120, "shape": [121, 143], "similar": [121, 143], "score": 121, "outlier": 122, "confid": 122, "index": 122, "path": 124, "length": [124, 126, 171], "size": 126, "reduct": 126, "matric": 127, "roi": [127, 132, 172], "intersect": 127, "densiti": 127, "advanc": [12, 130], "interact": 130, "show": 131, "everi": 131, "orient": 131, "color": 131, "point": 131, "valu": [2, 131, 133], "default": 131, "colormap": [131, 133], "your": [5, 8, 16, 131, 133], "specif": [131, 133, 143], "render": [132, 133], "simpl": 133, "slice": [133, 172], "rang": 133, "fa": 133, "creat": [8, 133, 134, 137], "mosaic": 133, "new": [5, 134, 137], "combin": 134, "public": 1, "A": [1, 14, 19, 228], "cite": 1, "our": 1, "code": [2, 3, 7, 13], "style": 2, "guidelin": 2, "import": [2, 171], "cython": 2, "variabl": 2, "declar": 2, "c": 2, "librari": 2, "error": 2, "return": [2, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "pointer": 2, "cast": 2, "loop": 2, "document": [2, 141, 241], "commit": [3, 5, 14], "messag": 3, "configur": [4, 8], "git": [4, 9, 10, 12], "In": [4, 5, 10, 15, 16, 141], "detail": [4, 5, 10, 15, 16], "user": [4, 240], "name": 4, "email": 4, "alias": 4, "editor": 4, "merg": [4, 5], "fanci": 4, "log": 4, "output": [4, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "develop": [5, 9, 15, 17, 20], "summari": [5, 12], "consid": 5, "delet": 5, "master": 5, "branch": 5, "updat": [5, 7], "mirror": 5, "trunk": [5, 14], "make": [5, 8, 15, 19], "The": [5, 230, 231, 235], "edit": 5, "more": 5, "ask": [5, 138], "review": 5, "some": [5, 236], "other": [5, 19, 161], "thing": 5, "you": 5, "might": 5, "want": 5, "do": [5, 19], "github": [5, 8], "sever": 5, "peopl": 5, "share": 5, "singl": 5, "repositori": [5, 16], "explor": 5, "rebas": 5, "recov": 5, "mess": 5, "up": [5, 8, 16], "rewrit": 5, "histori": [5, 14], "two": 6, "three": 6, "dot": 6, "spec": 6, "follow": 7, "latest": 7, "sourc": [7, 13, 241], "copi": [7, 8], "own": 8, "fork": [8, 16], "set": [8, 16], "account": 8, "resourc": 12, "tutori": 12, "manual": 12, "page": 12, "onlin": 12, "maintain": 14, "integr": 14, "few": 14, "long": 14, "seri": 14, "check": 14, "push": 14, "patch": 15, "move": 15, "clone": 16, "link": [16, 141], "upstream": 16, "repo": 16, "guid": [17, 19, 240], "releas": [19, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 241], "checklist": 19, "upload": 19, "build": [19, 241], "stuff": [19, 230], "need": 19, "keep": [], "compat": [], "python": [141, 157, 241], "futur": [], "print": [], "divis": [], "modul": [159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "xrang": [], "reduc": 167, "string": [], "next": 239, "except": [], "dictionari": [], "frequent": 138, "question": 138, "theoret": 138, "practic": 138, "gimbal": 139, "lock": 139, "mathemat": [139, 235], "glossari": 140, "highlight": [141, 154], "announc": [141, 155], "support": [141, 228, 241], "anaconda": 241, "packag": 241, "window": 241, "osx": 241, "linux": 241, "pip": 241, "contact": 241, "u": 241, "common": 241, "problem": 241, "multipl": 241, "altern": 241, "memori": 241, "issu": 241, "version": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 241], "all": 241, "oper": 241, "system": [228, 241], "unix": 241, "e": 241, "g": 241, "ubuntu": 241, "debian": 241, "fedora": 241, "mandriva": 241, "mayb": 241, "redhat": 241, "openmp": 241, "under": 241, "homebrew": 241, "org": 241, "onli": 241, "tip": 241, "troubleshoot": 241, "command": [142, 207], "line": [142, 207], "interfac": [142, 149], "group": 143, "across": 143, "popul": 143, "reproduc": 143, "result": 143, "larger": 143, "white": [144, 145], "matter": [144, 145], "partial": 145, "fulli": 145, "download": 146, "overcomplet": 147, "method": [41, 147, 153, 156, 159, 171], "unring": 148, "appar": 151, "propag": 151, "csa": 151, "ivim": [151, 167], "transform": [152, 159], "eudx": 153, "pft": 153, "what": [230, 242], "mission": 243, "statement": 243, "about": 230, "older": 154, "past": 155, "subpackag": 157, "util": [157, 165, 166, 167, 171, 207], "get_info": 157, "align": [159, 173], "_public": 159, "cpd": 159, "imaffin": 159, "imwarp": 159, "scalespac": 159, "streamlinear": 159, "streamwarp": 159, "bunch": 159, "verbositylevel": 159, "syn_registr": 159, "paramet": [159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "register_dwi_to_templ": 159, "write_map": 159, "read_map": 159, "affine_registr": 159, "center_of_mass": [159, 171], "translat": 159, "rigid": 159, "rigid_isosc": 159, "rigid_sc": 159, "_method_dict": 159, "register_seri": 159, "register_dwi_seri": 159, "motion_correct": 159, "streamline_registr": 159, "deformableregistr": 159, "attribut": [159, 161, 167, 169, 171], "gaussian_kernel": 159, "low_rank_eigen": 159, "initialize_sigma2": 159, "lowrankq": 159, "affineinversionerror": 159, "affineinvalidvalueserror": 159, "affinemap": 159, "mutualinformationmetr": 159, "affineregistr": 159, "_transform_method": 159, "transform_centers_of_mass": 159, "transform_geometric_cent": 159, "transform_origin": 159, "diffeomorphicmap": 159, "diffeomorphicregistr": 159, "symmetricdiffeomorphicregistr": 159, "registrationstag": 159, "logger": [159, 161, 165, 166, 167, 168], "mult_aff": 159, "get_direction_and_spac": 159, "similaritymetr": 159, "ccmetric": 159, "emmetr": 159, "ssdmetric": 159, "v_cycle_2d": 159, "v_cycle_3d": 159, "isotropicscalespac": 159, "streamlinedistancemetr": 159, "bundlemindistancemetr": 159, "bundlemindistancematrixmetr": 159, "bundlemindistanceasymmetricmetr": 159, "bundlesumdistancematrixmetr": 159, "jointbundlemindistancemetr": 159, "streamlinelinearregistr": 159, "streamlineregistrationmap": 159, "jointstreamlineregistrationmap": 159, "bundle_sum_dist": 159, "bundle_min_dist": 159, "bundle_min_distance_fast": 159, "bundle_min_distance_asymmetric_fast": 159, "remove_clusters_by_s": 159, "progressive_slr": 159, "slr_with_qbx": 159, "groupwise_slr": 159, "get_unique_pair": 159, "compose_matrix44": 159, "decompose_matrix44": 159, "average_bundle_length": 159, "find_miss": 159, "bundlewarp_vector_fil": 159, "bundlewarp_shape_analysi": 159, "boot": 160, "core": 161, "geometri": 161, "graph": 161, "histeq": 161, "ndindex": 161, "onetim": 161, "rng": 161, "sphere_stat": 161, "subdivide_octahedron": 161, "wavelet": 161, "_tuple2ax": 161, "sphere2cart": 161, "cart2spher": 161, "sph2latlon": 161, "normalized_vector": 161, "vector_norm": 161, "rodrigues_axis_rot": 161, "nearest_pos_semi_def": 161, "sphere_dist": 161, "see": [161, 162, 163, 164, 165, 167, 169, 171], "also": [161, 162, 163, 164, 165, 167, 169, 171], "cart_dist": 161, "vector_cosin": 161, "lambert_equal_area_projection_polar": 161, "lambert_equal_area_projection_cart": 161, "euler_matrix": 161, "compose_matrix": 161, "decompose_matrix": 161, "rais": [161, 162, 167, 171], "circumradiu": 161, "vec2vec_rotmat": 161, "compose_transform": 161, "perpendicular_direct": 161, "dist_to_corn": 161, "is_hemispher": 161, "gradientt": 161, "unique_bv": 161, "gradient_table_from_bvals_bvec": 161, "gradient_table_from_qvals_bvec": 161, "gradient_table_from_gradient_strength_bvec": 161, "gradient_t": 161, "reorient_bvec": 161, "generate_bvec": 161, "round_bval": 161, "unique_bvals_toler": 161, "get_bval_indic": 161, "unique_bvals_magnitud": 161, "check_multi_b": 161, "btens_to_param": 161, "params_to_bten": 161, "ornt_map": [161, 165], "reorient_vector": [161, 165], "reorient_on_axi": [161, 165], "orientation_from_str": [161, 165], "orientation_to_str": [161, 165], "resetmixin": 161, "onetimeproperti": 161, "auto_attr": 161, "sklearnlinearsolv": 161, "nonnegativeleastsquar": 161, "positivedefiniteleastsquar": 161, "spdot": 161, "sparse_nnl": 161, "wichmannhill2006": 161, "wichmannhill1982": 161, "lecuy": 161, "hemispher": [161, 163], "faces_from_sphere_vertic": 161, "unique_edg": 161, "unique_set": 161, "disperse_charg": [161, 163], "disperse_charges_alt": 161, "euler_characteristic_check": 161, "octahedron_vertic": 161, "octahedron_fac": 161, "icosahedron_vertic": 161, "icosahedron_fac": 161, "unit_octahedron": 161, "unit_icosahedron": 161, "hemi_icosahedron": 161, "random_uniform_on_spher": 161, "eigenstat": 161, "compare_orientation_set": 161, "angular_similar": 161, "create_unit_spher": 161, "create_unit_hemispher": 161, "cshift3d": 161, "permutationinvers": 161, "afb3d_a": 161, "sfb3d_a": 161, "sfb3d": 161, "afb3d": 161, "dwt3d": 161, "idwt3d": 161, "fetcher": 162, "dataerror": 162, "loads_compat": 162, "data_dir": 162, "get_sim_voxel": 162, "get_skeleton": 162, "get_spher": [162, 163], "default_spher": 162, "small_spher": 162, "get_3shell_gtab": 162, "get_isbi2013_2shell_gtab": 162, "get_gtab_taiwan_dsi": 162, "dsi_voxel": 162, "dsi_deconv_voxel": 162, "mrtrix_spherical_funct": 162, "get_cmap": 162, "two_cingulum_bundl": 162, "matlab_life_result": 162, "load_sdp_constraint": 162, "copyfileobj_withprogress": 162, "check_md5": 162, "fetch_data": 162, "fetch_isbi2013_2shel": 162, "fetch_stanford_label": 162, "fetch_sherbrooke_3shel": 162, "fetch_stanford_hardi": 162, "fetch_resdnn_weight": 162, "fetch_synb0_weight": 162, "fetch_synb0_test": 162, "fetch_evac_weight": 162, "fetch_evac_test": 162, "fetch_stanford_t1": 162, "fetch_stanford_pve_map": 162, "fetch_stanford_track": 162, "fetch_taiwan_ntu_dsi": 162, "fetch_syn_data": 162, "fetch_mni_templ": 162, "fetch_scil_b0": 162, "fetch_bundles_2_subject": 162, "fetch_ivim": 162, "fetch_cfin_multib": 162, "fetch_file_format": 162, "fetch_bundle_atlas_hcp842": 162, "fetch_target_tractogram_hcp": 162, "fetch_bundle_fa_hcp": 162, "fetch_qtdmri_test_retest_2subject": 162, "fetch_gold_standard_io": 162, "fetch_qte_lte_pt": 162, "fetch_cti_rat1": 162, "fetch_fury_surfac": 162, "fetch_dib_70_lte_pte_st": 162, "fetch_dib_217_lte_pte_st": 162, "fetch_ptt_minimal_dataset": 162, "fetch_bundle_warp_dataset": 162, "get_fnam": 162, "read_qtdmri_test_retest_2subject": 162, "read_scil_b0": 162, "read_siemens_scil_b0": 162, "read_isbi2013_2shel": 162, "read_sherbrooke_3shel": 162, "read_stanford_label": 162, "read_stanford_hardi": 162, "read_stanford_t1": 162, "read_stanford_pve_map": 162, "read_taiwan_ntu_dsi": 162, "read_syn_data": 162, "fetch_tissue_data": 162, "read_tissue_data": 162, "read_mni_templ": 162, "fetch_cenir_multib": 162, "read_cenir_multib": 162, "read_bundles_2_subject": 162, "read_ivim": 162, "read_cfin_dwi": 162, "read_cfin_t1": 162, "get_file_format": 162, "get_bundle_atlas_hcp842": 162, "get_two_hcp842_bundl": 162, "get_target_tractogram_hcp": 162, "read_qte_lte_pt": 162, "read_dib_70_lte_pte_st": 162, "read_dib_217_lte_pte_st": 162, "extract_example_tract": 162, "read_five_af_bundl": 162, "to_bids_descript": 162, "fetch_hcp": 162, "fetch_hbn": 162, "adaptive_soft_match": 163, "noise_estim": 163, "non_local_mean": 163, "gibbs_remov": 163, "genpca": 163, "mppca": 163, "estimate_sigma": 163, "peaksandmetr": 164, "peak_directions_nl": 164, "peak_direct": 164, "peaks_from_model": 164, "reshape_peaks_for_visu": 164, "io": [165, 173], "bvectxt": 165, "dpy": 165, "pickl": 165, "stateful_tractogram": 165, "vtk": 165, "read_bvec_fil": 165, "read_bvals_bvec": 165, "load_nifti_data": 165, "load_nifti": 165, "save_nifti": 165, "save_qa_metr": 165, "load_peak": 165, "save_peak": 165, "peaks_to_nifti": 165, "save_pickl": 165, "load_pickl": 165, "origin": 165, "statefultractogram": 165, "set_sft_logger_level": 165, "save_tractogram": 165, "load_tractogram": 165, "load_gener": 165, "save_gener": 165, "load_trk": 165, "load_tck": 165, "load_vtk": 165, "load_vtp": 165, "load_fib": 165, "load_dpi": 165, "save_trk": 165, "save_tck": 165, "save_vtk": 165, "save_vtp": 165, "save_fib": 165, "save_dpi": 165, "nifti1_symmat": 165, "make5d": 165, "decfa": 165, "decfa_to_float": 165, "is_reference_info_valid": 165, "get_reference_info": 165, "is_header_compat": 165, "create_tractogram_head": 165, "create_nifti_head": 165, "save_buan_profiles_hdf5": 165, "read_img_arr_or_path": 165, "load_polydata": 165, "save_polydata": 165, "save_vtk_streamlin": 165, "load_vtk_streamlin": 165, "nn": [166, 173], "cnn_1d_denois": 166, "titl": 166, "cnn": 166, "evac": 166, "histo_resdnn": 166, "synb0": 166, "cnn1ddenois": 166, "block": 166, "channelsum": 166, "evacplu": 166, "prepare_img": 166, "init_model": 166, "historesdnn": 166, "singlelayerperceptron": 166, "multiplelayerpercepton": 166, "encoderblock": 166, "decoderblock": 166, "unet3d": 166, "normal": 166, "unnorm": 166, "set_logger_level": 166, "transform_img": 166, "recover_img": 166, "reconst": [167, 173], "cach": 167, "cross_valid": 167, "csdeconv": 167, "dki_micro": 167, "fwdti": 167, "gqi": 167, "mapmri": 167, "mcsd": 167, "multi_voxel": 167, "odf": 167, "qtdmri": 167, "sfm": 167, "shm": 167, "reconstmodel": 167, "reconstfit": 167, "coeff_of_determin": 167, "kfold_xval": 167, "axsymshrespons": 167, "constrainedsphericaldeconvmodel": 167, "constrainedsdtmodel": 167, "auto_respons": 167, "response_from_mask": 167, "estimate_respons": 167, "forward_sdt_deconv_mat": 167, "odf_deconv": 167, "odf_sh_to_sharp": 167, "mask_for_response_ssst": 167, "response_from_mask_ssst": 167, "auto_response_ssst": 167, "recursive_respons": 167, "fa_trace_to_lambda": 167, "diffusionkurtosismodel": 167, "diffusionkurtosisfit": 167, "carlson_rf": 167, "carlson_rd": 167, "directional_diffus": 167, "directional_diffusion_vari": 167, "directional_kurtosi": 167, "apparent_kurtosis_coef": 167, "mean_kurtosi": 167, "radial_kurtosi": 167, "axial_kurtosi": 167, "kurtosis_maximum": 167, "mean_kurtosis_tensor": 167, "kurtosis_fractional_anisotropi": 167, "dki_predict": 167, "params_to_dki_param": 167, "ls_fit_dki": 167, "cls_fit_dki": 167, "wrotat": 167, "wrotate_el": 167, "wcon": 167, "split_dki_param": 167, "kurtosismicrostructuremodel": 167, "kurtosismicrostructuralfit": 167, "axonal_water_fract": 167, "diffusion_compon": 167, "dkimicro_predict": 167, "tortuos": 167, "diffusionspectrummodel": 167, "diffusionspectrumfit": 167, "diffusionspectrumdeconvmodel": 167, "diffusionspectrumdeconvfit": 167, "create_qspac": 167, "create_qt": 167, "hanning_filt": 167, "pdf_interp_coord": 167, "pdf_odf": 167, "half_to_full_qspac": 167, "project_hemisph_bvec": 167, "threshold_propag": 167, "gen_psf": 167, "lr_deconv": 167, "tensormodel": 167, "tensorfit": 167, "fractional_anisotropi": 167, "geodesic_anisotropi": 167, "mean_diffus": 167, "axial_diffus": 167, "radial_diffus": 167, "trace": 167, "color_fa": 167, "determin": 167, "isotrop": 167, "deviator": 167, "norm": 167, "mode": 167, "planar": 167, "apparent_diffusion_coef": 167, "tensor_predict": 167, "iter_fit_tensor": 167, "wls_fit_tensor": 167, "ols_fit_tensor": 167, "nlls_fit_tensor": 167, "restore_fit_tensor": 167, "_lt_indic": 167, "from_lower_triangular": 167, "_lt_row": 167, "_lt_col": 167, "lower_triangular": 167, "decompose_tensor": 167, "design_matrix": 167, "quantize_evec": 167, "eig_from_lo_tri": 167, "forecastmodel": 167, "forecastfit": 167, "find_signal_mean": 167, "forecast_error_func": 167, "psi_l": 167, "forecast_matrix": 167, "rho_matrix": 167, "lb_forecast": 167, "freewatertensormodel": 167, "freewatertensorfit": 167, "fwdti_predict": 167, "wls_iter": 167, "nls_iter": 167, "nls_fit_tensor": 167, "lower_triangular_to_choleski": 167, "cholesky_to_lower_triangular": 167, "generalizedqsamplingmodel": 167, "generalizedqsamplingfit": 167, "normalize_qa": 167, "squared_radial_compon": 167, "npa": 167, "equatorial_zone_vertic": 167, "polar_zone_vertic": 167, "upper_hemi_map": 167, "equatorial_maximum": 167, "patch_vertic": 167, "patch_maximum": 167, "odf_sum": 167, "patch_sum": 167, "triple_odf_maxima": 167, "ivimmodeltrr": 167, "ivimmodelvp": 167, "ivimfit": 167, "ivim_predict": 167, "f_d_star_predict": 167, "f_d_star_error": 167, "ivim_model_selector": 167, "mapmrimodel": 167, "mapmrifit": 167, "isotropic_scale_factor": 167, "mapmri_index_matrix": 167, "b_mat": 167, "b_mat_isotrop": 167, "mapmri_phi_1d": 167, "mapmri_phi_matrix": 167, "mapmri_psi_1d": 167, "mapmri_psi_matrix": 167, "mapmri_odf_matrix": 167, "mapmri_isotropic_phi_matrix": 167, "mapmri_isotropic_radial_signal_basi": 167, "mapmri_isotropic_m_mu_independ": 167, "mapmri_isotropic_m_mu_depend": 167, "mapmri_isotropic_psi_matrix": 167, "mapmri_isotropic_radial_pdf_basi": 167, "mapmri_isotropic_k_mu_independ": 167, "mapmri_isotropic_k_mu_depend": 167, "binomialfloat": 167, "mapmri_isotropic_odf_matrix": 167, "mapmri_isotropic_odf_sh_matrix": 167, "mapmri_isotropic_laplacian_reg_matrix": 167, "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix": 167, "mapmri_isotropic_index_matrix": 167, "create_rspac": 167, "delta": 167, "map_laplace_u": 167, "map_laplace_t": 167, "map_laplace_": 167, "mapmri_stu_reg_matric": 167, "mapmri_laplacian_reg_matrix": 167, "generalized_crossvalidation_arrai": 167, "generalized_crossvalid": 167, "gcv_cost_funct": 167, "multishellrespons": 167, "multishelldeconvmodel": 167, "msdeconvfit": 167, "qpfitter": 167, "multi_tissue_basi": 167, "solve_qp": 167, "multi_shell_fiber_respons": 167, "mask_for_response_msmt": 167, "response_from_mask_msmt": 167, "auto_response_msmt": 167, "meandiffusionkurtosismodel": 167, "meandiffusionkurtosisfit": 167, "mean_signal_bvalu": 167, "msk_from_awf": 167, "awf_from_msk": 167, "msdki_predict": 167, "wls_fit_msdki": 167, "multivoxelfit": 167, "callablearrai": 167, "multi_voxel_fit": 167, "odfmodel": 167, "odffit": 167, "gfa": 167, "minmax_norm": 167, "qtdmrimodel": 167, "qtdmrifit": 167, "qtdmri_to_mapmri_matrix": 167, "qtdmri_isotropic_to_mapmri_matrix": 167, "qtdmri_temporal_norm": 167, "qtdmri_mapmri_norm": 167, "qtdmri_mapmri_isotropic_norm": 167, "qtdmri_signal_matrix_": 167, "qtdmri_signal_matrix": 167, "qtdmri_eap_matrix": 167, "qtdmri_isotropic_signal_matrix_": 167, "qtdmri_isotropic_signal_matrix": 167, "qtdmri_eap_matrix_": 167, "qtdmri_isotropic_eap_matrix_": 167, "qtdmri_isotropic_eap_matrix": 167, "radial_basis_opt": 167, "angular_basis_opt": 167, "radial_basis_eap_opt": 167, "angular_basis_eap_opt": 167, "temporal_basi": 167, "qtdmri_index_matrix": 167, "qtdmri_isotropic_index_matrix": 167, "qtdmri_laplacian_reg_matrix": 167, "qtdmri_isotropic_laplacian_reg_matrix": 167, "part23_reg_matrix_q": 167, "part23_iso_reg_matrix_q": 167, "part4_reg_matrix_q": 167, "part4_iso_reg_matrix_q": 167, "part1_reg_matrix_tau": 167, "part23_reg_matrix_tau": 167, "part4_reg_matrix_tau": 167, "h": 167, "qtdmri_isotropic_sc": 167, "qtdmri_anisotropic_sc": 167, "design_matrix_spati": 167, "create_rt_space_grid": 167, "qtdmri_number_of_coeffici": 167, "l1_crossvalid": 167, "elastic_crossvalid": 167, "visualise_gradient_table_g_delta_rainbow": 167, "qtimodel": 167, "qtifit": 167, "from_3x3_to_6x1": 167, "from_6x1_to_3x3": 167, "from_6x6_to_21x1": 167, "from_21x1_to_6x6": 167, "cvxpy_1x6_to_3x3": 167, "cvxpy_1x21_to_6x6": 167, "dtd_covari": 167, "qti_sign": 167, "rumbasdmodel": 167, "rumbafit": 167, "rumba_deconv": 167, "mbessel_ratio": 167, "generate_kernel": 167, "rumba_deconv_glob": 167, "isotropicmodel": 167, "isotropicfit": 167, "exponentialisotropicmodel": 167, "exponentialisotropicfit": 167, "sparsefasciclemodel": 167, "sparsefasciclefit": 167, "sfm_design_matrix": 167, "sphharmmodel": 167, "qballbasemodel": 167, "sphharmfit": 167, "csaodfmodel": 167, "opdtmodel": 167, "qballmodel": 167, "residualbootstrapwrapp": 167, "forward_sdeconv_mat": 167, "sh_to_rh": 167, "gen_dirac": 167, "spherical_harmon": 167, "real_sph_harm": 167, "real_sh_tournier_from_index": 167, "real_sh_descoteaux_from_index": 167, "real_sh_tourni": 167, "real_sh_descoteaux": 167, "real_sym_sh_mrtrix": 167, "real_sym_sh_basi": 167, "sph_harm_ind_list": 167, "order_from_ncoef": 167, "smooth_pinv": 167, "lazy_index": 167, "normalize_data": 167, "hat": 167, "lcr_matrix": 167, "bootstrap_data_arrai": 167, "bootstrap_data_voxel": 167, "sf_to_sh": [163, 167], "sh_to_sf": [163, 167], "sh_to_sf_matrix": 167, "calculate_max_ord": 167, "anisotropic_pow": 167, "convert_sh_to_full_basi": 167, "convert_sh_from_legaci": 167, "convert_sh_to_legaci": 167, "shoremodel": 167, "shorefit": 167, "shore_matrix": 167, "shore_matrix_pdf": 167, "shore_matrix_odf": 167, "l_shore": 167, "n_shore": 167, "shore_indic": 167, "shore_ord": 167, "dki_design_matrix": 167, "fss": 168, "check_rang": 168, "bundle_adjac": 168, "ba_analysi": 168, "cluster_bundl": 168, "bundle_shape_similar": 168, "clustercentroid": 168, "clustermap": 168, "clustermapcentroid": 168, "quickbundlesx": 168, "treeclust": 168, "treeclustermap": 168, "qbx_and_merg": 168, "faststreamlinesearch": 168, "nearest_from_matrix_row": 168, "nearest_from_matrix_col": 168, "multi_median": 168, "applymask": 168, "bounding_box": 168, "crop": 168, "segment_from_cfa": 168, "clean_cc_mask": 168, "mdf": 168, "mean_manhattan_dist": 168, "mean_euclidean_dist": 168, "otsu": 168, "upper_bound_by_r": 168, "upper_bound_by_perc": 168, "tissueclassifierhmrf": 168, "sim": 169, "phantom": 169, "voxel": 169, "add_nois": 169, "diff2eigenvector": 169, "orbital_phantom": 169, "diffusion_ev": 169, "sticks_and_bal": 169, "callaghan_perpendicular": 169, "gaussian_parallel": 169, "cylinders_and_ball_soderman": 169, "single_tensor": 169, "multi_tensor": 169, "multi_tensor_dki": 169, "kurtosis_el": 169, "dki_sign": 169, "single_tensor_odf": 169, "all_tensor_evec": 169, "multi_tensor_odf": 169, "single_tensor_rtop": 169, "multi_tensor_rtop": 169, "single_tensor_pdf": 169, "multi_tensor_pdf": 169, "single_tensor_msd": 169, "multi_tensor_msd": 169, "stat": [170, 173], "peak_valu": 170, "anatomical_measur": 170, "assignment_map": 170, "gaussian_weight": 170, "afq_profil": 170, "_util": 171, "learn": 171, "local_track": 171, "mesh": 171, "detect_corresponding_track": 171, "detect_corresponding_tracks_plu": 171, "lifesignalmak": 171, "fibermodel": 171, "fiberfit": 171, "streamline_gradi": 171, "grad_tensor": 171, "streamline_tensor": 171, "streamline_sign": 171, "voxel2streamlin": 171, "localtrack": 171, "particlefilteringtrack": 171, "random_coordinates_from_surfac": 171, "seeds_from_surface_coordin": 171, "triangles_area": 171, "vertices_to_triangles_valu": 171, "wind": 171, "byte": 171, "downsampl": 171, "magn": 171, "frenet_serret": 171, "mean_curvatur": 171, "mean_orient": 171, "generate_combin": 171, "longest_track_bundl": 171, "intersect_spher": 171, "inside_spher": 171, "inside_sphere_point": 171, "spline": 171, "startpoint": 171, "arbitrarypoint": 171, "principal_compon": 171, "midpoint2point": 171, "unlist_streamlin": 171, "relist_streamlin": 171, "center_streamlin": 171, "deform_streamlin": 171, "transform_streamlin": 171, "select_random_set_of_streamlin": 171, "select_by_roi": 171, "cluster_confid": 171, "orient_by_roi": 171, "orient_by_streamlin": 171, "values_from_volum": 171, "nbyte": 171, "density_map": 171, "connectivity_matrix": 171, "ndbincount": 171, "reduce_label": 171, "subseg": 171, "seeds_from_mask": 171, "random_seeds_from_mask": 171, "target": 171, "target_line_bas": 171, "streamline_near_roi": 171, "near_roi": 171, "unique_row": 171, "transform_tracking_output": 171, "reduce_roi": 171, "path_length": 171, "max_angle_from_curvatur": 171, "min_radius_curvature_from_angl": [164, 171], "viz": [172, 173], "gmem": 172, "horizon": 172, "app": 172, "tab": 172, "panel": 172, "plot": 172, "project": 172, "regtool": 172, "globalhorizon": 172, "horizontab": 172, "tabmanag": 172, "build_label": 172, "color_single_slid": 172, "color_double_slid": 172, "clusterstab": 172, "peakstab": 172, "roistab": 172, "slicestab": 172, "clustersvisu": 172, "slicesvisu": 172, "slicer_panel": 172, "compare_map": 172, "compare_qti_map": 172, "bundle_shape_profil": 172, "sph_project": 172, "simple_plot": 172, "overlay_imag": 172, "draw_lattice_2d": 172, "plot_2d_diffeomorphic_map": 172, "plot_slic": 172, "overlay_slic": 172, "show_bundl": 172, "viz_two_bundl": 172, "viz_vector_field": 172, "viz_displacement_mag": 172, "combined_workflow": 173, "docstring_pars": 173, "flow_runn": 173, "multi_io": 173, "resliceflow": 173, "slrwithqbxflow": 173, "imageregistrationflow": 173, "applytransformflow": 173, "synregistrationflow": 173, "motioncorrectionflow": 173, "bundlewarpflow": 173, "check_dimens": 173, "introspectiveargumentpars": 173, "get_args_default": 173, "none_or_dtyp": 173, "combinedworkflow": 173, "patch2selfflow": 173, "nlmeansflow": 173, "lpcaflow": 173, "mppcaflow": 173, "gibbsringingflow": 173, "reader": 173, "numpydocstr": 173, "dedent_lin": 173, "get_level": 173, "run_flow": 173, "ioinfoflow": 173, "fetchflow": 173, "splitflow": 173, "maskflow": 173, "ioiter": 173, "common_start": 173, "slash_to_und": 173, "connect_output_path": 173, "concatenate_input": 173, "basename_without_extens": 173, "io_iter": 173, "io_iterator_": 173, "evacplusflow": 173, "reconstmapmriflow": 173, "reconstdtiflow": 173, "reconstcsdflow": 173, "reconstcsaflow": 173, "reconstdkiflow": 173, "reconstivimflow": 173, "reconstrumbaflow": 173, "medianotsuflow": 173, "recobundlesflow": 173, "labelsbundlesflow": 173, "snrinccflow": 173, "bundleanalysistractometryflow": 173, "linearmixedmodelsflow": 173, "bundleshapeanalysi": 173, "buan_bundle_profil": 173, "localfibertrackingpamflow": 173, "pftrackingpamflow": 173, "horizonflow": 173, "dipy_align_affin": 175, "argument": [175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "option": [175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "dipy_align_syn": 176, "dipy_apply_transform": 177, "dipy_buan_lmm": 178, "dipy_buan_profil": 179, "dipy_bundlewarp": 180, "dipy_correct_mot": 181, "dipy_denoise_lpca": 182, "dipy_denoise_mppca": 183, "dipy_denoise_nlmean": 184, "dipy_denoise_patch2self": 185, "dipy_evac_plu": 186, "dipy_fetch": 187, "dipy_fit_csa": 188, "dipy_fit_csd": 189, "dipy_fit_dki": 190, "dipy_fit_dti": 191, "dipy_fit_ivim": 192, "dipy_fit_mapmri": 193, "dipy_gibbs_ring": 194, "dipy_horizon": 195, "dipy_info": 196, "dipy_labelsbundl": 197, "dipy_mask": 198, "dipy_median_otsu": 199, "dipy_recobundl": 200, "dipy_reslic": 201, "dipy_slr": 202, "dipy_snr_in_cc": 203, "dipy_split": 204, "dipy_track": 205, "dipy_track_pft": 206, "11": 209, "subscrib": 229, "dii": 230, "matrix": [230, 231], "siemen": [230, 231], "dicom": [230, 231], "generalis": 232, "concept": 233, "coordin": 235, "term": 235, "physic": 235, "convent": 235, "matlab": 235, "__config__": 158, "bundlemin": 159, "crosscorr": 159, "expectmax": 159, "parzenhist": 159, "sumsqdiff": 159, "vector_field": 159, "determine_num_thread": [159, 163, 171], "distance_matrix_mdf": 159, "compute_cc_backward_step_2d": 159, "compute_cc_backward_step_3d": 159, "compute_cc_forward_step_2d": 159, "compute_cc_forward_step_3d": 159, "precompute_cc_factors_2d": 159, "precompute_cc_factors_2d_test": 159, "precompute_cc_factors_3d": 159, "precompute_cc_factors_3d_test": 159, "compute_em_demons_step_2d": 159, "compute_em_demons_step_3d": 159, "compute_masked_class_stats_2d": 159, "compute_masked_class_stats_3d": 159, "quantize_positive_2d": 159, "quantize_positive_3d": 159, "parzenjointhistogram": 159, "compute_parzen_mi": 159, "cubic_splin": 159, "cubic_spline_deriv": 159, "sample_domain_regular": 159, "compute_energy_ssd_2d": 159, "compute_energy_ssd_3d": 159, "compute_residual_displacement_field_ssd_2d": 159, "compute_residual_displacement_field_ssd_3d": 159, "compute_ssd_demons_step_2d": 159, "compute_ssd_demons_step_3d": 159, "iterate_residual_displacement_field_ssd_2d": 159, "iterate_residual_displacement_field_ssd_3d": 159, "solve_2d_symmetric_positive_definit": 159, "solve_3d_symmetric_positive_definit": 159, "affinetransform2d": 159, "affinetransform3d": 159, "rigidisoscalingtransform2d": 159, "rigidisoscalingtransform3d": 159, "rigidscalingtransform2d": 159, "rigidscalingtransform3d": 159, "rigidtransform2d": 159, "rigidtransform3d": 159, "rotationtransform2d": 159, "rotationtransform3d": 159, "scalingtransform2d": 159, "scalingtransform3d": 159, "translationtransform2d": 159, "translationtransform3d": 159, "compose_vector_fields_2d": 159, "compose_vector_fields_3d": 159, "create_circl": 159, "create_harmonic_fields_2d": 159, "create_harmonic_fields_3d": 159, "create_random_displacement_2d": 159, "create_random_displacement_3d": 159, "create_spher": 159, "downsample_displacement_field_2d": 159, "downsample_displacement_field_3d": 159, "downsample_scalar_field_2d": 159, "downsample_scalar_field_3d": 159, "invert_vector_field_fixed_point_2d": 159, "invert_vector_field_fixed_point_3d": 159, "is_valid_affin": 159, "reorient_vector_field_2d": 159, "reorient_vector_field_3d": 159, "resample_displacement_field_2d": 159, "resample_displacement_field_3d": 159, "simplify_warp_function_2d": 159, "simplify_warp_function_3d": 159, "sparse_gradi": 159, "transform_2d_affin": 159, "transform_2d_affine_nn": 159, "transform_3d_affin": 159, "transform_3d_affine_nn": 159, "warp_2d": 159, "warp_2d_nn": 159, "warp_3d": 159, "warp_3d_nn": 159, "warp_coordinates_2d": 159, "warp_coordinates_3d": 159, "benchmark": [161, 167, 168, 171], "bench_spher": 161, "interpol": 161, "timer": 161, "func_minimize_adhoc": 161, "func_minimize_scipi": 161, "bench_disperse_charges_alt": 161, "nearestneighborinterpol": 161, "outsideimag": 161, "trilinearinterpol": 161, "interp_rbf": 161, "interpolate_scalar_2d": 161, "interpolate_scalar_3d": 161, "interpolate_scalar_nn_2d": 161, "interpolate_scalar_nn_3d": 161, "interpolate_vector_2d": 161, "interpolate_vector_3d": 161, "map_coordinates_trilinear_iso": 161, "nearestneighbor_interpol": 161, "trilinear_interp": 161, "trilinear_interpolate4d": 161, "denspe": 163, "enhancement_kernel": 163, "nlmeans_block": 163, "pca_noise_estim": 163, "shift_twist_convolut": 163, "add_padding_reflect": 163, "correspond_indic": 163, "nlmeans_3d": 163, "remove_pad": 163, "enhancementkernel": 163, "ceil": 163, "gettempdir": 163, "firdn": 163, "upfir": 163, "warn": [163, 171], "convolv": 163, "convolve_sf": 163, "bootstrap_direction_gett": 164, "closest_peak_direction_gett": 164, "pmf": 164, "probabilistic_direction_gett": 164, "ptt_direction_gett": 164, "bootdirectiongett": 164, "bootpmfgen": 164, "basedirectiongett": 164, "basepmfdirectiongett": 164, "closestpeakdirectiongett": 164, "pmfgendirectiongett": 164, "pmfgen": 164, "shcoeffpmfgen": 164, "simplepmfgen": 164, "deterministicmaximumdirectiongett": 164, "probabilisticdirectiongett": 164, "random": [164, 171], "pttdirectiongett": 164, "bench_bounding_box": 167, "bench_csd": 167, "bench_peak": 167, "bench_squash": 167, "bench_vec_val_sum": 167, "eudx_direction_gett": 167, "quick_squash": 167, "recspe": 167, "vec_val_sum": 167, "num_grad": 167, "bench_csdeconv": 167, "bench_local_maxima": 167, "old_squash": 167, "bench_quick_squash": 167, "bench_vec_val_vect": 167, "eudxdirectiongett": 167, "adj_to_countarr": 167, "argmax_from_adj": 167, "argmax_from_countarr": 167, "le_to_odf": 167, "local_maxima": 167, "proc_reco_arg": 167, "remove_similar_vertic": 167, "search_descend": 167, "sum_on_blocks_1d": 167, "vec_val_vect": 167, "bench_quickbundl": 168, "clustering_algorithm": 168, "clusteringspe": 168, "cythonutil": 168, "featurespe": 168, "metricspe": 168, "mrf": 168, "mdfpy": 168, "dtype": 168, "clusters_centroid2clustermap_centroid": 168, "peek": 168, "clusterscentroid": 168, "evaluate_aabb_check": 168, "arclengthfeatur": 168, "centerofmassfeatur": 168, "cythonfeatur": 168, "identityfeatur": 168, "midpointfeatur": 168, "resamplefeatur": 168, "vectorofendpointsfeatur": 168, "infer_shap": 168, "averagepointwiseeuclideanmetr": 168, "cosinemetr": 168, "cythonmetr": 168, "minimumaveragedirectflipmetr": 168, "sumpointwiseeuclideanmetr": 168, "dist": 168, "distance_matrix": 168, "constantobservationmodel": 168, "iteratedconditionalmod": 168, "bench_streamlin": 171, "direction_gett": 171, "distanc": 171, "fbcmeasur": 171, "propspe": 171, "stopping_criterion": 171, "streamlinespe": 171, "vox2track": 171, "setup": 171, "generate_streamlin": 171, "bench_set_number_of_point": 171, "bench_length": 171, "bench_compress_streamlin": 171, "directiongett": 171, "add_3vec": 171, "approx_polygon_track": 171, "approximate_mdl_trajectori": 171, "bundles_distances_mam": 171, "bundles_distances_mdf": 171, "cut_plan": 171, "inner_3vec": 171, "intersect_segment_cylind": 171, "larch_3merg": 171, "larch_3split": 171, "lee_angle_dist": 171, "lee_perpendicular_dist": 171, "local_skeleton_clust": 171, "local_skeleton_clustering_3pt": 171, "mam_dist": 171, "minimum_closest_dist": 171, "most_similar_track_mam": 171, "mul_3vec": 171, "norm_3vec": 171, "normalized_3vec": 171, "point_segment_sq_dist": 171, "point_track_sq_distance_check": 171, "sub_3vec": 171, "track_dist_3pt": 171, "track_roi_intersection_check": 171, "kdtree": 171, "interp1d": 171, "compute_rfbc": 171, "min_moving_averag": 171, "pft_tracker": 171, "eudx_both_direct": 171, "ndarray_offset": 171, "actstoppingcriterion": 171, "anatomicalstoppingcriterion": 171, "binarystoppingcriterion": 171, "cmcstoppingcriterion": 171, "stoppingcriterion": 171, "streamlinestatu": 171, "thresholdstoppingcriterion": 171, "compress_streamlin": 171, "set_number_of_point": 171, "streamline_map": 171, "track_count": 171, "tabl": [], "comput": [24, 27, 39, 45, 58, 62, 92, 100, 112, 116, 125, 129, 136], "correl": 69, "cti": 167, "correlationtensormodel": 167, "correlationtensorfit": 167, "from_qte_to_cti": 167, "multi_gaussian_k_from_c": 167, "split_cti_param": 167, "cti_predict": 167, "params_to_cti_param": 167, "ls_fit_cti": 167, "cti_design_matrix": 167}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"API changes": [[0, "api-changes"]], "DIPY 1.7.0 changes": [[0, "dipy-1-7-0-changes"]], "DIPY 1.6.0 changes": [[0, "dipy-1-6-0-changes"]], "DIPY 1.5.0 changes": [[0, "dipy-1-5-0-changes"]], "DIPY 1.4.1 changes": [[0, "dipy-1-4-1-changes"]], "DIPY 1.4.0 changes": [[0, "dipy-1-4-0-changes"]], "DIPY 1.3.0 changes": [[0, "dipy-1-3-0-changes"]], "DIPY 1.2.0 changes": [[0, "dipy-1-2-0-changes"]], "DIPY 1.1.1 changes": [[0, "dipy-1-1-1-changes"]], "DIPY 1.0.0 changes": [[0, "dipy-1-0-0-changes"]], "DIPY 0.16 Changes": [[0, "dipy-0-16-changes"]], "DIPY 0.15 Changes": [[0, "dipy-0-15-changes"]], "DIPY 0.14 Changes": [[0, "dipy-0-14-changes"]], "DIPY 0.13 Changes": [[0, "dipy-0-13-changes"]], "DIPY 0.12 Changes": [[0, "dipy-0-12-changes"]], "DIPY 0.10 Changes": [[0, "dipy-0-10-changes"]], "DIPY 0.9 Changes": [[0, "dipy-0-9-changes"]], "DIPY 0.8 Changes": [[0, "dipy-0-8-changes"]], "Changes between 0.7.1 and 0.6": [[0, "changes-between-0-7-1-and-0-6"]], "Publications": [[1, "publications"]], "A note on citing our work": [[1, "a-note-on-citing-our-work"]], "DIPY Coding Style Guideline": [[2, "dipy-coding-style-guideline"]], "Coding style": [[2, "coding-style"]], "Imports": [[2, "imports"], [2, "id1"]], "Cython coding style": [[2, "cython-coding-style"]], "Variable declaration": [[2, "variable-declaration"]], "Using C libraries": [[2, "using-c-libraries"]], "Error return values": [[2, "error-return-values"]], "Pointers and references": [[2, "pointers-and-references"]], "Casting": [[2, "casting"]], "Loops": [[2, "loops"]], "Documentation": [[2, "documentation"]], "References": [[2, "references"], [55, "references"], [69, "references"], [84, "references"], [85, "references"], [97, "references"], [142, "references"], [144, "references"], [145, "references"], [150, "references"], [151, "references"], [152, "references"], [153, "references"], [234, "references"], [148, "references"], [147, "references"], [21, "references"], [22, "references"], [26, "references"], [28, "references"], [29, "references"], [31, "references"], [32, "references"], [34, "references"], [35, "references"], [36, "references"], [37, "references"], [47, "references"], [48, "references"], [50, "references"], [51, "references"], [52, "references"], [53, "references"], [56, "references"], [59, "references"], [63, "references"], [64, "references"], [66, "references"], [67, "references"], [68, "references"], [70, "references"], [71, "references"], [75, "references"], [76, "references"], [77, "references"], [80, "references"], [81, "references"], [82, "references"], [86, "references"], [87, "references"], [89, "references"], [90, "references"], [91, "references"], [95, "references"], [96, "references"], [101, "references"], [102, "references"], [103, "references"], [105, "references"], [106, "references"], [109, "references"], [110, "references"], [117, "references"], [119, "references"], [120, "references"], [121, "references"], [122, "references"], [124, "references"], [130, "references"], [159, "references"], [159, "id42"], [159, "id47"], [159, "id55"], [159, "id60"], [159, "id65"], [159, "id71"], [159, "id147"], [159, "id153"], [159, "id158"], [159, "id162"], [159, "id203"], [159, "id228"], [159, "id251"], [159, "id256"], [159, "id260"], [159, "id274"], [159, "id287"], [159, "id290"], [159, "id293"], [159, "id296"], [161, "references"], [161, "id17"], [161, "id52"], [161, "id76"], [161, "id90"], [161, "id134"], [162, "references"], [163, "references"], [163, "id7"], [163, "id25"], [163, "id31"], [163, "id43"], [163, "id50"], [163, "id55"], [163, "id59"], [163, "id64"], [163, "id72"], [163, "id77"], [163, "id81"], [163, "id90"], [163, "id94"], [163, "id102"], [163, "id109"], [164, "references"], [164, "id27"], [165, "references"], [166, "references"], [166, "id30"], [166, "id77"], [167, "references"], [167, "id94"], [167, "id105"], [167, "id117"], [167, "id125"], [167, "id148"], [167, "id153"], [167, "id161"], [167, "id184"], [167, "id197"], [167, "id215"], [167, "id226"], [167, "id233"], [167, "id241"], [167, "id247"], [167, "id253"], [167, "id271"], [167, "id284"], [167, "id296"], [167, "id305"], [167, "id309"], [167, "id314"], [167, "id318"], [167, "id329"], [167, "id335"], [167, "id340"], [167, "id344"], [167, "id347"], [167, "id351"], [167, "id355"], [167, "id359"], [167, "id363"], [167, "id368"], [167, "id373"], [167, "id380"], [167, "id396"], [167, "id419"], [167, "id430"], [167, "id441"], [167, "id450"], [167, "id457"], [167, "id494"], [167, "id507"], [167, "id513"], [167, "id519"], [167, "id529"], [167, "id536"], [167, "id544"], [167, "id573"], [167, "id592"], [167, "id597"], [167, "id609"], [167, "id614"], [167, "id620"], [167, "id633"], [167, "id642"], [167, "id654"], [167, "id682"], [167, "id703"], [167, "id714"], [167, "id719"], [167, "id724"], [167, "id729"], [167, "id733"], [167, "id737"], [167, "id741"], [167, "id746"], [167, "id751"], [167, "id756"], [167, "id761"], [167, "id766"], [167, "id771"], [167, "id776"], [167, "id781"], [167, "id785"], [167, "id789"], [167, "id793"], [167, "id797"], [167, "id801"], [167, "id805"], [167, "id809"], [167, "id813"], [167, "id817"], [167, "id824"], [167, "id832"], [167, "id838"], [167, "id843"], [167, "id848"], [167, "id855"], [167, "id860"], [167, "id865"], [167, "id870"], [167, "id875"], [167, "id882"], [167, "id890"], [167, "id915"], [167, "id918"], [167, "id925"], [167, "id933"], [167, "id941"], [167, "id948"], [167, "id956"], [167, "id962"], [167, "id975"], [167, "id979"], [167, "id983"], [167, "id989"], [167, "id995"], [167, "id1000"], [167, "id1005"], [167, "id1011"], [167, "id1017"], [167, "id1021"], [167, "id1024"], [167, "id1030"], [167, "id1032"], [167, "id1034"], [167, "id1036"], [167, "id1038"], [167, "id1040"], [167, "id1042"], [167, "id1044"], [167, "id1046"], [167, "id1049"], [167, "id1052"], [167, "id1056"], [167, "id1062"], [167, "id1126"], [167, "id1188"], [167, "id1192"], [167, "id1197"], [167, "id1207"], [167, "id1227"], [167, "id1234"], [167, "id1241"], [167, "id1248"], [167, "id1260"], [167, "id1268"], [167, "id1279"], [167, "id1282"], [167, "id1287"], [167, "id1291"], [168, "references"], [168, "id19"], [168, "id25"], [168, "id29"], [168, "id32"], [168, "id36"], [168, "id40"], [168, "id73"], [168, "id80"], [168, "id95"], [168, "id100"], [168, "id139"], [168, "id144"], [168, "id168"], [169, "references"], [169, "id20"], [169, "id26"], [169, "id31"], [169, "id39"], [169, "id44"], [169, "id54"], [169, "id60"], [169, "id64"], [169, "id68"], [169, "id77"], [169, "id81"], [169, "id85"], [169, "id89"], [169, "id93"], [169, "id97"], [170, "references"], [170, "id7"], [171, "references"], [171, "id144"], [171, "id217"], [171, "id221"], [171, "id243"], [171, "id264"], [171, "id297"], [171, "id317"], [171, "id320"], [172, "references"], [172, "id3"], [173, "references"], [173, "id12"], [173, "id19"], [173, "id21"], [173, "id25"], [173, "id31"], [173, "id35"], [173, "id53"], [173, "id57"], [173, "id64"], [173, "id67"], [173, "id71"], [173, "id76"], [173, "id79"], [173, "id83"], [173, "id86"], [173, "id90"], [173, "id96"], [173, "id99"], [173, "id102"], [173, "id104"], [173, "id106"], [175, "references"], [176, "references"], [177, "references"], [178, "references"], [179, "references"], [180, "references"], [181, "references"], [182, "references"], [183, "references"], [184, "references"], [185, "references"], [186, "references"], [187, "references"], [188, "references"], [189, "references"], [190, "references"], [191, "references"], [192, "references"], [193, "references"], [194, "references"], [195, "references"], [196, "references"], [197, "references"], [198, "references"], [199, "references"], [200, "references"], [201, "references"], [202, "references"], [203, "references"], [204, "references"], [205, "references"], [206, "references"]], "Commit message codes": [[3, "commit-message-codes"]], "Configure git": [[4, "configure-git"]], "Overview": [[4, "overview"], [5, "overview"], [10, "overview"], [15, "overview"], [16, "overview"], [40, "overview"], [55, "overview"], [57, "overview"]], "In detail": [[4, "in-detail"], [10, "in-detail"], [15, "in-detail"], [16, "in-detail"]], "user.name and user.email": [[4, "user-name-and-user-email"]], "Aliases": [[4, "aliases"]], "Editor": [[4, "editor"]], "Merging": [[4, "merging"]], "Fancy log output": [[4, "fancy-log-output"]], "Development workflow": [[5, "development-workflow"]], "Workflow summary": [[5, "workflow-summary"]], "Consider deleting your master branch": [[5, "consider-deleting-your-master-branch"]], "Update the mirror of trunk": [[5, "update-the-mirror-of-trunk"]], "Make a new feature branch": [[5, "make-a-new-feature-branch"]], "The editing workflow": [[5, "the-editing-workflow"]], "In more detail": [[5, "in-more-detail"]], "Ask for your changes to be reviewed or merged": [[5, "ask-for-your-changes-to-be-reviewed-or-merged"]], "Some other things you might want to do": [[5, "some-other-things-you-might-want-to-do"]], "Delete a branch on github": [[5, "delete-a-branch-on-github"]], "Several people sharing a single repository": [[5, "several-people-sharing-a-single-repository"]], "Explore your repository": [[5, "explore-your-repository"]], "Rebasing on trunk": [[5, "rebasing-on-trunk"]], "Recovering from mess-ups": [[5, "recovering-from-mess-ups"]], "Rewriting commit history": [[5, "rewriting-commit-history"]], "Two and three dots in difference specs": [[6, "two-and-three-dots-in-difference-specs"]], "Following the latest source": [[7, "following-the-latest-source"]], "Get the local copy of the code": [[7, "get-the-local-copy-of-the-code"]], "Updating the code": [[7, "updating-the-code"]], "Making your own copy (fork) of DIPY": [[8, "making-your-own-copy-fork-of-dipy"]], "Set up and configure a github account": [[8, "set-up-and-configure-a-github-account"]], "Create your own forked copy of DIPY": [[8, "create-your-own-forked-copy-of-dipy"]], "Git for development": [[9, "git-for-development"]], "Install git": [[10, "install-git"]], "Introduction": [[11, "introduction"], [18, "introduction"]], "git resources": [[12, "git-resources"]], "Tutorials and summaries": [[12, "tutorials-and-summaries"]], "Advanced git workflow": [[12, "advanced-git-workflow"]], "Manual pages online": [[12, "manual-pages-online"]], "Working with DIPY source code": [[13, "working-with-dipy-source-code"]], "Maintainer workflow": [[14, "maintainer-workflow"]], "Integrating changes": [[14, "integrating-changes"]], "A few commits": [[14, "a-few-commits"]], "A long series of commits": [[14, "a-long-series-of-commits"]], "Check the history": [[14, "check-the-history"]], "Push to trunk": [[14, "push-to-trunk"]], "Making a patch": [[15, "making-a-patch"]], "Making patches": [[15, "making-patches"]], "Moving from patching to development": [[15, "moving-from-patching-to-development"]], "Set up your fork": [[16, "set-up-your-fork"]], "Clone your fork": [[16, "clone-your-fork"]], "Linking your repository to the upstream repo": [[16, "linking-your-repository-to-the-upstream-repo"]], "A guide to making a DIPY release": [[19, "a-guide-to-making-a-dipy-release"]], "Release checklist": [[19, "release-checklist"]], "Doing the release": [[19, "doing-the-release"]], "Uploading binary builds for the release": [[19, "uploading-binary-builds-for-the-release"]], "Other stuff that needs doing for the release": [[19, "other-stuff-that-needs-doing-for-the-release"]], "Developers": [[20, "developers"]], "Contextual Enhancement": [[23, "contextual-enhancement"], [41, "contextual-enhancement"]], "Computation times": [[24, "computation-times"], [27, "computation-times"], [39, "computation-times"], [45, "computation-times"], [58, "computation-times"], [62, "computation-times"], [92, "computation-times"], [100, "computation-times"], [112, "computation-times"], [116, "computation-times"], [125, "computation-times"], [129, "computation-times"], [136, "computation-times"]], "Fiber Tracking": [[25, "fiber-tracking"], [41, "fiber-tracking"]], "File Formats": [[38, "file-formats"], [41, "file-formats"]], "Read/Write streamline files": [[40, "read-write-streamline-files"]], "Multiprocessing": [[42, "multiprocessing"], [41, "multiprocessing"]], "Parallel reconstruction using Q-Ball": [[43, "parallel-reconstruction-using-q-ball"]], "Parallel reconstruction using CSD": [[44, "parallel-reconstruction-using-csd"]], "Preprocessing": [[54, "preprocessing"], [41, "preprocessing"]], "Between-volumes Motion Correction on DWI datasets": [[55, "between-volumes-motion-correction-on-dwi-datasets"]], "Reslice diffusion datasets": [[57, "reslice-diffusion-datasets"]], "Quick Start": [[60, "quick-start"], [41, "quick-start"]], "Reconstruction of the diffusion signal with the correlation tensor model": [[69, "reconstruction-of-the-diffusion-signal-with-the-correlation-tensor-model"]], "Reconstruct with Generalized Q-Sampling Imaging": [[78, "reconstruct-with-generalized-q-sampling-imaging"]], "Reconstruct with Q-space Trajectory Imaging (QTI)": [[84, "reconstruct-with-q-space-trajectory-imaging-qti"]], "Theory": [[84, "theory"], [85, "theory"]], "Usage example": [[84, "usage-example"], [85, "usage-example"]], "Applying positivity constraints to Q-space Trajectory Imaging (QTI+)": [[85, "applying-positivity-constraints-to-q-space-trajectory-imaging-qti"]], "Installation": [[85, "installation"], [241, "installation"]], "Nonrigid Bundle Registration with BundleWarp": [[97, "nonrigid-bundle-registration-with-bundlewarp"]], "Registration": [[98, "registration"], [152, "registration"], [41, "registration"]], "Segmentation": [[107, "segmentation"], [41, "segmentation"]], "Simulation": [[114, "simulation"], [41, "simulation"]], "Streamlines Analysis and Connectivity": [[123, "streamlines-analysis-and-connectivity"], [41, "streamlines-analysis-and-connectivity"]], "Visualization": [[128, "visualization"], [41, "visualization"]], "Creating a new combined workflow": [[134, "creating-a-new-combined-workflow"]], "Workflows": [[135, "workflows"], [41, "workflows"]], "Creating a new workflow.": [[137, "creating-a-new-workflow"]], "Frequently Asked Questions": [[138, "frequently-asked-questions"]], "Theoretical": [[138, "theoretical"]], "Practical": [[138, "practical"]], "Glossary": [[140, "glossary"]], "Introduction to command line interfaces": [[142, "introduction-to-command-line-interfaces"]], "BUndle ANalytics (BUAN) framework": [[143, "bundle-analytics-buan-framework"]], "Group Comparison of Bundle Profiles": [[143, "group-comparison-of-bundle-profiles"]], "Shape similarity of specific bundles across the populations": [[143, "shape-similarity-of-specific-bundles-across-the-populations"]], "Reproducing results on larger dataset:": [[143, "reproducing-results-on-larger-dataset"]], "White Matter Bundle Segmentation with RecoBundles": [[144, "white-matter-bundle-segmentation-with-recobundles"]], "Streamline-Based Linear Registration": [[144, "streamline-based-linear-registration"]], "RecoBundles": [[144, "recobundles"], [168, "recobundles"]], "Nonrigid White Matter Bundle Registration with BundleWarp": [[145, "nonrigid-white-matter-bundle-registration-with-bundlewarp"]], "Partially Deformable BundleWarp Registration": [[145, "partially-deformable-bundlewarp-registration"]], "Fully Deformable BundleWarp Registration": [[145, "fully-deformable-bundlewarp-registration"]], "Downloading DIPY datasets": [[146, "downloading-dipy-datasets"]], "Between-Volumes Motion Correction": [[150, "between-volumes-motion-correction"]], "Motion Correction": [[150, "motion-correction"]], "Reconstruction": [[151, "reconstruction"], [41, "reconstruction"], [65, "reconstruction"]], "Constrained Spherical Deconvolution (CSD)": [[151, "constrained-spherical-deconvolution-csd"]], "Mean Apparent Propagator (MAP)-MRI": [[151, "mean-apparent-propagator-map-mri"]], "Diffusion Tensor Imaging (DTI)": [[151, "diffusion-tensor-imaging-dti"]], "Diffusion Kurtosis Imaging (DKI)": [[151, "diffusion-kurtosis-imaging-dki"]], "Constant Solid Angle (CSA)": [[151, "constant-solid-angle-csa"]], "Intravoxel Incoherent Motion (IVIM)": [[151, "intravoxel-incoherent-motion-ivim"]], "Image Registration": [[152, "image-registration"]], "Symmetric Diffeomorphic Registration": [[152, "symmetric-diffeomorphic-registration"]], "Apply a Transformation": [[152, "apply-a-transformation"]], "Streamline-based Registration": [[152, "streamline-based-registration"]], "Tracking": [[153, "tracking"]], "Local Fiber Tracking": [[153, "local-fiber-tracking"]], "EuDX Tracking": [[153, "eudx-tracking"]], "Deterministic Tracking": [[153, "deterministic-tracking"]], "Probabilistic Tracking": [[153, "probabilistic-tracking"]], "Closest Peaks Tracking": [[153, "closest-peaks-tracking"]], "Particle Filtering Tracking (PFT)": [[153, "particle-filtering-tracking-pft"]], "Overview of Fiber Tracking Methods": [[153, "overview-of-fiber-tracking-methods"]], "Older Highlights": [[154, "older-highlights"]], "Past Announcements": [[155, "past-announcements"]], "Release notes for DIPY version 0.10": [[208, "release-notes-for-dipy-version-0-10"]], "Release notes for DIPY version 0.11": [[209, "release-notes-for-dipy-version-0-11"]], "Release notes for DIPY version 0.12": [[210, "release-notes-for-dipy-version-0-12"]], "Release notes for DIPY version 0.13": [[211, "release-notes-for-dipy-version-0-13"]], "Release notes for DIPY version 0.14": [[212, "release-notes-for-dipy-version-0-14"]], "Release notes for DIPY version 0.15": [[213, "release-notes-for-dipy-version-0-15"]], "Release notes for DIPY version 0.16": [[214, "release-notes-for-dipy-version-0-16"]], "Release notes for DIPY version 0.6": [[215, "release-notes-for-dipy-version-0-6"]], "Release notes for DIPY version 0.7": [[216, "release-notes-for-dipy-version-0-7"]], "Release notes for DIPY version 0.8": [[217, "release-notes-for-dipy-version-0-8"]], "Release notes for DIPY version 0.9": [[218, "release-notes-for-dipy-version-0-9"]], "Release notes for DIPY version 1.0": [[219, "release-notes-for-dipy-version-1-0"]], "Release notes for DIPY version 1.1": [[220, "release-notes-for-dipy-version-1-1"]], "Release notes for DIPY version 1.2": [[221, "release-notes-for-dipy-version-1-2"]], "Release notes for DIPY version 1.3": [[222, "release-notes-for-dipy-version-1-3"]], "Release notes for DIPY version 1.4": [[223, "release-notes-for-dipy-version-1-4"]], "Release notes for DIPY version 1.4.1": [[224, "release-notes-for-dipy-version-1-4-1"]], "Release notes for DIPY version 1.5": [[225, "release-notes-for-dipy-version-1-5"]], "Release notes for DIPY version 1.6": [[226, "release-notes-for-dipy-version-1-6"]], "Release notes for DIPY version 1.7": [[227, "release-notes-for-dipy-version-1-7"]], "Subscribe": [[229, "subscribe"]], "DIY Stuff about b and q": [[230, "diy-stuff-about-b-and-q"]], "The B matrix and Siemens DICOM": [[230, "the-b-matrix-and-siemens-dicom"], [231, "the-b-matrix-and-siemens-dicom"]], "\u2026 and what about \u2018q\u2019?": [[230, "and-what-about-q"]], "Generalised Q-Sampling Imaging": [[232, "generalised-q-sampling-imaging"]], "Theory and concepts": [[233, "theory-and-concepts"]], "Spherical Harmonic bases": [[234, "spherical-harmonic-bases"]], "Spherical coordinates": [[235, "spherical-coordinates"]], "Terms": [[235, "terms"]], "The physics convention": [[235, "the-physics-convention"]], "The mathematics convention": [[235, "the-mathematics-convention"]], "Matlab convention": [[235, "matlab-convention"]], "DIPY Developer Guide": [[17, "dipy-developer-guide"]], "Gibbs Unringing": [[148, "gibbs-unringing"]], "Suppress Gibbs Oscillations": [[148, "suppress-gibbs-oscillations"]], "Reconstruction methods available in DIPY": [[156, "id1"], [41, "id2"]], "Denoising": [[147, "denoising"]], "Denoising using Overcomplete Local PCA": [[147, "denoising-using-overcomplete-local-pca"]], "Denoising using Marcenko-Pastur PCA": [[147, "denoising-using-marcenko-pastur-pca"]], "Denoising using NLMEANS": [[147, "denoising-using-nlmeans"]], "Overview of Denoising Methods": [[147, "overview-of-denoising-methods"]], "Diffusion": [[147, "diffusion"]], "Structural": [[147, "structural"]], "Data": [[236, "data"]], "How to get some data": [[236, "how-to-get-some-data"]], "Datasets List": [[236, "datasets-list"]], "Installing a release": [[241, "installing-a-release"]], "Using Anaconda:": [[241, "using-anaconda"]], "Using packages:": [[241, "using-packages"]], "Windows": [[241, "windows"], [241, "id2"]], "OSX": [[241, "osx"], [241, "id3"]], "Linux": [[241, "linux"]], "Using pip:": [[241, "using-pip"]], "Support": [[241, "support"], [141, "support"]], "Contact us:": [[241, "contact-us"]], "Common problems:": [[241, "common-problems"]], "Multiple installations": [[241, "multiple-installations"]], "Alternatives to Anaconda": [[241, "alternatives-to-anaconda"]], "Memory issues": [[241, "memory-issues"]], "Note on python versions": [[241, "note-on-python-versions"]], "Installing from source": [[241, "installing-from-source"]], "Getting the source": [[241, "getting-the-source"]], "Building and installing": [[241, "building-and-installing"], [241, "id4"]], "Install from source (all operating systems)": [[241, "install-from-source-all-operating-systems"]], "Install from source for Unix (e.g Linux, OSX)": [[241, "install-from-source-for-unix-e-g-linux-osx"]], "Ubuntu/Debian": [[241, "ubuntu-debian"]], "Fedora / Mandriva maybe Redhat": [[241, "fedora-mandriva-maybe-redhat"]], "OpenMP with OSX": [[241, "openmp-with-osx"]], "Under Anaconda": [[241, "under-anaconda"]], "Under Homebrew Python or python.org Python": [[241, "under-homebrew-python-or-python-org-python"]], "Testing": [[241, "testing"]], "Documentation (Unix only)": [[241, "documentation-unix-only"]], "Tip": [[241, "tip"]], "Troubleshooting": [[241, "troubleshooting"]], "Mission statement": [[243, "mission-statement"]], "What is DIPY?": [[242, "what-is-dipy"]], "Examples": [[41, "examples"], [159, "examples"], [159, "id182"], [161, "examples"], [161, "id10"], [161, "id13"], [161, "id16"], [161, "id21"], [161, "id25"], [161, "id31"], [161, "id34"], [161, "id37"], [161, "id42"], [161, "id63"], [161, "id67"], [161, "id71"], [161, "id86"], [161, "id92"], [161, "id116"], [161, "id117"], [161, "id120"], [161, "id133"], [161, "id138"], [161, "id141"], [161, "id144"], [161, "id169"], [161, "id174"], [161, "id179"], [161, "id184"], [161, "id191"], [161, "id194"], [162, "examples"], [162, "id7"], [162, "id10"], [162, "id28"], [162, "id42"], [163, "examples"], [165, "examples"], [165, "id17"], [165, "id21"], [167, "examples"], [167, "id91"], [167, "id549"], [167, "id556"], [167, "id561"], [167, "id626"], [167, "id710"], [167, "id1109"], [167, "id1122"], [167, "id1174"], [167, "id1304"], [169, "examples"], [169, "id9"], [169, "id13"], [169, "id23"], [169, "id49"], [169, "id53"], [169, "id74"], [171, "examples"], [171, "id18"], [171, "id19"], [171, "id25"], [171, "id29"], [171, "id33"], [171, "id38"], [171, "id53"], [171, "id56"], [171, "id59"], [171, "id62"], [171, "id82"], [171, "id85"], [171, "id89"], [171, "id92"], [171, "id95"], [171, "id98"], [171, "id103"], [171, "id111"], [171, "id115"], [171, "id130"], [171, "id166"], [171, "id171"], [171, "id176"], [171, "id179"], [171, "id184"], [171, "id187"], [171, "id193"], [171, "id197"], [171, "id200"], [171, "id203"], [171, "id206"], [171, "id209"], [171, "id214"], [171, "id240"], [171, "id246"], [171, "id261"], [171, "id268"], [171, "id271"], [171, "id278"], [171, "id282"], [171, "id286"], [171, "id290"], [171, "id323"], [171, "id326"], [172, "examples"]], "Contents": [[41, "contents"]], "A quick overview of features": [[228, "a-quick-overview-of-features"]], "Systems supported": [[228, "systems-supported"]], "DIPY Workflows Interfaces": [[149, "dipy-workflows-interfaces"]], "Getting Started": [[239, "getting-started"]], "Next Steps": [[239, "next-steps"]], "Diffusion Imaging In Python - Documentation": [[141, "diffusion-imaging-in-python-documentation"]], "Quick links": [[141, "quick-links"]], "Highlights": [[141, "highlights"]], "Announcements": [[141, "announcements"]], "DIPY User Guide": [[240, "dipy-user-guide"]], "Crossing-preserving contextual enhancement": [[21, "crossing-preserving-contextual-enhancement"]], "Fiber to bundle coherence measures": [[22, "fiber-to-bundle-coherence-measures"]], "Acknowledgments": [[22, "acknowledgments"]], "Linear fascicle evaluation (LiFE)": [[26, "linear-fascicle-evaluation-life"]], "Surface seeding for tractography": [[28, "surface-seeding-for-tractography"]], "Display the surface": [[28, "display-the-surface"]], "Generate a list of seeding positions": [[28, "generate-a-list-of-seeding-positions"]], "Bootstrap and Closest Peak Direction Getters Example": [[29, "bootstrap-and-closest-peak-direction-getters-example"]], "Example #1: Bootstrap direction getter with CSD Model": [[29, "example-1-bootstrap-direction-getter-with-csd-model"]], "Example #2: Closest peak direction getter with CSD Model": [[29, "example-2-closest-peak-direction-getter-with-csd-model"]], "An introduction to the Deterministic Maximum Direction Getter": [[30, "an-introduction-to-the-deterministic-maximum-direction-getter"]], "Introduction to Basic Tracking": [[31, "introduction-to-basic-tracking"], [63, "introduction-to-basic-tracking"]], "Particle Filtering Tractography": [[32, "particle-filtering-tractography"], [32, "id4"]], "CMC/ACT Stopping Criterion": [[32, "cmc-act-stopping-criterion"]], "An introduction to the Probabilistic Direction Getter": [[33, "an-introduction-to-the-probabilistic-direction-getter"]], "Parallel Transport Tractography": [[34, "parallel-transport-tractography"]], "Tracking with Robust Unbiased Model-BAsed Spherical Deconvolution (RUMBA-SD)": [[35, "tracking-with-robust-unbiased-model-based-spherical-deconvolution-rumba-sd"]], "Tracking with the Sparse Fascicle Model": [[36, "tracking-with-the-sparse-fascicle-model"]], "Using Various Stopping Criterion for Tractography": [[37, "using-various-stopping-criterion-for-tractography"]], "Threshold Stopping Criterion": [[37, "threshold-stopping-criterion"]], "Binary Stopping Criterion": [[37, "binary-stopping-criterion"]], "ACT Stopping Criterion": [[37, "act-stopping-criterion"]], "Notes": [[37, "notes"], [159, "notes"], [159, "id8"], [159, "id11"], [159, "id16"], [159, "id54"], [159, "id88"], [159, "id108"], [159, "id116"], [159, "id119"], [159, "id122"], [159, "id163"], [159, "id207"], [159, "id209"], [159, "id213"], [159, "id217"], [159, "id221"], [159, "id225"], [159, "id235"], [159, "id246"], [159, "id254"], [159, "id281"], [159, "id284"], [159, "id306"], [159, "id331"], [159, "id334"], [159, "id343"], [159, "id346"], [159, "id351"], [159, "id354"], [159, "id357"], [159, "id360"], [159, "id363"], [159, "id366"], [159, "id369"], [159, "id372"], [161, "notes"], [161, "id28"], [161, "id47"], [161, "id55"], [161, "id64"], [161, "id68"], [161, "id72"], [161, "id85"], [161, "id89"], [161, "id112"], [161, "id162"], [161, "id168"], [161, "id173"], [161, "id178"], [161, "id183"], [162, "notes"], [162, "id15"], [162, "id19"], [162, "id43"], [162, "id48"], [162, "id51"], [162, "id67"], [162, "id71"], [163, "notes"], [163, "id24"], [163, "id63"], [163, "id69"], [163, "id86"], [164, "notes"], [164, "id12"], [165, "notes"], [165, "id23"], [165, "id66"], [165, "id69"], [167, "notes"], [167, "id93"], [167, "id121"], [167, "id124"], [167, "id146"], [167, "id152"], [167, "id157"], [167, "id160"], [167, "id193"], [167, "id213"], [167, "id222"], [167, "id232"], [167, "id237"], [167, "id267"], [167, "id280"], [167, "id294"], [167, "id313"], [167, "id317"], [167, "id333"], [167, "id338"], [167, "id342"], [167, "id349"], [167, "id353"], [167, "id357"], [167, "id361"], [167, "id366"], [167, "id378"], [167, "id414"], [167, "id416"], [167, "id429"], [167, "id437"], [167, "id440"], [167, "id444"], [167, "id449"], [167, "id453"], [167, "id456"], [167, "id460"], [167, "id463"], [167, "id474"], [167, "id477"], [167, "id480"], [167, "id483"], [167, "id486"], [167, "id492"], [167, "id500"], [167, "id506"], [167, "id512"], [167, "id518"], [167, "id522"], [167, "id528"], [167, "id535"], [167, "id548"], [167, "id555"], [167, "id560"], [167, "id577"], [167, "id623"], [167, "id631"], [167, "id648"], [167, "id653"], [167, "id659"], [167, "id905"], [167, "id908"], [167, "id911"], [167, "id923"], [167, "id931"], [167, "id939"], [167, "id946"], [167, "id954"], [167, "id1073"], [167, "id1075"], [167, "id1079"], [167, "id1081"], [167, "id1083"], [167, "id1085"], [167, "id1088"], [167, "id1091"], [167, "id1094"], [167, "id1097"], [167, "id1100"], [167, "id1103"], [167, "id1118"], [167, "id1161"], [167, "id1177"], [168, "notes"], [168, "id44"], [168, "id49"], [168, "id85"], [168, "id105"], [168, "id117"], [168, "id120"], [168, "id123"], [168, "id125"], [168, "id138"], [168, "id143"], [168, "id158"], [168, "id177"], [168, "id180"], [168, "id183"], [168, "id185"], [169, "notes"], [169, "id12"], [169, "id17"], [169, "id52"], [169, "id58"], [170, "notes"], [171, "notes"], [171, "id17"], [171, "id24"], [171, "id28"], [171, "id32"], [171, "id39"], [171, "id42"], [171, "id45"], [171, "id48"], [171, "id67"], [171, "id71"], [171, "id88"], [171, "id102"], [171, "id112"], [171, "id116"], [171, "id119"], [171, "id131"], [171, "id137"], [171, "id190"], [171, "id235"], [171, "id237"], [171, "id251"], [171, "id262"], [171, "id274"], [171, "id281"], [171, "id312"], [172, "notes"], [173, "notes"]], "Brain segmentation with median_otsu": [[46, "brain-segmentation-with-median-otsu"], [104, "brain-segmentation-with-median-otsu"]], "Denoise images using Adaptive Soft Coefficient Matching (ASCM)": [[47, "denoise-images-using-adaptive-soft-coefficient-matching-ascm"]], "Suppress Gibbs oscillations": [[48, "suppress-gibbs-oscillations"]], "Denoise images using Local PCA via empirical thresholds": [[49, "denoise-images-using-local-pca-via-empirical-thresholds"]], "Estimate the noise standard deviation": [[49, "estimate-the-noise-standard-deviation"]], "Perform the localPCA using the function localpca": [[49, "perform-the-localpca-using-the-function-localpca"]], "Denoise images using the Marcenko-Pastur PCA algorithm": [[50, "denoise-images-using-the-marcenko-pastur-pca-algorithm"]], "Noise standard deviation estimation using the Marcenko-Pastur PCA algorithm": [[50, "noise-standard-deviation-estimation-using-the-marcenko-pastur-pca-algorithm"]], "Denoise images using Non-Local Means (NLMEANS)": [[51, "denoise-images-using-non-local-means-nlmeans"]], "Patch2Self: Self-Supervised Denoising via Statistical Independence": [[52, "patch2self-self-supervised-denoising-via-statistical-independence"]], "Gradients and Spheres": [[53, "gradients-and-spheres"]], "Noise estimation using PIESNO": [[56, "noise-estimation-using-piesno"]], "SNR estimation for Diffusion-Weighted Images": [[59, "snr-estimation-for-diffusion-weighted-images"]], "SNR for the b=0 image is : \u2018\u201942.0695455758\u2019\u2019": [[59, "snr-for-the-b-0-image-is-42-0695455758"]], "SNR for direction 57  [-0.05039  0.99871  0.0054406] is : \u2018\u201923.9329492871\u2019\u2019": [[59, "snr-for-direction-57-0-05039-0-99871-0-0054406-is-23-9329492871"]], "Getting started with DIPY": [[61, "getting-started-with-dipy"]], "Local reconstruction using the Histological ResDNN": [[64, "local-reconstruction-using-the-histological-resdnn"]], "K-fold cross-validation for model comparison": [[66, "k-fold-cross-validation-for-model-comparison"]], "Reconstruct with Constant Solid Angle (Q-Ball)": [[67, "reconstruct-with-constant-solid-angle-q-ball"]], "Reconstruction with Constrained Spherical Deconvolution": [[68, "reconstruction-with-constrained-spherical-deconvolution"]], "Step 1. Estimation of the fiber response function": [[68, "step-1-estimation-of-the-fiber-response-function"], [86, "step-1-estimation-of-the-fiber-response-function"]], "Step 2. fODF reconstruction": [[68, "step-2-fodf-reconstruction"]], "Reconstruction of the diffusion signal with the kurtosis tensor model": [[70, "reconstruction-of-the-diffusion-signal-with-the-kurtosis-tensor-model"]], "Constrained optimization for DKI": [[70, "constrained-optimization-for-dki"]], "Mean kurtosis tensor and kurtosis fractional anisotropy": [[70, "mean-kurtosis-tensor-and-kurtosis-fractional-anisotropy"]], "Reconstruction of the diffusion signal with the WMTI model": [[71, "reconstruction-of-the-diffusion-signal-with-the-wmti-model"]], "Reconstruct with Diffusion Spectrum Imaging": [[72, "reconstruct-with-diffusion-spectrum-imaging"]], "Calculate DSI-based scalar maps": [[73, "calculate-dsi-based-scalar-maps"]], "DSI Deconvolution vs DSI": [[74, "dsi-deconvolution-vs-dsi"], [115, "dsi-deconvolution-vs-dsi"]], "Reconstruction of the diffusion signal with the Tensor model": [[75, "reconstruction-of-the-diffusion-signal-with-the-tensor-model"]], "Crossing invariant fiber response function with FORECAST model": [[76, "crossing-invariant-fiber-response-function-with-forecast-model"]], "Using the free water elimination model to remove DTI free water contamination": [[77, "using-the-free-water-elimination-model-to-remove-dti-free-water-contamination"]], "Intravoxel incoherent motion": [[79, "intravoxel-incoherent-motion"]], "Continuous and analytical diffusion signal modelling with MAP-MRI": [[80, "continuous-and-analytical-diffusion-signal-modelling-with-map-mri"]], "Reconstruction with Multi-Shell Multi-Tissue CSD": [[81, "reconstruction-with-multi-shell-multi-tissue-csd"]], "Mean signal diffusion kurtosis imaging (MSDKI)": [[82, "mean-signal-diffusion-kurtosis-imaging-msdki"]], "Testing MSDKI in synthetic data": [[82, "testing-msdki-in-synthetic-data"]], "Reconstructing diffusion data using MSDKI": [[82, "reconstructing-diffusion-data-using-msdki"]], "Relationship between MSDKI and SMT2": [[82, "relationship-between-msdki-and-smt2"]], "Estimating diffusion time dependent q-space indices using qt-dMRI": [[83, "estimating-diffusion-time-dependent-q-space-indices-using-qt-dmri"]], "Reconstruction with Robust and Unbiased Model-BAsed Spherical Deconvolution": [[86, "reconstruction-with-robust-and-unbiased-model-based-spherical-deconvolution"]], "Step 2. fODF Reconstruction": [[86, "step-2-fodf-reconstruction"]], "Reconstruction with the Sparse Fascicle Model": [[87, "reconstruction-with-the-sparse-fascicle-model"]], "Signal Reconstruction Using Spherical Harmonics": [[88, "signal-reconstruction-using-spherical-harmonics"]], "Continuous and analytical diffusion signal modelling with 3D-SHORE": [[89, "continuous-and-analytical-diffusion-signal-modelling-with-3d-shore"]], "Calculate SHORE scalar maps": [[90, "calculate-shore-scalar-maps"]], "Using the RESTORE algorithm for robust tensor fitting": [[91, "using-the-restore-algorithm-for-robust-tensor-fitting"]], "Affine Registration in 3D": [[93, "affine-registration-in-3d"]], "Affine Registration with Masks": [[94, "affine-registration-with-masks"]], "Groupwise Bundle Registration": [[95, "groupwise-bundle-registration"]], "How it works": [[95, "how-it-works"]], "Example": [[95, "example"]], "Extended capabilities": [[95, "extended-capabilities"]], "Direct Bundle Registration": [[96, "direct-bundle-registration"]], "Diffeomorphic Registration with binary and fuzzy images": [[99, "diffeomorphic-registration-with-binary-and-fuzzy-images"]], "Applying image-based deformations to streamlines": [[101, "applying-image-based-deformations-to-streamlines"]], "Symmetric Diffeomorphic Registration in 2D": [[102, "symmetric-diffeomorphic-registration-in-2d"]], "Symmetric Diffeomorphic Registration in 3D": [[103, "symmetric-diffeomorphic-registration-in-3d"]], "Automatic Fiber Bundle Extraction with RecoBundles": [[105, "automatic-fiber-bundle-extraction-with-recobundles"]], "Fast Streamline Search": [[106, "fast-streamline-search"]], "Tractography Clustering - Available Features": [[108, "tractography-clustering-available-features"]], "Available Features": [[108, "available-features"]], "Identity Feature": [[108, "clustering-examples-identityfeature"]], "Resample Feature": [[108, "resample-feature"]], "Center of Mass Feature": [[108, "center-of-mass-feature"]], "Midpoint Feature": [[108, "midpoint-feature"]], "ArcLength Feature": [[108, "arclength-feature"]], "Vector Between Endpoints Feature": [[108, "vector-between-endpoints-feature"]], "Tractography Clustering - Available Metrics": [[109, "tractography-clustering-available-metrics"]], "Available Metrics": [[109, "available-metrics"]], "Average of Pointwise Euclidean Metric": [[109, "average-of-pointwise-euclidean-metric"]], "Sum of Pointwise Euclidean Metric": [[109, "sum-of-pointwise-euclidean-metric"]], "Cosine Metric": [[109, "cosine-metric"]], "Enhancing QuickBundles with different metrics and features": [[110, "enhancing-quickbundles-with-different-metrics-and-features"]], "Clustering framework": [[110, "clustering-framework"]], "Extending Feature": [[110, "extending-feature"]], "Extending Metric": [[110, "extending-metric"]], "Tractography Clustering with QuickBundles": [[111, "tractography-clustering-with-quickbundles"]], "Tissue Classification of a T1-weighted Structural Image": [[113, "tissue-classification-of-a-t1-weighted-structural-image"]], "DKI MultiTensor Simulation": [[117, "dki-multitensor-simulation"]], "MultiTensor Simulation": [[118, "multitensor-simulation"]], "Extracting AFQ tract profiles from segmented bundles": [[119, "extracting-afq-tract-profiles-from-segmented-bundles"]], "BUAN Bundle Assignment Maps Creation": [[120, "buan-bundle-assignment-maps-creation"]], "BUAN Bundle Shape Similarity Score": [[121, "buan-bundle-shape-similarity-score"]], "Calculation of Outliers with Cluster Confidence Index": [[122, "calculation-of-outliers-with-cluster-confidence-index"]], "Calculate Path Length Map": [[124, "calculate-path-length-map"]], "Streamline length and size reduction": [[126, "streamline-length-and-size-reduction"]], "Connectivity Matrices, ROI Intersections and Density Maps": [[127, "connectivity-matrices-roi-intersections-and-density-maps"]], "Advanced interactive visualization": [[130, "advanced-interactive-visualization"]], "Visualize bundles and metrics on bundles": [[131, "visualize-bundles-and-metrics-on-bundles"]], "Show every streamline with an orientation color": [[131, "show-every-streamline-with-an-orientation-color"]], "Show every point with a value from a volume with default colormap": [[131, "show-every-point-with-a-value-from-a-volume-with-default-colormap"]], "Show every point with a value from a volume with your colormap": [[131, "show-every-point-with-a-value-from-a-volume-with-your-colormap"]], "Show every bundle with a specific color": [[131, "show-every-bundle-with-a-specific-color"]], "Show every streamline of a bundle with a different color": [[131, "show-every-streamline-of-a-bundle-with-a-different-color"]], "Show every point of every streamline with a different color": [[131, "show-every-point-of-every-streamline-with-a-different-color"]], "Visualization of ROI Surface Rendered with Streamlines": [[132, "visualization-of-roi-surface-rendered-with-streamlines"]], "Simple volume slicing": [[133, "simple-volume-slicing"]], "Render slices from T1 with a specific value range": [[133, "render-slices-from-t1-with-a-specific-value-range"]], "Render slices from FA with your colormap": [[133, "render-slices-from-fa-with-your-colormap"]], "Create a mosaic": [[133, "create-a-mosaic"]], "Gimbal lock": [[139, "gimbal-lock"]], "Mathematics of gimbal lock": [[139, "mathematics-of-gimbal-lock"]], "dipy": [[157, "module-dipy"]], "Diffusion Imaging in Python": [[157, "diffusion-imaging-in-python"]], "Subpackages": [[157, "subpackages"]], "Utilities": [[157, "utilities"]], "get_info": [[157, "get-info"]], "__config__": [[158, "module-dipy.__config__"]], "align": [[159, "module-dipy.align"]], "Module: align._public": [[159, "module-dipy.align._public"]], "Module: align.bundlemin": [[159, "module-dipy.align.bundlemin"]], "Module: align.cpd": [[159, "module-dipy.align.cpd"]], "Note": [[159, "note"]], "Module: align.crosscorr": [[159, "module-dipy.align.crosscorr"]], "Module: align.expectmax": [[159, "module-dipy.align.expectmax"]], "Module: align.imaffine": [[159, "module-dipy.align.imaffine"]], "Module: align.imwarp": [[159, "module-dipy.align.imwarp"]], "Module: align.metrics": [[159, "module-dipy.align.metrics"]], "Module: align.parzenhist": [[159, "module-dipy.align.parzenhist"]], "Module: align.reslice": [[159, "module-dipy.align.reslice"]], "Module: align.scalespace": [[159, "module-dipy.align.scalespace"]], "Module: align.streamlinear": [[159, "module-dipy.align.streamlinear"]], "Module: align.streamwarp": [[159, "module-dipy.align.streamwarp"]], "Module: align.sumsqdiff": [[159, "module-dipy.align.sumsqdiff"]], "Module: align.transforms": [[159, "module-dipy.align.transforms"]], "Module: align.vector_fields": [[159, "module-dipy.align.vector_fields"]], "Bunch": [[159, "bunch"]], "VerbosityLevels": [[159, "verbositylevels"]], "syn_registration": [[159, "syn-registration"]], "Parameters": [[159, "parameters"], [159, "id5"], [159, "id7"], [159, "id9"], [159, "id12"], [159, "id14"], [159, "id19"], [159, "id21"], [159, "id23"], [159, "id25"], [159, "id27"], [159, "id28"], [159, "id31"], [159, "id33"], [159, "id35"], [159, "id37"], [159, "id40"], [159, "id45"], [159, "id52"], [159, "id58"], [159, "id63"], [159, "id69"], [159, "id72"], [159, "id74"], [159, "id76"], [159, "id78"], [159, "id80"], [159, "id82"], [159, "id83"], [159, "id85"], [159, "id87"], [159, "id89"], [159, "id91"], [159, "id93"], [159, "id95"], [159, "id96"], [159, "id100"], [159, "id102"], [159, "id104"], [159, "id106"], [159, "id109"], [159, "id110"], [159, "id114"], [159, "id117"], [159, "id120"], [159, "id123"], [159, "id124"], [159, "id125"], [159, "id126"], [159, "id128"], [159, "id130"], [159, "id132"], [159, "id134"], [159, "id135"], [159, "id136"], [159, "id137"], [159, "id138"], [159, "id139"], [159, "id140"], [159, "id141"], [159, "id142"], [159, "id143"], [159, "id145"], [159, "id148"], [159, "id149"], [159, "id150"], [159, "id151"], [159, "id154"], [159, "id156"], [159, "id159"], [159, "id161"], [159, "id164"], [159, "id166"], [159, "id168"], [159, "id170"], [159, "id171"], [159, "id172"], [159, "id173"], [159, "id174"], [159, "id175"], [159, "id176"], [159, "id177"], [159, "id178"], [159, "id180"], [159, "id183"], [159, "id185"], [159, "id187"], [159, "id189"], [159, "id191"], [159, "id193"], [159, "id195"], [159, "id197"], [159, "id199"], [159, "id200"], [159, "id202"], [159, "id204"], [159, "id205"], [159, "id206"], [159, "id210"], [159, "id211"], [159, "id212"], [159, "id214"], [159, "id215"], [159, "id218"], [159, "id219"], [159, "id222"], [159, "id223"], [159, "id224"], [159, "id227"], [159, "id230"], [159, "id232"], [159, "id233"], [159, "id236"], [159, "id237"], [159, "id240"], [159, "id242"], [159, "id244"], [159, "id247"], [159, "id250"], [159, "id253"], [159, "id259"], [159, "id263"], [159, "id264"], [159, "id266"], [159, "id268"], [159, "id270"], [159, "id272"], [159, "id275"], [159, "id277"], [159, "id279"], [159, "id282"], [159, "id285"], [159, "id288"], [159, "id291"], [159, "id294"], [159, "id298"], [159, "id300"], [159, "id302"], [159, "id304"], [159, "id307"], [159, "id309"], [159, "id311"], [159, "id313"], [159, "id315"], [159, "id317"], [159, "id319"], [159, "id321"], [159, "id323"], [159, "id325"], [159, "id327"], [159, "id329"], [159, "id332"], [159, "id335"], [159, "id336"], [159, "id337"], [159, "id339"], [159, "id341"], [159, "id344"], [159, "id347"], [159, "id349"], [159, "id352"], [159, "id355"], [159, "id358"], [159, "id361"], [159, "id364"], [159, "id367"], [159, "id370"], [159, "id373"], [159, "id374"], [161, "parameters"], [161, "id6"], [161, "id8"], [161, "id11"], [161, "id14"], [161, "id19"], [161, "id22"], [161, "id26"], [161, "id29"], [161, "id32"], [161, "id35"], [161, "id38"], [161, "id40"], [161, "id43"], [161, "id45"], [161, "id48"], [161, "id50"], [161, "id53"], [161, "id56"], [161, "id61"], [161, "id65"], [161, "id69"], [161, "id74"], [161, "id77"], [161, "id79"], [161, "id81"], [161, "id83"], [161, "id87"], [161, "id93"], [161, "id95"], [161, "id98"], [161, "id100"], [161, "id102"], [161, "id104"], [161, "id106"], [161, "id108"], [161, "id110"], [161, "id113"], [161, "id115"], [161, "id118"], [161, "id119"], [161, "id121"], [161, "id123"], [161, "id125"], [161, "id127"], [161, "id129"], [161, "id131"], [161, "id135"], [161, "id136"], [161, "id139"], [161, "id142"], [161, "id145"], [161, "id146"], [161, "id148"], [161, "id150"], [161, "id152"], [161, "id154"], [161, "id156"], [161, "id158"], [161, "id160"], [161, "id163"], [161, "id165"], [161, "id170"], [161, "id175"], [161, "id180"], [161, "id185"], [161, "id186"], [161, "id187"], [161, "id189"], [161, "id192"], [161, "id195"], [161, "id197"], [161, "id199"], [161, "id201"], [161, "id203"], [161, "id205"], [161, "id207"], [161, "id209"], [162, "parameters"], [162, "id5"], [162, "id8"], [162, "id11"], [162, "id12"], [162, "id17"], [162, "id21"], [162, "id22"], [162, "id26"], [162, "id38"], [162, "id40"], [162, "id47"], [162, "id49"], [162, "id62"], [162, "id65"], [162, "id69"], [163, "parameters"], [163, "id3"], [163, "id4"], [163, "id6"], [163, "id8"], [163, "id10"], [163, "id11"], [163, "id13"], [163, "id14"], [163, "id16"], [163, "id18"], [163, "id20"], [163, "id22"], [163, "id27"], [163, "id36"], [163, "id47"], [163, "id53"], [163, "id56"], [163, "id57"], [163, "id60"], [163, "id61"], [163, "id67"], [163, "id75"], [163, "id79"], [163, "id82"], [163, "id92"], [163, "id95"], [163, "id98"], [163, "id99"], [163, "id106"], [164, "parameters"], [164, "id1"], [164, "id2"], [164, "id3"], [164, "id5"], [164, "id7"], [164, "id10"], [164, "id13"], [164, "id19"], [164, "id22"], [164, "id24"], [164, "id25"], [165, "parameters"], [165, "id3"], [165, "id4"], [165, "id5"], [165, "id7"], [165, "id10"], [165, "id12"], [165, "id13"], [165, "id15"], [165, "id16"], [165, "id19"], [165, "id22"], [165, "id25"], [165, "id27"], [165, "id29"], [165, "id30"], [165, "id32"], [165, "id34"], [165, "id36"], [165, "id38"], [165, "id40"], [165, "id42"], [165, "id44"], [165, "id46"], [165, "id48"], [165, "id50"], [165, "id52"], [165, "id54"], [165, "id56"], [165, "id58"], [165, "id60"], [165, "id62"], [165, "id64"], [165, "id67"], [165, "id70"], [165, "id72"], [165, "id74"], [165, "id76"], [165, "id77"], [165, "id79"], [165, "id81"], [165, "id82"], [165, "id83"], [166, "parameters"], [166, "id1"], [166, "id2"], [166, "id3"], [166, "id5"], [166, "id6"], [166, "id8"], [166, "id10"], [166, "id20"], [166, "id22"], [166, "id23"], [166, "id25"], [166, "id27"], [166, "id29"], [166, "id33"], [166, "id34"], [166, "id37"], [166, "id38"], [166, "id40"], [166, "id42"], [166, "id45"], [166, "id46"], [166, "id48"], [166, "id50"], [166, "id76"], [166, "id80"], [166, "id81"], [166, "id82"], [166, "id85"], [166, "id87"], [166, "id92"], [166, "id95"], [166, "id97"], [166, "id98"], [166, "id100"], [167, "parameters"], [167, "id87"], [167, "id88"], [167, "id90"], [167, "id92"], [167, "id96"], [167, "id101"], [167, "id110"], [167, "id114"], [167, "id119"], [167, "id122"], [167, "id127"], [167, "id144"], [167, "id150"], [167, "id155"], [167, "id158"], [167, "id163"], [167, "id164"], [167, "id166"], [167, "id169"], [167, "id171"], [167, "id173"], [167, "id175"], [167, "id177"], [167, "id179"], [167, "id187"], [167, "id188"], [167, "id190"], [167, "id204"], [167, "id210"], [167, "id219"], [167, "id230"], [167, "id235"], [167, "id239"], [167, "id244"], [167, "id250"], [167, "id264"], [167, "id277"], [167, "id288"], [167, "id291"], [167, "id303"], [167, "id307"], [167, "id311"], [167, "id315"], [167, "id319"], [167, "id321"], [167, "id324"], [167, "id331"], [167, "id332"], [167, "id337"], [167, "id371"], [167, "id376"], [167, "id385"], [167, "id389"], [167, "id394"], [167, "id400"], [167, "id403"], [167, "id404"], [167, "id406"], [167, "id408"], [167, "id410"], [167, "id411"], [167, "id412"], [167, "id415"], [167, "id417"], [167, "id423"], [167, "id434"], [167, "id435"], [167, "id461"], [167, "id472"], [167, "id475"], [167, "id478"], [167, "id481"], [167, "id484"], [167, "id487"], [167, "id490"], [167, "id498"], [167, "id504"], [167, "id510"], [167, "id516"], [167, "id521"], [167, "id523"], [167, "id525"], [167, "id532"], [167, "id538"], [167, "id541"], [167, "id546"], [167, "id550"], [167, "id552"], [167, "id557"], [167, "id562"], [167, "id564"], [167, "id566"], [167, "id568"], [167, "id570"], [167, "id579"], [167, "id580"], [167, "id581"], [167, "id582"], [167, "id585"], [167, "id594"], [167, "id596"], [167, "id599"], [167, "id606"], [167, "id611"], [167, "id619"], [167, "id628"], [167, "id629"], [167, "id632"], [167, "id636"], [167, "id638"], [167, "id640"], [167, "id646"], [167, "id651"], [167, "id657"], [167, "id660"], [167, "id662"], [167, "id664"], [167, "id666"], [167, "id668"], [167, "id669"], [167, "id671"], [167, "id673"], [167, "id675"], [167, "id677"], [167, "id701"], [167, "id711"], [167, "id736"], [167, "id764"], [167, "id769"], [167, "id774"], [167, "id779"], [167, "id784"], [167, "id788"], [167, "id792"], [167, "id796"], [167, "id800"], [167, "id804"], [167, "id808"], [167, "id812"], [167, "id816"], [167, "id822"], [167, "id830"], [167, "id836"], [167, "id841"], [167, "id846"], [167, "id850"], [167, "id853"], [167, "id858"], [167, "id863"], [167, "id868"], [167, "id873"], [167, "id878"], [167, "id880"], [167, "id884"], [167, "id889"], [167, "id894"], [167, "id895"], [167, "id896"], [167, "id897"], [167, "id899"], [167, "id901"], [167, "id903"], [167, "id906"], [167, "id909"], [167, "id913"], [167, "id944"], [167, "id952"], [167, "id960"], [167, "id965"], [167, "id967"], [167, "id969"], [167, "id971"], [167, "id974"], [167, "id982"], [167, "id988"], [167, "id994"], [167, "id999"], [167, "id1004"], [167, "id1010"], [167, "id1016"], [167, "id1020"], [167, "id1023"], [167, "id1054"], [167, "id1058"], [167, "id1060"], [167, "id1065"], [167, "id1067"], [167, "id1069"], [167, "id1076"], [167, "id1086"], [167, "id1089"], [167, "id1092"], [167, "id1095"], [167, "id1098"], [167, "id1101"], [167, "id1107"], [167, "id1110"], [167, "id1112"], [167, "id1114"], [167, "id1116"], [167, "id1120"], [167, "id1125"], [167, "id1129"], [167, "id1135"], [167, "id1137"], [167, "id1143"], [167, "id1148"], [167, "id1149"], [167, "id1151"], [167, "id1152"], [167, "id1153"], [167, "id1154"], [167, "id1156"], [167, "id1157"], [167, "id1158"], [167, "id1165"], [167, "id1167"], [167, "id1168"], [167, "id1170"], [167, "id1172"], [167, "id1180"], [167, "id1181"], [167, "id1183"], [167, "id1185"], [167, "id1187"], [167, "id1190"], [167, "id1195"], [167, "id1199"], [167, "id1201"], [167, "id1202"], [167, "id1204"], [167, "id1209"], [167, "id1222"], [167, "id1225"], [167, "id1231"], [167, "id1238"], [167, "id1245"], [167, "id1254"], [167, "id1257"], [167, "id1265"], [167, "id1275"], [167, "id1286"], [167, "id1290"], [167, "id1294"], [167, "id1296"], [167, "id1298"], [167, "id1300"], [167, "id1302"], [168, "parameters"], [168, "id9"], [168, "id12"], [168, "id13"], [168, "id15"], [168, "id21"], [168, "id27"], [168, "id30"], [168, "id34"], [168, "id38"], [168, "id43"], [168, "id45"], [168, "id48"], [168, "id50"], [168, "id52"], [168, "id53"], [168, "id57"], [168, "id59"], [168, "id61"], [168, "id64"], [168, "id65"], [168, "id69"], [168, "id71"], [168, "id75"], [168, "id78"], [168, "id84"], [168, "id86"], [168, "id89"], [168, "id90"], [168, "id93"], [168, "id98"], [168, "id104"], [168, "id106"], [168, "id109"], [168, "id110"], [168, "id116"], [168, "id118"], [168, "id121"], [168, "id124"], [168, "id126"], [168, "id128"], [168, "id132"], [168, "id134"], [168, "id137"], [168, "id141"], [168, "id146"], [168, "id148"], [168, "id150"], [168, "id152"], [168, "id154"], [168, "id156"], [168, "id161"], [168, "id163"], [168, "id166"], [168, "id170"], [168, "id172"], [168, "id176"], [168, "id178"], [168, "id181"], [168, "id184"], [168, "id186"], [168, "id188"], [168, "id194"], [168, "id196"], [168, "id198"], [168, "id200"], [168, "id202"], [168, "id204"], [168, "id206"], [168, "id208"], [168, "id210"], [168, "id212"], [168, "id214"], [168, "id216"], [168, "id218"], [168, "id220"], [169, "parameters"], [169, "id7"], [169, "id10"], [169, "id15"], [169, "id24"], [169, "id29"], [169, "id33"], [169, "id37"], [169, "id42"], [169, "id47"], [169, "id50"], [169, "id56"], [169, "id62"], [169, "id66"], [169, "id70"], [169, "id72"], [169, "id75"], [169, "id79"], [169, "id83"], [169, "id87"], [169, "id91"], [169, "id95"], [170, "parameters"], [170, "id1"], [170, "id2"], [170, "id3"], [170, "id5"], [171, "parameters"], [171, "id8"], [171, "id10"], [171, "id12"], [171, "id15"], [171, "id20"], [171, "id22"], [171, "id26"], [171, "id30"], [171, "id36"], [171, "id40"], [171, "id43"], [171, "id46"], [171, "id49"], [171, "id51"], [171, "id54"], [171, "id57"], [171, "id60"], [171, "id63"], [171, "id64"], [171, "id66"], [171, "id69"], [171, "id83"], [171, "id86"], [171, "id90"], [171, "id93"], [171, "id96"], [171, "id99"], [171, "id104"], [171, "id106"], [171, "id107"], [171, "id109"], [171, "id113"], [171, "id118"], [171, "id121"], [171, "id122"], [171, "id124"], [171, "id125"], [171, "id126"], [171, "id128"], [171, "id132"], [171, "id134"], [171, "id135"], [171, "id138"], [171, "id139"], [171, "id141"], [171, "id143"], [171, "id146"], [171, "id148"], [171, "id150"], [171, "id153"], [171, "id156"], [171, "id159"], [171, "id162"], [171, "id164"], [171, "id167"], [171, "id169"], [171, "id172"], [171, "id174"], [171, "id177"], [171, "id180"], [171, "id182"], [171, "id185"], [171, "id188"], [171, "id191"], [171, "id195"], [171, "id198"], [171, "id201"], [171, "id204"], [171, "id207"], [171, "id210"], [171, "id212"], [171, "id219"], [171, "id223"], [171, "id225"], [171, "id227"], [171, "id229"], [171, "id231"], [171, "id233"], [171, "id236"], [171, "id241"], [171, "id244"], [171, "id247"], [171, "id249"], [171, "id258"], [171, "id266"], [171, "id269"], [171, "id272"], [171, "id275"], [171, "id277"], [171, "id279"], [171, "id283"], [171, "id287"], [171, "id291"], [171, "id295"], [171, "id299"], [171, "id301"], [171, "id304"], [171, "id306"], [171, "id308"], [171, "id310"], [171, "id313"], [171, "id315"], [171, "id318"], [171, "id321"], [171, "id324"], [172, "parameters"], [172, "id2"], [172, "id5"], [172, "id7"], [172, "id9"], [172, "id11"], [172, "id12"], [172, "id13"], [172, "id14"], [172, "id16"], [172, "id17"], [172, "id18"], [172, "id20"], [172, "id22"], [172, "id23"], [172, "id24"], [172, "id25"], [172, "id26"], [172, "id27"], [173, "parameters"], [173, "id3"], [173, "id5"], [173, "id6"], [173, "id9"], [173, "id10"], [173, "id11"], [173, "id13"], [173, "id14"], [173, "id15"], [173, "id16"], [173, "id18"], [173, "id20"], [173, "id22"], [173, "id29"], [173, "id34"], [173, "id38"], [173, "id40"], [173, "id42"], [173, "id43"], [173, "id44"], [173, "id45"], [173, "id47"], [173, "id50"], [173, "id52"], [173, "id54"], [173, "id55"], [173, "id63"], [173, "id66"], [173, "id69"], [173, "id75"], [173, "id78"], [173, "id81"], [173, "id82"], [173, "id85"], [173, "id88"], [173, "id89"], [173, "id92"], [173, "id93"], [173, "id94"], [173, "id95"], [173, "id98"], [173, "id101"], [173, "id103"], [173, "id105"]], "Returns": [[159, "returns"], [159, "id6"], [159, "id10"], [159, "id13"], [159, "id15"], [159, "id20"], [159, "id22"], [159, "id24"], [159, "id26"], [159, "id29"], [159, "id30"], [159, "id32"], [159, "id34"], [159, "id36"], [159, "id41"], [159, "id46"], [159, "id53"], [159, "id59"], [159, "id64"], [159, "id70"], [159, "id73"], [159, "id75"], [159, "id77"], [159, "id79"], [159, "id81"], [159, "id84"], [159, "id86"], [159, "id90"], [159, "id92"], [159, "id94"], [159, "id97"], [159, "id101"], [159, "id103"], [159, "id105"], [159, "id107"], [159, "id111"], [159, "id112"], [159, "id113"], [159, "id115"], [159, "id118"], [159, "id121"], [159, "id127"], [159, "id129"], [159, "id131"], [159, "id133"], [159, "id144"], [159, "id146"], [159, "id152"], [159, "id155"], [159, "id157"], [159, "id160"], [159, "id165"], [159, "id167"], [159, "id169"], [159, "id179"], [159, "id181"], [159, "id184"], [159, "id186"], [159, "id188"], [159, "id190"], [159, "id192"], [159, "id194"], [159, "id196"], [159, "id198"], [159, "id231"], [159, "id234"], [159, "id238"], [159, "id241"], [159, "id243"], [159, "id245"], [159, "id248"], [159, "id265"], [159, "id267"], [159, "id269"], [159, "id271"], [159, "id273"], [159, "id276"], [159, "id278"], [159, "id280"], [159, "id283"], [159, "id286"], [159, "id289"], [159, "id292"], [159, "id295"], [159, "id297"], [159, "id299"], [159, "id301"], [159, "id303"], [159, "id305"], [159, "id308"], [159, "id310"], [159, "id312"], [159, "id314"], [159, "id316"], [159, "id318"], [159, "id320"], [159, "id322"], [159, "id324"], [159, "id326"], [159, "id328"], [159, "id330"], [159, "id333"], [159, "id338"], [159, "id340"], [159, "id342"], [159, "id345"], [159, "id348"], [159, "id350"], [159, "id353"], [159, "id356"], [159, "id359"], [159, "id362"], [159, "id365"], [159, "id368"], [159, "id371"], [161, "returns"], [161, "id5"], [161, "id7"], [161, "id9"], [161, "id12"], [161, "id15"], [161, "id20"], [161, "id23"], [161, "id27"], [161, "id30"], [161, "id33"], [161, "id36"], [161, "id39"], [161, "id41"], [161, "id44"], [161, "id46"], [161, "id49"], [161, "id51"], [161, "id59"], [161, "id62"], [161, "id66"], [161, "id70"], [161, "id75"], [161, "id78"], [161, "id80"], [161, "id82"], [161, "id84"], [161, "id88"], [161, "id94"], [161, "id96"], [161, "id99"], [161, "id101"], [161, "id103"], [161, "id105"], [161, "id107"], [161, "id109"], [161, "id111"], [161, "id114"], [161, "id124"], [161, "id128"], [161, "id130"], [161, "id137"], [161, "id140"], [161, "id143"], [161, "id147"], [161, "id149"], [161, "id153"], [161, "id155"], [161, "id157"], [161, "id159"], [161, "id161"], [161, "id164"], [161, "id190"], [161, "id193"], [161, "id196"], [161, "id198"], [161, "id200"], [161, "id202"], [161, "id204"], [161, "id206"], [161, "id208"], [161, "id210"], [162, "returns"], [162, "id6"], [162, "id9"], [162, "id14"], [162, "id18"], [162, "id27"], [162, "id31"], [162, "id32"], [162, "id33"], [162, "id34"], [162, "id35"], [162, "id36"], [162, "id37"], [162, "id39"], [162, "id41"], [162, "id50"], [162, "id52"], [162, "id53"], [162, "id54"], [162, "id55"], [162, "id56"], [162, "id57"], [162, "id58"], [162, "id59"], [162, "id60"], [162, "id61"], [162, "id63"], [162, "id66"], [162, "id70"], [163, "returns"], [163, "id5"], [163, "id9"], [163, "id12"], [163, "id15"], [163, "id17"], [163, "id19"], [163, "id21"], [163, "id23"], [163, "id30"], [163, "id42"], [163, "id49"], [163, "id54"], [163, "id58"], [163, "id62"], [163, "id68"], [163, "id76"], [163, "id80"], [163, "id85"], [163, "id93"], [163, "id96"], [163, "id101"], [163, "id108"], [164, "returns"], [164, "id6"], [164, "id8"], [164, "id11"], [164, "id16"], [164, "id20"], [164, "id26"], [165, "returns"], [165, "id6"], [165, "id8"], [165, "id11"], [165, "id14"], [165, "id20"], [165, "id24"], [165, "id26"], [165, "id28"], [165, "id31"], [165, "id33"], [165, "id35"], [165, "id37"], [165, "id39"], [165, "id41"], [165, "id43"], [165, "id45"], [165, "id47"], [165, "id49"], [165, "id51"], [165, "id53"], [165, "id55"], [165, "id57"], [165, "id59"], [165, "id61"], [165, "id63"], [165, "id65"], [165, "id68"], [165, "id71"], [165, "id73"], [165, "id75"], [165, "id78"], [165, "id80"], [165, "id84"], [166, "returns"], [166, "id4"], [166, "id7"], [166, "id9"], [166, "id11"], [166, "id24"], [166, "id26"], [166, "id28"], [166, "id35"], [166, "id39"], [166, "id41"], [166, "id43"], [166, "id44"], [166, "id47"], [166, "id49"], [166, "id51"], [166, "id52"], [166, "id83"], [166, "id86"], [166, "id88"], [166, "id93"], [166, "id96"], [166, "id99"], [166, "id101"], [167, "returns"], [167, "id89"], [167, "id111"], [167, "id120"], [167, "id123"], [167, "id128"], [167, "id145"], [167, "id151"], [167, "id156"], [167, "id159"], [167, "id165"], [167, "id168"], [167, "id170"], [167, "id172"], [167, "id174"], [167, "id176"], [167, "id178"], [167, "id192"], [167, "id205"], [167, "id212"], [167, "id221"], [167, "id231"], [167, "id236"], [167, "id240"], [167, "id246"], [167, "id252"], [167, "id266"], [167, "id279"], [167, "id289"], [167, "id293"], [167, "id304"], [167, "id308"], [167, "id312"], [167, "id316"], [167, "id320"], [167, "id322"], [167, "id372"], [167, "id377"], [167, "id386"], [167, "id395"], [167, "id401"], [167, "id405"], [167, "id407"], [167, "id409"], [167, "id413"], [167, "id436"], [167, "id438"], [167, "id443"], [167, "id447"], [167, "id452"], [167, "id454"], [167, "id459"], [167, "id462"], [167, "id473"], [167, "id476"], [167, "id479"], [167, "id482"], [167, "id485"], [167, "id488"], [167, "id491"], [167, "id499"], [167, "id505"], [167, "id511"], [167, "id517"], [167, "id526"], [167, "id533"], [167, "id539"], [167, "id543"], [167, "id551"], [167, "id563"], [167, "id565"], [167, "id567"], [167, "id569"], [167, "id571"], [167, "id583"], [167, "id595"], [167, "id600"], [167, "id607"], [167, "id613"], [167, "id630"], [167, "id637"], [167, "id639"], [167, "id641"], [167, "id647"], [167, "id652"], [167, "id658"], [167, "id661"], [167, "id663"], [167, "id665"], [167, "id667"], [167, "id670"], [167, "id672"], [167, "id674"], [167, "id676"], [167, "id765"], [167, "id770"], [167, "id775"], [167, "id780"], [167, "id823"], [167, "id831"], [167, "id837"], [167, "id842"], [167, "id847"], [167, "id851"], [167, "id854"], [167, "id859"], [167, "id864"], [167, "id869"], [167, "id874"], [167, "id881"], [167, "id898"], [167, "id900"], [167, "id902"], [167, "id904"], [167, "id907"], [167, "id910"], [167, "id914"], [167, "id917"], [167, "id922"], [167, "id930"], [167, "id938"], [167, "id945"], [167, "id953"], [167, "id961"], [167, "id966"], [167, "id970"], [167, "id1055"], [167, "id1066"], [167, "id1068"], [167, "id1070"], [167, "id1071"], [167, "id1072"], [167, "id1074"], [167, "id1077"], [167, "id1078"], [167, "id1080"], [167, "id1082"], [167, "id1084"], [167, "id1087"], [167, "id1090"], [167, "id1093"], [167, "id1096"], [167, "id1099"], [167, "id1102"], [167, "id1108"], [167, "id1111"], [167, "id1113"], [167, "id1115"], [167, "id1117"], [167, "id1121"], [167, "id1130"], [167, "id1131"], [167, "id1132"], [167, "id1133"], [167, "id1134"], [167, "id1136"], [167, "id1138"], [167, "id1144"], [167, "id1150"], [167, "id1155"], [167, "id1164"], [167, "id1166"], [167, "id1169"], [167, "id1171"], [167, "id1173"], [167, "id1182"], [167, "id1186"], [167, "id1203"], [167, "id1205"], [167, "id1211"], [167, "id1223"], [167, "id1226"], [167, "id1233"], [167, "id1240"], [167, "id1247"], [167, "id1255"], [167, "id1259"], [167, "id1267"], [167, "id1295"], [167, "id1297"], [167, "id1299"], [167, "id1301"], [167, "id1303"], [168, "returns"], [168, "id10"], [168, "id14"], [168, "id18"], [168, "id24"], [168, "id28"], [168, "id31"], [168, "id35"], [168, "id39"], [168, "id51"], [168, "id56"], [168, "id58"], [168, "id60"], [168, "id66"], [168, "id70"], [168, "id76"], [168, "id79"], [168, "id87"], [168, "id91"], [168, "id94"], [168, "id99"], [168, "id107"], [168, "id119"], [168, "id122"], [168, "id127"], [168, "id129"], [168, "id133"], [168, "id135"], [168, "id142"], [168, "id147"], [168, "id149"], [168, "id151"], [168, "id153"], [168, "id155"], [168, "id157"], [168, "id162"], [168, "id164"], [168, "id167"], [168, "id171"], [168, "id173"], [168, "id179"], [168, "id182"], [168, "id187"], [168, "id189"], [168, "id195"], [168, "id197"], [168, "id199"], [168, "id201"], [168, "id203"], [168, "id205"], [168, "id207"], [168, "id209"], [168, "id211"], [168, "id213"], [168, "id215"], [168, "id217"], [168, "id219"], [168, "id221"], [169, "returns"], [169, "id8"], [169, "id16"], [169, "id25"], [169, "id30"], [169, "id34"], [169, "id38"], [169, "id43"], [169, "id48"], [169, "id51"], [169, "id57"], [169, "id63"], [169, "id67"], [169, "id71"], [169, "id73"], [169, "id76"], [169, "id80"], [169, "id84"], [169, "id88"], [169, "id92"], [169, "id96"], [170, "returns"], [170, "id6"], [171, "returns"], [171, "id9"], [171, "id11"], [171, "id13"], [171, "id16"], [171, "id21"], [171, "id23"], [171, "id27"], [171, "id31"], [171, "id37"], [171, "id41"], [171, "id44"], [171, "id47"], [171, "id50"], [171, "id52"], [171, "id55"], [171, "id58"], [171, "id61"], [171, "id65"], [171, "id70"], [171, "id84"], [171, "id87"], [171, "id91"], [171, "id94"], [171, "id97"], [171, "id105"], [171, "id108"], [171, "id110"], [171, "id114"], [171, "id123"], [171, "id127"], [171, "id129"], [171, "id133"], [171, "id136"], [171, "id140"], [171, "id147"], [171, "id149"], [171, "id151"], [171, "id154"], [171, "id157"], [171, "id160"], [171, "id163"], [171, "id165"], [171, "id168"], [171, "id170"], [171, "id173"], [171, "id175"], [171, "id178"], [171, "id181"], [171, "id183"], [171, "id186"], [171, "id189"], [171, "id192"], [171, "id196"], [171, "id199"], [171, "id202"], [171, "id205"], [171, "id208"], [171, "id211"], [171, "id213"], [171, "id224"], [171, "id226"], [171, "id228"], [171, "id230"], [171, "id232"], [171, "id234"], [171, "id238"], [171, "id242"], [171, "id245"], [171, "id248"], [171, "id250"], [171, "id260"], [171, "id267"], [171, "id270"], [171, "id273"], [171, "id276"], [171, "id280"], [171, "id292"], [171, "id296"], [171, "id300"], [171, "id302"], [171, "id305"], [171, "id307"], [171, "id309"], [171, "id311"], [171, "id314"], [171, "id316"], [171, "id319"], [171, "id322"], [171, "id325"], [172, "returns"], [172, "id8"], [172, "id10"], [172, "id15"], [172, "id19"], [172, "id21"], [173, "returns"], [173, "id17"], [173, "id39"], [173, "id41"], [173, "id46"], [173, "id48"], [173, "id51"]], "register_dwi_to_template": [[159, "register-dwi-to-template"]], "write_mapping": [[159, "write-mapping"]], "read_mapping": [[159, "read-mapping"]], "resample": [[159, "resample"]], "affine_registration": [[159, "affine-registration"]], "center_of_mass": [[159, "center-of-mass"], [171, "center-of-mass"]], "translation": [[159, "translation"]], "rigid": [[159, "rigid"]], "rigid_isoscaling": [[159, "rigid-isoscaling"]], "rigid_scaling": [[159, "rigid-scaling"]], "affine": [[159, "affine"]], "_METHOD_DICT": [[159, "method-dict"]], "register_series": [[159, "register-series"]], "register_dwi_series": [[159, "register-dwi-series"]], "motion_correction": [[159, "motion-correction"]], "streamline_registration": [[159, "streamline-registration"]], "determine_num_threads": [[159, "determine-num-threads"], [163, "determine-num-threads"], [163, "id97"], [171, "determine-num-threads"]], "distance_matrix_mdf": [[159, "distance-matrix-mdf"]], "DeformableRegistration": [[159, "deformableregistration"]], "Attributes": [[159, "attributes"], [161, "attributes"], [161, "id132"], [161, "id166"], [161, "id171"], [161, "id176"], [161, "id181"], [167, "attributes"], [167, "id553"], [167, "id558"], [169, "attributes"], [171, "attributes"], [171, "id100"]], "gaussian_kernel": [[159, "gaussian-kernel"]], "low_rank_eigen": [[159, "low-rank-eigen"]], "initialize_sigma2": [[159, "initialize-sigma2"]], "lowrankQS": [[159, "lowrankqs"]], "compute_cc_backward_step_2d": [[159, "compute-cc-backward-step-2d"]], "compute_cc_backward_step_3d": [[159, "compute-cc-backward-step-3d"]], "compute_cc_forward_step_2d": [[159, "compute-cc-forward-step-2d"]], "compute_cc_forward_step_3d": [[159, "compute-cc-forward-step-3d"]], "precompute_cc_factors_2d": [[159, "precompute-cc-factors-2d"]], "precompute_cc_factors_2d_test": [[159, "precompute-cc-factors-2d-test"]], "precompute_cc_factors_3d": [[159, "precompute-cc-factors-3d"]], "precompute_cc_factors_3d_test": [[159, "precompute-cc-factors-3d-test"]], "compute_em_demons_step_2d": [[159, "compute-em-demons-step-2d"]], "compute_em_demons_step_3d": [[159, "compute-em-demons-step-3d"]], "compute_masked_class_stats_2d": [[159, "compute-masked-class-stats-2d"]], "compute_masked_class_stats_3d": [[159, "compute-masked-class-stats-3d"]], "quantize_positive_2d": [[159, "quantize-positive-2d"]], "quantize_positive_3d": [[159, "quantize-positive-3d"]], "AffineInversionError": [[159, "affineinversionerror"]], "AffineInvalidValuesError": [[159, "affineinvalidvalueserror"]], "AffineMap": [[159, "affinemap"]], "MutualInformationMetric": [[159, "mutualinformationmetric"]], "AffineRegistration": [[159, "affineregistration"]], "_transform_method": [[159, "transform-method"]], "transform_centers_of_mass": [[159, "transform-centers-of-mass"]], "transform_geometric_centers": [[159, "transform-geometric-centers"]], "transform_origins": [[159, "transform-origins"]], "DiffeomorphicMap": [[159, "diffeomorphicmap"]], "DiffeomorphicRegistration": [[159, "diffeomorphicregistration"]], "SymmetricDiffeomorphicRegistration": [[159, "symmetricdiffeomorphicregistration"]], "RegistrationStages": [[159, "registrationstages"]], "logger": [[159, "logger"], [159, "id201"], [159, "id239"], [161, "logger"], [165, "logger"], [166, "logger"], [166, "id36"], [166, "id84"], [167, "logger"], [168, "logger"], [168, "id77"]], "mult_aff": [[159, "mult-aff"]], "get_direction_and_spacings": [[159, "get-direction-and-spacings"]], "SimilarityMetric": [[159, "similaritymetric"]], "CCMetric": [[159, "ccmetric"]], "EMMetric": [[159, "emmetric"]], "SSDMetric": [[159, "ssdmetric"]], "v_cycle_2d": [[159, "v-cycle-2d"]], "v_cycle_3d": [[159, "v-cycle-3d"]], "ParzenJointHistogram": [[159, "parzenjointhistogram"]], "compute_parzen_mi": [[159, "compute-parzen-mi"]], "cubic_spline": [[159, "cubic-spline"]], "cubic_spline_derivative": [[159, "cubic-spline-derivative"]], "sample_domain_regular": [[159, "sample-domain-regular"]], "reslice": [[159, "reslice"]], "ScaleSpace": [[159, "scalespace"]], "IsotropicScaleSpace": [[159, "isotropicscalespace"]], "StreamlineDistanceMetric": [[159, "streamlinedistancemetric"]], "BundleMinDistanceMetric": [[159, "bundlemindistancemetric"]], "Methods": [[159, "methods"], [159, "id208"], [159, "id216"], [159, "id220"], [171, "methods"]], "BundleMinDistanceMatrixMetric": [[159, "bundlemindistancematrixmetric"]], "BundleMinDistanceAsymmetricMetric": [[159, "bundlemindistanceasymmetricmetric"]], "BundleSumDistanceMatrixMetric": [[159, "bundlesumdistancematrixmetric"]], "JointBundleMinDistanceMetric": [[159, "jointbundlemindistancemetric"]], "StreamlineLinearRegistration": [[159, "streamlinelinearregistration"]], "StreamlineRegistrationMap": [[159, "streamlineregistrationmap"]], "JointStreamlineRegistrationMap": [[159, "jointstreamlineregistrationmap"]], "bundle_sum_distance": [[159, "bundle-sum-distance"]], "bundle_min_distance": [[159, "bundle-min-distance"]], "bundle_min_distance_fast": [[159, "bundle-min-distance-fast"]], "bundle_min_distance_asymmetric_fast": [[159, "bundle-min-distance-asymmetric-fast"]], "remove_clusters_by_size": [[159, "remove-clusters-by-size"]], "progressive_slr": [[159, "progressive-slr"]], "slr_with_qbx": [[159, "slr-with-qbx"]], "groupwise_slr": [[159, "groupwise-slr"]], "get_unique_pairs": [[159, "get-unique-pairs"]], "compose_matrix44": [[159, "compose-matrix44"]], "decompose_matrix44": [[159, "decompose-matrix44"]], "average_bundle_length": [[159, "average-bundle-length"]], "find_missing": [[159, "find-missing"]], "bundlewarp": [[159, "bundlewarp"]], "bundlewarp_vector_filed": [[159, "bundlewarp-vector-filed"]], "bundlewarp_shape_analysis": [[159, "bundlewarp-shape-analysis"]], "compute_energy_ssd_2d": [[159, "compute-energy-ssd-2d"]], "compute_energy_ssd_3d": [[159, "compute-energy-ssd-3d"]], "compute_residual_displacement_field_ssd_2d": [[159, "compute-residual-displacement-field-ssd-2d"]], "compute_residual_displacement_field_ssd_3d": [[159, "compute-residual-displacement-field-ssd-3d"]], "compute_ssd_demons_step_2d": [[159, "compute-ssd-demons-step-2d"]], "compute_ssd_demons_step_3d": [[159, "compute-ssd-demons-step-3d"]], "iterate_residual_displacement_field_ssd_2d": [[159, "iterate-residual-displacement-field-ssd-2d"]], "iterate_residual_displacement_field_ssd_3d": [[159, "iterate-residual-displacement-field-ssd-3d"]], "solve_2d_symmetric_positive_definite": [[159, "solve-2d-symmetric-positive-definite"]], "solve_3d_symmetric_positive_definite": [[159, "solve-3d-symmetric-positive-definite"]], "AffineTransform2D": [[159, "affinetransform2d"]], "AffineTransform3D": [[159, "affinetransform3d"]], "RigidIsoScalingTransform2D": [[159, "rigidisoscalingtransform2d"]], "RigidIsoScalingTransform3D": [[159, "rigidisoscalingtransform3d"]], "RigidScalingTransform2D": [[159, "rigidscalingtransform2d"]], "RigidScalingTransform3D": [[159, "rigidscalingtransform3d"]], "RigidTransform2D": [[159, "rigidtransform2d"]], "RigidTransform3D": [[159, "rigidtransform3d"]], "RotationTransform2D": [[159, "rotationtransform2d"]], "RotationTransform3D": [[159, "rotationtransform3d"]], "ScalingTransform2D": [[159, "scalingtransform2d"]], "ScalingTransform3D": [[159, "scalingtransform3d"]], "Transform": [[159, "transform"]], "TranslationTransform2D": [[159, "translationtransform2d"]], "TranslationTransform3D": [[159, "translationtransform3d"]], "compose_vector_fields_2d": [[159, "compose-vector-fields-2d"]], "compose_vector_fields_3d": [[159, "compose-vector-fields-3d"]], "create_circle": [[159, "create-circle"]], "create_harmonic_fields_2d": [[159, "create-harmonic-fields-2d"]], "create_harmonic_fields_3d": [[159, "create-harmonic-fields-3d"]], "create_random_displacement_2d": [[159, "create-random-displacement-2d"]], "create_random_displacement_3d": [[159, "create-random-displacement-3d"]], "create_sphere": [[159, "create-sphere"]], "downsample_displacement_field_2d": [[159, "downsample-displacement-field-2d"]], "downsample_displacement_field_3d": [[159, "downsample-displacement-field-3d"]], "downsample_scalar_field_2d": [[159, "downsample-scalar-field-2d"]], "downsample_scalar_field_3d": [[159, "downsample-scalar-field-3d"]], "gradient": [[159, "gradient"], [171, "gradient"]], "invert_vector_field_fixed_point_2d": [[159, "invert-vector-field-fixed-point-2d"]], "invert_vector_field_fixed_point_3d": [[159, "invert-vector-field-fixed-point-3d"]], "is_valid_affine": [[159, "is-valid-affine"]], "reorient_vector_field_2d": [[159, "reorient-vector-field-2d"]], "reorient_vector_field_3d": [[159, "reorient-vector-field-3d"]], "resample_displacement_field_2d": [[159, "resample-displacement-field-2d"]], "resample_displacement_field_3d": [[159, "resample-displacement-field-3d"]], "simplify_warp_function_2d": [[159, "simplify-warp-function-2d"]], "simplify_warp_function_3d": [[159, "simplify-warp-function-3d"]], "sparse_gradient": [[159, "sparse-gradient"]], "transform_2d_affine": [[159, "transform-2d-affine"]], "transform_2d_affine_nn": [[159, "transform-2d-affine-nn"]], "transform_3d_affine": [[159, "transform-3d-affine"]], "transform_3d_affine_nn": [[159, "transform-3d-affine-nn"]], "warp_2d": [[159, "warp-2d"]], "warp_2d_nn": [[159, "warp-2d-nn"]], "warp_3d": [[159, "warp-3d"]], "warp_3d_nn": [[159, "warp-3d-nn"]], "warp_coordinates_2d": [[159, "warp-coordinates-2d"]], "warp_coordinates_3d": [[159, "warp-coordinates-3d"]], "boots": [[160, "module-dipy.boots"]], "core": [[161, "module-dipy.core"]], "Module: core.benchmarks": [[161, "module-dipy.core.benchmarks"]], "Module: core.benchmarks.bench_sphere": [[161, "module-dipy.core.benchmarks.bench_sphere"]], "Module: core.geometry": [[161, "module-dipy.core.geometry"]], "Module: core.gradients": [[161, "module-dipy.core.gradients"]], "Module: core.graph": [[161, "module-dipy.core.graph"]], "Module: core.histeq": [[161, "module-dipy.core.histeq"]], "Module: core.interpolation": [[161, "module-dipy.core.interpolation"]], "Module: core.ndindex": [[161, "module-dipy.core.ndindex"]], "Module: core.onetime": [[161, "module-dipy.core.onetime"]], "Module: core.optimize": [[161, "module-dipy.core.optimize"]], "Module: core.profile": [[161, "module-dipy.core.profile"]], "Module: core.rng": [[161, "module-dipy.core.rng"]], "Module: core.sphere": [[161, "module-dipy.core.sphere"]], "Module: core.sphere_stats": [[161, "module-dipy.core.sphere_stats"]], "Module: core.subdivide_octahedron": [[161, "module-dipy.core.subdivide_octahedron"]], "Module: core.wavelet": [[161, "module-dipy.core.wavelet"]], "Timer": [[161, "timer"]], "func_minimize_adhoc": [[161, "func-minimize-adhoc"]], "func_minimize_scipy": [[161, "func-minimize-scipy"]], "bench_disperse_charges_alt": [[161, "bench-disperse-charges-alt"]], "_TUPLE2AXES": [[161, "tuple2axes"]], "sphere2cart": [[161, "sphere2cart"]], "cart2sphere": [[161, "cart2sphere"]], "sph2latlon": [[161, "sph2latlon"]], "normalized_vector": [[161, "normalized-vector"]], "vector_norm": [[161, "vector-norm"]], "rodrigues_axis_rotation": [[161, "rodrigues-axis-rotation"]], "nearest_pos_semi_def": [[161, "nearest-pos-semi-def"]], "sphere_distance": [[161, "sphere-distance"]], "See Also": [[161, "see-also"], [161, "id24"], [161, "id54"], [161, "id60"], [161, "id97"], [161, "id122"], [161, "id151"], [161, "id167"], [161, "id172"], [161, "id177"], [161, "id182"], [161, "id188"], [162, "see-also"], [162, "id13"], [163, "see-also"], [164, "see-also"], [164, "id4"], [164, "id23"], [165, "see-also"], [165, "id9"], [165, "id18"], [167, "see-also"], [167, "id527"], [167, "id534"], [167, "id547"], [167, "id554"], [167, "id559"], [167, "id627"], [167, "id1119"], [167, "id1184"], [167, "id1191"], [167, "id1196"], [167, "id1200"], [167, "id1206"], [167, "id1210"], [167, "id1224"], [169, "see-also"], [169, "id11"], [171, "see-also"], [171, "id14"], [171, "id101"], [171, "id117"], [171, "id152"], [171, "id155"], [171, "id158"], [171, "id161"], [171, "id194"], [171, "id284"], [171, "id288"], [171, "id294"], [171, "id298"]], "cart_distance": [[161, "cart-distance"]], "vector_cosine": [[161, "vector-cosine"]], "lambert_equal_area_projection_polar": [[161, "lambert-equal-area-projection-polar"]], "lambert_equal_area_projection_cart": [[161, "lambert-equal-area-projection-cart"]], "euler_matrix": [[161, "euler-matrix"]], "compose_matrix": [[161, "compose-matrix"]], "decompose_matrix": [[161, "decompose-matrix"]], "Raises": [[161, "raises"], [162, "raises"], [167, "raises"], [171, "raises"], [171, "id285"], [171, "id289"], [171, "id293"]], "circumradius": [[161, "circumradius"]], "vec2vec_rotmat": [[161, "vec2vec-rotmat"]], "compose_transformations": [[161, "compose-transformations"]], "perpendicular_directions": [[161, "perpendicular-directions"]], "dist_to_corner": [[161, "dist-to-corner"]], "is_hemispherical": [[161, "is-hemispherical"]], "GradientTable": [[161, "gradienttable"]], "unique_bvals": [[161, "unique-bvals"]], "gradient_table_from_bvals_bvecs": [[161, "gradient-table-from-bvals-bvecs"]], "Other Parameters": [[161, "other-parameters"]], "gradient_table_from_qvals_bvecs": [[161, "gradient-table-from-qvals-bvecs"]], "gradient_table_from_gradient_strength_bvecs": [[161, "gradient-table-from-gradient-strength-bvecs"]], "gradient_table": [[161, "gradient-table"]], "reorient_bvecs": [[161, "reorient-bvecs"]], "generate_bvecs": [[161, "generate-bvecs"]], "round_bvals": [[161, "round-bvals"]], "unique_bvals_tolerance": [[161, "unique-bvals-tolerance"]], "get_bval_indices": [[161, "get-bval-indices"]], "unique_bvals_magnitude": [[161, "unique-bvals-magnitude"]], "check_multi_b": [[161, "check-multi-b"]], "btens_to_params": [[161, "btens-to-params"]], "params_to_btens": [[161, "params-to-btens"]], "ornt_mapping": [[161, "ornt-mapping"], [165, "ornt-mapping"]], "reorient_vectors": [[161, "reorient-vectors"], [165, "reorient-vectors"]], "reorient_on_axis": [[161, "reorient-on-axis"], [165, "reorient-on-axis"]], "orientation_from_string": [[161, "orientation-from-string"], [165, "orientation-from-string"]], "orientation_to_string": [[161, "orientation-to-string"], [165, "orientation-to-string"]], "Graph": [[161, "graph"]], "histeq": [[161, "histeq"]], "Interpolator": [[161, "interpolator"]], "NearestNeighborInterpolator": [[161, "nearestneighborinterpolator"]], "OutsideImage": [[161, "outsideimage"]], "TriLinearInterpolator": [[161, "trilinearinterpolator"]], "interp_rbf": [[161, "interp-rbf"]], "interpolate_scalar_2d": [[161, "interpolate-scalar-2d"]], "interpolate_scalar_3d": [[161, "interpolate-scalar-3d"]], "interpolate_scalar_nn_2d": [[161, "interpolate-scalar-nn-2d"]], "interpolate_scalar_nn_3d": [[161, "interpolate-scalar-nn-3d"]], "interpolate_vector_2d": [[161, "interpolate-vector-2d"]], "interpolate_vector_3d": [[161, "interpolate-vector-3d"]], "map_coordinates_trilinear_iso": [[161, "map-coordinates-trilinear-iso"]], "nearestneighbor_interpolate": [[161, "nearestneighbor-interpolate"]], "trilinear_interp": [[161, "trilinear-interp"]], "trilinear_interpolate4d": [[161, "trilinear-interpolate4d"]], "ndindex": [[161, "ndindex"]], "ResetMixin": [[161, "resetmixin"]], "OneTimeProperty": [[161, "onetimeproperty"]], "auto_attr": [[161, "auto-attr"]], "Optimizer": [[161, "optimizer"]], "SKLearnLinearSolver": [[161, "sklearnlinearsolver"]], "NonNegativeLeastSquares": [[161, "nonnegativeleastsquares"]], "PositiveDefiniteLeastSquares": [[161, "positivedefiniteleastsquares"]], "spdot": [[161, "spdot"]], "sparse_nnls": [[161, "sparse-nnls"]], "Profiler": [[161, "profiler"]], "WichmannHill2006": [[161, "wichmannhill2006"]], "WichmannHill1982": [[161, "wichmannhill1982"]], "LEcuyer": [[161, "lecuyer"]], "Sphere": [[161, "sphere"], [163, "sphere"]], "HemiSphere": [[161, "hemisphere"], [163, "hemisphere"]], "faces_from_sphere_vertices": [[161, "faces-from-sphere-vertices"]], "unique_edges": [[161, "unique-edges"]], "unique_sets": [[161, "unique-sets"]], "disperse_charges": [[161, "disperse-charges"], [163, "disperse-charges"]], "disperse_charges_alt": [[161, "disperse-charges-alt"]], "euler_characteristic_check": [[161, "euler-characteristic-check"]], "octahedron_vertices": [[161, "octahedron-vertices"]], "octahedron_faces": [[161, "octahedron-faces"]], "icosahedron_vertices": [[161, "icosahedron-vertices"]], "icosahedron_faces": [[161, "icosahedron-faces"]], "unit_octahedron": [[161, "unit-octahedron"]], "unit_icosahedron": [[161, "unit-icosahedron"]], "hemi_icosahedron": [[161, "hemi-icosahedron"]], "random_uniform_on_sphere": [[161, "random-uniform-on-sphere"]], "eigenstats": [[161, "eigenstats"]], "compare_orientation_sets": [[161, "compare-orientation-sets"]], "angular_similarity": [[161, "angular-similarity"]], "create_unit_sphere": [[161, "create-unit-sphere"]], "create_unit_hemisphere": [[161, "create-unit-hemisphere"]], "cshift3D": [[161, "cshift3d"]], "permutationinverse": [[161, "permutationinverse"]], "afb3D_A": [[161, "afb3d-a"]], "sfb3D_A": [[161, "sfb3d-a"]], "sfb3D": [[161, "sfb3d"]], "afb3D": [[161, "afb3d"]], "dwt3D": [[161, "dwt3d"]], "idwt3D": [[161, "idwt3d"]], "data": [[162, "module-dipy.data"]], "Module: data.fetcher": [[162, "module-dipy.data.fetcher"]], "DataError": [[162, "dataerror"]], "loads_compat": [[162, "loads-compat"]], "DATA_DIR": [[162, "data-dir"]], "get_sim_voxels": [[162, "get-sim-voxels"]], "get_skeleton": [[162, "get-skeleton"]], "get_sphere": [[162, "get-sphere"], [163, "get-sphere"]], "default_sphere": [[162, "default-sphere"]], "small_sphere": [[162, "small-sphere"]], "get_3shell_gtab": [[162, "get-3shell-gtab"]], "get_isbi2013_2shell_gtab": [[162, "get-isbi2013-2shell-gtab"]], "get_gtab_taiwan_dsi": [[162, "get-gtab-taiwan-dsi"]], "dsi_voxels": [[162, "dsi-voxels"]], "dsi_deconv_voxels": [[162, "dsi-deconv-voxels"]], "mrtrix_spherical_functions": [[162, "mrtrix-spherical-functions"]], "get_cmap": [[162, "get-cmap"]], "two_cingulum_bundles": [[162, "two-cingulum-bundles"]], "matlab_life_results": [[162, "matlab-life-results"]], "load_sdp_constraints": [[162, "load-sdp-constraints"]], "copyfileobj_withprogress": [[162, "copyfileobj-withprogress"]], "check_md5": [[162, "check-md5"]], "fetch_data": [[162, "fetch-data"]], "fetch_isbi2013_2shell": [[162, "fetch-isbi2013-2shell"]], "fetch_stanford_labels": [[162, "fetch-stanford-labels"]], "fetch_sherbrooke_3shell": [[162, "fetch-sherbrooke-3shell"]], "fetch_stanford_hardi": [[162, "fetch-stanford-hardi"]], "fetch_resdnn_weights": [[162, "fetch-resdnn-weights"]], "fetch_synb0_weights": [[162, "fetch-synb0-weights"]], "fetch_synb0_test": [[162, "fetch-synb0-test"]], "fetch_evac_weights": [[162, "fetch-evac-weights"]], "fetch_evac_test": [[162, "fetch-evac-test"]], "fetch_stanford_t1": [[162, "fetch-stanford-t1"]], "fetch_stanford_pve_maps": [[162, "fetch-stanford-pve-maps"]], "fetch_stanford_tracks": [[162, "fetch-stanford-tracks"]], "fetch_taiwan_ntu_dsi": [[162, "fetch-taiwan-ntu-dsi"]], "fetch_syn_data": [[162, "fetch-syn-data"]], "fetch_mni_template": [[162, "fetch-mni-template"]], "fetch_scil_b0": [[162, "fetch-scil-b0"]], "fetch_bundles_2_subjects": [[162, "fetch-bundles-2-subjects"]], "fetch_ivim": [[162, "fetch-ivim"]], "fetch_cfin_multib": [[162, "fetch-cfin-multib"]], "fetch_file_formats": [[162, "fetch-file-formats"]], "fetch_bundle_atlas_hcp842": [[162, "fetch-bundle-atlas-hcp842"]], "fetch_target_tractogram_hcp": [[162, "fetch-target-tractogram-hcp"]], "fetch_bundle_fa_hcp": [[162, "fetch-bundle-fa-hcp"]], "fetch_qtdMRI_test_retest_2subjects": [[162, "fetch-qtdmri-test-retest-2subjects"]], "fetch_gold_standard_io": [[162, "fetch-gold-standard-io"]], "fetch_qte_lte_pte": [[162, "fetch-qte-lte-pte"]], "fetch_cti_rat1": [[162, "fetch-cti-rat1"]], "fetch_fury_surface": [[162, "fetch-fury-surface"]], "fetch_DiB_70_lte_pte_ste": [[162, "fetch-dib-70-lte-pte-ste"]], "fetch_DiB_217_lte_pte_ste": [[162, "fetch-dib-217-lte-pte-ste"]], "fetch_ptt_minimal_dataset": [[162, "fetch-ptt-minimal-dataset"]], "fetch_bundle_warp_dataset": [[162, "fetch-bundle-warp-dataset"]], "get_fnames": [[162, "get-fnames"]], "read_qtdMRI_test_retest_2subjects": [[162, "read-qtdmri-test-retest-2subjects"]], "read_scil_b0": [[162, "read-scil-b0"]], "read_siemens_scil_b0": [[162, "read-siemens-scil-b0"]], "read_isbi2013_2shell": [[162, "read-isbi2013-2shell"]], "read_sherbrooke_3shell": [[162, "read-sherbrooke-3shell"]], "read_stanford_labels": [[162, "read-stanford-labels"]], "read_stanford_hardi": [[162, "read-stanford-hardi"]], "read_stanford_t1": [[162, "read-stanford-t1"]], "read_stanford_pve_maps": [[162, "read-stanford-pve-maps"]], "read_taiwan_ntu_dsi": [[162, "read-taiwan-ntu-dsi"]], "read_syn_data": [[162, "read-syn-data"]], "fetch_tissue_data": [[162, "fetch-tissue-data"]], "read_tissue_data": [[162, "read-tissue-data"]], "read_mni_template": [[162, "read-mni-template"]], "fetch_cenir_multib": [[162, "fetch-cenir-multib"]], "read_cenir_multib": [[162, "read-cenir-multib"]], "read_bundles_2_subjects": [[162, "read-bundles-2-subjects"]], "read_ivim": [[162, "read-ivim"]], "read_cfin_dwi": [[162, "read-cfin-dwi"]], "read_cfin_t1": [[162, "read-cfin-t1"]], "get_file_formats": [[162, "get-file-formats"]], "get_bundle_atlas_hcp842": [[162, "get-bundle-atlas-hcp842"]], "get_two_hcp842_bundles": [[162, "get-two-hcp842-bundles"]], "get_target_tractogram_hcp": [[162, "get-target-tractogram-hcp"]], "read_qte_lte_pte": [[162, "read-qte-lte-pte"]], "read_DiB_70_lte_pte_ste": [[162, "read-dib-70-lte-pte-ste"]], "read_DiB_217_lte_pte_ste": [[162, "read-dib-217-lte-pte-ste"]], "extract_example_tracts": [[162, "extract-example-tracts"]], "read_five_af_bundles": [[162, "read-five-af-bundles"]], "to_bids_description": [[162, "to-bids-description"]], "fetch_hcp": [[162, "fetch-hcp"]], "fetch_hbn": [[162, "fetch-hbn"]], "denoise": [[163, "module-dipy.denoise"]], "Module: denoise.adaptive_soft_matching": [[163, "module-dipy.denoise.adaptive_soft_matching"]], "Module: denoise.denspeed": [[163, "module-dipy.denoise.denspeed"]], "Module: denoise.enhancement_kernel": [[163, "module-dipy.denoise.enhancement_kernel"]], "Module: denoise.gibbs": [[163, "module-dipy.denoise.gibbs"]], "Module: denoise.localpca": [[163, "module-dipy.denoise.localpca"]], "Module: denoise.nlmeans": [[163, "module-dipy.denoise.nlmeans"]], "Module: denoise.nlmeans_block": [[163, "module-dipy.denoise.nlmeans_block"]], "Module: denoise.noise_estimate": [[163, "module-dipy.denoise.noise_estimate"]], "Module: denoise.non_local_means": [[163, "module-dipy.denoise.non_local_means"]], "Module: denoise.patch2self": [[163, "module-dipy.denoise.patch2self"]], "Module: denoise.pca_noise_estimate": [[163, "module-dipy.denoise.pca_noise_estimate"]], "PCA Based Local Noise Estimation": [[163, "pca-based-local-noise-estimation"]], "Module: denoise.shift_twist_convolution": [[163, "module-dipy.denoise.shift_twist_convolution"]], "adaptive_soft_matching": [[163, "adaptive-soft-matching"]], "add_padding_reflection": [[163, "add-padding-reflection"]], "correspond_indices": [[163, "correspond-indices"]], "nlmeans_3d": [[163, "nlmeans-3d"]], "remove_padding": [[163, "remove-padding"]], "EnhancementKernel": [[163, "enhancementkernel"]], "ceil": [[163, "ceil"]], "gettempdir": [[163, "gettempdir"]], "gibbs_removal": [[163, "gibbs-removal"]], "genpca": [[163, "genpca"]], "localpca": [[163, "localpca"]], "mppca": [[163, "mppca"]], "nlmeans": [[163, "nlmeans"]], "firdn": [[163, "firdn"]], "nlmeans_block": [[163, "nlmeans-block"]], "upfir": [[163, "upfir"]], "piesno": [[163, "piesno"]], "estimate_sigma": [[163, "estimate-sigma"]], "non_local_means": [[163, "non-local-means"]], "patch2self": [[163, "patch2self"]], "pca_noise_estimate": [[163, "pca-noise-estimate"]], "warn": [[163, "warn"], [171, "warn"]], "convolve": [[163, "convolve"]], "convolve_sf": [[163, "convolve-sf"]], "sf_to_sh": [[163, "sf-to-sh"], [167, "sf-to-sh"]], "sh_to_sf": [[163, "sh-to-sf"], [167, "sh-to-sf"]], "direction": [[164, "module-dipy.direction"]], "Module: direction.bootstrap_direction_getter": [[164, "module-dipy.direction.bootstrap_direction_getter"]], "Module: direction.closest_peak_direction_getter": [[164, "module-dipy.direction.closest_peak_direction_getter"]], "Module: direction.peaks": [[164, "module-dipy.direction.peaks"]], "Module: direction.pmf": [[164, "module-dipy.direction.pmf"]], "Module: direction.probabilistic_direction_getter": [[164, "module-dipy.direction.probabilistic_direction_getter"]], "Module: direction.ptt_direction_getter": [[164, "module-dipy.direction.ptt_direction_getter"]], "BootDirectionGetter": [[164, "bootdirectiongetter"]], "BootPmfGen": [[164, "bootpmfgen"], [164, "id21"]], "BaseDirectionGetter": [[164, "basedirectiongetter"]], "BasePmfDirectionGetter": [[164, "basepmfdirectiongetter"]], "ClosestPeakDirectionGetter": [[164, "closestpeakdirectiongetter"]], "PmfGenDirectionGetter": [[164, "pmfgendirectiongetter"]], "peak_directions": [[164, "peak-directions"], [164, "id9"]], "PeaksAndMetrics": [[164, "peaksandmetrics"]], "peak_directions_nl": [[164, "peak-directions-nl"]], "peaks_from_model": [[164, "peaks-from-model"]], "reshape_peaks_for_visualization": [[164, "reshape-peaks-for-visualization"]], "PmfGen": [[164, "pmfgen"]], "SHCoeffPmfGen": [[164, "shcoeffpmfgen"]], "SimplePmfGen": [[164, "simplepmfgen"]], "DeterministicMaximumDirectionGetter": [[164, "deterministicmaximumdirectiongetter"]], "ProbabilisticDirectionGetter": [[164, "probabilisticdirectiongetter"]], "random": [[164, "random"], [171, "random"]], "PTTDirectionGetter": [[164, "pttdirectiongetter"]], "min_radius_curvature_from_angle": [[164, "min-radius-curvature-from-angle"], [171, "min-radius-curvature-from-angle"]], "io": [[165, "module-dipy.io"]], "Module: io.bvectxt": [[165, "module-dipy.io.bvectxt"]], "Module: io.dpy": [[165, "module-dipy.io.dpy"]], "Module: io.gradients": [[165, "module-dipy.io.gradients"]], "Module: io.image": [[165, "module-dipy.io.image"]], "Module: io.peaks": [[165, "module-dipy.io.peaks"]], "Module: io.pickles": [[165, "module-dipy.io.pickles"]], "Module: io.stateful_tractogram": [[165, "module-dipy.io.stateful_tractogram"]], "Module: io.streamline": [[165, "module-dipy.io.streamline"]], "Module: io.utils": [[165, "module-dipy.io.utils"]], "Module: io.vtk": [[165, "module-dipy.io.vtk"]], "read_bvec_file": [[165, "read-bvec-file"]], "Dpy": [[165, "dpy"]], "read_bvals_bvecs": [[165, "read-bvals-bvecs"]], "load_nifti_data": [[165, "load-nifti-data"]], "load_nifti": [[165, "load-nifti"]], "save_nifti": [[165, "save-nifti"]], "save_qa_metric": [[165, "save-qa-metric"]], "load_peaks": [[165, "load-peaks"]], "save_peaks": [[165, "save-peaks"]], "peaks_to_niftis": [[165, "peaks-to-niftis"]], "save_pickle": [[165, "save-pickle"]], "load_pickle": [[165, "load-pickle"]], "Space": [[165, "space"]], "Origin": [[165, "origin"]], "StatefulTractogram": [[165, "statefultractogram"]], "set_sft_logger_level": [[165, "set-sft-logger-level"]], "save_tractogram": [[165, "save-tractogram"]], "load_tractogram": [[165, "load-tractogram"]], "load_generator": [[165, "load-generator"]], "save_generator": [[165, "save-generator"]], "load_trk": [[165, "load-trk"]], "load_tck": [[165, "load-tck"]], "load_vtk": [[165, "load-vtk"]], "load_vtp": [[165, "load-vtp"]], "load_fib": [[165, "load-fib"]], "load_dpy": [[165, "load-dpy"]], "save_trk": [[165, "save-trk"]], "save_tck": [[165, "save-tck"]], "save_vtk": [[165, "save-vtk"]], "save_vtp": [[165, "save-vtp"]], "save_fib": [[165, "save-fib"]], "save_dpy": [[165, "save-dpy"]], "nifti1_symmat": [[165, "nifti1-symmat"]], "make5d": [[165, "make5d"]], "decfa": [[165, "decfa"]], "decfa_to_float": [[165, "decfa-to-float"]], "is_reference_info_valid": [[165, "is-reference-info-valid"]], "get_reference_info": [[165, "get-reference-info"]], "is_header_compatible": [[165, "is-header-compatible"]], "create_tractogram_header": [[165, "create-tractogram-header"]], "create_nifti_header": [[165, "create-nifti-header"]], "save_buan_profiles_hdf5": [[165, "save-buan-profiles-hdf5"]], "read_img_arr_or_path": [[165, "read-img-arr-or-path"]], "load_polydata": [[165, "load-polydata"]], "save_polydata": [[165, "save-polydata"]], "save_vtk_streamlines": [[165, "save-vtk-streamlines"]], "load_vtk_streamlines": [[165, "load-vtk-streamlines"]], "nn": [[166, "module-dipy.nn"]], "Module: nn.cnn_1d_denoising": [[166, "module-dipy.nn.cnn_1d_denoising"]], "Title : Denoising diffusion weighted imaging data using CNN": [[166, "title-denoising-diffusion-weighted-imaging-data-using-cnn"]], "Reference": [[166, "reference"]], "Module: nn.evac": [[166, "module-dipy.nn.evac"]], "Module: nn.histo_resdnn": [[166, "module-dipy.nn.histo_resdnn"]], "Module: nn.model": [[166, "module-dipy.nn.model"]], "Module: nn.synb0": [[166, "module-dipy.nn.synb0"]], "Module: nn.utils": [[166, "module-dipy.nn.utils"]], "Cnn1DDenoiser": [[166, "cnn1ddenoiser"]], "Block": [[166, "block"]], "ChannelSum": [[166, "channelsum"]], "EVACPlus": [[166, "evacplus"]], "prepare_img": [[166, "prepare-img"]], "init_model": [[166, "init-model"]], "HistoResDNN": [[166, "historesdnn"]], "SingleLayerPerceptron": [[166, "singlelayerperceptron"]], "MultipleLayerPercepton": [[166, "multiplelayerpercepton"]], "EncoderBlock": [[166, "encoderblock"], [166, "id61"]], "DecoderBlock": [[166, "decoderblock"], [166, "id68"]], "Synb0": [[166, "synb0"]], "UNet3D": [[166, "unet3d"], [166, "id89"]], "normalize": [[166, "normalize"], [166, "id91"]], "unnormalize": [[166, "unnormalize"], [166, "id94"]], "set_logger_level": [[166, "set-logger-level"]], "transform_img": [[166, "transform-img"]], "recover_img": [[166, "recover-img"]], "reconst": [[167, "module-dipy.reconst"]], "Module: reconst.base": [[167, "module-dipy.reconst.base"]], "Module: reconst.benchmarks": [[167, "module-dipy.reconst.benchmarks"]], "Module: reconst.benchmarks.bench_bounding_box": [[167, "module-dipy.reconst.benchmarks.bench_bounding_box"]], "Module: reconst.benchmarks.bench_csd": [[167, "module-dipy.reconst.benchmarks.bench_csd"]], "Module: reconst.benchmarks.bench_peaks": [[167, "module-dipy.reconst.benchmarks.bench_peaks"]], "Module: reconst.benchmarks.bench_squash": [[167, "module-dipy.reconst.benchmarks.bench_squash"]], "Module: reconst.benchmarks.bench_vec_val_sum": [[167, "module-dipy.reconst.benchmarks.bench_vec_val_sum"]], "Module: reconst.cache": [[167, "module-dipy.reconst.cache"]], "Module: reconst.cross_validation": [[167, "module-dipy.reconst.cross_validation"]], "Module: reconst.csdeconv": [[167, "module-dipy.reconst.csdeconv"]], "Module: reconst.cti": [[167, "module-dipy.reconst.cti"]], "Module: reconst.dki": [[167, "module-dipy.reconst.dki"]], "Module: reconst.dki_micro": [[167, "module-dipy.reconst.dki_micro"]], "Module: reconst.dsi": [[167, "module-dipy.reconst.dsi"]], "Module: reconst.dti": [[167, "module-dipy.reconst.dti"]], "Module: reconst.eudx_direction_getter": [[167, "module-dipy.reconst.eudx_direction_getter"]], "Module: reconst.forecast": [[167, "module-dipy.reconst.forecast"]], "Module: reconst.fwdti": [[167, "module-dipy.reconst.fwdti"]], "Module: reconst.gqi": [[167, "module-dipy.reconst.gqi"]], "Module: reconst.ivim": [[167, "module-dipy.reconst.ivim"]], "Module: reconst.mapmri": [[167, "module-dipy.reconst.mapmri"]], "Module: reconst.mcsd": [[167, "module-dipy.reconst.mcsd"]], "Module: reconst.msdki": [[167, "module-dipy.reconst.msdki"]], "Module: reconst.multi_voxel": [[167, "module-dipy.reconst.multi_voxel"]], "Module: reconst.odf": [[167, "module-dipy.reconst.odf"]], "Module: reconst.qtdmri": [[167, "module-dipy.reconst.qtdmri"]], "Module: reconst.qti": [[167, "module-dipy.reconst.qti"]], "Module: reconst.quick_squash": [[167, "module-dipy.reconst.quick_squash"]], "Module: reconst.recspeed": [[167, "module-dipy.reconst.recspeed"]], "Module: reconst.rumba": [[167, "module-dipy.reconst.rumba"]], "Module: reconst.sfm": [[167, "module-dipy.reconst.sfm"]], "Module: reconst.shm": [[167, "module-dipy.reconst.shm"]], "Module: reconst.shore": [[167, "module-dipy.reconst.shore"]], "Module: reconst.utils": [[167, "module-dipy.reconst.utils"]], "Module: reconst.vec_val_sum": [[167, "module-dipy.reconst.vec_val_sum"]], "ReconstModel": [[167, "reconstmodel"]], "ReconstFit": [[167, "reconstfit"]], "bench_bounding_box": [[167, "bench-bounding-box"]], "num_grad": [[167, "num-grad"]], "bench_csdeconv": [[167, "bench-csdeconv"]], "bench_local_maxima": [[167, "bench-local-maxima"]], "old_squash": [[167, "old-squash"]], "bench_quick_squash": [[167, "bench-quick-squash"]], "bench_vec_val_vect": [[167, "bench-vec-val-vect"]], "Cache": [[167, "cache"]], "coeff_of_determination": [[167, "coeff-of-determination"]], "kfold_xval": [[167, "kfold-xval"]], "AxSymShResponse": [[167, "axsymshresponse"]], "ConstrainedSphericalDeconvModel": [[167, "constrainedsphericaldeconvmodel"]], "ConstrainedSDTModel": [[167, "constrainedsdtmodel"]], "auto_response": [[167, "auto-response"]], "response_from_mask": [[167, "response-from-mask"]], "estimate_response": [[167, "estimate-response"]], "forward_sdt_deconv_mat": [[167, "forward-sdt-deconv-mat"]], "csdeconv": [[167, "csdeconv"]], "odf_deconv": [[167, "odf-deconv"]], "odf_sh_to_sharp": [[167, "odf-sh-to-sharp"]], "mask_for_response_ssst": [[167, "mask-for-response-ssst"]], "response_from_mask_ssst": [[167, "response-from-mask-ssst"]], "auto_response_ssst": [[167, "auto-response-ssst"]], "recursive_response": [[167, "recursive-response"]], "fa_trace_to_lambdas": [[167, "fa-trace-to-lambdas"]], "CorrelationTensorModel": [[167, "correlationtensormodel"]], "CorrelationTensorFit": [[167, "correlationtensorfit"]], "Parameters:": [[167, "id167"]], "from_qte_to_cti": [[167, "from-qte-to-cti"]], "multi_gaussian_k_from_c": [[167, "multi-gaussian-k-from-c"]], "split_cti_params": [[167, "split-cti-params"]], "cti_prediction": [[167, "cti-prediction"]], "params_to_cti_params": [[167, "params-to-cti-params"]], "ls_fit_cti": [[167, "ls-fit-cti"]], "DiffusionKurtosisModel": [[167, "diffusionkurtosismodel"]], "DiffusionKurtosisFit": [[167, "diffusionkurtosisfit"]], "carlson_rf": [[167, "carlson-rf"]], "carlson_rd": [[167, "carlson-rd"]], "directional_diffusion": [[167, "directional-diffusion"]], "directional_diffusion_variance": [[167, "directional-diffusion-variance"]], "directional_kurtosis": [[167, "directional-kurtosis"]], "apparent_kurtosis_coef": [[167, "apparent-kurtosis-coef"]], "mean_kurtosis": [[167, "mean-kurtosis"]], "radial_kurtosis": [[167, "radial-kurtosis"]], "axial_kurtosis": [[167, "axial-kurtosis"]], "kurtosis_maximum": [[167, "kurtosis-maximum"]], "mean_kurtosis_tensor": [[167, "mean-kurtosis-tensor"]], "kurtosis_fractional_anisotropy": [[167, "kurtosis-fractional-anisotropy"]], "dki_prediction": [[167, "dki-prediction"]], "params_to_dki_params": [[167, "params-to-dki-params"]], "ls_fit_dki": [[167, "ls-fit-dki"]], "cls_fit_dki": [[167, "cls-fit-dki"]], "Wrotate": [[167, "wrotate"]], "Wrotate_element": [[167, "wrotate-element"]], "Wcons": [[167, "wcons"]], "split_dki_param": [[167, "split-dki-param"]], "KurtosisMicrostructureModel": [[167, "kurtosismicrostructuremodel"]], "KurtosisMicrostructuralFit": [[167, "kurtosismicrostructuralfit"]], "axonal_water_fraction": [[167, "axonal-water-fraction"]], "diffusion_components": [[167, "diffusion-components"]], "dkimicro_prediction": [[167, "dkimicro-prediction"]], "tortuosity": [[167, "tortuosity"]], "DiffusionSpectrumModel": [[167, "diffusionspectrummodel"]], "DiffusionSpectrumFit": [[167, "diffusionspectrumfit"]], "DiffusionSpectrumDeconvModel": [[167, "diffusionspectrumdeconvmodel"]], "DiffusionSpectrumDeconvFit": [[167, "diffusionspectrumdeconvfit"]], "create_qspace": [[167, "create-qspace"]], "create_qtable": [[167, "create-qtable"]], "hanning_filter": [[167, "hanning-filter"]], "pdf_interp_coords": [[167, "pdf-interp-coords"]], "pdf_odf": [[167, "pdf-odf"]], "half_to_full_qspace": [[167, "half-to-full-qspace"]], "project_hemisph_bvecs": [[167, "project-hemisph-bvecs"]], "threshold_propagator": [[167, "threshold-propagator"]], "gen_PSF": [[167, "gen-psf"]], "LR_deconv": [[167, "lr-deconv"]], "TensorModel": [[167, "tensormodel"]], "TensorFit": [[167, "tensorfit"]], "fractional_anisotropy": [[167, "fractional-anisotropy"]], "geodesic_anisotropy": [[167, "geodesic-anisotropy"]], "mean_diffusivity": [[167, "mean-diffusivity"]], "axial_diffusivity": [[167, "axial-diffusivity"]], "radial_diffusivity": [[167, "radial-diffusivity"]], "trace": [[167, "trace"]], "color_fa": [[167, "color-fa"]], "determinant": [[167, "determinant"]], "isotropic": [[167, "isotropic"]], "deviatoric": [[167, "deviatoric"]], "norm": [[167, "norm"]], "mode": [[167, "mode"]], "linearity": [[167, "linearity"]], "planarity": [[167, "planarity"]], "sphericity": [[167, "sphericity"]], "apparent_diffusion_coef": [[167, "apparent-diffusion-coef"]], "tensor_prediction": [[167, "tensor-prediction"]], "iter_fit_tensor": [[167, "iter-fit-tensor"]], "wls_fit_tensor": [[167, "wls-fit-tensor"], [167, "id602"]], "ols_fit_tensor": [[167, "ols-fit-tensor"]], "nlls_fit_tensor": [[167, "nlls-fit-tensor"]], "restore_fit_tensor": [[167, "restore-fit-tensor"]], "_lt_indices": [[167, "lt-indices"]], "from_lower_triangular": [[167, "from-lower-triangular"]], "_lt_rows": [[167, "lt-rows"]], "_lt_cols": [[167, "lt-cols"]], "lower_triangular": [[167, "lower-triangular"]], "decompose_tensor": [[167, "decompose-tensor"]], "design_matrix": [[167, "design-matrix"], [167, "id964"], [167, "id1106"]], "quantize_evecs": [[167, "quantize-evecs"]], "eig_from_lo_tri": [[167, "eig-from-lo-tri"]], "EuDXDirectionGetter": [[167, "eudxdirectiongetter"]], "ForecastModel": [[167, "forecastmodel"]], "ForecastFit": [[167, "forecastfit"]], "find_signal_means": [[167, "find-signal-means"]], "forecast_error_func": [[167, "forecast-error-func"]], "psi_l": [[167, "psi-l"]], "forecast_matrix": [[167, "forecast-matrix"]], "rho_matrix": [[167, "rho-matrix"]], "lb_forecast": [[167, "lb-forecast"]], "FreeWaterTensorModel": [[167, "freewatertensormodel"]], "FreeWaterTensorFit": [[167, "freewatertensorfit"]], "fwdti_prediction": [[167, "fwdti-prediction"]], "wls_iter": [[167, "wls-iter"]], "nls_iter": [[167, "nls-iter"]], "nls_fit_tensor": [[167, "nls-fit-tensor"]], "lower_triangular_to_cholesky": [[167, "lower-triangular-to-cholesky"]], "cholesky_to_lower_triangular": [[167, "cholesky-to-lower-triangular"]], "GeneralizedQSamplingModel": [[167, "generalizedqsamplingmodel"]], "GeneralizedQSamplingFit": [[167, "generalizedqsamplingfit"]], "normalize_qa": [[167, "normalize-qa"]], "squared_radial_component": [[167, "squared-radial-component"]], "npa": [[167, "npa"]], "equatorial_zone_vertices": [[167, "equatorial-zone-vertices"]], "polar_zone_vertices": [[167, "polar-zone-vertices"]], "upper_hemi_map": [[167, "upper-hemi-map"]], "equatorial_maximum": [[167, "equatorial-maximum"]], "patch_vertices": [[167, "patch-vertices"]], "patch_maximum": [[167, "patch-maximum"]], "odf_sum": [[167, "odf-sum"]], "patch_sum": [[167, "patch-sum"]], "triple_odf_maxima": [[167, "triple-odf-maxima"]], "IvimModelTRR": [[167, "ivimmodeltrr"]], "IvimModelVP": [[167, "ivimmodelvp"]], "IvimFit": [[167, "ivimfit"]], "ivim_prediction": [[167, "ivim-prediction"]], "f_D_star_prediction": [[167, "f-d-star-prediction"]], "f_D_star_error": [[167, "f-d-star-error"]], "ivim_model_selector": [[167, "ivim-model-selector"]], "MapmriModel": [[167, "mapmrimodel"]], "MapmriFit": [[167, "mapmrifit"]], "isotropic_scale_factor": [[167, "isotropic-scale-factor"]], "mapmri_index_matrix": [[167, "mapmri-index-matrix"]], "b_mat": [[167, "b-mat"]], "b_mat_isotropic": [[167, "b-mat-isotropic"]], "mapmri_phi_1d": [[167, "mapmri-phi-1d"]], "mapmri_phi_matrix": [[167, "mapmri-phi-matrix"]], "mapmri_psi_1d": [[167, "mapmri-psi-1d"]], "mapmri_psi_matrix": [[167, "mapmri-psi-matrix"]], "mapmri_odf_matrix": [[167, "mapmri-odf-matrix"]], "mapmri_isotropic_phi_matrix": [[167, "mapmri-isotropic-phi-matrix"]], "mapmri_isotropic_radial_signal_basis": [[167, "mapmri-isotropic-radial-signal-basis"]], "mapmri_isotropic_M_mu_independent": [[167, "mapmri-isotropic-m-mu-independent"]], "mapmri_isotropic_M_mu_dependent": [[167, "mapmri-isotropic-m-mu-dependent"]], "mapmri_isotropic_psi_matrix": [[167, "mapmri-isotropic-psi-matrix"]], "mapmri_isotropic_radial_pdf_basis": [[167, "mapmri-isotropic-radial-pdf-basis"]], "mapmri_isotropic_K_mu_independent": [[167, "mapmri-isotropic-k-mu-independent"]], "mapmri_isotropic_K_mu_dependent": [[167, "mapmri-isotropic-k-mu-dependent"]], "binomialfloat": [[167, "binomialfloat"]], "mapmri_isotropic_odf_matrix": [[167, "mapmri-isotropic-odf-matrix"]], "mapmri_isotropic_odf_sh_matrix": [[167, "mapmri-isotropic-odf-sh-matrix"]], "mapmri_isotropic_laplacian_reg_matrix": [[167, "mapmri-isotropic-laplacian-reg-matrix"]], "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix": [[167, "mapmri-isotropic-laplacian-reg-matrix-from-index-matrix"]], "mapmri_isotropic_index_matrix": [[167, "mapmri-isotropic-index-matrix"]], "create_rspace": [[167, "create-rspace"], [167, "id1293"]], "delta": [[167, "delta"]], "map_laplace_u": [[167, "map-laplace-u"]], "map_laplace_t": [[167, "map-laplace-t"]], "map_laplace_s": [[167, "map-laplace-s"]], "mapmri_STU_reg_matrices": [[167, "mapmri-stu-reg-matrices"]], "mapmri_laplacian_reg_matrix": [[167, "mapmri-laplacian-reg-matrix"]], "generalized_crossvalidation_array": [[167, "generalized-crossvalidation-array"]], "generalized_crossvalidation": [[167, "generalized-crossvalidation"], [167, "id1048"]], "gcv_cost_function": [[167, "gcv-cost-function"]], "MultiShellResponse": [[167, "multishellresponse"]], "MultiShellDeconvModel": [[167, "multishelldeconvmodel"]], "MSDeconvFit": [[167, "msdeconvfit"]], "QpFitter": [[167, "qpfitter"]], "multi_tissue_basis": [[167, "multi-tissue-basis"]], "solve_qp": [[167, "solve-qp"]], "multi_shell_fiber_response": [[167, "multi-shell-fiber-response"]], "mask_for_response_msmt": [[167, "mask-for-response-msmt"]], "response_from_mask_msmt": [[167, "response-from-mask-msmt"]], "auto_response_msmt": [[167, "auto-response-msmt"]], "MeanDiffusionKurtosisModel": [[167, "meandiffusionkurtosismodel"]], "MeanDiffusionKurtosisFit": [[167, "meandiffusionkurtosisfit"]], "mean_signal_bvalue": [[167, "mean-signal-bvalue"]], "msk_from_awf": [[167, "msk-from-awf"]], "awf_from_msk": [[167, "awf-from-msk"]], "msdki_prediction": [[167, "msdki-prediction"]], "wls_fit_msdki": [[167, "wls-fit-msdki"]], "MultiVoxelFit": [[167, "multivoxelfit"]], "CallableArray": [[167, "callablearray"]], "multi_voxel_fit": [[167, "multi-voxel-fit"]], "OdfModel": [[167, "odfmodel"]], "OdfFit": [[167, "odffit"]], "gfa": [[167, "gfa"]], "minmax_normalize": [[167, "minmax-normalize"]], "QtdmriModel": [[167, "qtdmrimodel"]], "QtdmriFit": [[167, "qtdmrifit"]], "qtdmri_to_mapmri_matrix": [[167, "qtdmri-to-mapmri-matrix"]], "qtdmri_isotropic_to_mapmri_matrix": [[167, "qtdmri-isotropic-to-mapmri-matrix"]], "qtdmri_temporal_normalization": [[167, "qtdmri-temporal-normalization"]], "qtdmri_mapmri_normalization": [[167, "qtdmri-mapmri-normalization"]], "qtdmri_mapmri_isotropic_normalization": [[167, "qtdmri-mapmri-isotropic-normalization"]], "qtdmri_signal_matrix_": [[167, "qtdmri-signal-matrix"]], "qtdmri_signal_matrix": [[167, "id1026"]], "qtdmri_eap_matrix": [[167, "qtdmri-eap-matrix"]], "qtdmri_isotropic_signal_matrix_": [[167, "qtdmri-isotropic-signal-matrix"]], "qtdmri_isotropic_signal_matrix": [[167, "id1027"]], "qtdmri_eap_matrix_": [[167, "id1028"]], "qtdmri_isotropic_eap_matrix_": [[167, "qtdmri-isotropic-eap-matrix"]], "qtdmri_isotropic_eap_matrix": [[167, "id1029"]], "radial_basis_opt": [[167, "radial-basis-opt"]], "angular_basis_opt": [[167, "angular-basis-opt"]], "radial_basis_EAP_opt": [[167, "radial-basis-eap-opt"]], "angular_basis_EAP_opt": [[167, "angular-basis-eap-opt"]], "temporal_basis": [[167, "temporal-basis"]], "qtdmri_index_matrix": [[167, "qtdmri-index-matrix"]], "qtdmri_isotropic_index_matrix": [[167, "qtdmri-isotropic-index-matrix"]], "qtdmri_laplacian_reg_matrix": [[167, "qtdmri-laplacian-reg-matrix"]], "qtdmri_isotropic_laplacian_reg_matrix": [[167, "qtdmri-isotropic-laplacian-reg-matrix"]], "part23_reg_matrix_q": [[167, "part23-reg-matrix-q"]], "part23_iso_reg_matrix_q": [[167, "part23-iso-reg-matrix-q"]], "part4_reg_matrix_q": [[167, "part4-reg-matrix-q"]], "part4_iso_reg_matrix_q": [[167, "part4-iso-reg-matrix-q"]], "part1_reg_matrix_tau": [[167, "part1-reg-matrix-tau"]], "part23_reg_matrix_tau": [[167, "part23-reg-matrix-tau"]], "part4_reg_matrix_tau": [[167, "part4-reg-matrix-tau"]], "H": [[167, "h"]], "GCV_cost_function": [[167, "id1051"]], "qtdmri_isotropic_scaling": [[167, "qtdmri-isotropic-scaling"]], "qtdmri_anisotropic_scaling": [[167, "qtdmri-anisotropic-scaling"]], "design_matrix_spatial": [[167, "design-matrix-spatial"]], "create_rt_space_grid": [[167, "create-rt-space-grid"]], "qtdmri_number_of_coefficients": [[167, "qtdmri-number-of-coefficients"]], "l1_crossvalidation": [[167, "l1-crossvalidation"]], "elastic_crossvalidation": [[167, "elastic-crossvalidation"]], "visualise_gradient_table_G_Delta_rainbow": [[167, "visualise-gradient-table-g-delta-rainbow"]], "QtiModel": [[167, "qtimodel"]], "QtiFit": [[167, "qtifit"]], "from_3x3_to_6x1": [[167, "from-3x3-to-6x1"]], "from_6x1_to_3x3": [[167, "from-6x1-to-3x3"]], "from_6x6_to_21x1": [[167, "from-6x6-to-21x1"]], "from_21x1_to_6x6": [[167, "from-21x1-to-6x6"]], "cvxpy_1x6_to_3x3": [[167, "cvxpy-1x6-to-3x3"]], "cvxpy_1x21_to_6x6": [[167, "cvxpy-1x21-to-6x6"]], "dtd_covariance": [[167, "dtd-covariance"]], "qti_signal": [[167, "qti-signal"]], "quick_squash": [[167, "quick-squash"]], "reduce": [[167, "reduce"]], "adj_to_countarrs": [[167, "adj-to-countarrs"]], "argmax_from_adj": [[167, "argmax-from-adj"]], "argmax_from_countarrs": [[167, "argmax-from-countarrs"]], "le_to_odf": [[167, "le-to-odf"]], "local_maxima": [[167, "local-maxima"]], "proc_reco_args": [[167, "proc-reco-args"]], "remove_similar_vertices": [[167, "remove-similar-vertices"]], "search_descending": [[167, "search-descending"]], "sum_on_blocks_1d": [[167, "sum-on-blocks-1d"]], "RumbaSDModel": [[167, "rumbasdmodel"]], "RumbaFit": [[167, "rumbafit"]], "rumba_deconv": [[167, "rumba-deconv"]], "mbessel_ratio": [[167, "mbessel-ratio"]], "generate_kernel": [[167, "generate-kernel"]], "rumba_deconv_global": [[167, "rumba-deconv-global"]], "IsotropicModel": [[167, "isotropicmodel"]], "IsotropicFit": [[167, "isotropicfit"]], "ExponentialIsotropicModel": [[167, "exponentialisotropicmodel"]], "ExponentialIsotropicFit": [[167, "exponentialisotropicfit"]], "SparseFascicleModel": [[167, "sparsefasciclemodel"]], "SparseFascicleFit": [[167, "sparsefasciclefit"]], "sfm_design_matrix": [[167, "sfm-design-matrix"]], "SphHarmModel": [[167, "sphharmmodel"]], "QballBaseModel": [[167, "qballbasemodel"]], "SphHarmFit": [[167, "sphharmfit"]], "CsaOdfModel": [[167, "csaodfmodel"]], "OpdtModel": [[167, "opdtmodel"]], "QballModel": [[167, "qballmodel"]], "ResidualBootstrapWrapper": [[167, "residualbootstrapwrapper"]], "forward_sdeconv_mat": [[167, "forward-sdeconv-mat"]], "sh_to_rh": [[167, "sh-to-rh"]], "gen_dirac": [[167, "gen-dirac"]], "spherical_harmonics": [[167, "spherical-harmonics"]], "real_sph_harm": [[167, "real-sph-harm"]], "real_sh_tournier_from_index": [[167, "real-sh-tournier-from-index"]], "real_sh_descoteaux_from_index": [[167, "real-sh-descoteaux-from-index"]], "real_sh_tournier": [[167, "real-sh-tournier"]], "real_sh_descoteaux": [[167, "real-sh-descoteaux"]], "real_sym_sh_mrtrix": [[167, "real-sym-sh-mrtrix"]], "real_sym_sh_basis": [[167, "real-sym-sh-basis"]], "sph_harm_ind_list": [[167, "sph-harm-ind-list"]], "order_from_ncoef": [[167, "order-from-ncoef"]], "smooth_pinv": [[167, "smooth-pinv"]], "lazy_index": [[167, "lazy-index"]], "normalize_data": [[167, "normalize-data"]], "hat": [[167, "hat"]], "lcr_matrix": [[167, "lcr-matrix"]], "bootstrap_data_array": [[167, "bootstrap-data-array"]], "bootstrap_data_voxel": [[167, "bootstrap-data-voxel"]], "sh_to_sf_matrix": [[167, "sh-to-sf-matrix"]], "calculate_max_order": [[167, "calculate-max-order"]], "anisotropic_power": [[167, "anisotropic-power"]], "convert_sh_to_full_basis": [[167, "convert-sh-to-full-basis"]], "convert_sh_from_legacy": [[167, "convert-sh-from-legacy"]], "convert_sh_to_legacy": [[167, "convert-sh-to-legacy"]], "ShoreModel": [[167, "shoremodel"]], "ShoreFit": [[167, "shorefit"]], "shore_matrix": [[167, "shore-matrix"]], "shore_matrix_pdf": [[167, "shore-matrix-pdf"]], "shore_matrix_odf": [[167, "shore-matrix-odf"]], "l_shore": [[167, "l-shore"]], "n_shore": [[167, "n-shore"]], "shore_indices": [[167, "shore-indices"]], "shore_order": [[167, "shore-order"]], "dki_design_matrix": [[167, "dki-design-matrix"]], "cti_design_matrix": [[167, "cti-design-matrix"]], "vec_val_vect": [[167, "vec-val-vect"]], "segment": [[168, "module-dipy.segment"]], "Module: segment.benchmarks": [[168, "module-dipy.segment.benchmarks"]], "Module: segment.benchmarks.bench_quickbundles": [[168, "module-dipy.segment.benchmarks.bench_quickbundles"]], "Module: segment.bundles": [[168, "module-dipy.segment.bundles"]], "Module: segment.clustering": [[168, "module-dipy.segment.clustering"]], "Module: segment.clustering_algorithms": [[168, "module-dipy.segment.clustering_algorithms"]], "Module: segment.clusteringspeed": [[168, "module-dipy.segment.clusteringspeed"]], "Module: segment.cythonutils": [[168, "module-dipy.segment.cythonutils"]], "Module: segment.featurespeed": [[168, "module-dipy.segment.featurespeed"]], "Module: segment.fss": [[168, "module-dipy.segment.fss"]], "Module: segment.mask": [[168, "module-dipy.segment.mask"]], "Module: segment.metric": [[168, "module-dipy.segment.metric"]], "Module: segment.metricspeed": [[168, "module-dipy.segment.metricspeed"]], "Module: segment.mrf": [[168, "module-dipy.segment.mrf"]], "Module: segment.threshold": [[168, "module-dipy.segment.threshold"]], "Module: segment.tissue": [[168, "module-dipy.segment.tissue"]], "MDFpy": [[168, "mdfpy"]], "bench_quickbundles": [[168, "bench-quickbundles"]], "check_range": [[168, "check-range"]], "bundle_adjacency": [[168, "bundle-adjacency"]], "ba_analysis": [[168, "ba-analysis"]], "cluster_bundle": [[168, "cluster-bundle"]], "bundle_shape_similarity": [[168, "bundle-shape-similarity"]], "Identity": [[168, "identity"]], "Cluster": [[168, "cluster"]], "ClusterCentroid": [[168, "clustercentroid"], [168, "id83"], [168, "id103"]], "ClusterMap": [[168, "clustermap"]], "ClusterMapCentroid": [[168, "clustermapcentroid"], [168, "id88"], [168, "id108"]], "Clustering": [[168, "clustering"]], "QuickBundles": [[168, "quickbundles"], [168, "id112"]], "QuickBundlesX": [[168, "quickbundlesx"], [168, "id113"]], "TreeCluster": [[168, "treecluster"], [168, "id114"]], "TreeClusterMap": [[168, "treeclustermap"], [168, "id115"]], "qbx_and_merge": [[168, "qbx-and-merge"]], "DTYPE": [[168, "dtype"], [168, "id111"]], "clusters_centroid2clustermap_centroid": [[168, "clusters-centroid2clustermap-centroid"]], "peek": [[168, "peek"]], "quickbundles": [[168, "id92"]], "quickbundlesx": [[168, "id97"]], "Clusters": [[168, "clusters"]], "ClustersCentroid": [[168, "clusterscentroid"]], "evaluate_aabb_checks": [[168, "evaluate-aabb-checks"]], "ArcLengthFeature": [[168, "arclengthfeature"]], "CenterOfMassFeature": [[168, "centerofmassfeature"]], "CythonFeature": [[168, "cythonfeature"]], "Feature": [[168, "feature"]], "IdentityFeature": [[168, "identityfeature"]], "MidpointFeature": [[168, "midpointfeature"]], "ResampleFeature": [[168, "resamplefeature"]], "VectorOfEndpointsFeature": [[168, "vectorofendpointsfeature"]], "extract": [[168, "extract"]], "infer_shape": [[168, "infer-shape"]], "FastStreamlineSearch": [[168, "faststreamlinesearch"]], "nearest_from_matrix_row": [[168, "nearest-from-matrix-row"]], "nearest_from_matrix_col": [[168, "nearest-from-matrix-col"]], "multi_median": [[168, "multi-median"]], "applymask": [[168, "applymask"]], "bounding_box": [[168, "bounding-box"]], "crop": [[168, "crop"]], "median_otsu": [[168, "median-otsu"]], "segment_from_cfa": [[168, "segment-from-cfa"]], "clean_cc_mask": [[168, "clean-cc-mask"]], "mdf": [[168, "mdf"]], "mean_manhattan_distance": [[168, "mean-manhattan-distance"]], "mean_euclidean_distance": [[168, "mean-euclidean-distance"]], "AveragePointwiseEuclideanMetric": [[168, "averagepointwiseeuclideanmetric"]], "CosineMetric": [[168, "cosinemetric"]], "CythonMetric": [[168, "cythonmetric"]], "Metric": [[168, "metric"]], "MinimumAverageDirectFlipMetric": [[168, "minimumaveragedirectflipmetric"]], "SumPointwiseEuclideanMetric": [[168, "sumpointwiseeuclideanmetric"]], "dist": [[168, "dist"]], "distance_matrix": [[168, "distance-matrix"]], "ConstantObservationModel": [[168, "constantobservationmodel"]], "IteratedConditionalModes": [[168, "iteratedconditionalmodes"]], "otsu": [[168, "otsu"]], "upper_bound_by_rate": [[168, "upper-bound-by-rate"]], "upper_bound_by_percent": [[168, "upper-bound-by-percent"]], "TissueClassifierHMRF": [[168, "tissueclassifierhmrf"]], "sims": [[169, "module-dipy.sims"]], "Module: sims.phantom": [[169, "module-dipy.sims.phantom"]], "Module: sims.voxel": [[169, "module-dipy.sims.voxel"]], "add_noise": [[169, "add-noise"], [169, "id14"]], "diff2eigenvectors": [[169, "diff2eigenvectors"]], "orbital_phantom": [[169, "orbital-phantom"]], "diffusion_evals": [[169, "diffusion-evals"]], "sticks_and_ball": [[169, "sticks-and-ball"]], "callaghan_perpendicular": [[169, "callaghan-perpendicular"]], "gaussian_parallel": [[169, "gaussian-parallel"]], "cylinders_and_ball_soderman": [[169, "cylinders-and-ball-soderman"]], "single_tensor": [[169, "single-tensor"]], "multi_tensor": [[169, "multi-tensor"]], "multi_tensor_dki": [[169, "multi-tensor-dki"]], "kurtosis_element": [[169, "kurtosis-element"]], "dki_signal": [[169, "dki-signal"]], "single_tensor_odf": [[169, "single-tensor-odf"]], "all_tensor_evecs": [[169, "all-tensor-evecs"]], "multi_tensor_odf": [[169, "multi-tensor-odf"]], "single_tensor_rtop": [[169, "single-tensor-rtop"]], "multi_tensor_rtop": [[169, "multi-tensor-rtop"]], "single_tensor_pdf": [[169, "single-tensor-pdf"]], "multi_tensor_pdf": [[169, "multi-tensor-pdf"]], "single_tensor_msd": [[169, "single-tensor-msd"]], "multi_tensor_msd": [[169, "multi-tensor-msd"]], "stats": [[170, "module-dipy.stats"]], "Module: stats.analysis": [[170, "module-dipy.stats.analysis"]], "peak_values": [[170, "peak-values"]], "anatomical_measures": [[170, "anatomical-measures"]], "assignment_map": [[170, "assignment-map"]], "gaussian_weights": [[170, "gaussian-weights"]], "afq_profile": [[170, "afq-profile"]], "tracking": [[171, "module-dipy.tracking"]], "Module: tracking._utils": [[171, "module-dipy.tracking._utils"]], "Module: tracking.benchmarks": [[171, "module-dipy.tracking.benchmarks"]], "Module: tracking.benchmarks.bench_streamline": [[171, "module-dipy.tracking.benchmarks.bench_streamline"]], "Module: tracking.direction_getter": [[171, "module-dipy.tracking.direction_getter"]], "Module: tracking.distances": [[171, "module-dipy.tracking.distances"]], "Module: tracking.fbcmeasures": [[171, "module-dipy.tracking.fbcmeasures"]], "Module: tracking.learning": [[171, "module-dipy.tracking.learning"]], "Module: tracking.life": [[171, "module-dipy.tracking.life"]], "Module: tracking.local_tracking": [[171, "module-dipy.tracking.local_tracking"]], "Module: tracking.localtrack": [[171, "module-dipy.tracking.localtrack"]], "Module: tracking.mesh": [[171, "module-dipy.tracking.mesh"]], "Module: tracking.metrics": [[171, "module-dipy.tracking.metrics"]], "Module: tracking.propspeed": [[171, "module-dipy.tracking.propspeed"]], "Module: tracking.stopping_criterion": [[171, "module-dipy.tracking.stopping_criterion"]], "Module: tracking.streamline": [[171, "module-dipy.tracking.streamline"]], "Module: tracking.streamlinespeed": [[171, "module-dipy.tracking.streamlinespeed"]], "Module: tracking.utils": [[171, "module-dipy.tracking.utils"]], "Important Notes": [[171, "important-notes"]], "Module: tracking.vox2track": [[171, "module-dipy.tracking.vox2track"]], "setup": [[171, "setup"]], "generate_streamlines": [[171, "generate-streamlines"]], "bench_set_number_of_points": [[171, "bench-set-number-of-points"]], "bench_length": [[171, "bench-length"]], "bench_compress_streamlines": [[171, "bench-compress-streamlines"]], "DirectionGetter": [[171, "directiongetter"]], "add_3vecs": [[171, "add-3vecs"]], "approx_polygon_track": [[171, "approx-polygon-track"]], "approximate_mdl_trajectory": [[171, "approximate-mdl-trajectory"]], "bundles_distances_mam": [[171, "bundles-distances-mam"]], "bundles_distances_mdf": [[171, "bundles-distances-mdf"]], "cut_plane": [[171, "cut-plane"]], "inner_3vecs": [[171, "inner-3vecs"]], "intersect_segment_cylinder": [[171, "intersect-segment-cylinder"]], "larch_3merge": [[171, "larch-3merge"]], "larch_3split": [[171, "larch-3split"]], "lee_angle_distance": [[171, "lee-angle-distance"]], "lee_perpendicular_distance": [[171, "lee-perpendicular-distance"]], "local_skeleton_clustering": [[171, "local-skeleton-clustering"]], "local_skeleton_clustering_3pts": [[171, "local-skeleton-clustering-3pts"]], "mam_distances": [[171, "mam-distances"]], "minimum_closest_distance": [[171, "minimum-closest-distance"]], "most_similar_track_mam": [[171, "most-similar-track-mam"]], "mul_3vec": [[171, "mul-3vec"]], "mul_3vecs": [[171, "mul-3vecs"]], "norm_3vec": [[171, "norm-3vec"]], "normalized_3vec": [[171, "normalized-3vec"]], "point_segment_sq_distance": [[171, "point-segment-sq-distance"]], "point_track_sq_distance_check": [[171, "point-track-sq-distance-check"]], "sub_3vecs": [[171, "sub-3vecs"]], "track_dist_3pts": [[171, "track-dist-3pts"]], "track_roi_intersection_check": [[171, "track-roi-intersection-check"]], "FBCMeasures": [[171, "fbcmeasures"]], "KDTree": [[171, "kdtree"]], "interp1d": [[171, "interp1d"]], "compute_rfbc": [[171, "compute-rfbc"]], "min_moving_average": [[171, "min-moving-average"]], "detect_corresponding_tracks": [[171, "detect-corresponding-tracks"]], "detect_corresponding_tracks_plus": [[171, "detect-corresponding-tracks-plus"]], "LifeSignalMaker": [[171, "lifesignalmaker"]], "FiberModel": [[171, "fibermodel"]], "FiberFit": [[171, "fiberfit"]], "streamline_gradients": [[171, "streamline-gradients"]], "grad_tensor": [[171, "grad-tensor"]], "streamline_tensors": [[171, "streamline-tensors"]], "streamline_signal": [[171, "streamline-signal"]], "voxel2streamline": [[171, "voxel2streamline"]], "LocalTracking": [[171, "localtracking"]], "ParticleFilteringTracking": [[171, "particlefilteringtracking"]], "local_tracker": [[171, "local-tracker"]], "pft_tracker": [[171, "pft-tracker"]], "random_coordinates_from_surface": [[171, "random-coordinates-from-surface"]], "seeds_from_surface_coordinates": [[171, "seeds-from-surface-coordinates"]], "triangles_area": [[171, "triangles-area"]], "vertices_to_triangles_values": [[171, "vertices-to-triangles-values"]], "winding": [[171, "winding"]], "length": [[171, "length"], [171, "id265"], [171, "id303"]], "bytes": [[171, "bytes"]], "midpoint": [[171, "midpoint"]], "downsample": [[171, "downsample"]], "magn": [[171, "magn"]], "frenet_serret": [[171, "frenet-serret"]], "mean_curvature": [[171, "mean-curvature"]], "mean_orientation": [[171, "mean-orientation"]], "generate_combinations": [[171, "generate-combinations"]], "longest_track_bundle": [[171, "longest-track-bundle"]], "intersect_sphere": [[171, "intersect-sphere"]], "inside_sphere": [[171, "inside-sphere"]], "inside_sphere_points": [[171, "inside-sphere-points"]], "spline": [[171, "spline"]], "startpoint": [[171, "startpoint"]], "endpoint": [[171, "endpoint"]], "arbitrarypoint": [[171, "arbitrarypoint"]], "principal_components": [[171, "principal-components"]], "midpoint2point": [[171, "midpoint2point"]], "eudx_both_directions": [[171, "eudx-both-directions"]], "ndarray_offset": [[171, "ndarray-offset"]], "ActStoppingCriterion": [[171, "actstoppingcriterion"]], "AnatomicalStoppingCriterion": [[171, "anatomicalstoppingcriterion"]], "BinaryStoppingCriterion": [[171, "binarystoppingcriterion"]], "CmcStoppingCriterion": [[171, "cmcstoppingcriterion"]], "StoppingCriterion": [[171, "stoppingcriterion"]], "StreamlineStatus": [[171, "streamlinestatus"]], "ThresholdStoppingCriterion": [[171, "thresholdstoppingcriterion"]], "unlist_streamlines": [[171, "unlist-streamlines"]], "relist_streamlines": [[171, "relist-streamlines"]], "center_streamlines": [[171, "center-streamlines"]], "deform_streamlines": [[171, "deform-streamlines"]], "transform_streamlines": [[171, "transform-streamlines"]], "select_random_set_of_streamlines": [[171, "select-random-set-of-streamlines"]], "select_by_rois": [[171, "select-by-rois"]], "See also": [[171, "id239"]], "cluster_confidence": [[171, "cluster-confidence"]], "orient_by_rois": [[171, "orient-by-rois"]], "orient_by_streamline": [[171, "orient-by-streamline"]], "values_from_volume": [[171, "values-from-volume"]], "nbytes": [[171, "nbytes"]], "Streamlines": [[171, "streamlines"]], "compress_streamlines": [[171, "compress-streamlines"]], "set_number_of_points": [[171, "set-number-of-points"]], "density_map": [[171, "density-map"]], "connectivity_matrix": [[171, "connectivity-matrix"]], "ndbincount": [[171, "ndbincount"]], "reduce_labels": [[171, "reduce-labels"]], "subsegment": [[171, "subsegment"]], "seeds_from_mask": [[171, "seeds-from-mask"]], "random_seeds_from_mask": [[171, "random-seeds-from-mask"]], "target": [[171, "target"]], "target_line_based": [[171, "target-line-based"]], "streamline_near_roi": [[171, "streamline-near-roi"]], "near_roi": [[171, "near-roi"]], "unique_rows": [[171, "unique-rows"]], "transform_tracking_output": [[171, "transform-tracking-output"]], "reduce_rois": [[171, "reduce-rois"]], "path_length": [[171, "path-length"]], "max_angle_from_curvature": [[171, "max-angle-from-curvature"]], "streamline_mapping": [[171, "streamline-mapping"]], "track_counts": [[171, "track-counts"]], "viz": [[172, "module-dipy.viz"]], "Module: viz.gmem": [[172, "module-dipy.viz.gmem"]], "Module: viz.horizon": [[172, "module-dipy.viz.horizon"]], "Module: viz.horizon.app": [[172, "module-dipy.viz.horizon.app"]], "Module: viz.horizon.tab": [[172, "module-dipy.viz.horizon.tab"]], "Module: viz.horizon.tab.base": [[172, "module-dipy.viz.horizon.tab.base"]], "Module: viz.horizon.tab.cluster": [[172, "module-dipy.viz.horizon.tab.cluster"]], "Module: viz.horizon.tab.peak": [[172, "module-dipy.viz.horizon.tab.peak"]], "Module: viz.horizon.tab.roi": [[172, "module-dipy.viz.horizon.tab.roi"]], "Module: viz.horizon.tab.slice": [[172, "module-dipy.viz.horizon.tab.slice"]], "Module: viz.horizon.visualizer": [[172, "module-dipy.viz.horizon.visualizer"]], "Module: viz.horizon.visualizer.cluster": [[172, "module-dipy.viz.horizon.visualizer.cluster"]], "Module: viz.horizon.visualizer.slice": [[172, "module-dipy.viz.horizon.visualizer.slice"]], "Module: viz.panel": [[172, "module-dipy.viz.panel"]], "Module: viz.plotting": [[172, "module-dipy.viz.plotting"]], "Module: viz.projections": [[172, "module-dipy.viz.projections"]], "Module: viz.regtools": [[172, "module-dipy.viz.regtools"]], "Module: viz.streamline": [[172, "module-dipy.viz.streamline"]], "GlobalHorizon": [[172, "globalhorizon"]], "Horizon": [[172, "horizon"]], "horizon": [[172, "id1"]], "HorizonTab": [[172, "horizontab"]], "TabManager": [[172, "tabmanager"]], "build_label": [[172, "build-label"], [172, "id6"]], "color_single_slider": [[172, "color-single-slider"]], "color_double_slider": [[172, "color-double-slider"]], "ClustersTab": [[172, "clusterstab"]], "PeaksTab": [[172, "peakstab"]], "ROIsTab": [[172, "roistab"]], "SlicesTab": [[172, "slicestab"]], "ClustersVisualizer": [[172, "clustersvisualizer"]], "SlicesVisualizer": [[172, "slicesvisualizer"]], "slicer_panel": [[172, "slicer-panel"]], "compare_maps": [[172, "compare-maps"]], "compare_qti_maps": [[172, "compare-qti-maps"]], "bundle_shape_profile": [[172, "bundle-shape-profile"]], "sph_project": [[172, "sph-project"]], "simple_plot": [[172, "simple-plot"]], "overlay_images": [[172, "overlay-images"]], "draw_lattice_2d": [[172, "draw-lattice-2d"]], "plot_2d_diffeomorphic_map": [[172, "plot-2d-diffeomorphic-map"]], "plot_slices": [[172, "plot-slices"]], "overlay_slices": [[172, "overlay-slices"]], "show_bundles": [[172, "show-bundles"]], "viz_two_bundles": [[172, "viz-two-bundles"]], "viz_vector_field": [[172, "viz-vector-field"]], "viz_displacement_mag": [[172, "viz-displacement-mag"]], "workflows": [[173, "module-dipy.workflows"]], "Module: workflows.align": [[173, "module-dipy.workflows.align"]], "Module: workflows.base": [[173, "module-dipy.workflows.base"]], "Module: workflows.combined_workflow": [[173, "module-dipy.workflows.combined_workflow"]], "Module: workflows.denoise": [[173, "module-dipy.workflows.denoise"]], "Module: workflows.docstring_parser": [[173, "module-dipy.workflows.docstring_parser"]], "Module: workflows.flow_runner": [[173, "module-dipy.workflows.flow_runner"]], "Module: workflows.io": [[173, "module-dipy.workflows.io"]], "Module: workflows.mask": [[173, "module-dipy.workflows.mask"]], "Module: workflows.multi_io": [[173, "module-dipy.workflows.multi_io"]], "Module: workflows.nn": [[173, "module-dipy.workflows.nn"]], "Module: workflows.reconst": [[173, "module-dipy.workflows.reconst"]], "Module: workflows.segment": [[173, "module-dipy.workflows.segment"]], "Module: workflows.stats": [[173, "module-dipy.workflows.stats"]], "Module: workflows.tracking": [[173, "module-dipy.workflows.tracking"]], "Module: workflows.viz": [[173, "module-dipy.workflows.viz"]], "Module: workflows.workflow": [[173, "module-dipy.workflows.workflow"]], "ResliceFlow": [[173, "resliceflow"]], "SlrWithQbxFlow": [[173, "slrwithqbxflow"]], "ImageRegistrationFlow": [[173, "imageregistrationflow"]], "ApplyTransformFlow": [[173, "applytransformflow"]], "SynRegistrationFlow": [[173, "synregistrationflow"]], "MotionCorrectionFlow": [[173, "motioncorrectionflow"]], "BundleWarpFlow": [[173, "bundlewarpflow"]], "check_dimensions": [[173, "check-dimensions"]], "IntrospectiveArgumentParser": [[173, "introspectiveargumentparser"]], "get_args_default": [[173, "get-args-default"]], "none_or_dtype": [[173, "none-or-dtype"]], "CombinedWorkflow": [[173, "combinedworkflow"]], "Patch2SelfFlow": [[173, "patch2selfflow"]], "NLMeansFlow": [[173, "nlmeansflow"]], "LPCAFlow": [[173, "lpcaflow"]], "MPPCAFlow": [[173, "mppcaflow"]], "GibbsRingingFlow": [[173, "gibbsringingflow"]], "Reader": [[173, "reader"]], "NumpyDocString": [[173, "numpydocstring"]], "dedent_lines": [[173, "dedent-lines"]], "get_level": [[173, "get-level"]], "run_flow": [[173, "run-flow"]], "IoInfoFlow": [[173, "ioinfoflow"]], "FetchFlow": [[173, "fetchflow"]], "SplitFlow": [[173, "splitflow"]], "MaskFlow": [[173, "maskflow"]], "IOIterator": [[173, "ioiterator"]], "common_start": [[173, "common-start"]], "slash_to_under": [[173, "slash-to-under"]], "connect_output_paths": [[173, "connect-output-paths"]], "concatenate_inputs": [[173, "concatenate-inputs"]], "basename_without_extension": [[173, "basename-without-extension"]], "io_iterator": [[173, "io-iterator"]], "io_iterator_": [[173, "id49"]], "EVACPlusFlow": [[173, "evacplusflow"]], "ReconstMAPMRIFlow": [[173, "reconstmapmriflow"]], "ReconstDtiFlow": [[173, "reconstdtiflow"]], "ReconstCSDFlow": [[173, "reconstcsdflow"]], "ReconstCSAFlow": [[173, "reconstcsaflow"]], "ReconstDkiFlow": [[173, "reconstdkiflow"]], "ReconstIvimFlow": [[173, "reconstivimflow"]], "ReconstRUMBAFlow": [[173, "reconstrumbaflow"]], "MedianOtsuFlow": [[173, "medianotsuflow"]], "RecoBundlesFlow": [[173, "recobundlesflow"]], "LabelsBundlesFlow": [[173, "labelsbundlesflow"]], "SNRinCCFlow": [[173, "snrinccflow"]], "BundleAnalysisTractometryFlow": [[173, "bundleanalysistractometryflow"]], "LinearMixedModelsFlow": [[173, "linearmixedmodelsflow"]], "BundleShapeAnalysis": [[173, "bundleshapeanalysis"]], "buan_bundle_profiles": [[173, "buan-bundle-profiles"]], "LocalFiberTrackingPAMFlow": [[173, "localfibertrackingpamflow"]], "PFTrackingPAMFlow": [[173, "pftrackingpamflow"]], "HorizonFlow": [[173, "horizonflow"]], "Workflow": [[173, "workflow"]], "API Reference": [[174, "api-reference"]], "dipy_align_affine": [[175, "dipy-align-affine"]], "Usage": [[175, "usage"], [176, "usage"], [177, "usage"], [178, "usage"], [179, "usage"], [180, "usage"], [181, "usage"], [182, "usage"], [183, "usage"], [184, "usage"], [185, "usage"], [186, "usage"], [187, "usage"], [188, "usage"], [189, "usage"], [190, "usage"], [191, "usage"], [192, "usage"], [193, "usage"], [194, "usage"], [195, "usage"], [196, "usage"], [197, "usage"], [198, "usage"], [199, "usage"], [200, "usage"], [201, "usage"], [202, "usage"], [203, "usage"], [204, "usage"], [205, "usage"], [206, "usage"]], "Positional Arguments": [[175, "positional-arguments"], [176, "positional-arguments"], [177, "positional-arguments"], [178, "positional-arguments"], [179, "positional-arguments"], [180, "positional-arguments"], [181, "positional-arguments"], [182, "positional-arguments"], [183, "positional-arguments"], [184, "positional-arguments"], [185, "positional-arguments"], [186, "positional-arguments"], [187, "positional-arguments"], [188, "positional-arguments"], [189, "positional-arguments"], [190, "positional-arguments"], [191, "positional-arguments"], [192, "positional-arguments"], [193, "positional-arguments"], [194, "positional-arguments"], [195, "positional-arguments"], [196, "positional-arguments"], [197, "positional-arguments"], [198, "positional-arguments"], [199, "positional-arguments"], [200, "positional-arguments"], [201, "positional-arguments"], [202, "positional-arguments"], [203, "positional-arguments"], [204, "positional-arguments"], [205, "positional-arguments"], [206, "positional-arguments"]], "Optional Arguments": [[175, "optional-arguments"], [176, "optional-arguments"], [177, "optional-arguments"], [178, "optional-arguments"], [179, "optional-arguments"], [180, "optional-arguments"], [181, "optional-arguments"], [182, "optional-arguments"], [183, "optional-arguments"], [184, "optional-arguments"], [185, "optional-arguments"], [186, "optional-arguments"], [187, "optional-arguments"], [188, "optional-arguments"], [189, "optional-arguments"], [190, "optional-arguments"], [191, "optional-arguments"], [192, "optional-arguments"], [193, "optional-arguments"], [194, "optional-arguments"], [195, "optional-arguments"], [196, "optional-arguments"], [197, "optional-arguments"], [198, "optional-arguments"], [199, "optional-arguments"], [200, "optional-arguments"], [201, "optional-arguments"], [202, "optional-arguments"], [203, "optional-arguments"], [204, "optional-arguments"], [205, "optional-arguments"], [206, "optional-arguments"]], "Output Arguments(Optional)": [[175, "output-arguments-optional"], [176, "output-arguments-optional"], [177, "output-arguments-optional"], [178, "output-arguments-optional"], [179, "output-arguments-optional"], [180, "output-arguments-optional"], [181, "output-arguments-optional"], [182, "output-arguments-optional"], [183, "output-arguments-optional"], [184, "output-arguments-optional"], [185, "output-arguments-optional"], [186, "output-arguments-optional"], [187, "output-arguments-optional"], [188, "output-arguments-optional"], [189, "output-arguments-optional"], [190, "output-arguments-optional"], [191, "output-arguments-optional"], [192, "output-arguments-optional"], [193, "output-arguments-optional"], [194, "output-arguments-optional"], [195, "output-arguments-optional"], [197, "output-arguments-optional"], [198, "output-arguments-optional"], [199, "output-arguments-optional"], [200, "output-arguments-optional"], [201, "output-arguments-optional"], [202, "output-arguments-optional"], [203, "output-arguments-optional"], [204, "output-arguments-optional"], [205, "output-arguments-optional"], [206, "output-arguments-optional"]], "dipy_align_syn": [[176, "dipy-align-syn"]], "dipy_apply_transform": [[177, "dipy-apply-transform"]], "dipy_buan_lmm": [[178, "dipy-buan-lmm"]], "dipy_buan_profiles": [[179, "dipy-buan-profiles"]], "dipy_bundlewarp": [[180, "dipy-bundlewarp"]], "dipy_correct_motion": [[181, "dipy-correct-motion"]], "dipy_denoise_lpca": [[182, "dipy-denoise-lpca"]], "dipy_denoise_mppca": [[183, "dipy-denoise-mppca"]], "dipy_denoise_nlmeans": [[184, "dipy-denoise-nlmeans"]], "dipy_denoise_patch2self": [[185, "dipy-denoise-patch2self"]], "dipy_evac_plus": [[186, "dipy-evac-plus"]], "dipy_fetch": [[187, "dipy-fetch"]], "dipy_fit_csa": [[188, "dipy-fit-csa"]], "dipy_fit_csd": [[189, "dipy-fit-csd"]], "dipy_fit_dki": [[190, "dipy-fit-dki"]], "dipy_fit_dti": [[191, "dipy-fit-dti"]], "dipy_fit_ivim": [[192, "dipy-fit-ivim"]], "dipy_fit_mapmri": [[193, "dipy-fit-mapmri"]], "dipy_gibbs_ringing": [[194, "dipy-gibbs-ringing"]], "dipy_horizon": [[195, "dipy-horizon"]], "dipy_info": [[196, "dipy-info"]], "dipy_labelsbundles": [[197, "dipy-labelsbundles"]], "dipy_mask": [[198, "dipy-mask"]], "dipy_median_otsu": [[199, "dipy-median-otsu"]], "dipy_recobundles": [[200, "dipy-recobundles"]], "dipy_reslice": [[201, "dipy-reslice"]], "dipy_slr": [[202, "dipy-slr"]], "dipy_snr_in_cc": [[203, "dipy-snr-in-cc"]], "dipy_split": [[204, "dipy-split"]], "dipy_track": [[205, "dipy-track"]], "dipy_track_pft": [[206, "dipy-track-pft"]], "Command Line Utilities Reference": [[207, "command-line-utilities-reference"]], "Dependencies": [[238, "dependencies"]]}, "indexentries": {"affine matrix": [[140, "term-Affine-matrix"]], "affine transformation": [[140, "term-Affine-transformation"]], "axis angle": [[140, "term-Axis-angle"]], "euclidean norm": [[140, "term-Euclidean-norm"]], "euler angles": [[140, "term-Euler-angles"]], "gimbal lock": [[140, "term-Gimbal-lock"]], "homogeneous coordinates": [[140, "term-Homogeneous-coordinates"]], "linear transformation": [[140, "term-Linear-transformation"]], "quaternion": [[140, "term-Quaternion"]], "reflection": [[140, "term-Reflection"]], "rotation matrix": [[140, "term-Rotation-matrix"]], "rotation vector": [[140, "term-Rotation-vector"]], "shear matrix": [[140, "term-Shear-matrix"]], "unit vector": [[140, "term-Unit-vector"]], "dipy": [[157, "module-dipy"]], "get_info() (in module dipy)": [[157, "dipy.get_info"]], "module": [[157, "module-dipy"], [158, "module-dipy.__config__"], [159, "module-dipy.align"], [159, "module-dipy.align._public"], [159, "module-dipy.align.bundlemin"], [159, "module-dipy.align.cpd"], [159, "module-dipy.align.crosscorr"], [159, "module-dipy.align.expectmax"], [159, "module-dipy.align.imaffine"], [159, "module-dipy.align.imwarp"], [159, "module-dipy.align.metrics"], [159, "module-dipy.align.parzenhist"], [159, "module-dipy.align.reslice"], [159, "module-dipy.align.scalespace"], [159, "module-dipy.align.streamlinear"], [159, "module-dipy.align.streamwarp"], [159, "module-dipy.align.sumsqdiff"], [159, "module-dipy.align.transforms"], [159, "module-dipy.align.vector_fields"], [160, "module-dipy.boots"], [161, "module-dipy.core"], [161, "module-dipy.core.benchmarks"], [161, "module-dipy.core.benchmarks.bench_sphere"], [161, "module-dipy.core.geometry"], [161, "module-dipy.core.gradients"], [161, "module-dipy.core.graph"], [161, "module-dipy.core.histeq"], [161, "module-dipy.core.interpolation"], [161, "module-dipy.core.ndindex"], [161, "module-dipy.core.onetime"], [161, "module-dipy.core.optimize"], [161, "module-dipy.core.profile"], [161, "module-dipy.core.rng"], [161, "module-dipy.core.sphere"], [161, "module-dipy.core.sphere_stats"], [161, "module-dipy.core.subdivide_octahedron"], [161, "module-dipy.core.wavelet"], [162, "module-dipy.data"], [162, "module-dipy.data.fetcher"], [163, "module-dipy.denoise"], [163, "module-dipy.denoise.adaptive_soft_matching"], [163, "module-dipy.denoise.denspeed"], [163, "module-dipy.denoise.enhancement_kernel"], [163, "module-dipy.denoise.gibbs"], [163, "module-dipy.denoise.localpca"], [163, "module-dipy.denoise.nlmeans"], [163, "module-dipy.denoise.nlmeans_block"], [163, "module-dipy.denoise.noise_estimate"], [163, "module-dipy.denoise.non_local_means"], [163, "module-dipy.denoise.patch2self"], [163, "module-dipy.denoise.pca_noise_estimate"], [163, "module-dipy.denoise.shift_twist_convolution"], [164, "module-dipy.direction"], [164, "module-dipy.direction.bootstrap_direction_getter"], [164, "module-dipy.direction.closest_peak_direction_getter"], [164, "module-dipy.direction.peaks"], [164, "module-dipy.direction.pmf"], [164, "module-dipy.direction.probabilistic_direction_getter"], [164, "module-dipy.direction.ptt_direction_getter"], [165, "module-dipy.io"], [165, "module-dipy.io.bvectxt"], [165, "module-dipy.io.dpy"], [165, "module-dipy.io.gradients"], [165, "module-dipy.io.image"], [165, "module-dipy.io.peaks"], [165, "module-dipy.io.pickles"], [165, "module-dipy.io.stateful_tractogram"], [165, "module-dipy.io.streamline"], [165, "module-dipy.io.utils"], [165, "module-dipy.io.vtk"], [166, "module-dipy.nn"], [166, "module-dipy.nn.cnn_1d_denoising"], [166, "module-dipy.nn.evac"], [166, "module-dipy.nn.histo_resdnn"], [166, "module-dipy.nn.model"], [166, "module-dipy.nn.synb0"], [166, "module-dipy.nn.utils"], [167, "module-dipy.reconst"], [167, "module-dipy.reconst.base"], [167, "module-dipy.reconst.benchmarks"], [167, "module-dipy.reconst.benchmarks.bench_bounding_box"], [167, "module-dipy.reconst.benchmarks.bench_csd"], [167, "module-dipy.reconst.benchmarks.bench_peaks"], [167, "module-dipy.reconst.benchmarks.bench_squash"], [167, "module-dipy.reconst.benchmarks.bench_vec_val_sum"], [167, "module-dipy.reconst.cache"], [167, "module-dipy.reconst.cross_validation"], [167, "module-dipy.reconst.csdeconv"], [167, "module-dipy.reconst.cti"], [167, "module-dipy.reconst.dki"], [167, "module-dipy.reconst.dki_micro"], [167, "module-dipy.reconst.dsi"], [167, "module-dipy.reconst.dti"], [167, "module-dipy.reconst.eudx_direction_getter"], [167, "module-dipy.reconst.forecast"], [167, "module-dipy.reconst.fwdti"], [167, "module-dipy.reconst.gqi"], [167, "module-dipy.reconst.ivim"], [167, "module-dipy.reconst.mapmri"], [167, "module-dipy.reconst.mcsd"], [167, "module-dipy.reconst.msdki"], [167, "module-dipy.reconst.multi_voxel"], [167, "module-dipy.reconst.odf"], [167, "module-dipy.reconst.qtdmri"], [167, "module-dipy.reconst.qti"], [167, "module-dipy.reconst.quick_squash"], [167, "module-dipy.reconst.recspeed"], [167, "module-dipy.reconst.rumba"], [167, "module-dipy.reconst.sfm"], [167, "module-dipy.reconst.shm"], [167, "module-dipy.reconst.shore"], [167, "module-dipy.reconst.utils"], [167, "module-dipy.reconst.vec_val_sum"], [168, "module-dipy.segment"], [168, "module-dipy.segment.benchmarks"], [168, "module-dipy.segment.benchmarks.bench_quickbundles"], [168, "module-dipy.segment.bundles"], [168, "module-dipy.segment.clustering"], [168, "module-dipy.segment.clustering_algorithms"], [168, "module-dipy.segment.clusteringspeed"], [168, "module-dipy.segment.cythonutils"], [168, "module-dipy.segment.featurespeed"], [168, "module-dipy.segment.fss"], [168, "module-dipy.segment.mask"], [168, "module-dipy.segment.metric"], [168, "module-dipy.segment.metricspeed"], [168, "module-dipy.segment.mrf"], [168, "module-dipy.segment.threshold"], [168, "module-dipy.segment.tissue"], [169, "module-dipy.sims"], [169, "module-dipy.sims.phantom"], [169, "module-dipy.sims.voxel"], [170, "module-dipy.stats"], [170, "module-dipy.stats.analysis"], [171, "module-dipy.tracking"], [171, "module-dipy.tracking._utils"], [171, "module-dipy.tracking.benchmarks"], [171, "module-dipy.tracking.benchmarks.bench_streamline"], [171, "module-dipy.tracking.direction_getter"], [171, "module-dipy.tracking.distances"], [171, "module-dipy.tracking.fbcmeasures"], [171, "module-dipy.tracking.learning"], [171, "module-dipy.tracking.life"], [171, "module-dipy.tracking.local_tracking"], [171, "module-dipy.tracking.localtrack"], [171, "module-dipy.tracking.mesh"], [171, "module-dipy.tracking.metrics"], [171, "module-dipy.tracking.propspeed"], [171, "module-dipy.tracking.stopping_criterion"], [171, "module-dipy.tracking.streamline"], [171, "module-dipy.tracking.streamlinespeed"], [171, "module-dipy.tracking.utils"], [171, "module-dipy.tracking.vox2track"], [172, "module-dipy.viz"], [172, "module-dipy.viz.gmem"], [172, "module-dipy.viz.horizon"], [172, "module-dipy.viz.horizon.app"], [172, "module-dipy.viz.horizon.tab"], [172, "module-dipy.viz.horizon.tab.base"], [172, "module-dipy.viz.horizon.tab.cluster"], [172, "module-dipy.viz.horizon.tab.peak"], [172, "module-dipy.viz.horizon.tab.roi"], [172, "module-dipy.viz.horizon.tab.slice"], [172, "module-dipy.viz.horizon.visualizer"], [172, "module-dipy.viz.horizon.visualizer.cluster"], [172, "module-dipy.viz.horizon.visualizer.slice"], [172, "module-dipy.viz.panel"], [172, "module-dipy.viz.plotting"], [172, "module-dipy.viz.projections"], [172, "module-dipy.viz.regtools"], [172, "module-dipy.viz.streamline"], [173, "module-dipy.workflows"], [173, "module-dipy.workflows.align"], [173, "module-dipy.workflows.base"], [173, "module-dipy.workflows.combined_workflow"], [173, "module-dipy.workflows.denoise"], [173, "module-dipy.workflows.docstring_parser"], [173, "module-dipy.workflows.flow_runner"], [173, "module-dipy.workflows.io"], [173, "module-dipy.workflows.mask"], [173, "module-dipy.workflows.multi_io"], [173, "module-dipy.workflows.nn"], [173, "module-dipy.workflows.reconst"], [173, "module-dipy.workflows.segment"], [173, "module-dipy.workflows.stats"], [173, "module-dipy.workflows.tracking"], [173, "module-dipy.workflows.viz"], [173, "module-dipy.workflows.workflow"]], "dipy.__config__": [[158, "module-dipy.__config__"]], "affineinvalidvalueserror (class in dipy.align.imaffine)": [[159, "dipy.align.imaffine.AffineInvalidValuesError"]], "affineinversionerror (class in dipy.align.imaffine)": [[159, "dipy.align.imaffine.AffineInversionError"]], "affinemap (class in dipy.align.imaffine)": [[159, "dipy.align.imaffine.AffineMap"]], "affineregistration (class in dipy.align.imaffine)": [[159, "dipy.align.imaffine.AffineRegistration"]], "affinetransform2d (class in dipy.align.transforms)": [[159, "dipy.align.transforms.AffineTransform2D"]], "affinetransform3d (class in dipy.align.transforms)": [[159, "dipy.align.transforms.AffineTransform3D"]], "bunch (class in dipy.align)": [[159, "dipy.align.Bunch"]], "bundlemindistanceasymmetricmetric (class in dipy.align.streamlinear)": [[159, "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric"]], "bundlemindistancematrixmetric (class in dipy.align.streamlinear)": [[159, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric"]], "bundlemindistancemetric (class in dipy.align.streamlinear)": [[159, "dipy.align.streamlinear.BundleMinDistanceMetric"]], "bundlesumdistancematrixmetric (class in dipy.align.streamlinear)": [[159, "dipy.align.streamlinear.BundleSumDistanceMatrixMetric"]], "ccmetric (class in dipy.align.metrics)": [[159, "dipy.align.metrics.CCMetric"]], "deformableregistration (class in dipy.align.cpd)": [[159, "dipy.align.cpd.DeformableRegistration"]], "diffeomorphicmap (class in dipy.align.imwarp)": [[159, "dipy.align.imwarp.DiffeomorphicMap"]], "diffeomorphicregistration (class in dipy.align.imwarp)": [[159, "dipy.align.imwarp.DiffeomorphicRegistration"]], "emmetric (class in dipy.align.metrics)": [[159, "dipy.align.metrics.EMMetric"]], "isotropicscalespace (class in dipy.align.scalespace)": [[159, "dipy.align.scalespace.IsotropicScaleSpace"]], "jointbundlemindistancemetric (class in dipy.align.streamlinear)": [[159, "dipy.align.streamlinear.JointBundleMinDistanceMetric"]], "jointstreamlineregistrationmap (class in dipy.align.streamlinear)": [[159, "dipy.align.streamlinear.JointStreamlineRegistrationMap"]], "mutualinformationmetric (class in dipy.align.imaffine)": [[159, "dipy.align.imaffine.MutualInformationMetric"]], "parzenjointhistogram (class in dipy.align.parzenhist)": [[159, "dipy.align.parzenhist.ParzenJointHistogram"]], "registrationstages() (in module dipy.align.imwarp)": [[159, "dipy.align.imwarp.RegistrationStages"]], "rigidisoscalingtransform2d (class in dipy.align.transforms)": [[159, "dipy.align.transforms.RigidIsoScalingTransform2D"]], "rigidisoscalingtransform3d (class in dipy.align.transforms)": [[159, "dipy.align.transforms.RigidIsoScalingTransform3D"]], "rigidscalingtransform2d (class in dipy.align.transforms)": [[159, "dipy.align.transforms.RigidScalingTransform2D"]], "rigidscalingtransform3d (class in dipy.align.transforms)": [[159, "dipy.align.transforms.RigidScalingTransform3D"]], "rigidtransform2d (class in dipy.align.transforms)": [[159, "dipy.align.transforms.RigidTransform2D"]], "rigidtransform3d (class in dipy.align.transforms)": [[159, "dipy.align.transforms.RigidTransform3D"]], "rotationtransform2d (class in dipy.align.transforms)": [[159, "dipy.align.transforms.RotationTransform2D"]], "rotationtransform3d (class in dipy.align.transforms)": [[159, "dipy.align.transforms.RotationTransform3D"]], "ssdmetric (class in dipy.align.metrics)": [[159, "dipy.align.metrics.SSDMetric"]], "scalespace (class in dipy.align.scalespace)": [[159, "dipy.align.scalespace.ScaleSpace"]], "scalingtransform2d (class in dipy.align.transforms)": [[159, "dipy.align.transforms.ScalingTransform2D"]], "scalingtransform3d (class in dipy.align.transforms)": [[159, "dipy.align.transforms.ScalingTransform3D"]], "similaritymetric (class in dipy.align.metrics)": [[159, "dipy.align.metrics.SimilarityMetric"]], "streamlinedistancemetric (class in dipy.align.streamlinear)": [[159, "dipy.align.streamlinear.StreamlineDistanceMetric"]], "streamlinelinearregistration (class in dipy.align.streamlinear)": [[159, "dipy.align.streamlinear.StreamlineLinearRegistration"]], "streamlineregistrationmap (class in dipy.align.streamlinear)": [[159, "dipy.align.streamlinear.StreamlineRegistrationMap"]], "symmetricdiffeomorphicregistration (class in dipy.align.imwarp)": [[159, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration"]], "transform (class in dipy.align.transforms)": [[159, "dipy.align.transforms.Transform"]], "translationtransform2d (class in dipy.align.transforms)": [[159, "dipy.align.transforms.TranslationTransform2D"]], "translationtransform3d (class in dipy.align.transforms)": [[159, "dipy.align.transforms.TranslationTransform3D"]], "verbositylevels() (in module dipy.align)": [[159, "dipy.align.VerbosityLevels"]], "_method_dict() (in module dipy.align._public)": [[159, "dipy.align._public._METHOD_DICT"]], "__init__() (dipy.align.bunch method)": [[159, "dipy.align.Bunch.__init__"]], "__init__() (dipy.align.cpd.deformableregistration method)": [[159, "dipy.align.cpd.DeformableRegistration.__init__"]], "__init__() (dipy.align.imaffine.affineinvalidvalueserror method)": [[159, "dipy.align.imaffine.AffineInvalidValuesError.__init__"]], "__init__() (dipy.align.imaffine.affineinversionerror method)": [[159, "dipy.align.imaffine.AffineInversionError.__init__"]], "__init__() (dipy.align.imaffine.affinemap method)": [[159, "dipy.align.imaffine.AffineMap.__init__"]], "__init__() (dipy.align.imaffine.affineregistration method)": [[159, "dipy.align.imaffine.AffineRegistration.__init__"]], "__init__() (dipy.align.imaffine.mutualinformationmetric method)": [[159, "dipy.align.imaffine.MutualInformationMetric.__init__"]], "__init__() (dipy.align.imwarp.diffeomorphicmap method)": [[159, "dipy.align.imwarp.DiffeomorphicMap.__init__"]], "__init__() (dipy.align.imwarp.diffeomorphicregistration method)": [[159, "dipy.align.imwarp.DiffeomorphicRegistration.__init__"]], "__init__() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[159, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.__init__"]], "__init__() (dipy.align.metrics.ccmetric method)": [[159, "dipy.align.metrics.CCMetric.__init__"]], "__init__() (dipy.align.metrics.emmetric method)": [[159, "dipy.align.metrics.EMMetric.__init__"]], "__init__() (dipy.align.metrics.ssdmetric method)": [[159, "dipy.align.metrics.SSDMetric.__init__"]], "__init__() (dipy.align.metrics.similaritymetric method)": [[159, "dipy.align.metrics.SimilarityMetric.__init__"]], "__init__() (dipy.align.parzenhist.parzenjointhistogram method)": [[159, "dipy.align.parzenhist.ParzenJointHistogram.__init__"]], "__init__() (dipy.align.scalespace.isotropicscalespace method)": [[159, "dipy.align.scalespace.IsotropicScaleSpace.__init__"]], "__init__() (dipy.align.scalespace.scalespace method)": [[159, "dipy.align.scalespace.ScaleSpace.__init__"]], "__init__() (dipy.align.streamlinear.bundlemindistanceasymmetricmetric method)": [[159, "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric.__init__"]], "__init__() (dipy.align.streamlinear.bundlemindistancematrixmetric method)": [[159, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric.__init__"]], "__init__() (dipy.align.streamlinear.bundlemindistancemetric method)": [[159, "dipy.align.streamlinear.BundleMinDistanceMetric.__init__"]], "__init__() (dipy.align.streamlinear.bundlesumdistancematrixmetric method)": [[159, "dipy.align.streamlinear.BundleSumDistanceMatrixMetric.__init__"]], "__init__() (dipy.align.streamlinear.jointbundlemindistancemetric method)": [[159, "dipy.align.streamlinear.JointBundleMinDistanceMetric.__init__"]], "__init__() (dipy.align.streamlinear.jointstreamlineregistrationmap method)": [[159, "dipy.align.streamlinear.JointStreamlineRegistrationMap.__init__"]], "__init__() (dipy.align.streamlinear.streamlinedistancemetric method)": [[159, "dipy.align.streamlinear.StreamlineDistanceMetric.__init__"]], "__init__() (dipy.align.streamlinear.streamlinelinearregistration method)": [[159, "dipy.align.streamlinear.StreamlineLinearRegistration.__init__"]], "__init__() (dipy.align.streamlinear.streamlineregistrationmap method)": [[159, "dipy.align.streamlinear.StreamlineRegistrationMap.__init__"]], "__init__() (dipy.align.transforms.affinetransform2d method)": [[159, "dipy.align.transforms.AffineTransform2D.__init__"]], "__init__() (dipy.align.transforms.affinetransform3d method)": [[159, "dipy.align.transforms.AffineTransform3D.__init__"]], "__init__() (dipy.align.transforms.rigidisoscalingtransform2d method)": [[159, "dipy.align.transforms.RigidIsoScalingTransform2D.__init__"]], "__init__() (dipy.align.transforms.rigidisoscalingtransform3d method)": [[159, "dipy.align.transforms.RigidIsoScalingTransform3D.__init__"]], "__init__() (dipy.align.transforms.rigidscalingtransform2d method)": [[159, "dipy.align.transforms.RigidScalingTransform2D.__init__"]], "__init__() (dipy.align.transforms.rigidscalingtransform3d method)": [[159, "dipy.align.transforms.RigidScalingTransform3D.__init__"]], "__init__() (dipy.align.transforms.rigidtransform2d method)": [[159, "dipy.align.transforms.RigidTransform2D.__init__"]], "__init__() (dipy.align.transforms.rigidtransform3d method)": [[159, "dipy.align.transforms.RigidTransform3D.__init__"]], "__init__() (dipy.align.transforms.rotationtransform2d method)": [[159, "dipy.align.transforms.RotationTransform2D.__init__"]], "__init__() (dipy.align.transforms.rotationtransform3d method)": [[159, "dipy.align.transforms.RotationTransform3D.__init__"]], "__init__() (dipy.align.transforms.scalingtransform2d method)": [[159, "dipy.align.transforms.ScalingTransform2D.__init__"]], "__init__() (dipy.align.transforms.scalingtransform3d method)": [[159, "dipy.align.transforms.ScalingTransform3D.__init__"]], "__init__() (dipy.align.transforms.transform method)": [[159, "dipy.align.transforms.Transform.__init__"]], "__init__() (dipy.align.transforms.translationtransform2d method)": [[159, "dipy.align.transforms.TranslationTransform2D.__init__"]], "__init__() (dipy.align.transforms.translationtransform3d method)": [[159, "dipy.align.transforms.TranslationTransform3D.__init__"]], "_transform_method() (in module dipy.align.imaffine)": [[159, "dipy.align.imaffine._transform_method"]], "affine() (in module dipy.align._public)": [[159, "dipy.align._public.affine"]], "affine_registration() (in module dipy.align._public)": [[159, "dipy.align._public.affine_registration"]], "allocate() (dipy.align.imwarp.diffeomorphicmap method)": [[159, "dipy.align.imwarp.DiffeomorphicMap.allocate"]], "average_bundle_length() (in module dipy.align.streamwarp)": [[159, "dipy.align.streamwarp.average_bundle_length"]], "bin_index() (dipy.align.parzenhist.parzenjointhistogram method)": [[159, "dipy.align.parzenhist.ParzenJointHistogram.bin_index"]], "bin_normalize_moving() (dipy.align.parzenhist.parzenjointhistogram method)": [[159, "dipy.align.parzenhist.ParzenJointHistogram.bin_normalize_moving"]], "bin_normalize_static() (dipy.align.parzenhist.parzenjointhistogram method)": [[159, "dipy.align.parzenhist.ParzenJointHistogram.bin_normalize_static"]], "bundle_min_distance() (in module dipy.align.streamlinear)": [[159, "dipy.align.streamlinear.bundle_min_distance"]], "bundle_min_distance_asymmetric_fast() (in module dipy.align.streamlinear)": [[159, "dipy.align.streamlinear.bundle_min_distance_asymmetric_fast"]], "bundle_min_distance_fast() (in module dipy.align.streamlinear)": [[159, "dipy.align.streamlinear.bundle_min_distance_fast"]], "bundle_sum_distance() (in module dipy.align.streamlinear)": [[159, "dipy.align.streamlinear.bundle_sum_distance"]], "bundlewarp() (in module dipy.align.streamwarp)": [[159, "dipy.align.streamwarp.bundlewarp"]], "bundlewarp_shape_analysis() (in module dipy.align.streamwarp)": [[159, "dipy.align.streamwarp.bundlewarp_shape_analysis"]], "bundlewarp_vector_filed() (in module dipy.align.streamwarp)": [[159, "dipy.align.streamwarp.bundlewarp_vector_filed"]], "center_of_mass() (in module dipy.align._public)": [[159, "dipy.align._public.center_of_mass"]], "compose_matrix44() (in module dipy.align.streamlinear)": [[159, "dipy.align.streamlinear.compose_matrix44"]], "compose_vector_fields_2d() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.compose_vector_fields_2d"]], "compose_vector_fields_3d() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.compose_vector_fields_3d"]], "compute_backward() (dipy.align.metrics.ccmetric method)": [[159, "dipy.align.metrics.CCMetric.compute_backward"]], "compute_backward() (dipy.align.metrics.emmetric method)": [[159, "dipy.align.metrics.EMMetric.compute_backward"]], "compute_backward() (dipy.align.metrics.ssdmetric method)": [[159, "dipy.align.metrics.SSDMetric.compute_backward"]], "compute_backward() (dipy.align.metrics.similaritymetric method)": [[159, "dipy.align.metrics.SimilarityMetric.compute_backward"]], "compute_cc_backward_step_2d() (in module dipy.align.crosscorr)": [[159, "dipy.align.crosscorr.compute_cc_backward_step_2d"]], "compute_cc_backward_step_3d() (in module dipy.align.crosscorr)": [[159, "dipy.align.crosscorr.compute_cc_backward_step_3d"]], "compute_cc_forward_step_2d() (in module dipy.align.crosscorr)": [[159, "dipy.align.crosscorr.compute_cc_forward_step_2d"]], "compute_cc_forward_step_3d() (in module dipy.align.crosscorr)": [[159, "dipy.align.crosscorr.compute_cc_forward_step_3d"]], "compute_demons_step() (dipy.align.metrics.emmetric method)": [[159, "dipy.align.metrics.EMMetric.compute_demons_step"]], "compute_demons_step() (dipy.align.metrics.ssdmetric method)": [[159, "dipy.align.metrics.SSDMetric.compute_demons_step"]], "compute_em_demons_step_2d() (in module dipy.align.expectmax)": [[159, "dipy.align.expectmax.compute_em_demons_step_2d"]], "compute_em_demons_step_3d() (in module dipy.align.expectmax)": [[159, "dipy.align.expectmax.compute_em_demons_step_3d"]], "compute_energy_ssd_2d() (in module dipy.align.sumsqdiff)": [[159, "dipy.align.sumsqdiff.compute_energy_ssd_2d"]], "compute_energy_ssd_3d() (in module dipy.align.sumsqdiff)": [[159, "dipy.align.sumsqdiff.compute_energy_ssd_3d"]], "compute_forward() (dipy.align.metrics.ccmetric method)": [[159, "dipy.align.metrics.CCMetric.compute_forward"]], "compute_forward() (dipy.align.metrics.emmetric method)": [[159, "dipy.align.metrics.EMMetric.compute_forward"]], "compute_forward() (dipy.align.metrics.ssdmetric method)": [[159, "dipy.align.metrics.SSDMetric.compute_forward"]], "compute_forward() (dipy.align.metrics.similaritymetric method)": [[159, "dipy.align.metrics.SimilarityMetric.compute_forward"]], "compute_gauss_newton_step() (dipy.align.metrics.emmetric method)": [[159, "dipy.align.metrics.EMMetric.compute_gauss_newton_step"]], "compute_gauss_newton_step() (dipy.align.metrics.ssdmetric method)": [[159, "dipy.align.metrics.SSDMetric.compute_gauss_newton_step"]], "compute_inversion_error() (dipy.align.imwarp.diffeomorphicmap method)": [[159, "dipy.align.imwarp.DiffeomorphicMap.compute_inversion_error"]], "compute_masked_class_stats_2d() (in module dipy.align.expectmax)": [[159, "dipy.align.expectmax.compute_masked_class_stats_2d"]], "compute_masked_class_stats_3d() (in module dipy.align.expectmax)": [[159, "dipy.align.expectmax.compute_masked_class_stats_3d"]], "compute_parzen_mi() (in module dipy.align.parzenhist)": [[159, "dipy.align.parzenhist.compute_parzen_mi"]], "compute_residual_displacement_field_ssd_2d() (in module dipy.align.sumsqdiff)": [[159, "dipy.align.sumsqdiff.compute_residual_displacement_field_ssd_2d"]], "compute_residual_displacement_field_ssd_3d() (in module dipy.align.sumsqdiff)": [[159, "dipy.align.sumsqdiff.compute_residual_displacement_field_ssd_3d"]], "compute_ssd_demons_step_2d() (in module dipy.align.sumsqdiff)": [[159, "dipy.align.sumsqdiff.compute_ssd_demons_step_2d"]], "compute_ssd_demons_step_3d() (in module dipy.align.sumsqdiff)": [[159, "dipy.align.sumsqdiff.compute_ssd_demons_step_3d"]], "create_circle() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.create_circle"]], "create_harmonic_fields_2d() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.create_harmonic_fields_2d"]], "create_harmonic_fields_3d() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.create_harmonic_fields_3d"]], "create_random_displacement_2d() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.create_random_displacement_2d"]], "create_random_displacement_3d() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.create_random_displacement_3d"]], "create_sphere() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.create_sphere"]], "cubic_spline() (in module dipy.align.parzenhist)": [[159, "dipy.align.parzenhist.cubic_spline"]], "cubic_spline_derivative() (in module dipy.align.parzenhist)": [[159, "dipy.align.parzenhist.cubic_spline_derivative"]], "decompose_matrix44() (in module dipy.align.streamlinear)": [[159, "dipy.align.streamlinear.decompose_matrix44"]], "determine_num_threads() (in module dipy.align.bundlemin)": [[159, "dipy.align.bundlemin.determine_num_threads"]], "dipy.align": [[159, "module-dipy.align"]], "dipy.align._public": [[159, "module-dipy.align._public"]], "dipy.align.bundlemin": [[159, "module-dipy.align.bundlemin"]], "dipy.align.cpd": [[159, "module-dipy.align.cpd"]], "dipy.align.crosscorr": [[159, "module-dipy.align.crosscorr"]], "dipy.align.expectmax": [[159, "module-dipy.align.expectmax"]], "dipy.align.imaffine": [[159, "module-dipy.align.imaffine"]], "dipy.align.imwarp": [[159, "module-dipy.align.imwarp"]], "dipy.align.metrics": [[159, "module-dipy.align.metrics"]], "dipy.align.parzenhist": [[159, "module-dipy.align.parzenhist"]], "dipy.align.reslice": [[159, "module-dipy.align.reslice"]], "dipy.align.scalespace": [[159, "module-dipy.align.scalespace"]], "dipy.align.streamlinear": [[159, "module-dipy.align.streamlinear"]], "dipy.align.streamwarp": [[159, "module-dipy.align.streamwarp"]], "dipy.align.sumsqdiff": [[159, "module-dipy.align.sumsqdiff"]], "dipy.align.transforms": [[159, "module-dipy.align.transforms"]], "dipy.align.vector_fields": [[159, "module-dipy.align.vector_fields"]], "distance() (dipy.align.imaffine.mutualinformationmetric method)": [[159, "dipy.align.imaffine.MutualInformationMetric.distance"]], "distance() (dipy.align.streamlinear.bundlemindistanceasymmetricmetric method)": [[159, "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric.distance"]], "distance() (dipy.align.streamlinear.bundlemindistancematrixmetric method)": [[159, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric.distance"]], "distance() (dipy.align.streamlinear.bundlemindistancemetric method)": [[159, "dipy.align.streamlinear.BundleMinDistanceMetric.distance"]], "distance() (dipy.align.streamlinear.bundlesumdistancematrixmetric method)": [[159, "dipy.align.streamlinear.BundleSumDistanceMatrixMetric.distance"]], "distance() (dipy.align.streamlinear.jointbundlemindistancemetric method)": [[159, "dipy.align.streamlinear.JointBundleMinDistanceMetric.distance"]], "distance() (dipy.align.streamlinear.streamlinedistancemetric method)": [[159, "dipy.align.streamlinear.StreamlineDistanceMetric.distance"]], "distance_and_gradient() (dipy.align.imaffine.mutualinformationmetric method)": [[159, "dipy.align.imaffine.MutualInformationMetric.distance_and_gradient"]], "distance_matrix_mdf() (in module dipy.align.bundlemin)": [[159, "dipy.align.bundlemin.distance_matrix_mdf"]], "docstring_addendum (dipy.align.imaffine.affineregistration attribute)": [[159, "dipy.align.imaffine.AffineRegistration.docstring_addendum"]], "downsample_displacement_field_2d() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.downsample_displacement_field_2d"]], "downsample_displacement_field_3d() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.downsample_displacement_field_3d"]], "downsample_scalar_field_2d() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.downsample_scalar_field_2d"]], "downsample_scalar_field_3d() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.downsample_scalar_field_3d"]], "expand_fields() (dipy.align.imwarp.diffeomorphicmap method)": [[159, "dipy.align.imwarp.DiffeomorphicMap.expand_fields"]], "expectation() (dipy.align.cpd.deformableregistration method)": [[159, "dipy.align.cpd.DeformableRegistration.expectation"]], "find_missing() (in module dipy.align.streamwarp)": [[159, "dipy.align.streamwarp.find_missing"]], "free_iteration() (dipy.align.metrics.ccmetric method)": [[159, "dipy.align.metrics.CCMetric.free_iteration"]], "free_iteration() (dipy.align.metrics.emmetric method)": [[159, "dipy.align.metrics.EMMetric.free_iteration"]], "free_iteration() (dipy.align.metrics.ssdmetric method)": [[159, "dipy.align.metrics.SSDMetric.free_iteration"]], "free_iteration() (dipy.align.metrics.similaritymetric method)": [[159, "dipy.align.metrics.SimilarityMetric.free_iteration"]], "gaussian_kernel() (in module dipy.align.cpd)": [[159, "dipy.align.cpd.gaussian_kernel"]], "get_affine() (dipy.align.imaffine.affinemap method)": [[159, "dipy.align.imaffine.AffineMap.get_affine"]], "get_affine() (dipy.align.scalespace.scalespace method)": [[159, "dipy.align.scalespace.ScaleSpace.get_affine"]], "get_affine_inv() (dipy.align.scalespace.scalespace method)": [[159, "dipy.align.scalespace.ScaleSpace.get_affine_inv"]], "get_backward_field() (dipy.align.imwarp.diffeomorphicmap method)": [[159, "dipy.align.imwarp.DiffeomorphicMap.get_backward_field"]], "get_dim() (dipy.align.transforms.transform method)": [[159, "dipy.align.transforms.Transform.get_dim"]], "get_direction_and_spacings() (in module dipy.align.imwarp)": [[159, "dipy.align.imwarp.get_direction_and_spacings"]], "get_domain_shape() (dipy.align.scalespace.scalespace method)": [[159, "dipy.align.scalespace.ScaleSpace.get_domain_shape"]], "get_energy() (dipy.align.metrics.ccmetric method)": [[159, "dipy.align.metrics.CCMetric.get_energy"]], "get_energy() (dipy.align.metrics.emmetric method)": [[159, "dipy.align.metrics.EMMetric.get_energy"]], "get_energy() (dipy.align.metrics.ssdmetric method)": [[159, "dipy.align.metrics.SSDMetric.get_energy"]], "get_energy() (dipy.align.metrics.similaritymetric method)": [[159, "dipy.align.metrics.SimilarityMetric.get_energy"]], "get_expand_factors() (dipy.align.scalespace.scalespace method)": [[159, "dipy.align.scalespace.ScaleSpace.get_expand_factors"]], "get_forward_field() (dipy.align.imwarp.diffeomorphicmap method)": [[159, "dipy.align.imwarp.DiffeomorphicMap.get_forward_field"]], "get_identity_parameters() (dipy.align.transforms.transform method)": [[159, "dipy.align.transforms.Transform.get_identity_parameters"]], "get_image() (dipy.align.scalespace.scalespace method)": [[159, "dipy.align.scalespace.ScaleSpace.get_image"]], "get_map() (dipy.align.imwarp.diffeomorphicregistration method)": [[159, "dipy.align.imwarp.DiffeomorphicRegistration.get_map"]], "get_map() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[159, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.get_map"]], "get_number_of_parameters() (dipy.align.transforms.transform method)": [[159, "dipy.align.transforms.Transform.get_number_of_parameters"]], "get_registration_parameters() (dipy.align.cpd.deformableregistration method)": [[159, "dipy.align.cpd.DeformableRegistration.get_registration_parameters"]], "get_scaling() (dipy.align.scalespace.scalespace method)": [[159, "dipy.align.scalespace.ScaleSpace.get_scaling"]], "get_sigmas() (dipy.align.scalespace.scalespace method)": [[159, "dipy.align.scalespace.ScaleSpace.get_sigmas"]], "get_simplified_transform() (dipy.align.imwarp.diffeomorphicmap method)": [[159, "dipy.align.imwarp.DiffeomorphicMap.get_simplified_transform"]], "get_spacing() (dipy.align.scalespace.scalespace method)": [[159, "dipy.align.scalespace.ScaleSpace.get_spacing"]], "get_unique_pairs() (in module dipy.align.streamlinear)": [[159, "dipy.align.streamlinear.get_unique_pairs"]], "gradient() (dipy.align.imaffine.mutualinformationmetric method)": [[159, "dipy.align.imaffine.MutualInformationMetric.gradient"]], "gradient() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.gradient"]], "groupwise_slr() (in module dipy.align.streamlinear)": [[159, "dipy.align.streamlinear.groupwise_slr"]], "initialize_iteration() (dipy.align.metrics.ccmetric method)": [[159, "dipy.align.metrics.CCMetric.initialize_iteration"]], "initialize_iteration() (dipy.align.metrics.emmetric method)": [[159, "dipy.align.metrics.EMMetric.initialize_iteration"]], "initialize_iteration() (dipy.align.metrics.ssdmetric method)": [[159, "dipy.align.metrics.SSDMetric.initialize_iteration"]], "initialize_iteration() (dipy.align.metrics.similaritymetric method)": [[159, "dipy.align.metrics.SimilarityMetric.initialize_iteration"]], "initialize_sigma2() (in module dipy.align.cpd)": [[159, "dipy.align.cpd.initialize_sigma2"]], "interpret_matrix() (dipy.align.imwarp.diffeomorphicmap method)": [[159, "dipy.align.imwarp.DiffeomorphicMap.interpret_matrix"]], "inverse() (dipy.align.imwarp.diffeomorphicmap method)": [[159, "dipy.align.imwarp.DiffeomorphicMap.inverse"]], "invert_vector_field_fixed_point_2d() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.invert_vector_field_fixed_point_2d"]], "invert_vector_field_fixed_point_3d() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.invert_vector_field_fixed_point_3d"]], "is_valid_affine() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.is_valid_affine"]], "iterate() (dipy.align.cpd.deformableregistration method)": [[159, "dipy.align.cpd.DeformableRegistration.iterate"]], "iterate_residual_displacement_field_ssd_2d() (in module dipy.align.sumsqdiff)": [[159, "dipy.align.sumsqdiff.iterate_residual_displacement_field_ssd_2d"]], "iterate_residual_displacement_field_ssd_3d() (in module dipy.align.sumsqdiff)": [[159, "dipy.align.sumsqdiff.iterate_residual_displacement_field_ssd_3d"]], "jacobian() (dipy.align.transforms.transform method)": [[159, "dipy.align.transforms.Transform.jacobian"]], "logger() (in module dipy.align.imwarp)": [[159, "dipy.align.imwarp.logger"]], "logger() (in module dipy.align.scalespace)": [[159, "dipy.align.scalespace.logger"]], "logger() (in module dipy.align.streamlinear)": [[159, "dipy.align.streamlinear.logger"]], "low_rank_eigen() (in module dipy.align.cpd)": [[159, "dipy.align.cpd.low_rank_eigen"]], "lowrankqs() (in module dipy.align.cpd)": [[159, "dipy.align.cpd.lowrankQS"]], "maximization() (dipy.align.cpd.deformableregistration method)": [[159, "dipy.align.cpd.DeformableRegistration.maximization"]], "motion_correction() (in module dipy.align._public)": [[159, "dipy.align._public.motion_correction"]], "mult_aff() (in module dipy.align.imwarp)": [[159, "dipy.align.imwarp.mult_aff"]], "optimize() (dipy.align.imaffine.affineregistration method)": [[159, "dipy.align.imaffine.AffineRegistration.optimize"]], "optimize() (dipy.align.imwarp.diffeomorphicregistration method)": [[159, "dipy.align.imwarp.DiffeomorphicRegistration.optimize"]], "optimize() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[159, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.optimize"]], "optimize() (dipy.align.streamlinear.streamlinelinearregistration method)": [[159, "dipy.align.streamlinear.StreamlineLinearRegistration.optimize"]], "param_to_matrix() (dipy.align.transforms.transform method)": [[159, "dipy.align.transforms.Transform.param_to_matrix"]], "precompute_cc_factors_2d() (in module dipy.align.crosscorr)": [[159, "dipy.align.crosscorr.precompute_cc_factors_2d"]], "precompute_cc_factors_2d_test() (in module dipy.align.crosscorr)": [[159, "dipy.align.crosscorr.precompute_cc_factors_2d_test"]], "precompute_cc_factors_3d() (in module dipy.align.crosscorr)": [[159, "dipy.align.crosscorr.precompute_cc_factors_3d"]], "precompute_cc_factors_3d_test() (in module dipy.align.crosscorr)": [[159, "dipy.align.crosscorr.precompute_cc_factors_3d_test"]], "print_level() (dipy.align.scalespace.scalespace method)": [[159, "dipy.align.scalespace.ScaleSpace.print_level"]], "progressive_slr() (in module dipy.align.streamlinear)": [[159, "dipy.align.streamlinear.progressive_slr"]], "quantize_positive_2d() (in module dipy.align.expectmax)": [[159, "dipy.align.expectmax.quantize_positive_2d"]], "quantize_positive_3d() (in module dipy.align.expectmax)": [[159, "dipy.align.expectmax.quantize_positive_3d"]], "read_mapping() (in module dipy.align._public)": [[159, "dipy.align._public.read_mapping"]], "register() (dipy.align.cpd.deformableregistration method)": [[159, "dipy.align.cpd.DeformableRegistration.register"]], "register_dwi_series() (in module dipy.align._public)": [[159, "dipy.align._public.register_dwi_series"]], "register_dwi_to_template() (in module dipy.align._public)": [[159, "dipy.align._public.register_dwi_to_template"]], "register_series() (in module dipy.align._public)": [[159, "dipy.align._public.register_series"]], "remove_clusters_by_size() (in module dipy.align.streamlinear)": [[159, "dipy.align.streamlinear.remove_clusters_by_size"]], "reorient_vector_field_2d() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.reorient_vector_field_2d"]], "reorient_vector_field_3d() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.reorient_vector_field_3d"]], "resample() (in module dipy.align._public)": [[159, "dipy.align._public.resample"]], "resample_displacement_field_2d() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.resample_displacement_field_2d"]], "resample_displacement_field_3d() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.resample_displacement_field_3d"]], "reslice() (in module dipy.align.reslice)": [[159, "dipy.align.reslice.reslice"]], "rigid() (in module dipy.align._public)": [[159, "dipy.align._public.rigid"]], "rigid_isoscaling() (in module dipy.align._public)": [[159, "dipy.align._public.rigid_isoscaling"]], "rigid_scaling() (in module dipy.align._public)": [[159, "dipy.align._public.rigid_scaling"]], "sample_domain_regular() (in module dipy.align.parzenhist)": [[159, "dipy.align.parzenhist.sample_domain_regular"]], "set_affine() (dipy.align.imaffine.affinemap method)": [[159, "dipy.align.imaffine.AffineMap.set_affine"]], "set_level_iters() (dipy.align.imwarp.diffeomorphicregistration method)": [[159, "dipy.align.imwarp.DiffeomorphicRegistration.set_level_iters"]], "set_levels_above() (dipy.align.metrics.similaritymetric method)": [[159, "dipy.align.metrics.SimilarityMetric.set_levels_above"]], "set_levels_below() (dipy.align.metrics.similaritymetric method)": [[159, "dipy.align.metrics.SimilarityMetric.set_levels_below"]], "set_moving_image() (dipy.align.metrics.similaritymetric method)": [[159, "dipy.align.metrics.SimilarityMetric.set_moving_image"]], "set_static_image() (dipy.align.metrics.similaritymetric method)": [[159, "dipy.align.metrics.SimilarityMetric.set_static_image"]], "setup() (dipy.align.imaffine.mutualinformationmetric method)": [[159, "dipy.align.imaffine.MutualInformationMetric.setup"]], "setup() (dipy.align.parzenhist.parzenjointhistogram method)": [[159, "dipy.align.parzenhist.ParzenJointHistogram.setup"]], "setup() (dipy.align.streamlinear.bundlemindistancematrixmetric method)": [[159, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric.setup"]], "setup() (dipy.align.streamlinear.bundlemindistancemetric method)": [[159, "dipy.align.streamlinear.BundleMinDistanceMetric.setup"]], "setup() (dipy.align.streamlinear.jointbundlemindistancemetric method)": [[159, "dipy.align.streamlinear.JointBundleMinDistanceMetric.setup"]], "setup() (dipy.align.streamlinear.streamlinedistancemetric method)": [[159, "dipy.align.streamlinear.StreamlineDistanceMetric.setup"]], "shallow_copy() (dipy.align.imwarp.diffeomorphicmap method)": [[159, "dipy.align.imwarp.DiffeomorphicMap.shallow_copy"]], "simplify_warp_function_2d() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.simplify_warp_function_2d"]], "simplify_warp_function_3d() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.simplify_warp_function_3d"]], "slr_with_qbx() (in module dipy.align.streamlinear)": [[159, "dipy.align.streamlinear.slr_with_qbx"]], "solve_2d_symmetric_positive_definite() (in module dipy.align.sumsqdiff)": [[159, "dipy.align.sumsqdiff.solve_2d_symmetric_positive_definite"]], "solve_3d_symmetric_positive_definite() (in module dipy.align.sumsqdiff)": [[159, "dipy.align.sumsqdiff.solve_3d_symmetric_positive_definite"]], "sparse_gradient() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.sparse_gradient"]], "streamline_registration() (in module dipy.align._public)": [[159, "dipy.align._public.streamline_registration"]], "syn_registration() (in module dipy.align._public)": [[159, "dipy.align._public.syn_registration"]], "transform() (dipy.align.imaffine.affinemap method)": [[159, "dipy.align.imaffine.AffineMap.transform"]], "transform() (dipy.align.imwarp.diffeomorphicmap method)": [[159, "dipy.align.imwarp.DiffeomorphicMap.transform"]], "transform() (dipy.align.streamlinear.jointstreamlineregistrationmap method)": [[159, "dipy.align.streamlinear.JointStreamlineRegistrationMap.transform"]], "transform() (dipy.align.streamlinear.streamlineregistrationmap method)": [[159, "dipy.align.streamlinear.StreamlineRegistrationMap.transform"]], "transform_2d_affine() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.transform_2d_affine"]], "transform_2d_affine_nn() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.transform_2d_affine_nn"]], "transform_3d_affine() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.transform_3d_affine"]], "transform_3d_affine_nn() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.transform_3d_affine_nn"]], "transform_centers_of_mass() (in module dipy.align.imaffine)": [[159, "dipy.align.imaffine.transform_centers_of_mass"]], "transform_geometric_centers() (in module dipy.align.imaffine)": [[159, "dipy.align.imaffine.transform_geometric_centers"]], "transform_inverse() (dipy.align.imaffine.affinemap method)": [[159, "dipy.align.imaffine.AffineMap.transform_inverse"]], "transform_inverse() (dipy.align.imwarp.diffeomorphicmap method)": [[159, "dipy.align.imwarp.DiffeomorphicMap.transform_inverse"]], "transform_origins() (in module dipy.align.imaffine)": [[159, "dipy.align.imaffine.transform_origins"]], "transform_point_cloud() (dipy.align.cpd.deformableregistration method)": [[159, "dipy.align.cpd.DeformableRegistration.transform_point_cloud"]], "transform_points() (dipy.align.imwarp.diffeomorphicmap method)": [[159, "dipy.align.imwarp.DiffeomorphicMap.transform_points"]], "transform_points_inverse() (dipy.align.imwarp.diffeomorphicmap method)": [[159, "dipy.align.imwarp.DiffeomorphicMap.transform_points_inverse"]], "translation() (in module dipy.align._public)": [[159, "dipy.align._public.translation"]], "update() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[159, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.update"]], "update_gradient_dense() (dipy.align.parzenhist.parzenjointhistogram method)": [[159, "dipy.align.parzenhist.ParzenJointHistogram.update_gradient_dense"]], "update_gradient_sparse() (dipy.align.parzenhist.parzenjointhistogram method)": [[159, "dipy.align.parzenhist.ParzenJointHistogram.update_gradient_sparse"]], "update_pdfs_dense() (dipy.align.parzenhist.parzenjointhistogram method)": [[159, "dipy.align.parzenhist.ParzenJointHistogram.update_pdfs_dense"]], "update_pdfs_sparse() (dipy.align.parzenhist.parzenjointhistogram method)": [[159, "dipy.align.parzenhist.ParzenJointHistogram.update_pdfs_sparse"]], "update_transform() (dipy.align.cpd.deformableregistration method)": [[159, "dipy.align.cpd.DeformableRegistration.update_transform"]], "update_variance() (dipy.align.cpd.deformableregistration method)": [[159, "dipy.align.cpd.DeformableRegistration.update_variance"]], "use_moving_image_dynamics() (dipy.align.metrics.emmetric method)": [[159, "dipy.align.metrics.EMMetric.use_moving_image_dynamics"]], "use_moving_image_dynamics() (dipy.align.metrics.similaritymetric method)": [[159, "dipy.align.metrics.SimilarityMetric.use_moving_image_dynamics"]], "use_static_image_dynamics() (dipy.align.metrics.emmetric method)": [[159, "dipy.align.metrics.EMMetric.use_static_image_dynamics"]], "use_static_image_dynamics() (dipy.align.metrics.similaritymetric method)": [[159, "dipy.align.metrics.SimilarityMetric.use_static_image_dynamics"]], "v_cycle_2d() (in module dipy.align.metrics)": [[159, "dipy.align.metrics.v_cycle_2d"]], "v_cycle_3d() (in module dipy.align.metrics)": [[159, "dipy.align.metrics.v_cycle_3d"]], "warp_2d() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.warp_2d"]], "warp_2d_nn() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.warp_2d_nn"]], "warp_3d() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.warp_3d"]], "warp_3d_nn() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.warp_3d_nn"]], "warp_coordinates_2d() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.warp_coordinates_2d"]], "warp_coordinates_3d() (in module dipy.align.vector_fields)": [[159, "dipy.align.vector_fields.warp_coordinates_3d"]], "warp_endomorphism() (dipy.align.imwarp.diffeomorphicmap method)": [[159, "dipy.align.imwarp.DiffeomorphicMap.warp_endomorphism"]], "write_mapping() (in module dipy.align._public)": [[159, "dipy.align._public.write_mapping"]], "dipy.boots": [[160, "module-dipy.boots"]], "gradienttable (class in dipy.core.gradients)": [[161, "dipy.core.gradients.GradientTable"]], "graph (class in dipy.core.graph)": [[161, "dipy.core.graph.Graph"]], "hemisphere (class in dipy.core.sphere)": [[161, "dipy.core.sphere.HemiSphere"]], "interpolator (class in dipy.core.interpolation)": [[161, "dipy.core.interpolation.Interpolator"]], "lecuyer() (in module dipy.core.rng)": [[161, "dipy.core.rng.LEcuyer"]], "nearestneighborinterpolator (class in dipy.core.interpolation)": [[161, "dipy.core.interpolation.NearestNeighborInterpolator"]], "nonnegativeleastsquares (class in dipy.core.optimize)": [[161, "dipy.core.optimize.NonNegativeLeastSquares"]], "onetimeproperty (class in dipy.core.onetime)": [[161, "dipy.core.onetime.OneTimeProperty"]], "optimizer (class in dipy.core.optimize)": [[161, "dipy.core.optimize.Optimizer"]], "outsideimage (class in dipy.core.interpolation)": [[161, "dipy.core.interpolation.OutsideImage"]], "positivedefiniteleastsquares (class in dipy.core.optimize)": [[161, "dipy.core.optimize.PositiveDefiniteLeastSquares"]], "profiler (class in dipy.core.profile)": [[161, "dipy.core.profile.Profiler"]], "resetmixin (class in dipy.core.onetime)": [[161, "dipy.core.onetime.ResetMixin"]], "sklearnlinearsolver (class in dipy.core.optimize)": [[161, "dipy.core.optimize.SKLearnLinearSolver"]], "sphere (class in dipy.core.sphere)": [[161, "dipy.core.sphere.Sphere"]], "timer (class in dipy.core.benchmarks.bench_sphere)": [[161, "dipy.core.benchmarks.bench_sphere.Timer"]], "trilinearinterpolator (class in dipy.core.interpolation)": [[161, "dipy.core.interpolation.TriLinearInterpolator"]], "wichmannhill1982() (in module dipy.core.rng)": [[161, "dipy.core.rng.WichmannHill1982"]], "wichmannhill2006() (in module dipy.core.rng)": [[161, "dipy.core.rng.WichmannHill2006"]], "_tuple2axes() (in module dipy.core.geometry)": [[161, "dipy.core.geometry._TUPLE2AXES"]], "__init__() (dipy.core.benchmarks.bench_sphere.timer method)": [[161, "dipy.core.benchmarks.bench_sphere.Timer.__init__"]], "__init__() (dipy.core.gradients.gradienttable method)": [[161, "dipy.core.gradients.GradientTable.__init__"]], "__init__() (dipy.core.graph.graph method)": [[161, "dipy.core.graph.Graph.__init__"]], "__init__() (dipy.core.interpolation.interpolator method)": [[161, "dipy.core.interpolation.Interpolator.__init__"]], "__init__() (dipy.core.interpolation.nearestneighborinterpolator method)": [[161, "dipy.core.interpolation.NearestNeighborInterpolator.__init__"]], "__init__() (dipy.core.interpolation.outsideimage method)": [[161, "dipy.core.interpolation.OutsideImage.__init__"]], "__init__() (dipy.core.interpolation.trilinearinterpolator method)": [[161, "dipy.core.interpolation.TriLinearInterpolator.__init__"]], "__init__() (dipy.core.onetime.onetimeproperty method)": [[161, "dipy.core.onetime.OneTimeProperty.__init__"]], "__init__() (dipy.core.onetime.resetmixin method)": [[161, "dipy.core.onetime.ResetMixin.__init__"]], "__init__() (dipy.core.optimize.nonnegativeleastsquares method)": [[161, "dipy.core.optimize.NonNegativeLeastSquares.__init__"]], "__init__() (dipy.core.optimize.optimizer method)": [[161, "dipy.core.optimize.Optimizer.__init__"]], "__init__() (dipy.core.optimize.positivedefiniteleastsquares method)": [[161, "dipy.core.optimize.PositiveDefiniteLeastSquares.__init__"]], "__init__() (dipy.core.optimize.sklearnlinearsolver method)": [[161, "dipy.core.optimize.SKLearnLinearSolver.__init__"]], "__init__() (dipy.core.profile.profiler method)": [[161, "dipy.core.profile.Profiler.__init__"]], "__init__() (dipy.core.sphere.hemisphere method)": [[161, "dipy.core.sphere.HemiSphere.__init__"]], "__init__() (dipy.core.sphere.sphere method)": [[161, "dipy.core.sphere.Sphere.__init__"]], "add_edge() (dipy.core.graph.graph method)": [[161, "dipy.core.graph.Graph.add_edge"]], "add_node() (dipy.core.graph.graph method)": [[161, "dipy.core.graph.Graph.add_node"]], "afb3d() (in module dipy.core.wavelet)": [[161, "dipy.core.wavelet.afb3D"]], "afb3d_a() (in module dipy.core.wavelet)": [[161, "dipy.core.wavelet.afb3D_A"]], "all_paths() (dipy.core.graph.graph method)": [[161, "dipy.core.graph.Graph.all_paths"]], "angular_similarity() (in module dipy.core.sphere_stats)": [[161, "dipy.core.sphere_stats.angular_similarity"]], "auto_attr() (in module dipy.core.onetime)": [[161, "dipy.core.onetime.auto_attr"]], "b0s_mask() (dipy.core.gradients.gradienttable method)": [[161, "dipy.core.gradients.GradientTable.b0s_mask"]], "bench_disperse_charges_alt() (in module dipy.core.benchmarks.bench_sphere)": [[161, "dipy.core.benchmarks.bench_sphere.bench_disperse_charges_alt"]], "btens_to_params() (in module dipy.core.gradients)": [[161, "dipy.core.gradients.btens_to_params"]], "bvals() (dipy.core.gradients.gradienttable method)": [[161, "dipy.core.gradients.GradientTable.bvals"]], "bvecs() (dipy.core.gradients.gradienttable method)": [[161, "dipy.core.gradients.GradientTable.bvecs"]], "cart2sphere() (in module dipy.core.geometry)": [[161, "dipy.core.geometry.cart2sphere"]], "cart_distance() (in module dipy.core.geometry)": [[161, "dipy.core.geometry.cart_distance"]], "check_multi_b() (in module dipy.core.gradients)": [[161, "dipy.core.gradients.check_multi_b"]], "children() (dipy.core.graph.graph method)": [[161, "dipy.core.graph.Graph.children"]], "circumradius() (in module dipy.core.geometry)": [[161, "dipy.core.geometry.circumradius"]], "compare_orientation_sets() (in module dipy.core.sphere_stats)": [[161, "dipy.core.sphere_stats.compare_orientation_sets"]], "compose_matrix() (in module dipy.core.geometry)": [[161, "dipy.core.geometry.compose_matrix"]], "compose_transformations() (in module dipy.core.geometry)": [[161, "dipy.core.geometry.compose_transformations"]], "create_unit_hemisphere() (in module dipy.core.subdivide_octahedron)": [[161, "dipy.core.subdivide_octahedron.create_unit_hemisphere"]], "create_unit_sphere() (in module dipy.core.subdivide_octahedron)": [[161, "dipy.core.subdivide_octahedron.create_unit_sphere"]], "cshift3d() (in module dipy.core.wavelet)": [[161, "dipy.core.wavelet.cshift3D"]], "decompose_matrix() (in module dipy.core.geometry)": [[161, "dipy.core.geometry.decompose_matrix"]], "del_node() (dipy.core.graph.graph method)": [[161, "dipy.core.graph.Graph.del_node"]], "del_node_and_edges() (dipy.core.graph.graph method)": [[161, "dipy.core.graph.Graph.del_node_and_edges"]], "dipy.core": [[161, "module-dipy.core"]], "dipy.core.benchmarks": [[161, "module-dipy.core.benchmarks"]], "dipy.core.benchmarks.bench_sphere": [[161, "module-dipy.core.benchmarks.bench_sphere"]], "dipy.core.geometry": [[161, "module-dipy.core.geometry"]], "dipy.core.gradients": [[161, "module-dipy.core.gradients"]], "dipy.core.graph": [[161, "module-dipy.core.graph"]], "dipy.core.histeq": [[161, "module-dipy.core.histeq"]], "dipy.core.interpolation": [[161, "module-dipy.core.interpolation"]], "dipy.core.ndindex": [[161, "module-dipy.core.ndindex"]], "dipy.core.onetime": [[161, "module-dipy.core.onetime"]], "dipy.core.optimize": [[161, "module-dipy.core.optimize"]], "dipy.core.profile": [[161, "module-dipy.core.profile"]], "dipy.core.rng": [[161, "module-dipy.core.rng"]], "dipy.core.sphere": [[161, "module-dipy.core.sphere"]], "dipy.core.sphere_stats": [[161, "module-dipy.core.sphere_stats"]], "dipy.core.subdivide_octahedron": [[161, "module-dipy.core.subdivide_octahedron"]], "dipy.core.wavelet": [[161, "module-dipy.core.wavelet"]], "disperse_charges() (in module dipy.core.sphere)": [[161, "dipy.core.sphere.disperse_charges"]], "disperse_charges_alt() (in module dipy.core.sphere)": [[161, "dipy.core.sphere.disperse_charges_alt"]], "dist_to_corner() (in module dipy.core.geometry)": [[161, "dipy.core.geometry.dist_to_corner"]], "down() (dipy.core.graph.graph method)": [[161, "dipy.core.graph.Graph.down"]], "down_short() (dipy.core.graph.graph method)": [[161, "dipy.core.graph.Graph.down_short"]], "duration_in_seconds() (dipy.core.benchmarks.bench_sphere.timer method)": [[161, "dipy.core.benchmarks.bench_sphere.Timer.duration_in_seconds"]], "dwt3d() (in module dipy.core.wavelet)": [[161, "dipy.core.wavelet.dwt3D"]], "edges() (dipy.core.sphere.sphere method)": [[161, "dipy.core.sphere.Sphere.edges"]], "eigenstats() (in module dipy.core.sphere_stats)": [[161, "dipy.core.sphere_stats.eigenstats"]], "euler_characteristic_check() (in module dipy.core.sphere)": [[161, "dipy.core.sphere.euler_characteristic_check"]], "euler_matrix() (in module dipy.core.geometry)": [[161, "dipy.core.geometry.euler_matrix"]], "evolution (dipy.core.optimize.optimizer property)": [[161, "dipy.core.optimize.Optimizer.evolution"]], "faces() (dipy.core.sphere.hemisphere method)": [[161, "dipy.core.sphere.HemiSphere.faces"]], "faces() (dipy.core.sphere.sphere method)": [[161, "dipy.core.sphere.Sphere.faces"]], "faces_from_sphere_vertices() (in module dipy.core.sphere)": [[161, "dipy.core.sphere.faces_from_sphere_vertices"]], "find_closest() (dipy.core.sphere.hemisphere method)": [[161, "dipy.core.sphere.HemiSphere.find_closest"]], "find_closest() (dipy.core.sphere.sphere method)": [[161, "dipy.core.sphere.Sphere.find_closest"]], "fit() (dipy.core.optimize.nonnegativeleastsquares method)": [[161, "dipy.core.optimize.NonNegativeLeastSquares.fit"]], "fit() (dipy.core.optimize.sklearnlinearsolver method)": [[161, "dipy.core.optimize.SKLearnLinearSolver.fit"]], "fopt (dipy.core.optimize.optimizer property)": [[161, "dipy.core.optimize.Optimizer.fopt"]], "from_sphere() (dipy.core.sphere.hemisphere class method)": [[161, "dipy.core.sphere.HemiSphere.from_sphere"]], "func_minimize_adhoc() (in module dipy.core.benchmarks.bench_sphere)": [[161, "dipy.core.benchmarks.bench_sphere.func_minimize_adhoc"]], "func_minimize_scipy() (in module dipy.core.benchmarks.bench_sphere)": [[161, "dipy.core.benchmarks.bench_sphere.func_minimize_scipy"]], "generate_bvecs() (in module dipy.core.gradients)": [[161, "dipy.core.gradients.generate_bvecs"]], "get_bval_indices() (in module dipy.core.gradients)": [[161, "dipy.core.gradients.get_bval_indices"]], "gradient_strength() (dipy.core.gradients.gradienttable method)": [[161, "dipy.core.gradients.GradientTable.gradient_strength"]], "gradient_table() (in module dipy.core.gradients)": [[161, "dipy.core.gradients.gradient_table"]], "gradient_table_from_bvals_bvecs() (in module dipy.core.gradients)": [[161, "dipy.core.gradients.gradient_table_from_bvals_bvecs"]], "gradient_table_from_gradient_strength_bvecs() (in module dipy.core.gradients)": [[161, "dipy.core.gradients.gradient_table_from_gradient_strength_bvecs"]], "gradient_table_from_qvals_bvecs() (in module dipy.core.gradients)": [[161, "dipy.core.gradients.gradient_table_from_qvals_bvecs"]], "hemi_icosahedron() (in module dipy.core.sphere)": [[161, "dipy.core.sphere.hemi_icosahedron"]], "histeq() (in module dipy.core.histeq)": [[161, "dipy.core.histeq.histeq"]], "icosahedron_faces() (in module dipy.core.sphere)": [[161, "dipy.core.sphere.icosahedron_faces"]], "icosahedron_vertices() (in module dipy.core.sphere)": [[161, "dipy.core.sphere.icosahedron_vertices"]], "idwt3d() (in module dipy.core.wavelet)": [[161, "dipy.core.wavelet.idwt3D"]], "info (dipy.core.gradients.gradienttable property)": [[161, "dipy.core.gradients.GradientTable.info"]], "interp_rbf() (in module dipy.core.interpolation)": [[161, "dipy.core.interpolation.interp_rbf"]], "interpolate_scalar_2d() (in module dipy.core.interpolation)": [[161, "dipy.core.interpolation.interpolate_scalar_2d"]], "interpolate_scalar_3d() (in module dipy.core.interpolation)": [[161, "dipy.core.interpolation.interpolate_scalar_3d"]], "interpolate_scalar_nn_2d() (in module dipy.core.interpolation)": [[161, "dipy.core.interpolation.interpolate_scalar_nn_2d"]], "interpolate_scalar_nn_3d() (in module dipy.core.interpolation)": [[161, "dipy.core.interpolation.interpolate_scalar_nn_3d"]], "interpolate_vector_2d() (in module dipy.core.interpolation)": [[161, "dipy.core.interpolation.interpolate_vector_2d"]], "interpolate_vector_3d() (in module dipy.core.interpolation)": [[161, "dipy.core.interpolation.interpolate_vector_3d"]], "is_hemispherical() (in module dipy.core.geometry)": [[161, "dipy.core.geometry.is_hemispherical"]], "lambert_equal_area_projection_cart() (in module dipy.core.geometry)": [[161, "dipy.core.geometry.lambert_equal_area_projection_cart"]], "lambert_equal_area_projection_polar() (in module dipy.core.geometry)": [[161, "dipy.core.geometry.lambert_equal_area_projection_polar"]], "logger() (in module dipy.core.gradients)": [[161, "dipy.core.gradients.logger"]], "map_coordinates_trilinear_iso() (in module dipy.core.interpolation)": [[161, "dipy.core.interpolation.map_coordinates_trilinear_iso"]], "message (dipy.core.optimize.optimizer property)": [[161, "dipy.core.optimize.Optimizer.message"]], "mirror() (dipy.core.sphere.hemisphere method)": [[161, "dipy.core.sphere.HemiSphere.mirror"]], "ndindex() (in module dipy.core.ndindex)": [[161, "dipy.core.ndindex.ndindex"]], "nearest_pos_semi_def() (in module dipy.core.geometry)": [[161, "dipy.core.geometry.nearest_pos_semi_def"]], "nearestneighbor_interpolate() (in module dipy.core.interpolation)": [[161, "dipy.core.interpolation.nearestneighbor_interpolate"]], "nfev (dipy.core.optimize.optimizer property)": [[161, "dipy.core.optimize.Optimizer.nfev"]], "nit (dipy.core.optimize.optimizer property)": [[161, "dipy.core.optimize.Optimizer.nit"]], "normalized_vector() (in module dipy.core.geometry)": [[161, "dipy.core.geometry.normalized_vector"]], "octahedron_faces() (in module dipy.core.sphere)": [[161, "dipy.core.sphere.octahedron_faces"]], "octahedron_vertices() (in module dipy.core.sphere)": [[161, "dipy.core.sphere.octahedron_vertices"]], "orientation_from_string() (in module dipy.core.gradients)": [[161, "dipy.core.gradients.orientation_from_string"]], "orientation_to_string() (in module dipy.core.gradients)": [[161, "dipy.core.gradients.orientation_to_string"]], "ornt_mapping() (in module dipy.core.gradients)": [[161, "dipy.core.gradients.ornt_mapping"]], "params_to_btens() (in module dipy.core.gradients)": [[161, "dipy.core.gradients.params_to_btens"]], "parents() (dipy.core.graph.graph method)": [[161, "dipy.core.graph.Graph.parents"]], "permutationinverse() (in module dipy.core.wavelet)": [[161, "dipy.core.wavelet.permutationinverse"]], "perpendicular_directions() (in module dipy.core.geometry)": [[161, "dipy.core.geometry.perpendicular_directions"]], "predict() (dipy.core.optimize.sklearnlinearsolver method)": [[161, "dipy.core.optimize.SKLearnLinearSolver.predict"]], "print_stats() (dipy.core.profile.profiler method)": [[161, "dipy.core.profile.Profiler.print_stats"]], "print_summary() (dipy.core.optimize.optimizer method)": [[161, "dipy.core.optimize.Optimizer.print_summary"]], "qvals() (dipy.core.gradients.gradienttable method)": [[161, "dipy.core.gradients.GradientTable.qvals"]], "random_uniform_on_sphere() (in module dipy.core.sphere_stats)": [[161, "dipy.core.sphere_stats.random_uniform_on_sphere"]], "reorient_bvecs() (in module dipy.core.gradients)": [[161, "dipy.core.gradients.reorient_bvecs"]], "reorient_on_axis() (in module dipy.core.gradients)": [[161, "dipy.core.gradients.reorient_on_axis"]], "reorient_vectors() (in module dipy.core.gradients)": [[161, "dipy.core.gradients.reorient_vectors"]], "reset() (dipy.core.onetime.resetmixin method)": [[161, "dipy.core.onetime.ResetMixin.reset"]], "rodrigues_axis_rotation() (in module dipy.core.geometry)": [[161, "dipy.core.geometry.rodrigues_axis_rotation"]], "round_bvals() (in module dipy.core.gradients)": [[161, "dipy.core.gradients.round_bvals"]], "sfb3d() (in module dipy.core.wavelet)": [[161, "dipy.core.wavelet.sfb3D"]], "sfb3d_a() (in module dipy.core.wavelet)": [[161, "dipy.core.wavelet.sfb3D_A"]], "shortest_path() (dipy.core.graph.graph method)": [[161, "dipy.core.graph.Graph.shortest_path"]], "solve() (dipy.core.optimize.positivedefiniteleastsquares method)": [[161, "dipy.core.optimize.PositiveDefiniteLeastSquares.solve"]], "sparse_nnls() (in module dipy.core.optimize)": [[161, "dipy.core.optimize.sparse_nnls"]], "spdot() (in module dipy.core.optimize)": [[161, "dipy.core.optimize.spdot"]], "sph2latlon() (in module dipy.core.geometry)": [[161, "dipy.core.geometry.sph2latlon"]], "sphere2cart() (in module dipy.core.geometry)": [[161, "dipy.core.geometry.sphere2cart"]], "sphere_distance() (in module dipy.core.geometry)": [[161, "dipy.core.geometry.sphere_distance"]], "subdivide() (dipy.core.sphere.hemisphere method)": [[161, "dipy.core.sphere.HemiSphere.subdivide"]], "subdivide() (dipy.core.sphere.sphere method)": [[161, "dipy.core.sphere.Sphere.subdivide"]], "tau() (dipy.core.gradients.gradienttable method)": [[161, "dipy.core.gradients.GradientTable.tau"]], "trilinear_interp() (in module dipy.core.interpolation)": [[161, "dipy.core.interpolation.trilinear_interp"]], "trilinear_interpolate4d() (in module dipy.core.interpolation)": [[161, "dipy.core.interpolation.trilinear_interpolate4d"]], "unique_bvals() (in module dipy.core.gradients)": [[161, "dipy.core.gradients.unique_bvals"]], "unique_bvals_magnitude() (in module dipy.core.gradients)": [[161, "dipy.core.gradients.unique_bvals_magnitude"]], "unique_bvals_tolerance() (in module dipy.core.gradients)": [[161, "dipy.core.gradients.unique_bvals_tolerance"]], "unique_edges() (in module dipy.core.sphere)": [[161, "dipy.core.sphere.unique_edges"]], "unique_sets() (in module dipy.core.sphere)": [[161, "dipy.core.sphere.unique_sets"]], "unit_icosahedron() (in module dipy.core.sphere)": [[161, "dipy.core.sphere.unit_icosahedron"]], "unit_octahedron() (in module dipy.core.sphere)": [[161, "dipy.core.sphere.unit_octahedron"]], "up() (dipy.core.graph.graph method)": [[161, "dipy.core.graph.Graph.up"]], "up_short() (dipy.core.graph.graph method)": [[161, "dipy.core.graph.Graph.up_short"]], "vec2vec_rotmat() (in module dipy.core.geometry)": [[161, "dipy.core.geometry.vec2vec_rotmat"]], "vector_cosine() (in module dipy.core.geometry)": [[161, "dipy.core.geometry.vector_cosine"]], "vector_norm() (in module dipy.core.geometry)": [[161, "dipy.core.geometry.vector_norm"]], "vertices() (dipy.core.sphere.sphere method)": [[161, "dipy.core.sphere.Sphere.vertices"]], "x (dipy.core.sphere.sphere property)": [[161, "dipy.core.sphere.Sphere.x"]], "xopt (dipy.core.optimize.optimizer property)": [[161, "dipy.core.optimize.Optimizer.xopt"]], "y (dipy.core.sphere.sphere property)": [[161, "dipy.core.sphere.Sphere.y"]], "z (dipy.core.sphere.sphere property)": [[161, "dipy.core.sphere.Sphere.z"]], "data_dir() (in module dipy.data)": [[162, "dipy.data.DATA_DIR"]], "dataerror (class in dipy.data)": [[162, "dipy.data.DataError"]], "__init__() (dipy.data.dataerror method)": [[162, "dipy.data.DataError.__init__"]], "check_md5() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.check_md5"]], "copyfileobj_withprogress() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.copyfileobj_withprogress"]], "default_sphere() (in module dipy.data)": [[162, "dipy.data.default_sphere"]], "dipy.data": [[162, "module-dipy.data"]], "dipy.data.fetcher": [[162, "module-dipy.data.fetcher"]], "dsi_deconv_voxels() (in module dipy.data)": [[162, "dipy.data.dsi_deconv_voxels"]], "dsi_voxels() (in module dipy.data)": [[162, "dipy.data.dsi_voxels"]], "extract_example_tracts() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.extract_example_tracts"]], "fetch_dib_217_lte_pte_ste() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_DiB_217_lte_pte_ste"]], "fetch_dib_70_lte_pte_ste() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_DiB_70_lte_pte_ste"]], "fetch_bundle_atlas_hcp842() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_bundle_atlas_hcp842"]], "fetch_bundle_fa_hcp() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_bundle_fa_hcp"]], "fetch_bundle_warp_dataset() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_bundle_warp_dataset"]], "fetch_bundles_2_subjects() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_bundles_2_subjects"]], "fetch_cenir_multib() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_cenir_multib"]], "fetch_cfin_multib() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_cfin_multib"]], "fetch_cti_rat1() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_cti_rat1"]], "fetch_data() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_data"]], "fetch_evac_test() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_evac_test"]], "fetch_evac_weights() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_evac_weights"]], "fetch_file_formats() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_file_formats"]], "fetch_fury_surface() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_fury_surface"]], "fetch_gold_standard_io() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_gold_standard_io"]], "fetch_hbn() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_hbn"]], "fetch_hcp() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_hcp"]], "fetch_isbi2013_2shell() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_isbi2013_2shell"]], "fetch_ivim() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_ivim"]], "fetch_mni_template() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_mni_template"]], "fetch_ptt_minimal_dataset() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_ptt_minimal_dataset"]], "fetch_qtdmri_test_retest_2subjects() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_qtdMRI_test_retest_2subjects"]], "fetch_qte_lte_pte() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_qte_lte_pte"]], "fetch_resdnn_weights() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_resdnn_weights"]], "fetch_scil_b0() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_scil_b0"]], "fetch_sherbrooke_3shell() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_sherbrooke_3shell"]], "fetch_stanford_hardi() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_stanford_hardi"]], "fetch_stanford_labels() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_stanford_labels"]], "fetch_stanford_pve_maps() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_stanford_pve_maps"]], "fetch_stanford_t1() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_stanford_t1"]], "fetch_stanford_tracks() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_stanford_tracks"]], "fetch_syn_data() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_syn_data"]], "fetch_synb0_test() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_synb0_test"]], "fetch_synb0_weights() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_synb0_weights"]], "fetch_taiwan_ntu_dsi() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_taiwan_ntu_dsi"]], "fetch_target_tractogram_hcp() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_target_tractogram_hcp"]], "fetch_tissue_data() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.fetch_tissue_data"]], "get_3shell_gtab() (in module dipy.data)": [[162, "dipy.data.get_3shell_gtab"]], "get_bundle_atlas_hcp842() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.get_bundle_atlas_hcp842"]], "get_cmap() (in module dipy.data)": [[162, "dipy.data.get_cmap"]], "get_file_formats() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.get_file_formats"]], "get_fnames() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.get_fnames"]], "get_gtab_taiwan_dsi() (in module dipy.data)": [[162, "dipy.data.get_gtab_taiwan_dsi"]], "get_isbi2013_2shell_gtab() (in module dipy.data)": [[162, "dipy.data.get_isbi2013_2shell_gtab"]], "get_sim_voxels() (in module dipy.data)": [[162, "dipy.data.get_sim_voxels"]], "get_skeleton() (in module dipy.data)": [[162, "dipy.data.get_skeleton"]], "get_sphere() (in module dipy.data)": [[162, "dipy.data.get_sphere"]], "get_target_tractogram_hcp() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.get_target_tractogram_hcp"]], "get_two_hcp842_bundles() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.get_two_hcp842_bundles"]], "load_sdp_constraints() (in module dipy.data)": [[162, "dipy.data.load_sdp_constraints"]], "loads_compat() (in module dipy.data)": [[162, "dipy.data.loads_compat"]], "matlab_life_results() (in module dipy.data)": [[162, "dipy.data.matlab_life_results"]], "mrtrix_spherical_functions() (in module dipy.data)": [[162, "dipy.data.mrtrix_spherical_functions"]], "read_dib_217_lte_pte_ste() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.read_DiB_217_lte_pte_ste"]], "read_dib_70_lte_pte_ste() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.read_DiB_70_lte_pte_ste"]], "read_bundles_2_subjects() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.read_bundles_2_subjects"]], "read_cenir_multib() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.read_cenir_multib"]], "read_cfin_dwi() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.read_cfin_dwi"]], "read_cfin_t1() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.read_cfin_t1"]], "read_five_af_bundles() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.read_five_af_bundles"]], "read_isbi2013_2shell() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.read_isbi2013_2shell"]], "read_ivim() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.read_ivim"]], "read_mni_template() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.read_mni_template"]], "read_qtdmri_test_retest_2subjects() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.read_qtdMRI_test_retest_2subjects"]], "read_qte_lte_pte() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.read_qte_lte_pte"]], "read_scil_b0() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.read_scil_b0"]], "read_sherbrooke_3shell() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.read_sherbrooke_3shell"]], "read_siemens_scil_b0() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.read_siemens_scil_b0"]], "read_stanford_hardi() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.read_stanford_hardi"]], "read_stanford_labels() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.read_stanford_labels"]], "read_stanford_pve_maps() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.read_stanford_pve_maps"]], "read_stanford_t1() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.read_stanford_t1"]], "read_syn_data() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.read_syn_data"]], "read_taiwan_ntu_dsi() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.read_taiwan_ntu_dsi"]], "read_tissue_data() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.read_tissue_data"]], "small_sphere() (in module dipy.data)": [[162, "dipy.data.small_sphere"]], "to_bids_description() (in module dipy.data.fetcher)": [[162, "dipy.data.fetcher.to_bids_description"]], "two_cingulum_bundles() (in module dipy.data)": [[162, "dipy.data.two_cingulum_bundles"]], "enhancementkernel (class in dipy.denoise.enhancement_kernel)": [[163, "dipy.denoise.enhancement_kernel.EnhancementKernel"]], "hemisphere (class in dipy.denoise.enhancement_kernel)": [[163, "dipy.denoise.enhancement_kernel.HemiSphere"]], "sphere (class in dipy.denoise.enhancement_kernel)": [[163, "dipy.denoise.enhancement_kernel.Sphere"]], "__init__() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[163, "dipy.denoise.enhancement_kernel.EnhancementKernel.__init__"]], "__init__() (dipy.denoise.enhancement_kernel.hemisphere method)": [[163, "dipy.denoise.enhancement_kernel.HemiSphere.__init__"]], "__init__() (dipy.denoise.enhancement_kernel.sphere method)": [[163, "dipy.denoise.enhancement_kernel.Sphere.__init__"]], "adaptive_soft_matching() (in module dipy.denoise.adaptive_soft_matching)": [[163, "dipy.denoise.adaptive_soft_matching.adaptive_soft_matching"]], "add_padding_reflection() (in module dipy.denoise.denspeed)": [[163, "dipy.denoise.denspeed.add_padding_reflection"]], "ceil() (in module dipy.denoise.enhancement_kernel)": [[163, "dipy.denoise.enhancement_kernel.ceil"]], "convolve() (in module dipy.denoise.shift_twist_convolution)": [[163, "dipy.denoise.shift_twist_convolution.convolve"]], "convolve_sf() (in module dipy.denoise.shift_twist_convolution)": [[163, "dipy.denoise.shift_twist_convolution.convolve_sf"]], "correspond_indices() (in module dipy.denoise.denspeed)": [[163, "dipy.denoise.denspeed.correspond_indices"]], "determine_num_threads() (in module dipy.denoise.denspeed)": [[163, "dipy.denoise.denspeed.determine_num_threads"]], "determine_num_threads() (in module dipy.denoise.shift_twist_convolution)": [[163, "dipy.denoise.shift_twist_convolution.determine_num_threads"]], "dipy.denoise": [[163, "module-dipy.denoise"]], "dipy.denoise.adaptive_soft_matching": [[163, "module-dipy.denoise.adaptive_soft_matching"]], "dipy.denoise.denspeed": [[163, "module-dipy.denoise.denspeed"]], "dipy.denoise.enhancement_kernel": [[163, "module-dipy.denoise.enhancement_kernel"]], "dipy.denoise.gibbs": [[163, "module-dipy.denoise.gibbs"]], "dipy.denoise.localpca": [[163, "module-dipy.denoise.localpca"]], "dipy.denoise.nlmeans": [[163, "module-dipy.denoise.nlmeans"]], "dipy.denoise.nlmeans_block": [[163, "module-dipy.denoise.nlmeans_block"]], "dipy.denoise.noise_estimate": [[163, "module-dipy.denoise.noise_estimate"]], "dipy.denoise.non_local_means": [[163, "module-dipy.denoise.non_local_means"]], "dipy.denoise.patch2self": [[163, "module-dipy.denoise.patch2self"]], "dipy.denoise.pca_noise_estimate": [[163, "module-dipy.denoise.pca_noise_estimate"]], "dipy.denoise.shift_twist_convolution": [[163, "module-dipy.denoise.shift_twist_convolution"]], "disperse_charges() (in module dipy.denoise.enhancement_kernel)": [[163, "dipy.denoise.enhancement_kernel.disperse_charges"]], "edges() (dipy.denoise.enhancement_kernel.sphere method)": [[163, "dipy.denoise.enhancement_kernel.Sphere.edges"]], "estimate_sigma() (in module dipy.denoise.noise_estimate)": [[163, "dipy.denoise.noise_estimate.estimate_sigma"]], "evaluate_kernel() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[163, "dipy.denoise.enhancement_kernel.EnhancementKernel.evaluate_kernel"]], "faces() (dipy.denoise.enhancement_kernel.hemisphere method)": [[163, "dipy.denoise.enhancement_kernel.HemiSphere.faces"]], "faces() (dipy.denoise.enhancement_kernel.sphere method)": [[163, "dipy.denoise.enhancement_kernel.Sphere.faces"]], "find_closest() (dipy.denoise.enhancement_kernel.hemisphere method)": [[163, "dipy.denoise.enhancement_kernel.HemiSphere.find_closest"]], "find_closest() (dipy.denoise.enhancement_kernel.sphere method)": [[163, "dipy.denoise.enhancement_kernel.Sphere.find_closest"]], "firdn() (in module dipy.denoise.nlmeans_block)": [[163, "dipy.denoise.nlmeans_block.firdn"]], "from_sphere() (dipy.denoise.enhancement_kernel.hemisphere class method)": [[163, "dipy.denoise.enhancement_kernel.HemiSphere.from_sphere"]], "genpca() (in module dipy.denoise.localpca)": [[163, "dipy.denoise.localpca.genpca"]], "get_lookup_table() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[163, "dipy.denoise.enhancement_kernel.EnhancementKernel.get_lookup_table"]], "get_orientations() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[163, "dipy.denoise.enhancement_kernel.EnhancementKernel.get_orientations"]], "get_sphere() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[163, "dipy.denoise.enhancement_kernel.EnhancementKernel.get_sphere"]], "get_sphere() (in module dipy.denoise.enhancement_kernel)": [[163, "dipy.denoise.enhancement_kernel.get_sphere"]], "gettempdir() (in module dipy.denoise.enhancement_kernel)": [[163, "dipy.denoise.enhancement_kernel.gettempdir"]], "gibbs_removal() (in module dipy.denoise.gibbs)": [[163, "dipy.denoise.gibbs.gibbs_removal"]], "localpca() (in module dipy.denoise.localpca)": [[163, "dipy.denoise.localpca.localpca"]], "mirror() (dipy.denoise.enhancement_kernel.hemisphere method)": [[163, "dipy.denoise.enhancement_kernel.HemiSphere.mirror"]], "mppca() (in module dipy.denoise.localpca)": [[163, "dipy.denoise.localpca.mppca"]], "nlmeans() (in module dipy.denoise.nlmeans)": [[163, "dipy.denoise.nlmeans.nlmeans"]], "nlmeans_3d() (in module dipy.denoise.denspeed)": [[163, "dipy.denoise.denspeed.nlmeans_3d"]], "nlmeans_block() (in module dipy.denoise.nlmeans_block)": [[163, "dipy.denoise.nlmeans_block.nlmeans_block"]], "non_local_means() (in module dipy.denoise.non_local_means)": [[163, "dipy.denoise.non_local_means.non_local_means"]], "patch2self() (in module dipy.denoise.patch2self)": [[163, "dipy.denoise.patch2self.patch2self"]], "pca_noise_estimate() (in module dipy.denoise.pca_noise_estimate)": [[163, "dipy.denoise.pca_noise_estimate.pca_noise_estimate"]], "piesno() (in module dipy.denoise.noise_estimate)": [[163, "dipy.denoise.noise_estimate.piesno"]], "remove_padding() (in module dipy.denoise.denspeed)": [[163, "dipy.denoise.denspeed.remove_padding"]], "sf_to_sh() (in module dipy.denoise.shift_twist_convolution)": [[163, "dipy.denoise.shift_twist_convolution.sf_to_sh"]], "sh_to_sf() (in module dipy.denoise.shift_twist_convolution)": [[163, "dipy.denoise.shift_twist_convolution.sh_to_sf"]], "subdivide() (dipy.denoise.enhancement_kernel.hemisphere method)": [[163, "dipy.denoise.enhancement_kernel.HemiSphere.subdivide"]], "subdivide() (dipy.denoise.enhancement_kernel.sphere method)": [[163, "dipy.denoise.enhancement_kernel.Sphere.subdivide"]], "upfir() (in module dipy.denoise.nlmeans_block)": [[163, "dipy.denoise.nlmeans_block.upfir"]], "vertices() (dipy.denoise.enhancement_kernel.sphere method)": [[163, "dipy.denoise.enhancement_kernel.Sphere.vertices"]], "warn() (in module dipy.denoise.pca_noise_estimate)": [[163, "dipy.denoise.pca_noise_estimate.warn"]], "x (dipy.denoise.enhancement_kernel.sphere property)": [[163, "dipy.denoise.enhancement_kernel.Sphere.x"]], "y (dipy.denoise.enhancement_kernel.sphere property)": [[163, "dipy.denoise.enhancement_kernel.Sphere.y"]], "z (dipy.denoise.enhancement_kernel.sphere property)": [[163, "dipy.denoise.enhancement_kernel.Sphere.z"]], "basedirectiongetter (class in dipy.direction.closest_peak_direction_getter)": [[164, "dipy.direction.closest_peak_direction_getter.BaseDirectionGetter"]], "basepmfdirectiongetter (class in dipy.direction.closest_peak_direction_getter)": [[164, "dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter"]], "bootdirectiongetter (class in dipy.direction.bootstrap_direction_getter)": [[164, "dipy.direction.bootstrap_direction_getter.BootDirectionGetter"]], "bootpmfgen (class in dipy.direction.bootstrap_direction_getter)": [[164, "dipy.direction.bootstrap_direction_getter.BootPmfGen"]], "bootpmfgen (class in dipy.direction.pmf)": [[164, "dipy.direction.pmf.BootPmfGen"]], "closestpeakdirectiongetter (class in dipy.direction.closest_peak_direction_getter)": [[164, "dipy.direction.closest_peak_direction_getter.ClosestPeakDirectionGetter"]], "deterministicmaximumdirectiongetter (class in dipy.direction.probabilistic_direction_getter)": [[164, "dipy.direction.probabilistic_direction_getter.DeterministicMaximumDirectionGetter"]], "pttdirectiongetter (class in dipy.direction.ptt_direction_getter)": [[164, "dipy.direction.ptt_direction_getter.PTTDirectionGetter"]], "peaksandmetrics (class in dipy.direction.peaks)": [[164, "dipy.direction.peaks.PeaksAndMetrics"]], "pmfgen (class in dipy.direction.pmf)": [[164, "dipy.direction.pmf.PmfGen"]], "pmfgendirectiongetter (class in dipy.direction.closest_peak_direction_getter)": [[164, "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter"]], "probabilisticdirectiongetter (class in dipy.direction.probabilistic_direction_getter)": [[164, "dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter"]], "shcoeffpmfgen (class in dipy.direction.pmf)": [[164, "dipy.direction.pmf.SHCoeffPmfGen"]], "simplepmfgen (class in dipy.direction.pmf)": [[164, "dipy.direction.pmf.SimplePmfGen"]], "__init__() (dipy.direction.bootstrap_direction_getter.bootdirectiongetter method)": [[164, "dipy.direction.bootstrap_direction_getter.BootDirectionGetter.__init__"]], "__init__() (dipy.direction.bootstrap_direction_getter.bootpmfgen method)": [[164, "dipy.direction.bootstrap_direction_getter.BootPmfGen.__init__"]], "__init__() (dipy.direction.closest_peak_direction_getter.basedirectiongetter method)": [[164, "dipy.direction.closest_peak_direction_getter.BaseDirectionGetter.__init__"]], "__init__() (dipy.direction.closest_peak_direction_getter.basepmfdirectiongetter method)": [[164, "dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter.__init__"]], "__init__() (dipy.direction.closest_peak_direction_getter.closestpeakdirectiongetter method)": [[164, "dipy.direction.closest_peak_direction_getter.ClosestPeakDirectionGetter.__init__"]], "__init__() (dipy.direction.closest_peak_direction_getter.pmfgendirectiongetter method)": [[164, "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.__init__"]], "__init__() (dipy.direction.peaks.peaksandmetrics method)": [[164, "dipy.direction.peaks.PeaksAndMetrics.__init__"]], "__init__() (dipy.direction.pmf.bootpmfgen method)": [[164, "dipy.direction.pmf.BootPmfGen.__init__"]], "__init__() (dipy.direction.pmf.pmfgen method)": [[164, "dipy.direction.pmf.PmfGen.__init__"]], "__init__() (dipy.direction.pmf.shcoeffpmfgen method)": [[164, "dipy.direction.pmf.SHCoeffPmfGen.__init__"]], "__init__() (dipy.direction.pmf.simplepmfgen method)": [[164, "dipy.direction.pmf.SimplePmfGen.__init__"]], "__init__() (dipy.direction.probabilistic_direction_getter.deterministicmaximumdirectiongetter method)": [[164, "dipy.direction.probabilistic_direction_getter.DeterministicMaximumDirectionGetter.__init__"]], "__init__() (dipy.direction.probabilistic_direction_getter.probabilisticdirectiongetter method)": [[164, "dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter.__init__"]], "__init__() (dipy.direction.ptt_direction_getter.pttdirectiongetter method)": [[164, "dipy.direction.ptt_direction_getter.PTTDirectionGetter.__init__"]], "dipy.direction": [[164, "module-dipy.direction"]], "dipy.direction.bootstrap_direction_getter": [[164, "module-dipy.direction.bootstrap_direction_getter"]], "dipy.direction.closest_peak_direction_getter": [[164, "module-dipy.direction.closest_peak_direction_getter"]], "dipy.direction.peaks": [[164, "module-dipy.direction.peaks"]], "dipy.direction.pmf": [[164, "module-dipy.direction.pmf"]], "dipy.direction.probabilistic_direction_getter": [[164, "module-dipy.direction.probabilistic_direction_getter"]], "dipy.direction.ptt_direction_getter": [[164, "module-dipy.direction.ptt_direction_getter"]], "from_data() (dipy.direction.bootstrap_direction_getter.bootdirectiongetter class method)": [[164, "dipy.direction.bootstrap_direction_getter.BootDirectionGetter.from_data"]], "from_pmf() (dipy.direction.closest_peak_direction_getter.pmfgendirectiongetter class method)": [[164, "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.from_pmf"]], "from_shcoeff() (dipy.direction.closest_peak_direction_getter.pmfgendirectiongetter class method)": [[164, "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.from_shcoeff"]], "generate_streamline() (dipy.direction.ptt_direction_getter.pttdirectiongetter method)": [[164, "dipy.direction.ptt_direction_getter.PTTDirectionGetter.generate_streamline"]], "get_pmf() (dipy.direction.bootstrap_direction_getter.bootpmfgen method)": [[164, "dipy.direction.bootstrap_direction_getter.BootPmfGen.get_pmf"]], "get_pmf() (dipy.direction.pmf.bootpmfgen method)": [[164, "dipy.direction.pmf.BootPmfGen.get_pmf"]], "get_pmf() (dipy.direction.pmf.pmfgen method)": [[164, "dipy.direction.pmf.PmfGen.get_pmf"]], "get_pmf() (dipy.direction.pmf.shcoeffpmfgen method)": [[164, "dipy.direction.pmf.SHCoeffPmfGen.get_pmf"]], "get_pmf() (dipy.direction.pmf.simplepmfgen method)": [[164, "dipy.direction.pmf.SimplePmfGen.get_pmf"]], "get_pmf_no_boot() (dipy.direction.bootstrap_direction_getter.bootpmfgen method)": [[164, "dipy.direction.bootstrap_direction_getter.BootPmfGen.get_pmf_no_boot"]], "get_pmf_no_boot() (dipy.direction.pmf.bootpmfgen method)": [[164, "dipy.direction.pmf.BootPmfGen.get_pmf_no_boot"]], "get_pmf_value() (dipy.direction.pmf.pmfgen method)": [[164, "dipy.direction.pmf.PmfGen.get_pmf_value"]], "get_pmf_value() (dipy.direction.pmf.simplepmfgen method)": [[164, "dipy.direction.pmf.SimplePmfGen.get_pmf_value"]], "initial_direction() (dipy.direction.closest_peak_direction_getter.basepmfdirectiongetter method)": [[164, "dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter.initial_direction"]], "min_radius_curvature_from_angle() (in module dipy.direction.ptt_direction_getter)": [[164, "dipy.direction.ptt_direction_getter.min_radius_curvature_from_angle"]], "peak_directions() (in module dipy.direction.closest_peak_direction_getter)": [[164, "dipy.direction.closest_peak_direction_getter.peak_directions"]], "peak_directions() (in module dipy.direction.peaks)": [[164, "dipy.direction.peaks.peak_directions"]], "peak_directions_nl() (in module dipy.direction.peaks)": [[164, "dipy.direction.peaks.peak_directions_nl"]], "peaks_from_model() (in module dipy.direction.peaks)": [[164, "dipy.direction.peaks.peaks_from_model"]], "random() (in module dipy.direction.probabilistic_direction_getter)": [[164, "dipy.direction.probabilistic_direction_getter.random"]], "reshape_peaks_for_visualization() (in module dipy.direction.peaks)": [[164, "dipy.direction.peaks.reshape_peaks_for_visualization"]], "dpy (class in dipy.io.dpy)": [[165, "dipy.io.dpy.Dpy"]], "nifti (dipy.io.stateful_tractogram.origin attribute)": [[165, "dipy.io.stateful_tractogram.Origin.NIFTI"]], "origin (class in dipy.io.stateful_tractogram)": [[165, "dipy.io.stateful_tractogram.Origin"]], "rasmm (dipy.io.stateful_tractogram.space attribute)": [[165, "dipy.io.stateful_tractogram.Space.RASMM"]], "space (class in dipy.io.stateful_tractogram)": [[165, "dipy.io.stateful_tractogram.Space"]], "statefultractogram (class in dipy.io.stateful_tractogram)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram"]], "trackvis (dipy.io.stateful_tractogram.origin attribute)": [[165, "dipy.io.stateful_tractogram.Origin.TRACKVIS"]], "vox (dipy.io.stateful_tractogram.space attribute)": [[165, "dipy.io.stateful_tractogram.Space.VOX"]], "voxmm (dipy.io.stateful_tractogram.space attribute)": [[165, "dipy.io.stateful_tractogram.Space.VOXMM"]], "__init__() (dipy.io.dpy.dpy method)": [[165, "dipy.io.dpy.Dpy.__init__"]], "__init__() (dipy.io.stateful_tractogram.origin method)": [[165, "dipy.io.stateful_tractogram.Origin.__init__"]], "__init__() (dipy.io.stateful_tractogram.space method)": [[165, "dipy.io.stateful_tractogram.Space.__init__"]], "__init__() (dipy.io.stateful_tractogram.statefultractogram method)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.__init__"]], "affine (dipy.io.stateful_tractogram.statefultractogram property)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.affine"]], "are_compatible() (dipy.io.stateful_tractogram.statefultractogram static method)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.are_compatible"]], "close() (dipy.io.dpy.dpy method)": [[165, "dipy.io.dpy.Dpy.close"]], "compute_bounding_box() (dipy.io.stateful_tractogram.statefultractogram method)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.compute_bounding_box"]], "create_nifti_header() (in module dipy.io.utils)": [[165, "dipy.io.utils.create_nifti_header"]], "create_tractogram_header() (in module dipy.io.utils)": [[165, "dipy.io.utils.create_tractogram_header"]], "data_per_point (dipy.io.stateful_tractogram.statefultractogram property)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.data_per_point"]], "data_per_streamline (dipy.io.stateful_tractogram.statefultractogram property)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.data_per_streamline"]], "decfa() (in module dipy.io.utils)": [[165, "dipy.io.utils.decfa"]], "decfa_to_float() (in module dipy.io.utils)": [[165, "dipy.io.utils.decfa_to_float"]], "dimensions (dipy.io.stateful_tractogram.statefultractogram property)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.dimensions"]], "dipy.io": [[165, "module-dipy.io"]], "dipy.io.bvectxt": [[165, "module-dipy.io.bvectxt"]], "dipy.io.dpy": [[165, "module-dipy.io.dpy"]], "dipy.io.gradients": [[165, "module-dipy.io.gradients"]], "dipy.io.image": [[165, "module-dipy.io.image"]], "dipy.io.peaks": [[165, "module-dipy.io.peaks"]], "dipy.io.pickles": [[165, "module-dipy.io.pickles"]], "dipy.io.stateful_tractogram": [[165, "module-dipy.io.stateful_tractogram"]], "dipy.io.streamline": [[165, "module-dipy.io.streamline"]], "dipy.io.utils": [[165, "module-dipy.io.utils"]], "dipy.io.vtk": [[165, "module-dipy.io.vtk"]], "dtype_dict (dipy.io.stateful_tractogram.statefultractogram property)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.dtype_dict"]], "from_sft() (dipy.io.stateful_tractogram.statefultractogram static method)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.from_sft"]], "get_data_per_point_keys() (dipy.io.stateful_tractogram.statefultractogram method)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.get_data_per_point_keys"]], "get_data_per_streamline_keys() (dipy.io.stateful_tractogram.statefultractogram method)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.get_data_per_streamline_keys"]], "get_reference_info() (in module dipy.io.utils)": [[165, "dipy.io.utils.get_reference_info"]], "get_streamlines_copy() (dipy.io.stateful_tractogram.statefultractogram method)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.get_streamlines_copy"]], "is_bbox_in_vox_valid() (dipy.io.stateful_tractogram.statefultractogram method)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.is_bbox_in_vox_valid"]], "is_header_compatible() (in module dipy.io.utils)": [[165, "dipy.io.utils.is_header_compatible"]], "is_reference_info_valid() (in module dipy.io.utils)": [[165, "dipy.io.utils.is_reference_info_valid"]], "load_dpy() (in module dipy.io.streamline)": [[165, "dipy.io.streamline.load_dpy"]], "load_fib() (in module dipy.io.streamline)": [[165, "dipy.io.streamline.load_fib"]], "load_generator() (in module dipy.io.streamline)": [[165, "dipy.io.streamline.load_generator"]], "load_nifti() (in module dipy.io.image)": [[165, "dipy.io.image.load_nifti"]], "load_nifti_data() (in module dipy.io.image)": [[165, "dipy.io.image.load_nifti_data"]], "load_peaks() (in module dipy.io.peaks)": [[165, "dipy.io.peaks.load_peaks"]], "load_pickle() (in module dipy.io.pickles)": [[165, "dipy.io.pickles.load_pickle"]], "load_polydata() (in module dipy.io.vtk)": [[165, "dipy.io.vtk.load_polydata"]], "load_tck() (in module dipy.io.streamline)": [[165, "dipy.io.streamline.load_tck"]], "load_tractogram() (in module dipy.io.streamline)": [[165, "dipy.io.streamline.load_tractogram"]], "load_trk() (in module dipy.io.streamline)": [[165, "dipy.io.streamline.load_trk"]], "load_vtk() (in module dipy.io.streamline)": [[165, "dipy.io.streamline.load_vtk"]], "load_vtk_streamlines() (in module dipy.io.vtk)": [[165, "dipy.io.vtk.load_vtk_streamlines"]], "load_vtp() (in module dipy.io.streamline)": [[165, "dipy.io.streamline.load_vtp"]], "logger() (in module dipy.io.stateful_tractogram)": [[165, "dipy.io.stateful_tractogram.logger"]], "make5d() (in module dipy.io.utils)": [[165, "dipy.io.utils.make5d"]], "nifti1_symmat() (in module dipy.io.utils)": [[165, "dipy.io.utils.nifti1_symmat"]], "orientation_from_string() (in module dipy.io.bvectxt)": [[165, "dipy.io.bvectxt.orientation_from_string"]], "orientation_to_string() (in module dipy.io.bvectxt)": [[165, "dipy.io.bvectxt.orientation_to_string"]], "origin (dipy.io.stateful_tractogram.statefultractogram property)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.origin"]], "ornt_mapping() (in module dipy.io.bvectxt)": [[165, "dipy.io.bvectxt.ornt_mapping"]], "peaks_to_niftis() (in module dipy.io.peaks)": [[165, "dipy.io.peaks.peaks_to_niftis"]], "read_bvals_bvecs() (in module dipy.io.gradients)": [[165, "dipy.io.gradients.read_bvals_bvecs"]], "read_bvec_file() (in module dipy.io.bvectxt)": [[165, "dipy.io.bvectxt.read_bvec_file"]], "read_img_arr_or_path() (in module dipy.io.utils)": [[165, "dipy.io.utils.read_img_arr_or_path"]], "read_track() (dipy.io.dpy.dpy method)": [[165, "dipy.io.dpy.Dpy.read_track"]], "read_tracks() (dipy.io.dpy.dpy method)": [[165, "dipy.io.dpy.Dpy.read_tracks"]], "read_tracksi() (dipy.io.dpy.dpy method)": [[165, "dipy.io.dpy.Dpy.read_tracksi"]], "remove_invalid_streamlines() (dipy.io.stateful_tractogram.statefultractogram method)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.remove_invalid_streamlines"]], "reorient_on_axis() (in module dipy.io.bvectxt)": [[165, "dipy.io.bvectxt.reorient_on_axis"]], "reorient_vectors() (in module dipy.io.bvectxt)": [[165, "dipy.io.bvectxt.reorient_vectors"]], "save_buan_profiles_hdf5() (in module dipy.io.utils)": [[165, "dipy.io.utils.save_buan_profiles_hdf5"]], "save_dpy() (in module dipy.io.streamline)": [[165, "dipy.io.streamline.save_dpy"]], "save_fib() (in module dipy.io.streamline)": [[165, "dipy.io.streamline.save_fib"]], "save_generator() (in module dipy.io.streamline)": [[165, "dipy.io.streamline.save_generator"]], "save_nifti() (in module dipy.io.image)": [[165, "dipy.io.image.save_nifti"]], "save_peaks() (in module dipy.io.peaks)": [[165, "dipy.io.peaks.save_peaks"]], "save_pickle() (in module dipy.io.pickles)": [[165, "dipy.io.pickles.save_pickle"]], "save_polydata() (in module dipy.io.vtk)": [[165, "dipy.io.vtk.save_polydata"]], "save_qa_metric() (in module dipy.io.image)": [[165, "dipy.io.image.save_qa_metric"]], "save_tck() (in module dipy.io.streamline)": [[165, "dipy.io.streamline.save_tck"]], "save_tractogram() (in module dipy.io.streamline)": [[165, "dipy.io.streamline.save_tractogram"]], "save_trk() (in module dipy.io.streamline)": [[165, "dipy.io.streamline.save_trk"]], "save_vtk() (in module dipy.io.streamline)": [[165, "dipy.io.streamline.save_vtk"]], "save_vtk_streamlines() (in module dipy.io.vtk)": [[165, "dipy.io.vtk.save_vtk_streamlines"]], "save_vtp() (in module dipy.io.streamline)": [[165, "dipy.io.streamline.save_vtp"]], "set_sft_logger_level() (in module dipy.io.stateful_tractogram)": [[165, "dipy.io.stateful_tractogram.set_sft_logger_level"]], "space (dipy.io.stateful_tractogram.statefultractogram property)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.space"]], "space_attributes (dipy.io.stateful_tractogram.statefultractogram property)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.space_attributes"]], "streamlines (dipy.io.stateful_tractogram.statefultractogram property)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.streamlines"]], "to_center() (dipy.io.stateful_tractogram.statefultractogram method)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.to_center"]], "to_corner() (dipy.io.stateful_tractogram.statefultractogram method)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.to_corner"]], "to_origin() (dipy.io.stateful_tractogram.statefultractogram method)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.to_origin"]], "to_rasmm() (dipy.io.stateful_tractogram.statefultractogram method)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.to_rasmm"]], "to_space() (dipy.io.stateful_tractogram.statefultractogram method)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.to_space"]], "to_vox() (dipy.io.stateful_tractogram.statefultractogram method)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.to_vox"]], "to_voxmm() (dipy.io.stateful_tractogram.statefultractogram method)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.to_voxmm"]], "version() (dipy.io.dpy.dpy method)": [[165, "dipy.io.dpy.Dpy.version"]], "voxel_order (dipy.io.stateful_tractogram.statefultractogram property)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.voxel_order"]], "voxel_sizes (dipy.io.stateful_tractogram.statefultractogram property)": [[165, "dipy.io.stateful_tractogram.StatefulTractogram.voxel_sizes"]], "write_track() (dipy.io.dpy.dpy method)": [[165, "dipy.io.dpy.Dpy.write_track"]], "write_tracks() (dipy.io.dpy.dpy method)": [[165, "dipy.io.dpy.Dpy.write_tracks"]], "block (class in dipy.nn.evac)": [[166, "dipy.nn.evac.Block"]], "channelsum (class in dipy.nn.evac)": [[166, "dipy.nn.evac.ChannelSum"]], "cnn1ddenoiser (class in dipy.nn.cnn_1d_denoising)": [[166, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser"]], "decoderblock (class in dipy.nn.synb0)": [[166, "dipy.nn.synb0.DecoderBlock"], [166, "id69"]], "evacplus (class in dipy.nn.evac)": [[166, "dipy.nn.evac.EVACPlus"]], "encoderblock (class in dipy.nn.synb0)": [[166, "dipy.nn.synb0.EncoderBlock"], [166, "id0"]], "historesdnn (class in dipy.nn.histo_resdnn)": [[166, "dipy.nn.histo_resdnn.HistoResDNN"]], "multiplelayerpercepton (class in dipy.nn.model)": [[166, "dipy.nn.model.MultipleLayerPercepton"]], "singlelayerperceptron (class in dipy.nn.model)": [[166, "dipy.nn.model.SingleLayerPerceptron"]], "synb0 (class in dipy.nn.synb0)": [[166, "dipy.nn.synb0.Synb0"]], "unet3d() (in module dipy.nn.synb0)": [[166, "dipy.nn.synb0.UNet3D"], [166, "id90"]], "__init__() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[166, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.__init__"]], "__init__() (dipy.nn.evac.block method)": [[166, "dipy.nn.evac.Block.__init__"]], "__init__() (dipy.nn.evac.channelsum method)": [[166, "dipy.nn.evac.ChannelSum.__init__"]], "__init__() (dipy.nn.evac.evacplus method)": [[166, "dipy.nn.evac.EVACPlus.__init__"]], "__init__() (dipy.nn.histo_resdnn.historesdnn method)": [[166, "dipy.nn.histo_resdnn.HistoResDNN.__init__"]], "__init__() (dipy.nn.model.multiplelayerpercepton method)": [[166, "dipy.nn.model.MultipleLayerPercepton.__init__"]], "__init__() (dipy.nn.model.singlelayerperceptron method)": [[166, "dipy.nn.model.SingleLayerPerceptron.__init__"]], "__init__() (dipy.nn.synb0.decoderblock method)": [[166, "dipy.nn.synb0.DecoderBlock.__init__"], [166, "id70"]], "__init__() (dipy.nn.synb0.encoderblock method)": [[166, "dipy.nn.synb0.EncoderBlock.__init__"], [166, "id62"]], "__init__() (dipy.nn.synb0.synb0 method)": [[166, "dipy.nn.synb0.Synb0.__init__"]], "call() (dipy.nn.evac.block method)": [[166, "dipy.nn.evac.Block.call"]], "call() (dipy.nn.evac.channelsum method)": [[166, "dipy.nn.evac.ChannelSum.call"]], "call() (dipy.nn.synb0.decoderblock method)": [[166, "dipy.nn.synb0.DecoderBlock.call"], [166, "id71"]], "call() (dipy.nn.synb0.encoderblock method)": [[166, "dipy.nn.synb0.EncoderBlock.call"], [166, "id63"]], "compile() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[166, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.compile"]], "dipy.nn": [[166, "module-dipy.nn"]], "dipy.nn.cnn_1d_denoising": [[166, "module-dipy.nn.cnn_1d_denoising"]], "dipy.nn.evac": [[166, "module-dipy.nn.evac"]], "dipy.nn.histo_resdnn": [[166, "module-dipy.nn.histo_resdnn"]], "dipy.nn.model": [[166, "module-dipy.nn.model"]], "dipy.nn.synb0": [[166, "module-dipy.nn.synb0"]], "dipy.nn.utils": [[166, "module-dipy.nn.utils"]], "evaluate() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[166, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.evaluate"]], "evaluate() (dipy.nn.model.multiplelayerpercepton method)": [[166, "dipy.nn.model.MultipleLayerPercepton.evaluate"]], "evaluate() (dipy.nn.model.singlelayerperceptron method)": [[166, "dipy.nn.model.SingleLayerPerceptron.evaluate"]], "fetch_default_weights() (dipy.nn.evac.evacplus method)": [[166, "dipy.nn.evac.EVACPlus.fetch_default_weights"]], "fetch_default_weights() (dipy.nn.histo_resdnn.historesdnn method)": [[166, "dipy.nn.histo_resdnn.HistoResDNN.fetch_default_weights"]], "fetch_default_weights() (dipy.nn.synb0.synb0 method)": [[166, "dipy.nn.synb0.Synb0.fetch_default_weights"]], "fit() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[166, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.fit"]], "fit() (dipy.nn.model.multiplelayerpercepton method)": [[166, "dipy.nn.model.MultipleLayerPercepton.fit"]], "fit() (dipy.nn.model.singlelayerperceptron method)": [[166, "dipy.nn.model.SingleLayerPerceptron.fit"]], "init_model() (in module dipy.nn.evac)": [[166, "dipy.nn.evac.init_model"]], "load_model_weights() (dipy.nn.evac.evacplus method)": [[166, "dipy.nn.evac.EVACPlus.load_model_weights"]], "load_model_weights() (dipy.nn.histo_resdnn.historesdnn method)": [[166, "dipy.nn.histo_resdnn.HistoResDNN.load_model_weights"]], "load_model_weights() (dipy.nn.synb0.synb0 method)": [[166, "dipy.nn.synb0.Synb0.load_model_weights"]], "load_weights() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[166, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.load_weights"]], "logger() (in module dipy.nn.evac)": [[166, "dipy.nn.evac.logger"]], "logger() (in module dipy.nn.histo_resdnn)": [[166, "dipy.nn.histo_resdnn.logger"]], "logger() (in module dipy.nn.synb0)": [[166, "dipy.nn.synb0.logger"]], "normalize() (in module dipy.nn.synb0)": [[166, "dipy.nn.synb0.normalize"]], "normalize() (in module dipy.nn.utils)": [[166, "dipy.nn.utils.normalize"]], "predict() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[166, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.predict"]], "predict() (dipy.nn.evac.evacplus method)": [[166, "dipy.nn.evac.EVACPlus.predict"]], "predict() (dipy.nn.histo_resdnn.historesdnn method)": [[166, "dipy.nn.histo_resdnn.HistoResDNN.predict"]], "predict() (dipy.nn.model.multiplelayerpercepton method)": [[166, "dipy.nn.model.MultipleLayerPercepton.predict"]], "predict() (dipy.nn.model.singlelayerperceptron method)": [[166, "dipy.nn.model.SingleLayerPerceptron.predict"]], "predict() (dipy.nn.synb0.synb0 method)": [[166, "dipy.nn.synb0.Synb0.predict"]], "prepare_img() (in module dipy.nn.evac)": [[166, "dipy.nn.evac.prepare_img"]], "recover_img() (in module dipy.nn.utils)": [[166, "dipy.nn.utils.recover_img"]], "save_weights() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[166, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.save_weights"]], "set_logger_level() (in module dipy.nn.utils)": [[166, "dipy.nn.utils.set_logger_level"]], "summary() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[166, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.summary"]], "summary() (dipy.nn.model.multiplelayerpercepton method)": [[166, "dipy.nn.model.MultipleLayerPercepton.summary"]], "summary() (dipy.nn.model.singlelayerperceptron method)": [[166, "dipy.nn.model.SingleLayerPerceptron.summary"]], "train_test_split() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[166, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.train_test_split"]], "transform_img() (in module dipy.nn.utils)": [[166, "dipy.nn.utils.transform_img"]], "unnormalize() (in module dipy.nn.synb0)": [[166, "dipy.nn.synb0.unnormalize"]], "unnormalize() (in module dipy.nn.utils)": [[166, "dipy.nn.utils.unnormalize"]], "axsymshresponse (class in dipy.reconst.csdeconv)": [[167, "dipy.reconst.csdeconv.AxSymShResponse"]], "cache (class in dipy.reconst.cache)": [[167, "dipy.reconst.cache.Cache"]], "callablearray (class in dipy.reconst.multi_voxel)": [[167, "dipy.reconst.multi_voxel.CallableArray"]], "constrainedsdtmodel (class in dipy.reconst.csdeconv)": [[167, "dipy.reconst.csdeconv.ConstrainedSDTModel"]], "constrainedsphericaldeconvmodel (class in dipy.reconst.csdeconv)": [[167, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel"]], "correlationtensorfit (class in dipy.reconst.cti)": [[167, "dipy.reconst.cti.CorrelationTensorFit"]], "correlationtensormodel (class in dipy.reconst.cti)": [[167, "dipy.reconst.cti.CorrelationTensorModel"]], "csaodfmodel (class in dipy.reconst.shm)": [[167, "dipy.reconst.shm.CsaOdfModel"]], "d (dipy.reconst.ivim.ivimfit property)": [[167, "dipy.reconst.ivim.IvimFit.D"]], "d_star (dipy.reconst.ivim.ivimfit property)": [[167, "dipy.reconst.ivim.IvimFit.D_star"]], "diffusionkurtosisfit (class in dipy.reconst.dki)": [[167, "dipy.reconst.dki.DiffusionKurtosisFit"]], "diffusionkurtosismodel (class in dipy.reconst.dki)": [[167, "dipy.reconst.dki.DiffusionKurtosisModel"]], "diffusionspectrumdeconvfit (class in dipy.reconst.dsi)": [[167, "dipy.reconst.dsi.DiffusionSpectrumDeconvFit"]], "diffusionspectrumdeconvmodel (class in dipy.reconst.dsi)": [[167, "dipy.reconst.dsi.DiffusionSpectrumDeconvModel"]], "diffusionspectrumfit (class in dipy.reconst.dsi)": [[167, "dipy.reconst.dsi.DiffusionSpectrumFit"]], "diffusionspectrummodel (class in dipy.reconst.dsi)": [[167, "dipy.reconst.dsi.DiffusionSpectrumModel"]], "eudxdirectiongetter (class in dipy.reconst.eudx_direction_getter)": [[167, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter"]], "exponentialisotropicfit (class in dipy.reconst.sfm)": [[167, "dipy.reconst.sfm.ExponentialIsotropicFit"]], "exponentialisotropicmodel (class in dipy.reconst.sfm)": [[167, "dipy.reconst.sfm.ExponentialIsotropicModel"]], "forecastfit (class in dipy.reconst.forecast)": [[167, "dipy.reconst.forecast.ForecastFit"]], "forecastmodel (class in dipy.reconst.forecast)": [[167, "dipy.reconst.forecast.ForecastModel"]], "freewatertensorfit (class in dipy.reconst.fwdti)": [[167, "dipy.reconst.fwdti.FreeWaterTensorFit"]], "freewatertensormodel (class in dipy.reconst.fwdti)": [[167, "dipy.reconst.fwdti.FreeWaterTensorModel"]], "gcv_cost_function() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.GCV_cost_function"]], "generalizedqsamplingfit (class in dipy.reconst.gqi)": [[167, "dipy.reconst.gqi.GeneralizedQSamplingFit"]], "generalizedqsamplingmodel (class in dipy.reconst.gqi)": [[167, "dipy.reconst.gqi.GeneralizedQSamplingModel"]], "h() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.H"]], "isotropicfit (class in dipy.reconst.sfm)": [[167, "dipy.reconst.sfm.IsotropicFit"]], "isotropicmodel (class in dipy.reconst.sfm)": [[167, "dipy.reconst.sfm.IsotropicModel"]], "ivimfit (class in dipy.reconst.ivim)": [[167, "dipy.reconst.ivim.IvimFit"]], "ivimmodeltrr (class in dipy.reconst.ivim)": [[167, "dipy.reconst.ivim.IvimModelTRR"]], "ivimmodelvp (class in dipy.reconst.ivim)": [[167, "dipy.reconst.ivim.IvimModelVP"]], "k_aniso (dipy.reconst.cti.correlationtensorfit property)": [[167, "dipy.reconst.cti.CorrelationTensorFit.K_aniso"]], "k_iso (dipy.reconst.cti.correlationtensorfit property)": [[167, "dipy.reconst.cti.CorrelationTensorFit.K_iso"]], "k_micro (dipy.reconst.cti.correlationtensorfit property)": [[167, "dipy.reconst.cti.CorrelationTensorFit.K_micro"]], "k_total() (dipy.reconst.cti.correlationtensorfit method)": [[167, "dipy.reconst.cti.CorrelationTensorFit.K_total"]], "kurtosismicrostructuralfit (class in dipy.reconst.dki_micro)": [[167, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit"]], "kurtosismicrostructuremodel (class in dipy.reconst.dki_micro)": [[167, "dipy.reconst.dki_micro.KurtosisMicrostructureModel"]], "lr_deconv() (in module dipy.reconst.dsi)": [[167, "dipy.reconst.dsi.LR_deconv"]], "msdeconvfit (class in dipy.reconst.mcsd)": [[167, "dipy.reconst.mcsd.MSDeconvFit"]], "mapmrifit (class in dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.MapmriFit"]], "mapmrimodel (class in dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.MapmriModel"]], "meandiffusionkurtosisfit (class in dipy.reconst.msdki)": [[167, "dipy.reconst.msdki.MeanDiffusionKurtosisFit"]], "meandiffusionkurtosismodel (class in dipy.reconst.msdki)": [[167, "dipy.reconst.msdki.MeanDiffusionKurtosisModel"]], "multishelldeconvmodel (class in dipy.reconst.mcsd)": [[167, "dipy.reconst.mcsd.MultiShellDeconvModel"]], "multishellresponse (class in dipy.reconst.mcsd)": [[167, "dipy.reconst.mcsd.MultiShellResponse"]], "multivoxelfit (class in dipy.reconst.multi_voxel)": [[167, "dipy.reconst.multi_voxel.MultiVoxelFit"]], "odffit (class in dipy.reconst.odf)": [[167, "dipy.reconst.odf.OdfFit"]], "odfmodel (class in dipy.reconst.odf)": [[167, "dipy.reconst.odf.OdfModel"]], "opdtmodel (class in dipy.reconst.shm)": [[167, "dipy.reconst.shm.OpdtModel"]], "qballbasemodel (class in dipy.reconst.shm)": [[167, "dipy.reconst.shm.QballBaseModel"]], "qballmodel (class in dipy.reconst.shm)": [[167, "dipy.reconst.shm.QballModel"]], "qpfitter (class in dipy.reconst.mcsd)": [[167, "dipy.reconst.mcsd.QpFitter"]], "qtdmrifit (class in dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.QtdmriFit"]], "qtdmrimodel (class in dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.QtdmriModel"]], "qtifit (class in dipy.reconst.qti)": [[167, "dipy.reconst.qti.QtiFit"]], "qtimodel (class in dipy.reconst.qti)": [[167, "dipy.reconst.qti.QtiModel"]], "reconstfit (class in dipy.reconst.base)": [[167, "dipy.reconst.base.ReconstFit"]], "reconstmodel (class in dipy.reconst.base)": [[167, "dipy.reconst.base.ReconstModel"]], "residualbootstrapwrapper (class in dipy.reconst.shm)": [[167, "dipy.reconst.shm.ResidualBootstrapWrapper"]], "rumbafit (class in dipy.reconst.rumba)": [[167, "dipy.reconst.rumba.RumbaFit"]], "rumbasdmodel (class in dipy.reconst.rumba)": [[167, "dipy.reconst.rumba.RumbaSDModel"]], "s0_hat (dipy.reconst.dti.tensorfit property)": [[167, "dipy.reconst.dti.TensorFit.S0_hat"]], "s0_hat (dipy.reconst.msdki.meandiffusionkurtosisfit property)": [[167, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.S0_hat"]], "s0_hat() (dipy.reconst.qti.qtifit method)": [[167, "dipy.reconst.qti.QtiFit.S0_hat"]], "s0_predicted (dipy.reconst.ivim.ivimfit property)": [[167, "dipy.reconst.ivim.IvimFit.S0_predicted"]], "shorefit (class in dipy.reconst.shore)": [[167, "dipy.reconst.shore.ShoreFit"]], "shoremodel (class in dipy.reconst.shore)": [[167, "dipy.reconst.shore.ShoreModel"]], "sparsefasciclefit (class in dipy.reconst.sfm)": [[167, "dipy.reconst.sfm.SparseFascicleFit"]], "sparsefasciclemodel (class in dipy.reconst.sfm)": [[167, "dipy.reconst.sfm.SparseFascicleModel"]], "sphharmfit (class in dipy.reconst.shm)": [[167, "dipy.reconst.shm.SphHarmFit"]], "sphharmmodel (class in dipy.reconst.shm)": [[167, "dipy.reconst.shm.SphHarmModel"]], "tensorfit (class in dipy.reconst.dti)": [[167, "dipy.reconst.dti.TensorFit"]], "tensormodel (class in dipy.reconst.dti)": [[167, "dipy.reconst.dti.TensorModel"]], "wcons() (in module dipy.reconst.dki)": [[167, "dipy.reconst.dki.Wcons"]], "wrotate() (in module dipy.reconst.dki)": [[167, "dipy.reconst.dki.Wrotate"]], "wrotate_element() (in module dipy.reconst.dki)": [[167, "dipy.reconst.dki.Wrotate_element"]], "__init__() (dipy.reconst.base.reconstfit method)": [[167, "dipy.reconst.base.ReconstFit.__init__"]], "__init__() (dipy.reconst.base.reconstmodel method)": [[167, "dipy.reconst.base.ReconstModel.__init__"]], "__init__() (dipy.reconst.cache.cache method)": [[167, "dipy.reconst.cache.Cache.__init__"]], "__init__() (dipy.reconst.csdeconv.axsymshresponse method)": [[167, "dipy.reconst.csdeconv.AxSymShResponse.__init__"]], "__init__() (dipy.reconst.csdeconv.constrainedsdtmodel method)": [[167, "dipy.reconst.csdeconv.ConstrainedSDTModel.__init__"]], "__init__() (dipy.reconst.csdeconv.constrainedsphericaldeconvmodel method)": [[167, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.__init__"]], "__init__() (dipy.reconst.cti.correlationtensorfit method)": [[167, "dipy.reconst.cti.CorrelationTensorFit.__init__"]], "__init__() (dipy.reconst.cti.correlationtensormodel method)": [[167, "dipy.reconst.cti.CorrelationTensorModel.__init__"]], "__init__() (dipy.reconst.dki.diffusionkurtosisfit method)": [[167, "dipy.reconst.dki.DiffusionKurtosisFit.__init__"]], "__init__() (dipy.reconst.dki.diffusionkurtosismodel method)": [[167, "dipy.reconst.dki.DiffusionKurtosisModel.__init__"]], "__init__() (dipy.reconst.dki_micro.kurtosismicrostructuralfit method)": [[167, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.__init__"]], "__init__() (dipy.reconst.dki_micro.kurtosismicrostructuremodel method)": [[167, "dipy.reconst.dki_micro.KurtosisMicrostructureModel.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrumdeconvfit method)": [[167, "dipy.reconst.dsi.DiffusionSpectrumDeconvFit.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrumdeconvmodel method)": [[167, "dipy.reconst.dsi.DiffusionSpectrumDeconvModel.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrumfit method)": [[167, "dipy.reconst.dsi.DiffusionSpectrumFit.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrummodel method)": [[167, "dipy.reconst.dsi.DiffusionSpectrumModel.__init__"]], "__init__() (dipy.reconst.dti.tensorfit method)": [[167, "dipy.reconst.dti.TensorFit.__init__"]], "__init__() (dipy.reconst.dti.tensormodel method)": [[167, "dipy.reconst.dti.TensorModel.__init__"]], "__init__() (dipy.reconst.eudx_direction_getter.eudxdirectiongetter method)": [[167, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.__init__"]], "__init__() (dipy.reconst.forecast.forecastfit method)": [[167, "dipy.reconst.forecast.ForecastFit.__init__"]], "__init__() (dipy.reconst.forecast.forecastmodel method)": [[167, "dipy.reconst.forecast.ForecastModel.__init__"]], "__init__() (dipy.reconst.fwdti.freewatertensorfit method)": [[167, "dipy.reconst.fwdti.FreeWaterTensorFit.__init__"]], "__init__() (dipy.reconst.fwdti.freewatertensormodel method)": [[167, "dipy.reconst.fwdti.FreeWaterTensorModel.__init__"]], "__init__() (dipy.reconst.gqi.generalizedqsamplingfit method)": [[167, "dipy.reconst.gqi.GeneralizedQSamplingFit.__init__"]], "__init__() (dipy.reconst.gqi.generalizedqsamplingmodel method)": [[167, "dipy.reconst.gqi.GeneralizedQSamplingModel.__init__"]], "__init__() (dipy.reconst.ivim.ivimfit method)": [[167, "dipy.reconst.ivim.IvimFit.__init__"]], "__init__() (dipy.reconst.ivim.ivimmodeltrr method)": [[167, "dipy.reconst.ivim.IvimModelTRR.__init__"]], "__init__() (dipy.reconst.ivim.ivimmodelvp method)": [[167, "dipy.reconst.ivim.IvimModelVP.__init__"]], "__init__() (dipy.reconst.mapmri.mapmrifit method)": [[167, "dipy.reconst.mapmri.MapmriFit.__init__"]], "__init__() (dipy.reconst.mapmri.mapmrimodel method)": [[167, "dipy.reconst.mapmri.MapmriModel.__init__"]], "__init__() (dipy.reconst.mcsd.msdeconvfit method)": [[167, "dipy.reconst.mcsd.MSDeconvFit.__init__"]], "__init__() (dipy.reconst.mcsd.multishelldeconvmodel method)": [[167, "dipy.reconst.mcsd.MultiShellDeconvModel.__init__"]], "__init__() (dipy.reconst.mcsd.multishellresponse method)": [[167, "dipy.reconst.mcsd.MultiShellResponse.__init__"]], "__init__() (dipy.reconst.mcsd.qpfitter method)": [[167, "dipy.reconst.mcsd.QpFitter.__init__"]], "__init__() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[167, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.__init__"]], "__init__() (dipy.reconst.msdki.meandiffusionkurtosismodel method)": [[167, "dipy.reconst.msdki.MeanDiffusionKurtosisModel.__init__"]], "__init__() (dipy.reconst.multi_voxel.callablearray method)": [[167, "dipy.reconst.multi_voxel.CallableArray.__init__"]], "__init__() (dipy.reconst.multi_voxel.multivoxelfit method)": [[167, "dipy.reconst.multi_voxel.MultiVoxelFit.__init__"]], "__init__() (dipy.reconst.odf.odffit method)": [[167, "dipy.reconst.odf.OdfFit.__init__"]], "__init__() (dipy.reconst.odf.odfmodel method)": [[167, "dipy.reconst.odf.OdfModel.__init__"]], "__init__() (dipy.reconst.qtdmri.qtdmrifit method)": [[167, "dipy.reconst.qtdmri.QtdmriFit.__init__"]], "__init__() (dipy.reconst.qtdmri.qtdmrimodel method)": [[167, "dipy.reconst.qtdmri.QtdmriModel.__init__"]], "__init__() (dipy.reconst.qti.qtifit method)": [[167, "dipy.reconst.qti.QtiFit.__init__"]], "__init__() (dipy.reconst.qti.qtimodel method)": [[167, "dipy.reconst.qti.QtiModel.__init__"]], "__init__() (dipy.reconst.rumba.rumbafit method)": [[167, "dipy.reconst.rumba.RumbaFit.__init__"]], "__init__() (dipy.reconst.rumba.rumbasdmodel method)": [[167, "dipy.reconst.rumba.RumbaSDModel.__init__"]], "__init__() (dipy.reconst.sfm.exponentialisotropicfit method)": [[167, "dipy.reconst.sfm.ExponentialIsotropicFit.__init__"]], "__init__() (dipy.reconst.sfm.exponentialisotropicmodel method)": [[167, "dipy.reconst.sfm.ExponentialIsotropicModel.__init__"]], "__init__() (dipy.reconst.sfm.isotropicfit method)": [[167, "dipy.reconst.sfm.IsotropicFit.__init__"]], "__init__() (dipy.reconst.sfm.isotropicmodel method)": [[167, "dipy.reconst.sfm.IsotropicModel.__init__"]], "__init__() (dipy.reconst.sfm.sparsefasciclefit method)": [[167, "dipy.reconst.sfm.SparseFascicleFit.__init__"]], "__init__() (dipy.reconst.sfm.sparsefasciclemodel method)": [[167, "dipy.reconst.sfm.SparseFascicleModel.__init__"]], "__init__() (dipy.reconst.shm.csaodfmodel method)": [[167, "dipy.reconst.shm.CsaOdfModel.__init__"]], "__init__() (dipy.reconst.shm.opdtmodel method)": [[167, "dipy.reconst.shm.OpdtModel.__init__"]], "__init__() (dipy.reconst.shm.qballbasemodel method)": [[167, "dipy.reconst.shm.QballBaseModel.__init__"]], "__init__() (dipy.reconst.shm.qballmodel method)": [[167, "dipy.reconst.shm.QballModel.__init__"]], "__init__() (dipy.reconst.shm.residualbootstrapwrapper method)": [[167, "dipy.reconst.shm.ResidualBootstrapWrapper.__init__"]], "__init__() (dipy.reconst.shm.sphharmfit method)": [[167, "dipy.reconst.shm.SphHarmFit.__init__"]], "__init__() (dipy.reconst.shm.sphharmmodel method)": [[167, "dipy.reconst.shm.SphHarmModel.__init__"]], "__init__() (dipy.reconst.shore.shorefit method)": [[167, "dipy.reconst.shore.ShoreFit.__init__"]], "__init__() (dipy.reconst.shore.shoremodel method)": [[167, "dipy.reconst.shore.ShoreModel.__init__"]], "_lt_cols() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti._lt_cols"]], "_lt_indices() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti._lt_indices"]], "_lt_rows() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti._lt_rows"]], "ad() (dipy.reconst.dti.tensorfit method)": [[167, "dipy.reconst.dti.TensorFit.ad"]], "adc() (dipy.reconst.dti.tensorfit method)": [[167, "dipy.reconst.dti.TensorFit.adc"]], "adj_to_countarrs() (in module dipy.reconst.recspeed)": [[167, "dipy.reconst.recspeed.adj_to_countarrs"]], "ak() (dipy.reconst.dki.diffusionkurtosisfit method)": [[167, "dipy.reconst.dki.DiffusionKurtosisFit.ak"]], "akc() (dipy.reconst.dki.diffusionkurtosisfit method)": [[167, "dipy.reconst.dki.DiffusionKurtosisFit.akc"]], "all_shm_coeff (dipy.reconst.mcsd.msdeconvfit property)": [[167, "dipy.reconst.mcsd.MSDeconvFit.all_shm_coeff"]], "ang_thr (dipy.reconst.eudx_direction_getter.eudxdirectiongetter attribute)": [[167, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.ang_thr"]], "angular_basis_eap_opt() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.angular_basis_EAP_opt"]], "angular_basis_opt() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.angular_basis_opt"]], "anisotropic_power() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.anisotropic_power"]], "apparent_diffusion_coef() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.apparent_diffusion_coef"]], "apparent_kurtosis_coef() (in module dipy.reconst.dki)": [[167, "dipy.reconst.dki.apparent_kurtosis_coef"]], "argmax_from_adj() (in module dipy.reconst.recspeed)": [[167, "dipy.reconst.recspeed.argmax_from_adj"]], "argmax_from_countarrs() (in module dipy.reconst.recspeed)": [[167, "dipy.reconst.recspeed.argmax_from_countarrs"]], "auto_response() (in module dipy.reconst.csdeconv)": [[167, "dipy.reconst.csdeconv.auto_response"]], "auto_response_msmt() (in module dipy.reconst.mcsd)": [[167, "dipy.reconst.mcsd.auto_response_msmt"]], "auto_response_ssst() (in module dipy.reconst.csdeconv)": [[167, "dipy.reconst.csdeconv.auto_response_ssst"]], "awf (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[167, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.awf"]], "awf_from_msk() (in module dipy.reconst.msdki)": [[167, "dipy.reconst.msdki.awf_from_msk"]], "axial_diffusivity() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.axial_diffusivity"]], "axial_kurtosis() (in module dipy.reconst.dki)": [[167, "dipy.reconst.dki.axial_kurtosis"]], "axonal_diffusivity (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[167, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.axonal_diffusivity"]], "axonal_water_fraction() (in module dipy.reconst.dki_micro)": [[167, "dipy.reconst.dki_micro.axonal_water_fraction"]], "b_mat() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.b_mat"]], "b_mat_isotropic() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.b_mat_isotropic"]], "basis() (dipy.reconst.csdeconv.axsymshresponse method)": [[167, "dipy.reconst.csdeconv.AxSymShResponse.basis"]], "bench_bounding_box() (in module dipy.reconst.benchmarks.bench_bounding_box)": [[167, "dipy.reconst.benchmarks.bench_bounding_box.bench_bounding_box"]], "bench_csdeconv() (in module dipy.reconst.benchmarks.bench_csd)": [[167, "dipy.reconst.benchmarks.bench_csd.bench_csdeconv"]], "bench_local_maxima() (in module dipy.reconst.benchmarks.bench_peaks)": [[167, "dipy.reconst.benchmarks.bench_peaks.bench_local_maxima"]], "bench_quick_squash() (in module dipy.reconst.benchmarks.bench_squash)": [[167, "dipy.reconst.benchmarks.bench_squash.bench_quick_squash"]], "bench_vec_val_vect() (in module dipy.reconst.benchmarks.bench_vec_val_sum)": [[167, "dipy.reconst.benchmarks.bench_vec_val_sum.bench_vec_val_vect"]], "binomialfloat() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.binomialfloat"]], "bootstrap_data_array() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.bootstrap_data_array"]], "bootstrap_data_voxel() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.bootstrap_data_voxel"]], "c_c() (dipy.reconst.qti.qtifit method)": [[167, "dipy.reconst.qti.QtiFit.c_c"]], "c_m() (dipy.reconst.qti.qtifit method)": [[167, "dipy.reconst.qti.QtiFit.c_m"]], "c_md() (dipy.reconst.qti.qtifit method)": [[167, "dipy.reconst.qti.QtiFit.c_md"]], "c_mu() (dipy.reconst.qti.qtifit method)": [[167, "dipy.reconst.qti.QtiFit.c_mu"]], "cache_clear() (dipy.reconst.cache.cache method)": [[167, "dipy.reconst.cache.Cache.cache_clear"]], "cache_get() (dipy.reconst.cache.cache method)": [[167, "dipy.reconst.cache.Cache.cache_get"]], "cache_set() (dipy.reconst.cache.cache method)": [[167, "dipy.reconst.cache.Cache.cache_set"]], "calculate_max_order() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.calculate_max_order"]], "carlson_rd() (in module dipy.reconst.dki)": [[167, "dipy.reconst.dki.carlson_rd"]], "carlson_rf() (in module dipy.reconst.dki)": [[167, "dipy.reconst.dki.carlson_rf"]], "cholesky_to_lower_triangular() (in module dipy.reconst.fwdti)": [[167, "dipy.reconst.fwdti.cholesky_to_lower_triangular"]], "cls_fit_dki() (in module dipy.reconst.dki)": [[167, "dipy.reconst.dki.cls_fit_dki"]], "coeff_of_determination() (in module dipy.reconst.cross_validation)": [[167, "dipy.reconst.cross_validation.coeff_of_determination"]], "color_fa() (dipy.reconst.dti.tensorfit method)": [[167, "dipy.reconst.dti.TensorFit.color_fa"]], "color_fa() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.color_fa"]], "combined_odf_iso() (dipy.reconst.rumba.rumbafit method)": [[167, "dipy.reconst.rumba.RumbaFit.combined_odf_iso"]], "convert_sh_from_legacy() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.convert_sh_from_legacy"]], "convert_sh_to_full_basis() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.convert_sh_to_full_basis"]], "convert_sh_to_legacy() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.convert_sh_to_legacy"]], "create_qspace() (in module dipy.reconst.dsi)": [[167, "dipy.reconst.dsi.create_qspace"]], "create_qtable() (in module dipy.reconst.dsi)": [[167, "dipy.reconst.dsi.create_qtable"]], "create_rspace() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.create_rspace"]], "create_rspace() (in module dipy.reconst.shore)": [[167, "dipy.reconst.shore.create_rspace"]], "create_rt_space_grid() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.create_rt_space_grid"]], "csdeconv() (in module dipy.reconst.csdeconv)": [[167, "dipy.reconst.csdeconv.csdeconv"]], "ct (dipy.reconst.cti.correlationtensorfit property)": [[167, "dipy.reconst.cti.CorrelationTensorFit.ct"]], "cti_design_matrix() (in module dipy.reconst.utils)": [[167, "dipy.reconst.utils.cti_design_matrix"]], "cti_prediction() (in module dipy.reconst.cti)": [[167, "dipy.reconst.cti.cti_prediction"]], "cvx_fit() (dipy.reconst.ivim.ivimmodelvp method)": [[167, "dipy.reconst.ivim.IvimModelVP.cvx_fit"]], "cvxpy_1x21_to_6x6() (in module dipy.reconst.qti)": [[167, "dipy.reconst.qti.cvxpy_1x21_to_6x6"]], "cvxpy_1x6_to_3x3() (in module dipy.reconst.qti)": [[167, "dipy.reconst.qti.cvxpy_1x6_to_3x3"]], "d_sq() (dipy.reconst.qti.qtifit method)": [[167, "dipy.reconst.qti.QtiFit.d_sq"]], "decompose_tensor() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.decompose_tensor"]], "delta() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.delta"]], "design_matrix() (dipy.reconst.sfm.sparsefasciclemodel method)": [[167, "dipy.reconst.sfm.SparseFascicleModel.design_matrix"]], "design_matrix() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.design_matrix"]], "design_matrix() (in module dipy.reconst.msdki)": [[167, "dipy.reconst.msdki.design_matrix"]], "design_matrix() (in module dipy.reconst.qti)": [[167, "dipy.reconst.qti.design_matrix"]], "design_matrix_spatial() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.design_matrix_spatial"]], "determinant() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.determinant"]], "deviatoric() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.deviatoric"]], "diffusion_components() (in module dipy.reconst.dki_micro)": [[167, "dipy.reconst.dki_micro.diffusion_components"]], "dipy.reconst": [[167, "module-dipy.reconst"]], "dipy.reconst.base": [[167, "module-dipy.reconst.base"]], "dipy.reconst.benchmarks": [[167, "module-dipy.reconst.benchmarks"]], "dipy.reconst.benchmarks.bench_bounding_box": [[167, "module-dipy.reconst.benchmarks.bench_bounding_box"]], "dipy.reconst.benchmarks.bench_csd": [[167, "module-dipy.reconst.benchmarks.bench_csd"]], "dipy.reconst.benchmarks.bench_peaks": [[167, "module-dipy.reconst.benchmarks.bench_peaks"]], "dipy.reconst.benchmarks.bench_squash": [[167, "module-dipy.reconst.benchmarks.bench_squash"]], "dipy.reconst.benchmarks.bench_vec_val_sum": [[167, "module-dipy.reconst.benchmarks.bench_vec_val_sum"]], "dipy.reconst.cache": [[167, "module-dipy.reconst.cache"]], "dipy.reconst.cross_validation": [[167, "module-dipy.reconst.cross_validation"]], "dipy.reconst.csdeconv": [[167, "module-dipy.reconst.csdeconv"]], "dipy.reconst.cti": [[167, "module-dipy.reconst.cti"]], "dipy.reconst.dki": [[167, "module-dipy.reconst.dki"]], "dipy.reconst.dki_micro": [[167, "module-dipy.reconst.dki_micro"]], "dipy.reconst.dsi": [[167, "module-dipy.reconst.dsi"]], "dipy.reconst.dti": [[167, "module-dipy.reconst.dti"]], "dipy.reconst.eudx_direction_getter": [[167, "module-dipy.reconst.eudx_direction_getter"]], "dipy.reconst.forecast": [[167, "module-dipy.reconst.forecast"]], "dipy.reconst.fwdti": [[167, "module-dipy.reconst.fwdti"]], "dipy.reconst.gqi": [[167, "module-dipy.reconst.gqi"]], "dipy.reconst.ivim": [[167, "module-dipy.reconst.ivim"]], "dipy.reconst.mapmri": [[167, "module-dipy.reconst.mapmri"]], "dipy.reconst.mcsd": [[167, "module-dipy.reconst.mcsd"]], "dipy.reconst.msdki": [[167, "module-dipy.reconst.msdki"]], "dipy.reconst.multi_voxel": [[167, "module-dipy.reconst.multi_voxel"]], "dipy.reconst.odf": [[167, "module-dipy.reconst.odf"]], "dipy.reconst.qtdmri": [[167, "module-dipy.reconst.qtdmri"]], "dipy.reconst.qti": [[167, "module-dipy.reconst.qti"]], "dipy.reconst.quick_squash": [[167, "module-dipy.reconst.quick_squash"]], "dipy.reconst.recspeed": [[167, "module-dipy.reconst.recspeed"]], "dipy.reconst.rumba": [[167, "module-dipy.reconst.rumba"]], "dipy.reconst.sfm": [[167, "module-dipy.reconst.sfm"]], "dipy.reconst.shm": [[167, "module-dipy.reconst.shm"]], "dipy.reconst.shore": [[167, "module-dipy.reconst.shore"]], "dipy.reconst.utils": [[167, "module-dipy.reconst.utils"]], "dipy.reconst.vec_val_sum": [[167, "module-dipy.reconst.vec_val_sum"]], "directional_diffusion() (in module dipy.reconst.dki)": [[167, "dipy.reconst.dki.directional_diffusion"]], "directional_diffusion_variance() (in module dipy.reconst.dki)": [[167, "dipy.reconst.dki.directional_diffusion_variance"]], "directional_kurtosis() (in module dipy.reconst.dki)": [[167, "dipy.reconst.dki.directional_kurtosis"]], "directions (dipy.reconst.dti.tensorfit property)": [[167, "dipy.reconst.dti.TensorFit.directions"]], "dki_design_matrix() (in module dipy.reconst.utils)": [[167, "dipy.reconst.utils.dki_design_matrix"]], "dki_prediction() (in module dipy.reconst.dki)": [[167, "dipy.reconst.dki.dki_prediction"]], "dkimicro_prediction() (in module dipy.reconst.dki_micro)": [[167, "dipy.reconst.dki_micro.dkimicro_prediction"]], "dpar (dipy.reconst.forecast.forecastfit property)": [[167, "dipy.reconst.forecast.ForecastFit.dpar"]], "dperp (dipy.reconst.forecast.forecastfit property)": [[167, "dipy.reconst.forecast.ForecastFit.dperp"]], "dtd_covariance() (in module dipy.reconst.qti)": [[167, "dipy.reconst.qti.dtd_covariance"]], "eig_from_lo_tri() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.eig_from_lo_tri"]], "elastic_crossvalidation() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.elastic_crossvalidation"]], "equatorial_maximum() (in module dipy.reconst.gqi)": [[167, "dipy.reconst.gqi.equatorial_maximum"]], "equatorial_zone_vertices() (in module dipy.reconst.gqi)": [[167, "dipy.reconst.gqi.equatorial_zone_vertices"]], "estimate_f_d_star() (dipy.reconst.ivim.ivimmodeltrr method)": [[167, "dipy.reconst.ivim.IvimModelTRR.estimate_f_D_star"]], "estimate_linear_fit() (dipy.reconst.ivim.ivimmodeltrr method)": [[167, "dipy.reconst.ivim.IvimModelTRR.estimate_linear_fit"]], "estimate_response() (in module dipy.reconst.csdeconv)": [[167, "dipy.reconst.csdeconv.estimate_response"]], "evals (dipy.reconst.dti.tensorfit property)": [[167, "dipy.reconst.dti.TensorFit.evals"]], "evecs (dipy.reconst.dti.tensorfit property)": [[167, "dipy.reconst.dti.TensorFit.evecs"]], "f (dipy.reconst.fwdti.freewatertensorfit property)": [[167, "dipy.reconst.fwdti.FreeWaterTensorFit.f"]], "f_d_star_error() (in module dipy.reconst.ivim)": [[167, "dipy.reconst.ivim.f_D_star_error"]], "f_d_star_prediction() (in module dipy.reconst.ivim)": [[167, "dipy.reconst.ivim.f_D_star_prediction"]], "f_csf() (dipy.reconst.rumba.rumbafit method)": [[167, "dipy.reconst.rumba.RumbaFit.f_csf"]], "f_gm() (dipy.reconst.rumba.rumbafit method)": [[167, "dipy.reconst.rumba.RumbaFit.f_gm"]], "f_iso() (dipy.reconst.rumba.rumbafit method)": [[167, "dipy.reconst.rumba.RumbaFit.f_iso"]], "f_wm() (dipy.reconst.rumba.rumbafit method)": [[167, "dipy.reconst.rumba.RumbaFit.f_wm"]], "fa() (dipy.reconst.dti.tensorfit method)": [[167, "dipy.reconst.dti.TensorFit.fa"]], "fa() (dipy.reconst.qti.qtifit method)": [[167, "dipy.reconst.qti.QtiFit.fa"]], "fa_trace_to_lambdas() (in module dipy.reconst.csdeconv)": [[167, "dipy.reconst.csdeconv.fa_trace_to_lambdas"]], "find_signal_means() (in module dipy.reconst.forecast)": [[167, "dipy.reconst.forecast.find_signal_means"]], "fit() (dipy.reconst.base.reconstmodel method)": [[167, "dipy.reconst.base.ReconstModel.fit"]], "fit() (dipy.reconst.csdeconv.constrainedsdtmodel method)": [[167, "dipy.reconst.csdeconv.ConstrainedSDTModel.fit"]], "fit() (dipy.reconst.csdeconv.constrainedsphericaldeconvmodel method)": [[167, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.fit"]], "fit() (dipy.reconst.cti.correlationtensormodel method)": [[167, "dipy.reconst.cti.CorrelationTensorModel.fit"]], "fit() (dipy.reconst.dki.diffusionkurtosismodel method)": [[167, "dipy.reconst.dki.DiffusionKurtosisModel.fit"]], "fit() (dipy.reconst.dki_micro.kurtosismicrostructuremodel method)": [[167, "dipy.reconst.dki_micro.KurtosisMicrostructureModel.fit"]], "fit() (dipy.reconst.dsi.diffusionspectrumdeconvmodel method)": [[167, "dipy.reconst.dsi.DiffusionSpectrumDeconvModel.fit"]], "fit() (dipy.reconst.dsi.diffusionspectrummodel method)": [[167, "dipy.reconst.dsi.DiffusionSpectrumModel.fit"]], "fit() (dipy.reconst.dti.tensormodel method)": [[167, "dipy.reconst.dti.TensorModel.fit"]], "fit() (dipy.reconst.forecast.forecastmodel method)": [[167, "dipy.reconst.forecast.ForecastModel.fit"]], "fit() (dipy.reconst.fwdti.freewatertensormodel method)": [[167, "dipy.reconst.fwdti.FreeWaterTensorModel.fit"]], "fit() (dipy.reconst.gqi.generalizedqsamplingmodel method)": [[167, "dipy.reconst.gqi.GeneralizedQSamplingModel.fit"]], "fit() (dipy.reconst.ivim.ivimmodeltrr method)": [[167, "dipy.reconst.ivim.IvimModelTRR.fit"]], "fit() (dipy.reconst.ivim.ivimmodelvp method)": [[167, "dipy.reconst.ivim.IvimModelVP.fit"]], "fit() (dipy.reconst.mapmri.mapmrimodel method)": [[167, "dipy.reconst.mapmri.MapmriModel.fit"]], "fit() (dipy.reconst.mcsd.multishelldeconvmodel method)": [[167, "dipy.reconst.mcsd.MultiShellDeconvModel.fit"]], "fit() (dipy.reconst.msdki.meandiffusionkurtosismodel method)": [[167, "dipy.reconst.msdki.MeanDiffusionKurtosisModel.fit"]], "fit() (dipy.reconst.odf.odfmodel method)": [[167, "dipy.reconst.odf.OdfModel.fit"]], "fit() (dipy.reconst.qtdmri.qtdmrimodel method)": [[167, "dipy.reconst.qtdmri.QtdmriModel.fit"]], "fit() (dipy.reconst.qti.qtimodel method)": [[167, "dipy.reconst.qti.QtiModel.fit"]], "fit() (dipy.reconst.sfm.exponentialisotropicmodel method)": [[167, "dipy.reconst.sfm.ExponentialIsotropicModel.fit"]], "fit() (dipy.reconst.sfm.isotropicmodel method)": [[167, "dipy.reconst.sfm.IsotropicModel.fit"]], "fit() (dipy.reconst.sfm.sparsefasciclemodel method)": [[167, "dipy.reconst.sfm.SparseFascicleModel.fit"]], "fit() (dipy.reconst.shm.qballbasemodel method)": [[167, "dipy.reconst.shm.QballBaseModel.fit"]], "fit() (dipy.reconst.shore.shoremodel method)": [[167, "dipy.reconst.shore.ShoreModel.fit"]], "fitted_signal() (dipy.reconst.mapmri.mapmrifit method)": [[167, "dipy.reconst.mapmri.MapmriFit.fitted_signal"]], "fitted_signal() (dipy.reconst.qtdmri.qtdmrifit method)": [[167, "dipy.reconst.qtdmri.QtdmriFit.fitted_signal"]], "fitted_signal() (dipy.reconst.shore.shorefit method)": [[167, "dipy.reconst.shore.ShoreFit.fitted_signal"]], "forecast_error_func() (in module dipy.reconst.forecast)": [[167, "dipy.reconst.forecast.forecast_error_func"]], "forecast_matrix() (in module dipy.reconst.forecast)": [[167, "dipy.reconst.forecast.forecast_matrix"]], "forward_sdeconv_mat() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.forward_sdeconv_mat"]], "forward_sdt_deconv_mat() (in module dipy.reconst.csdeconv)": [[167, "dipy.reconst.csdeconv.forward_sdt_deconv_mat"]], "fractional_anisotropy() (dipy.reconst.forecast.forecastfit method)": [[167, "dipy.reconst.forecast.ForecastFit.fractional_anisotropy"]], "fractional_anisotropy() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.fractional_anisotropy"]], "from_21x1_to_6x6() (in module dipy.reconst.qti)": [[167, "dipy.reconst.qti.from_21x1_to_6x6"]], "from_3x3_to_6x1() (in module dipy.reconst.qti)": [[167, "dipy.reconst.qti.from_3x3_to_6x1"]], "from_6x1_to_3x3() (in module dipy.reconst.qti)": [[167, "dipy.reconst.qti.from_6x1_to_3x3"]], "from_6x6_to_21x1() (in module dipy.reconst.qti)": [[167, "dipy.reconst.qti.from_6x6_to_21x1"]], "from_lower_triangular() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.from_lower_triangular"]], "from_qte_to_cti() (in module dipy.reconst.cti)": [[167, "dipy.reconst.cti.from_qte_to_cti"]], "fwdti_prediction() (in module dipy.reconst.fwdti)": [[167, "dipy.reconst.fwdti.fwdti_prediction"]], "ga() (dipy.reconst.dti.tensorfit method)": [[167, "dipy.reconst.dti.TensorFit.ga"]], "gcv_cost_function() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.gcv_cost_function"]], "gen_psf() (in module dipy.reconst.dsi)": [[167, "dipy.reconst.dsi.gen_PSF"]], "gen_dirac() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.gen_dirac"]], "generalized_crossvalidation() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.generalized_crossvalidation"]], "generalized_crossvalidation() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.generalized_crossvalidation"]], "generalized_crossvalidation_array() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.generalized_crossvalidation_array"]], "generate_kernel() (in module dipy.reconst.rumba)": [[167, "dipy.reconst.rumba.generate_kernel"]], "geodesic_anisotropy() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.geodesic_anisotropy"]], "gfa() (dipy.reconst.shm.sphharmfit method)": [[167, "dipy.reconst.shm.SphHarmFit.gfa"]], "gfa() (in module dipy.reconst.odf)": [[167, "dipy.reconst.odf.gfa"]], "half_to_full_qspace() (in module dipy.reconst.dsi)": [[167, "dipy.reconst.dsi.half_to_full_qspace"]], "hanning_filter() (in module dipy.reconst.dsi)": [[167, "dipy.reconst.dsi.hanning_filter"]], "hat() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.hat"]], "hindered_ad (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[167, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_ad"]], "hindered_evals (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[167, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_evals"]], "hindered_rd (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[167, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_rd"]], "initial_direction() (dipy.reconst.eudx_direction_getter.eudxdirectiongetter method)": [[167, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.initial_direction"]], "iso (dipy.reconst.mcsd.multishellresponse property)": [[167, "dipy.reconst.mcsd.MultiShellResponse.iso"]], "isotropic() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.isotropic"]], "isotropic_scale_factor() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.isotropic_scale_factor"]], "iter_fit_tensor() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.iter_fit_tensor"]], "ivim_mix_cost_one() (dipy.reconst.ivim.ivimmodelvp method)": [[167, "dipy.reconst.ivim.IvimModelVP.ivim_mix_cost_one"]], "ivim_model_selector() (in module dipy.reconst.ivim)": [[167, "dipy.reconst.ivim.ivim_model_selector"]], "ivim_prediction() (in module dipy.reconst.ivim)": [[167, "dipy.reconst.ivim.ivim_prediction"]], "k_bulk() (dipy.reconst.qti.qtifit method)": [[167, "dipy.reconst.qti.QtiFit.k_bulk"]], "k_mu() (dipy.reconst.qti.qtifit method)": [[167, "dipy.reconst.qti.QtiFit.k_mu"]], "k_shear() (dipy.reconst.qti.qtifit method)": [[167, "dipy.reconst.qti.QtiFit.k_shear"]], "kfa (dipy.reconst.dki.diffusionkurtosisfit property)": [[167, "dipy.reconst.dki.DiffusionKurtosisFit.kfa"]], "kfold_xval() (in module dipy.reconst.cross_validation)": [[167, "dipy.reconst.cross_validation.kfold_xval"]], "kmax() (dipy.reconst.dki.diffusionkurtosisfit method)": [[167, "dipy.reconst.dki.DiffusionKurtosisFit.kmax"]], "kt (dipy.reconst.dki.diffusionkurtosisfit property)": [[167, "dipy.reconst.dki.DiffusionKurtosisFit.kt"]], "kurtosis_fractional_anisotropy() (in module dipy.reconst.dki)": [[167, "dipy.reconst.dki.kurtosis_fractional_anisotropy"]], "kurtosis_maximum() (in module dipy.reconst.dki)": [[167, "dipy.reconst.dki.kurtosis_maximum"]], "l1_crossvalidation() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.l1_crossvalidation"]], "l_shore() (in module dipy.reconst.shore)": [[167, "dipy.reconst.shore.l_shore"]], "lazy_index() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.lazy_index"]], "lb_forecast() (in module dipy.reconst.forecast)": [[167, "dipy.reconst.forecast.lb_forecast"]], "lcr_matrix() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.lcr_matrix"]], "le_to_odf() (in module dipy.reconst.recspeed)": [[167, "dipy.reconst.recspeed.le_to_odf"]], "linearity() (dipy.reconst.dti.tensorfit method)": [[167, "dipy.reconst.dti.TensorFit.linearity"]], "linearity() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.linearity"]], "local_maxima() (in module dipy.reconst.recspeed)": [[167, "dipy.reconst.recspeed.local_maxima"]], "logger() (in module dipy.reconst.rumba)": [[167, "dipy.reconst.rumba.logger"]], "lower_triangular() (dipy.reconst.dti.tensorfit method)": [[167, "dipy.reconst.dti.TensorFit.lower_triangular"]], "lower_triangular() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.lower_triangular"]], "lower_triangular_to_cholesky() (in module dipy.reconst.fwdti)": [[167, "dipy.reconst.fwdti.lower_triangular_to_cholesky"]], "ls_fit_cti() (in module dipy.reconst.cti)": [[167, "dipy.reconst.cti.ls_fit_cti"]], "ls_fit_dki() (in module dipy.reconst.dki)": [[167, "dipy.reconst.dki.ls_fit_dki"]], "map_laplace_s() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.map_laplace_s"]], "map_laplace_t() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.map_laplace_t"]], "map_laplace_u() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.map_laplace_u"]], "mapmri_r (dipy.reconst.mapmri.mapmrifit property)": [[167, "dipy.reconst.mapmri.MapmriFit.mapmri_R"]], "mapmri_stu_reg_matrices() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.mapmri_STU_reg_matrices"]], "mapmri_coeff (dipy.reconst.mapmri.mapmrifit property)": [[167, "dipy.reconst.mapmri.MapmriFit.mapmri_coeff"]], "mapmri_index_matrix() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.mapmri_index_matrix"]], "mapmri_isotropic_k_mu_dependent() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.mapmri_isotropic_K_mu_dependent"]], "mapmri_isotropic_k_mu_independent() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.mapmri_isotropic_K_mu_independent"]], "mapmri_isotropic_m_mu_dependent() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.mapmri_isotropic_M_mu_dependent"]], "mapmri_isotropic_m_mu_independent() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.mapmri_isotropic_M_mu_independent"]], "mapmri_isotropic_index_matrix() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.mapmri_isotropic_index_matrix"]], "mapmri_isotropic_laplacian_reg_matrix() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.mapmri_isotropic_laplacian_reg_matrix"]], "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.mapmri_isotropic_laplacian_reg_matrix_from_index_matrix"]], "mapmri_isotropic_odf_matrix() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.mapmri_isotropic_odf_matrix"]], "mapmri_isotropic_odf_sh_matrix() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.mapmri_isotropic_odf_sh_matrix"]], "mapmri_isotropic_phi_matrix() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.mapmri_isotropic_phi_matrix"]], "mapmri_isotropic_psi_matrix() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.mapmri_isotropic_psi_matrix"]], "mapmri_isotropic_radial_pdf_basis() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.mapmri_isotropic_radial_pdf_basis"]], "mapmri_isotropic_radial_signal_basis() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.mapmri_isotropic_radial_signal_basis"]], "mapmri_laplacian_reg_matrix() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.mapmri_laplacian_reg_matrix"]], "mapmri_mu (dipy.reconst.mapmri.mapmrifit property)": [[167, "dipy.reconst.mapmri.MapmriFit.mapmri_mu"]], "mapmri_odf_matrix() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.mapmri_odf_matrix"]], "mapmri_phi_1d() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.mapmri_phi_1d"]], "mapmri_phi_matrix() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.mapmri_phi_matrix"]], "mapmri_psi_1d() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.mapmri_psi_1d"]], "mapmri_psi_matrix() (in module dipy.reconst.mapmri)": [[167, "dipy.reconst.mapmri.mapmri_psi_matrix"]], "mask_for_response_msmt() (in module dipy.reconst.mcsd)": [[167, "dipy.reconst.mcsd.mask_for_response_msmt"]], "mask_for_response_ssst() (in module dipy.reconst.csdeconv)": [[167, "dipy.reconst.csdeconv.mask_for_response_ssst"]], "max (dipy.reconst.shm.csaodfmodel attribute)": [[167, "dipy.reconst.shm.CsaOdfModel.max"]], "mbessel_ratio() (in module dipy.reconst.rumba)": [[167, "dipy.reconst.rumba.mbessel_ratio"]], "md() (dipy.reconst.dti.tensorfit method)": [[167, "dipy.reconst.dti.TensorFit.md"]], "md() (dipy.reconst.qti.qtifit method)": [[167, "dipy.reconst.qti.QtiFit.md"]], "mean_d_sq() (dipy.reconst.qti.qtifit method)": [[167, "dipy.reconst.qti.QtiFit.mean_d_sq"]], "mean_diffusivity() (dipy.reconst.forecast.forecastfit method)": [[167, "dipy.reconst.forecast.ForecastFit.mean_diffusivity"]], "mean_diffusivity() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.mean_diffusivity"]], "mean_kurtosis() (in module dipy.reconst.dki)": [[167, "dipy.reconst.dki.mean_kurtosis"]], "mean_kurtosis_tensor() (in module dipy.reconst.dki)": [[167, "dipy.reconst.dki.mean_kurtosis_tensor"]], "mean_signal_bvalue() (in module dipy.reconst.msdki)": [[167, "dipy.reconst.msdki.mean_signal_bvalue"]], "min (dipy.reconst.shm.csaodfmodel attribute)": [[167, "dipy.reconst.shm.CsaOdfModel.min"]], "minmax_normalize() (in module dipy.reconst.odf)": [[167, "dipy.reconst.odf.minmax_normalize"]], "mk() (dipy.reconst.dki.diffusionkurtosisfit method)": [[167, "dipy.reconst.dki.DiffusionKurtosisFit.mk"]], "mk() (dipy.reconst.qti.qtifit method)": [[167, "dipy.reconst.qti.QtiFit.mk"]], "mkt() (dipy.reconst.dki.diffusionkurtosisfit method)": [[167, "dipy.reconst.dki.DiffusionKurtosisFit.mkt"]], "mode() (dipy.reconst.dti.tensorfit method)": [[167, "dipy.reconst.dti.TensorFit.mode"]], "mode() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.mode"]], "msd() (dipy.reconst.mapmri.mapmrifit method)": [[167, "dipy.reconst.mapmri.MapmriFit.msd"]], "msd() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[167, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.msd"]], "msd() (dipy.reconst.qtdmri.qtdmrifit method)": [[167, "dipy.reconst.qtdmri.QtdmriFit.msd"]], "msd() (dipy.reconst.shore.shorefit method)": [[167, "dipy.reconst.shore.ShoreFit.msd"]], "msd_discrete() (dipy.reconst.dsi.diffusionspectrumfit method)": [[167, "dipy.reconst.dsi.DiffusionSpectrumFit.msd_discrete"]], "msdki_prediction() (in module dipy.reconst.msdki)": [[167, "dipy.reconst.msdki.msdki_prediction"]], "msk() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[167, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.msk"]], "msk_from_awf() (in module dipy.reconst.msdki)": [[167, "dipy.reconst.msdki.msk_from_awf"]], "multi_fit() (dipy.reconst.dki.diffusionkurtosismodel method)": [[167, "dipy.reconst.dki.DiffusionKurtosisModel.multi_fit"]], "multi_gaussian_k_from_c() (in module dipy.reconst.cti)": [[167, "dipy.reconst.cti.multi_gaussian_k_from_c"]], "multi_shell_fiber_response() (in module dipy.reconst.mcsd)": [[167, "dipy.reconst.mcsd.multi_shell_fiber_response"]], "multi_tissue_basis() (in module dipy.reconst.mcsd)": [[167, "dipy.reconst.mcsd.multi_tissue_basis"]], "multi_voxel_fit() (in module dipy.reconst.multi_voxel)": [[167, "dipy.reconst.multi_voxel.multi_voxel_fit"]], "n_shore() (in module dipy.reconst.shore)": [[167, "dipy.reconst.shore.n_shore"]], "ng() (dipy.reconst.mapmri.mapmrifit method)": [[167, "dipy.reconst.mapmri.MapmriFit.ng"]], "ng_parallel() (dipy.reconst.mapmri.mapmrifit method)": [[167, "dipy.reconst.mapmri.MapmriFit.ng_parallel"]], "ng_perpendicular() (dipy.reconst.mapmri.mapmrifit method)": [[167, "dipy.reconst.mapmri.MapmriFit.ng_perpendicular"]], "nlls_cost() (dipy.reconst.ivim.ivimmodelvp method)": [[167, "dipy.reconst.ivim.IvimModelVP.nlls_cost"]], "nlls_fit_tensor() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.nlls_fit_tensor"]], "nls_fit_tensor() (in module dipy.reconst.fwdti)": [[167, "dipy.reconst.fwdti.nls_fit_tensor"]], "nls_iter() (in module dipy.reconst.fwdti)": [[167, "dipy.reconst.fwdti.nls_iter"]], "norm() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.norm"]], "norm_of_laplacian_signal() (dipy.reconst.mapmri.mapmrifit method)": [[167, "dipy.reconst.mapmri.MapmriFit.norm_of_laplacian_signal"]], "norm_of_laplacian_signal() (dipy.reconst.qtdmri.qtdmrifit method)": [[167, "dipy.reconst.qtdmri.QtdmriFit.norm_of_laplacian_signal"]], "normalize_data() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.normalize_data"]], "normalize_qa() (in module dipy.reconst.gqi)": [[167, "dipy.reconst.gqi.normalize_qa"]], "npa() (in module dipy.reconst.gqi)": [[167, "dipy.reconst.gqi.npa"]], "num_grad() (in module dipy.reconst.benchmarks.bench_csd)": [[167, "dipy.reconst.benchmarks.bench_csd.num_grad"]], "odf() (dipy.reconst.dsi.diffusionspectrumfit method)": [[167, "dipy.reconst.dsi.DiffusionSpectrumFit.odf"]], "odf() (dipy.reconst.dti.tensorfit method)": [[167, "dipy.reconst.dti.TensorFit.odf"]], "odf() (dipy.reconst.forecast.forecastfit method)": [[167, "dipy.reconst.forecast.ForecastFit.odf"]], "odf() (dipy.reconst.gqi.generalizedqsamplingfit method)": [[167, "dipy.reconst.gqi.GeneralizedQSamplingFit.odf"]], "odf() (dipy.reconst.mapmri.mapmrifit method)": [[167, "dipy.reconst.mapmri.MapmriFit.odf"]], "odf() (dipy.reconst.odf.odffit method)": [[167, "dipy.reconst.odf.OdfFit.odf"]], "odf() (dipy.reconst.qtdmri.qtdmrifit method)": [[167, "dipy.reconst.qtdmri.QtdmriFit.odf"]], "odf() (dipy.reconst.rumba.rumbafit method)": [[167, "dipy.reconst.rumba.RumbaFit.odf"]], "odf() (dipy.reconst.sfm.sparsefasciclefit method)": [[167, "dipy.reconst.sfm.SparseFascicleFit.odf"]], "odf() (dipy.reconst.shm.sphharmfit method)": [[167, "dipy.reconst.shm.SphHarmFit.odf"]], "odf() (dipy.reconst.shore.shorefit method)": [[167, "dipy.reconst.shore.ShoreFit.odf"]], "odf_deconv() (in module dipy.reconst.csdeconv)": [[167, "dipy.reconst.csdeconv.odf_deconv"]], "odf_sh() (dipy.reconst.mapmri.mapmrifit method)": [[167, "dipy.reconst.mapmri.MapmriFit.odf_sh"]], "odf_sh() (dipy.reconst.qtdmri.qtdmrifit method)": [[167, "dipy.reconst.qtdmri.QtdmriFit.odf_sh"]], "odf_sh() (dipy.reconst.shore.shorefit method)": [[167, "dipy.reconst.shore.ShoreFit.odf_sh"]], "odf_sh_to_sharp() (in module dipy.reconst.csdeconv)": [[167, "dipy.reconst.csdeconv.odf_sh_to_sharp"]], "odf_sum() (in module dipy.reconst.gqi)": [[167, "dipy.reconst.gqi.odf_sum"]], "old_squash() (in module dipy.reconst.benchmarks.bench_squash)": [[167, "dipy.reconst.benchmarks.bench_squash.old_squash"]], "ols_fit_tensor() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.ols_fit_tensor"]], "on_sphere() (dipy.reconst.csdeconv.axsymshresponse method)": [[167, "dipy.reconst.csdeconv.AxSymShResponse.on_sphere"]], "order_from_ncoef() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.order_from_ncoef"]], "params_to_cti_params() (in module dipy.reconst.cti)": [[167, "dipy.reconst.cti.params_to_cti_params"]], "params_to_dki_params() (in module dipy.reconst.dki)": [[167, "dipy.reconst.dki.params_to_dki_params"]], "part1_reg_matrix_tau() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.part1_reg_matrix_tau"]], "part23_iso_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.part23_iso_reg_matrix_q"]], "part23_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.part23_reg_matrix_q"]], "part23_reg_matrix_tau() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.part23_reg_matrix_tau"]], "part4_iso_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.part4_iso_reg_matrix_q"]], "part4_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.part4_reg_matrix_q"]], "part4_reg_matrix_tau() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.part4_reg_matrix_tau"]], "patch_maximum() (in module dipy.reconst.gqi)": [[167, "dipy.reconst.gqi.patch_maximum"]], "patch_sum() (in module dipy.reconst.gqi)": [[167, "dipy.reconst.gqi.patch_sum"]], "patch_vertices() (in module dipy.reconst.gqi)": [[167, "dipy.reconst.gqi.patch_vertices"]], "pdf() (dipy.reconst.dsi.diffusionspectrumdeconvfit method)": [[167, "dipy.reconst.dsi.DiffusionSpectrumDeconvFit.pdf"]], "pdf() (dipy.reconst.dsi.diffusionspectrumfit method)": [[167, "dipy.reconst.dsi.DiffusionSpectrumFit.pdf"]], "pdf() (dipy.reconst.mapmri.mapmrifit method)": [[167, "dipy.reconst.mapmri.MapmriFit.pdf"]], "pdf() (dipy.reconst.qtdmri.qtdmrifit method)": [[167, "dipy.reconst.qtdmri.QtdmriFit.pdf"]], "pdf() (dipy.reconst.shore.shorefit method)": [[167, "dipy.reconst.shore.ShoreFit.pdf"]], "pdf_grid() (dipy.reconst.shore.shorefit method)": [[167, "dipy.reconst.shore.ShoreFit.pdf_grid"]], "pdf_interp_coords() (in module dipy.reconst.dsi)": [[167, "dipy.reconst.dsi.pdf_interp_coords"]], "pdf_odf() (in module dipy.reconst.dsi)": [[167, "dipy.reconst.dsi.pdf_odf"]], "perfusion_fraction (dipy.reconst.ivim.ivimfit property)": [[167, "dipy.reconst.ivim.IvimFit.perfusion_fraction"]], "phi() (dipy.reconst.ivim.ivimmodelvp method)": [[167, "dipy.reconst.ivim.IvimModelVP.phi"]], "planarity() (dipy.reconst.dti.tensorfit method)": [[167, "dipy.reconst.dti.TensorFit.planarity"]], "planarity() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.planarity"]], "polar_zone_vertices() (in module dipy.reconst.gqi)": [[167, "dipy.reconst.gqi.polar_zone_vertices"]], "predict() (dipy.reconst.csdeconv.constrainedsphericaldeconvmodel method)": [[167, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.predict"]], "predict() (dipy.reconst.cti.correlationtensorfit method)": [[167, "dipy.reconst.cti.CorrelationTensorFit.predict"]], "predict() (dipy.reconst.cti.correlationtensormodel method)": [[167, "dipy.reconst.cti.CorrelationTensorModel.predict"]], "predict() (dipy.reconst.dki.diffusionkurtosisfit method)": [[167, "dipy.reconst.dki.DiffusionKurtosisFit.predict"]], "predict() (dipy.reconst.dki.diffusionkurtosismodel method)": [[167, "dipy.reconst.dki.DiffusionKurtosisModel.predict"]], "predict() (dipy.reconst.dki_micro.kurtosismicrostructuralfit method)": [[167, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.predict"]], "predict() (dipy.reconst.dki_micro.kurtosismicrostructuremodel method)": [[167, "dipy.reconst.dki_micro.KurtosisMicrostructureModel.predict"]], "predict() (dipy.reconst.dti.tensorfit method)": [[167, "dipy.reconst.dti.TensorFit.predict"]], "predict() (dipy.reconst.dti.tensormodel method)": [[167, "dipy.reconst.dti.TensorModel.predict"]], "predict() (dipy.reconst.forecast.forecastfit method)": [[167, "dipy.reconst.forecast.ForecastFit.predict"]], "predict() (dipy.reconst.fwdti.freewatertensorfit method)": [[167, "dipy.reconst.fwdti.FreeWaterTensorFit.predict"]], "predict() (dipy.reconst.fwdti.freewatertensormodel method)": [[167, "dipy.reconst.fwdti.FreeWaterTensorModel.predict"]], "predict() (dipy.reconst.ivim.ivimfit method)": [[167, "dipy.reconst.ivim.IvimFit.predict"]], "predict() (dipy.reconst.ivim.ivimmodeltrr method)": [[167, "dipy.reconst.ivim.IvimModelTRR.predict"]], "predict() (dipy.reconst.mapmri.mapmrifit method)": [[167, "dipy.reconst.mapmri.MapmriFit.predict"]], "predict() (dipy.reconst.mcsd.multishelldeconvmodel method)": [[167, "dipy.reconst.mcsd.MultiShellDeconvModel.predict"]], "predict() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[167, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.predict"]], "predict() (dipy.reconst.msdki.meandiffusionkurtosismodel method)": [[167, "dipy.reconst.msdki.MeanDiffusionKurtosisModel.predict"]], "predict() (dipy.reconst.multi_voxel.multivoxelfit method)": [[167, "dipy.reconst.multi_voxel.MultiVoxelFit.predict"]], "predict() (dipy.reconst.qtdmri.qtdmrifit method)": [[167, "dipy.reconst.qtdmri.QtdmriFit.predict"]], "predict() (dipy.reconst.qti.qtifit method)": [[167, "dipy.reconst.qti.QtiFit.predict"]], "predict() (dipy.reconst.qti.qtimodel method)": [[167, "dipy.reconst.qti.QtiModel.predict"]], "predict() (dipy.reconst.rumba.rumbafit method)": [[167, "dipy.reconst.rumba.RumbaFit.predict"]], "predict() (dipy.reconst.sfm.exponentialisotropicfit method)": [[167, "dipy.reconst.sfm.ExponentialIsotropicFit.predict"]], "predict() (dipy.reconst.sfm.isotropicfit method)": [[167, "dipy.reconst.sfm.IsotropicFit.predict"]], "predict() (dipy.reconst.sfm.sparsefasciclefit method)": [[167, "dipy.reconst.sfm.SparseFascicleFit.predict"]], "predict() (dipy.reconst.shm.sphharmfit method)": [[167, "dipy.reconst.shm.SphHarmFit.predict"]], "proc_reco_args() (in module dipy.reconst.recspeed)": [[167, "dipy.reconst.recspeed.proc_reco_args"]], "project_hemisph_bvecs() (in module dipy.reconst.dsi)": [[167, "dipy.reconst.dsi.project_hemisph_bvecs"]], "psi_l() (in module dipy.reconst.forecast)": [[167, "dipy.reconst.forecast.psi_l"]], "qa_thr (dipy.reconst.eudx_direction_getter.eudxdirectiongetter attribute)": [[167, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.qa_thr"]], "qiv() (dipy.reconst.mapmri.mapmrifit method)": [[167, "dipy.reconst.mapmri.MapmriFit.qiv"]], "qiv() (dipy.reconst.qtdmri.qtdmrifit method)": [[167, "dipy.reconst.qtdmri.QtdmriFit.qiv"]], "qtdmri_anisotropic_scaling() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.qtdmri_anisotropic_scaling"]], "qtdmri_eap_matrix() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.qtdmri_eap_matrix"]], "qtdmri_eap_matrix_() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.qtdmri_eap_matrix_"]], "qtdmri_index_matrix() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.qtdmri_index_matrix"]], "qtdmri_isotropic_eap_matrix() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.qtdmri_isotropic_eap_matrix"]], "qtdmri_isotropic_eap_matrix_() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.qtdmri_isotropic_eap_matrix_"]], "qtdmri_isotropic_index_matrix() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.qtdmri_isotropic_index_matrix"]], "qtdmri_isotropic_laplacian_reg_matrix() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.qtdmri_isotropic_laplacian_reg_matrix"]], "qtdmri_isotropic_scaling() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.qtdmri_isotropic_scaling"]], "qtdmri_isotropic_signal_matrix() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.qtdmri_isotropic_signal_matrix"]], "qtdmri_isotropic_signal_matrix_() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.qtdmri_isotropic_signal_matrix_"]], "qtdmri_isotropic_to_mapmri_matrix() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.qtdmri_isotropic_to_mapmri_matrix"]], "qtdmri_laplacian_reg_matrix() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.qtdmri_laplacian_reg_matrix"]], "qtdmri_mapmri_isotropic_normalization() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.qtdmri_mapmri_isotropic_normalization"]], "qtdmri_mapmri_normalization() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.qtdmri_mapmri_normalization"]], "qtdmri_number_of_coefficients() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.qtdmri_number_of_coefficients"]], "qtdmri_signal_matrix() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.qtdmri_signal_matrix"]], "qtdmri_signal_matrix_() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.qtdmri_signal_matrix_"]], "qtdmri_temporal_normalization() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.qtdmri_temporal_normalization"]], "qtdmri_to_mapmri_coef() (dipy.reconst.qtdmri.qtdmrifit method)": [[167, "dipy.reconst.qtdmri.QtdmriFit.qtdmri_to_mapmri_coef"]], "qtdmri_to_mapmri_matrix() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.qtdmri_to_mapmri_matrix"]], "qti_signal() (in module dipy.reconst.qti)": [[167, "dipy.reconst.qti.qti_signal"]], "quadratic_form (dipy.reconst.dti.tensorfit property)": [[167, "dipy.reconst.dti.TensorFit.quadratic_form"]], "quantize_evecs() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.quantize_evecs"]], "quick_squash() (in module dipy.reconst.quick_squash)": [[167, "dipy.reconst.quick_squash.quick_squash"]], "radial_basis_eap_opt() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.radial_basis_EAP_opt"]], "radial_basis_opt() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.radial_basis_opt"]], "radial_diffusivity() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.radial_diffusivity"]], "radial_kurtosis() (in module dipy.reconst.dki)": [[167, "dipy.reconst.dki.radial_kurtosis"]], "rd() (dipy.reconst.dti.tensorfit method)": [[167, "dipy.reconst.dti.TensorFit.rd"]], "real_sh_descoteaux() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.real_sh_descoteaux"]], "real_sh_descoteaux_from_index() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.real_sh_descoteaux_from_index"]], "real_sh_tournier() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.real_sh_tournier"]], "real_sh_tournier_from_index() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.real_sh_tournier_from_index"]], "real_sph_harm() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.real_sph_harm"]], "real_sym_sh_basis() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.real_sym_sh_basis"]], "real_sym_sh_mrtrix() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.real_sym_sh_mrtrix"]], "recursive_response() (in module dipy.reconst.csdeconv)": [[167, "dipy.reconst.csdeconv.recursive_response"]], "reduce() (in module dipy.reconst.quick_squash)": [[167, "dipy.reconst.quick_squash.reduce"]], "remove_similar_vertices() (in module dipy.reconst.recspeed)": [[167, "dipy.reconst.recspeed.remove_similar_vertices"]], "response_from_mask() (in module dipy.reconst.csdeconv)": [[167, "dipy.reconst.csdeconv.response_from_mask"]], "response_from_mask_msmt() (in module dipy.reconst.mcsd)": [[167, "dipy.reconst.mcsd.response_from_mask_msmt"]], "response_from_mask_ssst() (in module dipy.reconst.csdeconv)": [[167, "dipy.reconst.csdeconv.response_from_mask_ssst"]], "restore_fit_tensor() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.restore_fit_tensor"]], "restricted_evals (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[167, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.restricted_evals"]], "rho_matrix() (in module dipy.reconst.forecast)": [[167, "dipy.reconst.forecast.rho_matrix"]], "rk() (dipy.reconst.dki.diffusionkurtosisfit method)": [[167, "dipy.reconst.dki.DiffusionKurtosisFit.rk"]], "rtap() (dipy.reconst.mapmri.mapmrifit method)": [[167, "dipy.reconst.mapmri.MapmriFit.rtap"]], "rtap() (dipy.reconst.qtdmri.qtdmrifit method)": [[167, "dipy.reconst.qtdmri.QtdmriFit.rtap"]], "rtop() (dipy.reconst.mapmri.mapmrifit method)": [[167, "dipy.reconst.mapmri.MapmriFit.rtop"]], "rtop() (dipy.reconst.qtdmri.qtdmrifit method)": [[167, "dipy.reconst.qtdmri.QtdmriFit.rtop"]], "rtop_pdf() (dipy.reconst.dsi.diffusionspectrumfit method)": [[167, "dipy.reconst.dsi.DiffusionSpectrumFit.rtop_pdf"]], "rtop_pdf() (dipy.reconst.shore.shorefit method)": [[167, "dipy.reconst.shore.ShoreFit.rtop_pdf"]], "rtop_signal() (dipy.reconst.dsi.diffusionspectrumfit method)": [[167, "dipy.reconst.dsi.DiffusionSpectrumFit.rtop_signal"]], "rtop_signal() (dipy.reconst.shore.shorefit method)": [[167, "dipy.reconst.shore.ShoreFit.rtop_signal"]], "rtpp() (dipy.reconst.mapmri.mapmrifit method)": [[167, "dipy.reconst.mapmri.MapmriFit.rtpp"]], "rtpp() (dipy.reconst.qtdmri.qtdmrifit method)": [[167, "dipy.reconst.qtdmri.QtdmriFit.rtpp"]], "rumba_deconv() (in module dipy.reconst.rumba)": [[167, "dipy.reconst.rumba.rumba_deconv"]], "rumba_deconv_global() (in module dipy.reconst.rumba)": [[167, "dipy.reconst.rumba.rumba_deconv_global"]], "sampling_matrix() (dipy.reconst.shm.sphharmmodel method)": [[167, "dipy.reconst.shm.SphHarmModel.sampling_matrix"]], "search_descending() (in module dipy.reconst.recspeed)": [[167, "dipy.reconst.recspeed.search_descending"]], "sf_to_sh() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.sf_to_sh"]], "sfm_design_matrix() (in module dipy.reconst.sfm)": [[167, "dipy.reconst.sfm.sfm_design_matrix"]], "sh_coeff (dipy.reconst.forecast.forecastfit property)": [[167, "dipy.reconst.forecast.ForecastFit.sh_coeff"]], "sh_to_rh() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.sh_to_rh"]], "sh_to_sf() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.sh_to_sf"]], "sh_to_sf_matrix() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.sh_to_sf_matrix"]], "shape (dipy.reconst.dti.tensorfit property)": [[167, "dipy.reconst.dti.TensorFit.shape"]], "shape (dipy.reconst.ivim.ivimfit property)": [[167, "dipy.reconst.ivim.IvimFit.shape"]], "shape (dipy.reconst.multi_voxel.multivoxelfit property)": [[167, "dipy.reconst.multi_voxel.MultiVoxelFit.shape"]], "shape (dipy.reconst.shm.sphharmfit property)": [[167, "dipy.reconst.shm.SphHarmFit.shape"]], "shm_coeff (dipy.reconst.mcsd.msdeconvfit property)": [[167, "dipy.reconst.mcsd.MSDeconvFit.shm_coeff"]], "shm_coeff (dipy.reconst.shm.sphharmfit property)": [[167, "dipy.reconst.shm.SphHarmFit.shm_coeff"]], "shore_coeff (dipy.reconst.shore.shorefit property)": [[167, "dipy.reconst.shore.ShoreFit.shore_coeff"]], "shore_indices() (in module dipy.reconst.shore)": [[167, "dipy.reconst.shore.shore_indices"]], "shore_matrix() (in module dipy.reconst.shore)": [[167, "dipy.reconst.shore.shore_matrix"]], "shore_matrix_odf() (in module dipy.reconst.shore)": [[167, "dipy.reconst.shore.shore_matrix_odf"]], "shore_matrix_pdf() (in module dipy.reconst.shore)": [[167, "dipy.reconst.shore.shore_matrix_pdf"]], "shore_order() (in module dipy.reconst.shore)": [[167, "dipy.reconst.shore.shore_order"]], "smooth_pinv() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.smooth_pinv"]], "smt2di() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[167, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.smt2di"]], "smt2f() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[167, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.smt2f"]], "smt2ufa() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[167, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.smt2uFA"]], "solve_qp() (in module dipy.reconst.mcsd)": [[167, "dipy.reconst.mcsd.solve_qp"]], "sparsity_abs() (dipy.reconst.qtdmri.qtdmrifit method)": [[167, "dipy.reconst.qtdmri.QtdmriFit.sparsity_abs"]], "sparsity_density() (dipy.reconst.qtdmri.qtdmrifit method)": [[167, "dipy.reconst.qtdmri.QtdmriFit.sparsity_density"]], "sph_harm_ind_list() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.sph_harm_ind_list"]], "spherical_harmonics() (in module dipy.reconst.shm)": [[167, "dipy.reconst.shm.spherical_harmonics"]], "sphericity() (dipy.reconst.dti.tensorfit method)": [[167, "dipy.reconst.dti.TensorFit.sphericity"]], "sphericity() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.sphericity"]], "split_cti_params() (in module dipy.reconst.cti)": [[167, "dipy.reconst.cti.split_cti_params"]], "split_dki_param() (in module dipy.reconst.dki)": [[167, "dipy.reconst.dki.split_dki_param"]], "squared_radial_component() (in module dipy.reconst.gqi)": [[167, "dipy.reconst.gqi.squared_radial_component"]], "stoc_search_cost() (dipy.reconst.ivim.ivimmodelvp method)": [[167, "dipy.reconst.ivim.IvimModelVP.stoc_search_cost"]], "sum_on_blocks_1d() (in module dipy.reconst.recspeed)": [[167, "dipy.reconst.recspeed.sum_on_blocks_1d"]], "temporal_basis() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.temporal_basis"]], "tensor_prediction() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.tensor_prediction"]], "threshold_propagator() (in module dipy.reconst.dsi)": [[167, "dipy.reconst.dsi.threshold_propagator"]], "tortuosity (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[167, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.tortuosity"]], "tortuosity() (in module dipy.reconst.dki_micro)": [[167, "dipy.reconst.dki_micro.tortuosity"]], "total_weight (dipy.reconst.eudx_direction_getter.eudxdirectiongetter attribute)": [[167, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.total_weight"]], "trace() (dipy.reconst.dti.tensorfit method)": [[167, "dipy.reconst.dti.TensorFit.trace"]], "trace() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.trace"]], "triple_odf_maxima() (in module dipy.reconst.gqi)": [[167, "dipy.reconst.gqi.triple_odf_maxima"]], "ufa() (dipy.reconst.qti.qtifit method)": [[167, "dipy.reconst.qti.QtiFit.ufa"]], "upper_hemi_map() (in module dipy.reconst.gqi)": [[167, "dipy.reconst.gqi.upper_hemi_map"]], "v_iso() (dipy.reconst.qti.qtifit method)": [[167, "dipy.reconst.qti.QtiFit.v_iso"]], "v_md() (dipy.reconst.qti.qtifit method)": [[167, "dipy.reconst.qti.QtiFit.v_md"]], "v_shear() (dipy.reconst.qti.qtifit method)": [[167, "dipy.reconst.qti.QtiFit.v_shear"]], "vec_val_vect() (in module dipy.reconst.vec_val_sum)": [[167, "dipy.reconst.vec_val_sum.vec_val_vect"]], "visualise_gradient_table_g_delta_rainbow() (in module dipy.reconst.qtdmri)": [[167, "dipy.reconst.qtdmri.visualise_gradient_table_G_Delta_rainbow"]], "volume_fractions (dipy.reconst.mcsd.msdeconvfit property)": [[167, "dipy.reconst.mcsd.MSDeconvFit.volume_fractions"]], "wls_fit_msdki() (in module dipy.reconst.msdki)": [[167, "dipy.reconst.msdki.wls_fit_msdki"]], "wls_fit_tensor() (in module dipy.reconst.dti)": [[167, "dipy.reconst.dti.wls_fit_tensor"]], "wls_fit_tensor() (in module dipy.reconst.fwdti)": [[167, "dipy.reconst.fwdti.wls_fit_tensor"]], "wls_iter() (in module dipy.reconst.fwdti)": [[167, "dipy.reconst.fwdti.wls_iter"]], "x_and_f_to_x_f() (dipy.reconst.ivim.ivimmodelvp method)": [[167, "dipy.reconst.ivim.IvimModelVP.x_and_f_to_x_f"]], "x_f_to_x_and_f() (dipy.reconst.ivim.ivimmodelvp method)": [[167, "dipy.reconst.ivim.IvimModelVP.x_f_to_x_and_f"]], "arclengthfeature (class in dipy.segment.featurespeed)": [[168, "dipy.segment.featurespeed.ArcLengthFeature"]], "averagepointwiseeuclideanmetric (class in dipy.segment.metricspeed)": [[168, "dipy.segment.metricspeed.AveragePointwiseEuclideanMetric"]], "centerofmassfeature (class in dipy.segment.featurespeed)": [[168, "dipy.segment.featurespeed.CenterOfMassFeature"]], "cluster (class in dipy.segment.clustering)": [[168, "dipy.segment.clustering.Cluster"]], "clustercentroid (class in dipy.segment.clustering)": [[168, "dipy.segment.clustering.ClusterCentroid"]], "clustercentroid (class in dipy.segment.clustering_algorithms)": [[168, "dipy.segment.clustering_algorithms.ClusterCentroid"]], "clustercentroid (class in dipy.segment.clusteringspeed)": [[168, "dipy.segment.clusteringspeed.ClusterCentroid"]], "clustermap (class in dipy.segment.clustering)": [[168, "dipy.segment.clustering.ClusterMap"]], "clustermapcentroid (class in dipy.segment.clustering)": [[168, "dipy.segment.clustering.ClusterMapCentroid"]], "clustermapcentroid (class in dipy.segment.clustering_algorithms)": [[168, "dipy.segment.clustering_algorithms.ClusterMapCentroid"]], "clustermapcentroid (class in dipy.segment.clusteringspeed)": [[168, "dipy.segment.clusteringspeed.ClusterMapCentroid"]], "clustering (class in dipy.segment.clustering)": [[168, "dipy.segment.clustering.Clustering"]], "clusters (class in dipy.segment.clusteringspeed)": [[168, "dipy.segment.clusteringspeed.Clusters"]], "clusterscentroid (class in dipy.segment.clusteringspeed)": [[168, "dipy.segment.clusteringspeed.ClustersCentroid"]], "constantobservationmodel (class in dipy.segment.mrf)": [[168, "dipy.segment.mrf.ConstantObservationModel"]], "cosinemetric (class in dipy.segment.metricspeed)": [[168, "dipy.segment.metricspeed.CosineMetric"]], "cythonfeature (class in dipy.segment.featurespeed)": [[168, "dipy.segment.featurespeed.CythonFeature"]], "cythonmetric (class in dipy.segment.metricspeed)": [[168, "dipy.segment.metricspeed.CythonMetric"]], "dtype (in module dipy.segment.clustering_algorithms)": [[168, "dipy.segment.clustering_algorithms.DTYPE"]], "dtype (in module dipy.segment.clusteringspeed)": [[168, "dipy.segment.clusteringspeed.DTYPE"]], "faststreamlinesearch (class in dipy.segment.fss)": [[168, "dipy.segment.fss.FastStreamlineSearch"]], "feature (class in dipy.segment.featurespeed)": [[168, "dipy.segment.featurespeed.Feature"]], "identity (class in dipy.segment.clustering)": [[168, "dipy.segment.clustering.Identity"]], "identityfeature (class in dipy.segment.featurespeed)": [[168, "dipy.segment.featurespeed.IdentityFeature"]], "iteratedconditionalmodes (class in dipy.segment.mrf)": [[168, "dipy.segment.mrf.IteratedConditionalModes"]], "mdfpy (class in dipy.segment.benchmarks.bench_quickbundles)": [[168, "dipy.segment.benchmarks.bench_quickbundles.MDFpy"]], "metric (class in dipy.segment.metricspeed)": [[168, "dipy.segment.metricspeed.Metric"]], "midpointfeature (class in dipy.segment.featurespeed)": [[168, "dipy.segment.featurespeed.MidpointFeature"]], "minimumaveragedirectflipmetric (class in dipy.segment.metricspeed)": [[168, "dipy.segment.metricspeed.MinimumAverageDirectFlipMetric"]], "quickbundles (class in dipy.segment.clustering)": [[168, "dipy.segment.clustering.QuickBundles"]], "quickbundles (class in dipy.segment.clusteringspeed)": [[168, "dipy.segment.clusteringspeed.QuickBundles"]], "quickbundlesx (class in dipy.segment.clustering)": [[168, "dipy.segment.clustering.QuickBundlesX"]], "quickbundlesx (class in dipy.segment.clusteringspeed)": [[168, "dipy.segment.clusteringspeed.QuickBundlesX"]], "recobundles (class in dipy.segment.bundles)": [[168, "dipy.segment.bundles.RecoBundles"]], "resamplefeature (class in dipy.segment.featurespeed)": [[168, "dipy.segment.featurespeed.ResampleFeature"]], "sumpointwiseeuclideanmetric (class in dipy.segment.metricspeed)": [[168, "dipy.segment.metricspeed.SumPointwiseEuclideanMetric"]], "tissueclassifierhmrf (class in dipy.segment.tissue)": [[168, "dipy.segment.tissue.TissueClassifierHMRF"]], "treecluster (class in dipy.segment.clustering)": [[168, "dipy.segment.clustering.TreeCluster"]], "treecluster (class in dipy.segment.clusteringspeed)": [[168, "dipy.segment.clusteringspeed.TreeCluster"]], "treeclustermap (class in dipy.segment.clustering)": [[168, "dipy.segment.clustering.TreeClusterMap"]], "treeclustermap (class in dipy.segment.clusteringspeed)": [[168, "dipy.segment.clusteringspeed.TreeClusterMap"]], "vectorofendpointsfeature (class in dipy.segment.featurespeed)": [[168, "dipy.segment.featurespeed.VectorOfEndpointsFeature"]], "__init__() (dipy.segment.benchmarks.bench_quickbundles.mdfpy method)": [[168, "dipy.segment.benchmarks.bench_quickbundles.MDFpy.__init__"]], "__init__() (dipy.segment.bundles.recobundles method)": [[168, "dipy.segment.bundles.RecoBundles.__init__"]], "__init__() (dipy.segment.clustering.cluster method)": [[168, "dipy.segment.clustering.Cluster.__init__"]], "__init__() (dipy.segment.clustering.clustercentroid method)": [[168, "dipy.segment.clustering.ClusterCentroid.__init__"]], "__init__() (dipy.segment.clustering.clustermap method)": [[168, "dipy.segment.clustering.ClusterMap.__init__"]], "__init__() (dipy.segment.clustering.clustermapcentroid method)": [[168, "dipy.segment.clustering.ClusterMapCentroid.__init__"]], "__init__() (dipy.segment.clustering.clustering method)": [[168, "dipy.segment.clustering.Clustering.__init__"]], "__init__() (dipy.segment.clustering.identity method)": [[168, "dipy.segment.clustering.Identity.__init__"]], "__init__() (dipy.segment.clustering.quickbundles method)": [[168, "dipy.segment.clustering.QuickBundles.__init__"]], "__init__() (dipy.segment.clustering.quickbundlesx method)": [[168, "dipy.segment.clustering.QuickBundlesX.__init__"]], "__init__() (dipy.segment.clustering.treecluster method)": [[168, "dipy.segment.clustering.TreeCluster.__init__"]], "__init__() (dipy.segment.clustering.treeclustermap method)": [[168, "dipy.segment.clustering.TreeClusterMap.__init__"]], "__init__() (dipy.segment.clustering_algorithms.clustercentroid method)": [[168, "dipy.segment.clustering_algorithms.ClusterCentroid.__init__"]], "__init__() (dipy.segment.clustering_algorithms.clustermapcentroid method)": [[168, "dipy.segment.clustering_algorithms.ClusterMapCentroid.__init__"]], "__init__() (dipy.segment.clusteringspeed.clustercentroid method)": [[168, "dipy.segment.clusteringspeed.ClusterCentroid.__init__"]], "__init__() (dipy.segment.clusteringspeed.clustermapcentroid method)": [[168, "dipy.segment.clusteringspeed.ClusterMapCentroid.__init__"]], "__init__() (dipy.segment.clusteringspeed.clusters method)": [[168, "dipy.segment.clusteringspeed.Clusters.__init__"]], "__init__() (dipy.segment.clusteringspeed.clusterscentroid method)": [[168, "dipy.segment.clusteringspeed.ClustersCentroid.__init__"]], "__init__() (dipy.segment.clusteringspeed.quickbundles method)": [[168, "dipy.segment.clusteringspeed.QuickBundles.__init__"]], "__init__() (dipy.segment.clusteringspeed.quickbundlesx method)": [[168, "dipy.segment.clusteringspeed.QuickBundlesX.__init__"]], "__init__() (dipy.segment.clusteringspeed.treecluster method)": [[168, "dipy.segment.clusteringspeed.TreeCluster.__init__"]], "__init__() (dipy.segment.clusteringspeed.treeclustermap method)": [[168, "dipy.segment.clusteringspeed.TreeClusterMap.__init__"]], "__init__() (dipy.segment.featurespeed.arclengthfeature method)": [[168, "dipy.segment.featurespeed.ArcLengthFeature.__init__"]], "__init__() (dipy.segment.featurespeed.centerofmassfeature method)": [[168, "dipy.segment.featurespeed.CenterOfMassFeature.__init__"]], "__init__() (dipy.segment.featurespeed.cythonfeature method)": [[168, "dipy.segment.featurespeed.CythonFeature.__init__"]], "__init__() (dipy.segment.featurespeed.feature method)": [[168, "dipy.segment.featurespeed.Feature.__init__"]], "__init__() (dipy.segment.featurespeed.identityfeature method)": [[168, "dipy.segment.featurespeed.IdentityFeature.__init__"]], "__init__() (dipy.segment.featurespeed.midpointfeature method)": [[168, "dipy.segment.featurespeed.MidpointFeature.__init__"]], "__init__() (dipy.segment.featurespeed.resamplefeature method)": [[168, "dipy.segment.featurespeed.ResampleFeature.__init__"]], "__init__() (dipy.segment.featurespeed.vectorofendpointsfeature method)": [[168, "dipy.segment.featurespeed.VectorOfEndpointsFeature.__init__"]], "__init__() (dipy.segment.fss.faststreamlinesearch method)": [[168, "dipy.segment.fss.FastStreamlineSearch.__init__"]], "__init__() (dipy.segment.metricspeed.averagepointwiseeuclideanmetric method)": [[168, "dipy.segment.metricspeed.AveragePointwiseEuclideanMetric.__init__"]], "__init__() (dipy.segment.metricspeed.cosinemetric method)": [[168, "dipy.segment.metricspeed.CosineMetric.__init__"]], "__init__() (dipy.segment.metricspeed.cythonmetric method)": [[168, "dipy.segment.metricspeed.CythonMetric.__init__"]], "__init__() (dipy.segment.metricspeed.metric method)": [[168, "dipy.segment.metricspeed.Metric.__init__"]], "__init__() (dipy.segment.metricspeed.minimumaveragedirectflipmetric method)": [[168, "dipy.segment.metricspeed.MinimumAverageDirectFlipMetric.__init__"]], "__init__() (dipy.segment.metricspeed.sumpointwiseeuclideanmetric method)": [[168, "dipy.segment.metricspeed.SumPointwiseEuclideanMetric.__init__"]], "__init__() (dipy.segment.mrf.constantobservationmodel method)": [[168, "dipy.segment.mrf.ConstantObservationModel.__init__"]], "__init__() (dipy.segment.mrf.iteratedconditionalmodes method)": [[168, "dipy.segment.mrf.IteratedConditionalModes.__init__"]], "__init__() (dipy.segment.tissue.tissueclassifierhmrf method)": [[168, "dipy.segment.tissue.TissueClassifierHMRF.__init__"]], "add() (dipy.segment.clustering.treecluster method)": [[168, "dipy.segment.clustering.TreeCluster.add"]], "add() (dipy.segment.clusteringspeed.treecluster method)": [[168, "dipy.segment.clusteringspeed.TreeCluster.add"]], "add_cluster() (dipy.segment.clustering.clustermap method)": [[168, "dipy.segment.clustering.ClusterMap.add_cluster"]], "applymask() (in module dipy.segment.mask)": [[168, "dipy.segment.mask.applymask"]], "are_compatible() (dipy.segment.benchmarks.bench_quickbundles.mdfpy method)": [[168, "dipy.segment.benchmarks.bench_quickbundles.MDFpy.are_compatible"]], "are_compatible() (dipy.segment.metricspeed.cythonmetric method)": [[168, "dipy.segment.metricspeed.CythonMetric.are_compatible"]], "are_compatible() (dipy.segment.metricspeed.metric method)": [[168, "dipy.segment.metricspeed.Metric.are_compatible"]], "assign() (dipy.segment.clustering.cluster method)": [[168, "dipy.segment.clustering.Cluster.assign"]], "assign() (dipy.segment.clustering.clustercentroid method)": [[168, "dipy.segment.clustering.ClusterCentroid.assign"]], "assign() (dipy.segment.clustering_algorithms.clustercentroid method)": [[168, "dipy.segment.clustering_algorithms.ClusterCentroid.assign"]], "assign() (dipy.segment.clusteringspeed.clustercentroid method)": [[168, "dipy.segment.clusteringspeed.ClusterCentroid.assign"]], "ba_analysis() (in module dipy.segment.bundles)": [[168, "dipy.segment.bundles.ba_analysis"]], "bench_quickbundles() (in module dipy.segment.benchmarks.bench_quickbundles)": [[168, "dipy.segment.benchmarks.bench_quickbundles.bench_quickbundles"]], "bounding_box() (in module dipy.segment.mask)": [[168, "dipy.segment.mask.bounding_box"]], "bundle_adjacency() (in module dipy.segment.bundles)": [[168, "dipy.segment.bundles.bundle_adjacency"]], "bundle_shape_similarity() (in module dipy.segment.bundles)": [[168, "dipy.segment.bundles.bundle_shape_similarity"]], "centroids (dipy.segment.clustering.clustermapcentroid property)": [[168, "dipy.segment.clustering.ClusterMapCentroid.centroids"]], "centroids (dipy.segment.clustering_algorithms.clustermapcentroid property)": [[168, "dipy.segment.clustering_algorithms.ClusterMapCentroid.centroids"]], "centroids (dipy.segment.clusteringspeed.clustermapcentroid property)": [[168, "dipy.segment.clusteringspeed.ClusterMapCentroid.centroids"]], "check_range() (in module dipy.segment.bundles)": [[168, "dipy.segment.bundles.check_range"]], "classify() (dipy.segment.tissue.tissueclassifierhmrf method)": [[168, "dipy.segment.tissue.TissueClassifierHMRF.classify"]], "clean_cc_mask() (in module dipy.segment.mask)": [[168, "dipy.segment.mask.clean_cc_mask"]], "clear() (dipy.segment.clustering.clustermap method)": [[168, "dipy.segment.clustering.ClusterMap.clear"]], "cluster() (dipy.segment.clustering.clustering method)": [[168, "dipy.segment.clustering.Clustering.cluster"]], "cluster() (dipy.segment.clustering.quickbundles method)": [[168, "dipy.segment.clustering.QuickBundles.cluster"]], "cluster() (dipy.segment.clustering.quickbundlesx method)": [[168, "dipy.segment.clustering.QuickBundlesX.cluster"]], "cluster_bundle() (in module dipy.segment.bundles)": [[168, "dipy.segment.bundles.cluster_bundle"]], "clusters (dipy.segment.clustering.clustermap property)": [[168, "dipy.segment.clustering.ClusterMap.clusters"]], "clusters_centroid2clustermap_centroid() (in module dipy.segment.clustering_algorithms)": [[168, "dipy.segment.clustering_algorithms.clusters_centroid2clustermap_centroid"]], "clusters_sizes() (dipy.segment.clustering.clustermap method)": [[168, "dipy.segment.clustering.ClusterMap.clusters_sizes"]], "crop() (in module dipy.segment.mask)": [[168, "dipy.segment.mask.crop"]], "dipy.segment": [[168, "module-dipy.segment"]], "dipy.segment.benchmarks": [[168, "module-dipy.segment.benchmarks"]], "dipy.segment.benchmarks.bench_quickbundles": [[168, "module-dipy.segment.benchmarks.bench_quickbundles"]], "dipy.segment.bundles": [[168, "module-dipy.segment.bundles"]], "dipy.segment.clustering": [[168, "module-dipy.segment.clustering"]], "dipy.segment.clustering_algorithms": [[168, "module-dipy.segment.clustering_algorithms"]], "dipy.segment.clusteringspeed": [[168, "module-dipy.segment.clusteringspeed"]], "dipy.segment.cythonutils": [[168, "module-dipy.segment.cythonutils"]], "dipy.segment.featurespeed": [[168, "module-dipy.segment.featurespeed"]], "dipy.segment.fss": [[168, "module-dipy.segment.fss"]], "dipy.segment.mask": [[168, "module-dipy.segment.mask"]], "dipy.segment.metric": [[168, "module-dipy.segment.metric"]], "dipy.segment.metricspeed": [[168, "module-dipy.segment.metricspeed"]], "dipy.segment.mrf": [[168, "module-dipy.segment.mrf"]], "dipy.segment.threshold": [[168, "module-dipy.segment.threshold"]], "dipy.segment.tissue": [[168, "module-dipy.segment.tissue"]], "dist() (dipy.segment.benchmarks.bench_quickbundles.mdfpy method)": [[168, "dipy.segment.benchmarks.bench_quickbundles.MDFpy.dist"]], "dist() (dipy.segment.metricspeed.cythonmetric method)": [[168, "dipy.segment.metricspeed.CythonMetric.dist"]], "dist() (dipy.segment.metricspeed.metric method)": [[168, "dipy.segment.metricspeed.Metric.dist"]], "dist() (in module dipy.segment.metricspeed)": [[168, "dipy.segment.metricspeed.dist"]], "distance_matrix() (in module dipy.segment.metricspeed)": [[168, "dipy.segment.metricspeed.distance_matrix"]], "evaluate_aabb_checks() (in module dipy.segment.clusteringspeed)": [[168, "dipy.segment.clusteringspeed.evaluate_aabb_checks"]], "evaluate_results() (dipy.segment.bundles.recobundles method)": [[168, "dipy.segment.bundles.RecoBundles.evaluate_results"]], "extract() (dipy.segment.featurespeed.cythonfeature method)": [[168, "dipy.segment.featurespeed.CythonFeature.extract"]], "extract() (dipy.segment.featurespeed.feature method)": [[168, "dipy.segment.featurespeed.Feature.extract"]], "extract() (in module dipy.segment.featurespeed)": [[168, "dipy.segment.featurespeed.extract"]], "feature (dipy.segment.metricspeed.metric attribute)": [[168, "dipy.segment.metricspeed.Metric.feature"]], "get_cluster_map() (dipy.segment.clusteringspeed.quickbundles method)": [[168, "dipy.segment.clusteringspeed.QuickBundles.get_cluster_map"]], "get_clusters() (dipy.segment.clustering.treeclustermap method)": [[168, "dipy.segment.clustering.TreeClusterMap.get_clusters"]], "get_clusters() (dipy.segment.clusteringspeed.treeclustermap method)": [[168, "dipy.segment.clusteringspeed.TreeClusterMap.get_clusters"]], "get_large_clusters() (dipy.segment.clustering.clustermap method)": [[168, "dipy.segment.clustering.ClusterMap.get_large_clusters"]], "get_small_clusters() (dipy.segment.clustering.clustermap method)": [[168, "dipy.segment.clustering.ClusterMap.get_small_clusters"]], "get_stats() (dipy.segment.clusteringspeed.quickbundles method)": [[168, "dipy.segment.clusteringspeed.QuickBundles.get_stats"]], "get_stats() (dipy.segment.clusteringspeed.quickbundlesx method)": [[168, "dipy.segment.clusteringspeed.QuickBundlesX.get_stats"]], "get_tree_cluster_map() (dipy.segment.clusteringspeed.quickbundlesx method)": [[168, "dipy.segment.clusteringspeed.QuickBundlesX.get_tree_cluster_map"]], "icm_ising() (dipy.segment.mrf.iteratedconditionalmodes method)": [[168, "dipy.segment.mrf.IteratedConditionalModes.icm_ising"]], "infer_shape() (dipy.segment.featurespeed.cythonfeature method)": [[168, "dipy.segment.featurespeed.CythonFeature.infer_shape"]], "infer_shape() (dipy.segment.featurespeed.feature method)": [[168, "dipy.segment.featurespeed.Feature.infer_shape"]], "infer_shape() (in module dipy.segment.featurespeed)": [[168, "dipy.segment.featurespeed.infer_shape"]], "initialize_maximum_likelihood() (dipy.segment.mrf.iteratedconditionalmodes method)": [[168, "dipy.segment.mrf.IteratedConditionalModes.initialize_maximum_likelihood"]], "initialize_param_uniform() (dipy.segment.mrf.constantobservationmodel method)": [[168, "dipy.segment.mrf.ConstantObservationModel.initialize_param_uniform"]], "insert() (dipy.segment.clusteringspeed.quickbundlesx method)": [[168, "dipy.segment.clusteringspeed.QuickBundlesX.insert"]], "is_leaf (dipy.segment.clustering.treecluster property)": [[168, "dipy.segment.clustering.TreeCluster.is_leaf"]], "is_leaf (dipy.segment.clusteringspeed.treecluster property)": [[168, "dipy.segment.clusteringspeed.TreeCluster.is_leaf"]], "is_order_invariant (dipy.segment.featurespeed.feature attribute)": [[168, "dipy.segment.featurespeed.Feature.is_order_invariant"]], "is_order_invariant (dipy.segment.metricspeed.metric attribute)": [[168, "dipy.segment.metricspeed.Metric.is_order_invariant"]], "is_order_invariant (dipy.segment.metricspeed.minimumaveragedirectflipmetric attribute)": [[168, "dipy.segment.metricspeed.MinimumAverageDirectFlipMetric.is_order_invariant"]], "iter_preorder() (dipy.segment.clustering.treeclustermap method)": [[168, "dipy.segment.clustering.TreeClusterMap.iter_preorder"]], "iter_preorder() (dipy.segment.clusteringspeed.treeclustermap method)": [[168, "dipy.segment.clusteringspeed.TreeClusterMap.iter_preorder"]], "logger() (in module dipy.segment.bundles)": [[168, "dipy.segment.bundles.logger"]], "logger() (in module dipy.segment.clustering)": [[168, "dipy.segment.clustering.logger"]], "mdf() (in module dipy.segment.metric)": [[168, "dipy.segment.metric.mdf"]], "mean_euclidean_distance() (in module dipy.segment.metric)": [[168, "dipy.segment.metric.mean_euclidean_distance"]], "mean_manhattan_distance() (in module dipy.segment.metric)": [[168, "dipy.segment.metric.mean_manhattan_distance"]], "median_otsu() (in module dipy.segment.mask)": [[168, "dipy.segment.mask.median_otsu"]], "multi_median() (in module dipy.segment.mask)": [[168, "dipy.segment.mask.multi_median"]], "nearest_from_matrix_col() (in module dipy.segment.fss)": [[168, "dipy.segment.fss.nearest_from_matrix_col"]], "nearest_from_matrix_row() (in module dipy.segment.fss)": [[168, "dipy.segment.fss.nearest_from_matrix_row"]], "negloglikelihood() (dipy.segment.mrf.constantobservationmodel method)": [[168, "dipy.segment.mrf.ConstantObservationModel.negloglikelihood"]], "otsu() (in module dipy.segment.threshold)": [[168, "dipy.segment.threshold.otsu"]], "peek() (in module dipy.segment.clustering_algorithms)": [[168, "dipy.segment.clustering_algorithms.peek"]], "prob_image() (dipy.segment.mrf.constantobservationmodel method)": [[168, "dipy.segment.mrf.ConstantObservationModel.prob_image"]], "prob_neighborhood() (dipy.segment.mrf.iteratedconditionalmodes method)": [[168, "dipy.segment.mrf.IteratedConditionalModes.prob_neighborhood"]], "qbx_and_merge() (in module dipy.segment.clustering)": [[168, "dipy.segment.clustering.qbx_and_merge"]], "quickbundles() (in module dipy.segment.clustering_algorithms)": [[168, "dipy.segment.clustering_algorithms.quickbundles"]], "quickbundlesx() (in module dipy.segment.clustering_algorithms)": [[168, "dipy.segment.clustering_algorithms.quickbundlesx"]], "radius_search() (dipy.segment.fss.faststreamlinesearch method)": [[168, "dipy.segment.fss.FastStreamlineSearch.radius_search"]], "recognize() (dipy.segment.bundles.recobundles method)": [[168, "dipy.segment.bundles.RecoBundles.recognize"]], "refdata (dipy.segment.clustering.clustermap property)": [[168, "dipy.segment.clustering.ClusterMap.refdata"]], "refdata (dipy.segment.clustering.treeclustermap property)": [[168, "dipy.segment.clustering.TreeClusterMap.refdata"]], "refdata (dipy.segment.clusteringspeed.treeclustermap property)": [[168, "dipy.segment.clusteringspeed.TreeClusterMap.refdata"]], "refine() (dipy.segment.bundles.recobundles method)": [[168, "dipy.segment.bundles.RecoBundles.refine"]], "remove_cluster() (dipy.segment.clustering.clustermap method)": [[168, "dipy.segment.clustering.ClusterMap.remove_cluster"]], "return_indices() (dipy.segment.clustering.treecluster method)": [[168, "dipy.segment.clustering.TreeCluster.return_indices"]], "return_indices() (dipy.segment.clusteringspeed.treecluster method)": [[168, "dipy.segment.clusteringspeed.TreeCluster.return_indices"]], "seg_stats() (dipy.segment.mrf.constantobservationmodel method)": [[168, "dipy.segment.mrf.ConstantObservationModel.seg_stats"]], "segment_from_cfa() (in module dipy.segment.mask)": [[168, "dipy.segment.mask.segment_from_cfa"]], "size() (dipy.segment.clustering.clustermap method)": [[168, "dipy.segment.clustering.ClusterMap.size"]], "traverse_postorder() (dipy.segment.clustering.treeclustermap method)": [[168, "dipy.segment.clustering.TreeClusterMap.traverse_postorder"]], "traverse_postorder() (dipy.segment.clusteringspeed.treeclustermap method)": [[168, "dipy.segment.clusteringspeed.TreeClusterMap.traverse_postorder"]], "update() (dipy.segment.clustering.clustercentroid method)": [[168, "dipy.segment.clustering.ClusterCentroid.update"]], "update() (dipy.segment.clustering_algorithms.clustercentroid method)": [[168, "dipy.segment.clustering_algorithms.ClusterCentroid.update"]], "update() (dipy.segment.clusteringspeed.clustercentroid method)": [[168, "dipy.segment.clusteringspeed.ClusterCentroid.update"]], "update_param() (dipy.segment.mrf.constantobservationmodel method)": [[168, "dipy.segment.mrf.ConstantObservationModel.update_param"]], "upper_bound_by_percent() (in module dipy.segment.threshold)": [[168, "dipy.segment.threshold.upper_bound_by_percent"]], "upper_bound_by_rate() (in module dipy.segment.threshold)": [[168, "dipy.segment.threshold.upper_bound_by_rate"]], "add_noise() (in module dipy.sims.phantom)": [[169, "dipy.sims.phantom.add_noise"]], "add_noise() (in module dipy.sims.voxel)": [[169, "dipy.sims.voxel.add_noise"]], "all_tensor_evecs() (in module dipy.sims.voxel)": [[169, "dipy.sims.voxel.all_tensor_evecs"]], "callaghan_perpendicular() (in module dipy.sims.voxel)": [[169, "dipy.sims.voxel.callaghan_perpendicular"]], "cylinders_and_ball_soderman() (in module dipy.sims.voxel)": [[169, "dipy.sims.voxel.cylinders_and_ball_soderman"]], "diff2eigenvectors() (in module dipy.sims.phantom)": [[169, "dipy.sims.phantom.diff2eigenvectors"]], "diffusion_evals() (in module dipy.sims.voxel)": [[169, "dipy.sims.voxel.diffusion_evals"]], "dipy.sims": [[169, "module-dipy.sims"]], "dipy.sims.phantom": [[169, "module-dipy.sims.phantom"]], "dipy.sims.voxel": [[169, "module-dipy.sims.voxel"]], "dki_signal() (in module dipy.sims.voxel)": [[169, "dipy.sims.voxel.dki_signal"]], "gaussian_parallel() (in module dipy.sims.voxel)": [[169, "dipy.sims.voxel.gaussian_parallel"]], "kurtosis_element() (in module dipy.sims.voxel)": [[169, "dipy.sims.voxel.kurtosis_element"]], "multi_tensor() (in module dipy.sims.voxel)": [[169, "dipy.sims.voxel.multi_tensor"]], "multi_tensor_dki() (in module dipy.sims.voxel)": [[169, "dipy.sims.voxel.multi_tensor_dki"]], "multi_tensor_msd() (in module dipy.sims.voxel)": [[169, "dipy.sims.voxel.multi_tensor_msd"]], "multi_tensor_odf() (in module dipy.sims.voxel)": [[169, "dipy.sims.voxel.multi_tensor_odf"]], "multi_tensor_pdf() (in module dipy.sims.voxel)": [[169, "dipy.sims.voxel.multi_tensor_pdf"]], "multi_tensor_rtop() (in module dipy.sims.voxel)": [[169, "dipy.sims.voxel.multi_tensor_rtop"]], "orbital_phantom() (in module dipy.sims.phantom)": [[169, "dipy.sims.phantom.orbital_phantom"]], "single_tensor() (in module dipy.sims.voxel)": [[169, "dipy.sims.voxel.single_tensor"]], "single_tensor_msd() (in module dipy.sims.voxel)": [[169, "dipy.sims.voxel.single_tensor_msd"]], "single_tensor_odf() (in module dipy.sims.voxel)": [[169, "dipy.sims.voxel.single_tensor_odf"]], "single_tensor_pdf() (in module dipy.sims.voxel)": [[169, "dipy.sims.voxel.single_tensor_pdf"]], "single_tensor_rtop() (in module dipy.sims.voxel)": [[169, "dipy.sims.voxel.single_tensor_rtop"]], "sticks_and_ball() (in module dipy.sims.voxel)": [[169, "dipy.sims.voxel.sticks_and_ball"]], "afq_profile() (in module dipy.stats.analysis)": [[170, "dipy.stats.analysis.afq_profile"]], "anatomical_measures() (in module dipy.stats.analysis)": [[170, "dipy.stats.analysis.anatomical_measures"]], "assignment_map() (in module dipy.stats.analysis)": [[170, "dipy.stats.analysis.assignment_map"]], "dipy.stats": [[170, "module-dipy.stats"]], "dipy.stats.analysis": [[170, "module-dipy.stats.analysis"]], "gaussian_weights() (in module dipy.stats.analysis)": [[170, "dipy.stats.analysis.gaussian_weights"]], "peak_values() (in module dipy.stats.analysis)": [[170, "dipy.stats.analysis.peak_values"]], "actstoppingcriterion (class in dipy.tracking.stopping_criterion)": [[171, "dipy.tracking.stopping_criterion.ActStoppingCriterion"]], "anatomicalstoppingcriterion (class in dipy.tracking.stopping_criterion)": [[171, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion"]], "binarystoppingcriterion (class in dipy.tracking.stopping_criterion)": [[171, "dipy.tracking.stopping_criterion.BinaryStoppingCriterion"]], "cmcstoppingcriterion (class in dipy.tracking.stopping_criterion)": [[171, "dipy.tracking.stopping_criterion.CmcStoppingCriterion"]], "directiongetter (class in dipy.tracking.direction_getter)": [[171, "dipy.tracking.direction_getter.DirectionGetter"]], "endpoint (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[171, "dipy.tracking.stopping_criterion.StreamlineStatus.ENDPOINT"]], "fbcmeasures (class in dipy.tracking.fbcmeasures)": [[171, "dipy.tracking.fbcmeasures.FBCMeasures"]], "fiberfit (class in dipy.tracking.life)": [[171, "dipy.tracking.life.FiberFit"]], "fibermodel (class in dipy.tracking.life)": [[171, "dipy.tracking.life.FiberModel"]], "invalidpoint (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[171, "dipy.tracking.stopping_criterion.StreamlineStatus.INVALIDPOINT"]], "kdtree (class in dipy.tracking.fbcmeasures)": [[171, "dipy.tracking.fbcmeasures.KDTree"]], "kdtree.innernode (class in dipy.tracking.fbcmeasures)": [[171, "dipy.tracking.fbcmeasures.KDTree.innernode"]], "kdtree.leafnode (class in dipy.tracking.fbcmeasures)": [[171, "dipy.tracking.fbcmeasures.KDTree.leafnode"]], "kdtree.node (class in dipy.tracking.fbcmeasures)": [[171, "dipy.tracking.fbcmeasures.KDTree.node"]], "lifesignalmaker (class in dipy.tracking.life)": [[171, "dipy.tracking.life.LifeSignalMaker"]], "localtracking (class in dipy.tracking.local_tracking)": [[171, "dipy.tracking.local_tracking.LocalTracking"]], "outsideimage (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[171, "dipy.tracking.stopping_criterion.StreamlineStatus.OUTSIDEIMAGE"]], "pyerror (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[171, "dipy.tracking.stopping_criterion.StreamlineStatus.PYERROR"]], "particlefilteringtracking (class in dipy.tracking.local_tracking)": [[171, "dipy.tracking.local_tracking.ParticleFilteringTracking"]], "stoppingcriterion (class in dipy.tracking.stopping_criterion)": [[171, "dipy.tracking.stopping_criterion.StoppingCriterion"]], "streamlinestatus (class in dipy.tracking.stopping_criterion)": [[171, "dipy.tracking.stopping_criterion.StreamlineStatus"]], "streamlines (in module dipy.tracking.streamlinespeed)": [[171, "dipy.tracking.streamlinespeed.Streamlines"]], "trackpoint (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[171, "dipy.tracking.stopping_criterion.StreamlineStatus.TRACKPOINT"]], "thresholdstoppingcriterion (class in dipy.tracking.stopping_criterion)": [[171, "dipy.tracking.stopping_criterion.ThresholdStoppingCriterion"]], "__init__() (dipy.tracking.direction_getter.directiongetter method)": [[171, "dipy.tracking.direction_getter.DirectionGetter.__init__"]], "__init__() (dipy.tracking.fbcmeasures.fbcmeasures method)": [[171, "dipy.tracking.fbcmeasures.FBCMeasures.__init__"]], "__init__() (dipy.tracking.fbcmeasures.kdtree method)": [[171, "dipy.tracking.fbcmeasures.KDTree.__init__"]], "__init__() (dipy.tracking.fbcmeasures.interp1d method)": [[171, "dipy.tracking.fbcmeasures.interp1d.__init__"]], "__init__() (dipy.tracking.life.fiberfit method)": [[171, "dipy.tracking.life.FiberFit.__init__"]], "__init__() (dipy.tracking.life.fibermodel method)": [[171, "dipy.tracking.life.FiberModel.__init__"]], "__init__() (dipy.tracking.life.lifesignalmaker method)": [[171, "dipy.tracking.life.LifeSignalMaker.__init__"]], "__init__() (dipy.tracking.local_tracking.localtracking method)": [[171, "dipy.tracking.local_tracking.LocalTracking.__init__"]], "__init__() (dipy.tracking.local_tracking.particlefilteringtracking method)": [[171, "dipy.tracking.local_tracking.ParticleFilteringTracking.__init__"]], "__init__() (dipy.tracking.stopping_criterion.actstoppingcriterion method)": [[171, "dipy.tracking.stopping_criterion.ActStoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.anatomicalstoppingcriterion method)": [[171, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.binarystoppingcriterion method)": [[171, "dipy.tracking.stopping_criterion.BinaryStoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.cmcstoppingcriterion method)": [[171, "dipy.tracking.stopping_criterion.CmcStoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.stoppingcriterion method)": [[171, "dipy.tracking.stopping_criterion.StoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.streamlinestatus method)": [[171, "dipy.tracking.stopping_criterion.StreamlineStatus.__init__"]], "__init__() (dipy.tracking.stopping_criterion.thresholdstoppingcriterion method)": [[171, "dipy.tracking.stopping_criterion.ThresholdStoppingCriterion.__init__"]], "add_3vecs() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.add_3vecs"]], "approx_polygon_track() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.approx_polygon_track"]], "approximate_mdl_trajectory() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.approximate_mdl_trajectory"]], "arbitrarypoint() (in module dipy.tracking.metrics)": [[171, "dipy.tracking.metrics.arbitrarypoint"]], "bench_compress_streamlines() (in module dipy.tracking.benchmarks.bench_streamline)": [[171, "dipy.tracking.benchmarks.bench_streamline.bench_compress_streamlines"]], "bench_length() (in module dipy.tracking.benchmarks.bench_streamline)": [[171, "dipy.tracking.benchmarks.bench_streamline.bench_length"]], "bench_set_number_of_points() (in module dipy.tracking.benchmarks.bench_streamline)": [[171, "dipy.tracking.benchmarks.bench_streamline.bench_set_number_of_points"]], "bundles_distances_mam() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.bundles_distances_mam"]], "bundles_distances_mdf() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.bundles_distances_mdf"]], "bytes() (in module dipy.tracking.metrics)": [[171, "dipy.tracking.metrics.bytes"]], "calc_signal() (dipy.tracking.life.lifesignalmaker method)": [[171, "dipy.tracking.life.LifeSignalMaker.calc_signal"]], "center_of_mass() (in module dipy.tracking.metrics)": [[171, "dipy.tracking.metrics.center_of_mass"]], "center_streamlines() (in module dipy.tracking.streamline)": [[171, "dipy.tracking.streamline.center_streamlines"]], "check_point() (dipy.tracking.stopping_criterion.stoppingcriterion method)": [[171, "dipy.tracking.stopping_criterion.StoppingCriterion.check_point"]], "children (dipy.tracking.fbcmeasures.kdtree.innernode property)": [[171, "dipy.tracking.fbcmeasures.KDTree.innernode.children"]], "children (dipy.tracking.fbcmeasures.kdtree.leafnode property)": [[171, "dipy.tracking.fbcmeasures.KDTree.leafnode.children"]], "cluster_confidence() (in module dipy.tracking.streamline)": [[171, "dipy.tracking.streamline.cluster_confidence"]], "compress_streamlines() (in module dipy.tracking.streamlinespeed)": [[171, "dipy.tracking.streamlinespeed.compress_streamlines"]], "compute_rfbc() (in module dipy.tracking.fbcmeasures)": [[171, "dipy.tracking.fbcmeasures.compute_rfbc"]], "connectivity_matrix() (in module dipy.tracking.utils)": [[171, "dipy.tracking.utils.connectivity_matrix"]], "count_neighbors() (dipy.tracking.fbcmeasures.kdtree method)": [[171, "dipy.tracking.fbcmeasures.KDTree.count_neighbors"]], "cut_plane() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.cut_plane"]], "deform_streamlines() (in module dipy.tracking.streamline)": [[171, "dipy.tracking.streamline.deform_streamlines"]], "density_map() (in module dipy.tracking.utils)": [[171, "dipy.tracking.utils.density_map"]], "detect_corresponding_tracks() (in module dipy.tracking.learning)": [[171, "dipy.tracking.learning.detect_corresponding_tracks"]], "detect_corresponding_tracks_plus() (in module dipy.tracking.learning)": [[171, "dipy.tracking.learning.detect_corresponding_tracks_plus"]], "determine_num_threads() (in module dipy.tracking.fbcmeasures)": [[171, "dipy.tracking.fbcmeasures.determine_num_threads"]], "dipy.tracking": [[171, "module-dipy.tracking"]], "dipy.tracking._utils": [[171, "module-dipy.tracking._utils"]], "dipy.tracking.benchmarks": [[171, "module-dipy.tracking.benchmarks"]], "dipy.tracking.benchmarks.bench_streamline": [[171, "module-dipy.tracking.benchmarks.bench_streamline"]], "dipy.tracking.direction_getter": [[171, "module-dipy.tracking.direction_getter"]], "dipy.tracking.distances": [[171, "module-dipy.tracking.distances"]], "dipy.tracking.fbcmeasures": [[171, "module-dipy.tracking.fbcmeasures"]], "dipy.tracking.learning": [[171, "module-dipy.tracking.learning"]], "dipy.tracking.life": [[171, "module-dipy.tracking.life"]], "dipy.tracking.local_tracking": [[171, "module-dipy.tracking.local_tracking"]], "dipy.tracking.localtrack": [[171, "module-dipy.tracking.localtrack"]], "dipy.tracking.mesh": [[171, "module-dipy.tracking.mesh"]], "dipy.tracking.metrics": [[171, "module-dipy.tracking.metrics"]], "dipy.tracking.propspeed": [[171, "module-dipy.tracking.propspeed"]], "dipy.tracking.stopping_criterion": [[171, "module-dipy.tracking.stopping_criterion"]], "dipy.tracking.streamline": [[171, "module-dipy.tracking.streamline"]], "dipy.tracking.streamlinespeed": [[171, "module-dipy.tracking.streamlinespeed"]], "dipy.tracking.utils": [[171, "module-dipy.tracking.utils"]], "dipy.tracking.vox2track": [[171, "module-dipy.tracking.vox2track"]], "downsample() (in module dipy.tracking.metrics)": [[171, "dipy.tracking.metrics.downsample"]], "dtype (dipy.tracking.fbcmeasures.interp1d attribute)": [[171, "dipy.tracking.fbcmeasures.interp1d.dtype"]], "endpoint() (in module dipy.tracking.metrics)": [[171, "dipy.tracking.metrics.endpoint"]], "eudx_both_directions() (in module dipy.tracking.propspeed)": [[171, "dipy.tracking.propspeed.eudx_both_directions"]], "fill_value (dipy.tracking.fbcmeasures.interp1d property)": [[171, "dipy.tracking.fbcmeasures.interp1d.fill_value"]], "fit() (dipy.tracking.life.fibermodel method)": [[171, "dipy.tracking.life.FiberModel.fit"]], "frenet_serret() (in module dipy.tracking.metrics)": [[171, "dipy.tracking.metrics.frenet_serret"]], "from_pve() (dipy.tracking.stopping_criterion.anatomicalstoppingcriterion class method)": [[171, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion.from_pve"]], "generate_combinations() (in module dipy.tracking.metrics)": [[171, "dipy.tracking.metrics.generate_combinations"]], "generate_streamline() (dipy.tracking.direction_getter.directiongetter method)": [[171, "dipy.tracking.direction_getter.DirectionGetter.generate_streamline"]], "generate_streamlines() (in module dipy.tracking.benchmarks.bench_streamline)": [[171, "dipy.tracking.benchmarks.bench_streamline.generate_streamlines"]], "get_direction() (dipy.tracking.direction_getter.directiongetter method)": [[171, "dipy.tracking.direction_getter.DirectionGetter.get_direction"]], "get_exclude() (dipy.tracking.stopping_criterion.anatomicalstoppingcriterion method)": [[171, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion.get_exclude"]], "get_include() (dipy.tracking.stopping_criterion.anatomicalstoppingcriterion method)": [[171, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion.get_include"]], "get_points_rfbc_thresholded() (dipy.tracking.fbcmeasures.fbcmeasures method)": [[171, "dipy.tracking.fbcmeasures.FBCMeasures.get_points_rfbc_thresholded"]], "grad_tensor() (in module dipy.tracking.life)": [[171, "dipy.tracking.life.grad_tensor"]], "gradient() (in module dipy.tracking.life)": [[171, "dipy.tracking.life.gradient"]], "idx (dipy.tracking.fbcmeasures.kdtree.leafnode property)": [[171, "dipy.tracking.fbcmeasures.KDTree.leafnode.idx"]], "initial_direction() (dipy.tracking.direction_getter.directiongetter method)": [[171, "dipy.tracking.direction_getter.DirectionGetter.initial_direction"]], "inner_3vecs() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.inner_3vecs"]], "inside_sphere() (in module dipy.tracking.metrics)": [[171, "dipy.tracking.metrics.inside_sphere"]], "inside_sphere_points() (in module dipy.tracking.metrics)": [[171, "dipy.tracking.metrics.inside_sphere_points"]], "interp1d (class in dipy.tracking.fbcmeasures)": [[171, "dipy.tracking.fbcmeasures.interp1d"]], "intersect_segment_cylinder() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.intersect_segment_cylinder"]], "intersect_sphere() (in module dipy.tracking.metrics)": [[171, "dipy.tracking.metrics.intersect_sphere"]], "larch_3merge() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.larch_3merge"]], "larch_3split() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.larch_3split"]], "lee_angle_distance() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.lee_angle_distance"]], "lee_perpendicular_distance() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.lee_perpendicular_distance"]], "length() (in module dipy.tracking.metrics)": [[171, "dipy.tracking.metrics.length"]], "length() (in module dipy.tracking.streamlinespeed)": [[171, "dipy.tracking.streamlinespeed.length"]], "length() (in module dipy.tracking.utils)": [[171, "dipy.tracking.utils.length"]], "local_skeleton_clustering() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.local_skeleton_clustering"]], "local_skeleton_clustering_3pts() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.local_skeleton_clustering_3pts"]], "local_tracker() (in module dipy.tracking.localtrack)": [[171, "dipy.tracking.localtrack.local_tracker"]], "longest_track_bundle() (in module dipy.tracking.metrics)": [[171, "dipy.tracking.metrics.longest_track_bundle"]], "magn() (in module dipy.tracking.metrics)": [[171, "dipy.tracking.metrics.magn"]], "mam_distances() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.mam_distances"]], "max_angle_from_curvature() (in module dipy.tracking.utils)": [[171, "dipy.tracking.utils.max_angle_from_curvature"]], "mean_curvature() (in module dipy.tracking.metrics)": [[171, "dipy.tracking.metrics.mean_curvature"]], "mean_orientation() (in module dipy.tracking.metrics)": [[171, "dipy.tracking.metrics.mean_orientation"]], "midpoint() (in module dipy.tracking.metrics)": [[171, "dipy.tracking.metrics.midpoint"]], "midpoint2point() (in module dipy.tracking.metrics)": [[171, "dipy.tracking.metrics.midpoint2point"]], "min_moving_average() (in module dipy.tracking.fbcmeasures)": [[171, "dipy.tracking.fbcmeasures.min_moving_average"]], "min_radius_curvature_from_angle() (in module dipy.tracking.utils)": [[171, "dipy.tracking.utils.min_radius_curvature_from_angle"]], "minimum_closest_distance() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.minimum_closest_distance"]], "most_similar_track_mam() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.most_similar_track_mam"]], "mul_3vec() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.mul_3vec"]], "mul_3vecs() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.mul_3vecs"]], "nbytes() (in module dipy.tracking.streamline)": [[171, "dipy.tracking.streamline.nbytes"]], "ndarray_offset() (in module dipy.tracking.propspeed)": [[171, "dipy.tracking.propspeed.ndarray_offset"]], "ndbincount() (in module dipy.tracking.utils)": [[171, "dipy.tracking.utils.ndbincount"]], "near_roi() (in module dipy.tracking.utils)": [[171, "dipy.tracking.utils.near_roi"]], "norm_3vec() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.norm_3vec"]], "normalized_3vec() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.normalized_3vec"]], "orient_by_rois() (in module dipy.tracking.streamline)": [[171, "dipy.tracking.streamline.orient_by_rois"]], "orient_by_streamline() (in module dipy.tracking.streamline)": [[171, "dipy.tracking.streamline.orient_by_streamline"]], "path_length() (in module dipy.tracking.utils)": [[171, "dipy.tracking.utils.path_length"]], "pft_tracker() (in module dipy.tracking.localtrack)": [[171, "dipy.tracking.localtrack.pft_tracker"]], "point_segment_sq_distance() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.point_segment_sq_distance"]], "point_track_sq_distance_check() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.point_track_sq_distance_check"]], "predict() (dipy.tracking.life.fiberfit method)": [[171, "dipy.tracking.life.FiberFit.predict"]], "principal_components() (in module dipy.tracking.metrics)": [[171, "dipy.tracking.metrics.principal_components"]], "query() (dipy.tracking.fbcmeasures.kdtree method)": [[171, "dipy.tracking.fbcmeasures.KDTree.query"]], "query_ball_point() (dipy.tracking.fbcmeasures.kdtree method)": [[171, "dipy.tracking.fbcmeasures.KDTree.query_ball_point"]], "query_ball_tree() (dipy.tracking.fbcmeasures.kdtree method)": [[171, "dipy.tracking.fbcmeasures.KDTree.query_ball_tree"]], "query_pairs() (dipy.tracking.fbcmeasures.kdtree method)": [[171, "dipy.tracking.fbcmeasures.KDTree.query_pairs"]], "random() (in module dipy.tracking.localtrack)": [[171, "dipy.tracking.localtrack.random"]], "random_coordinates_from_surface() (in module dipy.tracking.mesh)": [[171, "dipy.tracking.mesh.random_coordinates_from_surface"]], "random_seeds_from_mask() (in module dipy.tracking.utils)": [[171, "dipy.tracking.utils.random_seeds_from_mask"]], "reduce_labels() (in module dipy.tracking.utils)": [[171, "dipy.tracking.utils.reduce_labels"]], "reduce_rois() (in module dipy.tracking.utils)": [[171, "dipy.tracking.utils.reduce_rois"]], "relist_streamlines() (in module dipy.tracking.streamline)": [[171, "dipy.tracking.streamline.relist_streamlines"]], "seeds_from_mask() (in module dipy.tracking.utils)": [[171, "dipy.tracking.utils.seeds_from_mask"]], "seeds_from_surface_coordinates() (in module dipy.tracking.mesh)": [[171, "dipy.tracking.mesh.seeds_from_surface_coordinates"]], "select_by_rois() (in module dipy.tracking.streamline)": [[171, "dipy.tracking.streamline.select_by_rois"]], "select_random_set_of_streamlines() (in module dipy.tracking.streamline)": [[171, "dipy.tracking.streamline.select_random_set_of_streamlines"]], "set_number_of_points() (in module dipy.tracking.streamlinespeed)": [[171, "dipy.tracking.streamlinespeed.set_number_of_points"]], "setup() (dipy.tracking.life.fibermodel method)": [[171, "dipy.tracking.life.FiberModel.setup"]], "setup() (in module dipy.tracking.benchmarks.bench_streamline)": [[171, "dipy.tracking.benchmarks.bench_streamline.setup"]], "sparse_distance_matrix() (dipy.tracking.fbcmeasures.kdtree method)": [[171, "dipy.tracking.fbcmeasures.KDTree.sparse_distance_matrix"]], "spline() (in module dipy.tracking.metrics)": [[171, "dipy.tracking.metrics.spline"]], "split (dipy.tracking.fbcmeasures.kdtree.innernode property)": [[171, "dipy.tracking.fbcmeasures.KDTree.innernode.split"]], "split_dim (dipy.tracking.fbcmeasures.kdtree.innernode property)": [[171, "dipy.tracking.fbcmeasures.KDTree.innernode.split_dim"]], "startpoint() (in module dipy.tracking.metrics)": [[171, "dipy.tracking.metrics.startpoint"]], "streamline_gradients() (in module dipy.tracking.life)": [[171, "dipy.tracking.life.streamline_gradients"]], "streamline_mapping() (in module dipy.tracking.vox2track)": [[171, "dipy.tracking.vox2track.streamline_mapping"]], "streamline_near_roi() (in module dipy.tracking.utils)": [[171, "dipy.tracking.utils.streamline_near_roi"]], "streamline_signal() (dipy.tracking.life.lifesignalmaker method)": [[171, "dipy.tracking.life.LifeSignalMaker.streamline_signal"]], "streamline_signal() (in module dipy.tracking.life)": [[171, "dipy.tracking.life.streamline_signal"]], "streamline_tensors() (in module dipy.tracking.life)": [[171, "dipy.tracking.life.streamline_tensors"]], "sub_3vecs() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.sub_3vecs"]], "subsegment() (in module dipy.tracking.utils)": [[171, "dipy.tracking.utils.subsegment"]], "target() (in module dipy.tracking.utils)": [[171, "dipy.tracking.utils.target"]], "target_line_based() (in module dipy.tracking.utils)": [[171, "dipy.tracking.utils.target_line_based"]], "track_counts() (in module dipy.tracking.vox2track)": [[171, "dipy.tracking.vox2track.track_counts"]], "track_dist_3pts() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.track_dist_3pts"]], "track_roi_intersection_check() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.track_roi_intersection_check"]], "transform_streamlines() (in module dipy.tracking.streamline)": [[171, "dipy.tracking.streamline.transform_streamlines"]], "transform_tracking_output() (in module dipy.tracking.utils)": [[171, "dipy.tracking.utils.transform_tracking_output"]], "tree (dipy.tracking.fbcmeasures.kdtree property)": [[171, "dipy.tracking.fbcmeasures.KDTree.tree"]], "triangles_area() (in module dipy.tracking.mesh)": [[171, "dipy.tracking.mesh.triangles_area"]], "unique_rows() (in module dipy.tracking.utils)": [[171, "dipy.tracking.utils.unique_rows"]], "unlist_streamlines() (in module dipy.tracking.streamline)": [[171, "dipy.tracking.streamline.unlist_streamlines"]], "values_from_volume() (in module dipy.tracking.streamline)": [[171, "dipy.tracking.streamline.values_from_volume"]], "vertices_to_triangles_values() (in module dipy.tracking.mesh)": [[171, "dipy.tracking.mesh.vertices_to_triangles_values"]], "voxel2streamline() (in module dipy.tracking.life)": [[171, "dipy.tracking.life.voxel2streamline"]], "warn() (in module dipy.tracking.distances)": [[171, "dipy.tracking.distances.warn"]], "winding() (in module dipy.tracking.metrics)": [[171, "dipy.tracking.metrics.winding"]], "clusterstab (class in dipy.viz.horizon.tab.cluster)": [[172, "dipy.viz.horizon.tab.cluster.ClustersTab"]], "clustersvisualizer (class in dipy.viz.horizon.visualizer.cluster)": [[172, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer"]], "globalhorizon (class in dipy.viz.gmem)": [[172, "dipy.viz.gmem.GlobalHorizon"]], "horizon (class in dipy.viz.horizon.app)": [[172, "dipy.viz.horizon.app.Horizon"]], "horizontab (class in dipy.viz.horizon.tab.base)": [[172, "dipy.viz.horizon.tab.base.HorizonTab"]], "peakstab (class in dipy.viz.horizon.tab.peak)": [[172, "dipy.viz.horizon.tab.peak.PeaksTab"]], "roistab (class in dipy.viz.horizon.tab.roi)": [[172, "dipy.viz.horizon.tab.roi.ROIsTab"]], "slicestab (class in dipy.viz.horizon.tab.slice)": [[172, "dipy.viz.horizon.tab.slice.SlicesTab"]], "slicesvisualizer (class in dipy.viz.horizon.visualizer.slice)": [[172, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer"]], "tabmanager (class in dipy.viz.horizon.tab.base)": [[172, "dipy.viz.horizon.tab.base.TabManager"]], "__init__() (dipy.viz.gmem.globalhorizon method)": [[172, "dipy.viz.gmem.GlobalHorizon.__init__"]], "__init__() (dipy.viz.horizon.app.horizon method)": [[172, "dipy.viz.horizon.app.Horizon.__init__"]], "__init__() (dipy.viz.horizon.tab.base.horizontab method)": [[172, "dipy.viz.horizon.tab.base.HorizonTab.__init__"]], "__init__() (dipy.viz.horizon.tab.base.tabmanager method)": [[172, "dipy.viz.horizon.tab.base.TabManager.__init__"]], "__init__() (dipy.viz.horizon.tab.cluster.clusterstab method)": [[172, "dipy.viz.horizon.tab.cluster.ClustersTab.__init__"]], "__init__() (dipy.viz.horizon.tab.peak.peakstab method)": [[172, "dipy.viz.horizon.tab.peak.PeaksTab.__init__"]], "__init__() (dipy.viz.horizon.tab.roi.roistab method)": [[172, "dipy.viz.horizon.tab.roi.ROIsTab.__init__"]], "__init__() (dipy.viz.horizon.tab.slice.slicestab method)": [[172, "dipy.viz.horizon.tab.slice.SlicesTab.__init__"]], "__init__() (dipy.viz.horizon.visualizer.cluster.clustersvisualizer method)": [[172, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.__init__"]], "__init__() (dipy.viz.horizon.visualizer.slice.slicesvisualizer method)": [[172, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.__init__"]], "add_cluster_actors() (dipy.viz.horizon.visualizer.cluster.clustersvisualizer method)": [[172, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.add_cluster_actors"]], "build() (dipy.viz.horizon.tab.base.horizontab method)": [[172, "dipy.viz.horizon.tab.base.HorizonTab.build"]], "build() (dipy.viz.horizon.tab.cluster.clusterstab method)": [[172, "dipy.viz.horizon.tab.cluster.ClustersTab.build"]], "build() (dipy.viz.horizon.tab.peak.peakstab method)": [[172, "dipy.viz.horizon.tab.peak.PeaksTab.build"]], "build() (dipy.viz.horizon.tab.roi.roistab method)": [[172, "dipy.viz.horizon.tab.roi.ROIsTab.build"]], "build() (dipy.viz.horizon.tab.slice.slicestab method)": [[172, "dipy.viz.horizon.tab.slice.SlicesTab.build"]], "build_label() (in module dipy.viz.horizon.tab.base)": [[172, "dipy.viz.horizon.tab.base.build_label"]], "build_label() (in module dipy.viz.panel)": [[172, "dipy.viz.panel.build_label"]], "build_scene() (dipy.viz.horizon.app.horizon method)": [[172, "dipy.viz.horizon.app.Horizon.build_scene"]], "build_show() (dipy.viz.horizon.app.horizon method)": [[172, "dipy.viz.horizon.app.Horizon.build_show"]], "bundle_shape_profile() (in module dipy.viz.plotting)": [[172, "dipy.viz.plotting.bundle_shape_profile"]], "centroid_actors (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[172, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.centroid_actors"]], "change_volume() (dipy.viz.horizon.visualizer.slice.slicesvisualizer method)": [[172, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.change_volume"]], "cluster_actors (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[172, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.cluster_actors"]], "color_double_slider() (in module dipy.viz.horizon.tab.base)": [[172, "dipy.viz.horizon.tab.base.color_double_slider"]], "color_single_slider() (in module dipy.viz.horizon.tab.base)": [[172, "dipy.viz.horizon.tab.base.color_single_slider"]], "compare_maps() (in module dipy.viz.plotting)": [[172, "dipy.viz.plotting.compare_maps"]], "compare_qti_maps() (in module dipy.viz.plotting)": [[172, "dipy.viz.plotting.compare_qti_maps"]], "data_shape (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[172, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.data_shape"]], "dipy.viz": [[172, "module-dipy.viz"]], "dipy.viz.gmem": [[172, "module-dipy.viz.gmem"]], "dipy.viz.horizon": [[172, "module-dipy.viz.horizon"]], "dipy.viz.horizon.app": [[172, "module-dipy.viz.horizon.app"]], "dipy.viz.horizon.tab": [[172, "module-dipy.viz.horizon.tab"]], "dipy.viz.horizon.tab.base": [[172, "module-dipy.viz.horizon.tab.base"]], "dipy.viz.horizon.tab.cluster": [[172, "module-dipy.viz.horizon.tab.cluster"]], "dipy.viz.horizon.tab.peak": [[172, "module-dipy.viz.horizon.tab.peak"]], "dipy.viz.horizon.tab.roi": [[172, "module-dipy.viz.horizon.tab.roi"]], "dipy.viz.horizon.tab.slice": [[172, "module-dipy.viz.horizon.tab.slice"]], "dipy.viz.horizon.visualizer": [[172, "module-dipy.viz.horizon.visualizer"]], "dipy.viz.horizon.visualizer.cluster": [[172, "module-dipy.viz.horizon.visualizer.cluster"]], "dipy.viz.horizon.visualizer.slice": [[172, "module-dipy.viz.horizon.visualizer.slice"]], "dipy.viz.panel": [[172, "module-dipy.viz.panel"]], "dipy.viz.plotting": [[172, "module-dipy.viz.plotting"]], "dipy.viz.projections": [[172, "module-dipy.viz.projections"]], "dipy.viz.regtools": [[172, "module-dipy.viz.regtools"]], "dipy.viz.streamline": [[172, "module-dipy.viz.streamline"]], "draw_lattice_2d() (in module dipy.viz.regtools)": [[172, "dipy.viz.regtools.draw_lattice_2d"]], "horizon() (in module dipy.viz.horizon.app)": [[172, "dipy.viz.horizon.app.horizon"]], "intensities_range (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[172, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.intensities_range"]], "lengths (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[172, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.lengths"]], "name (dipy.viz.horizon.tab.base.horizontab property)": [[172, "dipy.viz.horizon.tab.base.HorizonTab.name"]], "name (dipy.viz.horizon.tab.cluster.clusterstab property)": [[172, "dipy.viz.horizon.tab.cluster.ClustersTab.name"]], "name (dipy.viz.horizon.tab.peak.peakstab property)": [[172, "dipy.viz.horizon.tab.peak.PeaksTab.name"]], "name (dipy.viz.horizon.tab.roi.roistab property)": [[172, "dipy.viz.horizon.tab.roi.ROIsTab.name"]], "name (dipy.viz.horizon.tab.slice.slicestab property)": [[172, "dipy.viz.horizon.tab.slice.SlicesTab.name"]], "overlay_images() (in module dipy.viz.regtools)": [[172, "dipy.viz.regtools.overlay_images"]], "overlay_slices() (in module dipy.viz.regtools)": [[172, "dipy.viz.regtools.overlay_slices"]], "plot_2d_diffeomorphic_map() (in module dipy.viz.regtools)": [[172, "dipy.viz.regtools.plot_2d_diffeomorphic_map"]], "plot_slices() (in module dipy.viz.regtools)": [[172, "dipy.viz.regtools.plot_slices"]], "recluster_tractograms() (dipy.viz.horizon.visualizer.cluster.clustersvisualizer method)": [[172, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.recluster_tractograms"]], "register_picker_callback() (dipy.viz.horizon.visualizer.slice.slicesvisualizer method)": [[172, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.register_picker_callback"]], "reposition() (dipy.viz.horizon.tab.base.tabmanager method)": [[172, "dipy.viz.horizon.tab.base.TabManager.reposition"]], "selected_slices (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[172, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.selected_slices"]], "show_bundles() (in module dipy.viz.streamline)": [[172, "dipy.viz.streamline.show_bundles"]], "simple_plot() (in module dipy.viz.regtools)": [[172, "dipy.viz.regtools.simple_plot"]], "sizes (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[172, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.sizes"]], "slice_actors (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[172, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.slice_actors"]], "slicer_panel() (in module dipy.viz.panel)": [[172, "dipy.viz.panel.slicer_panel"]], "sph_project() (in module dipy.viz.projections)": [[172, "dipy.viz.projections.sph_project"]], "tab_ui (dipy.viz.horizon.tab.base.tabmanager property)": [[172, "dipy.viz.horizon.tab.base.TabManager.tab_ui"]], "tractogram_clusters (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[172, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.tractogram_clusters"]], "viz_displacement_mag() (in module dipy.viz.streamline)": [[172, "dipy.viz.streamline.viz_displacement_mag"]], "viz_two_bundles() (in module dipy.viz.streamline)": [[172, "dipy.viz.streamline.viz_two_bundles"]], "viz_vector_field() (in module dipy.viz.streamline)": [[172, "dipy.viz.streamline.viz_vector_field"]], "volume_max (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[172, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.volume_max"]], "volume_min (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[172, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.volume_min"]], "applytransformflow (class in dipy.workflows.align)": [[173, "dipy.workflows.align.ApplyTransformFlow"]], "bundleanalysistractometryflow (class in dipy.workflows.stats)": [[173, "dipy.workflows.stats.BundleAnalysisTractometryFlow"]], "bundleshapeanalysis (class in dipy.workflows.stats)": [[173, "dipy.workflows.stats.BundleShapeAnalysis"]], "bundlewarpflow (class in dipy.workflows.align)": [[173, "dipy.workflows.align.BundleWarpFlow"]], "combinedworkflow (class in dipy.workflows.combined_workflow)": [[173, "dipy.workflows.combined_workflow.CombinedWorkflow"]], "evacplusflow (class in dipy.workflows.nn)": [[173, "dipy.workflows.nn.EVACPlusFlow"]], "fetchflow (class in dipy.workflows.io)": [[173, "dipy.workflows.io.FetchFlow"]], "gibbsringingflow (class in dipy.workflows.denoise)": [[173, "dipy.workflows.denoise.GibbsRingingFlow"]], "horizonflow (class in dipy.workflows.viz)": [[173, "dipy.workflows.viz.HorizonFlow"]], "ioiterator (class in dipy.workflows.multi_io)": [[173, "dipy.workflows.multi_io.IOIterator"]], "imageregistrationflow (class in dipy.workflows.align)": [[173, "dipy.workflows.align.ImageRegistrationFlow"]], "introspectiveargumentparser (class in dipy.workflows.base)": [[173, "dipy.workflows.base.IntrospectiveArgumentParser"]], "ioinfoflow (class in dipy.workflows.io)": [[173, "dipy.workflows.io.IoInfoFlow"]], "lpcaflow (class in dipy.workflows.denoise)": [[173, "dipy.workflows.denoise.LPCAFlow"]], "labelsbundlesflow (class in dipy.workflows.segment)": [[173, "dipy.workflows.segment.LabelsBundlesFlow"]], "linearmixedmodelsflow (class in dipy.workflows.stats)": [[173, "dipy.workflows.stats.LinearMixedModelsFlow"]], "localfibertrackingpamflow (class in dipy.workflows.tracking)": [[173, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow"]], "mppcaflow (class in dipy.workflows.denoise)": [[173, "dipy.workflows.denoise.MPPCAFlow"]], "maskflow (class in dipy.workflows.mask)": [[173, "dipy.workflows.mask.MaskFlow"]], "medianotsuflow (class in dipy.workflows.segment)": [[173, "dipy.workflows.segment.MedianOtsuFlow"]], "motioncorrectionflow (class in dipy.workflows.align)": [[173, "dipy.workflows.align.MotionCorrectionFlow"]], "nlmeansflow (class in dipy.workflows.denoise)": [[173, "dipy.workflows.denoise.NLMeansFlow"]], "numpydocstring (class in dipy.workflows.docstring_parser)": [[173, "dipy.workflows.docstring_parser.NumpyDocString"]], "pftrackingpamflow (class in dipy.workflows.tracking)": [[173, "dipy.workflows.tracking.PFTrackingPAMFlow"]], "patch2selfflow (class in dipy.workflows.denoise)": [[173, "dipy.workflows.denoise.Patch2SelfFlow"]], "reader (class in dipy.workflows.docstring_parser)": [[173, "dipy.workflows.docstring_parser.Reader"]], "recobundlesflow (class in dipy.workflows.segment)": [[173, "dipy.workflows.segment.RecoBundlesFlow"]], "reconstcsaflow (class in dipy.workflows.reconst)": [[173, "dipy.workflows.reconst.ReconstCSAFlow"]], "reconstcsdflow (class in dipy.workflows.reconst)": [[173, "dipy.workflows.reconst.ReconstCSDFlow"]], "reconstdkiflow (class in dipy.workflows.reconst)": [[173, "dipy.workflows.reconst.ReconstDkiFlow"]], "reconstdtiflow (class in dipy.workflows.reconst)": [[173, "dipy.workflows.reconst.ReconstDtiFlow"]], "reconstivimflow (class in dipy.workflows.reconst)": [[173, "dipy.workflows.reconst.ReconstIvimFlow"]], "reconstmapmriflow (class in dipy.workflows.reconst)": [[173, "dipy.workflows.reconst.ReconstMAPMRIFlow"]], "reconstrumbaflow (class in dipy.workflows.reconst)": [[173, "dipy.workflows.reconst.ReconstRUMBAFlow"]], "resliceflow (class in dipy.workflows.align)": [[173, "dipy.workflows.align.ResliceFlow"]], "snrinccflow (class in dipy.workflows.stats)": [[173, "dipy.workflows.stats.SNRinCCFlow"]], "slrwithqbxflow (class in dipy.workflows.align)": [[173, "dipy.workflows.align.SlrWithQbxFlow"]], "splitflow (class in dipy.workflows.io)": [[173, "dipy.workflows.io.SplitFlow"]], "synregistrationflow (class in dipy.workflows.align)": [[173, "dipy.workflows.align.SynRegistrationFlow"]], "workflow (class in dipy.workflows.workflow)": [[173, "dipy.workflows.workflow.Workflow"]], "__init__() (dipy.workflows.align.applytransformflow method)": [[173, "dipy.workflows.align.ApplyTransformFlow.__init__"]], "__init__() (dipy.workflows.align.bundlewarpflow method)": [[173, "dipy.workflows.align.BundleWarpFlow.__init__"]], "__init__() (dipy.workflows.align.imageregistrationflow method)": [[173, "dipy.workflows.align.ImageRegistrationFlow.__init__"]], "__init__() (dipy.workflows.align.motioncorrectionflow method)": [[173, "dipy.workflows.align.MotionCorrectionFlow.__init__"]], "__init__() (dipy.workflows.align.resliceflow method)": [[173, "dipy.workflows.align.ResliceFlow.__init__"]], "__init__() (dipy.workflows.align.slrwithqbxflow method)": [[173, "dipy.workflows.align.SlrWithQbxFlow.__init__"]], "__init__() (dipy.workflows.align.synregistrationflow method)": [[173, "dipy.workflows.align.SynRegistrationFlow.__init__"]], "__init__() (dipy.workflows.base.introspectiveargumentparser method)": [[173, "dipy.workflows.base.IntrospectiveArgumentParser.__init__"]], "__init__() (dipy.workflows.combined_workflow.combinedworkflow method)": [[173, "dipy.workflows.combined_workflow.CombinedWorkflow.__init__"]], "__init__() (dipy.workflows.denoise.gibbsringingflow method)": [[173, "dipy.workflows.denoise.GibbsRingingFlow.__init__"]], "__init__() (dipy.workflows.denoise.lpcaflow method)": [[173, "dipy.workflows.denoise.LPCAFlow.__init__"]], "__init__() (dipy.workflows.denoise.mppcaflow method)": [[173, "dipy.workflows.denoise.MPPCAFlow.__init__"]], "__init__() (dipy.workflows.denoise.nlmeansflow method)": [[173, "dipy.workflows.denoise.NLMeansFlow.__init__"]], "__init__() (dipy.workflows.denoise.patch2selfflow method)": [[173, "dipy.workflows.denoise.Patch2SelfFlow.__init__"]], "__init__() (dipy.workflows.docstring_parser.numpydocstring method)": [[173, "dipy.workflows.docstring_parser.NumpyDocString.__init__"]], "__init__() (dipy.workflows.docstring_parser.reader method)": [[173, "dipy.workflows.docstring_parser.Reader.__init__"]], "__init__() (dipy.workflows.io.fetchflow method)": [[173, "dipy.workflows.io.FetchFlow.__init__"]], "__init__() (dipy.workflows.io.ioinfoflow method)": [[173, "dipy.workflows.io.IoInfoFlow.__init__"]], "__init__() (dipy.workflows.io.splitflow method)": [[173, "dipy.workflows.io.SplitFlow.__init__"]], "__init__() (dipy.workflows.mask.maskflow method)": [[173, "dipy.workflows.mask.MaskFlow.__init__"]], "__init__() (dipy.workflows.multi_io.ioiterator method)": [[173, "dipy.workflows.multi_io.IOIterator.__init__"]], "__init__() (dipy.workflows.nn.evacplusflow method)": [[173, "dipy.workflows.nn.EVACPlusFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstcsaflow method)": [[173, "dipy.workflows.reconst.ReconstCSAFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstcsdflow method)": [[173, "dipy.workflows.reconst.ReconstCSDFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstdkiflow method)": [[173, "dipy.workflows.reconst.ReconstDkiFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstdtiflow method)": [[173, "dipy.workflows.reconst.ReconstDtiFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstivimflow method)": [[173, "dipy.workflows.reconst.ReconstIvimFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstmapmriflow method)": [[173, "dipy.workflows.reconst.ReconstMAPMRIFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstrumbaflow method)": [[173, "dipy.workflows.reconst.ReconstRUMBAFlow.__init__"]], "__init__() (dipy.workflows.segment.labelsbundlesflow method)": [[173, "dipy.workflows.segment.LabelsBundlesFlow.__init__"]], "__init__() (dipy.workflows.segment.medianotsuflow method)": [[173, "dipy.workflows.segment.MedianOtsuFlow.__init__"]], "__init__() (dipy.workflows.segment.recobundlesflow method)": [[173, "dipy.workflows.segment.RecoBundlesFlow.__init__"]], "__init__() (dipy.workflows.stats.bundleanalysistractometryflow method)": [[173, "dipy.workflows.stats.BundleAnalysisTractometryFlow.__init__"]], "__init__() (dipy.workflows.stats.bundleshapeanalysis method)": [[173, "dipy.workflows.stats.BundleShapeAnalysis.__init__"]], "__init__() (dipy.workflows.stats.linearmixedmodelsflow method)": [[173, "dipy.workflows.stats.LinearMixedModelsFlow.__init__"]], "__init__() (dipy.workflows.stats.snrinccflow method)": [[173, "dipy.workflows.stats.SNRinCCFlow.__init__"]], "__init__() (dipy.workflows.tracking.localfibertrackingpamflow method)": [[173, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow.__init__"]], "__init__() (dipy.workflows.tracking.pftrackingpamflow method)": [[173, "dipy.workflows.tracking.PFTrackingPAMFlow.__init__"]], "__init__() (dipy.workflows.viz.horizonflow method)": [[173, "dipy.workflows.viz.HorizonFlow.__init__"]], "__init__() (dipy.workflows.workflow.workflow method)": [[173, "dipy.workflows.workflow.Workflow.__init__"]], "add_description() (dipy.workflows.base.introspectiveargumentparser method)": [[173, "dipy.workflows.base.IntrospectiveArgumentParser.add_description"]], "add_epilogue() (dipy.workflows.base.introspectiveargumentparser method)": [[173, "dipy.workflows.base.IntrospectiveArgumentParser.add_epilogue"]], "add_sub_flow_args() (dipy.workflows.base.introspectiveargumentparser method)": [[173, "dipy.workflows.base.IntrospectiveArgumentParser.add_sub_flow_args"]], "add_workflow() (dipy.workflows.base.introspectiveargumentparser method)": [[173, "dipy.workflows.base.IntrospectiveArgumentParser.add_workflow"]], "basename_without_extension() (in module dipy.workflows.multi_io)": [[173, "dipy.workflows.multi_io.basename_without_extension"]], "buan_bundle_profiles() (in module dipy.workflows.stats)": [[173, "dipy.workflows.stats.buan_bundle_profiles"]], "check_dimensions() (in module dipy.workflows.align)": [[173, "dipy.workflows.align.check_dimensions"]], "common_start() (in module dipy.workflows.multi_io)": [[173, "dipy.workflows.multi_io.common_start"]], "concatenate_inputs() (in module dipy.workflows.multi_io)": [[173, "dipy.workflows.multi_io.concatenate_inputs"]], "connect_output_paths() (in module dipy.workflows.multi_io)": [[173, "dipy.workflows.multi_io.connect_output_paths"]], "create_directories() (dipy.workflows.multi_io.ioiterator method)": [[173, "dipy.workflows.multi_io.IOIterator.create_directories"]], "create_outputs() (dipy.workflows.multi_io.ioiterator method)": [[173, "dipy.workflows.multi_io.IOIterator.create_outputs"]], "dedent_lines() (in module dipy.workflows.docstring_parser)": [[173, "dipy.workflows.docstring_parser.dedent_lines"]], "dipy.workflows": [[173, "module-dipy.workflows"]], "dipy.workflows.align": [[173, "module-dipy.workflows.align"]], "dipy.workflows.base": [[173, "module-dipy.workflows.base"]], "dipy.workflows.combined_workflow": [[173, "module-dipy.workflows.combined_workflow"]], "dipy.workflows.denoise": [[173, "module-dipy.workflows.denoise"]], "dipy.workflows.docstring_parser": [[173, "module-dipy.workflows.docstring_parser"]], "dipy.workflows.flow_runner": [[173, "module-dipy.workflows.flow_runner"]], "dipy.workflows.io": [[173, "module-dipy.workflows.io"]], "dipy.workflows.mask": [[173, "module-dipy.workflows.mask"]], "dipy.workflows.multi_io": [[173, "module-dipy.workflows.multi_io"]], "dipy.workflows.nn": [[173, "module-dipy.workflows.nn"]], "dipy.workflows.reconst": [[173, "module-dipy.workflows.reconst"]], "dipy.workflows.segment": [[173, "module-dipy.workflows.segment"]], "dipy.workflows.stats": [[173, "module-dipy.workflows.stats"]], "dipy.workflows.tracking": [[173, "module-dipy.workflows.tracking"]], "dipy.workflows.viz": [[173, "module-dipy.workflows.viz"]], "dipy.workflows.workflow": [[173, "module-dipy.workflows.workflow"]], "eof() (dipy.workflows.docstring_parser.reader method)": [[173, "dipy.workflows.docstring_parser.Reader.eof"]], "file_existence_check() (dipy.workflows.multi_io.ioiterator method)": [[173, "dipy.workflows.multi_io.IOIterator.file_existence_check"]], "get_args_default() (in module dipy.workflows.base)": [[173, "dipy.workflows.base.get_args_default"]], "get_fetcher_datanames() (dipy.workflows.io.fetchflow static method)": [[173, "dipy.workflows.io.FetchFlow.get_fetcher_datanames"]], "get_fitted_ivim() (dipy.workflows.reconst.reconstivimflow method)": [[173, "dipy.workflows.reconst.ReconstIvimFlow.get_fitted_ivim"]], "get_fitted_tensor() (dipy.workflows.reconst.reconstdkiflow method)": [[173, "dipy.workflows.reconst.ReconstDkiFlow.get_fitted_tensor"]], "get_fitted_tensor() (dipy.workflows.reconst.reconstdtiflow method)": [[173, "dipy.workflows.reconst.ReconstDtiFlow.get_fitted_tensor"]], "get_flow_args() (dipy.workflows.base.introspectiveargumentparser method)": [[173, "dipy.workflows.base.IntrospectiveArgumentParser.get_flow_args"]], "get_io_iterator() (dipy.workflows.workflow.workflow method)": [[173, "dipy.workflows.workflow.Workflow.get_io_iterator"]], "get_level() (in module dipy.workflows.flow_runner)": [[173, "dipy.workflows.flow_runner.get_level"]], "get_metric_name() (dipy.workflows.stats.linearmixedmodelsflow method)": [[173, "dipy.workflows.stats.LinearMixedModelsFlow.get_metric_name"]], "get_optionals() (dipy.workflows.combined_workflow.combinedworkflow method)": [[173, "dipy.workflows.combined_workflow.CombinedWorkflow.get_optionals"]], "get_short_name() (dipy.workflows.align.bundlewarpflow class method)": [[173, "dipy.workflows.align.BundleWarpFlow.get_short_name"]], "get_short_name() (dipy.workflows.align.resliceflow class method)": [[173, "dipy.workflows.align.ResliceFlow.get_short_name"]], "get_short_name() (dipy.workflows.align.slrwithqbxflow class method)": [[173, "dipy.workflows.align.SlrWithQbxFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.gibbsringingflow class method)": [[173, "dipy.workflows.denoise.GibbsRingingFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.lpcaflow class method)": [[173, "dipy.workflows.denoise.LPCAFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.mppcaflow class method)": [[173, "dipy.workflows.denoise.MPPCAFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.nlmeansflow class method)": [[173, "dipy.workflows.denoise.NLMeansFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.patch2selfflow class method)": [[173, "dipy.workflows.denoise.Patch2SelfFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.fetchflow class method)": [[173, "dipy.workflows.io.FetchFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.ioinfoflow class method)": [[173, "dipy.workflows.io.IoInfoFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.splitflow class method)": [[173, "dipy.workflows.io.SplitFlow.get_short_name"]], "get_short_name() (dipy.workflows.mask.maskflow class method)": [[173, "dipy.workflows.mask.MaskFlow.get_short_name"]], "get_short_name() (dipy.workflows.nn.evacplusflow class method)": [[173, "dipy.workflows.nn.EVACPlusFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstcsaflow class method)": [[173, "dipy.workflows.reconst.ReconstCSAFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstcsdflow class method)": [[173, "dipy.workflows.reconst.ReconstCSDFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstdkiflow class method)": [[173, "dipy.workflows.reconst.ReconstDkiFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstdtiflow class method)": [[173, "dipy.workflows.reconst.ReconstDtiFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstivimflow class method)": [[173, "dipy.workflows.reconst.ReconstIvimFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstmapmriflow class method)": [[173, "dipy.workflows.reconst.ReconstMAPMRIFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstrumbaflow class method)": [[173, "dipy.workflows.reconst.ReconstRUMBAFlow.get_short_name"]], "get_short_name() (dipy.workflows.segment.labelsbundlesflow class method)": [[173, "dipy.workflows.segment.LabelsBundlesFlow.get_short_name"]], "get_short_name() (dipy.workflows.segment.medianotsuflow class method)": [[173, "dipy.workflows.segment.MedianOtsuFlow.get_short_name"]], "get_short_name() (dipy.workflows.segment.recobundlesflow class method)": [[173, "dipy.workflows.segment.RecoBundlesFlow.get_short_name"]], "get_short_name() (dipy.workflows.stats.bundleanalysistractometryflow class method)": [[173, "dipy.workflows.stats.BundleAnalysisTractometryFlow.get_short_name"]], "get_short_name() (dipy.workflows.stats.bundleshapeanalysis class method)": [[173, "dipy.workflows.stats.BundleShapeAnalysis.get_short_name"]], "get_short_name() (dipy.workflows.stats.linearmixedmodelsflow class method)": [[173, "dipy.workflows.stats.LinearMixedModelsFlow.get_short_name"]], "get_short_name() (dipy.workflows.stats.snrinccflow class method)": [[173, "dipy.workflows.stats.SNRinCCFlow.get_short_name"]], "get_short_name() (dipy.workflows.tracking.localfibertrackingpamflow class method)": [[173, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow.get_short_name"]], "get_short_name() (dipy.workflows.tracking.pftrackingpamflow class method)": [[173, "dipy.workflows.tracking.PFTrackingPAMFlow.get_short_name"]], "get_short_name() (dipy.workflows.viz.horizonflow class method)": [[173, "dipy.workflows.viz.HorizonFlow.get_short_name"]], "get_short_name() (dipy.workflows.workflow.workflow class method)": [[173, "dipy.workflows.workflow.Workflow.get_short_name"]], "get_sub_runs() (dipy.workflows.combined_workflow.combinedworkflow method)": [[173, "dipy.workflows.combined_workflow.CombinedWorkflow.get_sub_runs"]], "get_sub_runs() (dipy.workflows.workflow.workflow method)": [[173, "dipy.workflows.workflow.Workflow.get_sub_runs"]], "io_iterator() (in module dipy.workflows.multi_io)": [[173, "dipy.workflows.multi_io.io_iterator"]], "io_iterator_() (in module dipy.workflows.multi_io)": [[173, "dipy.workflows.multi_io.io_iterator_"]], "is_empty() (dipy.workflows.docstring_parser.reader method)": [[173, "dipy.workflows.docstring_parser.Reader.is_empty"]], "load_module() (dipy.workflows.io.fetchflow static method)": [[173, "dipy.workflows.io.FetchFlow.load_module"]], "manage_output_overwrite() (dipy.workflows.workflow.workflow method)": [[173, "dipy.workflows.workflow.Workflow.manage_output_overwrite"]], "none_or_dtype() (in module dipy.workflows.base)": [[173, "dipy.workflows.base.none_or_dtype"]], "optional_parameters (dipy.workflows.base.introspectiveargumentparser property)": [[173, "dipy.workflows.base.IntrospectiveArgumentParser.optional_parameters"]], "output_parameters (dipy.workflows.base.introspectiveargumentparser property)": [[173, "dipy.workflows.base.IntrospectiveArgumentParser.output_parameters"]], "peek() (dipy.workflows.docstring_parser.reader method)": [[173, "dipy.workflows.docstring_parser.Reader.peek"]], "positional_parameters (dipy.workflows.base.introspectiveargumentparser property)": [[173, "dipy.workflows.base.IntrospectiveArgumentParser.positional_parameters"]], "read() (dipy.workflows.docstring_parser.reader method)": [[173, "dipy.workflows.docstring_parser.Reader.read"]], "read_to_condition() (dipy.workflows.docstring_parser.reader method)": [[173, "dipy.workflows.docstring_parser.Reader.read_to_condition"]], "read_to_next_empty_line() (dipy.workflows.docstring_parser.reader method)": [[173, "dipy.workflows.docstring_parser.Reader.read_to_next_empty_line"]], "read_to_next_unindented_line() (dipy.workflows.docstring_parser.reader method)": [[173, "dipy.workflows.docstring_parser.Reader.read_to_next_unindented_line"]], "reset() (dipy.workflows.docstring_parser.reader method)": [[173, "dipy.workflows.docstring_parser.Reader.reset"]], "run() (dipy.workflows.align.applytransformflow method)": [[173, "dipy.workflows.align.ApplyTransformFlow.run"]], "run() (dipy.workflows.align.bundlewarpflow method)": [[173, "dipy.workflows.align.BundleWarpFlow.run"]], "run() (dipy.workflows.align.imageregistrationflow method)": [[173, "dipy.workflows.align.ImageRegistrationFlow.run"]], "run() (dipy.workflows.align.motioncorrectionflow method)": [[173, "dipy.workflows.align.MotionCorrectionFlow.run"]], "run() (dipy.workflows.align.resliceflow method)": [[173, "dipy.workflows.align.ResliceFlow.run"]], "run() (dipy.workflows.align.slrwithqbxflow method)": [[173, "dipy.workflows.align.SlrWithQbxFlow.run"]], "run() (dipy.workflows.align.synregistrationflow method)": [[173, "dipy.workflows.align.SynRegistrationFlow.run"]], "run() (dipy.workflows.denoise.gibbsringingflow method)": [[173, "dipy.workflows.denoise.GibbsRingingFlow.run"]], "run() (dipy.workflows.denoise.lpcaflow method)": [[173, "dipy.workflows.denoise.LPCAFlow.run"]], "run() (dipy.workflows.denoise.mppcaflow method)": [[173, "dipy.workflows.denoise.MPPCAFlow.run"]], "run() (dipy.workflows.denoise.nlmeansflow method)": [[173, "dipy.workflows.denoise.NLMeansFlow.run"]], "run() (dipy.workflows.denoise.patch2selfflow method)": [[173, "dipy.workflows.denoise.Patch2SelfFlow.run"]], "run() (dipy.workflows.io.fetchflow method)": [[173, "dipy.workflows.io.FetchFlow.run"]], "run() (dipy.workflows.io.ioinfoflow method)": [[173, "dipy.workflows.io.IoInfoFlow.run"]], "run() (dipy.workflows.io.splitflow method)": [[173, "dipy.workflows.io.SplitFlow.run"]], "run() (dipy.workflows.mask.maskflow method)": [[173, "dipy.workflows.mask.MaskFlow.run"]], "run() (dipy.workflows.nn.evacplusflow method)": [[173, "dipy.workflows.nn.EVACPlusFlow.run"]], "run() (dipy.workflows.reconst.reconstcsaflow method)": [[173, "dipy.workflows.reconst.ReconstCSAFlow.run"]], "run() (dipy.workflows.reconst.reconstcsdflow method)": [[173, "dipy.workflows.reconst.ReconstCSDFlow.run"]], "run() (dipy.workflows.reconst.reconstdkiflow method)": [[173, "dipy.workflows.reconst.ReconstDkiFlow.run"]], "run() (dipy.workflows.reconst.reconstdtiflow method)": [[173, "dipy.workflows.reconst.ReconstDtiFlow.run"]], "run() (dipy.workflows.reconst.reconstivimflow method)": [[173, "dipy.workflows.reconst.ReconstIvimFlow.run"]], "run() (dipy.workflows.reconst.reconstmapmriflow method)": [[173, "dipy.workflows.reconst.ReconstMAPMRIFlow.run"]], "run() (dipy.workflows.reconst.reconstrumbaflow method)": [[173, "dipy.workflows.reconst.ReconstRUMBAFlow.run"]], "run() (dipy.workflows.segment.labelsbundlesflow method)": [[173, "dipy.workflows.segment.LabelsBundlesFlow.run"]], "run() (dipy.workflows.segment.medianotsuflow method)": [[173, "dipy.workflows.segment.MedianOtsuFlow.run"]], "run() (dipy.workflows.segment.recobundlesflow method)": [[173, "dipy.workflows.segment.RecoBundlesFlow.run"]], "run() (dipy.workflows.stats.bundleanalysistractometryflow method)": [[173, "dipy.workflows.stats.BundleAnalysisTractometryFlow.run"]], "run() (dipy.workflows.stats.bundleshapeanalysis method)": [[173, "dipy.workflows.stats.BundleShapeAnalysis.run"]], "run() (dipy.workflows.stats.linearmixedmodelsflow method)": [[173, "dipy.workflows.stats.LinearMixedModelsFlow.run"]], "run() (dipy.workflows.stats.snrinccflow method)": [[173, "dipy.workflows.stats.SNRinCCFlow.run"]], "run() (dipy.workflows.tracking.localfibertrackingpamflow method)": [[173, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow.run"]], "run() (dipy.workflows.tracking.pftrackingpamflow method)": [[173, "dipy.workflows.tracking.PFTrackingPAMFlow.run"]], "run() (dipy.workflows.viz.horizonflow method)": [[173, "dipy.workflows.viz.HorizonFlow.run"]], "run() (dipy.workflows.workflow.workflow method)": [[173, "dipy.workflows.workflow.Workflow.run"]], "run_flow() (in module dipy.workflows.flow_runner)": [[173, "dipy.workflows.flow_runner.run_flow"]], "run_sub_flow() (dipy.workflows.combined_workflow.combinedworkflow method)": [[173, "dipy.workflows.combined_workflow.CombinedWorkflow.run_sub_flow"]], "save_lmm_plot() (dipy.workflows.stats.linearmixedmodelsflow method)": [[173, "dipy.workflows.stats.LinearMixedModelsFlow.save_lmm_plot"]], "seek_next_non_empty_line() (dipy.workflows.docstring_parser.reader method)": [[173, "dipy.workflows.docstring_parser.Reader.seek_next_non_empty_line"]], "set_inputs() (dipy.workflows.multi_io.ioiterator method)": [[173, "dipy.workflows.multi_io.IOIterator.set_inputs"]], "set_out_dir() (dipy.workflows.multi_io.ioiterator method)": [[173, "dipy.workflows.multi_io.IOIterator.set_out_dir"]], "set_out_fnames() (dipy.workflows.multi_io.ioiterator method)": [[173, "dipy.workflows.multi_io.IOIterator.set_out_fnames"]], "set_output_keys() (dipy.workflows.multi_io.ioiterator method)": [[173, "dipy.workflows.multi_io.IOIterator.set_output_keys"]], "set_sub_flows_optionals() (dipy.workflows.combined_workflow.combinedworkflow method)": [[173, "dipy.workflows.combined_workflow.CombinedWorkflow.set_sub_flows_optionals"]], "show_argument() (dipy.workflows.base.introspectiveargumentparser method)": [[173, "dipy.workflows.base.IntrospectiveArgumentParser.show_argument"]], "slash_to_under() (in module dipy.workflows.multi_io)": [[173, "dipy.workflows.multi_io.slash_to_under"]], "update_argument() (dipy.workflows.base.introspectiveargumentparser method)": [[173, "dipy.workflows.base.IntrospectiveArgumentParser.update_argument"]]}})