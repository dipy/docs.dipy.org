Search.setIndex({"docnames": ["api_changes", "cite", "devel/benchmarking", "devel/coding_style_guideline", "devel/commit_codes", "devel/gitwash/configure_git", "devel/gitwash/development_workflow", "devel/gitwash/dot2_dot3", "devel/gitwash/following_latest", "devel/gitwash/forking_hell", "devel/gitwash/git_development", "devel/gitwash/git_install", "devel/gitwash/git_intro", "devel/gitwash/git_resources", "devel/gitwash/index", "devel/gitwash/maintainer_workflow", "devel/gitwash/patching", "devel/gitwash/set_up_fork", "devel/index", "devel/installation_from_source", "devel/intro", "devel/make_release", "devel/toolchain", "developers", "examples_built/contextual_enhancement/contextual_enhancement", "examples_built/contextual_enhancement/fiber_to_bundle_coherence", "examples_built/contextual_enhancement/index", "examples_built/contextual_enhancement/sg_execution_times", "examples_built/fiber_tracking/index", "examples_built/fiber_tracking/linear_fascicle_evaluation", "examples_built/fiber_tracking/sg_execution_times", "examples_built/fiber_tracking/surface_seed", "examples_built/fiber_tracking/tracking_bootstrap_peaks", "examples_built/fiber_tracking/tracking_deterministic", "examples_built/fiber_tracking/tracking_introduction_eudx_1", "examples_built/fiber_tracking/tracking_pft", "examples_built/fiber_tracking/tracking_probabilistic", "examples_built/fiber_tracking/tracking_ptt", "examples_built/fiber_tracking/tracking_rumba", "examples_built/fiber_tracking/tracking_sfm", "examples_built/fiber_tracking/tracking_stopping_criterion", "examples_built/file_formats/index", "examples_built/file_formats/sg_execution_times", "examples_built/file_formats/streamline_formats", "examples_built/index", "examples_built/multiprocessing/index", "examples_built/multiprocessing/reconst_csa_parallel", "examples_built/multiprocessing/reconst_csd_parallel", "examples_built/multiprocessing/sg_execution_times", "examples_built/preprocessing/brain_extraction_dwi", "examples_built/preprocessing/denoise_ascm", "examples_built/preprocessing/denoise_gibbs", "examples_built/preprocessing/denoise_localpca", "examples_built/preprocessing/denoise_mppca", "examples_built/preprocessing/denoise_nlmeans", "examples_built/preprocessing/denoise_patch2self", "examples_built/preprocessing/gradients_spheres", "examples_built/preprocessing/index", "examples_built/preprocessing/motion_correction", "examples_built/preprocessing/piesno", "examples_built/preprocessing/reslice_datasets", "examples_built/preprocessing/sg_execution_times", "examples_built/preprocessing/snr_in_cc", "examples_built/quick_start/index", "examples_built/quick_start/quick_start", "examples_built/quick_start/sg_execution_times", "examples_built/quick_start/tracking_introduction_eudx", "examples_built/reconstruction/histology_resdnn", "examples_built/reconstruction/index", "examples_built/reconstruction/kfold_xval", "examples_built/reconstruction/reconst_csa", "examples_built/reconstruction/reconst_csd", "examples_built/reconstruction/reconst_cti", "examples_built/reconstruction/reconst_dki", "examples_built/reconstruction/reconst_dki_micro", "examples_built/reconstruction/reconst_dsi", "examples_built/reconstruction/reconst_dsi_metrics", "examples_built/reconstruction/reconst_dsid", "examples_built/reconstruction/reconst_dti", "examples_built/reconstruction/reconst_forecast", "examples_built/reconstruction/reconst_fwdti", "examples_built/reconstruction/reconst_gqi", "examples_built/reconstruction/reconst_ivim", "examples_built/reconstruction/reconst_mapmri", "examples_built/reconstruction/reconst_mcsd", "examples_built/reconstruction/reconst_msdki", "examples_built/reconstruction/reconst_qtdmri", "examples_built/reconstruction/reconst_qti", "examples_built/reconstruction/reconst_qtiplus", "examples_built/reconstruction/reconst_rumba", "examples_built/reconstruction/reconst_sfm", "examples_built/reconstruction/reconst_sh", "examples_built/reconstruction/reconst_shore", "examples_built/reconstruction/reconst_shore_metrics", "examples_built/reconstruction/restore_dti", "examples_built/reconstruction/sg_execution_times", "examples_built/registration/affine_registration_3d", "examples_built/registration/affine_registration_masks", "examples_built/registration/bundle_group_registration", "examples_built/registration/bundle_registration", "examples_built/registration/bundlewarp_registration", "examples_built/registration/index", "examples_built/registration/register_binary_fuzzy", "examples_built/registration/sg_execution_times", "examples_built/registration/streamline_registration", "examples_built/registration/syn_registration_2d", "examples_built/registration/syn_registration_3d", "examples_built/segmentation/brain_extraction_dwi_1", "examples_built/segmentation/bundle_extraction", "examples_built/segmentation/fast_streamline_search", "examples_built/segmentation/index", "examples_built/segmentation/segment_clustering_features", "examples_built/segmentation/segment_clustering_metrics", "examples_built/segmentation/segment_extending_clustering_framework", "examples_built/segmentation/segment_quickbundles", "examples_built/segmentation/sg_execution_times", "examples_built/segmentation/tissue_classification", "examples_built/sg_execution_times", "examples_built/simulations/index", "examples_built/simulations/reconst_dsid_1", "examples_built/simulations/sg_execution_times", "examples_built/simulations/simulate_dki", "examples_built/simulations/simulate_multi_tensor", "examples_built/streamline_analysis/afq_tract_profiles", "examples_built/streamline_analysis/bundle_assignment_maps", "examples_built/streamline_analysis/bundle_shape_similarity", "examples_built/streamline_analysis/cluster_confidence", "examples_built/streamline_analysis/index", "examples_built/streamline_analysis/path_length_map", "examples_built/streamline_analysis/sg_execution_times", "examples_built/streamline_analysis/streamline_length", "examples_built/streamline_analysis/streamline_tools", "examples_built/visualization/index", "examples_built/visualization/sg_execution_times", "examples_built/visualization/viz_advanced", "examples_built/visualization/viz_bundles", "examples_built/visualization/viz_roi_contour", "examples_built/visualization/viz_slice", "examples_built/workflows/combined_workflow_creation", "examples_built/workflows/index", "examples_built/workflows/sg_execution_times", "examples_built/workflows/workflow_creation", "faq", "gimbal_lock", "glossary", "index", "interfaces/basic_flow", "interfaces/buan_flow", "interfaces/bundle_segmentation_flow", "interfaces/bundlewarp_registration_flow", "interfaces/data_fetch", "interfaces/denoise_flow", "interfaces/gibbs_unringing_flow", "interfaces/index", "interfaces/motion_flow", "interfaces/reconstruction_flow", "interfaces/registration_flow", "interfaces/tracking_flow", "old_highlights", "old_news", "recipes", "reconstruction_models_list", "reference/dipy", "reference/dipy.align", "reference/dipy.core", "reference/dipy.data", "reference/dipy.denoise", "reference/dipy.direction", "reference/dipy.io", "reference/dipy.nn", "reference/dipy.reconst", "reference/dipy.segment", "reference/dipy.sims", "reference/dipy.stats", "reference/dipy.tracking", "reference/dipy.viz", "reference/dipy.workflows", "reference/index", "reference_cmd/dipy_align_affine", "reference_cmd/dipy_align_syn", "reference_cmd/dipy_apply_transform", "reference_cmd/dipy_buan_lmm", "reference_cmd/dipy_buan_profiles", "reference_cmd/dipy_buan_shapes", "reference_cmd/dipy_bundlewarp", "reference_cmd/dipy_concatenate_tractograms", "reference_cmd/dipy_convert_tensors", "reference_cmd/dipy_convert_tractogram", "reference_cmd/dipy_correct_motion", "reference_cmd/dipy_denoise_lpca", "reference_cmd/dipy_denoise_mppca", "reference_cmd/dipy_denoise_nlmeans", "reference_cmd/dipy_denoise_patch2self", "reference_cmd/dipy_evac_plus", "reference_cmd/dipy_fetch", "reference_cmd/dipy_fit_csa", "reference_cmd/dipy_fit_csd", "reference_cmd/dipy_fit_dki", "reference_cmd/dipy_fit_dsi", "reference_cmd/dipy_fit_dti", "reference_cmd/dipy_fit_ivim", "reference_cmd/dipy_fit_mapmri", "reference_cmd/dipy_gibbs_ringing", "reference_cmd/dipy_horizon", "reference_cmd/dipy_info", "reference_cmd/dipy_labelsbundles", "reference_cmd/dipy_mask", "reference_cmd/dipy_median_otsu", "reference_cmd/dipy_recobundles", "reference_cmd/dipy_reslice", "reference_cmd/dipy_sh_convert_mrtrix", "reference_cmd/dipy_slr", "reference_cmd/dipy_snr_in_cc", "reference_cmd/dipy_split", "reference_cmd/dipy_track", "reference_cmd/dipy_track_pft", "reference_cmd/index", "release_notes/release0.10", "release_notes/release0.11", "release_notes/release0.12", "release_notes/release0.13", "release_notes/release0.14", "release_notes/release0.15", "release_notes/release0.16", "release_notes/release0.6", "release_notes/release0.7", "release_notes/release0.8", "release_notes/release0.9", "release_notes/release1.0", "release_notes/release1.1", "release_notes/release1.2", "release_notes/release1.3", "release_notes/release1.4", "release_notes/release1.4.1", "release_notes/release1.5", "release_notes/release1.6", "release_notes/release1.7", "release_notes/release1.8", "sg_execution_times", "stateoftheart", "subscribe", "theory/b_and_q", "theory/bmatrix", "theory/gqi", "theory/index", "theory/sh_basis", "theory/spherical", "user_guide/data", "user_guide/dataset_list", "user_guide/dependencies", "user_guide/getting_started", "user_guide/index", "user_guide/installation", "user_guide/introduction", "user_guide/mission"], "filenames": ["api_changes.rst", "cite.rst", "devel/benchmarking.rst", "devel/coding_style_guideline.rst", "devel/commit_codes.rst", "devel/gitwash/configure_git.rst", "devel/gitwash/development_workflow.rst", "devel/gitwash/dot2_dot3.rst", "devel/gitwash/following_latest.rst", "devel/gitwash/forking_hell.rst", "devel/gitwash/git_development.rst", "devel/gitwash/git_install.rst", "devel/gitwash/git_intro.rst", "devel/gitwash/git_resources.rst", "devel/gitwash/index.rst", "devel/gitwash/maintainer_workflow.rst", "devel/gitwash/patching.rst", "devel/gitwash/set_up_fork.rst", "devel/index.rst", "devel/installation_from_source.rst", "devel/intro.rst", "devel/make_release.rst", "devel/toolchain.rst", "developers.rst", "examples_built/contextual_enhancement/contextual_enhancement.rst", "examples_built/contextual_enhancement/fiber_to_bundle_coherence.rst", "examples_built/contextual_enhancement/index.rst", "examples_built/contextual_enhancement/sg_execution_times.rst", "examples_built/fiber_tracking/index.rst", "examples_built/fiber_tracking/linear_fascicle_evaluation.rst", "examples_built/fiber_tracking/sg_execution_times.rst", "examples_built/fiber_tracking/surface_seed.rst", "examples_built/fiber_tracking/tracking_bootstrap_peaks.rst", "examples_built/fiber_tracking/tracking_deterministic.rst", "examples_built/fiber_tracking/tracking_introduction_eudx_1.rst", "examples_built/fiber_tracking/tracking_pft.rst", "examples_built/fiber_tracking/tracking_probabilistic.rst", "examples_built/fiber_tracking/tracking_ptt.rst", "examples_built/fiber_tracking/tracking_rumba.rst", "examples_built/fiber_tracking/tracking_sfm.rst", "examples_built/fiber_tracking/tracking_stopping_criterion.rst", "examples_built/file_formats/index.rst", "examples_built/file_formats/sg_execution_times.rst", "examples_built/file_formats/streamline_formats.rst", "examples_built/index.rst", "examples_built/multiprocessing/index.rst", "examples_built/multiprocessing/reconst_csa_parallel.rst", "examples_built/multiprocessing/reconst_csd_parallel.rst", "examples_built/multiprocessing/sg_execution_times.rst", "examples_built/preprocessing/brain_extraction_dwi.rst", "examples_built/preprocessing/denoise_ascm.rst", "examples_built/preprocessing/denoise_gibbs.rst", "examples_built/preprocessing/denoise_localpca.rst", "examples_built/preprocessing/denoise_mppca.rst", "examples_built/preprocessing/denoise_nlmeans.rst", "examples_built/preprocessing/denoise_patch2self.rst", "examples_built/preprocessing/gradients_spheres.rst", "examples_built/preprocessing/index.rst", "examples_built/preprocessing/motion_correction.rst", "examples_built/preprocessing/piesno.rst", "examples_built/preprocessing/reslice_datasets.rst", "examples_built/preprocessing/sg_execution_times.rst", "examples_built/preprocessing/snr_in_cc.rst", "examples_built/quick_start/index.rst", "examples_built/quick_start/quick_start.rst", "examples_built/quick_start/sg_execution_times.rst", "examples_built/quick_start/tracking_introduction_eudx.rst", "examples_built/reconstruction/histology_resdnn.rst", "examples_built/reconstruction/index.rst", "examples_built/reconstruction/kfold_xval.rst", "examples_built/reconstruction/reconst_csa.rst", "examples_built/reconstruction/reconst_csd.rst", "examples_built/reconstruction/reconst_cti.rst", "examples_built/reconstruction/reconst_dki.rst", "examples_built/reconstruction/reconst_dki_micro.rst", "examples_built/reconstruction/reconst_dsi.rst", "examples_built/reconstruction/reconst_dsi_metrics.rst", "examples_built/reconstruction/reconst_dsid.rst", "examples_built/reconstruction/reconst_dti.rst", "examples_built/reconstruction/reconst_forecast.rst", "examples_built/reconstruction/reconst_fwdti.rst", "examples_built/reconstruction/reconst_gqi.rst", "examples_built/reconstruction/reconst_ivim.rst", "examples_built/reconstruction/reconst_mapmri.rst", "examples_built/reconstruction/reconst_mcsd.rst", "examples_built/reconstruction/reconst_msdki.rst", "examples_built/reconstruction/reconst_qtdmri.rst", "examples_built/reconstruction/reconst_qti.rst", "examples_built/reconstruction/reconst_qtiplus.rst", "examples_built/reconstruction/reconst_rumba.rst", "examples_built/reconstruction/reconst_sfm.rst", "examples_built/reconstruction/reconst_sh.rst", "examples_built/reconstruction/reconst_shore.rst", "examples_built/reconstruction/reconst_shore_metrics.rst", "examples_built/reconstruction/restore_dti.rst", "examples_built/reconstruction/sg_execution_times.rst", "examples_built/registration/affine_registration_3d.rst", "examples_built/registration/affine_registration_masks.rst", "examples_built/registration/bundle_group_registration.rst", "examples_built/registration/bundle_registration.rst", "examples_built/registration/bundlewarp_registration.rst", "examples_built/registration/index.rst", "examples_built/registration/register_binary_fuzzy.rst", "examples_built/registration/sg_execution_times.rst", "examples_built/registration/streamline_registration.rst", "examples_built/registration/syn_registration_2d.rst", "examples_built/registration/syn_registration_3d.rst", "examples_built/segmentation/brain_extraction_dwi_1.rst", "examples_built/segmentation/bundle_extraction.rst", "examples_built/segmentation/fast_streamline_search.rst", "examples_built/segmentation/index.rst", "examples_built/segmentation/segment_clustering_features.rst", "examples_built/segmentation/segment_clustering_metrics.rst", "examples_built/segmentation/segment_extending_clustering_framework.rst", "examples_built/segmentation/segment_quickbundles.rst", "examples_built/segmentation/sg_execution_times.rst", "examples_built/segmentation/tissue_classification.rst", "examples_built/sg_execution_times.rst", "examples_built/simulations/index.rst", "examples_built/simulations/reconst_dsid_1.rst", "examples_built/simulations/sg_execution_times.rst", "examples_built/simulations/simulate_dki.rst", "examples_built/simulations/simulate_multi_tensor.rst", "examples_built/streamline_analysis/afq_tract_profiles.rst", "examples_built/streamline_analysis/bundle_assignment_maps.rst", "examples_built/streamline_analysis/bundle_shape_similarity.rst", "examples_built/streamline_analysis/cluster_confidence.rst", "examples_built/streamline_analysis/index.rst", "examples_built/streamline_analysis/path_length_map.rst", "examples_built/streamline_analysis/sg_execution_times.rst", "examples_built/streamline_analysis/streamline_length.rst", "examples_built/streamline_analysis/streamline_tools.rst", "examples_built/visualization/index.rst", "examples_built/visualization/sg_execution_times.rst", "examples_built/visualization/viz_advanced.rst", "examples_built/visualization/viz_bundles.rst", "examples_built/visualization/viz_roi_contour.rst", "examples_built/visualization/viz_slice.rst", "examples_built/workflows/combined_workflow_creation.rst", "examples_built/workflows/index.rst", "examples_built/workflows/sg_execution_times.rst", "examples_built/workflows/workflow_creation.rst", "faq.rst", "gimbal_lock.rst", "glossary.rst", "index.rst", "interfaces/basic_flow.rst", "interfaces/buan_flow.rst", "interfaces/bundle_segmentation_flow.rst", "interfaces/bundlewarp_registration_flow.rst", "interfaces/data_fetch.rst", "interfaces/denoise_flow.rst", "interfaces/gibbs_unringing_flow.rst", "interfaces/index.rst", "interfaces/motion_flow.rst", "interfaces/reconstruction_flow.rst", "interfaces/registration_flow.rst", "interfaces/tracking_flow.rst", "old_highlights.rst", "old_news.rst", "recipes.rst", "reconstruction_models_list.rst", "reference/dipy.rst", "reference/dipy.align.rst", "reference/dipy.core.rst", "reference/dipy.data.rst", "reference/dipy.denoise.rst", "reference/dipy.direction.rst", "reference/dipy.io.rst", "reference/dipy.nn.rst", "reference/dipy.reconst.rst", "reference/dipy.segment.rst", "reference/dipy.sims.rst", "reference/dipy.stats.rst", "reference/dipy.tracking.rst", "reference/dipy.viz.rst", "reference/dipy.workflows.rst", "reference/index.rst", "reference_cmd/dipy_align_affine.rst", "reference_cmd/dipy_align_syn.rst", "reference_cmd/dipy_apply_transform.rst", "reference_cmd/dipy_buan_lmm.rst", "reference_cmd/dipy_buan_profiles.rst", "reference_cmd/dipy_buan_shapes.rst", "reference_cmd/dipy_bundlewarp.rst", "reference_cmd/dipy_concatenate_tractograms.rst", "reference_cmd/dipy_convert_tensors.rst", "reference_cmd/dipy_convert_tractogram.rst", "reference_cmd/dipy_correct_motion.rst", "reference_cmd/dipy_denoise_lpca.rst", "reference_cmd/dipy_denoise_mppca.rst", "reference_cmd/dipy_denoise_nlmeans.rst", "reference_cmd/dipy_denoise_patch2self.rst", "reference_cmd/dipy_evac_plus.rst", "reference_cmd/dipy_fetch.rst", "reference_cmd/dipy_fit_csa.rst", "reference_cmd/dipy_fit_csd.rst", "reference_cmd/dipy_fit_dki.rst", "reference_cmd/dipy_fit_dsi.rst", "reference_cmd/dipy_fit_dti.rst", "reference_cmd/dipy_fit_ivim.rst", "reference_cmd/dipy_fit_mapmri.rst", "reference_cmd/dipy_gibbs_ringing.rst", "reference_cmd/dipy_horizon.rst", "reference_cmd/dipy_info.rst", "reference_cmd/dipy_labelsbundles.rst", "reference_cmd/dipy_mask.rst", "reference_cmd/dipy_median_otsu.rst", "reference_cmd/dipy_recobundles.rst", "reference_cmd/dipy_reslice.rst", "reference_cmd/dipy_sh_convert_mrtrix.rst", "reference_cmd/dipy_slr.rst", "reference_cmd/dipy_snr_in_cc.rst", "reference_cmd/dipy_split.rst", "reference_cmd/dipy_track.rst", "reference_cmd/dipy_track_pft.rst", "reference_cmd/index.rst", "release_notes/release0.10.rst", "release_notes/release0.11.rst", "release_notes/release0.12.rst", "release_notes/release0.13.rst", "release_notes/release0.14.rst", "release_notes/release0.15.rst", "release_notes/release0.16.rst", "release_notes/release0.6.rst", "release_notes/release0.7.rst", "release_notes/release0.8.rst", "release_notes/release0.9.rst", "release_notes/release1.0.rst", "release_notes/release1.1.rst", "release_notes/release1.2.rst", "release_notes/release1.3.rst", "release_notes/release1.4.rst", "release_notes/release1.4.1.rst", "release_notes/release1.5.rst", "release_notes/release1.6.rst", "release_notes/release1.7.rst", "release_notes/release1.8.rst", "sg_execution_times.rst", "stateoftheart.rst", "subscribe.rst", "theory/b_and_q.rst", "theory/bmatrix.rst", "theory/gqi.rst", "theory/index.rst", "theory/sh_basis.rst", "theory/spherical.rst", "user_guide/data.rst", "user_guide/dataset_list.rst", "user_guide/dependencies.rst", "user_guide/getting_started.rst", "user_guide/index.rst", "user_guide/installation.rst", "user_guide/introduction.rst", "user_guide/mission.rst"], "titles": ["API changes", "Publications", "\ud83d\ude80 DIPY Benchmarks \ud83d\udcca", "\ud83d\udcbb DIPY Coding Style Guideline", "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-git-commit sd-text-info\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M10.5 7.75a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm1.43.75a4.002 4.002 0 01-7.86 0H.75a.75.75 0 110-1.5h3.32a4.001 4.001 0 017.86 0h3.32a.75.75 0 110 1.5h-3.32z\"></path></svg> Commit message codes", "Configure git", "Development workflow", "Two and three dots in difference specs", "Following the latest source", "Making your own copy (fork) of DIPY", "Git for development", "Install git", "Introduction", "git resources", "Working with DIPY source code", "Maintainer workflow", "Making a patch", "Set up your fork", "DIPY Developer Guide", "Installing from source", "Introduction", "A guide to making a DIPY release", "\ud83d\udee0\ufe0f Toolchain Roadmap", "Developers", "Crossing-preserving contextual enhancement", "Fiber to bundle coherence measures", "Contextual Enhancement", "Computation times", "Fiber Tracking", "Linear fascicle evaluation (LiFE)", "Computation times", "Surface seeding for tractography", "Bootstrap and Closest Peak Direction Getters Example", "An introduction to the Deterministic Maximum Direction Getter", "Introduction to Basic Tracking", "Particle Filtering Tractography", "An introduction to the Probabilistic Direction Getter", "Parallel Transport Tractography", "Tracking with Robust Unbiased Model-BAsed Spherical Deconvolution (RUMBA-SD)", "Tracking with the Sparse Fascicle Model", "Using Various Stopping Criterion for Tractography", "File Formats", "Computation times", "Read/Write streamline files", "Examples", "Multiprocessing", "Parallel reconstruction using Q-Ball", "Parallel reconstruction using CSD", "Computation times", "Brain segmentation with median_otsu", "Denoise images using Adaptive Soft Coefficient Matching (ASCM)", "Suppress Gibbs oscillations", "Denoise images using Local PCA via empirical thresholds", "Denoise images using the Marcenko-Pastur PCA algorithm", "Denoise images using Non-Local Means (NLMEANS)", "Patch2Self: Self-Supervised Denoising via Statistical Independence", "Gradients and Spheres", "Preprocessing", "Between-volumes Motion Correction on DWI datasets", "Noise estimation using PIESNO", "Reslice diffusion datasets", "Computation times", "SNR estimation for Diffusion-Weighted Images", "Quick Start", "Getting started with DIPY", "Computation times", "Introduction to Basic Tracking", "Local reconstruction using the Histological ResDNN", "Reconstruction", "K-fold cross-validation for model comparison", "Reconstruct with Constant Solid Angle (Q-Ball)", "Reconstruction with Constrained Spherical Deconvolution", "Reconstruction of the diffusion signal with the correlation tensor model", "Reconstruction of the diffusion signal with the kurtosis tensor model", "Reconstruction of the diffusion signal with the WMTI model", "Reconstruct with Diffusion Spectrum Imaging", "Calculate DSI-based scalar maps", "DSI Deconvolution vs DSI", "Reconstruction of the diffusion signal with the Tensor model", "Crossing invariant fiber response function with FORECAST model", "Using the free water elimination model to remove DTI free water contamination", "Reconstruct with Generalized Q-Sampling Imaging", "Intravoxel incoherent motion", "Continuous and analytical diffusion signal modelling with MAP-MRI", "Reconstruction with Multi-Shell Multi-Tissue CSD", "Mean signal diffusion kurtosis imaging (MSDKI)", "Estimating diffusion time dependent q-space indices using qt-dMRI", "Reconstruct with Q-space Trajectory Imaging (QTI)", "Applying positivity constraints to Q-space Trajectory Imaging (QTI+)", "Reconstruction with Robust and Unbiased Model-BAsed Spherical Deconvolution", "Reconstruction with the Sparse Fascicle Model", "Signal Reconstruction Using Spherical Harmonics", "Continuous and analytical diffusion signal modelling with 3D-SHORE", "Calculate SHORE scalar maps", "Using the RESTORE algorithm for robust tensor fitting", "Computation times", "Affine Registration in 3D", "Affine Registration with Masks", "Groupwise Bundle Registration", "Direct Bundle Registration", "Nonrigid Bundle Registration with BundleWarp", "Registration", "Diffeomorphic Registration with binary and fuzzy images", "Computation times", "Applying image-based deformations to streamlines", "Symmetric Diffeomorphic Registration in 2D", "Symmetric Diffeomorphic Registration in 3D", "Brain segmentation with median_otsu", "Automatic Fiber Bundle Extraction with RecoBundles", "Fast Streamline Search", "Segmentation", "Tractography Clustering - Available Features", "Tractography Clustering - Available Metrics", "Enhancing QuickBundles with different metrics and features", "Tractography Clustering with QuickBundles", "Computation times", "Tissue Classification of a T1-weighted Structural Image", "Computation times", "Simulation", "DSI Deconvolution vs DSI", "Computation times", "DKI MultiTensor Simulation", "MultiTensor Simulation", "Extracting AFQ tract profiles from segmented bundles", "BUAN Bundle Assignment Maps Creation", "BUAN Bundle Shape Similarity Score", "Calculation of Outliers with Cluster Confidence Index", "Streamlines Analysis and Connectivity", "Calculate Path Length Map", "Computation times", "Streamline length and size reduction", "Connectivity Matrices, ROI Intersections and Density Maps", "Visualization", "Computation times", "Advanced interactive visualization", "Visualize bundles and metrics on bundles", "Visualization of ROI Surface Rendered with Streamlines", "Simple volume slicing", "Creating a new combined workflow", "Workflows", "Computation times", "Creating a new workflow.", "Frequently Asked Questions", "Gimbal lock", "Glossary", "Diffusion Imaging In Python - Documentation", "Introduction to command line interfaces", "BUndle ANalytics (BUAN) framework", "White Matter Bundle Segmentation with RecoBundles", "Nonrigid White Matter Bundle Registration with BundleWarp", "Downloading DIPY datasets", "Denoising", "Gibbs Unringing", "DIPY Workflows Interfaces", "Between-Volumes Motion Correction", "Reconstruction", "Registration", "Tracking", "Older Highlights", "Past Announcements", "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-mortar-board\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.693 1.066a.75.75 0 01.614 0l7.25 3.25a.75.75 0 010 1.368L13 6.831v2.794c0 1.024-.81 1.749-1.66 2.173-.893.447-2.075.702-3.34.702-.278 0-.55-.012-.816-.036a.75.75 0 01.133-1.494c.22.02.45.03.683.03 1.082 0 2.025-.221 2.67-.543.69-.345.83-.682.83-.832V7.503L8.307 8.934a.75.75 0 01-.614 0L4 7.28v1.663c.296.105.575.275.812.512.438.438.688 1.059.688 1.796v3a.75.75 0 01-.75.75h-3a.75.75 0 01-.75-.75v-3c0-.737.25-1.358.688-1.796.237-.237.516-.407.812-.512V6.606L.443 5.684a.75.75 0 010-1.368l7.25-3.25zM2.583 5L8 7.428 13.416 5 8 2.572 2.583 5zM2.5 11.25c0-.388.125-.611.25-.735a.704.704 0 01.5-.203c.19 0 .37.071.5.203.125.124.25.347.25.735v2.25H2.5v-2.25z\"></path></svg> Recipes", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dipy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">align</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">denoise</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">reconst</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sims</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stats</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows</span></code>", "API Reference", "dipy_align_affine", "dipy_align_syn", "dipy_apply_transform", "dipy_buan_lmm", "dipy_buan_profiles", "dipy_buan_shapes", "dipy_bundlewarp", "dipy_concatenate_tractograms", "dipy_convert_tensors", "dipy_convert_tractogram", "dipy_correct_motion", "dipy_denoise_lpca", "dipy_denoise_mppca", "dipy_denoise_nlmeans", "dipy_denoise_patch2self", "dipy_evac_plus", "dipy_fetch", "dipy_fit_csa", "dipy_fit_csd", "dipy_fit_dki", "dipy_fit_dsi", "dipy_fit_dti", "dipy_fit_ivim", "dipy_fit_mapmri", "dipy_gibbs_ringing", "dipy_horizon", "dipy_info", "dipy_labelsbundles", "dipy_mask", "dipy_median_otsu", "dipy_recobundles", "dipy_reslice", "dipy_sh_convert_mrtrix", "dipy_slr", "dipy_snr_in_cc", "dipy_split", "dipy_track", "dipy_track_pft", "Command Line Utilities Reference", "Release notes for DIPY version 0.10", "Release notes for DIPY version 0.11", "Release notes for DIPY version 0.12", "Release notes for DIPY version 0.13", "Release notes for DIPY version 0.14", "Release notes for DIPY version 0.15", "Release notes for DIPY version 0.16", "Release notes for DIPY version 0.6", "Release notes for DIPY version 0.7", "Release notes for DIPY version 0.8", "Release notes for DIPY version 0.9", "Release notes for DIPY version 1.0", "Release notes for DIPY version 1.1", "Release notes for DIPY version 1.2", "Release notes for DIPY version 1.3", "Release notes for DIPY version 1.4", "Release notes for DIPY version 1.4.1", "Release notes for DIPY version 1.5", "Release notes for DIPY version 1.6", "Release notes for DIPY version 1.7", "Release notes for DIPY version 1.8", "Computation times", "A quick overview of features", "Subscribe", "DIY Stuff about b and q", "The B matrix and Siemens DICOM", "Generalised Q-Sampling Imaging", "Theory and concepts", "Spherical Harmonic bases", "Spherical coordinates", "Data", "&lt;no title&gt;", "Python versions and dependencies", "Getting Started", "DIPY User Guide", "Installation", "What is DIPY?", "Mission statement"], "terms": {"here": [0, 2, 5, 6, 9, 11, 12, 13, 16, 17, 19, 20, 21, 23, 24, 25, 29, 33, 34, 38, 39, 40, 44, 47, 49, 50, 59, 60, 62, 64, 66, 69, 71, 73, 74, 78, 80, 81, 82, 84, 86, 87, 88, 89, 90, 96, 98, 99, 100, 107, 108, 109, 111, 112, 114, 116, 121, 123, 128, 131, 134, 135, 136, 137, 143, 148, 149, 155, 158, 160, 163, 164, 166, 168, 170, 171, 172, 174, 227, 235, 239, 242, 243, 246, 250], "we": [0, 3, 6, 9, 16, 17, 19, 20, 21, 23, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 160, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 211, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 246, 249, 250, 252, 254], "provid": [0, 3, 22, 29, 33, 34, 38, 39, 43, 53, 55, 64, 66, 71, 72, 73, 74, 79, 82, 83, 84, 85, 86, 87, 88, 92, 96, 97, 99, 100, 104, 106, 108, 111, 112, 113, 114, 126, 128, 134, 135, 136, 145, 146, 147, 149, 155, 157, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 185, 201, 203, 204, 214, 217, 224, 225, 226, 228, 231, 235, 239, 246], "inform": [0, 3, 6, 11, 19, 22, 34, 35, 40, 43, 49, 50, 52, 53, 55, 64, 66, 67, 70, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 96, 97, 107, 111, 112, 113, 114, 121, 123, 130, 138, 141, 142, 146, 147, 148, 149, 151, 154, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 178, 179, 192, 204, 224, 228, 231, 239, 246, 247, 248, 249], "about": [0, 3, 6, 16, 19, 29, 36, 38, 46, 47, 53, 64, 71, 73, 74, 75, 78, 82, 83, 84, 85, 86, 87, 88, 89, 96, 111, 112, 113, 114, 121, 128, 138, 141, 142, 143, 144, 146, 147, 148, 149, 150, 158, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 204, 217, 221, 222, 226, 228, 230, 234, 237, 247, 250], "function": [0, 2, 3, 4, 22, 24, 29, 34, 36, 38, 39, 43, 44, 46, 47, 51, 53, 54, 56, 58, 59, 64, 66, 68, 70, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 105, 108, 111, 112, 121, 122, 130, 131, 134, 137, 142, 145, 146, 155, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 196, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 245, 246, 252], "class": [0, 2, 3, 29, 43, 78, 80, 84, 94, 96, 105, 106, 109, 113, 116, 134, 138, 141, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 217, 224, 225, 226], "have": [0, 2, 6, 8, 9, 11, 13, 15, 16, 17, 19, 20, 21, 22, 29, 32, 34, 36, 39, 43, 44, 54, 55, 56, 59, 60, 62, 64, 66, 68, 69, 70, 71, 72, 73, 75, 76, 78, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 94, 96, 98, 99, 100, 104, 106, 111, 112, 113, 114, 116, 121, 123, 126, 128, 130, 131, 134, 135, 137, 138, 141, 142, 143, 144, 145, 147, 148, 149, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 184, 201, 203, 208, 211, 217, 221, 224, 226, 227, 228, 231, 232, 241, 242, 245, 252], "been": [0, 3, 6, 15, 21, 29, 52, 53, 69, 73, 76, 78, 82, 83, 86, 98, 99, 104, 114, 116, 155, 163, 164, 168, 170, 171, 174, 176, 185, 245], "remov": [0, 6, 19, 25, 29, 39, 43, 44, 49, 51, 52, 53, 68, 70, 74, 78, 85, 89, 95, 104, 105, 106, 107, 114, 126, 152, 158, 163, 164, 166, 167, 168, 169, 170, 171, 174, 175, 176, 202, 211, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 252], "renam": [0, 16, 146, 218, 219, 224, 225, 226, 228, 230], "ar": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 24, 25, 29, 33, 34, 36, 39, 40, 43, 44, 47, 50, 51, 52, 53, 55, 56, 59, 62, 64, 66, 67, 69, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 96, 97, 98, 99, 100, 102, 104, 105, 108, 109, 111, 112, 113, 116, 121, 122, 123, 125, 126, 130, 131, 134, 135, 137, 138, 142, 143, 144, 146, 147, 148, 149, 151, 152, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 185, 186, 188, 189, 199, 201, 204, 207, 208, 209, 211, 214, 217, 219, 220, 221, 222, 223, 224, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 252, 253], "deprec": [0, 3, 158, 164, 170, 174, 217, 219, 221, 222, 223, 224, 228, 229, 230, 231, 233, 234, 235, 237], "recommend": [0, 3, 43, 44, 51, 58, 71, 73, 75, 83, 86, 88, 89, 108, 109, 134, 137, 142, 151, 152, 154, 160, 161, 163, 164, 169, 170, 174, 176, 180, 197, 199, 223, 239, 249, 252], "dure": [0, 5, 6, 22, 29, 58, 80, 83, 88, 94, 97, 104, 154, 155, 156, 163, 164, 169, 170, 174, 176, 195, 196, 198, 217, 222, 230], "differ": [0, 2, 12, 19, 24, 25, 29, 36, 39, 43, 44, 49, 50, 51, 53, 54, 55, 56, 59, 60, 69, 71, 72, 73, 75, 80, 82, 83, 84, 85, 86, 87, 90, 91, 94, 97, 99, 100, 102, 104, 105, 107, 108, 110, 111, 114, 115, 116, 121, 123, 130, 134, 137, 138, 141, 142, 143, 147, 149, 152, 156, 157, 158, 163, 164, 165, 166, 167, 169, 170, 171, 174, 175, 176, 179, 186, 187, 203, 204, 217, 221, 222, 225, 226, 228, 230, 231, 235, 238, 239, 241, 242, 245, 246], "releas": [0, 2, 18, 22, 145, 158, 159, 163, 170, 239], "circl": [0, 105, 163, 164, 174], "gener": [0, 1, 2, 3, 6, 9, 12, 16, 19, 20, 21, 23, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 145, 146, 147, 152, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 184, 185, 195, 196, 201, 203, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 252], "The": [0, 1, 2, 3, 5, 7, 8, 9, 10, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 29, 33, 34, 35, 36, 38, 39, 40, 43, 44, 46, 49, 50, 51, 52, 53, 55, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 111, 113, 116, 121, 122, 123, 126, 128, 130, 131, 134, 136, 137, 138, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 155, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 185, 189, 190, 192, 197, 200, 203, 204, 205, 208, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 247, 254], "modul": [0, 2, 3, 19, 29, 32, 34, 37, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 66, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 107, 108, 109, 111, 112, 113, 114, 121, 124, 125, 128, 131, 134, 136, 137, 138, 141, 142, 158, 162, 177, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 241, 243, 245, 249, 252], "boot": [0, 219], "resampl": [0, 60, 96, 97, 99, 100, 106, 112, 113, 114, 137, 142, 155, 162, 170, 171, 173, 174, 176, 177, 209, 217, 219, 226, 239], "ha": [0, 3, 6, 13, 15, 21, 24, 29, 33, 34, 36, 40, 47, 52, 53, 55, 58, 59, 62, 66, 69, 70, 71, 73, 74, 75, 78, 80, 81, 82, 83, 85, 87, 88, 89, 96, 99, 106, 111, 113, 114, 116, 130, 131, 137, 142, 143, 144, 147, 155, 157, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 176, 185, 198, 214, 217, 219, 222, 224, 226, 230, 236, 241, 245, 246, 252], "move": [0, 14, 24, 25, 43, 56, 82, 91, 94, 96, 97, 98, 99, 100, 104, 105, 106, 108, 122, 131, 134, 137, 146, 148, 149, 155, 156, 158, 163, 164, 166, 170, 171, 172, 174, 175, 176, 178, 179, 180, 184, 211, 217, 219, 220, 222, 223, 226, 228, 230, 231, 233, 234, 237], "stat": [0, 5, 69, 90, 123, 124, 158, 162, 163, 164, 170, 177, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "packag": [0, 3, 18, 19, 21, 34, 66, 73, 80, 83, 84, 88, 91, 94, 163, 164, 165, 168, 169, 170, 171, 174, 176, 217, 221, 223, 225, 226, 228, 231, 233, 237, 241, 242, 253], "io": [0, 2, 6, 22, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 87, 89, 90, 92, 93, 94, 96, 97, 100, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 121, 123, 124, 126, 128, 131, 136, 137, 142, 158, 160, 162, 163, 165, 170, 171, 172, 174, 177, 217, 219, 221, 223, 224, 228, 229, 234, 235, 237, 247, 248, 250], "bvectxt": [0, 158, 234, 235], "i": [0, 1, 2, 3, 4, 5, 6, 7, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 245, 246, 250, 252, 254], "gradient": [0, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 46, 47, 50, 52, 53, 55, 57, 58, 61, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 104, 105, 119, 121, 122, 126, 128, 131, 136, 142, 146, 151, 155, 158, 161, 162, 165, 166, 169, 170, 172, 176, 177, 179, 200, 201, 217, 218, 221, 222, 224, 226, 229, 230, 231, 235, 236, 237, 238, 241, 242, 243, 247, 248, 250], "core": [0, 5, 11, 23, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 49, 50, 52, 53, 56, 58, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 104, 107, 119, 121, 122, 126, 128, 131, 136, 152, 158, 162, 163, 165, 166, 167, 170, 172, 173, 174, 176, 177, 195, 196, 198, 202, 209, 217, 219, 221, 224, 225, 226, 228, 229, 230, 233, 236, 237, 249, 250], "reorient_bvec": [0, 177, 230], "now": [0, 2, 5, 6, 8, 9, 15, 16, 17, 19, 21, 25, 29, 34, 38, 39, 43, 47, 50, 51, 55, 56, 59, 62, 64, 66, 71, 72, 73, 75, 76, 78, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 96, 97, 98, 99, 100, 104, 105, 106, 108, 113, 116, 122, 125, 126, 128, 131, 134, 137, 138, 141, 143, 145, 146, 158, 159, 164, 170, 217, 218, 224, 225, 226, 245, 252], "requir": [0, 3, 19, 22, 24, 25, 29, 39, 43, 55, 60, 67, 73, 74, 79, 83, 85, 86, 87, 88, 89, 90, 97, 108, 109, 111, 113, 114, 121, 134, 137, 146, 147, 148, 151, 155, 156, 157, 163, 164, 167, 168, 169, 170, 171, 172, 174, 175, 176, 207, 213, 219, 226, 228, 230, 231, 232, 236, 237, 249, 252], "affin": [0, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 52, 53, 54, 55, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 83, 84, 85, 87, 89, 90, 92, 93, 94, 98, 99, 100, 101, 103, 104, 107, 108, 123, 126, 128, 131, 134, 135, 136, 137, 142, 144, 146, 154, 156, 158, 160, 164, 165, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 184, 188, 211, 217, 219, 221, 222, 223, 226, 227, 228, 230, 234, 237, 238, 250], "shape": [0, 24, 25, 29, 34, 35, 38, 40, 44, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 64, 66, 67, 70, 71, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 89, 91, 92, 93, 96, 97, 99, 100, 102, 104, 106, 107, 108, 111, 113, 116, 122, 124, 127, 129, 130, 131, 134, 135, 137, 144, 149, 153, 156, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 182, 183, 196, 198, 199, 208, 217, 218, 219, 224, 226, 228, 230, 231, 234, 235, 237, 238], "n": [0, 1, 2, 3, 21, 24, 29, 38, 39, 40, 50, 51, 54, 55, 58, 59, 69, 70, 72, 73, 80, 82, 85, 87, 88, 89, 90, 94, 96, 97, 99, 104, 105, 106, 113, 114, 116, 117, 124, 130, 146, 151, 154, 156, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 178, 241, 242, 247, 248], "direct": [0, 3, 24, 25, 28, 29, 30, 31, 35, 37, 38, 39, 40, 44, 46, 47, 52, 53, 55, 59, 62, 69, 70, 71, 72, 73, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 100, 101, 103, 105, 106, 119, 121, 123, 126, 128, 131, 136, 142, 145, 151, 155, 157, 158, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 195, 196, 198, 210, 211, 214, 217, 218, 219, 220, 221, 224, 225, 226, 228, 230, 234, 237, 238, 241, 242, 245, 246, 247, 248], "bootstrap_direction_gett": [0, 177], "parent": [0, 164, 176, 177], "wa": [0, 6, 7, 21, 22, 23, 29, 43, 50, 51, 53, 54, 59, 62, 67, 70, 73, 74, 79, 80, 82, 83, 84, 85, 88, 89, 90, 94, 96, 99, 104, 121, 128, 131, 138, 143, 146, 155, 158, 159, 163, 164, 165, 166, 168, 169, 170, 171, 174, 175, 176, 224, 225, 226, 227, 228], "from": [0, 2, 3, 5, 7, 8, 11, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 189, 192, 196, 197, 198, 199, 203, 207, 209, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 245, 246, 247, 248, 250, 252], "pmfgendirectiongett": [0, 177, 236], "directiongett": [0, 167, 170, 177, 221, 234], "bootpmfgen": 0, "were": [0, 29, 44, 52, 55, 71, 80, 82, 85, 86, 87, 100, 104, 126, 131, 142, 161, 163, 164, 165, 166, 170, 174, 176, 224, 225], "merg": [0, 10, 13, 15, 17, 21, 55, 145, 158, 171, 174, 176, 219, 221, 222, 225, 226, 228, 236], "bootdirectiongett": [0, 32, 177, 237], "constructor": [0, 89, 163, 164, 167, 170, 172, 221, 229], "paramet": [0, 2, 3, 33, 35, 40, 43, 47, 49, 50, 51, 52, 53, 55, 64, 69, 72, 73, 74, 76, 78, 81, 82, 83, 84, 85, 87, 88, 90, 92, 94, 99, 100, 102, 105, 107, 108, 116, 121, 138, 141, 142, 149, 151, 155, 156, 157, 158, 178, 179, 191, 192, 198, 199, 200, 203, 218, 219, 220, 221, 222, 224, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 241], "pmfgen": [0, 177, 237], "data": [0, 1, 3, 5, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 142, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 248, 250, 252, 253], "model": [0, 1, 16, 24, 25, 28, 29, 30, 33, 34, 35, 36, 37, 40, 44, 46, 47, 49, 51, 53, 54, 55, 62, 64, 66, 67, 68, 70, 71, 75, 76, 81, 82, 84, 85, 86, 87, 88, 93, 94, 95, 107, 108, 109, 116, 121, 123, 124, 126, 128, 131, 145, 146, 147, 148, 155, 157, 158, 161, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 181, 182, 192, 201, 205, 208, 211, 219, 220, 221, 223, 224, 225, 226, 228, 230, 231, 234, 235, 237, 238, 247, 248, 250], "sh_order": [0, 24, 25, 32, 33, 34, 36, 37, 66, 67, 71, 79, 84, 89, 91, 126, 128, 136, 155, 166, 167, 169, 170, 176, 195, 196], "ad": [0, 3, 4, 5, 6, 16, 19, 24, 40, 46, 47, 53, 67, 72, 73, 83, 84, 94, 100, 137, 143, 145, 146, 147, 158, 163, 166, 168, 170, 171, 172, 174, 176, 177, 179, 189, 190, 197, 199, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237], "method": [0, 1, 2, 24, 29, 34, 40, 51, 52, 53, 55, 58, 59, 66, 69, 71, 72, 73, 77, 78, 82, 83, 84, 85, 88, 89, 94, 98, 99, 100, 108, 109, 111, 112, 113, 114, 116, 119, 123, 126, 128, 130, 134, 135, 137, 138, 145, 149, 152, 153, 154, 155, 156, 158, 164, 166, 167, 169, 170, 171, 172, 175, 176, 184, 189, 190, 191, 192, 202, 207, 221, 222, 224, 225, 226, 229, 230, 232, 234, 235, 236, 237, 247, 248, 252], "from_data": [0, 32, 167, 177], "pmf": [0, 32, 36, 37, 38, 157, 177, 219, 222, 234], "its": [0, 21, 22, 24, 38, 53, 55, 59, 76, 83, 84, 85, 86, 89, 90, 93, 94, 96, 104, 113, 116, 121, 134, 135, 137, 143, 144, 147, 148, 150, 158, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 176, 204, 210, 226, 230, 231, 233, 247, 248, 249], "denois": [0, 19, 24, 25, 44, 51, 57, 59, 61, 73, 84, 85, 94, 138, 145, 153, 158, 162, 165, 177, 189, 190, 191, 192, 202, 219, 226, 228, 231, 232, 234, 235, 236, 237, 238, 247, 248], "localpca": [0, 53, 84, 177, 189, 220, 228, 231], "genpca": [0, 177], "can": [0, 3, 5, 6, 13, 15, 16, 17, 19, 20, 21, 23, 24, 25, 29, 33, 34, 35, 36, 38, 39, 40, 43, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 69, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 137, 138, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 189, 192, 196, 197, 199, 203, 204, 208, 210, 218, 222, 226, 228, 231, 234, 235, 237, 239, 240, 241, 242, 245, 246, 247, 249, 250, 252, 253], "us": [0, 1, 2, 4, 5, 6, 11, 13, 17, 19, 20, 21, 22, 24, 25, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 43, 44, 45, 48, 49, 51, 55, 56, 57, 60, 61, 62, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 87, 88, 89, 90, 93, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250], "fewer": [0, 108, 167, 174], "imag": [0, 1, 3, 21, 22, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 46, 47, 49, 51, 55, 56, 57, 58, 59, 60, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 86, 89, 90, 92, 93, 94, 95, 96, 97, 100, 101, 103, 105, 106, 107, 110, 115, 119, 121, 123, 126, 128, 130, 131, 134, 135, 136, 137, 142, 144, 146, 151, 152, 153, 154, 157, 158, 160, 161, 163, 164, 165, 166, 167, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 188, 189, 190, 195, 197, 198, 199, 200, 203, 204, 206, 207, 214, 215, 218, 219, 222, 223, 226, 228, 230, 234, 237, 238, 239, 241, 245, 247, 248, 250, 253, 254], "than": [0, 2, 3, 15, 16, 17, 19, 22, 23, 25, 40, 50, 53, 55, 58, 67, 71, 73, 74, 76, 78, 80, 82, 83, 84, 85, 86, 88, 90, 96, 97, 108, 111, 121, 126, 128, 130, 131, 137, 143, 144, 155, 158, 159, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 189, 203, 208, 211, 217, 218, 221, 224, 230, 234, 235, 252], "patch": [0, 14, 15, 18, 50, 52, 55, 151, 166, 176, 189, 190, 191, 192, 221, 228, 230, 233, 235], "voxel": [0, 24, 25, 29, 33, 34, 35, 36, 39, 40, 43, 44, 47, 49, 51, 52, 53, 55, 59, 60, 62, 64, 66, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 104, 107, 119, 121, 122, 128, 130, 131, 134, 137, 142, 146, 151, 155, 156, 157, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 189, 190, 192, 196, 200, 207, 209, 214, 215, 217, 218, 219, 224, 226, 227, 228, 230, 231, 237, 239, 247, 248], "pca_noise_estim": [0, 52, 177, 236], "new": [0, 3, 4, 8, 10, 15, 16, 17, 19, 20, 21, 23, 24, 25, 29, 43, 44, 55, 56, 58, 60, 64, 71, 86, 89, 97, 99, 113, 137, 139, 140, 145, 158, 159, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 209, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 245, 252], "argument": [0, 29, 82, 89, 98, 109, 131, 138, 141, 148, 149, 150, 151, 152, 154, 155, 156, 157, 163, 164, 168, 169, 170, 173, 174, 175, 176, 216, 222, 224, 228, 230, 232, 233, 235], "images_as_sampl": [0, 166], "furi": [0, 31, 34, 66, 67, 89, 134, 142, 158, 175, 222, 228, 229, 230, 234, 249, 252], "minimum": [0, 25, 44, 86, 99, 108, 113, 158, 161, 163, 164, 166, 167, 169, 170, 171, 174, 175, 176, 215, 222, 226, 229, 237, 249], "version": [0, 6, 18, 19, 21, 24, 25, 33, 50, 51, 52, 53, 54, 55, 80, 81, 102, 104, 121, 131, 142, 145, 146, 157, 158, 159, 162, 163, 164, 165, 168, 170, 171, 172, 174, 177, 239, 245, 247, 248], "distutil": [0, 230, 234], "drop": [0, 22, 218, 219, 223, 228, 234], "default": [0, 6, 9, 16, 22, 24, 25, 34, 38, 39, 46, 49, 54, 55, 60, 64, 66, 67, 76, 78, 82, 88, 89, 90, 94, 96, 98, 102, 107, 108, 109, 111, 112, 116, 128, 134, 137, 138, 141, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 221, 222, 224, 225, 226, 228, 231, 232, 233, 234, 235, 236, 245], "option": [0, 2, 6, 15, 16, 19, 34, 46, 51, 53, 55, 66, 70, 73, 82, 83, 84, 89, 96, 99, 135, 138, 141, 145, 146, 150, 151, 152, 154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 204, 216, 217, 218, 219, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 249], "command": [0, 2, 5, 6, 8, 13, 16, 19, 21, 25, 51, 64, 137, 138, 141, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 165, 170, 176, 196, 207, 219, 224, 225, 226, 228, 230, 234, 252], "line": [0, 2, 3, 5, 6, 8, 15, 16, 19, 21, 25, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 53, 58, 60, 62, 66, 72, 85, 86, 88, 99, 108, 109, 124, 126, 128, 131, 134, 135, 136, 137, 138, 141, 144, 145, 147, 148, 149, 153, 155, 157, 158, 162, 163, 167, 169, 170, 174, 175, 176, 196, 207, 217, 218, 219, 221, 222, 225, 226, 227, 228, 229, 230, 234, 246, 252], "patch2self": [0, 44, 57, 61, 158, 176, 177, 192, 232, 233, 234, 235, 237, 238], "ridg": [0, 55, 166, 170, 176, 192, 234], "ol": [0, 55, 166, 170, 176, 192, 197, 199, 234, 237], "track": [0, 1, 3, 5, 15, 25, 29, 30, 31, 32, 33, 35, 36, 37, 40, 43, 63, 65, 78, 90, 99, 100, 104, 111, 112, 113, 123, 126, 128, 130, 131, 134, 135, 136, 146, 153, 158, 162, 163, 164, 165, 167, 168, 170, 171, 173, 177, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239], "mandatori": [0, 138, 141, 163], "sphere": [0, 24, 25, 32, 33, 35, 36, 37, 38, 39, 40, 44, 46, 47, 57, 61, 67, 70, 71, 75, 77, 78, 79, 81, 83, 84, 85, 86, 89, 90, 91, 92, 94, 119, 122, 131, 157, 161, 162, 163, 165, 167, 169, 170, 172, 174, 175, 176, 177, 217, 219, 222, 224, 226, 228, 229, 238, 245, 246], "vertic": [0, 25, 31, 39, 56, 71, 75, 77, 85, 89, 90, 91, 119, 122, 164, 165, 166, 167, 168, 170, 172, 174, 175, 177, 222, 246], "correspond": [0, 1, 3, 19, 24, 43, 51, 53, 55, 62, 64, 69, 76, 82, 84, 85, 86, 87, 88, 89, 92, 93, 105, 106, 111, 121, 123, 130, 135, 142, 157, 163, 164, 166, 167, 169, 170, 174, 175, 176, 178, 184, 202, 237, 239], "spheric": [0, 3, 24, 25, 28, 30, 33, 35, 36, 40, 44, 46, 47, 53, 56, 67, 68, 69, 70, 74, 79, 84, 85, 88, 90, 95, 122, 145, 153, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 174, 175, 176, 177, 195, 196, 198, 217, 222, 224, 225, 226, 228, 230, 237, 238, 244], "distribut": [0, 2, 22, 24, 25, 29, 33, 34, 36, 39, 44, 46, 53, 55, 56, 59, 66, 67, 69, 70, 71, 78, 79, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 96, 116, 131, 146, 151, 155, 157, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 176, 189, 190, 192, 196, 214, 215, 226, 229, 243, 245, 252], "valu": [0, 22, 25, 29, 33, 34, 36, 40, 43, 44, 46, 51, 52, 53, 55, 56, 58, 59, 62, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 102, 108, 116, 121, 122, 123, 125, 126, 128, 131, 134, 138, 141, 142, 144, 146, 147, 149, 151, 152, 154, 155, 157, 158, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 184, 189, 190, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 211, 212, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242, 245, 247, 248, 250], "get_pmf_valu": [0, 167, 177], "point": [0, 3, 6, 16, 17, 21, 24, 25, 29, 34, 36, 38, 39, 44, 51, 56, 66, 69, 73, 81, 83, 84, 85, 86, 90, 91, 99, 100, 104, 111, 112, 113, 114, 122, 130, 142, 143, 144, 149, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 184, 187, 201, 202, 209, 211, 214, 215, 217, 219, 222, 223, 224, 228, 229, 230, 231, 233, 234, 235, 243, 246], "xyz": [0, 56, 91, 164, 165, 166, 167, 168, 170, 174, 230], "which": [0, 2, 3, 4, 5, 6, 19, 21, 24, 25, 29, 32, 33, 36, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 62, 64, 69, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 99, 100, 102, 105, 106, 107, 108, 113, 114, 119, 121, 122, 123, 128, 130, 131, 134, 135, 136, 137, 142, 146, 148, 151, 152, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 189, 190, 203, 221, 228, 231, 239, 242, 245, 250, 252], "return": [0, 16, 33, 35, 46, 49, 52, 53, 70, 71, 72, 73, 76, 78, 82, 83, 84, 86, 89, 90, 93, 98, 100, 102, 105, 106, 107, 109, 111, 112, 113, 122, 123, 130, 131, 134, 138, 155, 157, 190, 218, 219, 222, 225, 227, 229, 234, 236, 237], "locat": [0, 3, 59, 78, 94, 97, 105, 123, 138, 147, 151, 155, 156, 163, 164, 165, 166, 167, 174, 176], "orient": [0, 24, 25, 31, 33, 34, 36, 46, 62, 66, 67, 70, 71, 78, 79, 81, 83, 84, 85, 86, 87, 89, 90, 92, 96, 99, 111, 112, 123, 131, 142, 146, 155, 157, 158, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 196, 221, 222, 228, 237, 245], "segment": [0, 3, 24, 34, 35, 39, 46, 47, 51, 53, 57, 61, 62, 66, 67, 69, 70, 73, 74, 78, 84, 85, 89, 99, 100, 104, 105, 106, 108, 109, 111, 112, 113, 114, 115, 116, 124, 125, 127, 129, 130, 138, 147, 153, 157, 158, 162, 163, 167, 169, 170, 172, 174, 177, 203, 207, 214, 215, 219, 224, 225, 228, 230, 233, 234, 235, 236, 237, 238], "metric": [0, 1, 44, 51, 72, 74, 78, 80, 85, 88, 89, 96, 97, 98, 99, 102, 105, 106, 110, 111, 114, 115, 123, 125, 126, 132, 133, 155, 156, 157, 158, 162, 165, 167, 168, 169, 170, 173, 176, 177, 178, 179, 181, 197, 199, 200, 201, 211, 214, 215, 217, 219, 222, 223, 224, 225, 228, 231, 233, 234, 235, 238], "import": [0, 2, 4, 19, 22, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 160, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 177, 217, 219, 220, 221, 222, 223, 224, 226, 228, 229, 230, 233, 234, 235, 236, 237, 241, 247, 250, 252], "resamplefeatur": [0, 111, 123, 177], "replac": [0, 5, 43, 58, 60, 94, 128, 151, 158, 163, 166, 170, 171, 174, 175, 219, 220, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 237, 250], "featurespe": [0, 111, 112, 113, 123, 177, 219], "name": [0, 3, 6, 9, 15, 16, 17, 19, 20, 21, 37, 64, 78, 84, 96, 116, 131, 138, 141, 143, 147, 148, 149, 150, 151, 155, 156, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 209, 210, 212, 213, 214, 215, 217, 219, 220, 222, 223, 226, 228, 229, 230, 231, 233, 237, 241, 247, 248], "number": [0, 1, 21, 22, 31, 35, 36, 43, 46, 47, 49, 51, 53, 55, 56, 58, 59, 64, 69, 71, 73, 78, 80, 82, 84, 86, 87, 88, 89, 90, 96, 97, 98, 99, 100, 102, 107, 111, 112, 113, 114, 116, 128, 130, 131, 144, 146, 152, 156, 157, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 184, 186, 187, 194, 195, 196, 198, 202, 203, 204, 207, 209, 211, 213, 214, 215, 217, 219, 222, 223, 226, 227, 228, 231, 233, 234, 235, 237, 239, 243], "thread": [0, 160, 163, 166, 169, 170, 171, 174, 176, 211, 217, 218, 222, 223, 233, 235, 252], "standard": [0, 3, 19, 25, 44, 50, 54, 59, 62, 73, 74, 77, 80, 84, 85, 86, 91, 94, 105, 108, 119, 123, 137, 151, 158, 161, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 179, 189, 190, 199, 217, 222, 226, 228, 233, 235, 239, 241, 246, 247, 248, 249], "num_thread": [0, 163, 166, 171, 174, 176, 211, 232, 233], "openmp": [0, 158, 163, 166, 171, 174, 176, 211, 217, 219, 220], "parallel": [0, 28, 30, 36, 39, 44, 45, 48, 59, 71, 79, 83, 86, 89, 137, 145, 155, 158, 163, 164, 166, 167, 170, 171, 172, 174, 176, 195, 196, 198, 201, 211, 218, 219, 222, 226, 228, 231, 234, 235, 236, 238], "num_process": [0, 36, 39, 46, 47, 51, 71, 89, 152, 163, 166, 167, 170, 176, 195, 196, 198, 202, 209], "multiprocess": [0, 46, 47, 158, 167, 170, 176, 195, 196, 198, 218, 219, 222, 226, 227, 233, 238], "logic": [0, 96, 169, 170, 174, 217, 224], "when": [0, 1, 3, 4, 5, 6, 7, 16, 19, 21, 22, 35, 40, 43, 73, 75, 80, 83, 88, 89, 94, 98, 99, 111, 112, 113, 121, 123, 130, 131, 135, 138, 141, 142, 143, 157, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 217, 219, 220, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 241, 245, 252], "If": [0, 1, 3, 6, 9, 15, 16, 19, 20, 21, 23, 29, 32, 34, 35, 43, 44, 46, 47, 55, 66, 71, 72, 75, 82, 84, 86, 88, 89, 90, 94, 96, 108, 111, 112, 126, 128, 130, 134, 136, 137, 142, 147, 148, 149, 156, 157, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 184, 189, 190, 191, 192, 195, 196, 198, 199, 202, 203, 207, 209, 211, 214, 215, 217, 240, 241, 242, 246, 247, 252, 253], "none": [0, 29, 34, 39, 44, 46, 47, 50, 52, 53, 55, 64, 66, 70, 71, 75, 76, 77, 78, 81, 85, 89, 91, 92, 93, 94, 96, 97, 99, 104, 106, 119, 121, 122, 125, 137, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 189, 196, 208, 211, 225, 226, 232, 233], "omp_num_thread": [0, 163, 166, 171, 174, 176, 211], "environ": [0, 2, 19, 22, 67, 163, 166, 171, 174, 176, 211, 219], "variabl": [0, 19, 29, 44, 53, 78, 82, 90, 97, 104, 131, 134, 158, 161, 163, 164, 166, 169, 170, 171, 174, 176, 211, 217, 219, 222, 225, 226, 227, 230, 232, 233, 236, 237], "set": [0, 2, 3, 5, 6, 10, 14, 15, 16, 21, 22, 24, 25, 29, 31, 32, 35, 38, 39, 40, 46, 47, 49, 50, 52, 53, 55, 56, 59, 60, 62, 69, 72, 73, 80, 82, 83, 84, 86, 88, 89, 90, 91, 96, 97, 98, 99, 100, 102, 104, 107, 108, 111, 113, 114, 116, 122, 123, 125, 126, 128, 130, 131, 134, 135, 136, 137, 143, 149, 151, 152, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 179, 184, 185, 189, 192, 198, 201, 211, 217, 218, 219, 221, 222, 223, 226, 230, 231, 234, 235, 236, 237, 241, 242, 247, 248, 252], "all": [0, 2, 3, 4, 5, 6, 16, 17, 21, 22, 25, 29, 32, 34, 36, 39, 40, 43, 44, 51, 53, 55, 59, 62, 64, 66, 68, 69, 71, 72, 73, 74, 75, 78, 80, 82, 83, 84, 85, 86, 88, 89, 94, 96, 97, 98, 99, 104, 108, 109, 111, 112, 121, 123, 125, 130, 131, 134, 137, 138, 141, 143, 145, 147, 150, 152, 154, 158, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 185, 194, 208, 211, 219, 221, 224, 228, 229, 230, 233, 237, 238, 247, 252], "avail": [0, 2, 11, 40, 47, 59, 64, 68, 72, 73, 84, 85, 86, 88, 96, 100, 110, 113, 115, 116, 131, 134, 135, 138, 141, 142, 145, 146, 150, 151, 152, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 169, 170, 171, 174, 175, 176, 179, 194, 211, 217, 219, 224, 226, 235, 238, 241, 242, 245], "maximum": [0, 2, 28, 30, 40, 44, 81, 86, 89, 91, 98, 109, 113, 152, 157, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 179, 184, 214, 215, 221, 222, 226, 234, 238, 245], "num_cpu_cor": 0, "select": [0, 6, 24, 25, 29, 39, 51, 53, 62, 67, 69, 74, 82, 83, 84, 85, 86, 88, 90, 105, 108, 125, 157, 163, 164, 166, 167, 169, 170, 171, 174, 175, 176, 179, 180, 214, 217, 239, 245], "an": [0, 3, 5, 6, 13, 16, 19, 21, 22, 23, 24, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 62, 64, 66, 68, 69, 70, 71, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 102, 104, 105, 106, 107, 109, 111, 112, 113, 116, 119, 121, 122, 123, 126, 128, 131, 134, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 192, 195, 196, 197, 198, 199, 201, 202, 203, 209, 211, 217, 218, 221, 222, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 241, 242, 245, 250, 252, 253], "error": [0, 19, 21, 29, 43, 46, 47, 69, 76, 78, 80, 93, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 176, 179, 195, 196, 198, 202, 209, 211, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 252], "rais": [0, 163, 166, 167, 169, 171, 176, 195, 196, 198, 202, 209, 211, 217, 219, 220, 221, 222, 224, 226, 237], "same": [0, 2, 3, 6, 13, 19, 20, 29, 32, 33, 34, 43, 47, 52, 55, 59, 60, 66, 71, 74, 78, 80, 81, 82, 83, 85, 86, 89, 94, 96, 97, 99, 100, 104, 106, 108, 109, 111, 112, 113, 114, 123, 124, 125, 128, 130, 131, 135, 137, 142, 143, 147, 148, 151, 157, 160, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 218, 219, 224, 228, 230, 231, 233, 235, 237, 239, 240, 242, 252], "directli": [0, 5, 6, 15, 34, 36, 66, 69, 84, 85, 99, 100, 142, 148, 156, 163, 164, 168, 170, 171, 176, 218, 220, 245], "closest_peak_direction_gett": [0, 177], "basedirectiongett": [0, 177], "basepmfdirectiongett": [0, 177], "reconst": [0, 24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 51, 53, 62, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 119, 121, 126, 128, 131, 136, 160, 162, 167, 177, 217, 218, 219, 220, 221, 222, 224, 225, 226, 228, 229, 234, 250], "eudxdirectiongett": [0, 167, 177], "eudx_direction_gett": [0, 177], "migrat": [0, 145, 158, 234], "tavi": 0, "azur": [0, 158, 229, 230, 231, 232, 234], "depend": [0, 2, 19, 22, 34, 36, 44, 55, 62, 66, 68, 71, 73, 82, 84, 85, 95, 97, 111, 116, 131, 142, 145, 146, 151, 152, 155, 157, 158, 163, 164, 165, 166, 170, 171, 172, 174, 176, 200, 219, 222, 224, 226, 228, 229, 232, 234, 237, 238, 252], "tqdm": [0, 158, 231], "registr": [0, 1, 19, 58, 103, 104, 108, 109, 123, 125, 145, 153, 154, 158, 162, 163, 165, 168, 171, 175, 176, 178, 184, 205, 208, 211, 217, 219, 221, 222, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 247, 248], "interp": [0, 163, 231], "align": [0, 24, 25, 58, 60, 62, 67, 72, 73, 74, 85, 96, 97, 98, 99, 100, 102, 104, 105, 106, 108, 121, 134, 137, 142, 143, 149, 155, 156, 162, 164, 166, 168, 170, 171, 174, 175, 177, 179, 211, 217, 219, 220, 226, 230, 231, 232, 234, 236, 237], "imaffin": [0, 96, 97, 106, 177, 219, 228, 234], "affinemap": [0, 96, 97, 106, 177, 217, 221, 229, 231, 236], "transform": [0, 24, 29, 43, 49, 51, 58, 60, 71, 72, 78, 82, 89, 96, 97, 98, 99, 102, 104, 105, 106, 107, 108, 123, 131, 134, 135, 137, 142, 143, 144, 148, 149, 153, 158, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 184, 188, 208, 211, 217, 222, 223, 225, 226, 227, 228, 230, 231, 235, 236, 237, 241], "interpol": [0, 35, 40, 43, 50, 52, 53, 55, 60, 67, 74, 76, 79, 82, 86, 93, 99, 131, 137, 144, 158, 163, 170, 174, 176, 177, 209, 219, 224, 228, 232, 234, 236], "transform_invers": [0, 105, 106, 163, 177], "tissu": [0, 34, 35, 44, 51, 66, 68, 72, 73, 78, 80, 82, 83, 85, 86, 87, 88, 95, 104, 110, 115, 121, 131, 152, 155, 157, 158, 161, 165, 169, 170, 172, 174, 176, 177, 199, 218, 219, 227, 228, 229, 230, 231, 238, 247, 248], "tissueclassifierhmrf": [0, 84, 116, 177, 231], "check": [0, 3, 6, 16, 19, 21, 55, 60, 64, 71, 73, 78, 83, 89, 105, 112, 113, 146, 151, 152, 154, 155, 156, 157, 163, 164, 165, 166, 168, 169, 171, 174, 175, 176, 188, 189, 194, 199, 204, 217, 218, 219, 220, 221, 222, 224, 225, 226, 228, 230, 231, 234, 237, 239, 252], "toler": [0, 98, 126, 163, 164, 166, 167, 170, 171, 174, 217, 219, 222, 234, 237], "base": [0, 1, 6, 22, 25, 28, 29, 30, 44, 46, 47, 51, 52, 53, 68, 69, 70, 71, 72, 73, 74, 75, 79, 82, 85, 91, 92, 93, 95, 97, 99, 100, 101, 103, 108, 123, 126, 128, 131, 138, 141, 145, 146, 149, 151, 152, 153, 158, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 177, 184, 190, 192, 202, 205, 208, 211, 217, 218, 219, 221, 222, 225, 226, 228, 229, 230, 231, 234, 236, 237, 238, 242, 244, 247, 248], "stop": [0, 6, 25, 28, 30, 32, 33, 36, 37, 38, 44, 131, 157, 163, 170, 171, 174, 176, 179, 214, 215, 222, 226, 228, 230, 238], "criterion": [0, 3, 25, 28, 30, 32, 33, 36, 37, 38, 44, 131, 156, 157, 166, 170, 174, 176, 214, 238], "everi": [0, 19, 21, 22, 29, 36, 39, 43, 56, 83, 86, 90, 99, 111, 112, 122, 130, 131, 134, 138, 141, 142, 164, 165, 170, 171, 173, 174, 175, 176, 222, 224, 239], "iter": [0, 56, 58, 62, 69, 71, 75, 84, 89, 91, 96, 97, 98, 102, 104, 105, 106, 116, 122, 138, 141, 163, 164, 166, 169, 170, 171, 172, 174, 176, 177, 178, 179, 184, 207, 217, 221, 228, 233], "previous": [0, 49, 56, 76, 80, 84, 85, 86, 96, 107, 111, 112, 113, 116, 122, 138, 141, 156, 163, 170, 171, 174], "onli": [0, 3, 6, 7, 9, 15, 17, 21, 24, 25, 29, 39, 40, 43, 46, 51, 53, 55, 60, 64, 69, 71, 73, 75, 76, 78, 79, 80, 81, 83, 84, 85, 89, 90, 93, 94, 97, 99, 104, 105, 111, 112, 113, 114, 121, 122, 123, 131, 135, 142, 146, 147, 151, 152, 155, 156, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 192, 197, 199, 202, 203, 209, 211, 217, 218, 219, 222, 224, 226, 228, 229, 231, 236, 241, 242, 245, 252], "10th": [0, 163, 237], "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 15, 16, 17, 19, 21, 22, 24, 25, 29, 32, 33, 34, 35, 36, 38, 39, 40, 43, 46, 47, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 137, 138, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 245, 246, 252, 253, 254], "mai": [0, 3, 5, 6, 8, 12, 19, 22, 55, 60, 71, 72, 73, 74, 76, 78, 83, 84, 85, 86, 88, 96, 97, 102, 104, 123, 135, 138, 141, 151, 152, 154, 157, 159, 163, 164, 167, 168, 169, 170, 171, 174, 175, 176, 181, 182, 183, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 207, 209, 210, 212, 214, 215, 217, 219, 220, 221, 222, 223, 228, 229, 230, 232, 233, 234, 235, 236, 237, 241, 242, 252], "result": [0, 3, 18, 24, 25, 29, 32, 34, 38, 49, 51, 60, 64, 66, 67, 71, 73, 78, 82, 83, 84, 85, 86, 88, 89, 90, 94, 96, 97, 100, 102, 104, 105, 107, 109, 111, 113, 114, 116, 126, 131, 138, 141, 143, 144, 146, 151, 152, 153, 154, 158, 163, 164, 165, 166, 167, 169, 170, 171, 174, 175, 176, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 202, 203, 207, 210, 212, 213, 222, 228, 233, 234, 249, 250], "earlier": [0, 148], "termin": [0, 19, 123, 145, 146, 150, 163, 164, 170, 252], "previou": [0, 6, 59, 73, 74, 84, 96, 100, 145, 146, 147, 157, 163, 164, 166, 167, 169, 170, 174, 176, 218, 237, 245, 252], "reconstruct": [0, 25, 33, 34, 35, 36, 38, 39, 40, 45, 48, 51, 52, 59, 62, 64, 66, 76, 77, 79, 80, 82, 83, 86, 88, 92, 95, 119, 142, 146, 151, 152, 153, 157, 158, 162, 164, 165, 166, 169, 170, 172, 176, 195, 197, 198, 199, 200, 218, 219, 220, 221, 224, 226, 229, 230, 231, 232, 233, 235, 237, 238, 239, 245, 247, 248, 250], "csdeconv": [0, 24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 66, 69, 71, 89, 90, 177, 218, 220, 225, 230], "auto_respons": [0, 177, 220], "auto_response_ssst": [0, 24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 66, 69, 71, 89, 90, 177], "response_from_mask": [0, 84, 177], "response_from_mask_ssst": [0, 71, 177], "sim": [0, 24, 71, 77, 85, 89, 91, 119, 121, 122, 162, 164, 165, 170, 177, 219, 222, 224, 228], "multi_shell_fiber_respons": [0, 84, 177, 237], "mcsd": [0, 84, 177, 229, 234, 237], "In": [0, 3, 10, 14, 19, 20, 21, 22, 24, 25, 29, 33, 34, 35, 36, 39, 43, 46, 47, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 104, 105, 111, 119, 121, 122, 123, 128, 130, 131, 134, 135, 137, 138, 141, 142, 143, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 163, 164, 166, 168, 169, 170, 171, 174, 175, 176, 201, 217, 231, 241, 242, 245, 252, 253], "prior": [0, 52, 53, 126, 151, 164, 171, 227], "user": [0, 6, 13, 16, 17, 19, 21, 22, 40, 64, 72, 73, 75, 76, 80, 82, 83, 84, 86, 87, 88, 89, 93, 96, 98, 100, 108, 134, 146, 147, 151, 152, 156, 158, 163, 164, 168, 169, 171, 172, 174, 175, 176, 217, 221, 222, 228, 234, 243], "scipi": [0, 3, 19, 62, 67, 69, 73, 74, 80, 82, 131, 142, 158, 163, 164, 170, 171, 174, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 234, 237, 249, 252], "memori": [0, 29, 36, 39, 70, 75, 76, 86, 109, 142, 158, 163, 164, 167, 168, 169, 170, 172, 176, 207, 217, 218, 220, 222, 226, 228, 230, 232, 234, 239], "overlap": [0, 86, 99, 105, 106, 158, 171, 230], "bug": [0, 4, 5, 6, 16, 145, 158, 163, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 234, 236, 237], "occur": [0, 80, 88, 170, 174], "multi_median": [0, 158, 177, 230], "caus": [0, 43, 73, 143, 163, 164, 166, 170, 171, 174, 176, 217, 225, 226], "overli": 0, "smooth": [0, 24, 25, 50, 52, 67, 73, 74, 83, 84, 86, 89, 96, 102, 116, 163, 164, 166, 170, 171, 174, 176, 178, 179, 209, 224], "output": [0, 3, 6, 7, 25, 34, 40, 49, 50, 52, 53, 54, 55, 66, 73, 91, 102, 107, 108, 113, 125, 134, 138, 141, 147, 148, 151, 152, 154, 155, 156, 157, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 216, 217, 218, 219, 222, 225, 226, 228, 230, 231, 232, 234], "fix": [0, 1, 4, 5, 6, 16, 21, 25, 35, 40, 82, 99, 141, 149, 158, 163, 164, 169, 170, 171, 172, 174, 175, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "regardless": [0, 170, 174], "": [0, 1, 2, 3, 5, 6, 12, 13, 15, 16, 19, 21, 22, 23, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 124, 125, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 159, 161, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 222, 225, 227, 228, 231, 234, 236, 237, 239, 241, 242, 243, 245, 247, 248], "instal": [0, 2, 3, 6, 8, 14, 18, 21, 22, 83, 141, 145, 217, 219, 220, 222, 225, 226, 227, 228, 229, 230, 237, 253], "via": [0, 6, 19, 21, 24, 25, 29, 44, 57, 61, 85, 90, 92, 126, 138, 141, 145, 163, 164, 165, 169, 170, 171, 174, 176, 179, 217, 221, 238, 241, 242, 252], "median_otsu": [0, 24, 44, 46, 47, 51, 53, 57, 61, 62, 67, 70, 73, 74, 78, 84, 85, 89, 104, 105, 106, 110, 115, 176, 177, 207, 228, 230, 238], "threshold": [0, 4, 25, 34, 35, 44, 55, 57, 61, 62, 66, 71, 80, 82, 83, 84, 85, 89, 108, 111, 112, 113, 114, 123, 125, 126, 147, 151, 155, 157, 163, 164, 166, 167, 170, 174, 175, 176, 177, 179, 183, 188, 189, 192, 195, 196, 197, 199, 200, 201, 203, 204, 208, 211, 212, 214, 215, 219, 222, 225, 226, 227, 228, 230, 237, 238], "should": [0, 2, 3, 4, 5, 6, 9, 12, 15, 19, 21, 22, 29, 36, 40, 44, 53, 55, 58, 67, 70, 71, 72, 73, 78, 82, 83, 84, 85, 86, 88, 89, 102, 111, 128, 130, 131, 138, 141, 142, 146, 154, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 180, 196, 198, 201, 203, 217, 219, 220, 222, 227, 228, 229, 231, 233, 234, 235, 236, 250, 252], "process": [0, 3, 24, 25, 29, 46, 47, 50, 54, 55, 64, 71, 72, 73, 74, 80, 82, 85, 86, 96, 98, 104, 105, 111, 113, 125, 130, 134, 138, 141, 145, 147, 151, 152, 154, 155, 156, 157, 158, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 181, 182, 183, 184, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 207, 209, 210, 212, 219, 228, 230, 234, 245, 252], "pipelin": [0, 39, 55, 96, 97, 104, 134, 137, 158, 163, 169, 170, 230, 231, 234], "after": [0, 6, 9, 19, 24, 25, 35, 51, 54, 55, 71, 82, 86, 98, 99, 100, 105, 108, 114, 116, 124, 130, 134, 137, 141, 144, 148, 149, 151, 152, 163, 164, 166, 168, 169, 170, 171, 172, 174, 175, 176, 179, 192, 208, 215, 219, 224, 225, 226, 230, 233], "make": [0, 2, 3, 4, 5, 10, 13, 14, 15, 17, 18, 19, 22, 46, 49, 55, 59, 70, 76, 78, 82, 83, 84, 86, 97, 99, 102, 105, 107, 108, 111, 112, 113, 123, 126, 128, 131, 134, 135, 138, 142, 147, 149, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 231, 234, 235, 237, 240, 242, 245, 252, 254], "sure": [0, 2, 3, 5, 6, 19, 21, 70, 78, 97, 105, 111, 112, 113, 123, 134, 147, 148, 149, 163, 171, 173, 175, 252], "still": [0, 6, 19, 21, 34, 38, 55, 62, 66, 75, 78, 83, 86, 88, 102, 131, 155, 164, 168, 170, 171, 174, 218, 219, 226, 231, 245, 252], "oper": [0, 3, 24, 25, 43, 46, 62, 96, 134, 141, 160, 163, 168, 170, 174, 176, 217, 237, 239, 249, 252], "expect": [0, 29, 40, 73, 80, 94, 116, 142, 152, 156, 163, 165, 166, 168, 169, 170, 171, 174, 176, 177, 179, 219, 241, 242], "try": [0, 3, 17, 19, 21, 73, 78, 83, 84, 88, 91, 97, 105, 113, 114, 126, 146, 151, 152, 154, 155, 156, 157, 158, 163, 166, 170, 174, 220, 224, 225, 226, 228, 241, 242, 250, 252, 253, 254], "readjust": 0, "median_radiu": [0, 46, 47, 49, 51, 53, 70, 73, 74, 78, 84, 85, 89, 105, 106, 107, 146, 171, 176, 207], "peak_direction_gett": [0, 228], "dipy_track_loc": [0, 228], "dipy_track": [0, 146, 157, 216, 230], "other": [0, 3, 4, 10, 13, 15, 18, 19, 20, 22, 25, 29, 33, 34, 39, 46, 50, 53, 55, 60, 62, 64, 66, 69, 71, 73, 74, 78, 81, 82, 83, 84, 85, 86, 89, 90, 91, 94, 96, 97, 98, 99, 104, 105, 111, 116, 121, 125, 126, 131, 134, 138, 141, 142, 147, 151, 152, 154, 155, 157, 163, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 192, 199, 220, 224, 225, 228, 231, 233, 237, 241, 242, 252], "unique_bv": [0, 177], "unique_bvals_magnitud": [0, 177], "visual": [0, 2, 6, 19, 22, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 51, 53, 55, 56, 64, 66, 67, 70, 71, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 98, 100, 102, 104, 105, 106, 108, 109, 111, 112, 113, 114, 119, 121, 122, 124, 125, 126, 128, 130, 131, 133, 137, 142, 144, 145, 146, 147, 148, 149, 158, 162, 163, 166, 167, 170, 171, 174, 176, 177, 203, 219, 220, 221, 222, 224, 225, 228, 231, 233, 234, 237, 238, 239, 252], "window": [0, 4, 11, 21, 22, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 53, 56, 66, 67, 70, 71, 77, 78, 79, 83, 84, 89, 90, 91, 92, 94, 99, 100, 104, 105, 108, 109, 111, 112, 113, 114, 119, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 142, 146, 147, 158, 163, 170, 174, 175, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 236, 239], "scene": [0, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 56, 66, 67, 70, 71, 77, 78, 79, 83, 84, 89, 90, 91, 92, 94, 99, 108, 109, 111, 112, 113, 114, 119, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 174, 175, 176, 203, 230], "instead": [0, 15, 16, 19, 22, 38, 52, 55, 73, 89, 96, 108, 147, 163, 164, 166, 169, 170, 171, 173, 174, 175, 218, 219, 220, 221, 223, 226, 227, 229, 230, 233, 234, 235, 236, 252], "render": [0, 3, 44, 126, 128, 132, 133, 134, 175, 217, 219, 220, 221, 222, 223, 226, 230, 233, 238], "clear": [0, 3, 55, 56, 71, 78, 83, 90, 91, 94, 111, 112, 114, 135, 137, 163, 166, 170, 171, 177, 226, 230], "rm_all": 0, "img": [0, 51, 60, 64, 70, 75, 76, 79, 80, 81, 93, 102, 160, 163, 165, 168, 169, 171, 175, 228], "get_data": [0, 222, 228, 229], "sinc": [0, 6, 16, 25, 29, 50, 51, 53, 54, 55, 62, 73, 78, 82, 83, 88, 89, 96, 102, 104, 111, 112, 114, 121, 123, 126, 152, 163, 164, 166, 168, 169, 170, 171, 172, 176, 245], "nibabel": [0, 3, 19, 22, 43, 60, 64, 70, 72, 73, 75, 76, 78, 79, 80, 81, 93, 142, 158, 163, 165, 168, 220, 222, 226, 229, 231, 235, 237, 239, 249, 252], "np": [0, 3, 24, 25, 29, 31, 35, 40, 43, 49, 50, 51, 52, 53, 54, 55, 56, 59, 62, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 96, 97, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 128, 130, 131, 134, 135, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 192, 217, 219, 224, 231, 233, 235], "asanyarrai": 0, "dataobj": [0, 51, 79, 80], "tractogram": [0, 38, 43, 104, 108, 109, 123, 148, 157, 158, 160, 163, 165, 168, 171, 175, 176, 185, 187, 203, 208, 211, 214, 215, 228, 233, 234, 235, 247, 248], "streamlin": [0, 1, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66, 98, 99, 100, 101, 103, 108, 110, 111, 112, 113, 114, 115, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 145, 147, 149, 153, 157, 158, 160, 162, 163, 165, 167, 170, 171, 173, 176, 177, 184, 203, 205, 208, 211, 214, 215, 217, 218, 219, 220, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 247, 248], "statefultractogram": [0, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 66, 100, 104, 108, 131, 158, 175, 177, 230, 234, 237], "creat": [0, 2, 3, 5, 10, 24, 25, 29, 31, 32, 34, 35, 39, 40, 43, 44, 51, 56, 64, 66, 71, 73, 74, 76, 77, 78, 80, 82, 84, 86, 88, 91, 96, 97, 98, 106, 111, 112, 113, 119, 122, 123, 124, 125, 130, 131, 134, 135, 136, 139, 140, 143, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 206, 217, 221, 222, 224, 225, 226, 227, 228, 230, 233, 237, 238, 252, 253], "anoth": [0, 2, 5, 21, 25, 29, 43, 73, 82, 83, 84, 88, 109, 141, 163, 164, 168, 170, 171, 172, 225, 226, 229, 236, 241], "one": [0, 3, 4, 6, 9, 16, 19, 21, 25, 29, 34, 43, 44, 50, 52, 53, 55, 56, 58, 59, 62, 64, 66, 67, 69, 71, 73, 74, 75, 76, 78, 80, 81, 82, 84, 85, 86, 89, 90, 92, 93, 94, 96, 99, 104, 106, 109, 111, 113, 121, 122, 123, 130, 131, 136, 138, 142, 143, 144, 152, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 185, 192, 197, 199, 203, 217, 219, 221, 223, 226, 228, 229, 231, 233, 236, 241, 242, 245, 252], "workflow": [0, 10, 12, 14, 16, 21, 140, 145, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 162, 177, 181, 182, 183, 189, 190, 191, 192, 197, 198, 199, 200, 201, 202, 206, 207, 214, 215, 218, 219, 220, 221, 222, 223, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 247], "dipy_nlmean": [0, 141], "dipy_denoise_nlmean": [0, 151, 216], "get_fdata": [0, 58, 79, 80, 88, 104, 229], "modif": [0, 111, 163, 164, 170, 171, 176, 219, 220], "appli": [0, 24, 25, 44, 47, 51, 52, 55, 68, 70, 71, 73, 74, 75, 76, 81, 85, 89, 94, 95, 96, 99, 101, 103, 105, 106, 108, 114, 130, 131, 137, 142, 151, 152, 153, 154, 158, 163, 164, 166, 169, 170, 171, 172, 174, 175, 176, 179, 180, 181, 182, 183, 191, 192, 202, 203, 207, 209, 211, 214, 222, 223, 226, 229, 230, 234, 237, 238, 239, 242], "codebas": [0, 145, 158], "datatyp": [0, 168, 226], "float64": [0, 24, 50, 54, 163, 164, 170, 174, 217, 222, 228, 235], "some": [0, 5, 9, 10, 13, 15, 16, 19, 20, 21, 29, 34, 43, 44, 56, 58, 59, 64, 66, 68, 69, 72, 73, 80, 82, 83, 84, 85, 86, 88, 89, 91, 94, 97, 102, 104, 106, 108, 111, 112, 122, 123, 126, 128, 130, 131, 134, 135, 136, 138, 141, 142, 143, 145, 146, 147, 156, 161, 163, 164, 165, 166, 170, 171, 174, 176, 197, 199, 207, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 239, 242, 249, 252], "introduc": [0, 3, 22, 38, 51, 71, 82, 84, 88, 89, 99, 100, 155, 166, 170, 218, 226, 237], "break": [0, 4, 99, 137, 164, 165, 166, 217, 222, 224, 226, 228, 229, 234, 236], "backward": [0, 4, 24, 163, 166, 167, 170, 226, 234, 237], "compat": [0, 4, 22, 72, 145, 158, 166, 167, 168, 169, 170, 171, 218, 222, 223, 224, 225, 226, 227, 228, 231, 234, 237], "python": [0, 1, 2, 3, 21, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 158, 163, 164, 166, 168, 169, 170, 171, 175, 176, 177, 196, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 233, 234, 235, 236, 237, 253], "harmon": [0, 6, 33, 36, 44, 46, 68, 70, 79, 92, 95, 155, 158, 160, 162, 163, 165, 166, 167, 170, 175, 176, 195, 196, 198, 217, 222, 224, 226, 238, 244], "mrtrix": [0, 160, 165, 167, 170, 171, 176, 186, 228, 230, 231, 245], "fibernav": 0, "tournier07": [0, 166, 167, 169, 170, 245], "descoteaux07": [0, 91, 166, 167, 169, 170, 245], "cycl": [0, 163, 164, 239], "start": [0, 6, 12, 18, 19, 21, 22, 23, 32, 36, 37, 38, 39, 46, 47, 54, 56, 58, 59, 60, 65, 71, 80, 82, 86, 87, 89, 94, 96, 98, 99, 100, 112, 113, 123, 125, 128, 130, 131, 134, 136, 137, 143, 145, 155, 157, 163, 164, 167, 169, 170, 171, 174, 175, 176, 184, 198, 215, 226, 228, 238, 239, 243, 252, 253], "default_spher": [0, 24, 25, 33, 34, 35, 36, 40, 47, 66, 70, 71, 94, 126, 128, 131, 136, 170, 172, 175, 177], "symmetric724": [0, 84, 91, 165, 166, 228], "repulsion724": [0, 37, 46, 67, 75, 77, 78, 79, 81, 83, 89, 92, 119, 122, 165, 166, 170, 176, 228], "more": [0, 3, 4, 9, 16, 19, 20, 22, 23, 25, 29, 38, 39, 40, 43, 44, 50, 53, 54, 67, 69, 73, 74, 76, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 96, 99, 100, 108, 111, 112, 113, 121, 125, 126, 128, 130, 131, 134, 136, 137, 142, 144, 145, 146, 147, 148, 149, 154, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 174, 175, 176, 189, 190, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 235, 239, 246, 249, 250, 253], "evenli": [0, 39, 44, 56, 85, 91, 161, 164, 170, 174], "mask": [0, 6, 24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 53, 54, 59, 62, 66, 67, 70, 71, 72, 73, 74, 78, 80, 81, 84, 85, 86, 87, 88, 89, 101, 103, 104, 105, 106, 107, 126, 128, 131, 136, 146, 155, 157, 158, 163, 164, 165, 166, 167, 169, 170, 174, 175, 177, 193, 195, 196, 197, 198, 199, 200, 206, 207, 212, 214, 215, 217, 218, 219, 222, 223, 224, 225, 226, 228, 230, 232, 234, 236, 237, 238, 247, 248], "follow": [0, 3, 4, 5, 6, 14, 16, 17, 18, 19, 20, 21, 22, 23, 29, 33, 34, 36, 40, 43, 51, 52, 53, 55, 56, 58, 60, 62, 64, 66, 72, 73, 74, 75, 78, 82, 84, 85, 86, 87, 88, 90, 94, 96, 99, 109, 111, 122, 134, 136, 137, 138, 141, 142, 143, 144, 146, 147, 148, 149, 151, 155, 156, 157, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 192, 197, 199, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242, 247, 249, 252, 254], "wai": [0, 3, 5, 6, 12, 13, 15, 16, 19, 20, 21, 31, 33, 34, 36, 50, 51, 56, 58, 64, 66, 69, 71, 72, 73, 74, 75, 78, 80, 83, 84, 85, 86, 89, 113, 122, 123, 131, 134, 135, 137, 138, 142, 145, 146, 154, 155, 157, 163, 164, 167, 170, 171, 172, 174, 175, 176, 201, 227, 242, 252], "you": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 32, 34, 39, 43, 44, 46, 47, 51, 53, 54, 56, 58, 60, 64, 66, 69, 70, 71, 72, 73, 75, 78, 80, 81, 82, 83, 84, 85, 86, 90, 91, 94, 96, 99, 100, 104, 108, 111, 112, 113, 123, 126, 128, 130, 134, 135, 136, 137, 138, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 160, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 203, 205, 208, 209, 218, 222, 224, 235, 239, 240, 247, 250, 252, 253, 254], "4d": [0, 52, 54, 55, 64, 71, 77, 78, 82, 89, 119, 145, 151, 155, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 202, 207, 209, 213, 222, 228, 230], "volum": [0, 1, 29, 35, 38, 40, 43, 44, 49, 52, 53, 55, 57, 60, 61, 64, 71, 74, 75, 78, 80, 82, 83, 84, 85, 87, 88, 89, 90, 94, 96, 97, 104, 105, 106, 107, 116, 123, 128, 132, 133, 142, 146, 151, 152, 153, 155, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 207, 209, 212, 213, 214, 215, 217, 219, 221, 225, 228, 230, 231, 234, 237, 238, 243, 247, 248], "vol_idx": [0, 46, 47, 51, 53, 62, 70, 73, 74, 78, 84, 85, 89, 104, 146, 155, 171, 176, 207, 213, 228], "order": [0, 3, 21, 24, 25, 29, 34, 43, 46, 47, 50, 54, 55, 66, 70, 72, 73, 76, 78, 79, 82, 83, 86, 87, 88, 91, 92, 96, 97, 99, 104, 113, 131, 137, 150, 151, 155, 156, 157, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 195, 196, 201, 209, 217, 220, 222, 224, 228, 230, 234, 235, 237, 245, 246], "also": [0, 1, 3, 5, 6, 17, 19, 34, 36, 38, 39, 40, 43, 49, 50, 51, 53, 54, 55, 56, 58, 59, 62, 64, 66, 69, 70, 71, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 96, 97, 98, 100, 104, 105, 106, 107, 111, 113, 114, 116, 121, 122, 125, 128, 130, 131, 134, 135, 137, 138, 141, 142, 143, 144, 147, 151, 152, 154, 155, 156, 157, 163, 169, 171, 175, 176, 203, 207, 217, 237, 239, 245, 246, 250, 254], "load": [0, 31, 32, 33, 34, 35, 36, 38, 40, 43, 50, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 83, 85, 87, 88, 89, 92, 93, 94, 98, 99, 100, 105, 108, 111, 112, 113, 114, 131, 134, 137, 142, 162, 164, 165, 168, 169, 176, 203, 217, 222, 224, 228, 235, 237], "save": [0, 2, 5, 6, 34, 39, 43, 49, 50, 52, 53, 55, 58, 60, 62, 64, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 84, 89, 91, 93, 94, 99, 100, 104, 107, 108, 112, 114, 121, 122, 125, 128, 131, 134, 137, 138, 141, 142, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 162, 163, 164, 165, 167, 168, 169, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 207, 209, 210, 212, 214, 215, 219, 222, 223, 226, 228, 229, 230, 231, 233, 235, 237, 250], "load_tractogram": [0, 43, 104, 111, 112, 113, 114, 160, 171, 177, 229], "save_tractogram": [0, 43, 100, 104, 160, 177], "trk": [0, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 66, 100, 104, 108, 123, 131, 142, 146, 147, 148, 149, 160, 165, 168, 176, 184, 203, 225, 228, 229, 231, 247, 248], "tck": [0, 43, 168, 176, 185, 187, 203, 204, 222, 228, 229, 230, 247, 248], "vtk": [0, 19, 43, 158, 176, 177, 185, 187, 204, 217, 219, 220, 221, 222, 226, 227, 230, 234, 236], "fib": [0, 43, 160, 168, 176, 185, 187, 204, 247, 248], "dpy": [0, 43, 142, 162, 176, 177, 185, 187, 203, 204, 219, 239, 247, 248], "refer": [0, 1, 6, 12, 17, 18, 19, 21, 43, 44, 102, 136, 145, 153, 158, 161, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 237, 243, 244, 246], "nifti": [0, 43, 58, 60, 64, 78, 128, 142, 147, 155, 156, 163, 165, 168, 170, 173, 174, 176, 177, 180, 195, 196, 198, 199, 201, 221, 223, 228, 239, 250], "file": [0, 3, 5, 6, 16, 19, 21, 22, 27, 29, 30, 34, 39, 42, 48, 50, 55, 58, 60, 61, 64, 65, 66, 72, 78, 82, 93, 95, 96, 97, 103, 104, 108, 115, 117, 120, 123, 129, 131, 133, 138, 140, 141, 142, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 160, 163, 164, 165, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 247, 248, 249, 250, 252], "need": [0, 2, 3, 5, 6, 8, 9, 15, 18, 19, 22, 29, 32, 34, 36, 43, 44, 46, 49, 50, 53, 54, 55, 56, 62, 66, 69, 70, 72, 73, 75, 78, 82, 83, 84, 85, 86, 90, 91, 94, 96, 97, 98, 104, 105, 106, 107, 109, 111, 112, 113, 121, 122, 123, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 161, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 192, 203, 209, 214, 215, 217, 218, 219, 220, 221, 222, 224, 226, 228, 229, 230, 235, 237, 240, 242, 250, 252], "guarante": [0, 43, 83, 111, 170, 174], "proper": [0, 89, 170, 176, 217], "spatial": [0, 24, 29, 38, 43, 53, 78, 80, 82, 89, 92, 104, 111, 131, 145, 155, 158, 164, 166, 168, 170, 171, 174, 176, 224, 228, 235, 243], "handl": [0, 6, 43, 51, 64, 134, 145, 158, 163, 164, 165, 168, 169, 175, 176, 218, 219, 220, 221, 222, 225, 226, 228, 229, 230, 231, 232, 235, 249], "modifi": [0, 6, 43, 96, 97, 98, 114, 128, 131, 163, 164, 165, 170, 171, 174, 176, 184, 225, 230, 231, 245], "enforc": [0, 5, 22, 73, 83, 88, 130, 164, 165, 168, 170, 233], "uniform": [0, 50, 59, 163, 164, 170], "docstr": [0, 3, 22, 138, 141, 176, 217, 218, 219, 220, 223, 224, 226, 227, 229, 231, 232, 234, 235, 237, 246], "deform_streamlin": [0, 177, 234, 235], "select_by_roi": [0, 177], "orient_by_roi": [0, 177, 219, 222], "_extract_v": 0, "values_from_volum": [0, 177, 219], "util": [0, 22, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 66, 78, 82, 94, 108, 126, 128, 130, 131, 136, 146, 155, 158, 160, 163, 164, 177, 218, 219, 220, 222, 224, 226, 228, 229, 230, 234, 236, 237], "density_map": [0, 43, 131, 177, 230], "connectivity_matrix": [0, 131, 177, 222, 226, 229, 237], "seeds_from_mask": [0, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 126, 128, 131, 136, 177], "random_seeds_from_mask": [0, 177], "target": [0, 40, 55, 98, 99, 104, 108, 131, 148, 163, 164, 169, 171, 173, 176, 177, 184, 219, 222, 226], "target_line_bas": [0, 177, 230], "near_roi": [0, 25, 177, 234], "length": [0, 44, 82, 83, 99, 100, 111, 112, 113, 123, 126, 127, 129, 134, 135, 142, 144, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 203, 208, 211, 217, 219, 222, 226, 227, 234, 237, 238, 246], "path_length": [0, 128, 177], "affine_for_trackvi": 0, "move_streamlin": 0, "flexi_tvis_affin": 0, "get_flexi_tvis_affin": [0, 235], "delet": [0, 2, 10, 19, 21, 81, 163, 164, 165, 168, 176, 185, 217, 221, 225, 226, 228, 237], "life": [0, 22, 28, 30, 44, 72, 158, 164, 177, 218, 226, 227, 228, 229, 230, 231, 238], "voxel2streamlin": [0, 177], "setup": [0, 2, 22, 163, 174, 177, 218, 219, 226, 236, 237], "fit": [0, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 47, 51, 53, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 119, 155, 158, 161, 163, 164, 166, 167, 169, 170, 171, 174, 175, 176, 177, 195, 196, 199, 200, 201, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 230, 234, 235, 236, 237, 238, 250, 254], "fibermodel": [0, 29, 177], "afq_profil": [0, 123, 177, 233], "analysi": [0, 1, 3, 20, 34, 35, 39, 40, 51, 53, 58, 62, 64, 66, 72, 73, 76, 79, 80, 83, 84, 85, 86, 92, 93, 100, 123, 124, 128, 145, 146, 147, 148, 149, 151, 154, 155, 157, 158, 163, 164, 165, 166, 170, 171, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 223, 228, 230, 235, 237, 241], "similarli": [0, 82, 86, 88, 163, 165, 176, 179], "simul": [0, 56, 77, 83, 85, 91, 94, 119, 120, 130, 162, 164, 165, 166, 170, 172, 217, 224, 231, 238], "singletensor": [0, 228], "single_tensor": [0, 121, 177, 219, 228], "multitensor": [0, 44, 85, 91, 118, 120, 172, 238], "multi_tensor": [0, 77, 85, 119, 122, 170, 177, 219], "sticksandbal": 0, "sticks_and_bal": [0, 170, 177], "voxel_s": [0, 35, 43, 60, 75, 81, 164, 167, 168, 174, 177, 228], "stremline_map": 0, "_util": [0, 177], "_mapping_to_voxel": 0, "peaksandmetricsdirectiongett": [0, 221, 228], "localtrack": [0, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 126, 128, 131, 136, 177, 219, 228, 234], "particlefilteringtrack": [0, 35, 177], "local": [0, 1, 2, 6, 14, 17, 19, 21, 25, 33, 34, 35, 37, 44, 50, 51, 53, 55, 57, 61, 66, 68, 71, 73, 78, 80, 83, 84, 85, 88, 89, 95, 96, 105, 108, 123, 128, 148, 153, 155, 158, 163, 165, 167, 169, 170, 171, 172, 174, 176, 177, 189, 190, 191, 192, 202, 205, 208, 211, 214, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 237, 238, 243, 247, 248], "local_track": [0, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 126, 128, 131, 136, 177], "thei": [0, 3, 6, 17, 35, 43, 52, 60, 62, 69, 72, 73, 78, 86, 89, 92, 96, 98, 99, 100, 111, 112, 113, 114, 126, 131, 134, 138, 141, 144, 146, 147, 151, 155, 163, 164, 165, 167, 170, 171, 174, 175, 176, 228, 241, 242], "tissue_classifi": 0, "stopping_criterion": [0, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 126, 128, 131, 136, 167, 176, 177, 215], "tissueclassifi": 0, "stoppingcriterion": [0, 177], "binarytissueclassifi": [0, 222, 223], "binarystoppingcriterion": [0, 40, 131, 177], "thresholdtissueclassifi": 0, "thresholdstoppingcriterion": [0, 25, 32, 33, 34, 36, 37, 38, 39, 40, 66, 126, 128, 136, 177], "constrainedtissueclassifi": 0, "anatomicalstoppingcriterion": [0, 177], "acttissueclassifi": 0, "actstoppingcriterion": [0, 40, 177], "cmctissueclassifi": 0, "cmcstoppingcriterion": [0, 35, 177], "tissueclass": 0, "streamlinestatu": [0, 177], "eudx": [0, 33, 34, 66, 131, 146, 153, 176, 214, 225, 226, 228, 231], "tractographi": [0, 1, 25, 28, 29, 30, 32, 33, 34, 43, 44, 60, 66, 73, 75, 83, 85, 98, 99, 100, 104, 109, 110, 113, 115, 121, 123, 126, 128, 142, 145, 146, 148, 155, 157, 158, 162, 164, 167, 168, 170, 171, 172, 174, 176, 215, 219, 221, 226, 227, 233, 235, 236, 238, 247, 248, 253], "perform": [0, 2, 3, 24, 25, 34, 43, 50, 51, 53, 55, 58, 62, 66, 67, 69, 72, 73, 77, 82, 84, 85, 88, 96, 98, 100, 102, 104, 105, 106, 108, 111, 113, 114, 116, 119, 121, 146, 151, 152, 154, 155, 156, 157, 158, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 179, 197, 199, 200, 230, 234, 237, 241], "trackvi": [0, 34, 43, 66, 131, 142, 165, 168, 177, 221, 223, 228, 231, 239], "extern": [0, 71, 84, 175, 176, 219, 228, 239], "quickbund": [0, 228], "peak": [0, 28, 29, 30, 33, 34, 36, 39, 44, 46, 66, 70, 71, 81, 84, 89, 90, 131, 146, 153, 155, 158, 162, 170, 172, 173, 174, 176, 177, 195, 196, 198, 214, 215, 219, 220, 221, 224, 225, 228, 229, 238, 241], "welcom": [0, 3, 20], "viz": [0, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 56, 66, 67, 70, 71, 73, 77, 78, 79, 83, 84, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 108, 109, 111, 112, 113, 114, 119, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 142, 162, 174, 177, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 230, 234, 236], "integr": [0, 1, 3, 10, 34, 62, 66, 74, 76, 78, 93, 145, 157, 158, 166, 169, 170, 221, 222, 227, 236, 237, 241], "variou": [0, 28, 29, 30, 35, 44, 82, 164, 165, 169, 170, 174, 219, 237, 238, 241, 242], "analys": [0, 51, 166], "adjust": [0, 52, 55, 67, 73, 83, 84, 85, 88, 134, 137, 163, 164, 166, 170, 171, 176, 189, 219, 223, 226], "slr": [0, 98, 99, 100, 108, 148, 156, 158, 163, 171, 176, 211, 218, 222, 223, 226, 229, 234], "recobundl": [0, 44, 110, 115, 153, 158, 177, 220, 221, 222, 223, 229, 230, 231, 233, 237, 238], "algorithm": [0, 25, 29, 34, 35, 44, 51, 52, 55, 57, 59, 60, 61, 66, 68, 73, 77, 78, 79, 80, 82, 85, 89, 90, 95, 99, 100, 104, 105, 106, 111, 113, 114, 116, 119, 130, 145, 146, 151, 156, 158, 159, 162, 163, 164, 166, 167, 169, 170, 171, 174, 175, 176, 179, 189, 191, 192, 228, 229, 235, 236, 238, 239], "exclud": [0, 15, 40, 62, 74, 80, 94, 126, 131, 163, 167, 169, 170, 174, 231], "insid": [0, 3, 31, 64, 83, 113, 163, 164, 166, 170, 171, 174, 176, 214, 215, 224], "note": [0, 3, 5, 6, 15, 16, 17, 21, 22, 24, 29, 55, 69, 71, 73, 74, 78, 83, 84, 85, 86, 88, 97, 100, 102, 106, 111, 112, 128, 138, 141, 145, 147, 149, 151, 152, 155, 169, 177, 184, 185, 202, 239, 241, 242, 243], "nose": [0, 143, 158, 222, 234], "pytest": [0, 19, 20, 21, 22, 158, 222, 223, 231, 234], "load_tck": [0, 43, 177], "save_tck": [0, 177], "highli": [0, 19, 58, 62, 73, 85, 111, 151, 154, 176, 184], "manag": [0, 2, 19, 22, 130, 137, 158, 162, 168, 175, 221, 226, 234, 237], "tabl": [0, 19, 22, 24, 25, 29, 44, 52, 56, 67, 72, 83, 84, 86, 87, 88, 94, 96, 137, 158, 161, 162, 164, 165, 166, 170, 172, 174, 175, 176, 201, 220, 222, 224, 226, 230, 231, 235, 237, 247], "b0_thresold": 0, "50": [0, 25, 29, 33, 35, 36, 40, 44, 46, 47, 51, 52, 53, 55, 67, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 98, 102, 105, 119, 121, 122, 128, 130, 136, 146, 158, 159, 161, 163, 164, 166, 170, 171, 172, 174, 176, 224], "impact": [0, 32, 73, 85, 111, 121, 155, 166, 170, 171, 172, 176, 191], "your": [0, 2, 3, 4, 5, 10, 13, 14, 15, 16, 19, 20, 21, 23, 34, 44, 46, 47, 54, 56, 58, 60, 64, 66, 70, 72, 76, 78, 82, 93, 94, 111, 112, 123, 138, 141, 142, 145, 147, 148, 151, 152, 154, 155, 156, 157, 158, 164, 165, 166, 170, 171, 219, 239, 240, 250, 252, 253], "want": [0, 5, 8, 10, 16, 17, 19, 20, 21, 23, 44, 56, 60, 62, 72, 75, 84, 94, 96, 97, 98, 99, 104, 105, 106, 111, 112, 113, 123, 125, 126, 128, 130, 131, 134, 135, 137, 138, 142, 143, 145, 147, 151, 152, 154, 163, 164, 168, 169, 170, 171, 174, 175, 176, 205, 208, 209, 217, 240, 242, 247, 252, 253], "assur": [0, 34, 62, 66, 125, 168], "code": [0, 2, 5, 6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 145, 158, 164, 168, 170, 171, 176, 217, 218, 219, 220, 221, 222, 224, 225, 226, 228, 230, 231, 233, 234, 235, 237, 239, 249, 253], "run": [0, 4, 5, 18, 19, 21, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 162, 163, 164, 166, 169, 170, 171, 174, 177, 215, 217, 218, 219, 222, 226, 228, 233, 235, 239, 241, 246, 247], "exactli": [0, 3, 32, 34, 66, 100, 143, 163, 164, 168, 169, 170, 171, 226], "manner": [0, 71, 156, 165, 174, 176], "befor": [0, 2, 3, 6, 21, 29, 34, 35, 52, 54, 58, 62, 66, 70, 72, 73, 74, 85, 89, 96, 98, 99, 100, 102, 105, 108, 109, 113, 116, 124, 144, 148, 149, 151, 152, 154, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 215, 221, 223, 224, 225, 226, 228, 234, 235, 252], "pleas": [0, 1, 3, 4, 9, 16, 20, 22, 23, 46, 47, 51, 52, 54, 55, 59, 80, 82, 87, 88, 126, 128, 134, 136, 146, 147, 148, 149, 160, 162, 163, 164, 165, 166, 170, 174, 176, 194, 223, 226, 252], "initi": [0, 5, 8, 24, 29, 31, 34, 38, 39, 47, 66, 69, 74, 80, 82, 83, 86, 89, 90, 91, 94, 96, 97, 99, 109, 114, 130, 134, 136, 137, 147, 163, 164, 166, 167, 169, 170, 171, 172, 174, 175, 176, 217, 224, 227, 230, 234, 237], "keyword": [0, 3, 29, 163, 164, 168, 169, 170, 172, 173, 175], "b0_threshold": [0, 55, 82, 155, 164, 166, 170, 176, 188, 189, 192, 195, 196, 197, 199, 200, 201, 204, 222], "fvtk": [0, 158, 174, 217, 218, 219, 221, 222, 224, 225, 226], "impli": [0, 15, 50, 58, 125, 154, 163, 164, 165, 170, 171, 172, 176, 178, 226, 246], "actor": [0, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 56, 66, 67, 70, 71, 77, 78, 79, 83, 84, 89, 90, 91, 92, 94, 99, 108, 109, 111, 112, 113, 114, 119, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 142, 174, 175, 177, 217, 221, 222, 230], "ren": [0, 137, 174, 219, 222], "ui": [0, 134, 137, 175, 219, 220, 221, 222], "element": [0, 25, 59, 69, 71, 72, 73, 78, 82, 87, 88, 89, 99, 112, 121, 137, 155, 163, 164, 166, 168, 170, 171, 172, 174, 175, 176, 177, 185, 199, 219, 222], "To": [0, 2, 5, 6, 19, 22, 38, 39, 43, 50, 51, 52, 53, 64, 67, 72, 73, 76, 82, 84, 86, 88, 89, 90, 91, 94, 96, 98, 99, 100, 104, 105, 106, 113, 114, 121, 122, 123, 125, 131, 148, 151, 152, 154, 155, 156, 157, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 176, 194, 247, 252], "learn": [0, 12, 13, 20, 55, 64, 67, 69, 79, 82, 145, 150, 158, 165, 166, 169, 170, 176, 177, 192, 223, 232, 249, 250, 253], "go": [0, 5, 6, 9, 15, 16, 17, 19, 20, 21, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 143, 147, 164, 169, 171, 174, 219, 221, 228], "http": [0, 1, 2, 6, 9, 19, 21, 22, 38, 44, 51, 53, 64, 73, 83, 85, 86, 87, 88, 89, 92, 100, 113, 134, 142, 143, 147, 148, 149, 152, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 176, 189, 202, 231, 237, 247, 248], "gl": 0, "furthermor": [0, 142], "load_trk": [0, 29, 43, 100, 108, 109, 123, 124, 177, 230], "save_trk": [0, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 108, 131, 177], "object": [0, 3, 5, 6, 29, 34, 39, 43, 46, 52, 56, 64, 66, 70, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 88, 89, 90, 92, 93, 94, 96, 105, 106, 111, 112, 113, 114, 131, 134, 135, 136, 137, 138, 141, 142, 143, 144, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 192, 203, 219, 220, 222, 229, 230, 231, 235], "much": [0, 3, 4, 6, 69, 76, 82, 86, 88, 96, 100, 126, 163, 164, 168, 169, 170, 171, 174, 218], "less": [0, 3, 50, 58, 75, 86, 89, 111, 128, 130, 142, 144, 158, 163, 164, 165, 166, 167, 170, 171, 174, 175, 176, 203, 208, 211, 218, 234, 235], "easier": [0, 4, 6, 77, 119, 131, 146, 164, 170, 172, 176, 254], "No": [0, 3, 19, 43, 44, 93, 161, 164, 165, 166, 170, 171, 172, 176, 195, 196, 197, 200, 219, 220, 229, 236], "major": [0, 22, 143, 163, 164, 170, 172, 224], "support": [0, 20, 22, 43, 60, 89, 126, 142, 145, 146, 158, 163, 164, 167, 168, 169, 170, 171, 174, 175, 176, 185, 187, 204, 217, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 234, 236, 237, 249], "It": [0, 5, 6, 12, 15, 16, 22, 24, 33, 35, 43, 49, 52, 56, 59, 62, 70, 71, 72, 73, 78, 81, 82, 83, 84, 85, 86, 90, 99, 100, 105, 107, 108, 109, 111, 112, 114, 125, 131, 135, 137, 138, 141, 142, 143, 147, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 180, 184, 191, 192], "year": [0, 21, 223, 226], "multipl": [0, 2, 3, 22, 44, 51, 59, 62, 69, 70, 71, 72, 73, 76, 78, 80, 82, 86, 89, 93, 102, 137, 138, 141, 142, 145, 146, 151, 152, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 169, 170, 171, 172, 174, 175, 176, 180, 181, 182, 183, 185, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 207, 209, 210, 212, 214, 215, 218, 221, 226, 230, 231, 235, 241, 247, 248], "As": [0, 3, 22, 29, 33, 35, 53, 60, 69, 73, 74, 80, 82, 83, 84, 85, 86, 87, 91, 99, 106, 108, 151, 152, 154, 155, 157, 163, 170, 174, 250], "far": [0, 21, 83, 96, 123, 174], "know": [0, 6, 20, 23, 29, 43, 59, 62, 96, 144, 163, 164, 170, 171, 175, 231, 252, 253, 254], "work": [0, 3, 6, 12, 13, 16, 18, 20, 21, 22, 49, 55, 59, 62, 80, 82, 84, 89, 91, 96, 97, 104, 107, 108, 131, 138, 141, 143, 151, 155, 158, 164, 169, 170, 174, 176, 201, 217, 218, 219, 222, 224, 226, 228, 229, 230, 234, 235, 237, 252], "well": [0, 3, 5, 6, 12, 22, 29, 36, 49, 50, 62, 72, 73, 74, 84, 85, 86, 89, 90, 91, 98, 99, 107, 123, 142, 151, 155, 157, 163, 164, 166, 170, 172, 176, 185, 222, 245, 252], "longer": [0, 15, 142, 163, 174, 227], "test": [0, 2, 3, 4, 5, 6, 16, 18, 20, 21, 69, 78, 86, 94, 97, 128, 147, 162, 163, 164, 165, 166, 169, 170, 171, 175, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 247, 248], "upgrad": [0, 145, 222, 223, 229], "newer": [0, 22, 219, 221, 222, 252], "probabilistic_direction_gett": [0, 177], "probabilisticdirectiongett": [0, 25, 35, 36, 38, 174, 177], "input": [0, 25, 32, 34, 43, 46, 50, 52, 53, 59, 66, 70, 82, 84, 91, 94, 96, 98, 99, 102, 105, 108, 112, 113, 116, 128, 134, 135, 138, 141, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 181, 182, 183, 186, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 207, 209, 210, 212, 213, 214, 215, 217, 218, 219, 222, 225, 226, 228, 231, 233, 234, 241, 242], "pmf_threshold": [0, 157, 167, 176, 214, 215], "probabl": [0, 16, 19, 24, 33, 35, 36, 76, 83, 86, 93, 96, 116, 155, 157, 163, 167, 169, 170, 171, 172, 174, 243], "lower": [0, 22, 25, 34, 38, 40, 49, 50, 51, 52, 53, 54, 55, 59, 64, 66, 71, 72, 73, 74, 76, 79, 80, 82, 84, 85, 86, 89, 93, 97, 100, 106, 107, 142, 149, 163, 164, 168, 169, 170, 171, 176, 184, 201, 206], "mass": [0, 36, 96, 97, 156, 157, 163, 167, 171, 174, 176, 178], "dki": [0, 44, 53, 72, 74, 85, 118, 120, 145, 153, 158, 161, 172, 176, 177, 197, 217, 218, 219, 221, 222, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239], "wl": [0, 44, 94, 161, 170, 176, 197, 199], "max_kurtosi": [0, 170], "axial_kurtosi": [0, 177], "mean_kurtosi": [0, 177], "radial_kuroti": 0, "prefer": [0, 2, 6, 44, 99, 100, 108, 137, 142, 147, 161, 171, 217, 223, 234, 237], "rather": [0, 2, 15, 17, 19, 22, 94, 97, 102, 143, 164, 170, 171, 217, 221], "widget": [0, 134, 219], "slicer": [0, 25, 29, 38, 39, 67, 131, 134, 137, 175, 219, 220, 221, 222, 225, 230, 237], "power": [0, 2, 44, 82, 84, 152, 158, 161, 165, 167, 170, 174, 217, 219, 247, 248], "rgb": [0, 78, 135, 146, 147, 168, 170, 175, 176, 177, 197, 199, 203, 225, 237], "too": [0, 19, 73, 76, 86, 105, 111, 167, 174, 176, 218, 228, 237, 252], "see": [0, 2, 4, 6, 9, 11, 12, 16, 17, 19, 20, 21, 25, 29, 38, 39, 40, 43, 44, 46, 50, 51, 52, 53, 55, 62, 64, 69, 72, 73, 74, 75, 76, 78, 80, 82, 83, 84, 85, 86, 87, 90, 91, 92, 96, 99, 100, 105, 106, 111, 112, 113, 114, 130, 131, 134, 135, 137, 138, 141, 143, 144, 145, 146, 147, 151, 152, 158, 159, 160, 161, 163, 169, 171, 173, 176, 194, 202, 241, 246, 252, 254], "tutori": [0, 14, 32, 38, 44, 49, 68, 70, 72, 73, 75, 76, 79, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 96, 97, 100, 106, 107, 108, 109, 112, 113, 124, 126, 128, 134, 136, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 164, 217, 218, 220, 221, 222, 223, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237], "viz_slic": [0, 133, 137, 238], "py": [0, 2, 3, 16, 19, 21, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 164, 170, 176, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238], "behavior": [0, 137, 163, 164, 169, 170, 174, 176, 221, 222, 228], "interp_rbf": [0, 177, 219, 225], "addit": [0, 3, 22, 24, 53, 72, 73, 80, 84, 88, 98, 134, 142, 151, 155, 159, 163, 165, 168, 169, 170, 173, 174, 176, 219, 224, 228, 237, 239, 240], "norm": [0, 3, 24, 55, 67, 71, 83, 84, 89, 113, 144, 163, 164, 174, 176, 177, 188, 189, 195, 199, 201, 204, 225], "angl": [0, 25, 33, 34, 44, 46, 66, 68, 77, 83, 85, 91, 95, 113, 119, 121, 122, 143, 144, 146, 153, 157, 163, 164, 165, 166, 167, 170, 172, 174, 175, 176, 195, 214, 215, 225, 234, 235, 238, 246], "euclidean_norm": [0, 164], "discourag": [0, 219], "11": [0, 1, 19, 22, 24, 25, 29, 30, 32, 33, 35, 36, 37, 40, 47, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 108, 109, 114, 116, 123, 124, 131, 158, 159, 163, 164, 165, 170, 173, 174, 217, 219, 224, 227, 228, 229, 231, 232, 233, 235, 237, 239], "vector_field": [0, 177, 219], "warp_2d_affin": 0, "transform_2d_affin": [0, 177], "warp_2d_affine_nn": 0, "transform_2d_affine_nn": [0, 177], "warp_3d_affin": 0, "transform_3d_affin": [0, 177], "warp_3d_affine_nn": 0, "transform_3d_affine_nn": [0, 177], "gqi": [0, 44, 81, 142, 161, 165, 177, 224, 239, 243], "calcul": [0, 25, 29, 32, 34, 44, 46, 47, 51, 66, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 94, 95, 123, 125, 127, 129, 130, 146, 147, 155, 163, 164, 166, 167, 170, 171, 172, 173, 174, 176, 178, 189, 196, 202, 209, 217, 222, 224, 225, 226, 230, 238, 239, 241, 242, 250], "gqi2": [0, 44, 161, 170, 227], "match": [0, 2, 44, 54, 57, 61, 89, 98, 100, 104, 108, 149, 156, 157, 163, 164, 165, 166, 168, 169, 170, 171, 176, 184, 208, 236, 238], "either": [0, 3, 15, 29, 34, 39, 40, 55, 66, 83, 84, 89, 96, 100, 111, 123, 131, 149, 163, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 189, 190, 201, 210, 219], "doc": [0, 3, 4, 19, 21, 22, 44, 76, 86, 88, 164, 168, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "therein": 0, "access": [0, 9, 15, 16, 19, 21, 43, 50, 64, 82, 84, 87, 134, 137, 164, 165, 166, 170, 176, 202, 220, 229], "complet": [0, 15, 19, 21, 34, 38, 64, 66, 83, 88, 100, 114, 126, 128, 136, 146, 147, 149, 157, 163, 170, 219, 224, 225, 234], "aniso2iso": [0, 142, 217, 219], "reslic": [0, 44, 57, 61, 75, 81, 104, 176, 177, 209, 217, 219, 226, 234, 238, 239], "peaks_from_model": [0, 25, 34, 36, 39, 46, 47, 66, 70, 71, 81, 84, 89, 90, 126, 128, 131, 136, 175, 177, 219, 224, 225, 226, 228, 234], "like": [0, 4, 5, 6, 7, 15, 17, 19, 21, 22, 36, 43, 59, 64, 71, 72, 82, 89, 90, 93, 96, 97, 99, 100, 106, 108, 114, 134, 137, 138, 141, 142, 143, 147, 156, 157, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 207, 217, 228, 233, 235, 247, 248, 250], "odf": [0, 24, 25, 32, 34, 36, 37, 38, 46, 47, 66, 67, 70, 71, 75, 77, 78, 79, 81, 83, 84, 86, 89, 90, 91, 92, 94, 119, 122, 155, 158, 166, 167, 169, 172, 175, 176, 177, 195, 196, 198, 214, 215, 218, 219, 224, 225, 226, 230, 232, 237, 239, 245], "take": [0, 2, 6, 16, 19, 20, 22, 24, 25, 36, 38, 39, 50, 52, 55, 71, 72, 73, 75, 80, 82, 84, 86, 88, 89, 90, 94, 96, 99, 111, 112, 113, 131, 142, 147, 163, 164, 165, 166, 169, 170, 173, 174, 176, 189, 190, 221, 224, 231, 232, 245], "size": [0, 1, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 50, 53, 54, 55, 56, 60, 64, 66, 67, 70, 71, 73, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 99, 102, 104, 105, 106, 108, 109, 111, 112, 113, 114, 119, 122, 124, 125, 126, 127, 128, 129, 131, 134, 135, 136, 137, 142, 146, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 184, 185, 191, 198, 203, 207, 209, 214, 215, 221, 222, 226, 228, 230, 235, 237, 238], "arrai": [0, 2, 3, 4, 5, 22, 40, 50, 52, 54, 55, 56, 59, 62, 64, 67, 71, 73, 75, 77, 78, 82, 83, 84, 85, 86, 87, 89, 90, 91, 97, 102, 105, 106, 112, 113, 119, 121, 122, 124, 130, 131, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 202, 207, 209, 217, 218, 219, 220, 221, 222, 226, 228, 229, 230, 233, 234, 235, 237, 241, 242], "updat": [0, 5, 10, 14, 21, 56, 89, 91, 134, 145, 158, 163, 164, 168, 169, 170, 171, 175, 176, 177, 179, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 245], "similar": [0, 9, 21, 44, 46, 59, 70, 72, 73, 75, 83, 85, 86, 88, 96, 97, 99, 105, 106, 108, 109, 116, 123, 126, 127, 129, 130, 153, 158, 161, 163, 164, 165, 166, 170, 171, 173, 174, 175, 176, 178, 183, 185, 192, 208, 211, 226, 228, 238, 245], "nib": [0, 3, 43, 60, 79, 80, 163, 168], "anat": 0, "voxel_dim": 0, "header": [0, 43, 64, 104, 123, 160, 168, 176, 203, 219, 228, 231, 233, 241, 242], "pixdim": 0, "someth": [0, 4, 5, 6, 16, 17, 19, 21, 83, 86, 146, 164, 168, 170, 172, 174, 175, 176, 203, 207], "1": [1, 2, 3, 6, 21, 22, 24, 25, 29, 31, 33, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 62, 64, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 152, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 239, 241, 242, 243, 245, 247, 248], "garyfallidi": [1, 3, 20, 23, 24, 25, 34, 55, 66, 80, 81, 98, 99, 100, 108, 111, 112, 113, 114, 123, 124, 125, 134, 146, 147, 148, 149, 156, 157, 163, 165, 166, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 247, 248], "e": [1, 2, 3, 6, 7, 13, 21, 23, 24, 25, 29, 31, 33, 34, 35, 38, 40, 51, 53, 55, 59, 64, 66, 67, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 88, 89, 90, 92, 93, 94, 97, 98, 102, 108, 109, 111, 112, 113, 114, 121, 123, 124, 125, 128, 134, 142, 143, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 224, 226, 239, 240, 241, 242, 245, 247, 248, 252, 253], "brett": [1, 3, 5, 20, 21, 23, 146, 147, 148, 149, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 224, 225, 226, 227], "m": [1, 3, 6, 16, 21, 29, 31, 35, 38, 40, 44, 51, 58, 62, 71, 73, 74, 76, 79, 80, 86, 87, 88, 89, 90, 93, 99, 104, 105, 106, 113, 116, 123, 130, 131, 146, 147, 148, 149, 154, 156, 157, 161, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 245, 247, 248], "amirbekian": [1, 3, 20, 23, 32, 126, 146, 147, 148, 149, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 224, 225, 226, 227], "b": [1, 2, 3, 6, 7, 21, 24, 25, 29, 44, 51, 52, 53, 55, 56, 58, 59, 62, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 99, 104, 105, 106, 108, 113, 116, 121, 122, 124, 125, 126, 130, 131, 136, 142, 146, 147, 148, 149, 151, 152, 154, 155, 156, 158, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 224, 226, 227, 228, 230, 234, 235, 237, 247, 248, 250], "rokem": [1, 3, 20, 23, 29, 39, 44, 69, 80, 90, 108, 124, 125, 146, 147, 148, 149, 161, 170, 171, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 247, 248], "van": [1, 3, 20, 23, 39, 73, 90, 146, 147, 148, 149, 170, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 224, 225, 226, 227, 247, 248], "der": [1, 3, 20, 23, 39, 73, 90, 146, 147, 148, 149, 170, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 224, 225, 226, 227, 247, 248], "walt": [1, 3, 20, 23, 39, 90, 146, 147, 148, 149, 170, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 224, 225, 226, 227, 247, 248], "descoteaux": [1, 3, 23, 31, 35, 40, 44, 62, 76, 93, 146, 147, 148, 149, 157, 161, 165, 166, 167, 170, 172, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 222, 224, 225, 226, 227, 245], "nimmo": [1, 3, 20, 23, 146, 147, 148, 149, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 224], "smith": [1, 3, 20, 23, 35, 40, 58, 116, 146, 147, 148, 149, 154, 166, 170, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 224, 245], "dipi": [1, 6, 8, 10, 12, 15, 16, 17, 19, 20, 23, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 238, 239, 240, 243, 245, 249, 250, 252, 254], "contributor": [1, 3, 20, 21, 23, 134, 164, 171, 217, 219], "2014": [1, 3, 29, 35, 40, 44, 69, 71, 73, 80, 82, 84, 89, 99, 146, 147, 148, 149, 157, 159, 161, 163, 170, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 226, 229, 247, 248], "librari": [1, 19, 22, 64, 88, 94, 134, 142, 145, 146, 147, 148, 149, 158, 164, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 221, 226, 235, 249, 252], "diffus": [1, 3, 20, 24, 25, 29, 35, 36, 38, 39, 40, 44, 51, 52, 53, 55, 56, 57, 59, 61, 64, 67, 68, 69, 70, 71, 76, 77, 79, 80, 81, 82, 84, 87, 88, 89, 90, 93, 94, 95, 96, 104, 109, 119, 121, 126, 131, 134, 142, 146, 147, 148, 149, 152, 153, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 224, 232, 234, 237, 238, 241, 242, 243, 245, 247, 248, 252, 253, 254], "mri": [1, 3, 20, 24, 25, 29, 34, 35, 38, 39, 40, 44, 49, 51, 53, 55, 59, 62, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 97, 107, 109, 126, 128, 142, 146, 147, 148, 149, 151, 152, 153, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 230, 232, 234, 237, 238, 245, 247, 248, 253], "frontier": [1, 3, 98, 111, 112, 113, 114, 123, 146, 147, 148, 149, 158, 159, 171, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "neuroinformat": [1, 3, 23, 109, 116, 146, 147, 148, 149, 158, 159, 171, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "vol": [1, 3, 32, 50, 54, 56, 71, 75, 76, 77, 81, 84, 93, 98, 111, 112, 113, 114, 119, 123, 146, 164, 166, 170, 171, 172, 174, 247, 248], "8": [1, 3, 21, 22, 24, 25, 29, 32, 33, 34, 35, 36, 37, 40, 44, 52, 53, 55, 59, 62, 66, 67, 71, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 96, 97, 108, 114, 115, 116, 126, 128, 131, 136, 137, 145, 155, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 189, 214, 215, 217, 221, 222, 224, 227, 228, 229, 230, 232, 239, 243], "2": [1, 5, 6, 21, 22, 24, 25, 27, 29, 31, 33, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 62, 64, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 99, 100, 102, 104, 105, 106, 107, 111, 113, 116, 119, 121, 122, 123, 126, 128, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 151, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 179, 180, 189, 190, 191, 197, 199, 200, 201, 202, 203, 214, 215, 217, 218, 219, 222, 223, 225, 226, 228, 229, 231, 234, 236, 237, 239, 241, 243, 245, 246, 247, 248, 249, 252], "2010": [1, 19, 24, 25, 44, 46, 70, 73, 77, 81, 99, 119, 146, 155, 161, 163, 164, 165, 170, 172, 229, 247, 248], "fast": [1, 15, 24, 34, 44, 66, 73, 74, 82, 84, 85, 86, 96, 110, 113, 115, 116, 131, 145, 146, 155, 158, 163, 166, 167, 170, 171, 172, 174, 175, 176, 203, 217, 219, 224, 236, 238, 245, 247, 248, 252], "dimension": [1, 51, 52, 83, 86, 92, 113, 144, 151, 163, 164, 166, 169, 170, 171, 172, 174, 176, 199, 217, 219, 226, 237], "reduct": [1, 29, 44, 98, 127, 129, 143, 170, 171, 176, 208, 238], "brain": [1, 23, 25, 29, 34, 40, 43, 44, 51, 53, 57, 58, 61, 62, 66, 67, 69, 71, 72, 73, 74, 78, 79, 80, 85, 87, 88, 89, 90, 94, 100, 104, 105, 106, 108, 109, 110, 115, 116, 124, 125, 128, 131, 145, 146, 147, 149, 154, 156, 157, 158, 161, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 182, 183, 193, 202, 203, 208, 212, 221, 226, 228, 232, 234, 238, 247, 248], "cluster": [1, 3, 44, 98, 99, 108, 110, 115, 123, 125, 127, 129, 146, 148, 158, 163, 164, 165, 170, 174, 176, 177, 183, 203, 205, 208, 211, 217, 219, 230, 236, 238, 239, 247, 248], "16th": 1, "annual": [1, 74, 165, 170, 247, 248], "meet": [1, 71, 74, 84, 100, 159, 165, 169, 170, 174, 228, 229, 230, 231, 232, 234, 247, 248], "organ": [1, 6, 138, 163, 164, 165, 168, 169, 170, 171, 247, 248], "human": [1, 3, 23, 25, 72, 73, 78, 87, 88, 147, 148, 158, 165, 170, 174, 247, 248], "map": [1, 24, 25, 29, 34, 35, 38, 39, 40, 43, 44, 53, 55, 58, 60, 62, 64, 66, 67, 68, 72, 73, 74, 75, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 95, 100, 102, 104, 105, 106, 109, 111, 112, 114, 116, 123, 127, 129, 134, 135, 146, 153, 156, 157, 158, 161, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 179, 180, 201, 217, 219, 221, 222, 227, 230, 231, 233, 234, 235, 237, 238, 247, 248, 250], "3": [1, 3, 5, 22, 24, 25, 29, 35, 40, 43, 44, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 64, 67, 70, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 108, 109, 111, 112, 113, 114, 116, 120, 122, 124, 125, 128, 130, 131, 134, 137, 142, 143, 144, 145, 146, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 180, 184, 189, 196, 197, 199, 203, 207, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 245, 247, 248, 252], "tsiara": 1, "v": [1, 2, 3, 5, 17, 19, 44, 51, 67, 68, 73, 74, 85, 87, 95, 118, 120, 147, 163, 164, 165, 166, 167, 169, 170, 171, 174, 175, 176, 193, 219, 220, 228, 230, 238, 241, 242, 247, 248], "vogiatzi": 1, "g": [1, 3, 6, 7, 13, 21, 24, 25, 29, 31, 33, 35, 40, 51, 59, 64, 67, 70, 73, 75, 76, 78, 80, 81, 82, 83, 85, 86, 89, 90, 92, 93, 94, 96, 97, 102, 104, 105, 106, 111, 113, 126, 128, 130, 134, 136, 142, 143, 146, 148, 151, 152, 154, 155, 156, 157, 158, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 199, 214, 215, 239, 241, 242], "identif": [1, 59, 166], "proc": [1, 92, 164, 170], "intl": [1, 92, 170], "soc": [1, 90, 92, 164, 170], "mag": [1, 92, 170], "reson": [1, 51, 53, 54, 55, 56, 67, 70, 72, 73, 74, 75, 76, 79, 80, 82, 84, 85, 89, 92, 93, 146, 151, 152, 155, 166, 167, 169, 170, 171, 172, 175, 176, 189, 190, 197, 199, 202, 203, 245], "med": [1, 37, 51, 58, 72, 80, 92, 152, 154, 163, 164, 166, 167, 170, 171, 176, 197, 202, 245], "18": [1, 25, 32, 33, 35, 36, 37, 40, 44, 53, 62, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85, 86, 108, 109, 114, 116, 124, 134, 135, 146, 147, 148, 149, 159, 161, 164, 166, 170, 171, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 224, 227, 229, 230, 237], "4": [1, 22, 24, 25, 29, 31, 32, 33, 35, 36, 37, 39, 40, 43, 46, 49, 50, 51, 53, 54, 55, 59, 60, 62, 70, 71, 72, 73, 74, 75, 76, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 93, 94, 96, 97, 99, 104, 105, 106, 107, 111, 112, 114, 116, 126, 131, 133, 134, 137, 142, 144, 146, 151, 152, 155, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 196, 199, 207, 217, 218, 219, 222, 228, 231, 234, 237, 239, 241, 245, 247, 248, 249, 252], "correia": [1, 73, 80, 85, 155, 165, 170, 174], "william": [1, 170], "yeh": [1, 44, 81, 108, 124, 125, 147, 148, 161, 170, 171, 173, 176, 182, 183, 208, 243, 247, 248], "f": [1, 6, 7, 29, 35, 40, 47, 49, 51, 55, 60, 62, 69, 71, 74, 76, 80, 81, 82, 84, 85, 88, 89, 93, 99, 107, 108, 123, 124, 125, 147, 148, 152, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 176, 177, 182, 183, 208, 237, 245, 247, 248], "c": [1, 2, 5, 6, 7, 16, 19, 22, 51, 54, 55, 59, 62, 64, 67, 70, 71, 72, 73, 74, 75, 76, 80, 81, 82, 83, 84, 86, 87, 88, 89, 93, 94, 97, 100, 104, 105, 106, 116, 134, 142, 146, 147, 148, 151, 156, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 197, 199, 220, 223, 225, 226, 227, 228, 247, 248, 252], "2011": [1, 24, 25, 44, 50, 54, 62, 73, 74, 76, 82, 92, 93, 96, 97, 99, 104, 105, 106, 116, 147, 151, 155, 156, 161, 163, 164, 166, 170, 171, 176, 197, 224, 229, 247, 248], "robust": [1, 3, 28, 30, 34, 44, 53, 58, 66, 68, 71, 73, 83, 84, 85, 86, 95, 98, 99, 121, 148, 154, 155, 156, 157, 158, 163, 165, 166, 167, 168, 170, 171, 172, 174, 176, 196, 197, 199, 211, 228, 234, 238, 245], "scalar": [1, 40, 44, 68, 75, 79, 83, 95, 113, 135, 155, 163, 164, 169, 170, 171, 174, 175, 217, 237, 238], "estim": [1, 25, 33, 34, 35, 36, 40, 44, 50, 51, 54, 55, 57, 61, 66, 68, 69, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 87, 88, 90, 92, 94, 95, 102, 131, 142, 151, 152, 155, 157, 158, 161, 163, 164, 167, 170, 171, 172, 174, 176, 177, 179, 189, 190, 191, 197, 199, 200, 201, 215, 217, 218, 219, 220, 226, 228, 230, 231, 232, 237, 238, 241, 242], "q": [1, 32, 44, 45, 48, 55, 62, 68, 72, 75, 76, 83, 84, 92, 93, 95, 108, 124, 125, 142, 146, 147, 151, 158, 161, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 182, 183, 195, 203, 208, 228, 232, 234, 238, 242, 245], "sampl": [1, 24, 35, 36, 38, 44, 68, 72, 73, 83, 85, 88, 91, 94, 95, 96, 97, 102, 106, 121, 126, 141, 142, 147, 161, 163, 164, 166, 167, 169, 170, 173, 174, 175, 176, 198, 217, 219, 223, 234, 236, 237, 238], "acquisit": [1, 3, 29, 44, 55, 56, 58, 59, 62, 64, 73, 77, 83, 85, 86, 87, 88, 94, 119, 151, 154, 158, 161, 164, 165, 166, 169, 170, 176, 241, 242], "scheme": [1, 3, 29, 44, 52, 56, 77, 78, 86, 119, 161, 163, 166, 169, 170, 174], "19": [1, 22, 25, 33, 35, 37, 40, 44, 48, 53, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 93, 104, 108, 109, 116, 124, 146, 158, 161, 170, 174, 217, 224, 226, 232], "5": [1, 22, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 51, 53, 58, 60, 62, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 98, 100, 102, 104, 105, 106, 107, 108, 111, 116, 119, 125, 126, 128, 130, 131, 134, 135, 136, 137, 146, 147, 154, 155, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 179, 199, 207, 209, 218, 219, 222, 224, 226, 228, 230, 235, 237, 239, 247, 248], "chamberlain": 1, "sr": [1, 164], "hampshir": 1, "menzi": 1, "la": [1, 146], "grant": [1, 165], "je": 1, "odlaug": 1, "bl": 1, "craig": 1, "k": [1, 3, 24, 25, 29, 35, 40, 44, 51, 55, 62, 64, 67, 68, 70, 73, 85, 87, 88, 94, 95, 96, 97, 99, 111, 113, 126, 128, 137, 142, 146, 152, 155, 157, 163, 164, 165, 169, 170, 171, 172, 174, 175, 176, 199, 203, 215, 238, 241, 243, 245, 247, 248], "fineberg": 1, "sahakian": 1, "bj": 1, "reduc": [1, 3, 6, 19, 22, 24, 35, 40, 43, 58, 83, 86, 98, 108, 130, 131, 143, 157, 158, 163, 164, 165, 166, 171, 174, 176, 177, 207, 208, 215, 219, 225, 226, 230], "white": [1, 25, 34, 35, 36, 38, 39, 40, 51, 59, 62, 66, 67, 69, 73, 74, 78, 79, 82, 83, 84, 85, 86, 88, 89, 90, 94, 97, 98, 99, 100, 108, 111, 114, 116, 123, 126, 128, 130, 131, 135, 147, 153, 155, 156, 157, 163, 165, 169, 170, 171, 172, 173, 174, 176, 184, 205, 208, 211, 215, 219, 220, 224, 236, 247, 248], "matter": [1, 25, 34, 35, 36, 38, 39, 40, 43, 51, 59, 62, 66, 67, 69, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 94, 98, 99, 100, 108, 116, 123, 126, 128, 131, 147, 153, 155, 156, 157, 163, 165, 168, 169, 170, 171, 172, 173, 174, 176, 184, 205, 208, 211, 215, 224, 236, 241, 247, 248], "trichotillomania": 1, "tensor": [1, 29, 44, 62, 64, 68, 69, 71, 74, 77, 79, 80, 83, 84, 85, 87, 88, 89, 90, 95, 119, 121, 122, 142, 145, 146, 153, 158, 160, 161, 162, 164, 165, 169, 170, 172, 174, 176, 186, 197, 199, 217, 219, 221, 222, 224, 225, 226, 227, 228, 230, 231, 233, 235, 237, 238, 241, 242, 250], "studi": [1, 44, 73, 74, 79, 83, 86, 94, 161, 164, 165, 170, 230, 247, 248], "arch": 1, "gen": 1, "psychiatri": 1, "67": [1, 25, 35, 36, 40, 53, 71, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 89, 226, 236], "9": [1, 19, 22, 25, 29, 32, 33, 35, 36, 37, 40, 43, 44, 50, 52, 53, 55, 59, 71, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 103, 106, 116, 158, 159, 160, 161, 163, 165, 166, 168, 169, 170, 174, 176, 189, 217, 218, 224, 233, 236, 237, 239], "965": [1, 72, 82, 172, 219], "71": [1, 25, 32, 33, 35, 36, 37, 40, 53, 70, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 224], "6": [1, 4, 22, 24, 25, 32, 33, 34, 35, 36, 37, 40, 44, 51, 53, 55, 59, 62, 66, 67, 69, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 92, 93, 98, 99, 102, 104, 106, 108, 109, 111, 112, 113, 114, 116, 123, 124, 126, 128, 131, 134, 135, 136, 137, 145, 155, 158, 159, 161, 163, 164, 165, 168, 170, 171, 172, 174, 176, 197, 199, 207, 212, 217, 219, 220, 222, 223, 225, 226, 234, 236, 237, 239, 241, 242, 252], "nguyen": [1, 23], "olivetti": [1, 23, 224], "halchenko": [1, 7, 219, 224, 236], "y": [1, 3, 21, 24, 25, 29, 37, 38, 62, 67, 76, 77, 80, 82, 83, 88, 89, 90, 92, 93, 94, 116, 119, 134, 137, 142, 143, 144, 156, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 180, 199, 233, 241, 246], "novel": [1, 73, 74, 83, 85, 121, 145, 155, 170, 172], "softwar": [1, 3, 34, 39, 43, 66, 104, 105, 106, 134, 156, 164, 165, 166, 170, 171, 176, 199, 241, 242, 245, 254], "mr": [1, 36, 50, 51, 52, 54, 56, 62, 78, 82, 89, 92, 116, 142, 151, 152, 154, 155, 157, 164, 165, 166, 170, 176, 200, 224, 241, 254], "17th": 1, "7": [1, 2, 6, 21, 22, 24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 47, 53, 59, 66, 69, 71, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85, 86, 89, 90, 102, 108, 109, 114, 116, 123, 124, 129, 142, 145, 155, 158, 159, 161, 163, 164, 165, 169, 170, 171, 173, 174, 176, 218, 222, 226, 227, 228, 230, 237, 239, 252], "wedeen": [1, 44, 75, 161, 170], "vj": 1, "tseng": 1, "wy": 1, "ieee": [1, 37, 54, 55, 76, 81, 89, 93, 96, 97, 116, 151, 159, 163, 164, 166, 167, 170, 171, 174, 247, 248], "tran": [1, 37, 164, 166, 167, 171, 176, 178], "2012": [1, 19, 34, 35, 40, 66, 73, 74, 81, 82, 98, 99, 111, 112, 113, 114, 123, 146, 157, 170, 171, 172, 173, 174, 176, 214, 229], "quickbundl": [1, 44, 98, 108, 110, 111, 112, 115, 123, 158, 163, 174, 177, 217, 218, 220, 221, 224, 225, 238, 239], "simplif": [1, 98, 99, 111, 112, 113, 114, 123, 171, 174], "neurosci": [1, 23, 44, 98, 104, 111, 112, 113, 114, 123, 171, 174], "175": [1, 73, 82, 83, 84, 98, 111, 112, 113, 114, 123, 171, 174], "cote": [1, 175, 176, 203, 226], "rheault": [1, 174, 222, 223, 228, 229, 230, 234, 235, 236, 237, 247, 248], "sidhu": 1, "j": [1, 3, 24, 25, 29, 32, 35, 38, 40, 44, 51, 53, 55, 62, 64, 69, 71, 72, 73, 74, 78, 79, 80, 82, 84, 87, 88, 89, 90, 92, 99, 104, 105, 106, 108, 116, 123, 124, 125, 137, 142, 147, 148, 152, 155, 156, 161, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 182, 183, 189, 190, 192, 193, 196, 197, 199, 200, 203, 208, 224, 235, 241, 243, 245, 247, 248], "hau": 1, "petit": 1, "l": [1, 19, 38, 52, 53, 55, 69, 72, 73, 74, 79, 80, 86, 87, 89, 94, 104, 105, 106, 108, 124, 125, 146, 147, 156, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 182, 183, 189, 197, 199, 208, 226, 245, 247, 248], "fortin": 1, "d": [1, 3, 5, 6, 7, 21, 24, 35, 39, 40, 51, 53, 55, 62, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 96, 97, 98, 99, 108, 113, 116, 123, 124, 125, 130, 143, 147, 148, 151, 152, 155, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 182, 183, 189, 190, 196, 199, 200, 203, 208, 225, 231, 237, 241, 243, 245, 247, 248], "cunann": 1, "recognit": [1, 108, 123, 148, 163, 171, 176, 205, 208, 211, 221, 247, 248], "bundl": [1, 19, 26, 27, 33, 36, 44, 86, 101, 103, 104, 109, 110, 111, 112, 113, 114, 115, 126, 127, 128, 129, 130, 132, 133, 134, 145, 153, 156, 158, 163, 165, 167, 173, 174, 175, 176, 177, 181, 182, 183, 184, 203, 205, 208, 219, 221, 222, 223, 226, 228, 230, 231, 233, 235, 236, 237, 238, 247, 248], "global": [1, 5, 16, 38, 58, 83, 89, 97, 108, 123, 134, 148, 154, 163, 170, 171, 172, 176, 205, 208, 211, 226, 247, 248], "10": [1, 19, 22, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 46, 47, 51, 52, 53, 55, 58, 62, 64, 66, 69, 70, 71, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 97, 100, 102, 103, 104, 105, 106, 108, 109, 111, 112, 114, 116, 121, 124, 125, 128, 130, 134, 137, 146, 147, 151, 152, 155, 158, 159, 161, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 179, 182, 183, 189, 190, 196, 200, 202, 208, 218, 219, 220, 221, 222, 223, 228, 229, 230, 234, 235, 236, 237, 238, 239, 247, 248], "ocegueda": [1, 23, 165, 217, 218, 219, 226, 227, 235], "o": [1, 29, 43, 51, 64, 67, 69, 72, 79, 80, 82, 96, 97, 100, 104, 123, 137, 152, 155, 165, 168, 170, 171, 174, 176, 200, 218, 226, 228, 239, 252], "wassermann": [1, 23, 86, 165, 222, 226, 247, 248], "effici": [1, 19, 38, 89, 98, 99, 137, 148, 156, 158, 163, 164, 165, 174, 176, 211, 231], "linear": [1, 6, 28, 30, 44, 55, 67, 73, 74, 82, 83, 87, 88, 92, 98, 99, 100, 102, 105, 106, 144, 147, 149, 153, 156, 158, 161, 163, 164, 165, 166, 167, 171, 174, 176, 177, 181, 192, 199, 208, 211, 219, 223, 224, 226, 231, 235, 236, 237, 238], "fascicl": [1, 28, 30, 44, 68, 95, 98, 99, 148, 156, 158, 163, 165, 170, 174, 176, 211, 226, 238], "space": [1, 3, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 51, 55, 66, 68, 71, 72, 73, 75, 76, 78, 83, 85, 92, 93, 95, 96, 98, 99, 100, 104, 105, 108, 123, 131, 134, 135, 142, 147, 148, 151, 152, 155, 156, 158, 161, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 205, 208, 211, 219, 220, 221, 232, 234, 237, 238, 239, 241, 242, 243, 247, 248], "yeatman": [1, 29, 39, 69, 90, 123, 170, 173, 174, 247, 248], "jd": 1, "pestilli": [1, 29, 39, 69, 90, 108, 124, 125, 147, 170, 171, 173, 174, 176, 182, 183, 208, 247, 248], "kai": [1, 29, 39, 90, 170, 174, 247, 248], "kn": 1, "mezer": [1, 39, 69, 90, 170, 247, 248], "et": [1, 23, 32, 40, 44, 46, 52, 56, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 98, 99, 100, 104, 105, 106, 108, 109, 111, 112, 113, 114, 116, 119, 121, 123, 128, 148, 149, 155, 156, 158, 161, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 176, 184, 195, 196, 200, 205, 208, 211, 221, 245, 247, 248], "al": [1, 32, 40, 44, 46, 52, 56, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 98, 99, 100, 104, 105, 106, 108, 109, 111, 112, 113, 114, 116, 119, 121, 123, 128, 148, 149, 155, 156, 158, 161, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 176, 184, 195, 196, 200, 205, 208, 211, 221, 245, 247, 248], "2015": [1, 19, 24, 25, 38, 39, 44, 51, 72, 73, 74, 82, 84, 85, 89, 90, 98, 99, 121, 148, 152, 155, 156, 158, 159, 161, 163, 165, 166, 170, 172, 174, 176, 211, 217, 218, 219, 227, 229, 247, 248], "evalu": [1, 24, 25, 28, 30, 39, 44, 46, 69, 70, 73, 74, 84, 85, 86, 90, 104, 105, 106, 113, 116, 146, 156, 157, 158, 163, 164, 165, 166, 167, 169, 170, 172, 174, 177, 231, 238, 247, 248], "accuraci": [1, 39, 69, 71, 73, 83, 88, 90, 104, 163, 169, 170, 171, 233, 247, 248], "12": [1, 19, 22, 25, 32, 33, 35, 36, 37, 40, 44, 50, 51, 53, 55, 59, 61, 69, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 89, 97, 99, 102, 104, 105, 106, 108, 111, 112, 114, 116, 130, 145, 156, 158, 159, 161, 163, 164, 170, 171, 174, 176, 218, 220, 222, 223, 224, 225, 226, 227, 230, 235, 237, 239], "dalmau": 1, "rivera": 1, "On": [1, 6, 25, 73, 83, 111, 163, 164, 170, 222, 252], "comput": [1, 5, 17, 19, 24, 25, 31, 34, 38, 43, 46, 47, 50, 51, 52, 53, 55, 62, 66, 67, 71, 72, 73, 74, 76, 78, 79, 80, 82, 83, 84, 85, 89, 92, 93, 96, 97, 98, 100, 104, 108, 109, 111, 112, 113, 121, 124, 125, 136, 145, 147, 152, 155, 156, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 179, 182, 183, 196, 197, 199, 200, 208, 212, 219, 222, 230, 237, 245, 249, 252], "over": [1, 21, 22, 24, 25, 29, 43, 52, 83, 86, 87, 88, 97, 100, 106, 142, 143, 144, 151, 163, 164, 165, 166, 168, 170, 174, 175, 219, 229, 233, 237, 241], "rectangl": 1, "arbitrari": [1, 17, 163, 164, 168, 169, 170, 171, 174, 226, 242], "dimens": [1, 25, 29, 43, 59, 64, 78, 82, 89, 96, 105, 113, 137, 142, 155, 157, 163, 164, 166, 168, 169, 170, 171, 172, 174, 176, 177, 185, 199, 214, 215, 221, 228], "13": [1, 22, 24, 25, 35, 40, 53, 70, 72, 73, 74, 78, 79, 82, 83, 84, 85, 86, 88, 93, 100, 114, 116, 145, 158, 159, 170, 174, 175, 221, 224, 228, 230, 231, 232, 233, 237, 239], "rafael": [1, 23, 158, 217, 219, 220, 222, 228, 229, 230, 231, 234, 237], "neto": [1, 23, 51, 73, 85, 121, 155, 166, 170, 172, 176, 202, 217, 219, 220, 228, 229, 230, 231, 234, 237], "henriqu": [1, 23, 44, 51, 53, 72, 73, 80, 85, 121, 155, 158, 161, 165, 166, 170, 172, 176, 202, 217, 219, 220, 228, 229, 230, 231, 234, 237], "ariel": [1, 20, 23, 39, 90, 170, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "eleftherio": [1, 20, 21, 23, 134, 174, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "samuel": [1, 23, 217, 218, 219, 224, 225, 226, 227, 237], "st": [1, 5, 23, 31, 80, 109, 170, 171, 175, 176, 203, 217, 218, 219, 224, 225, 226, 227, 233, 236, 237], "jean": [1, 23, 80, 170, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 237], "eric": [1, 23, 219, 229, 231, 234, 235, 237, 247, 248], "thoma": 1, "peterson": [1, 80, 170, 219, 247, 248], "marta": 1, "morgado": 1, "rescienc": [1, 80, 170], "issu": [1, 6, 21, 22, 58, 73, 80, 85, 125, 134, 145, 154, 158, 164, 166, 170, 174, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 247, 248], "articl": [1, 74, 80, 87, 88, 100, 147, 148, 149, 164, 166, 170, 247, 248], "2017": [1, 19, 44, 73, 79, 80, 82, 86, 104, 108, 123, 126, 148, 159, 161, 163, 165, 170, 171, 174, 176, 205, 208, 211, 214, 219, 220, 221, 229, 247, 248], "re": [1, 2, 6, 9, 15, 16, 17, 43, 80, 106, 131, 134, 163, 169, 170, 171, 174, 221, 242, 245, 252], "optim": [1, 4, 29, 44, 53, 54, 55, 56, 58, 74, 80, 82, 83, 84, 85, 86, 90, 96, 97, 99, 102, 104, 105, 106, 116, 146, 151, 156, 158, 161, 163, 166, 167, 168, 169, 170, 171, 174, 176, 177, 179, 192, 217, 222, 226, 228, 229, 233, 234, 237, 247, 248], "free": [1, 3, 44, 68, 69, 78, 86, 88, 95, 96, 97, 121, 142, 152, 154, 155, 158, 163, 165, 170, 219, 221, 228, 231, 235, 238, 253], "water": [1, 34, 44, 66, 68, 73, 74, 85, 88, 95, 121, 126, 142, 155, 158, 165, 170, 172, 176, 197, 219, 228, 231, 235, 238], "elimin": [1, 44, 68, 95, 170, 219, 228, 231, 238], "two": [1, 19, 21, 25, 29, 32, 44, 50, 51, 53, 56, 59, 62, 64, 67, 69, 71, 72, 74, 76, 78, 80, 82, 84, 85, 86, 88, 90, 92, 93, 96, 97, 99, 100, 104, 105, 106, 111, 112, 113, 116, 121, 122, 125, 130, 131, 137, 142, 143, 147, 148, 149, 155, 156, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 184, 200, 225, 241, 242, 245], "compart": [1, 29, 38, 72, 73, 74, 80, 82, 84, 85, 89, 121, 155, 170, 172, 176], "14": [1, 6, 19, 22, 25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 88, 95, 114, 116, 158, 159, 165, 170, 171, 174, 220, 222, 223, 224, 231, 233, 239], "rn": [1, 85], "mm": [1, 24, 25, 35, 44, 56, 58, 60, 73, 80, 85, 86, 90, 92, 100, 104, 108, 109, 122, 130, 142, 155, 161, 163, 164, 167, 170, 171, 172, 174, 175, 176, 201, 203, 207, 208, 214, 215, 241, 247, 248], "marral": 1, "diffusion": [1, 73, 85, 155, 170, 176, 197], "kurtosi": [1, 44, 51, 53, 68, 72, 74, 84, 95, 121, 145, 146, 153, 158, 161, 170, 172, 176, 197, 217, 218, 231, 238, 247, 248], "project": [1, 6, 9, 12, 13, 21, 22, 44, 82, 86, 137, 138, 141, 142, 158, 161, 163, 164, 170, 174, 177, 217, 224, 226, 237, 246, 247, 248, 253], "front": [1, 3, 138, 141, 226, 228], "hum": 1, "2021": [1, 37, 44, 72, 82, 88, 134, 159, 161, 165, 167, 170, 229, 232, 233, 234], "15": [1, 19, 22, 25, 32, 33, 35, 36, 37, 40, 44, 51, 53, 58, 62, 71, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85, 86, 88, 89, 93, 97, 100, 102, 108, 114, 116, 134, 137, 146, 158, 159, 161, 163, 164, 166, 169, 170, 171, 172, 174, 175, 176, 184, 196, 203, 217, 223, 224, 235, 237, 239, 245], "390": [1, 79, 82, 83, 217], "www": [1, 73, 83, 88, 142, 143, 164, 168, 170, 174, 247, 248], "frontiersin": 1, "org": [1, 22, 38, 44, 51, 53, 73, 83, 85, 86, 87, 88, 89, 113, 134, 142, 143, 147, 148, 149, 152, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 174, 176, 189, 202, 225, 231, 247, 248, 253], "3389": [1, 82], "fnhum": 1, "675433": 1, "full": [1, 20, 21, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 156, 161, 163, 164, 165, 166, 167, 168, 170, 171, 174, 176, 178, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 245], "main": [1, 3, 15, 16, 17, 20, 21, 46, 47, 52, 53, 54, 72, 81, 83, 85, 86, 163, 167, 170, 174, 176, 234, 252], "citat": [1, 217, 219, 220, 226, 231, 232, 234, 247, 248], "airspe": [2, 22], "veloc": [2, 22, 174], "asv": [2, 22], "measur": [2, 26, 27, 44, 51, 53, 56, 69, 71, 72, 73, 74, 76, 78, 79, 80, 82, 83, 85, 86, 88, 89, 90, 93, 94, 108, 142, 147, 152, 155, 158, 161, 163, 164, 165, 166, 169, 170, 172, 173, 174, 176, 197, 200, 219, 231, 233, 238, 241, 243, 247, 248], "easili": [2, 4, 43, 62, 64, 78, 113, 138, 141, 164, 170, 171], "pip": [2, 19, 21, 218, 219, 226, 237], "virtualenv": [2, 226], "easi": [2, 13, 49, 78, 107, 131, 134, 135, 137, 142, 143, 145, 234, 246, 252], "piec": [2, 3, 163], "don": [2, 6, 8, 9, 16, 19, 21, 23, 46, 62, 84, 86, 96, 113, 131, 134, 137, 147, 163, 164, 171, 174, 176, 208, 209, 219, 221, 224, 226, 227, 228, 235, 252], "t": [2, 3, 6, 8, 9, 16, 17, 19, 21, 23, 24, 25, 34, 38, 40, 46, 49, 50, 51, 52, 53, 54, 55, 59, 62, 64, 66, 69, 71, 72, 74, 75, 76, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 93, 96, 97, 99, 104, 107, 112, 113, 123, 130, 131, 134, 137, 142, 144, 147, 148, 155, 163, 164, 165, 166, 169, 170, 171, 172, 174, 175, 176, 179, 208, 209, 217, 218, 219, 221, 222, 224, 226, 227, 228, 230, 231, 234, 235, 237, 241, 242, 245, 247, 248, 252, 253], "develop": [2, 3, 8, 13, 14, 15, 20, 21, 22, 25, 52, 73, 85, 121, 145, 146, 155, 158, 159, 163, 164, 168, 169, 170, 171, 172, 217, 219, 220, 221, 222, 226, 237, 252], "current": [2, 5, 6, 15, 17, 21, 22, 24, 40, 84, 86, 97, 105, 130, 134, 151, 152, 154, 155, 156, 159, 163, 164, 165, 167, 168, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 217, 219, 222, 223, 237, 247, 248, 252], "virtual": [2, 19], "build": [2, 18, 34, 36, 37, 55, 66, 84, 96, 105, 106, 138, 141, 145, 146, 157, 163, 169, 170, 174, 175, 176, 177, 178, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 237, 254], "automat": [2, 3, 15, 19, 44, 47, 49, 53, 90, 94, 107, 110, 114, 115, 151, 158, 163, 166, 169, 170, 171, 176, 189, 196, 217, 219, 220, 221, 222, 223, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238], "navig": 2, "root": [2, 19, 21, 29, 86, 170, 171, 242], "directori": [2, 3, 5, 6, 8, 17, 19, 21, 64, 138, 141, 147, 150, 151, 152, 154, 155, 156, 157, 165, 167, 173, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 219, 222, 224, 225, 232, 252], "execut": [2, 3, 19, 22, 27, 30, 32, 39, 42, 46, 47, 48, 58, 61, 65, 95, 103, 105, 106, 115, 117, 120, 128, 129, 133, 140, 142, 151, 152, 154, 155, 163, 164, 166, 169, 170, 171, 176, 226, 238], "spin": [2, 44, 82, 83, 142, 155, 161, 165, 169, 170, 172, 176, 199, 200, 201, 241, 243], "bench": 2, "defin": [2, 3, 25, 33, 35, 39, 40, 51, 53, 62, 72, 73, 74, 78, 80, 82, 85, 86, 87, 88, 92, 94, 97, 98, 99, 102, 105, 106, 111, 112, 113, 116, 121, 126, 144, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 203, 207, 209, 219, 221, 227, 230, 234, 236, 237, 245], "Be": [2, 43, 109, 149, 164, 174], "patient": [2, 88, 94, 147, 165, 173, 176], "could": [2, 22, 62, 71, 73, 85, 86, 88, 102, 104, 111, 113, 116, 128, 130, 163, 164, 166, 169, 170, 172, 176, 184, 202, 207, 218, 228, 230], "while": [2, 6, 7, 22, 24, 43, 50, 51, 53, 69, 78, 80, 82, 85, 88, 89, 91, 121, 149, 155, 163, 164, 169, 170, 171, 173, 174, 175, 176, 218, 219, 221, 233, 245], "each": [2, 6, 20, 22, 24, 25, 29, 31, 33, 34, 36, 39, 40, 44, 52, 55, 58, 59, 62, 64, 66, 69, 72, 75, 78, 82, 83, 84, 85, 86, 89, 90, 91, 94, 96, 98, 99, 105, 106, 109, 111, 112, 113, 116, 121, 122, 123, 126, 128, 130, 131, 134, 138, 141, 142, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 189, 190, 191, 192, 203, 207, 211, 219, 225, 228, 234, 237, 245], "time": [2, 3, 6, 8, 19, 21, 22, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 147, 155, 161, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174, 176, 179, 192, 200, 220, 222, 224, 225, 226, 230, 241, 243, 247, 248, 252], "For": [2, 3, 5, 6, 12, 15, 19, 21, 29, 34, 38, 39, 47, 49, 50, 51, 53, 55, 56, 58, 59, 62, 64, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 104, 105, 107, 111, 112, 113, 114, 119, 121, 122, 123, 126, 128, 131, 136, 141, 142, 144, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 179, 180, 189, 190, 198, 203, 207, 211, 214, 215, 239, 241, 242, 245, 246, 252], "without": [2, 6, 19, 21, 29, 36, 47, 50, 51, 52, 55, 64, 76, 80, 86, 87, 88, 89, 94, 97, 130, 163, 164, 165, 169, 170, 171, 174, 176, 222, 224, 228, 229, 239], "replic": [2, 44, 164], "unleash": 2, "cd": [2, 8, 16, 17, 19, 21, 146], "export": [2, 19, 175], "regexp": 2, "ufunc": [2, 5, 217, 234], "dry": 2, "show": [2, 6, 15, 17, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 102, 104, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 124, 125, 126, 128, 130, 131, 134, 136, 137, 143, 146, 166, 169, 170, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 222, 224, 228, 229, 234, 237, 241, 250], "stderr": 2, "quick": [2, 16, 49, 78, 82, 107, 170, 174, 250], "regular": [2, 3, 38, 83, 86, 89, 90, 92, 100, 105, 149, 155, 158, 163, 164, 165, 166, 167, 170, 172, 175, 176, 184, 192, 201, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 245, 247, 248], "express": [2, 72, 73, 80, 82, 90, 91, 143, 144, 164, 165, 170, 171, 174, 176, 222, 245], "avoid": [2, 3, 6, 24, 36, 51, 55, 72, 73, 78, 80, 85, 96, 112, 163, 164, 169, 170, 174, 176, 219, 221, 223, 224, 226, 228, 229, 234, 235], "repetit": [2, 166], "particular": [2, 6, 22, 43, 44, 55, 69, 73, 78, 86, 90, 163, 164, 166, 168, 170, 171, 174, 176, 247], "bench_seg": 2, "simpli": [2, 43, 78, 84, 86, 96, 111, 163, 174], "append": [2, 25, 86, 91, 124, 126, 130, 138, 141, 171, 176], "filenam": [2, 3, 43, 64, 73, 75, 76, 81, 82, 83, 93, 146, 165, 168, 175, 176, 184, 185, 203, 211, 222], "extens": [2, 3, 24, 32, 33, 35, 36, 38, 40, 50, 86, 144, 168, 170, 172, 174, 176, 185, 204, 219, 221, 225, 226, 229], "benchquickbundl": 2, "ninja": 2, "skill": [2, 237], "commit": [2, 5, 7, 13, 16, 18, 20, 21, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "branch": [2, 5, 7, 10, 13, 15, 16, 17, 21, 171, 174, 218, 219, 229], "v1": [2, 21, 25, 113, 164, 247, 248], "0": [2, 3, 6, 19, 21, 22, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 149, 154, 155, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 184, 189, 192, 195, 196, 198, 202, 203, 209, 211, 212, 214, 215, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 245, 247, 248, 249], "20d03bcfd": 2, "master": [2, 5, 7, 10, 15, 16, 17, 21, 73, 217, 219, 222, 224, 226, 229], "These": [2, 3, 8, 12, 21, 25, 38, 40, 43, 51, 52, 62, 69, 73, 74, 78, 80, 82, 83, 86, 89, 96, 116, 121, 123, 126, 131, 155, 163, 164, 165, 166, 170, 172, 217, 219, 220, 221, 222, 223, 228, 229, 230, 232, 233, 234, 235, 236, 237, 241, 242, 243, 245, 246], "displai": [2, 3, 24, 25, 29, 34, 38, 39, 66, 70, 77, 79, 83, 85, 92, 109, 119, 131, 134, 135, 136, 137, 165, 175, 176, 203, 219, 223, 229], "consol": [2, 142, 252], "them": [2, 3, 6, 16, 21, 29, 43, 55, 56, 64, 75, 76, 79, 82, 88, 93, 94, 96, 98, 105, 106, 108, 109, 113, 124, 126, 128, 130, 131, 134, 136, 142, 152, 163, 164, 170, 171, 172, 174, 175, 225], "futur": [2, 21, 163, 167, 168, 228, 230], "comparison": [2, 29, 44, 50, 59, 62, 68, 74, 80, 85, 86, 88, 94, 95, 99, 121, 153, 163, 170, 176, 199, 211, 219, 230, 238, 247, 248], "greater": [2, 3, 55, 82, 108, 142, 155, 163, 164, 167, 171, 174, 175, 176, 203, 208, 211], "control": [2, 3, 6, 35, 76, 79, 86, 90, 100, 142, 147, 149, 157, 163, 164, 165, 169, 170, 171, 173, 174, 175, 176, 228], "publish": [2, 74, 80, 88, 170, 228], "preview": [2, 224], "machin": [2, 13, 21, 82, 145, 163, 166, 170, 174, 217], "tag": [2, 21, 170, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "tag_commit": 2, "txt": [2, 3, 19, 131, 141, 156, 168, 176, 178, 180, 218, 226, 230], "gtag": 2, "git": [2, 6, 7, 8, 12, 14, 15, 16, 17, 18, 19, 21, 221], "list": [2, 6, 16, 20, 21, 38, 39, 86, 96, 98, 109, 111, 112, 113, 126, 130, 135, 136, 138, 141, 150, 155, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 183, 194, 197, 199, 200, 201, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 252, 253], "sort": [2, 156, 163, 165, 167, 170, 174, 175, 176, 203, 226], "taggerd": 2, "grep": 2, "do": [2, 3, 4, 5, 8, 9, 10, 13, 15, 16, 18, 19, 20, 29, 34, 36, 43, 44, 52, 55, 58, 59, 62, 66, 68, 70, 71, 75, 83, 84, 85, 86, 91, 94, 96, 98, 104, 105, 106, 109, 111, 112, 113, 126, 128, 131, 142, 143, 144, 145, 146, 147, 151, 156, 159, 160, 163, 164, 165, 169, 170, 171, 174, 176, 185, 203, 219, 221, 222, 226, 228, 242, 247, 252, 254], "log": [2, 6, 9, 13, 15, 21, 69, 72, 73, 74, 89, 98, 131, 138, 141, 163, 164, 165, 168, 169, 170, 171, 176, 219, 229, 241, 242], "onelin": [2, 6, 15], "n1": [2, 164, 174], "decor": [2, 164, 170, 217, 219, 221, 222, 224, 229, 235], "awk": 2, "print": [2, 19, 43, 46, 47, 50, 52, 53, 54, 56, 59, 60, 62, 64, 69, 70, 71, 75, 76, 78, 79, 81, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 100, 111, 112, 114, 116, 122, 125, 130, 134, 135, 163, 164, 168, 174, 176, 220, 221, 222, 229, 233, 235, 252], "done": [2, 6, 12, 16, 19, 21, 25, 29, 34, 51, 55, 59, 60, 66, 69, 72, 74, 78, 83, 84, 85, 86, 89, 97, 99, 100, 106, 111, 113, 123, 131, 163, 164, 166, 170, 171, 174, 176, 189], "last": [2, 6, 19, 21, 22, 64, 78, 82, 86, 94, 111, 114, 131, 137, 142, 147, 155, 158, 163, 164, 165, 166, 168, 169, 170, 171, 174, 176, 199, 220, 223, 235, 237], "20": [2, 22, 25, 27, 32, 33, 35, 36, 40, 44, 53, 71, 72, 73, 74, 76, 78, 79, 82, 83, 84, 85, 86, 89, 90, 93, 94, 99, 100, 102, 108, 116, 121, 122, 135, 137, 161, 163, 164, 165, 167, 170, 171, 172, 174, 176, 184, 217, 224, 247, 248], "tail": [2, 143], "20_ver": 2, "hashfil": 2, "view": [2, 49, 107, 128, 135, 136, 164, 170, 172, 175, 217, 218, 228], "tbd": 2, "document": [2, 4, 18, 20, 21, 44, 138, 141, 158, 160, 163, 164, 165, 166, 168, 171, 174, 176, 217, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 253], "readthedoc": [2, 22, 170, 174], "__": [2, 44, 161], "basic": [2, 15, 28, 30, 32, 36, 44, 50, 53, 60, 63, 65, 71, 80, 113, 145, 146, 151, 155, 160, 164, 168, 171, 172, 174, 176, 222, 228, 230, 238], "how": [2, 3, 13, 15, 16, 20, 21, 22, 29, 32, 34, 40, 43, 47, 49, 51, 52, 53, 55, 56, 60, 62, 64, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 138, 143, 145, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174, 176, 222, 226, 227, 228, 229, 230, 231, 233, 234, 235, 237, 241, 250, 252, 253], "thing": [2, 10, 13, 16, 19, 21, 34, 66, 86, 94, 96, 97, 131, 157, 164, 166, 170, 174, 217, 226, 227], "consid": [2, 10, 15, 16, 29, 43, 55, 71, 72, 76, 79, 82, 86, 90, 131, 156, 163, 164, 166, 167, 168, 169, 170, 171, 174, 175, 176, 179, 192, 246], "suit": [2, 224, 226], "keep": [2, 4, 6, 16, 22, 32, 34, 40, 43, 66, 81, 84, 89, 114, 131, 163, 170, 171, 174, 176, 208, 211, 217, 222, 234], "runtim": [2, 46, 47, 73, 83, 217, 219, 226], "reason": [2, 6, 43, 75, 80, 83, 94, 96, 102, 105, 112, 131, 163, 165, 169, 170, 176, 201, 224, 245, 252], "time_": 2, "prepar": [2, 34, 37, 66, 67, 78, 82, 96, 163, 164, 169, 170], "mind": [2, 3, 75, 114, 130, 170], "larg": [2, 4, 22, 29, 50, 73, 96, 109, 131, 142, 145, 147, 158, 163, 167, 168, 170, 174, 176, 208, 221, 225, 237, 239, 249, 252], "watch": 2, "reach": [2, 15, 22, 35, 40, 71, 80, 89, 98, 109, 116, 131, 143, 157, 166, 170, 174, 176, 215], "star": 2, "happi": [2, 6, 20, 23, 62, 217, 226, 240], "principl": [3, 60, 170, 172, 174], "behind": [3, 13, 53, 145, 151, 246, 252], "must": [3, 35, 36, 38, 43, 59, 67, 71, 72, 76, 83, 84, 93, 96, 111, 112, 147, 157, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 176, 179, 185, 201], "verifi": [3, 43, 55, 64, 71, 73, 105, 106, 164, 168, 176, 185, 217, 226], "systemat": [3, 164], "henc": [3, 19, 22, 62, 82, 156, 170, 171, 174, 242], "stabil": [3, 170, 237], "ensur": [3, 6, 22, 24, 25, 72, 73, 83, 131, 163, 164, 168, 170, 174, 176, 230], "redund": [3, 29, 52, 53, 151], "readabl": [3, 6], "written": [3, 6, 43, 88, 90, 163, 164, 170, 171, 172, 175, 228, 254], "read": [3, 6, 13, 15, 16, 17, 24, 25, 29, 39, 41, 42, 44, 46, 47, 49, 64, 70, 75, 76, 78, 79, 81, 83, 86, 87, 88, 92, 93, 104, 107, 108, 109, 111, 122, 123, 124, 137, 142, 146, 158, 163, 164, 165, 168, 169, 170, 171, 176, 177, 217, 221, 226, 227, 230, 231, 234, 238, 239, 250, 252, 253], "frequent": [3, 43, 253], "consist": [3, 23, 43, 59, 86, 89, 131, 158, 163, 165, 166, 168, 169, 170, 171, 174, 175, 219, 222, 224, 228, 234, 237], "eas": [3, 86], "prone": [3, 94, 163], "essenti": [3, 22, 58, 83, 97, 242], "kei": [3, 9, 43, 108, 134, 138, 141, 145, 149, 163, 164, 165, 168, 170, 173, 174, 175, 176, 185, 214, 215, 222, 223, 224, 226, 234, 237, 247], "adopt": [3, 22, 62], "toolkit": 3, "choic": [3, 5, 25, 32, 83, 89, 96, 97, 105, 151, 171, 174, 217, 242, 245], "scientif": [3, 22, 73, 74, 79, 82, 84, 85, 134, 146, 165, 170, 249, 252], "commun": [3, 13, 86, 145, 158, 163, 170, 227, 233, 240], "help": [3, 4, 6, 9, 11, 13, 20, 23, 86, 97, 108, 138, 141, 145, 154, 160, 163, 164, 167, 170, 171, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 222, 226, 239, 240, 243, 253], "clarifi": [3, 86, 158, 225, 226, 228, 231, 234], "certain": [3, 55, 62, 73, 94, 170, 174], "obscur": 3, "place": [3, 29, 94, 97, 148, 159, 163, 164, 166, 170, 174, 175, 176, 189, 190, 217, 228, 230], "allow": [3, 9, 21, 24, 35, 40, 46, 47, 83, 84, 86, 130, 131, 134, 137, 138, 142, 152, 155, 156, 158, 163, 164, 166, 167, 168, 170, 171, 172, 174, 175, 176, 208, 215, 218, 219, 222, 224, 226, 229, 231, 232, 233, 234, 235], "member": [3, 235], "decod": [3, 165], "effort": 3, "languag": [3, 142, 221, 226, 229, 249], "english": 3, "spell": [3, 230], "abid": 3, "pep8": [3, 4, 20, 217, 218, 219, 220, 227, 231, 237], "across": [3, 22, 53, 55, 59, 72, 78, 82, 85, 89, 108, 124, 125, 143, 153, 155, 164, 169, 170, 171, 173, 176, 222, 240, 241, 242], "conform": [3, 4, 170, 231], "syntax": [3, 170, 223, 231], "request": [3, 5, 6, 15, 96, 145, 158, 163, 164, 165, 174, 175, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242], "push": [3, 6, 13, 16, 17, 21, 237], "There": [3, 6, 11, 12, 13, 21, 71, 84, 89, 108, 113, 142, 147, 157, 163, 164, 165, 168, 169, 170, 171, 172, 241, 246], "system": [3, 46, 47, 55, 56, 89, 126, 128, 130, 131, 134, 145, 146, 158, 163, 164, 165, 166, 167, 168, 170, 174, 175, 176, 192, 225, 230, 237, 246, 252], "complianc": 3, "most": [3, 6, 11, 19, 22, 25, 29, 33, 46, 49, 59, 60, 62, 70, 86, 89, 96, 97, 99, 100, 105, 106, 107, 116, 157, 165, 166, 168, 170, 171, 174, 239, 252], "text": [3, 5, 6, 15, 21, 29, 44, 64, 82, 86, 87, 88, 99, 134, 137, 138, 141, 142, 156, 170, 175, 176, 179, 180, 217, 222, 237, 250], "editor": [3, 6, 142], "configur": [3, 6, 10, 14, 19, 96, 102, 105, 158, 169, 170, 229, 233], "beyond": [3, 83, 86], "aspect": [3, 170], "includ": [3, 6, 15, 19, 24, 25, 29, 40, 69, 73, 83, 86, 89, 94, 104, 113, 123, 131, 142, 145, 156, 158, 159, 163, 164, 165, 166, 168, 169, 170, 171, 174, 175, 176, 178, 217, 219, 226, 230, 236, 245, 249, 252], "comment": [3, 22, 217, 221, 224, 228, 230, 237], "abov": [3, 5, 6, 15, 19, 21, 22, 34, 40, 44, 46, 47, 50, 51, 53, 55, 56, 66, 71, 72, 73, 78, 80, 81, 82, 84, 85, 88, 97, 116, 121, 130, 131, 137, 143, 147, 158, 161, 163, 164, 165, 168, 169, 170, 171, 172, 174, 176, 241, 245, 252], "shorthand": [3, 223], "increas": [3, 78, 82, 83, 86, 108, 158, 163, 164, 169, 170, 174, 222, 226, 228, 231, 237], "numpi": [3, 19, 20, 24, 25, 29, 31, 35, 38, 39, 40, 43, 49, 50, 51, 52, 53, 54, 55, 56, 59, 62, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 91, 93, 94, 96, 97, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 128, 130, 131, 134, 135, 142, 158, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 230, 231, 233, 234, 235, 236, 237, 249, 252], "npt": [3, 231], "sp": [3, 174, 230], "alia": [3, 5, 6, 164, 170, 171, 172, 174, 234], "h5py": [3, 19, 142, 158, 168, 220, 222, 249], "write": [3, 5, 6, 9, 15, 16, 17, 18, 22, 41, 42, 44, 64, 70, 75, 76, 81, 83, 92, 93, 134, 141, 151, 152, 154, 163, 168, 170, 175, 176, 226, 230, 238, 252], "specif": [3, 9, 19, 22, 56, 62, 64, 72, 75, 79, 81, 83, 84, 85, 86, 89, 98, 111, 121, 122, 130, 134, 138, 142, 146, 150, 151, 153, 164, 165, 168, 169, 170, 171, 174, 175, 220, 222, 223, 224, 234, 239, 249], "rule": [3, 13, 108, 158, 163, 169, 174, 217], "cimport": 3, "add": [3, 5, 6, 13, 15, 16, 17, 19, 21, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 56, 66, 67, 70, 71, 72, 77, 78, 79, 83, 84, 89, 90, 91, 92, 94, 99, 108, 109, 111, 112, 113, 114, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 158, 164, 168, 170, 171, 172, 174, 175, 176, 177, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "prefix": [3, 4, 176], "usual": [3, 6, 19, 56, 60, 64, 97, 137, 138, 141, 170, 171, 174], "cnp": [3, 164, 174, 233], "symbol": [3, 170, 237], "being": [3, 22, 62, 86, 89, 142, 147, 157, 163, 164, 166, 168, 170, 171, 173, 174, 175, 176, 180, 219, 220, 223, 228, 233, 239, 245, 252], "compar": [3, 15, 18, 29, 47, 50, 53, 69, 73, 76, 82, 83, 88, 89, 94, 121, 125, 126, 142, 147, 163, 168, 170, 171, 174, 175, 218, 234], "separ": [3, 6, 38, 55, 71, 72, 82, 84, 86, 116, 155, 163, 164, 165, 168, 169, 170, 171, 172, 175, 176, 200, 212, 224, 234, 252], "cdef": [3, 174], "cpdef": 3, "ctypedef": 3, "statement": [3, 219, 226, 229, 230, 234], "type": [3, 6, 16, 19, 32, 51, 55, 64, 75, 84, 85, 113, 116, 131, 143, 146, 152, 156, 157, 163, 164, 165, 167, 168, 170, 171, 172, 174, 175, 176, 180, 187, 194, 201, 203, 204, 208, 217, 218, 221, 223, 224, 226, 234, 235, 237, 252], "turn": [3, 6, 38, 76, 142, 143, 151, 168, 170, 174], "per": [3, 34, 39, 44, 66, 79, 84, 91, 98, 99, 100, 108, 131, 135, 147, 148, 149, 157, 161, 163, 165, 166, 169, 170, 171, 173, 174, 175, 176, 179, 192, 199, 214, 215, 222, 225, 226, 241, 243], "long": [3, 35, 43, 81, 146, 163, 169, 172, 174, 176, 219, 229], "simpl": [3, 16, 20, 34, 44, 59, 66, 71, 74, 75, 78, 80, 82, 89, 92, 98, 99, 111, 112, 113, 130, 132, 133, 136, 157, 158, 163, 164, 169, 170, 171, 174, 175, 176, 226, 231, 238, 239, 252], "assign": [3, 29, 44, 127, 129, 163, 164, 170, 171, 172, 173, 174, 177, 217, 226, 238], "group": [3, 21, 29, 59, 80, 94, 98, 99, 131, 153, 158, 163, 171, 173, 176, 185, 211, 230, 232, 234], "exampl": [3, 5, 6, 15, 16, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 146, 147, 148, 150, 155, 156, 158, 159, 167, 171, 176, 179, 189, 190, 196, 198, 202, 203, 207, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 247, 248, 250, 253], "good": [3, 5, 6, 11, 13, 15, 21, 25, 34, 62, 66, 69, 71, 83, 84, 90, 94, 96, 104, 105, 116, 130, 151, 163, 164, 170, 171, 174, 176, 219, 226, 229, 233, 246, 254], "int": [3, 91, 134, 146, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 184, 189, 190, 191, 192, 195, 196, 198, 200, 201, 202, 203, 207, 208, 209, 211, 213, 214, 215, 219, 233, 235, 237, 241, 243], "char": [3, 174], "doubl": [3, 71, 72, 142, 163, 164, 166, 167, 170, 171, 172, 174, 217, 223, 231], "xf": 3, "clustermapcentroid": [3, 177], "p": [3, 6, 15, 24, 25, 38, 52, 53, 54, 55, 67, 76, 77, 89, 93, 116, 119, 147, 151, 163, 164, 166, 169, 170, 171, 172, 174, 176, 189, 199, 243, 245, 246], "pyarray_data": [3, 233], "seed": [3, 25, 28, 30, 32, 33, 35, 36, 37, 38, 39, 40, 44, 69, 126, 128, 131, 136, 146, 157, 158, 163, 164, 165, 167, 170, 172, 174, 176, 214, 215, 217, 218, 219, 222, 225, 226, 228, 229, 230, 233, 237, 238], "npy_intp": [3, 164, 174, 219, 233, 237], "pstr": 3, "qa": [3, 170, 173, 174], "stride": [3, 164, 169, 170, 172, 174], "cnt": [3, 137], "tmp": [3, 6, 175, 176, 225, 226, 237], "ftmp": [3, 226], "get_direction_c": 3, "self": [3, 43, 44, 57, 59, 61, 87, 88, 109, 113, 138, 141, 158, 163, 164, 166, 168, 170, 171, 174, 176, 192, 199, 222, 228, 232, 238], "bad": [3, 142, 219, 221, 222, 225, 229], "u": [3, 6, 13, 15, 16, 20, 23, 24, 29, 34, 50, 54, 64, 66, 70, 79, 82, 100, 125, 142, 144, 145, 159, 163, 164, 166, 170, 222, 240, 246, 254], "x": [3, 21, 22, 24, 25, 29, 38, 62, 82, 87, 88, 90, 92, 99, 113, 121, 131, 134, 137, 142, 143, 144, 145, 156, 158, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 180, 191, 217, 220, 224, 228, 230, 233, 239, 241, 246, 252], "42": [3, 6, 24, 25, 30, 32, 35, 36, 37, 40, 51, 53, 56, 62, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 95, 135, 155, 170, 172, 174, 176, 200, 226], "z": [3, 24, 25, 29, 38, 62, 70, 72, 82, 83, 87, 88, 92, 93, 121, 131, 134, 137, 142, 143, 144, 156, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 180, 241, 246], "top": [3, 6, 15, 24, 29, 74, 96, 105, 106, 128, 136, 143, 164, 175, 218, 224, 228], "bodi": [3, 44, 55, 156, 174, 176, 178], "void": 3, "estimate_kernel_s": 3, "verbos": [3, 67, 73, 83, 84, 88, 89, 98, 108, 163, 166, 168, 169, 170, 171, 174, 176, 192, 218, 226], "true": [3, 5, 21, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 49, 50, 52, 53, 54, 55, 59, 60, 62, 64, 66, 67, 70, 71, 73, 75, 78, 81, 82, 83, 84, 86, 88, 89, 91, 96, 97, 98, 99, 100, 104, 107, 108, 113, 114, 124, 125, 126, 128, 131, 134, 136, 142, 156, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 178, 179, 184, 185, 190, 191, 195, 196, 198, 201, 203, 207, 214, 215, 221, 230], "kernelmax": 3, "k2": [3, 167], "r": [3, 6, 19, 23, 24, 25, 35, 38, 40, 51, 53, 55, 62, 69, 72, 73, 74, 80, 83, 85, 86, 89, 90, 93, 94, 96, 97, 99, 102, 121, 126, 130, 136, 143, 144, 155, 157, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 179, 199, 202, 203, 215, 218, 219, 226, 237, 241, 243, 245, 246, 247, 248], "both": [3, 22, 35, 49, 50, 51, 52, 53, 56, 59, 71, 72, 73, 80, 82, 83, 84, 85, 86, 88, 89, 90, 97, 98, 99, 100, 104, 107, 109, 111, 123, 130, 134, 136, 159, 163, 164, 165, 169, 170, 174, 175, 176, 201, 203, 226, 228, 245], "come": [3, 6, 13, 16, 49, 59, 89, 107, 159, 169, 170, 176, 224], "libc": 3, "stdlib": 3, "calloc": 3, "realloc": 3, "except": [3, 5, 97, 147, 163, 164, 165, 166, 169, 170, 171, 174, 176, 221, 225, 227], "side": [3, 163, 166, 170, 176, 217], "definit": [3, 78, 82, 88, 90, 97, 144, 155, 158, 163, 164, 166, 167, 170, 219, 222, 224, 226, 231, 234, 245], "between": [3, 19, 24, 29, 43, 44, 51, 52, 53, 54, 57, 61, 67, 71, 72, 73, 74, 76, 78, 80, 82, 83, 84, 86, 88, 89, 90, 97, 98, 99, 100, 105, 106, 109, 112, 113, 116, 123, 125, 131, 136, 142, 145, 147, 149, 153, 156, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 180, 184, 185, 186, 187, 189, 203, 210, 214, 215, 222, 226, 231, 235, 237, 238, 239, 241, 242, 245, 246], "colon": [3, 6], "unless": [3, 62, 111, 163, 164, 170, 172, 174, 235], "bar": [3, 135, 158, 169, 170, 175, 219, 222, 231, 234], "c_extract": [3, 171], "featur": [3, 4, 5, 10, 15, 16, 22, 38, 44, 50, 72, 97, 110, 112, 114, 115, 121, 123, 145, 158, 159, 164, 166, 168, 169, 170, 172, 176, 177, 199, 217, 219, 232, 235, 236, 237, 238, 247, 248], "data2d": 3, "datum": [3, 113, 171], "out": [3, 16, 19, 21, 29, 44, 47, 55, 62, 69, 82, 91, 104, 108, 123, 131, 137, 151, 155, 163, 164, 166, 169, 170, 171, 174, 176, 189, 219, 222, 224, 225, 226, 228, 230, 239, 241, 242], "noexcept": 3, "nogil": [3, 163, 170], "hat": [3, 90, 144, 177], "zero": [3, 24, 25, 29, 43, 44, 53, 73, 74, 80, 84, 85, 86, 87, 89, 97, 102, 109, 121, 128, 130, 136, 161, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 219, 220, 221, 222, 228, 234, 236, 241, 242], "awai": [3, 143, 174, 221], "put": [3, 90, 138, 141, 163, 170, 174, 176, 226], "ani": [3, 5, 6, 8, 15, 16, 21, 22, 24, 36, 43, 44, 55, 58, 60, 62, 78, 82, 86, 89, 91, 93, 97, 98, 99, 113, 131, 137, 138, 142, 143, 144, 146, 147, 148, 149, 151, 152, 154, 155, 157, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 186, 187, 194, 203, 204, 209, 213, 219, 221, 226, 235, 239, 245, 252], "whitespac": [3, 4, 222], "open": [3, 6, 21, 25, 62, 76, 79, 86, 116, 128, 131, 134, 138, 141, 164, 165, 166, 168, 170, 174, 175, 229, 230, 232, 233, 234, 245, 252, 253], "close": [3, 4, 6, 15, 21, 25, 62, 75, 76, 82, 84, 86, 94, 96, 100, 125, 131, 135, 145, 149, 151, 157, 158, 163, 164, 165, 166, 167, 168, 174, 176, 177, 184, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 249], "float": [3, 40, 49, 76, 102, 107, 109, 142, 146, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 183, 184, 188, 189, 191, 192, 195, 196, 197, 198, 199, 201, 203, 204, 206, 208, 209, 212, 214, 215, 220, 226, 230, 233, 235, 237], "rang": [3, 25, 44, 46, 47, 50, 51, 70, 73, 74, 78, 82, 83, 85, 87, 88, 108, 109, 124, 147, 158, 161, 163, 164, 166, 168, 169, 170, 171, 174, 175, 176, 214, 215, 222, 230, 241], "nrow": [3, 85, 86, 163, 175], "construct": [3, 22, 39, 67, 89, 96, 163, 164, 165, 166, 170, 172, 174, 228], "sphinx": [3, 19, 22, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 145, 158, 222, 223, 230, 231, 236, 237], "contribut": [3, 18, 20, 23, 25, 29, 74, 80, 82, 85, 86, 97, 121, 122, 123, 145, 160, 163, 169, 170, 172, 174, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243], "suggest": [3, 9, 44, 73, 83, 88, 161, 163, 166, 169, 224, 226, 237, 240, 252], "chang": [3, 4, 5, 8, 10, 16, 17, 19, 24, 55, 71, 72, 76, 80, 82, 83, 84, 91, 94, 98, 108, 125, 130, 134, 137, 142, 145, 149, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 189, 197, 199, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 233, 234, 235, 237, 245], "properli": [3, 43, 76, 83, 91, 134, 138, 141, 168, 170, 174, 176, 221, 224, 226, 230, 235], "html": [3, 19, 21, 22, 88, 142, 164, 168, 170, 174, 219, 221, 231, 247, 248], "format": [3, 5, 16, 43, 52, 60, 64, 72, 82, 84, 121, 131, 137, 142, 147, 160, 163, 164, 165, 166, 168, 169, 170, 172, 174, 175, 176, 186, 187, 199, 201, 210, 217, 219, 220, 221, 223, 226, 228, 230, 235, 237, 239, 247, 248, 249, 252], "websit": [3, 21, 148, 149, 165, 217, 218, 221, 222, 223, 224, 226, 227, 229, 232, 237, 240], "store": [3, 29, 75, 85, 86, 90, 98, 135, 136, 142, 144, 163, 164, 168, 170, 172, 174, 175, 221, 224], "folder": [3, 44, 64, 96, 97, 123, 146, 147, 148, 150, 165, 176, 180, 182, 183, 194, 218, 223, 228, 237, 247], "contain": [3, 5, 19, 22, 24, 25, 29, 43, 44, 49, 53, 55, 69, 70, 71, 72, 73, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 107, 112, 114, 134, 137, 138, 141, 145, 146, 152, 154, 155, 156, 158, 160, 161, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 207, 209, 210, 212, 214, 215, 217, 219, 220, 221, 222, 223, 228, 229, 230, 232, 233, 234, 235, 236, 237, 246, 252], "interleav": 3, "multi": [3, 44, 51, 52, 53, 55, 56, 68, 73, 74, 77, 79, 82, 83, 85, 89, 93, 95, 96, 102, 105, 106, 119, 146, 151, 158, 161, 163, 165, 169, 170, 172, 174, 176, 179, 193, 217, 218, 219, 222, 224, 225, 226, 227, 229, 230, 231, 233, 235, 237, 238, 247, 248], "explan": [3, 6, 7, 62, 163, 170, 222], "block": [3, 21, 67, 158, 166, 170, 176, 177, 189, 190, 191, 220, 223], "demonstr": [3, 29, 32, 38, 39, 49, 55, 59, 69, 78, 85, 91, 94, 97, 102, 104, 107, 126, 128, 131, 155, 157], "etc": [3, 4, 55, 94, 134, 142, 151, 162, 163, 164, 169, 170, 172, 174, 176, 209, 224, 227], "intermix": 3, "describ": [3, 12, 32, 34, 39, 40, 50, 66, 69, 73, 78, 82, 83, 86, 88, 90, 94, 104, 123, 128, 155, 157, 163, 164, 165, 170, 172, 174, 247], "former": [3, 19, 21], "rational": 3, "aim": [3, 22, 24, 156, 170, 254], "extend": [3, 13, 35, 72, 84, 134, 138, 141, 146, 157, 164, 170, 171, 175, 176, 220, 226, 228, 234, 237], "relev": [3, 19, 25, 44, 72, 73, 74, 80, 82, 85, 88, 121, 136, 137, 146, 147, 148, 149, 158, 169, 170, 173, 174, 176], "paper": [3, 44, 53, 59, 62, 73, 74, 84, 85, 86, 94, 146, 147, 148, 149, 158, 159, 161, 166, 170, 176, 184, 221, 226, 228, 230], "exist": [3, 20, 21, 83, 111, 112, 113, 121, 165, 168, 169, 170, 171, 174, 175, 176, 185, 205, 217, 218, 221, 222, 226, 227, 231], "edit": [3, 5, 10, 13, 16, 21, 44], "otherwis": [3, 29, 84, 111, 137, 146, 163, 164, 165, 166, 167, 168, 170, 171, 174, 175, 176, 191, 192, 211, 219], "valid_exampl": 3, "addition": [3, 22, 40, 44, 53, 78, 145, 161], "reli": [3, 22, 35, 55, 98, 157, 170, 174, 219, 226], "restructuredtext": [3, 221, 231], "rst": [3, 21, 219, 220, 221, 222, 225, 226, 230, 237], "theoret": [3, 73, 88, 92, 99, 163, 170], "background": [3, 40, 49, 51, 59, 62, 67, 70, 72, 73, 74, 78, 80, 85, 86, 87, 107, 128, 131, 137, 163, 166, 169, 170, 174, 175, 176, 203], "instruct": [3, 6, 8, 9, 11, 15, 17, 19, 21, 88, 105, 106, 217, 220, 222, 223, 226, 228, 231, 237, 252], "descript": [3, 6, 21, 44, 111, 112, 126, 128, 136, 145, 161, 165, 168, 170, 174, 176, 228, 237], "again": [3, 5, 6, 21, 34, 66, 86, 89, 96, 143, 164, 166, 170, 171, 219, 221, 224, 226, 246], "markup": [3, 221], "pars": [3, 176, 233], "produc": [3, 29, 70, 72, 73, 80, 83, 84, 85, 86, 88, 96, 121, 142, 163, 164, 165, 167, 170, 171, 174], "content": [3, 5, 10, 14, 219, 220, 224, 229, 237], "later": [3, 25, 73, 74, 82, 86, 89, 123, 164, 170, 225], "compil": [3, 19, 21, 169, 170, 177, 217, 218, 221, 226, 227, 235], "so": [3, 4, 6, 15, 16, 17, 19, 21, 34, 36, 38, 39, 43, 55, 56, 66, 69, 73, 75, 78, 82, 83, 84, 86, 89, 91, 94, 96, 99, 100, 105, 106, 108, 111, 112, 113, 114, 122, 123, 126, 130, 131, 134, 135, 137, 143, 146, 152, 155, 156, 158, 163, 164, 165, 166, 168, 169, 170, 171, 174, 175, 176, 195, 218, 224, 225, 226, 241, 246, 252], "appropri": [3, 67, 104, 105, 134, 137, 152, 163, 164, 165, 168, 175, 234, 247, 248], "web": [3, 21, 165, 224, 226, 230], "page": [3, 6, 9, 11, 12, 14, 15, 21, 82, 111, 112, 147, 160, 164, 217, 219, 222, 226, 228, 235, 247, 248], "enrich": 3, "particularli": [3, 39, 53, 80, 85, 94], "encourag": [3, 23, 151], "observ": [3, 24, 36, 50, 51, 59, 67, 77, 80, 85, 88, 89, 100, 116, 119, 143, 157, 164, 170, 171], "acronym": 3, "referenc": [3, 163, 165, 170, 171, 226, 237], "invert": [3, 29, 62, 105, 106, 163, 170, 175, 176, 203, 224], "comma": [3, 176, 212, 234], "call": [3, 5, 6, 19, 21, 34, 43, 47, 53, 54, 56, 59, 64, 66, 71, 72, 73, 74, 75, 77, 78, 80, 82, 84, 85, 86, 88, 91, 94, 96, 99, 100, 105, 116, 119, 122, 123, 131, 135, 138, 141, 144, 146, 155, 156, 157, 163, 164, 165, 166, 169, 170, 171, 172, 174, 175, 176, 177, 219, 222, 223, 224, 234, 246], "gradientt": [3, 56, 64, 70, 72, 73, 75, 76, 78, 81, 82, 83, 85, 92, 93, 121, 122, 163, 165, 169, 170, 172, 174, 177, 218, 219, 224, 226, 230, 233], "hold": [3, 29, 36, 55, 64, 99, 134, 137, 163, 164, 168, 170, 174], "vector": [3, 24, 56, 58, 64, 72, 73, 78, 82, 87, 88, 99, 100, 112, 113, 121, 122, 131, 135, 142, 144, 146, 151, 154, 155, 162, 163, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 179, 188, 189, 196, 199, 204, 217, 219, 222, 226, 241, 242, 245, 250], "cite": [3, 51, 80, 146, 147, 148, 149, 165, 166], "nameyear": 3, "convent": [3, 43, 85, 143, 144, 158, 163, 164, 165, 166, 168, 170, 174, 244], "cross": [3, 25, 26, 27, 29, 44, 68, 72, 73, 75, 78, 82, 83, 85, 86, 89, 94, 95, 104, 105, 106, 121, 155, 156, 158, 163, 164, 166, 170, 174, 176, 179, 217, 219, 222, 226, 228, 229, 234, 237, 238], "garyfallidis2014": 3, "under": [3, 22, 83, 84, 99, 105, 106, 163, 164, 165, 170, 175, 176, 179, 228, 229, 233, 239, 252], "section": [3, 5, 6, 15, 21, 22, 72, 73, 82, 113, 138, 141, 145, 147, 158, 164, 165, 170, 172, 174, 223, 225, 227, 230, 231, 237], "relat": [3, 4, 6, 15, 43, 72, 73, 83, 86, 142, 163, 164, 168, 170, 172, 174, 217, 219, 222, 223, 224, 234, 245, 246], "_specific_filenam": 3, "label": [3, 4, 5, 16, 21, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 67, 69, 82, 85, 86, 94, 104, 105, 106, 114, 121, 122, 126, 128, 130, 131, 134, 136, 156, 163, 165, 169, 171, 174, 175, 176, 205, 217, 220, 222, 228, 230, 237, 247, 248], "thu": [3, 21, 25, 59, 62, 73, 74, 80, 82, 84, 104, 112, 151, 164, 169, 170], "abl": [3, 5, 15, 19, 80, 83, 134, 137, 138, 141, 155, 170, 219, 224], "ref": [3, 6, 22, 29, 109, 163, 170, 171, 174, 221], "specific_filenam": 3, "cap": 3, "capit": 3, "first": [3, 6, 15, 17, 19, 21, 22, 25, 29, 31, 34, 39, 43, 46, 49, 50, 51, 52, 54, 55, 56, 59, 62, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 104, 105, 106, 107, 108, 109, 111, 112, 114, 116, 121, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 146, 147, 148, 149, 150, 155, 156, 157, 163, 164, 166, 169, 170, 171, 172, 174, 175, 176, 185, 220, 237, 240, 252], "letter": [3, 105, 174], "constrain": [3, 24, 25, 33, 35, 36, 40, 44, 47, 67, 68, 69, 79, 80, 83, 84, 88, 89, 90, 95, 153, 158, 164, 165, 166, 167, 169, 170, 174, 176, 196, 201, 225, 226, 227, 230, 238, 245], "deconvolut": [3, 24, 25, 28, 30, 33, 35, 36, 40, 44, 47, 53, 67, 68, 69, 79, 84, 90, 95, 118, 120, 153, 158, 159, 166, 167, 169, 170, 174, 176, 196, 224, 225, 228, 230, 238, 245], "csd": [3, 24, 25, 33, 35, 36, 37, 40, 44, 45, 48, 68, 69, 71, 79, 89, 95, 147, 153, 158, 161, 169, 170, 176, 217, 219, 221, 222, 225, 226, 227, 228, 229, 230, 231, 235, 237, 238, 239], "those": [3, 6, 13, 15, 25, 29, 33, 34, 40, 62, 64, 66, 70, 78, 84, 86, 104, 112, 131, 137, 157, 163, 164, 166, 170, 171, 174, 176, 252], "case": [3, 6, 15, 19, 21, 22, 24, 29, 36, 39, 50, 55, 62, 73, 79, 83, 84, 94, 96, 97, 108, 111, 128, 135, 138, 141, 142, 143, 148, 149, 151, 152, 154, 155, 156, 157, 163, 164, 166, 168, 170, 171, 174, 175, 176, 179, 180, 217, 222, 225, 241, 242, 245], "where": [3, 6, 13, 16, 19, 21, 22, 24, 25, 29, 34, 35, 40, 46, 47, 52, 64, 66, 70, 71, 72, 73, 78, 80, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 97, 99, 100, 104, 105, 113, 123, 125, 126, 130, 131, 135, 138, 141, 142, 143, 144, 147, 149, 151, 155, 157, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 197, 198, 199, 205, 208, 210, 212, 214, 215, 229, 241, 242, 245, 252], "common": [3, 5, 13, 22, 38, 43, 58, 60, 70, 73, 83, 85, 89, 94, 98, 104, 108, 138, 141, 147, 154, 160, 162, 163, 164, 165, 168, 170, 173, 174, 176, 224], "lowercas": [3, 229, 230], "superior": [3, 29, 62, 104, 131, 164], "longitudin": [3, 62, 170], "fasciculu": [3, 62, 100, 108, 109, 134, 147, 148, 149, 165], "slf": [3, 62], "customari": 3, "word": [3, 5, 6, 33, 71, 86, 111, 157, 163, 170, 173, 175, 217, 223, 237], "underscor": 3, "figur": [3, 25, 29, 34, 38, 40, 47, 49, 50, 51, 53, 55, 62, 64, 66, 74, 76, 79, 80, 82, 84, 85, 86, 87, 93, 96, 97, 104, 105, 106, 107, 116, 121, 128, 130, 131, 158, 164, 174, 175, 176, 203, 217, 219, 220, 221, 228, 237], "font": [3, 175, 231], "caption": [3, 237], "bold": [3, 5, 134, 175], "face": [3, 164, 165, 166, 168, 170, 172, 175, 177, 224, 226], "part": [3, 19, 24, 25, 34, 44, 55, 64, 66, 69, 71, 78, 79, 83, 85, 88, 89, 90, 96, 113, 138, 142, 144, 145, 147, 159, 163, 164, 166, 168, 169, 170, 171, 172, 174, 176, 197, 199, 219, 226, 240, 245], "rel": [3, 5, 6, 21, 25, 29, 39, 69, 78, 94, 123, 126, 149, 164, 166, 167, 170, 173, 174, 176, 217, 219, 222, 223, 224], "path": [3, 19, 29, 36, 43, 44, 58, 60, 64, 72, 73, 79, 80, 96, 97, 100, 104, 123, 127, 129, 137, 138, 141, 151, 152, 154, 155, 156, 157, 163, 164, 165, 167, 168, 169, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 212, 214, 215, 217, 218, 219, 222, 226, 229, 230, 237, 238], "backquot": 3, "inlin": [3, 217, 221], "devel": [3, 19, 73, 75, 76, 82, 83, 84, 86, 87, 88, 89, 93, 100, 229], "sign": [3, 73, 163, 164, 174, 226, 230, 242, 245], "enclos": 3, "A": [3, 6, 7, 13, 18, 22, 24, 25, 29, 31, 34, 35, 38, 39, 40, 51, 52, 53, 55, 58, 59, 66, 67, 69, 71, 72, 73, 74, 79, 80, 83, 84, 85, 88, 89, 90, 94, 96, 99, 108, 113, 116, 117, 123, 124, 125, 126, 128, 130, 134, 135, 136, 137, 138, 141, 142, 144, 145, 146, 147, 148, 149, 152, 154, 155, 157, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 222, 223, 224, 225, 227, 228, 241, 242, 245, 247, 248, 252], "summari": [4, 5, 10, 14, 20, 21, 135, 158, 168, 169, 177, 228], "classifi": [4, 35, 40, 53, 84, 116, 158, 171, 177, 218, 219, 227, 228, 231], "meaning": [4, 74, 83, 170], "categori": [4, 166, 170, 174], "bf": [4, 16, 24, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237], "rf": [4, 142, 170, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 237, 243], "refactor": [4, 6, 158, 217, 218, 221, 222, 224, 225, 226, 227, 228, 230, 231, 237], "nf": [4, 5, 6, 145, 158, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "bw": [4, 219], "address": [4, 5, 220, 223], "opt": [4, 19, 29, 176, 222, 225, 226, 229, 234, 237], "bk": 4, "fail": [4, 21, 73, 91, 97, 163, 168, 170, 217, 218, 219, 221, 222, 226, 227, 228, 230, 231, 234, 235, 237, 254], "pl": [4, 23], "pylint": 4, "happier": 4, "kind": [4, 55, 69, 86, 94, 131, 163, 170, 174, 226], "style": [4, 18, 20, 44, 161, 164, 170, 172, 175, 218, 219, 220, 221, 222, 223, 224, 228, 229, 231, 232, 234, 235, 237], "affect": [4, 6, 51, 53, 84, 86, 152, 169], "might": [4, 5, 10, 19, 21, 22, 73, 83, 84, 94, 109, 131, 147, 163, 164, 166, 167, 168, 169, 170, 171, 176, 189, 190, 222, 230], "look": [4, 6, 7, 11, 15, 19, 20, 21, 43, 56, 64, 71, 88, 89, 90, 94, 96, 100, 102, 108, 116, 130, 142, 143, 146, 147, 160, 166, 170, 174, 218, 219, 221, 224, 226, 239, 250, 253], "relax": [4, 218, 226], "slightli": [4, 86, 97, 163, 167, 170, 174, 245], "attempt": [4, 97, 170, 174, 229, 237], "failur": [4, 36, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 230, 231, 234], "fact": [4, 55, 144, 155], "veri": [4, 5, 9, 49, 55, 59, 60, 62, 64, 73, 78, 82, 83, 90, 94, 96, 99, 100, 107, 122, 135, 138, 141, 142, 149, 155, 163, 164, 168, 170, 174, 176, 184, 245], "within": [4, 33, 36, 44, 55, 70, 71, 78, 84, 109, 113, 123, 126, 146, 155, 157, 161, 163, 164, 165, 166, 168, 170, 171, 172, 174], "dp": [4, 84, 174, 176, 185, 234], "up": [4, 5, 10, 13, 14, 16, 19, 21, 32, 36, 39, 44, 59, 73, 86, 88, 89, 91, 98, 108, 126, 128, 130, 135, 136, 137, 142, 143, 158, 161, 163, 164, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 207, 217, 218, 219, 222, 224, 226, 227, 228, 229, 230, 234, 237, 241, 242, 252, 254], "habit": [4, 20], "becaus": [4, 6, 15, 21, 29, 34, 36, 40, 52, 59, 66, 73, 77, 85, 97, 104, 112, 119, 122, 125, 128, 131, 134, 137, 142, 151, 155, 157, 163, 164, 166, 170, 171, 172, 176, 210, 221, 241], "glanc": 4, "sourc": [4, 18, 20, 21, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 163, 164, 166, 170, 171, 174, 176, 224, 252], "person": 5, "gitconfig": 5, "home": [5, 9, 19, 64, 165, 254], "yourdomain": [5, 16], "com": [5, 6, 8, 9, 15, 16, 17, 19, 21, 22, 73, 83, 88, 100, 147, 148, 149, 156, 164, 167, 174, 176, 178, 247, 248], "ci": [5, 22, 158, 218, 219, 222, 228, 229, 230, 231, 236, 237], "co": [5, 21, 97, 130, 143, 163, 164, 172, 174, 245, 246], "checkout": [5, 6, 13, 15, 16, 21], "statu": [5, 6, 13, 16, 105, 163, 174, 217, 229, 234], "br": 5, "wdiff": 5, "diff": [5, 6, 7, 13, 15, 62, 163], "color": [5, 25, 29, 31, 34, 38, 39, 51, 56, 62, 66, 69, 78, 82, 86, 94, 98, 99, 100, 102, 105, 106, 108, 109, 111, 112, 113, 114, 116, 124, 125, 126, 130, 131, 134, 136, 137, 147, 148, 158, 163, 168, 170, 171, 174, 175, 176, 197, 199, 203, 217, 219, 221, 222, 226, 234, 250], "vim": [5, 142], "config": [5, 13, 16, 176, 217, 222, 226, 227, 236, 237], "copi": [5, 6, 10, 14, 16, 17, 29, 38, 39, 40, 44, 74, 94, 97, 108, 109, 131, 134, 137, 141, 163, 165, 168, 170, 171, 174, 176, 221, 226, 229], "practic": [5, 24, 51, 62, 71, 80, 83, 90, 92, 128, 152, 164, 170, 221, 231, 245], "tell": [5, 16, 17, 64, 111, 113, 171, 173, 176], "who": [5, 15, 16, 20, 21, 56, 64, 163, 164, 170], "simplest": [5, 16], "Of": [5, 73, 163], "cours": [5, 13, 20, 73, 81, 86, 159, 163, 241], "ll": [5, 6, 15, 17, 19, 20, 21, 29, 34, 36, 66, 72, 89, 90, 104, 123, 131, 134, 137, 170, 252], "actual": [5, 6, 44, 94, 130, 141, 163, 164, 169, 170, 171, 172, 174, 218, 219, 241, 242], "benefit": [5, 44, 51, 89, 161], "shorten": [5, 71, 89], "Or": [5, 6, 19, 34, 60, 64, 66, 71, 142, 170], "give": [5, 6, 9, 13, 17, 20, 21, 34, 43, 50, 55, 59, 62, 66, 70, 71, 82, 88, 104, 113, 125, 142, 151, 164, 166, 167, 170, 174, 176, 192, 218, 219, 220, 228, 234], "nice": [5, 13, 16, 56, 67, 91, 172, 176], "get": [5, 6, 11, 12, 13, 14, 16, 17, 18, 20, 21, 25, 31, 32, 40, 44, 46, 47, 53, 55, 56, 63, 65, 75, 76, 81, 82, 83, 84, 89, 93, 96, 97, 98, 100, 104, 105, 106, 108, 111, 112, 123, 126, 128, 131, 134, 137, 138, 141, 145, 147, 148, 151, 155, 157, 163, 164, 165, 166, 167, 169, 170, 171, 174, 175, 176, 218, 221, 222, 224, 228, 230, 233, 234, 237, 238, 241, 242, 252], "lg": [5, 6], "graph": [5, 6, 7, 15, 174, 177, 228], "pretti": [5, 69, 104], "cred": 5, "h": [5, 73, 74, 85, 89, 90, 96, 97, 138, 141, 146, 154, 155, 163, 164, 166, 169, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 226], "creset": 5, "yellow": [5, 116, 131, 147], "cgreen": 5, "cr": [5, 165], "blue": [5, 31, 56, 62, 69, 74, 100, 116, 128, 135, 136, 170], "abbrev": 5, "date": [5, 22, 168, 218, 219], "6d8e1e": 5, "head": [5, 6, 15, 29, 50, 54, 59, 94, 226], "origin": [5, 6, 16, 17, 24, 25, 34, 38, 40, 43, 44, 49, 50, 51, 52, 53, 54, 55, 59, 64, 66, 72, 74, 76, 79, 80, 82, 83, 85, 86, 88, 89, 91, 93, 94, 96, 97, 104, 107, 108, 111, 134, 148, 149, 151, 161, 163, 164, 166, 169, 170, 171, 172, 174, 176, 177, 184, 208, 217, 226, 228, 229, 230, 237, 245, 246], "my": [5, 6, 15, 142, 160, 218, 219, 224, 230, 234], "45": [5, 25, 32, 33, 34, 35, 37, 40, 51, 53, 66, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 102, 116, 126, 128, 131, 136, 137, 163, 165, 170, 224, 227], "minut": [5, 19, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141], "ago": 5, "matthew": [5, 20, 21, 23, 217, 218, 219, 221, 222, 224, 225, 226, 227], "d304a73": 5, "placehold": [5, 163], "pull": [5, 6, 8, 13, 15, 16, 123, 145, 158, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "48": [5, 24, 25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 97, 165, 170, 219, 224], "hhuuggoo": 5, "week": [5, 237], "jonathan": 5, "terhorst": 5, "4aff2a8": 5, "35": [5, 24, 25, 29, 32, 33, 35, 37, 38, 39, 40, 53, 71, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85, 86, 96, 97, 98, 104, 105, 106, 114, 123, 128, 129, 131, 134, 156, 163, 165, 166, 167, 170, 172, 224, 227, 245], "test_bugfix": 5, "hugo": 5, "a7ff2e5": 5, "discuss": [5, 56, 72, 104, 122, 160, 164, 170, 174, 246, 252], "propos": [5, 29, 40, 50, 52, 77, 78, 80, 82, 86, 88, 94, 104, 105, 106, 116, 119, 146, 155, 156, 163, 166, 169, 170, 174, 245], "made": [5, 6, 15, 16, 20, 43, 71, 83, 111, 112, 138, 141, 163, 170, 174, 227, 241, 242, 246], "summit": 5, "corran": 5, "webster": 5, "68f6752": 5, "implement": [5, 6, 24, 25, 29, 40, 51, 56, 69, 79, 80, 83, 84, 89, 91, 94, 96, 97, 104, 105, 106, 113, 138, 144, 145, 156, 158, 163, 164, 166, 167, 168, 170, 174, 175, 176, 219, 222, 223, 224, 226, 227, 228, 229, 234, 236, 239, 245], "axisindex": 5, "index_bi": 5, "ax": [5, 29, 50, 51, 52, 53, 54, 55, 59, 62, 69, 74, 75, 80, 82, 85, 86, 87, 88, 89, 94, 96, 97, 104, 105, 106, 122, 126, 128, 130, 143, 163, 164, 174, 175], "sketchi": 5, "right": [5, 6, 15, 21, 24, 25, 29, 40, 51, 52, 53, 54, 55, 59, 62, 64, 72, 74, 77, 82, 83, 85, 87, 88, 94, 96, 99, 104, 119, 123, 128, 131, 134, 135, 137, 142, 143, 147, 163, 164, 165, 168, 170, 171, 175], "corr": 5, "376adbd": 5, "46": [5, 25, 30, 32, 35, 36, 37, 40, 53, 71, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 108, 109, 124, 170, 224], "b605216": 5, "joshu": 5, "api": [5, 19, 43, 123, 145, 158, 163, 168, 170, 173, 217, 220, 221, 222, 224, 226, 231], "2e991e8": 5, "outer": [5, 87, 88, 163, 170], "7beda5a": 5, "prevent": [5, 43, 73, 163, 170, 171, 174, 176, 180], "axi": [5, 51, 53, 55, 56, 62, 67, 75, 76, 80, 81, 83, 86, 92, 93, 97, 102, 104, 116, 121, 122, 143, 144, 155, 163, 164, 166, 168, 170, 171, 172, 174, 175, 176, 202, 207, 222, 224, 228, 231, 241, 246], "throw": [5, 221, 228], "equal": [5, 24, 25, 29, 36, 71, 76, 78, 83, 86, 93, 99, 102, 130, 155, 163, 164, 167, 170, 171, 172, 174, 175, 176, 210, 215, 221, 224, 226, 230, 241, 242], "non": [5, 24, 25, 29, 38, 44, 50, 52, 53, 55, 57, 59, 61, 64, 67, 71, 72, 73, 74, 80, 82, 83, 84, 85, 86, 89, 96, 97, 100, 104, 121, 135, 137, 142, 151, 155, 158, 161, 163, 164, 165, 166, 167, 170, 171, 174, 175, 176, 191, 192, 196, 197, 199, 201, 219, 221, 223, 224, 225, 226, 227, 230, 234, 235, 236, 237, 238, 241, 242, 245, 247, 248], "65af65": 5, "convert": [5, 21, 24, 73, 85, 91, 121, 160, 164, 167, 168, 169, 170, 171, 174, 175, 176, 186, 187, 196, 210, 218, 222, 228, 230, 236, 237], "unit": [5, 23, 44, 78, 82, 86, 130, 144, 155, 161, 164, 165, 166, 170, 172, 174, 175, 176, 188, 189, 196, 199, 204, 241, 242, 243, 245], "assert": [5, 131, 221, 226, 231], "956fbab": 5, "remot": [5, 6, 13, 15, 16, 17, 165], "upstream": [5, 6, 13, 15, 16, 21], "thank": [5, 7, 16, 170], "yuri": 5, "zaytsev": 5, "post": [5, 13, 163, 240], "alreadi": [6, 15, 16, 19, 21, 29, 34, 38, 60, 66, 82, 83, 102, 104, 106, 108, 109, 112, 124, 147, 163, 164, 165, 168, 169, 171, 173, 174, 176, 185], "own": [6, 10, 12, 13, 14, 15, 16, 17, 43, 56, 64, 72, 111, 142, 148, 151, 152, 154, 155, 156, 157, 158, 169, 170, 176, 210, 226, 231, 233, 234], "fork": [6, 10, 14, 16, 224], "readi": [6, 13, 21, 47, 71, 79, 105, 113, 165, 218, 252], "real": [6, 72, 85, 123, 130, 142, 144, 158, 163, 164, 167, 170, 172, 174, 245], "what": [6, 17, 21, 34, 59, 62, 64, 66, 83, 86, 89, 94, 96, 100, 102, 105, 108, 111, 112, 130, 134, 137, 142, 145, 146, 147, 163, 168, 170, 171, 172, 176, 250, 254], "anyth": [6, 16, 141, 163, 164, 174, 226, 233], "fetch": [6, 15, 17, 29, 31, 43, 46, 47, 51, 53, 54, 59, 62, 67, 69, 72, 73, 78, 83, 84, 85, 94, 96, 97, 104, 106, 108, 109, 116, 124, 125, 134, 150, 151, 152, 154, 155, 156, 157, 165, 217, 219, 224, 227, 228, 229, 231], "task": [6, 116, 162, 174], "ipython": [6, 19, 29, 142, 219, 228, 236, 239, 249], "purpos": [6, 39, 44, 51, 56, 58, 64, 71, 73, 80, 83, 84, 90, 94, 97, 99, 113, 114, 121, 123, 151, 155, 157, 163, 164, 165, 170, 171, 175, 176, 219, 242, 254], "bugfix": [6, 217, 237], "databas": 6, "possibli": [6, 78, 163, 173, 174, 217], "find": [6, 9, 12, 16, 19, 21, 25, 29, 35, 46, 59, 71, 78, 81, 83, 90, 99, 104, 105, 106, 108, 109, 116, 123, 130, 131, 134, 142, 150, 155, 157, 163, 164, 166, 167, 170, 171, 173, 174, 176, 188, 189, 195, 196, 197, 198, 199, 201, 204, 219, 224, 226, 252, 253], "yourself": [6, 9, 17, 160], "mail": [6, 16, 21, 23, 164, 217, 240, 252, 253], "stuck": [6, 96], "maintain": [6, 10, 14, 22, 24, 43, 71, 146], "ve": [6, 15, 16, 17, 19, 34, 66, 72, 123, 131, 164, 174, 242], "why": [6, 16, 21, 43, 78, 88, 96, 142, 155, 234], "did": [6, 78, 94, 106, 156, 158, 164, 169, 233], "linux": [6, 13, 21, 22, 146, 222, 227, 231, 232, 239], "sound": [6, 88, 99], "strang": [6, 222, 231], "confus": [6, 170, 226, 234], "link": [6, 13, 15, 21, 147, 164, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 234, 235, 237], "repo": [6, 15, 16, 21, 226, 230, 233], "down": [6, 8, 85, 111, 130, 137, 143, 163, 164, 169, 170, 174, 177, 226, 232, 241, 242], "branchnam": 6, "collect": [6, 25, 89, 160, 163, 165, 168, 169, 170, 173, 174, 222, 234, 245, 247, 248], "often": [6, 21, 59, 60, 78, 89, 94, 128, 130, 131, 144, 164, 170], "someon": [6, 15, 122], "choos": [6, 31, 49, 50, 58, 78, 83, 107, 135, 151, 156, 159, 170, 174, 234], "remind": [6, 15, 143, 222], "rest": [6, 15, 23, 55, 83, 84, 163, 174], "abil": [6, 89, 100, 137, 152, 158, 229], "fly": [6, 111, 112, 143], "public": [6, 20, 21, 116, 143, 145, 158, 165, 170, 219], "correctli": [6, 35, 72, 168, 217, 221, 222, 226, 233], "hack": [6, 16], "my_new_fil": 6, "am": [6, 16, 21, 74], "messag": [6, 16, 18, 20, 21, 134, 137, 163, 164, 166, 170, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 220, 222, 228, 229, 231, 234, 235], "ny": [6, 23, 96, 164], "discard": [6, 21, 25, 131, 164, 165, 166, 170, 218, 234], "readm": [6, 21, 217, 218, 219, 220, 221, 222, 226, 228, 229, 230, 234], "untrack": 6, "new_file_nam": 6, "flag": [6, 16, 82, 108, 131, 146, 158, 163, 164, 170, 172, 176, 180, 220, 221, 226, 234], "just": [6, 7, 8, 9, 12, 15, 16, 17, 20, 21, 62, 64, 75, 76, 78, 81, 82, 83, 90, 93, 96, 100, 102, 104, 135, 138, 141, 142, 154, 163, 168, 169, 170, 174, 175, 176, 203, 217, 227, 228, 239, 252], "signal": [6, 16, 29, 39, 44, 47, 51, 52, 55, 59, 62, 64, 67, 68, 69, 71, 76, 77, 80, 82, 84, 86, 87, 88, 89, 90, 93, 94, 95, 119, 121, 122, 142, 145, 151, 155, 158, 161, 162, 166, 169, 170, 172, 174, 175, 176, 197, 199, 200, 201, 212, 222, 224, 228, 230, 231, 233, 238, 241, 243, 245], "faith": [6, 16], "tangl": 6, "problem": [6, 22, 60, 73, 82, 83, 84, 88, 94, 96, 99, 105, 130, 142, 156, 158, 163, 164, 170, 174, 218, 219, 221, 222, 226, 231, 234, 235, 237], "manual": [6, 14, 15, 21, 43, 47, 62, 112, 114, 163, 165, 166, 169, 230], "url": [6, 17, 22, 165, 219, 226, 230, 237], "sai": [6, 15, 19, 21, 56, 62, 86, 99, 148, 149, 163, 164, 169, 170, 174, 225, 241, 242], "dropdown": 6, "menu": [6, 222], "left": [6, 24, 25, 29, 40, 50, 51, 52, 53, 54, 55, 59, 62, 64, 69, 72, 74, 77, 83, 85, 86, 87, 88, 90, 96, 97, 98, 99, 100, 104, 108, 109, 119, 123, 124, 128, 131, 134, 135, 137, 142, 143, 147, 148, 149, 163, 164, 165, 166, 170, 171, 175, 237], "click": [6, 9, 137, 151, 152, 221], "button": [6, 9, 134, 137, 219, 228], "enter": [6, 21, 25, 29, 163, 166, 167, 170, 171, 174, 176, 195, 196, 198, 202, 209, 211, 221], "titl": [6, 62, 76, 79, 86, 93, 109, 175, 176, 177, 217, 230], "attent": 6, "complic": 6, "think": [6, 16, 81, 126, 142, 170, 172, 241], "preliminari": [6, 170], "unwant": 6, "stuff": [6, 12, 15, 18, 224, 226, 228, 233], "even": [6, 16, 59, 75, 85, 88, 96, 102, 111, 113, 151, 160, 163, 164, 166, 167, 170, 171, 174, 176, 201, 245, 252], "account": [6, 10, 21, 24, 52, 72, 80, 88, 89, 94, 121, 163, 164, 165, 166, 170, 218, 231, 232, 245], "Then": [6, 7, 16, 17, 19, 21, 24, 25, 52, 54, 59, 60, 62, 82, 84, 98, 104, 109, 116, 134, 155, 156, 157, 163, 164, 166, 170, 174, 175, 176, 241, 242, 252, 253], "collabor": [6, 23, 25, 240, 253, 254], "anyon": [6, 131], "els": [6, 16, 62, 109, 134, 142, 163, 164, 166, 168, 170, 172, 174, 175], "clone": [6, 8, 13, 16, 19, 21], "githhub": 6, "rememb": [6, 15], "ssh": [6, 9, 21], "protocol": [6, 83], "enh": [6, 217, 219, 220, 221, 222, 224, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237], "better": [6, 12, 16, 50, 51, 69, 72, 73, 74, 80, 86, 96, 104, 158, 160, 170, 219, 221, 227, 229, 230, 231, 234, 254], "graphic": 6, "represent": [6, 15, 33, 34, 36, 66, 72, 83, 86, 88, 94, 99, 114, 126, 131, 144, 157, 163, 164, 165, 168, 170, 174, 176, 186, 210, 222, 245, 247, 248], "gitk": 6, "network": [6, 67, 79, 82, 104, 147, 148, 155, 158, 162, 165, 169, 247, 248], "final": [6, 16, 21, 34, 39, 52, 64, 66, 71, 73, 77, 78, 82, 83, 85, 86, 87, 89, 90, 96, 97, 98, 104, 105, 114, 119, 121, 130, 131, 134, 163, 164, 166, 170, 171, 176, 250, 252], "fanci": 6, "let": [6, 15, 20, 24, 29, 32, 34, 37, 43, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 64, 66, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 85, 87, 88, 91, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 108, 109, 111, 112, 113, 114, 119, 122, 124, 125, 128, 130, 131, 134, 135, 136, 137, 138, 141, 143, 146, 147, 148, 149, 150, 163, 174, 220, 252, 254], "thought": [6, 130, 144], "cool": [6, 15, 128], "At": [6, 21, 44, 69, 84, 104, 161, 163, 164], "stage": [6, 82, 96, 105, 155, 164, 170, 176, 200], "mayb": [6, 163, 166, 170, 174, 229], "back": [6, 16, 21, 29, 105, 106, 128, 134, 143, 145, 169, 170, 174, 176, 215, 217, 224, 226, 230, 233, 237], "meantim": 6, "progress": [6, 16, 74, 86, 89, 108, 147, 156, 158, 163, 166, 169, 176, 178, 192, 211, 219, 231, 234], "sternli": 6, "advis": [6, 84, 164, 170, 171, 176], "messi": 6, "worri": [6, 36, 147], "got": [6, 15, 55], "littl": [6, 13, 55, 231], "ahead": [6, 96, 134, 220], "But": [6, 20, 29, 55, 56, 94, 143, 164], "sometim": [6, 19, 36, 46, 55, 130, 131, 142, 228], "situat": [6, 143], "replai": [6, 175], "had": [6, 59, 64, 174], "state": [6, 21, 40, 43, 83, 85, 88, 94, 111, 158, 164, 168, 169, 174, 176, 185, 226, 228, 229, 231, 234, 239], "repres": [6, 24, 25, 36, 46, 51, 70, 78, 80, 85, 86, 87, 88, 90, 91, 111, 113, 114, 121, 126, 130, 131, 142, 144, 147, 149, 155, 157, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 184, 201, 207, 222, 245, 246], "tear": 6, "backup": 6, "onto": [6, 24, 143, 164, 170, 175, 246], "succinctli": 6, "doesn": [6, 21, 89, 164, 217, 218, 219, 221, 226, 235, 237, 253], "conflict": [6, 19, 21, 176, 221], "resolv": [6, 71, 72, 73, 77, 84, 119, 155, 160, 166, 167, 170, 176, 196, 222, 223, 236, 245], "man": 6, "end": [6, 15, 19, 22, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 143, 147, 155, 164, 169, 170, 171, 174, 230, 241, 242, 245], "luckili": 6, "straightforward": [6, 169], "mistak": [6, 142, 168, 228, 230], "abort": [6, 222], "notic": [6, 86, 99, 131, 143, 151, 163, 164, 165, 171, 174, 176], "reset": [6, 164, 176, 177], "hard": [6, 51, 73, 170, 231], "forgot": 6, "reflog": 6, "8630830": 6, "immedi": [6, 19, 143], "278dd2a": 6, "finish": [6, 16, 99, 105, 169, 226, 252], "11ee694744f2552d": 6, "26aa21a": 6, "lib": [6, 19, 25, 51, 64, 73, 80, 83, 84, 88, 134, 165], "seek_gzip_factori": 6, "leak": [6, 217, 226], "gzip": 6, "obj": [6, 134, 137, 163, 165, 168, 171, 175, 176, 177, 230], "botch": 6, "embarrass": 6, "typo": [6, 145, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237], "perhap": [6, 231], "fals": [6, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 51, 53, 55, 56, 66, 67, 70, 71, 73, 74, 76, 77, 78, 81, 83, 84, 85, 89, 90, 91, 92, 94, 98, 99, 100, 104, 108, 109, 111, 112, 113, 114, 119, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 156, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 184, 192, 199, 217, 234, 236, 237], "would": [6, 7, 21, 22, 29, 59, 71, 83, 90, 94, 97, 99, 100, 106, 123, 134, 137, 138, 141, 142, 149, 150, 156, 164, 170, 174, 176, 202, 203], "poster": 6, "interact": [6, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 56, 66, 67, 70, 71, 77, 78, 83, 84, 89, 90, 91, 92, 94, 98, 100, 104, 108, 109, 111, 112, 113, 114, 119, 122, 124, 126, 128, 130, 131, 132, 133, 136, 137, 147, 158, 163, 164, 170, 171, 172, 174, 175, 176, 184, 203, 222, 237, 238, 239, 249], "suppos": [6, 106, 226], "eadc391": 6, "remain": [6, 131, 163, 164, 165, 166, 170, 174, 241], "a815645": 6, "2dec1ac": 6, "few": [6, 19, 36, 46, 94, 134, 146, 174, 218, 219, 223, 224, 225, 226, 227, 239, 249], "disabl": [6, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 56, 66, 67, 70, 71, 77, 78, 83, 89, 90, 91, 92, 94, 111, 112, 113, 114, 119, 122, 130, 131, 137, 166, 170, 176, 178, 224, 237], "13d7934": 6, "6ad92e5": 6, "instanc": [6, 29, 55, 72, 73, 74, 78, 85, 87, 94, 105, 106, 111, 112, 116, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175], "maskedconst": 6, "29001ed": 6, "pre": [6, 21, 50, 55, 72, 73, 74, 80, 85, 99, 100, 106, 125, 163, 169, 170, 171, 176, 179, 219, 221, 222, 223, 230, 231, 237], "nep": [6, 231], "copul": 6, "structured_array_extens": 6, "sensibl": [6, 15], "combin": [6, 24, 25, 34, 39, 44, 50, 59, 66, 83, 84, 86, 87, 89, 90, 92, 102, 131, 139, 140, 163, 164, 166, 170, 174, 176, 219, 237, 238], "pick": [6, 19, 21, 55, 137, 220], "reword": [6, 225], "amend": 6, "squash": [6, 224], "meld": 6, "fixup": [6, 224], "THAT": 6, "WILL": 6, "BE": [6, 23, 164, 171, 176], "lost": [6, 43], "howev": [6, 22, 36, 38, 43, 46, 53, 58, 72, 73, 76, 80, 83, 84, 85, 86, 88, 89, 104, 111, 130, 131, 134, 137, 142, 157, 164, 166, 169, 170, 171, 176, 189, 190, 245, 252], "everyth": [6, 20, 21, 43, 134, 138, 141, 174, 224], "achiev": [6, 24, 50, 84, 87, 97, 99, 111, 116, 156, 174], "mean": [6, 17, 24, 29, 44, 50, 51, 53, 55, 57, 61, 62, 67, 68, 69, 72, 74, 76, 78, 79, 80, 83, 86, 89, 93, 95, 96, 98, 99, 104, 108, 111, 113, 123, 125, 137, 143, 144, 151, 153, 158, 161, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 184, 189, 191, 197, 199, 201, 202, 203, 214, 215, 226, 227, 228, 231, 238, 246], "ii": [6, 164, 174], "collaps": [6, 143], "three": [6, 34, 44, 64, 66, 78, 82, 83, 84, 85, 86, 89, 92, 96, 97, 102, 105, 113, 116, 131, 142, 143, 144, 155, 157, 161, 163, 164, 165, 166, 170, 172, 174, 175], "quit": [6, 59, 83, 130, 170], "bring": [6, 34, 66, 104, 106, 134, 156, 163, 231, 237], "revis": [6, 21], "detach": 6, "721fc64": 6, "foo": 6, "199": [6, 58, 59, 82, 83, 166, 225], "insert": [6, 56, 122, 135, 171, 177], "66": [6, 25, 32, 33, 35, 37, 40, 53, 70, 72, 73, 74, 79, 80, 82, 83, 84, 85, 114, 146, 170, 224], "0f22701": 6, "79": [6, 25, 33, 35, 36, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 224], "61": [6, 25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 87, 111, 158, 164, 170, 171, 224, 233], "successfulli": [6, 21, 245], "sophist": 6, "went": 6, "wrong": [6, 94, 164, 170, 218, 219, 220, 222, 224, 226, 227, 234, 237], "recoveri": [6, 247, 248], "possibl": [6, 13, 21, 22, 36, 43, 49, 56, 70, 71, 73, 75, 76, 81, 83, 84, 92, 93, 96, 107, 114, 137, 142, 143, 157, 163, 164, 165, 166, 167, 170, 171, 174, 176, 179, 195, 196, 197, 198, 199, 200, 201, 202, 209, 211, 217, 221, 228, 231, 233, 234, 242, 249], "explain": [6, 13, 16, 22, 29, 82, 83, 96, 97, 98, 99, 100, 105, 106, 108, 109, 111, 112, 114, 116, 124, 125, 148, 149, 166, 227, 241, 242, 254], "yarik": 7, "imagin": [7, 143, 146, 164, 170, 174], "seri": [7, 13, 21, 91, 97, 138, 141, 163, 171, 172, 174, 222, 226, 229, 230, 245], "topic": [7, 86], "off": [7, 15, 38, 53, 62, 80, 86, 100, 102, 116, 149, 163, 176, 184, 219, 237], "effect": [7, 22, 24, 35, 38, 40, 51, 52, 72, 73, 80, 85, 86, 89, 94, 104, 105, 143, 151, 152, 157, 163, 164, 166, 168, 169, 170, 171, 174, 175, 176, 199, 203, 241, 242, 245, 247, 248], "step": [8, 21, 24, 29, 36, 39, 44, 47, 50, 51, 52, 55, 58, 59, 64, 67, 74, 80, 82, 84, 90, 94, 99, 102, 108, 123, 126, 128, 130, 136, 146, 147, 151, 152, 154, 155, 156, 157, 161, 163, 164, 166, 167, 169, 170, 172, 174, 176, 179, 198, 214, 215, 218, 219, 228, 234, 236], "github": [8, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 29, 142, 158, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "repositori": [8, 15, 16, 19, 20, 252], "tree": [8, 19, 109, 171, 174, 176, 177], "onc": [9, 21, 43, 53, 73, 78, 81, 83, 84, 85, 86, 89, 94, 131, 135, 138, 141, 142, 152, 154, 163, 164, 170, 171, 174, 175, 176, 181, 182, 183, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 207, 209, 210, 212, 214, 215, 228, 241, 242, 245], "detail": [9, 10, 13, 14, 19, 22, 25, 29, 40, 43, 51, 53, 54, 55, 59, 73, 74, 80, 82, 84, 85, 87, 92, 96, 126, 142, 145, 146, 150, 164, 165, 170, 171, 175, 217, 226, 230, 247], "repeat": [9, 32, 34, 36, 66, 71, 88, 89, 96, 234, 247, 248], "short": [9, 43, 85, 97, 126, 163, 167, 172, 174, 176, 226, 237, 241, 242], "paus": 9, "hardcor": 9, "action": [9, 21, 22, 43, 158, 175, 176, 234, 235, 237], "overview": [10, 14, 44, 68, 153, 231], "mirror": [10, 144, 164, 166, 177], "trunk": [10, 17, 21], "ask": [10, 21, 43, 145, 160, 253], "review": [10, 21, 234], "debian": [11, 226, 252], "ubuntu": [11, 22, 219, 222, 230, 234, 252], "sudo": [11, 19, 21, 252], "apt": [11, 19, 252], "fedora": [11, 252], "yum": [11, 19], "download": [11, 21, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 146, 147, 148, 149, 153, 158, 159, 164, 165, 176, 194, 219, 221, 222, 225, 226, 227, 234, 235, 237, 247], "msysgit": 11, "maco": [11, 21, 22, 158, 230, 237, 252], "osx": [11, 22, 217, 219, 222, 229, 231, 237], "recent": [11, 19, 22, 62, 86, 165, 166, 174, 219, 225, 235, 239], "sever": [12, 16, 21, 22, 62, 80, 83, 87, 88, 131, 157, 163, 174, 245], "comprehens": [12, 72], "our": [12, 15, 17, 20, 21, 32, 46, 53, 58, 62, 70, 71, 74, 78, 79, 82, 84, 86, 89, 91, 94, 96, 98, 99, 105, 111, 112, 113, 126, 128, 131, 134, 138, 141, 142, 145, 148, 149, 158, 163, 164, 165, 170, 174, 220, 222, 231, 233, 237, 250, 252, 253], "tailor": [12, 134], "host": 12, "servic": [12, 21, 164, 171, 176], "quicker": 12, "resourc": [12, 14, 18, 46, 79, 163, 165, 169, 221], "excel": [13, 16, 164], "guid": [13, 22, 90, 113, 145, 164, 169, 221, 228, 231], "pro": [13, 218], "book": [13, 171, 221], "depth": [13, 163, 164, 168, 169, 170, 171, 175, 176, 203], "cheat": 13, "sheet": 13, "cast": [13, 168, 169, 170, 176, 217, 219, 237], "video": [13, 20, 114, 158], "snippet": [13, 223, 250], "tos": 13, "magic": 13, "introduct": [13, 14, 18, 19, 28, 29, 30, 32, 35, 38, 40, 43, 44, 63, 65, 128, 131, 153, 230, 237, 238, 241], "intermedi": [13, 78, 170, 174], "parabl": 13, "concept": [13, 99, 100, 125, 145, 170, 242], "foundat": 13, "expand": [13, 80, 89, 163, 219, 233], "fernando": 13, "perez": 13, "mani": [13, 19, 29, 33, 39, 43, 56, 69, 71, 73, 83, 88, 96, 99, 126, 134, 135, 142, 145, 158, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 176, 195, 196, 198, 202, 209, 211, 228, 234, 239, 252], "tip": [13, 143, 231], "technic": [13, 43], "svn": 13, "crash": [13, 219, 221, 222, 228], "subvers": 13, "thumb": [13, 108, 174], "linu": 13, "torvald": 13, "tool": [13, 19, 21, 22, 43, 64, 71, 96, 97, 104, 105, 106, 128, 131, 146, 156, 158, 163, 170, 171, 174, 175, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 252], "histori": [13, 164, 169, 226], "clean": [13, 19, 21, 25, 145, 158, 168, 171, 174, 219, 221, 222, 223, 224, 225, 227, 228, 234], "activ": [13, 49, 107, 135, 169, 175, 176, 203, 252], "conveni": [13, 97, 138, 141, 163, 176], "latest": [14, 18, 19, 22, 88, 158, 170, 218, 234, 245, 252], "advanc": [14, 44, 51, 53, 55, 73, 85, 96, 97, 104, 105, 106, 132, 133, 138, 141, 145, 146, 156, 158, 160, 163, 166, 168, 170, 171, 176, 192, 202, 220, 238, 247, 248], "onlin": [14, 218, 225, 239], "peopl": [15, 142, 242], "Being": 15, "scari": 15, "rw": [15, 21], "incorpor": [15, 22, 163], "assum": [15, 29, 38, 55, 56, 59, 78, 82, 84, 89, 94, 99, 102, 104, 111, 112, 113, 121, 155, 163, 164, 166, 170, 171, 172, 174, 175, 176, 189, 190, 191, 196, 218, 219], "rebas": [15, 21, 219, 220, 221, 222, 223, 225], "detect": [15, 19, 59, 89, 94, 163, 164, 170, 174], "ff": [15, 171], "forc": [15, 21, 138, 141, 146, 148, 149, 164, 166, 174, 176, 234, 237], "forward": [15, 24, 29, 72, 73, 78, 82, 85, 163, 170, 174, 225], "rejoin": 15, "appear": [15, 83, 134, 165], "compact": [15, 144, 174], "second": [15, 21, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 155, 163, 164, 169, 170, 171, 172, 174, 175, 176, 224, 229, 237, 241], "uniqu": [15, 36, 67, 72, 84, 87, 88, 100, 109, 163, 164, 166, 167, 168, 169, 170, 171, 174, 231, 234, 237], "form": [15, 19, 21, 24, 78, 79, 96, 97, 155, 163, 164, 165, 166, 170, 171, 172, 174, 176, 241, 242], "discov": 16, "best": [16, 62, 71, 83, 142, 156, 163, 164, 167, 170, 174, 231], "easiest": [16, 19, 21, 50], "quickest": 16, "email": [16, 217], "im": [16, 29, 80, 82, 102, 113, 128, 130, 245], "somewher": 16, "test_my_bug": 16, "funni": 16, "send": [16, 20, 23, 252, 253], "warmli": 16, "safe": [16, 43, 158, 163, 168, 230], "leav": [16, 21, 76, 163, 164, 166, 170, 172, 174], "unmodifi": 16, "0001": [16, 170], "0002": [16, 89, 170], "switch": [16, 22, 55, 104, 105, 163, 170, 174, 219, 222, 223, 226, 235], "mode": [16, 19, 97, 116, 146, 155, 163, 164, 166, 168, 169, 171, 172, 174, 175, 176, 177, 197, 199, 203, 209, 217, 220, 225, 226], "refresh": 16, "pointer": 16, "investig": [17, 108, 124, 125, 147, 149, 163, 170, 171, 173, 176], "connect": [17, 29, 34, 35, 36, 40, 43, 66, 90, 99, 104, 126, 128, 129, 134, 157, 165, 167, 174, 176, 215, 219, 234, 237, 238, 246, 247, 248], "accident": [17, 218], "deliber": [17, 164], "satisfact": 17, "checklist": 18, "upload": [18, 219, 221, 236], "binari": [18, 44, 49, 86, 101, 103, 105, 107, 131, 157, 163, 164, 168, 169, 170, 171, 174, 175, 176, 203, 206, 207, 214, 215, 219, 222, 228, 234, 237, 238], "guidelin": [18, 20, 158, 220, 221, 223, 234, 253], "cython": [18, 19, 22, 142, 145, 158, 163, 164, 170, 171, 174, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 249, 252], "benchmark": [18, 219, 224], "prerequisit": 18, "embrac": 18, "speed": [18, 19, 39, 86, 88, 111, 142, 158, 163, 170, 171, 174, 176, 207, 226, 227, 229, 237, 249], "toolchain": [18, 249], "roadmap": [18, 249], "pyproject": [19, 138, 141, 176, 237], "toml": [19, 138, 141, 176], "among": [19, 174], "temporari": [19, 163, 167, 168, 170, 174, 235], "fxd": [19, 21], "present": [19, 21, 24, 25, 43, 44, 71, 73, 78, 85, 137, 169, 170, 174, 229, 234], "isol": [19, 21, 25, 62, 83, 89, 163], "old": [19, 158, 222, 224, 226, 230, 231], "pythonpath": 19, "search": [19, 44, 62, 108, 110, 115, 145, 158, 166, 170, 171, 174, 176, 208, 234, 235, 236, 237, 238], "googl": [19, 23, 158, 229], "bashrc": 19, "bash_profil": 19, "retyp": 19, "user_dir": 19, "restart": 19, "dev": [19, 21, 163, 170, 176, 179, 218, 219, 220, 222, 226, 227, 237], "setuptool": [19, 145, 236], "matplotlib": [19, 29, 34, 38, 40, 49, 50, 51, 52, 53, 54, 55, 59, 62, 64, 66, 69, 72, 74, 75, 76, 78, 79, 80, 82, 84, 85, 86, 87, 89, 93, 94, 97, 102, 107, 116, 121, 122, 123, 126, 128, 130, 131, 142, 174, 175, 219, 222, 224, 226, 249], "necessari": [19, 21, 22, 32, 34, 37, 38, 39, 43, 49, 50, 52, 53, 54, 55, 56, 59, 60, 62, 64, 66, 70, 73, 75, 76, 78, 79, 81, 83, 86, 88, 92, 93, 98, 107, 108, 109, 111, 112, 113, 114, 116, 124, 125, 128, 130, 131, 134, 163, 164, 165, 170, 174, 176, 231], "exact": [19, 21, 24, 52, 90, 109, 163, 164, 166, 170, 171, 172, 174, 233], "shell": [19, 44, 51, 53, 55, 56, 59, 62, 67, 68, 70, 73, 74, 76, 79, 83, 85, 86, 89, 92, 93, 95, 122, 146, 158, 161, 165, 167, 170, 172, 176, 204, 228, 229, 230, 231, 233, 234, 235, 238, 247, 248, 252], "cmd": [19, 222], "powershel": 19, "platform": [19, 22, 152, 226, 252], "python_compil": 19, "msc": 19, "1900": [19, 82, 85, 229], "64": [19, 25, 33, 35, 36, 40, 44, 51, 52, 53, 56, 62, 70, 72, 73, 74, 79, 82, 83, 84, 85, 86, 91, 92, 98, 102, 111, 114, 122, 134, 146, 161, 165, 169, 170, 172, 218, 219, 226, 247, 248], "bit": [19, 164, 218, 219, 221, 222, 226, 227, 241], "amd64": 19, "visualstudiobuildtool": 19, "respect": [19, 40, 62, 72, 80, 83, 89, 92, 97, 99, 116, 131, 142, 158, 163, 164, 165, 166, 168, 170, 171, 174, 175, 176, 203, 230, 231], "2008": [19, 32, 44, 54, 55, 69, 75, 76, 82, 92, 93, 151, 161, 163, 166, 170, 172, 174, 176, 191, 219, 222, 229], "msc_ver": 19, "1500": [19, 44, 54, 82, 92, 161, 164, 222, 247, 248], "1600": [19, 82, 146, 222, 247, 248], "1700": [19, 82, 223], "2013": [19, 44, 52, 53, 55, 62, 73, 74, 82, 83, 89, 92, 94, 158, 159, 161, 165, 166, 170, 176, 189, 224, 225, 226, 229, 247, 248], "1800": [19, 73, 80, 82, 146, 228, 247, 248], "1910": [19, 82, 228], "2019": [19, 22, 44, 67, 82, 85, 88, 159, 161, 165, 166, 169, 170, 175, 176, 203, 223, 228, 229, 230, 245, 247, 248], "16": [19, 22, 25, 33, 35, 40, 49, 53, 61, 72, 73, 74, 79, 82, 83, 84, 85, 86, 89, 92, 107, 116, 145, 158, 159, 169, 170, 174, 175, 217, 218, 219, 225, 226, 228, 236, 239], "1920": [19, 82, 228], "2022": [19, 22, 72, 79, 82, 98, 109, 159, 165, 169, 171, 176, 193, 229, 234, 235], "17": [19, 22, 25, 32, 35, 36, 37, 40, 53, 72, 73, 74, 75, 76, 79, 80, 82, 83, 84, 85, 86, 92, 116, 164, 169, 170, 174, 176, 198, 224, 228], "1930": [19, 82, 229], "inplac": [19, 51, 166, 231, 236], "unabl": [19, 170, 219, 226, 231, 237], "vcvarsal": 19, "bat": 19, "reinstal": [19, 237], "xcode": [19, 22, 252], "multithread": [19, 158], "applic": [19, 24, 25, 46, 49, 51, 53, 59, 73, 78, 83, 85, 89, 107, 130, 163, 164, 166, 168, 169, 170, 171, 176, 202], "enabl": [19, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 56, 64, 66, 70, 71, 77, 78, 83, 87, 88, 89, 90, 91, 92, 94, 111, 112, 113, 114, 119, 122, 130, 131, 163, 166, 170, 174, 175, 176, 178, 203, 208, 220, 229, 237], "advantag": [19, 38, 55, 69, 81, 85, 90, 99, 123, 163], "next": [19, 20, 21, 29, 32, 34, 39, 56, 62, 64, 66, 69, 73, 78, 82, 84, 86, 88, 91, 94, 96, 122, 123, 130, 131, 136, 138, 163, 164, 167, 169, 170, 172, 174, 175, 222, 252], "gcc": [19, 22], "clang": [19, 22], "llvm": [19, 22], "conda": [19, 22, 217, 219, 220, 222, 227, 237, 252], "forg": [19, 22, 252], "specifi": [19, 34, 43, 51, 66, 82, 84, 88, 89, 96, 97, 131, 138, 142, 147, 150, 151, 152, 154, 155, 156, 157, 163, 164, 165, 166, 169, 170, 171, 172, 174, 175, 176, 181, 182, 183, 191, 192, 197, 199, 200, 201, 207, 219, 228, 241, 246], "cc": [19, 43, 62, 69, 70, 78, 102, 106, 156, 163, 176, 179, 212, 225, 247, 248], "omp": [19, 219], "brew": 19, "libomp": 19, "bin": [19, 29, 96, 126, 163, 164, 171, 174, 176, 178], "cxx": 19, "ldflag": 19, "cppflag": 19, "cflag": 19, "whether": [19, 21, 78, 113, 155, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 195, 196, 198, 199], "hombrew": 19, "faster": [19, 83, 108, 111, 145, 158, 163, 166, 167, 169, 170, 171, 174, 176, 189, 190, 218, 219, 224, 226, 240], "svv": [19, 21], "entir": [19, 33, 39, 50, 55, 82, 83, 86, 108, 135, 157, 163, 168, 170, 171, 174, 176, 229], "hour": [19, 165], "skip": [19, 55, 163, 164, 165, 166, 167, 170, 172, 175, 176, 192, 219, 224, 226, 228, 235, 237, 252], "encount": [19, 22, 75, 83, 84, 87, 88, 89, 93], "build_modref_templ": 19, "warn": [19, 62, 67, 73, 76, 80, 82, 83, 84, 86, 88, 100, 145, 168, 169, 170, 177, 217, 219, 220, 221, 222, 223, 224, 226, 228, 229, 230, 231, 233, 234, 235, 237], "docgen_cmd": 19, "reference_cmd": 19, "cannot": [19, 36, 69, 80, 85, 89, 164, 166, 169, 174, 217, 223, 226, 228, 234, 235, 236, 237], "examples_built": [19, 117], "make_exampl": 19, "traceback": [19, 165, 166, 174], "33": [19, 24, 25, 32, 35, 36, 37, 40, 44, 47, 53, 55, 72, 73, 74, 75, 79, 80, 82, 83, 84, 85, 86, 88, 94, 102, 109, 114, 161, 163, 164, 166, 170, 176, 192, 199, 217, 224, 247, 248], "modulenotfounderror": [19, 229], "due": [19, 51, 52, 73, 80, 82, 85, 89, 94, 166, 225, 230, 231, 245], "happen": [19, 34, 66, 83, 102, 135, 136, 164, 176, 228], "live": [19, 29, 169, 174, 229], "solv": [19, 24, 58, 73, 80, 83, 84, 87, 88, 89, 154, 158, 163, 164, 166, 169, 170, 174, 176, 177, 192, 219, 227], "sphinxbuild": 19, "path_to_sphinx": 19, "alwai": [20, 33, 43, 59, 62, 71, 73, 78, 83, 85, 86, 90, 142, 157, 166, 167, 170, 172, 174, 224, 230, 241], "seek": 20, "courag": 20, "scientist": [20, 56, 159], "dmri": [20, 44, 58, 60, 64, 68, 74, 78, 94, 95, 142, 154, 158, 159, 161, 165, 166, 170, 222, 238, 247, 248], "level": [20, 53, 58, 82, 86, 87, 88, 96, 97, 98, 102, 104, 105, 106, 142, 147, 149, 155, 163, 164, 166, 168, 169, 170, 171, 172, 174, 175, 176, 179, 218, 224, 228, 229], "share": [20, 23, 43, 72, 163, 226, 240, 253], "vision": [20, 24, 25, 163, 166, 170], "willing": 20, "lead": [20, 72, 78, 94, 104, 143, 164, 170, 241], "ian": [20, 23, 174, 224], "bago": [20, 23, 217, 218, 219, 221, 224, 225, 226, 227], "stefan": [20, 23, 39, 90, 170, 176, 217, 224, 225, 226, 227, 228], "primari": [20, 22, 170], "idea": [20, 34, 53, 55, 66, 71, 82, 97, 105, 142, 151, 155, 157, 163, 170, 174, 226, 233, 237, 240, 254], "nipi": [20, 21, 145, 164, 219, 224, 225, 230, 233, 240, 252, 254], "pitch": [20, 143, 164], "feedback": 20, "And": [20, 23, 43, 94, 96, 97, 104, 105, 106, 116, 123, 147, 174, 176, 214, 215], "hope": [20, 252, 254], "enjoi": 20, "apologi": 20, "low": [20, 25, 40, 44, 50, 73, 82, 83, 84, 85, 90, 94, 111, 126, 142, 151, 155, 161, 163, 164, 166, 169, 170, 171, 172, 174], "resolut": [20, 44, 60, 77, 79, 91, 96, 104, 105, 106, 119, 122, 142, 161, 163, 166, 168, 170, 171, 172, 176, 179, 207, 209, 222, 230, 234, 247, 248], "outstand": 21, "delai": [21, 168], "inde": 21, "doe": [21, 29, 33, 55, 73, 82, 83, 85, 86, 104, 111, 112, 128, 130, 142, 157, 163, 165, 166, 168, 169, 170, 171, 174, 176, 217, 218, 219, 221, 222, 225, 226, 228, 231, 233, 234, 235], "pr": [21, 75, 166, 170, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "github_stat": [21, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "release_not": 21, "release1": 21, "changelog": [21, 217, 226, 227, 230], "partial": [21, 24, 35, 40, 80, 89, 100, 153, 157, 163, 168, 170, 174, 176, 215, 247, 248], "shortlog": 21, "recogn": [21, 108, 109, 171, 176, 177, 205, 208], "opportun": [21, 142], "mailmap": 21, "duplic": [21, 164, 165, 166, 170, 174, 217, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 232, 233, 234, 235, 236, 237], "author": [21, 163, 165, 171, 176, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "nse": 21, "copyright": [21, 163, 164, 165, 171, 176, 218, 219, 222, 226], "conf": [21, 164, 219], "licens": [21, 163, 165, 226], "realli": [21, 50, 75, 232], "autom": [21, 90, 104, 105, 106, 123, 156, 163, 173, 219], "pyx": [21, 164, 219, 220, 225, 226, 233], "doctest": [21, 164, 218, 220, 224, 225], "doctest_extmod": 21, "buildbot": [21, 217, 219, 225, 226, 227, 231, 239], "haven": [21, 64, 130], "yet": [21, 22, 44, 64, 68, 90, 163, 164], "valid": [21, 29, 35, 40, 43, 44, 67, 68, 71, 83, 86, 90, 95, 125, 158, 163, 165, 168, 169, 170, 174, 175, 176, 186, 217, 218, 226, 229, 230, 234, 238], "green": [21, 31, 51, 56, 62, 82, 86, 100, 104, 105, 106, 109, 136, 148, 149, 170, 175, 228], "distclean": 21, "pass": [21, 82, 96, 131, 138, 163, 164, 167, 168, 169, 170, 171, 173, 174, 175, 176, 191, 207, 223], "pyarg": 21, "moment": [21, 163, 170], "lot": [21, 36, 59, 83, 131, 142, 169, 170, 252], "autodoc": 21, "wheel": [21, 22, 137, 221, 222, 231, 233, 234, 235, 237], "builder": [21, 22], "yml": [21, 219], "trigger": [21, 164, 175, 224], "interfac": [21, 35, 76, 86, 96, 134, 141, 145, 155, 157, 158, 163, 164, 166, 170, 172, 176, 192, 219, 225, 229, 233, 234], "macpython": 21, "privileg": 21, "trick": [21, 170, 176], "pypi": 21, "until": [21, 35, 71, 76, 86, 89, 157, 163, 170, 171], "meson": [21, 22, 145, 237], "version_util": 21, "correct": [21, 44, 51, 52, 56, 57, 61, 73, 77, 80, 88, 116, 119, 131, 142, 153, 158, 163, 164, 165, 166, 168, 169, 175, 176, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 234, 237, 238, 247, 248], "isreleas": 21, "latter": [21, 36, 74, 155, 163], "continu": [21, 22, 35, 40, 44, 68, 95, 146, 157, 158, 170, 174, 219, 225, 238], "artifact": [21, 51, 73, 152, 163, 165, 166, 176], "built": [21, 22, 55, 72, 89, 96, 163, 168, 169, 174], "sdist": [21, 235], "twine": 21, "dist": [21, 100, 113, 163, 164, 174, 176, 177, 184], "annot": [21, 51, 237], "mainten": [21, 218, 231], "further": [21, 22, 34, 38, 39, 62, 66, 82, 83, 94, 108, 163, 170, 171, 174, 249], "substanti": [21, 29, 53, 69, 94, 174], "maint": [21, 217, 219, 225, 226, 228, 229, 230, 232, 234, 235, 237], "_version_extra": 21, "bump": [21, 234, 237], "_version_micro": 21, "restor": [21, 44, 68, 89, 95, 151, 158, 161, 170, 176, 197, 199, 217, 219, 225, 226, 234, 238], "_version_minor": 21, "strategi": [21, 56, 62, 71, 73, 74, 83, 84, 85, 89, 94, 96, 97, 104, 123, 138, 141, 146, 163, 170, 176, 214, 247, 248], "info": [21, 64, 80, 98, 146, 164, 168, 169, 174, 176, 177, 217, 222, 223, 226, 231, 233], "seen": [21, 24, 83, 86, 102, 164, 170, 245], "spuriou": [21, 25, 83, 94, 99, 170, 174], "By": [21, 24, 25, 36, 43, 55, 64, 76, 78, 84, 89, 94, 98, 111, 112, 116, 137, 141, 143, 149, 163, 164, 169, 170, 171, 172, 174, 175, 241, 245], "usernam": 21, "password": 21, "field": [21, 24, 34, 43, 66, 82, 84, 94, 100, 104, 116, 142, 155, 156, 157, 163, 164, 165, 169, 171, 172, 174, 175, 176, 179, 180, 200, 218, 219, 224, 241, 242], "ex": [21, 170, 174, 176, 212], "obvious": [21, 78], "admin": 21, "hand": [21, 69, 73, 159, 163], "egg": 21, "dmg": [21, 225], "mpkg": [21, 225], "permiss": [21, 164, 165, 171], "disk": [21, 56, 64, 134, 142, 164, 165, 168, 173, 175, 176, 181, 182, 234], "build_dmg": 21, "box": [21, 168, 171, 174, 176, 207, 212, 221, 237], "script": [21, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 146, 176, 196, 207, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 246, 252], "server": 21, "bic": [21, 247, 248], "berkelei": [21, 23, 159], "edu": [21, 51, 64, 134, 142, 165, 174, 247, 248], "bdist_mpkg": 21, "reown_mpkg": 21, "announc": [21, 222], "With": [21, 64, 81, 83, 89, 98, 134, 163, 170, 222, 239], "fear": 21, "trembl": 21, "notabl": 22, "broader": [22, 240], "evolv": 22, "outlin": [22, 173], "usag": [22, 38, 75, 146, 158, 169, 170, 176, 216, 226, 237], "dynam": [22, 163, 167, 171], "strive": 22, "compon": [22, 39, 50, 52, 53, 72, 73, 80, 82, 83, 89, 121, 143, 151, 163, 164, 166, 168, 170, 172, 174, 176, 189, 190, 219, 221, 222, 228], "significantli": [22, 49, 72, 107, 123, 174], "nevertheless": [22, 74], "retain": [22, 76, 86, 164, 171, 175, 176], "older": [22, 145, 170, 219, 221, 222, 224, 226], "toolset": 22, "boundari": [22, 24, 40, 163, 167, 171, 174, 175, 176, 209], "capabl": [22, 113, 134, 164, 170, 230], "moder": 22, "conserv": 22, "approach": [22, 34, 36, 55, 59, 66, 67, 74, 82, 83, 86, 89, 94, 102, 104, 105, 106, 157, 163, 166, 170, 171, 173, 176, 199], "stanc": 22, "constraint": [22, 33, 38, 44, 68, 71, 73, 83, 84, 90, 95, 145, 157, 158, 161, 164, 165, 170, 226, 235, 236, 238], "illustr": [22, 25, 51, 56, 70, 71, 72, 73, 78, 80, 83, 84, 85, 86, 89, 91, 94, 122, 151, 163, 164, 170, 172, 235, 246], "foremost": 22, "along": [22, 24, 25, 31, 34, 36, 44, 66, 72, 73, 78, 83, 100, 123, 128, 131, 138, 141, 142, 148, 155, 157, 161, 163, 164, 166, 167, 168, 170, 171, 173, 174, 175, 176, 231, 250], "sphinx_design": 22, "sphinxcontrib": 22, "bibtex": 22, "galleri": [22, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 145, 158, 159, 219, 225, 228, 236, 237, 238, 239], "pydata": [22, 237], "grg": 22, "theme": [22, 145, 175, 237], "guidanc": 22, "spec": [22, 249], "2018": [22, 31, 44, 51, 53, 73, 82, 85, 128, 147, 148, 159, 161, 165, 166, 170, 176, 202, 221, 222, 223, 229, 247, 248], "py2": 22, "py3": [22, 225], "mid": [22, 29, 59, 62, 67, 163, 174], "2020": [22, 37, 44, 55, 72, 73, 82, 83, 100, 108, 124, 125, 147, 159, 161, 164, 165, 166, 167, 169, 170, 171, 173, 176, 182, 183, 192, 208, 229, 230, 231, 232], "2023": [22, 44, 73, 82, 100, 145, 149, 161, 163, 169, 176, 184, 229, 235, 236, 237], "2024": [22, 82, 165, 230], "bound": [22, 25, 82, 163, 164, 168, 170, 171, 172, 174, 176, 206, 207, 212, 219, 222, 230], "least": [22, 44, 55, 73, 82, 84, 85, 88, 89, 94, 96, 105, 161, 163, 164, 167, 169, 170, 171, 174, 176, 197, 199, 230, 241, 242, 252], "four": [22, 44, 85, 86, 92, 121, 157, 161, 163, 164, 166, 169, 170], "preced": 22, "necessit": 22, "sole": 22, "23": [22, 25, 32, 35, 36, 40, 44, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 92, 126, 129, 145, 155, 159, 161, 163, 170, 224, 225, 236, 237], "24": [22, 25, 30, 32, 33, 34, 35, 36, 37, 40, 44, 53, 60, 62, 72, 73, 74, 79, 82, 83, 84, 85, 86, 111, 159, 161, 163, 164, 170, 171, 220, 221, 222, 224, 226], "26": [22, 25, 30, 35, 36, 37, 40, 47, 48, 53, 59, 62, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 98, 104, 105, 106, 114, 129, 156, 159, 163, 170, 171, 219, 224, 226], "21": [22, 24, 25, 27, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 88, 128, 129, 136, 159, 170, 218, 219, 224, 236, 247, 248], "27": [22, 24, 25, 32, 33, 35, 36, 40, 53, 54, 55, 62, 65, 66, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85, 86, 93, 95, 151, 165, 166, 170, 220, 224, 230, 247, 248], "exhaust": 22, "architectur": [22, 86, 170, 175, 228], "vari": [22, 44, 53, 59, 82, 86, 161, 166, 170], "transpil": 22, "especi": [22, 60, 174], "channel": [22, 59, 105, 106, 163, 164, 168, 169, 170, 171, 175, 176, 203, 240], "anaconda": [22, 219, 220, 222, 231], "tri": [22, 108, 163, 164, 167, 175], "below": [22, 25, 31, 40, 43, 44, 51, 52, 53, 55, 68, 72, 73, 74, 78, 80, 84, 85, 113, 126, 128, 130, 135, 137, 143, 147, 157, 163, 164, 168, 169, 170, 172, 173, 174, 176, 179, 223, 245, 247, 252], "minim": [22, 56, 83, 91, 99, 102, 122, 163, 164, 169, 170, 222, 234, 237], "secondari": 22, "untest": 22, "aix": 22, "alpin": 22, "freebsd": 22, "msvc": [22, 226], "studio": [22, 219], "vc142": 22, "regularli": [22, 176, 214, 215, 230], "x86": 22, "22": [22, 25, 33, 35, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 92, 96, 97, 108, 115, 159, 163, 166, 170, 224, 227, 229, 234], "04": [22, 25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 95, 170, 236, 237], "cibuildwheel": 22, "arm": [22, 217], "docker": 22, "arm64": [22, 235], "monterei": 22, "microsoft": [22, 23], "en": [22, 23, 113, 143, 164, 170, 171, 176, 222], "whatev": [22, 174], "design": [22, 29, 44, 55, 56, 72, 86, 90, 134, 142, 145, 161, 163, 164, 166, 168, 169, 170, 174, 223, 229], "numpydoc": [22, 176], "implic": 22, "seamlessli": 22, "pythonwheel": 22, "stabl": [22, 126, 170, 226, 234], "runner": 22, "cirru": 22, "vm": [22, 218], "hood": 22, "cirruslab": 22, "team": [23, 159, 171], "individu": [23, 85, 98, 99, 123, 125, 164, 169, 170, 172, 174, 219, 235], "indiana": 23, "univers": [23, 34, 54, 66, 85, 146, 157, 165, 170, 172, 174, 176, 214, 247, 248], "IN": [23, 164, 170, 171, 176], "usa": 23, "washington": [23, 51, 64, 134, 165], "birmingham": 23, "uk": [23, 164, 170], "databrick": 23, "san": [23, 164, 176, 214], "francisco": [23, 176, 214], "ca": [23, 142, 159, 170, 247, 248], "omar": [23, 217, 218, 219, 226, 227, 235], "marc": [23, 134, 217, 218, 219, 220, 221, 222, 226, 227, 228], "alexandr": [23, 134, 217, 218, 219, 220, 221, 222, 226, 227, 228], "c\u00f4t\u00e9": [23, 134, 170, 217, 218, 219, 220, 221, 222, 227, 228], "research": [23, 79, 142, 165, 230, 254], "montreal": [23, 82, 159, 165, 170, 175, 176, 203], "qc": 23, "serg": [23, 134, 219, 220, 221, 222, 223, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "koudoro": [23, 108, 124, 125, 134, 147, 171, 173, 175, 176, 182, 183, 203, 208, 219, 220, 221, 222, 223, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "gabriel": [23, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 233, 234, 236, 237], "girard": [23, 24, 25, 31, 35, 40, 157, 166, 174, 176, 215, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 233, 234, 236, 237], "swiss": 23, "feder": 23, "institut": [23, 50, 54, 151, 165, 166, 222], "technologi": [23, 50, 54, 151, 166, 170, 239], "epfl": [23, 92, 247, 248], "lausann": 23, "ch": [23, 92, 247, 248], "cambridg": [23, 34, 66, 85, 146, 157, 164, 170, 176, 214], "matthieu": [23, 218, 219, 220, 225, 226], "dumont": [23, 218, 219, 220, 225, 226], "imeka": 23, "sherbrook": [23, 50, 165, 247, 248], "ranveer": [23, 219, 220], "aggarw": [23, 175, 176, 203, 219, 220], "hyderabad": 23, "telangana": 23, "india": 23, "wonder": [23, 135], "retir": [23, 217, 222], "formerli": 23, "mrc": 23, "cognit": 23, "scienc": [23, 73, 164, 174], "maxim": [23, 96, 97, 99, 102, 104, 116, 156, 163, 164, 166, 167, 170, 171, 174, 176, 177, 179, 191, 195, 196, 198, 202, 209, 211, 217, 224, 225, 226, 227], "california": [23, 176, 214], "christoph": [23, 164, 217, 218, 219, 221, 222, 223, 225, 226, 228, 230], "houd": [23, 174, 217, 218, 219, 221, 222, 223, 225, 226, 228, 230], "francoi": [23, 222, 223, 228, 229, 230, 234, 235, 236, 237], "rh\u00e9ault": 23, "medic": [23, 54, 55, 62, 76, 81, 86, 89, 92, 93, 96, 97, 100, 116, 145, 146, 151, 158, 163, 165, 166, 170, 171, 175, 176, 203, 204, 219, 220, 222, 245, 247, 248], "center": [23, 25, 29, 55, 71, 82, 85, 89, 96, 102, 128, 131, 134, 136, 142, 151, 156, 157, 163, 164, 166, 168, 170, 171, 172, 174, 176, 178, 196, 214, 215, 217, 229], "umc": [23, 25], "utrecht": 23, "nl": [23, 170], "michael": [23, 217, 224, 226, 237], "paquett": [23, 217, 224, 226], "max": [23, 33, 44, 58, 62, 64, 67, 70, 78, 86, 96, 97, 104, 109, 126, 135, 137, 146, 157, 161, 164, 166, 167, 169, 170, 171, 174, 177, 224, 226, 241], "planck": 23, "leipzig": 23, "de": 23, "massachusett": 23, "hospit": [23, 247, 248], "ma": [23, 73, 128], "emanuel": [23, 224], "laboratori": 23, "nilab": 23, "trento": 23, "IT": 23, "yaroslav": [23, 219, 224, 236], "halchenco": 23, "pb": 23, "depart": 23, "dartmouth": 23, "nh": 23, "emmanuel": [23, 225, 235, 237], "caruy": [23, 38, 89, 170, 176, 225], "recherch": 23, "informatiqu": 23, "syst\u00e8m": 23, "al\u00e9atoir": 23, "irisa": 23, "renn": 23, "fr": [23, 170], "sylvain": [23, 166, 176, 191, 225], "merlet": [23, 44, 92, 161, 170, 225], "inria": [23, 170], "sophia": [23, 170, 172], "antipoli": [23, 170, 172], "erick": 23, "ziegler": [23, 225], "universit\u00e9": 23, "li\u00e8g": 23, "kimberli": [23, 170, 225], "chan": [23, 69, 170, 225], "stanford": [23, 24, 25, 29, 34, 39, 54, 62, 66, 90, 96, 97, 104, 106, 131, 165, 217, 227, 231, 247, 248], "chantal": [23, 227], "tax": [23, 71, 73, 89, 170, 227], "cardiff": 23, "demian": [23, 86, 165, 222, 226], "mauro": [23, 217, 221, 225, 226], "zucchelli": [23, 79, 170, 217, 221, 225, 226], "franc": 23, "rutger": [23, 83, 86, 165, 170, 219, 220, 222], "fick": [23, 24, 25, 44, 83, 86, 161, 165, 166, 170, 174, 219, 220, 222, 247, 248], "gregori": [23, 218, 219, 226, 230, 231], "lee": [23, 169, 170, 174, 218, 219, 226, 230, 231], "cincinnati": 23, "children": [23, 94, 163, 164, 166, 170, 174, 176, 177, 202, 209], "oh": 23, "endolith": [23, 224], "york": 23, "matthia": [23, 225, 226], "ekman": [23, 225, 226], "donder": 23, "behaviour": [23, 73, 111, 163, 170, 174, 224], "nijmegen": 23, "andrew": [23, 147, 226], "lawrenc": [23, 226, 229], "kesshi": [23, 219, 221, 222, 223, 226], "jordan": [23, 126, 128, 174, 219, 221, 222, 223, 226], "maria": [23, 224], "luisa": [23, 224], "mandelli": [23, 224], "adam": [23, 169, 228], "rybinski": 23, "jagiellonian": 23, "krakow": 23, "qiyuan": [23, 227], "tian": [23, 227], "jon": [23, 219, 220, 221, 222, 223, 228, 229, 230, 231, 232, 234, 235, 237], "haitz": [23, 219, 220, 221, 222, 223, 228, 229, 230, 231, 232, 234, 235, 237], "legarreta": [23, 219, 220, 221, 222, 223, 228, 229, 230, 231, 232, 234, 235, 237], "gorro\u00f1o": [23, 220, 221, 222, 223, 228, 229, 230, 231, 232, 234, 235, 237], "brigham": 23, "women": 23, "harvard": [23, 174], "school": [23, 159], "boston": 23, "champalimaud": 23, "programm": 23, "centr": [23, 97, 142, 164, 165], "unknown": [23, 24, 170], "lisbon": 23, "pt": [23, 73, 130, 174, 175, 228], "stephan": [23, 218, 219], "meester": [23, 24, 25, 166, 174, 218, 219], "eindhoven": 23, "himanshu": [23, 218], "mishra": [23, 218], "indian": 23, "karaghpur": 23, "alexand": [23, 44, 79, 80, 85, 161, 165, 170], "gauvin": [23, 217, 219], "oscar": [23, 217], "esteban": [23, 217], "bishakh": [23, 218, 219], "ghosh": [23, 218, 219], "nation": [23, 247, 248], "durgapur": 23, "dimitri": [23, 217, 237], "rozaki": [23, 217], "tomotech": 23, "athen": 23, "gr": [23, 73], "rohan": [23, 217], "prinja": [23, 217], "bombai": 23, "sagun": [23, 218], "pai": [23, 218], "vatsala": [23, 218], "swaroop": [23, 218], "mombai": 23, "shahnawaz": [23, 219], "ahm": [23, 219], "birla": 23, "pilani": 23, "goa": 23, "nil": [23, 219, 221], "goyett": [23, 219, 221], "scott": [23, 228], "trinkl": [23, 228], "chicago": 23, "il": 23, "kevin": [23, 228], "sitek": [23, 228], "mit": [23, 163], "mcgovern": 23, "derek": [23, 229, 230, 234], "pisner": [23, 229, 230, 234], "texa": 23, "austin": 23, "ross": [23, 229], "john": [23, 233, 237], "hopkin": 23, "larson": [23, 229, 231, 234, 235, 237], "jakob": [23, 222], "wasserth": [23, 222], "german": 23, "cancer": 23, "bramsh": [23, 222, 223, 230, 231, 232, 233, 236, 237], "qamar": [23, 222, 223, 230, 231, 232, 233, 236, 237], "chandio": [23, 100, 108, 124, 125, 147, 149, 163, 171, 173, 175, 176, 182, 183, 184, 203, 208, 233], "javier": [23, 134, 222, 234, 236, 237], "guaj": [23, 134, 175, 176, 203, 222, 234, 236, 237], "shreya": [23, 82, 170, 221, 222, 223, 228, 229, 232, 233, 234, 235], "fadnavi": [23, 44, 55, 82, 161, 166, 169, 170, 175, 176, 192, 193, 203, 221, 222, 223, 228, 229, 232, 233, 234, 235], "matt": [23, 96, 97, 163, 220, 222, 228], "cieslak": [23, 79, 104, 165, 222, 228], "pennsylvania": 23, "sven": [23, 219], "dorkenwald": [23, 219], "princeton": 23, "boundless": 23, "heart": [23, 97], "everyon": 23, "anywher": [23, 138, 141, 170], "world": [23, 29, 49, 58, 60, 78, 107, 130, 134, 135, 142, 163, 168, 171, 174, 175], "join": [23, 29, 64, 79, 80, 96, 97, 100, 104, 123, 137, 225], "area": [23, 25, 34, 39, 40, 66, 70, 78, 82, 100, 108, 134, 137, 147, 163, 164, 168, 169, 170, 171, 174, 176, 203], "focu": [23, 29, 82, 94], "demo": [24, 25, 58, 237], "fod": [24, 25, 33, 36, 37, 165, 167, 170, 218, 220, 228], "meesters2016": [24, 25], "pde": [24, 25, 166, 174], "framework": [24, 55, 59, 79, 82, 83, 86, 87, 88, 92, 98, 108, 111, 112, 116, 124, 125, 153, 158, 166, 170, 171, 172, 173, 175, 176, 182, 183, 203, 208, 220, 221, 222, 223, 226, 228, 230, 245], "portegies2015a": 24, "hardi": [24, 25, 29, 34, 39, 44, 66, 84, 90, 92, 96, 97, 104, 106, 131, 159, 161, 165, 166, 167, 170, 174, 176, 245, 247, 248], "elong": 24, "structur": [24, 29, 34, 44, 51, 53, 55, 62, 66, 67, 72, 78, 86, 97, 104, 110, 115, 131, 134, 138, 141, 145, 147, 148, 149, 153, 155, 157, 165, 166, 170, 171, 174, 227, 234, 238, 247, 248], "junction": 24, "nois": [24, 36, 38, 44, 50, 54, 55, 57, 61, 62, 73, 85, 88, 89, 94, 121, 122, 151, 158, 165, 167, 169, 170, 172, 174, 176, 177, 189, 190, 191, 197, 199, 212, 217, 220, 224, 226, 228, 233, 238], "small": [24, 25, 29, 33, 36, 50, 60, 70, 71, 78, 79, 82, 86, 88, 89, 90, 94, 97, 99, 102, 111, 112, 113, 114, 131, 155, 162, 163, 164, 165, 166, 169, 170, 171, 174, 175, 176, 201, 203, 208, 211, 217, 219, 220, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 237], "incoher": [24, 44, 68, 95, 153, 170, 176, 200, 238], "hypo": 24, "ellipt": [24, 170], "2nd": [24, 72, 146, 237], "domain": [24, 25, 29, 105, 106, 113, 163, 176, 229], "coupl": [24, 69, 105, 176, 226, 230], "posit": [24, 25, 29, 35, 36, 40, 44, 67, 68, 70, 78, 83, 85, 86, 92, 95, 108, 109, 111, 124, 130, 131, 134, 135, 137, 142, 148, 149, 155, 158, 163, 164, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 216, 221, 222, 226, 234, 235, 238], "mathbb": [24, 55, 87, 88, 99, 164, 170], "rtime": 24, "carri": [24, 170], "flat": [24, 25, 51, 53, 55, 74, 80, 85, 164, 170, 172], "geometr": [24, 44, 143, 161, 163, 170, 222], "differenti": [24, 72, 82, 163, 170, 174], "notion": [24, 171], "neighbor": [24, 25, 89, 108, 163, 164, 167, 170, 171, 174], "denot": [24, 29, 82, 87, 88, 99, 142, 163, 164, 170, 245], "angular": [24, 44, 77, 79, 92, 119, 121, 161, 164, 166, 167, 170, 172, 174, 247, 248], "w": [24, 51, 71, 73, 79, 89, 90, 96, 97, 144, 152, 163, 164, 168, 169, 170, 172, 173, 174, 176, 179, 221, 226], "evolut": [24, 82, 105, 163, 164, 170, 177, 226], "geq": 24, "given": [24, 25, 72, 83, 84, 86, 87, 88, 89, 94, 96, 99, 109, 113, 125, 128, 137, 144, 156, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 203, 209, 217, 222, 223, 241, 245], "begin": [24, 33, 35, 36, 39, 40, 56, 72, 73, 78, 87, 88, 89, 111, 113, 122, 131, 143, 155, 157, 170, 176, 230, 240, 241, 242, 245], "frac": [24, 72, 73, 78, 87, 88, 99, 142, 144, 155, 164, 170, 171, 172, 174, 245, 246], "cdot": [24, 29, 144, 170, 171, 174, 243], "nabla": 24, "44": [24, 25, 32, 33, 35, 36, 40, 53, 70, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 93, 108, 109, 111, 124, 165, 170], "delta_": [24, 86], "coeffici": [24, 44, 51, 54, 57, 61, 74, 79, 82, 84, 86, 91, 93, 152, 155, 158, 163, 164, 165, 166, 167, 169, 170, 172, 174, 175, 176, 195, 196, 225, 238, 245], "goe": [24, 84, 86, 175], "laplac": [24, 170], "beltrami": [24, 170], "condit": [24, 35, 40, 88, 99, 116, 164, 170, 171, 174, 176, 220, 222, 226], "noisi": [24, 50, 52, 62, 83, 94, 151, 155, 166, 169, 170, 171, 172], "equat": [24, 29, 52, 73, 87, 142, 164, 166, 170, 171, 172, 174, 176, 192, 219, 241, 242], "shift": [24, 51, 163, 164, 166, 168, 170, 176, 192, 202, 233], "twist": [24, 166], "convolut": [24, 89, 166, 169, 170], "ast_": 24, "kernel": [24, 25, 73, 89, 90, 96, 105, 163, 166, 169, 170, 174, 176, 179, 184, 234], "p_t": [24, 25], "int_": [24, 164, 170, 172, 245], "t_": [24, 170], "prime": [24, 82, 174], "r_": [24, 86, 170], "3d": [24, 29, 31, 34, 44, 50, 52, 53, 54, 55, 66, 68, 69, 73, 84, 85, 94, 95, 97, 99, 101, 103, 121, 130, 134, 136, 137, 142, 145, 151, 155, 161, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 189, 190, 202, 213, 217, 218, 222, 230, 234, 235, 238], "rotat": [24, 25, 73, 86, 96, 131, 143, 144, 155, 156, 163, 164, 168, 170, 171, 172, 174, 176, 178, 221, 227, 228], "euclidean": [24, 144, 163, 164, 170, 171, 174, 246], "stochast": [24, 55, 170], "interpret": [24, 74, 78, 85, 86, 94, 131, 163, 164, 170, 172, 174, 219, 223], "duitsandfranken2011": [24, 25], "limit": [24, 36, 71, 73, 82, 85, 155, 163, 164, 167, 168, 169, 170, 171, 175, 176, 221, 222, 234], "obtain": [24, 25, 37, 40, 53, 55, 59, 70, 71, 73, 76, 79, 80, 81, 82, 84, 85, 88, 96, 98, 104, 113, 121, 142, 154, 155, 163, 165, 167, 169, 170, 171, 174, 175, 241], "accumul": 24, "random": [24, 25, 36, 39, 53, 55, 56, 69, 84, 85, 91, 108, 114, 116, 122, 124, 125, 130, 135, 157, 158, 163, 164, 166, 169, 170, 171, 172, 175, 176, 177, 189, 190, 203, 217, 218, 219, 222, 223, 228, 229, 234, 237], "walk": [24, 96, 147, 151, 152, 154, 155, 156, 157], "particl": [24, 28, 30, 44, 82, 86, 153, 155, 158, 174, 176, 215, 221, 238], "randomli": [24, 82, 125, 155, 167, 171, 174], "contour": [24, 102, 128, 175, 176, 203, 219, 221, 222], "2d": [24, 25, 44, 94, 97, 101, 103, 106, 142, 151, 161, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 219, 220, 224, 235, 238], "motion": [24, 44, 57, 61, 68, 94, 95, 153, 158, 163, 164, 165, 170, 176, 200, 234, 237, 238], "shown": [24, 25, 51, 53, 71, 80, 83, 85, 88, 94, 121, 146, 147, 163, 170, 175, 176, 203], "adapt": [24, 25, 38, 44, 51, 54, 57, 61, 80, 82, 89, 104, 146, 151, 155, 166, 170, 174, 175, 176, 191, 203, 219, 221, 230, 238], "analyt": [24, 44, 52, 68, 81, 93, 95, 108, 124, 125, 153, 155, 163, 166, 167, 170, 171, 173, 176, 182, 183, 208, 230, 238, 245], "formula": [24, 142, 164, 170, 241, 242, 246], "approxim": [24, 62, 69, 82, 83, 87, 88, 151, 163, 164, 166, 170, 172, 174, 242], "portegies2015b": [24, 166, 174], "gradient_t": [24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 50, 52, 53, 56, 58, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 92, 93, 94, 104, 119, 121, 122, 126, 128, 131, 136, 170, 172, 177, 221, 250], "get_fnam": [24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 87, 89, 90, 92, 93, 94, 104, 105, 106, 107, 111, 112, 113, 114, 116, 119, 121, 126, 128, 131, 136, 163, 169, 171, 172, 177, 229], "enhancement_kernel": [24, 25, 177], "enhancementkernel": [24, 25, 174, 177], "shift_twist_convolut": [24, 177], "convolv": [24, 177], "load_nifti_data": [24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 66, 82, 105, 116, 126, 128, 131, 136, 137, 177, 229], "read_bvals_bvec": [24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 50, 52, 53, 58, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 87, 89, 90, 92, 93, 94, 104, 121, 126, 128, 131, 136, 172, 177, 217, 221, 225, 231, 250], "add_nois": [24, 177], "odf_sh_to_sharp": [24, 177], "shm": [24, 25, 32, 33, 34, 36, 37, 46, 66, 67, 70, 84, 91, 126, 128, 131, 136, 160, 167, 176, 177, 217, 222, 224, 225, 226, 230, 237, 245], "sf_to_sh": [24, 91, 177], "sh_to_sf": [24, 91, 177], "constrainedsphericaldeconvmodel": [24, 25, 32, 33, 35, 36, 37, 40, 47, 69, 71, 177], "dataset": [24, 25, 29, 43, 44, 47, 49, 50, 51, 52, 53, 54, 55, 57, 59, 61, 62, 64, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 93, 94, 96, 97, 100, 104, 106, 107, 114, 116, 121, 126, 130, 131, 134, 135, 136, 137, 142, 146, 149, 151, 152, 153, 154, 155, 157, 158, 162, 163, 165, 166, 168, 169, 170, 171, 174, 176, 194, 209, 221, 222, 224, 225, 226, 228, 229, 230, 231, 234, 235, 237, 238, 239, 249, 250, 252, 253], "150": [24, 25, 55, 71, 74, 82, 83, 89, 90, 172], "2000": [24, 25, 44, 51, 53, 64, 71, 79, 82, 83, 84, 85, 89, 90, 146, 161, 164, 165, 170, 174, 176, 201, 229, 247, 248], "rician": [24, 38, 50, 52, 54, 59, 89, 121, 122, 165, 166, 170, 172, 176, 191], "fiber": [24, 26, 27, 29, 32, 33, 34, 36, 37, 38, 62, 66, 67, 68, 69, 73, 74, 75, 77, 78, 82, 84, 85, 90, 94, 95, 99, 110, 115, 119, 121, 123, 131, 153, 155, 158, 163, 166, 167, 169, 170, 172, 173, 174, 176, 196, 214, 219, 222, 228, 231, 234, 235, 237, 238, 239, 247, 248], "hardi_fnam": [24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 55, 62, 66, 67, 69, 70, 71, 78, 89, 90, 94, 104, 106, 126, 128, 131, 136], "hardi_bval_fnam": [24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 55, 62, 66, 67, 69, 70, 71, 78, 89, 90, 94, 104, 106, 126, 128, 131, 136], "hardi_bvec_fnam": [24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 55, 62, 66, 67, 69, 70, 71, 78, 89, 90, 94, 104, 106, 126, 128, 131, 136], "stanford_hardi": [24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 55, 62, 66, 67, 69, 70, 71, 78, 89, 90, 94, 104, 106, 126, 128, 131, 136, 151, 155, 157, 247, 248], "bval": [24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 50, 51, 52, 53, 55, 56, 58, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 92, 93, 94, 96, 121, 122, 126, 128, 131, 136, 146, 151, 154, 155, 163, 164, 165, 166, 168, 170, 172, 176, 177, 192, 194, 200, 201, 204, 212, 217, 224, 231, 236, 241, 250], "bvec": [24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 50, 52, 53, 56, 58, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 92, 93, 94, 96, 121, 122, 126, 128, 131, 136, 146, 151, 154, 155, 163, 164, 165, 166, 168, 170, 172, 174, 176, 177, 188, 189, 194, 195, 196, 199, 201, 204, 212, 221, 226, 228, 230, 241, 250], "gtab": [24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 50, 51, 52, 53, 56, 58, 62, 64, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 104, 119, 121, 122, 126, 128, 131, 136, 163, 164, 165, 166, 169, 170, 172, 174, 222, 231, 233, 236, 250], "b0_slice": 24, "b0_mask": [24, 49, 62, 84, 89, 105, 107], "rng": [24, 25, 56, 69, 85, 91, 108, 122, 124, 125, 130, 135, 163, 171, 172, 174, 177, 230], "default_rng": [24, 25, 56, 69, 85, 91, 122, 124, 125, 130, 135, 174], "data_noisi": 24, "noise_typ": [24, 172], "pad": [24, 25, 97, 163, 166, 169, 170, 175, 177], "larger": [24, 36, 50, 53, 71, 74, 89, 99, 102, 108, 114, 121, 153, 163, 164, 167, 169, 170, 172, 174, 176, 179, 217, 221, 252], "region": [24, 25, 29, 34, 35, 40, 62, 66, 69, 71, 73, 74, 80, 82, 85, 89, 94, 97, 108, 128, 130, 131, 165, 166, 170, 174, 237, 247, 248], "data_smal": [24, 25, 58, 70, 71, 79, 80, 83, 89, 90, 92], "25": [24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 53, 66, 70, 71, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 93, 102, 105, 108, 126, 128, 130, 136, 137, 156, 157, 163, 165, 167, 169, 170, 171, 172, 174, 176, 224], "40": [24, 25, 29, 33, 35, 36, 37, 38, 39, 40, 44, 51, 53, 60, 62, 69, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 89, 92, 102, 105, 108, 109, 124, 126, 130, 131, 161, 163, 164, 167, 170, 171, 176, 197, 224, 247, 248], "65": [24, 25, 32, 33, 35, 36, 37, 40, 53, 55, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 102, 114, 170, 172, 176, 197, 224], "80": [24, 25, 32, 35, 36, 37, 40, 50, 53, 71, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85, 86, 89, 93, 128, 130, 135, 155, 165, 224, 227, 247, 248], "data_noisy_smal": 24, "respons": [24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 47, 66, 68, 69, 84, 90, 95, 121, 155, 158, 165, 170, 171, 174, 176, 196, 217, 225, 226, 227, 228, 230, 231, 235, 238], "ratio": [24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 62, 66, 69, 71, 83, 89, 90, 142, 163, 169, 170, 171, 172, 174, 175, 176, 212], "roi_radii": [24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 66, 69, 71, 84, 89, 90, 170, 176, 196], "fa_thr": [24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 66, 69, 71, 89, 90, 155, 170, 176, 196], "csd_model_orig": 24, "csd_fit_orig": 24, "csd_shm_orig": 24, "shm_coeff": [24, 25, 33, 35, 36, 40, 84, 167, 168, 170, 177, 230], "csd_model_noisi": 24, "csd_fit_noisi": 24, "csd_shm_noisi": 24, "3087": [24, 73, 82], "00": [24, 25, 27, 30, 32, 33, 35, 36, 37, 40, 42, 43, 48, 53, 61, 65, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 92, 93, 95, 103, 106, 115, 117, 120, 129, 133, 135, 140, 238], "326": [24, 82, 83, 226], "3251": [24, 82], "01it": [24, 33, 35, 36, 37, 53, 72, 73, 74, 82, 83, 84, 85], "660": [24, 82, 85, 217], "3297": [24, 82], "30it": [24, 25, 32, 33, 35, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "1029": [24, 82, 219], "3471": [24, 82], "70it": [24, 25, 32, 35, 37, 40, 53, 71, 73, 74, 79, 80, 82, 83, 84, 85], "1471": [24, 82, 221], "3836": [24, 82], "76it": [24, 25, 35, 40, 72, 73, 74, 79, 80, 82, 83, 84, 85], "62": [24, 25, 32, 33, 35, 37, 40, 53, 67, 70, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 89, 146, 169, 170, 223, 224], "1919": [24, 82, 231], "4061": [24, 82], "09it": [24, 25, 35, 36, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85], "76": [24, 25, 35, 36, 40, 51, 53, 54, 69, 70, 72, 73, 74, 78, 79, 82, 83, 84, 85, 86, 93, 135, 152, 220, 224], "2341": [24, 82, 233], "4108": [24, 82, 84], "79it": [24, 35, 37, 40, 53, 72, 73, 74, 76, 82, 83, 84, 85], "90": [24, 25, 32, 33, 35, 36, 37, 40, 52, 53, 72, 73, 74, 77, 79, 80, 82, 83, 84, 85, 86, 89, 91, 92, 99, 119, 121, 122, 125, 167, 170, 172, 176, 214, 215, 224, 238], "2768": [24, 82, 236], "4156": [24, 74, 82, 84], "10it": [24, 25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85], "100": [24, 25, 29, 32, 33, 35, 36, 37, 40, 43, 44, 51, 53, 56, 58, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 91, 92, 93, 96, 97, 102, 104, 105, 114, 116, 119, 122, 123, 124, 126, 130, 161, 163, 165, 166, 170, 171, 172, 173, 174, 175, 176, 178, 224, 247, 248], "3941": [24, 25, 82], "64it": [24, 25, 32, 35, 36, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "412": [24, 76, 82, 83, 174, 226], "4096": [24, 82, 84], "82it": [24, 25, 32, 35, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "830": [24, 73, 218], "4136": [24, 25, 35, 82], "32it": [24, 33, 35, 36, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85], "41": [24, 25, 32, 33, 35, 37, 40, 46, 53, 72, 73, 74, 75, 79, 80, 82, 83, 84, 85, 86, 89, 93, 104, 105, 106, 114, 156, 158, 163, 166, 223, 224, 235], "1268": [24, 82, 219], "4240": [24, 82], "31it": [24, 32, 35, 36, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "55": [24, 25, 32, 33, 35, 36, 37, 40, 53, 71, 72, 73, 74, 78, 79, 82, 83, 84, 85, 86, 89, 90, 94, 134, 135, 137, 170, 218, 224], "1698": [24, 223], "4257": [24, 25, 82], "17it": [24, 25, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "69": [24, 25, 32, 33, 35, 37, 40, 46, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 98, 224], "2124": [24, 79, 230], "4175": [24, 82, 84], "97it": [24, 25, 32, 33, 35, 36, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "82": [24, 25, 33, 35, 36, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 114, 224], "2542": [24, 82, 234], "4171": [24, 82, 84], "00it": [24, 25, 35, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "96": [24, 25, 32, 35, 36, 37, 40, 53, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 93, 102, 146, 224], "2968": [24, 82, 237], "4194": [24, 82, 84], "4199": [24, 82], "98it": [24, 25, 35, 40, 72, 73, 74, 82, 83, 84, 85, 93], "inspir": [24, 25, 84, 171], "rodrigues2010": [24, 25], "lookup": [24, 25, 137, 166, 167, 174, 175], "discret": [24, 25, 36, 38, 46, 70, 83, 96, 156, 157, 163, 164, 165, 167, 170, 171, 174, 176, 178, 211, 224], "rotation": [24, 25, 83, 86, 164], "invari": [24, 25, 44, 68, 73, 83, 86, 95, 113, 155, 164, 166, 170, 171, 174, 175, 219, 238], "d33": [24, 25, 166], "d44": [24, 25, 166], "02": [24, 25, 27, 30, 32, 33, 35, 36, 37, 40, 43, 48, 53, 67, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 88, 93, 103, 106, 129, 170, 218, 219, 224, 231, 238], "delta": [24, 72, 142, 155, 164, 175, 176, 177, 201, 226, 235, 241, 243], "spike": 24, "get_orient": [24, 166, 177], "dtype": [24, 74, 102, 104, 105, 109, 135, 163, 164, 166, 168, 170, 172, 174, 175, 176, 177, 217, 224, 225, 228, 230, 235], "spike_shm_conv": 24, "get_spher": [24, 37, 39, 46, 67, 75, 77, 78, 79, 81, 83, 84, 89, 90, 91, 92, 119, 122, 170, 174, 177], "test_mod": [24, 166], "spike_sf_conv": 24, "model_kernel": 24, "odf_slic": [24, 67, 70, 71, 77, 78, 79, 83, 84, 89, 90, 91, 92, 119, 122, 222], "scale": [24, 67, 70, 71, 77, 78, 79, 83, 84, 85, 89, 90, 92, 94, 96, 102, 105, 119, 131, 144, 156, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 193, 201, 208, 223, 231, 234, 241, 243], "set_camera": [24, 25, 31, 67, 108, 109, 124, 130, 131, 135], "30": [24, 25, 32, 33, 35, 36, 38, 40, 44, 51, 53, 65, 69, 72, 73, 74, 76, 77, 79, 80, 82, 83, 84, 85, 86, 92, 93, 95, 108, 109, 114, 119, 124, 130, 135, 147, 148, 159, 161, 163, 164, 174, 176, 222, 224, 247, 248], "focal_point": [24, 25, 67, 108, 109, 124, 130, 131, 135], "view_up": [24, 25, 31, 67, 108, 109, 124, 131, 135], "record": [24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 56, 66, 67, 69, 70, 71, 77, 78, 79, 83, 84, 89, 90, 91, 92, 94, 99, 108, 109, 111, 112, 113, 114, 119, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 169, 171, 174, 175, 221, 222, 223, 226, 228, 230, 236], "out_path": [24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 56, 66, 67, 70, 71, 77, 78, 79, 83, 84, 89, 90, 91, 92, 94, 99, 108, 109, 111, 112, 113, 114, 119, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137], "png": [24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 49, 50, 51, 52, 53, 54, 55, 56, 59, 62, 64, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 175, 176, 223, 230, 237], "900": [24, 25, 34, 39, 66, 71, 82, 92, 99, 125, 130, 134, 136, 137, 218, 247, 248], "csd_shm_enh": 24, "sharpen": [24, 83, 170, 225], "csd_shm_enh_sharp": 24, "lambda_": [24, 170], "raw": [24, 50, 70, 75, 76, 78, 81, 93, 94, 142, 165, 167, 169, 226], "csd_sf_orig": 24, "csd_sf_noisi": 24, "csd_sf_enh": 24, "csd_sf_enh_sharp": 24, "normal": [24, 31, 76, 78, 80, 85, 89, 96, 97, 104, 105, 106, 113, 138, 144, 145, 156, 163, 164, 166, 167, 170, 171, 174, 175, 176, 177, 198, 226, 227, 230, 245], "amax": 24, "closer": [24, 98, 106, 156, 163, 231], "noiseless": [24, 94, 121, 122], "fodf_spheres_org": 24, "setposit": [24, 130, 137], "fodf_spher": [24, 71, 84, 89, 90], "fodf_spheres_enh": 24, "fodf_spheres_enh_sharp": 24, "bottom": [24, 25, 143], "snr": [24, 44, 53, 54, 57, 59, 61, 77, 85, 119, 121, 122, 151, 165, 170, 172, 219, 226, 230, 238], "sanguinetti": [24, 25, 166, 174, 217], "portegi": [24, 25, 166, 174], "duit": [24, 25, 166, 174], "2016": [24, 25, 32, 44, 51, 53, 55, 73, 74, 79, 82, 83, 84, 85, 87, 88, 146, 159, 161, 164, 165, 166, 170, 171, 174, 176, 189, 190, 218, 219, 229, 247, 248], "ismrm": [24, 69, 82, 98, 99, 159, 163, 166, 170, 171, 174, 175, 176, 203, 211, 226, 230], "confer": [24, 25, 163, 166, 170, 174], "improv": [24, 25, 29, 35, 40, 50, 53, 54, 84, 88, 89, 100, 104, 145, 149, 156, 158, 163, 164, 166, 170, 171, 174, 176, 217, 219, 220, 221, 224, 226, 228, 229, 230, 231, 232, 234, 235, 237], "flow": [24, 25, 163, 166, 170, 174, 176, 221, 222, 229, 235], "plo": [24, 25, 38, 39, 52, 53, 55, 89, 90, 123, 165, 166, 169, 170, 173, 174, 176, 189, 247, 248], "One": [24, 25, 29, 36, 38, 51, 55, 59, 62, 69, 71, 73, 78, 84, 89, 94, 123, 135, 146, 163, 164, 165, 166, 169, 170, 173, 174, 218, 220, 222, 235, 242, 252], "se": [24, 79, 80, 166], "neuroimag": [24, 31, 32, 35, 40, 44, 51, 53, 62, 64, 71, 72, 73, 74, 75, 76, 77, 80, 83, 84, 85, 87, 88, 89, 93, 94, 98, 99, 108, 119, 121, 123, 126, 145, 147, 148, 152, 155, 156, 157, 161, 163, 164, 165, 166, 167, 170, 171, 172, 174, 176, 189, 190, 196, 199, 205, 208, 211, 215, 217, 240, 245, 247, 248, 252, 253], "fifth": [24, 166], "intern": [24, 25, 36, 43, 53, 74, 82, 84, 108, 112, 114, 163, 166, 170, 171, 174, 175, 176, 203, 224, 237], "variat": [24, 29, 55, 89, 163, 166, 170, 171, 176], "franken": [24, 25, 166], "journal": [24, 25, 38, 39, 52, 53, 55, 82, 89, 90, 126, 134, 155, 159, 166, 169, 170, 172, 174, 176, 189, 199, 200, 247, 248], "92": [24, 25, 33, 35, 36, 40, 44, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 89, 161, 166, 170, 172, 226], "231": [24, 25, 82, 83, 164, 166], "264": [24, 25, 72, 82, 83, 166, 225], "rodrigu": [24, 25, 164], "romeni": [24, 25], "vilanova": [24, 25], "acceler": [24, 25, 44, 67, 89, 96, 152, 161, 163, 170, 176], "dw": [24, 25, 62, 67, 121, 128, 170], "eurograph": [24, 25], "workshop": [24, 25, 79, 92, 159, 170, 223, 237], "biologi": [24, 25, 131], "medicin": [24, 25, 53, 55, 56, 70, 73, 74, 79, 82, 84, 85, 89, 146, 155, 166, 170, 171, 172, 175, 176, 190, 203], "associ": [24, 25, 55, 72, 74, 80, 137, 163, 164, 165, 167, 168, 170, 171, 172, 174, 176, 192, 214, 215, 224, 245], "total": [24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 146, 164, 166, 169, 170, 172, 174, 176, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238], "59": [24, 25, 27, 30, 32, 33, 35, 37, 40, 51, 53, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 89, 224], "164": [24, 27, 73, 82, 83, 84, 225, 230], "jupyt": [24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 236], "notebook": [24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 219, 221, 228, 230, 236], "contextual_enhanc": [24, 27, 238], "ipynb": [24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141], "fbc": [25, 158, 174, 219, 231], "quantit": [25, 35, 40, 73, 79, 157, 170, 173, 174, 176, 199, 247, 248], "surround": [25, 86, 94, 163], "indic": [25, 31, 44, 46, 53, 62, 68, 70, 73, 74, 78, 79, 83, 94, 95, 105, 109, 111, 112, 113, 114, 125, 128, 155, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 195, 196, 198, 205, 207, 208, 225, 231, 233, 234, 238], "poorli": [25, 170], "densiti": [25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 66, 73, 78, 89, 104, 126, 127, 128, 129, 136, 155, 163, 170, 172, 174, 176, 214, 215, 226, 238, 243], "sum": [25, 29, 62, 71, 73, 75, 76, 81, 83, 84, 85, 87, 89, 90, 93, 102, 105, 111, 113, 143, 156, 163, 164, 165, 169, 170, 171, 172, 173, 174, 176, 179], "badli": [25, 62], "identifi": [25, 35, 38, 44, 62, 94, 131, 134, 157, 161, 163, 164, 165, 166, 168, 169, 170, 171, 174, 176, 204, 214, 241], "lfbc": [25, 174], "deviat": [25, 50, 54, 59, 62, 72, 86, 94, 105, 121, 151, 163, 166, 167, 170, 171, 172, 174, 175, 176, 179, 189, 190, 226, 234], "portegies2015": [25, 166], "5d": [25, 166, 168, 170], "induc": [25, 73, 170], "lift": 25, "whole": [25, 71, 86, 89, 128, 166, 171, 174, 247, 248], "rfbc": [25, 174], "averag": [25, 35, 50, 71, 73, 82, 85, 87, 88, 89, 90, 99, 100, 108, 142, 147, 148, 151, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 203, 219, 243, 247, 248], "found": [25, 35, 51, 83, 86, 88, 96, 126, 128, 138, 141, 145, 157, 158, 164, 166, 167, 170, 174, 176, 191, 192, 207, 217, 219, 236, 237, 240, 241, 242, 249], "load_nifti": [25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 49, 50, 52, 53, 54, 55, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 83, 84, 85, 87, 89, 90, 92, 93, 94, 96, 97, 104, 106, 107, 123, 126, 128, 131, 136, 137, 160, 163, 165, 177, 250], "csaodfmodel": [25, 32, 33, 34, 36, 37, 46, 66, 70, 126, 128, 131, 136, 177], "fbcmeasur": [25, 177], "label_fnam": [25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 126, 128, 131, 136], "stanford_label": [25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 126, 128, 131, 136, 247, 248], "t1_fname": [25, 29, 38, 39, 51, 54, 73, 74, 83, 84, 85, 106, 116, 128, 131], "stanford_t1": [25, 29, 38, 39, 54, 128, 131, 247, 248], "t1_data": [25, 29, 38, 39, 128, 131], "hemispher": [25, 36, 56, 85, 91, 100, 122, 149, 165, 167, 170, 177, 224], "coordin": [25, 29, 31, 49, 56, 58, 60, 64, 78, 82, 85, 89, 91, 107, 111, 121, 122, 123, 130, 131, 134, 135, 142, 144, 146, 155, 158, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 203, 217, 218, 228, 233, 235, 244, 245], "dshape": 25, "xa": 25, "xb": 25, "ya": 25, "yb": 25, "za": [25, 176], "zb": 25, "selectionmask": 25, "bool": [25, 59, 74, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 233, 234], "constant": [25, 33, 34, 44, 46, 66, 68, 82, 92, 95, 97, 142, 146, 153, 163, 170, 171, 172, 176, 195, 209, 225, 238, 241], "solid": [25, 33, 34, 44, 46, 66, 68, 95, 146, 153, 164, 170, 172, 176, 195, 238], "cda": 25, "csa": [25, 29, 32, 33, 36, 37, 44, 46, 70, 126, 136, 146, 147, 153, 157, 161, 170, 173, 176, 195, 196, 219, 241, 242], "fraction": [25, 34, 38, 39, 40, 66, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 94, 119, 121, 122, 123, 135, 158, 169, 170, 171, 172, 173, 174, 176, 197, 199, 200, 228, 247, 248], "anisotropi": [25, 34, 38, 39, 40, 66, 72, 75, 78, 79, 80, 83, 84, 85, 86, 87, 94, 123, 135, 158, 164, 170, 171, 173, 174, 176, 197, 199, 227, 228, 230, 247, 248], "gfa": [25, 32, 33, 34, 36, 37, 38, 39, 46, 66, 70, 75, 81, 126, 128, 136, 157, 167, 173, 176, 177, 224, 225, 226, 230], "restrict": [25, 34, 36, 43, 66, 72, 73, 74, 83, 86, 88, 128, 157, 168, 170, 172, 174, 239], "signific": [25, 34, 66, 83, 147, 170, 174], "interest": [25, 34, 56, 59, 62, 66, 73, 74, 94, 97, 104, 122, 128, 131, 151, 155, 163, 165, 166, 170, 174, 231, 237], "csa_model": [25, 32, 33, 34, 36, 37, 66, 126, 128, 136], "csa_peak": [25, 34, 66, 126, 128, 136, 147], "relative_peak_threshold": [25, 34, 39, 46, 47, 66, 70, 71, 81, 84, 89, 90, 126, 128, 131, 136, 167, 176, 225], "min_separation_angl": [25, 34, 39, 46, 47, 66, 70, 71, 81, 84, 89, 90, 126, 128, 131, 136, 167, 176], "probabilist": [25, 28, 29, 30, 32, 33, 35, 38, 44, 59, 126, 128, 136, 153, 158, 166, 167, 170, 172, 176, 214, 223, 225, 228, 238, 239], "known": [25, 34, 66, 69, 71, 80, 85, 90, 111, 113, 114, 157, 165, 170, 176, 197, 199, 250], "csd_model": [25, 32, 33, 35, 36, 37, 40, 47, 69, 71], "csd_fit": [25, 32, 33, 35, 36, 37, 40, 71], "csd_fit_shm": 25, "prob_dg": [25, 36, 38], "from_shcoeff": [25, 33, 35, 36, 40, 167, 177, 236], "max_angl": [25, 32, 33, 35, 36, 37, 38, 40, 167, 174, 176, 214, 215, 236], "69795": 25, "432": [25, 79, 82, 83, 226], "4303": [25, 74, 82], "81it": [25, 33, 35, 37, 40, 72, 73, 74, 79, 82, 83, 84, 85], "863": [25, 74, 82, 218], "4225": [25, 72, 79, 82], "1286": [25, 82, 220], "4123": [25, 82], "1699": [25, 72, 82, 230], "3995": [25, 35, 82], "2100": [25, 73, 82, 230], "3980": [25, 53, 82, 84], "65it": [25, 32, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "2500": [25, 44, 56, 82, 92, 122, 161, 170, 234, 247, 248], "3982": [25, 82, 84], "55it": [25, 36, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85, 93], "2929": [25, 82, 84, 237], "4076": [25, 82, 84], "05it": [25, 35, 40, 72, 73, 74, 80, 82, 83, 84, 85], "3337": 25, "4034": [25, 82], "16it": [25, 33, 35, 36, 37, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85], "3741": [25, 82], "3969": [25, 82, 84], "59it": [25, 32, 33, 35, 36, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "4150": [25, 40, 82], "01": [25, 32, 33, 35, 36, 37, 40, 43, 48, 53, 71, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 89, 93, 100, 106, 108, 146, 149, 163, 164, 166, 170, 174, 176, 184, 221, 222, 227, 229, 230, 235, 236], "4001": [25, 82], "46it": [25, 32, 35, 37, 40, 72, 73, 74, 82, 83, 84, 85], "4559": [25, 35, 40, 82], "4022": [25, 82], "4967": [25, 82, 84], "41it": [25, 32, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85, 92, 93], "5408": 25, "5822": [25, 84], "4036": [25, 79], "18it": [25, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 93], "6227": 25, "3976": [25, 35, 82], "69it": [25, 32, 33, 35, 36, 37, 53, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85], "6643": 25, "4025": [25, 82], "7054": 25, "4044": [25, 82], "95it": [25, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "7473": 25, "4081": [25, 82], "7919": 25, "4181": [25, 82], "88it": [25, 32, 35, 36, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "8342": 25, "4192": 25, "8762": 25, "4149": [25, 82], "9201": 25, "4214": [25, 82], "9630": 25, "4233": [25, 82], "44it": [25, 35, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "10056": 25, "4236": [25, 82, 84], "02it": [25, 33, 35, 36, 53, 72, 73, 74, 82, 83, 84, 85, 93], "10489": 25, "4258": [25, 40, 82], "10915": 25, "4253": [25, 35, 40, 82], "89it": [25, 33, 35, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "11341": 25, "4176": [25, 82], "96it": [25, 32, 35, 36, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "11772": 25, "4204": [25, 82, 84], "12199": 25, "4213": [25, 80], "11it": [25, 35, 37, 53, 72, 73, 74, 80, 82, 83, 84, 85, 93], "12625": 25, "03": [25, 27, 32, 33, 35, 36, 37, 40, 53, 65, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 93, 106, 108, 109, 120, 124, 149, 164, 170, 217, 218, 223, 224, 225, 227, 228, 232, 233, 234, 235], "4222": [25, 40, 82], "67it": [25, 35, 37, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85], "13054": 25, "4237": [25, 82], "13486": 25, "13it": [25, 32, 33, 35, 40, 72, 73, 74, 79, 80, 82, 83, 84, 85], "13912": 25, "73it": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "14336": 25, "4230": [25, 74, 82], "14760": 25, "99it": [25, 35, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 93], "15182": 25, "4186": [25, 82], "60it": [25, 33, 35, 53, 72, 73, 74, 79, 82, 83, 84, 85], "15603": 25, "4189": [25, 82], "16032": 25, "40it": [25, 32, 35, 36, 37, 40, 53, 71, 72, 73, 74, 82, 83, 84, 85], "16459": 25, "4223": [25, 35, 82], "16891": 25, "4244": [25, 82], "17318": 25, "4248": [25, 82, 84], "47it": [25, 35, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "17743": 25, "4217": [25, 40, 82], "28it": [25, 32, 33, 35, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85], "18175": 25, "4243": [25, 82, 84], "39it": [25, 32, 36, 40, 53, 73, 74, 79, 80, 82, 83, 84, 85], "18606": 25, "24it": [25, 33, 35, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "19045": 25, "4292": [25, 82], "28": [25, 32, 33, 35, 36, 37, 40, 53, 70, 72, 73, 74, 78, 79, 82, 83, 84, 85, 86, 87, 158, 169, 170, 171, 172, 174, 221, 224, 232, 233, 237], "19475": 25, "4290": [25, 82], "94it": [25, 35, 36, 40, 72, 73, 74, 79, 82, 83, 84, 85], "29": [25, 30, 33, 35, 37, 39, 40, 53, 70, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 105, 224, 225, 235], "19905": 25, "4279": [25, 82], "20334": 25, "4276": [25, 82], "20762": 25, "4272": [25, 79], "49it": [25, 33, 35, 36, 40, 53, 72, 73, 74, 76, 80, 82, 83, 84, 85], "21194": 25, "05": [25, 29, 32, 33, 35, 36, 37, 40, 42, 53, 55, 56, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 95, 111, 114, 115, 128, 147, 163, 164, 166, 170, 171, 176, 221, 222, 228, 232, 233, 234], "23it": [25, 32, 35, 36, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85, 93], "31": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 135, 146, 164, 170, 226], "21622": 25, "4246": [25, 82], "07it": [25, 35, 36, 37, 40, 53, 72, 73, 74, 82, 83, 84, 85], "32": [25, 33, 35, 37, 40, 44, 53, 54, 67, 72, 73, 74, 79, 82, 83, 84, 85, 86, 93, 96, 97, 102, 161, 163, 164, 169, 170, 172, 175, 176, 217, 221, 224, 226, 227], "22050": 25, "4250": [25, 35, 82], "58it": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "22479": 25, "4256": [25, 82, 84], "22910": 25, "4265": [25, 82, 84], "23341": 25, "34": [25, 32, 33, 35, 36, 40, 52, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 102, 145, 158, 170, 172, 224, 231, 236], "23771": 25, "4274": [25, 35, 82], "42it": [25, 32, 33, 35, 37, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85], "24199": 25, "4245": 25, "24624": 25, "4235": [25, 35, 82], "36": [25, 35, 36, 37, 40, 44, 53, 72, 73, 74, 76, 79, 82, 83, 84, 85, 86, 87, 93, 161, 163, 164, 170, 224], "25050": [25, 85], "37it": [25, 33, 35, 36, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "25474": 25, "06": [25, 32, 33, 35, 36, 37, 40, 51, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 93, 133, 135, 152, 164, 170, 219, 220, 227, 229, 234], "4219": [25, 82], "37": [25, 32, 33, 35, 36, 40, 47, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 224], "25914": 25, "53it": [25, 32, 33, 35, 36, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85], "38": [25, 32, 33, 35, 37, 40, 53, 69, 71, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 93, 94, 98, 102, 105, 134, 170, 224], "26347": 25, "84it": [25, 32, 33, 35, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "26775": 25, "4206": [25, 82], "39": [25, 32, 35, 36, 37, 40, 44, 53, 71, 72, 73, 74, 78, 79, 82, 83, 84, 85, 89, 90, 94, 161, 164, 170, 220, 224], "27196": 25, "4191": [25, 82, 84], "06it": [25, 32, 33, 35, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "27622": 25, "4207": [25, 35, 82, 84], "28056": 25, "09": [25, 33, 35, 36, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 165, 170, 230, 231, 247, 248], "4242": [25, 82], "62it": [25, 33, 35, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "28494": 25, "4278": [25, 40, 82], "20it": [25, 33, 35, 37, 40, 53, 73, 74, 79, 80, 82, 83, 84, 85], "28922": 25, "4273": [25, 82, 84], "29350": 25, "07": [25, 30, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 89, 95, 129, 165, 167, 170, 247, 248], "86it": [25, 32, 35, 36, 37, 40, 53, 72, 73, 74, 75, 79, 80, 82, 83, 84, 85], "43": [25, 33, 35, 36, 37, 40, 53, 70, 72, 73, 74, 78, 79, 82, 83, 84, 85, 86, 170, 226], "29771": 25, "30213": 25, "12it": [25, 32, 33, 35, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "30655": 25, "45it": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 82, 83, 84, 85], "31090": 25, "08": [25, 30, 32, 33, 35, 36, 37, 40, 53, 71, 72, 73, 74, 79, 82, 83, 84, 85, 86, 89, 166, 170, 176, 189, 190, 228, 229, 230], "4304": [25, 82], "38it": [25, 33, 35, 37, 40, 72, 73, 74, 79, 82, 83, 84, 85], "31527": 25, "4320": [25, 53, 82], "31960": 25, "77it": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85], "32393": 25, "47": [25, 33, 35, 36, 40, 43, 53, 62, 72, 73, 74, 79, 82, 83, 84, 85, 86, 111, 158, 163, 165, 171, 224, 232, 247, 248], "32848": 25, "4338": [25, 35, 72, 82], "54it": [25, 35, 37, 72, 73, 74, 82, 83, 84, 85], "33295": 25, "4372": [25, 82], "34it": [25, 35, 36, 40, 53, 72, 73, 74, 82, 83, 84, 85, 92], "33733": 25, "4329": [25, 82], "49": [25, 29, 32, 35, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 92, 121, 158, 170, 224, 231], "34167": 25, "4315": [25, 82], "27it": [25, 32, 33, 35, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "34599": 25, "4298": [25, 82, 84], "35043": 25, "4335": [25, 35, 82], "03it": [25, 32, 33, 35, 36, 37, 40, 72, 73, 74, 80, 82, 83, 84, 85], "51": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 93, 98, 164, 224], "35505": [25, 74], "4415": [25, 82, 84], "14it": [25, 32, 33, 35, 36, 40, 53, 73, 74, 79, 82, 83, 84, 85], "52": [25, 30, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 75, 79, 80, 82, 83, 84, 85, 86, 95, 135, 172, 224, 229], "35947": 25, "4359": [25, 82], "36386": 25, "4363": [25, 40, 82, 84], "50it": [25, 32, 33, 35, 36, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "53": [25, 32, 35, 36, 37, 40, 46, 48, 53, 70, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 94, 96, 145, 155, 158, 170, 176, 197, 199, 226, 236], "36823": [25, 85], "4345": [25, 82], "48it": [25, 35, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "37258": 25, "4266": 25, "54": [25, 33, 35, 36, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 89, 131, 165, 170, 225, 247, 248], "37695": [25, 40], "72it": [25, 32, 33, 35, 36, 40, 53, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85], "38151": 25, "4360": [25, 40, 82, 84, 85], "38588": 25, "4309": [25, 82], "19it": [25, 32, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "56": [25, 32, 33, 35, 37, 40, 44, 53, 58, 71, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 116, 135, 154, 161, 170, 172, 224], "39020": 25, "4307": [25, 82], "43it": [25, 32, 33, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 93], "57": [25, 35, 36, 40, 53, 62, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 93, 98, 116, 170, 224, 247, 248], "39451": 25, "56it": [25, 36, 37, 40, 72, 73, 74, 79, 80, 82, 83, 84, 85], "39877": [25, 35], "4162": [25, 82], "58": [25, 30, 32, 33, 35, 36, 37, 40, 53, 60, 62, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 129, 131, 146, 155, 163, 166, 167, 170, 171, 172, 224, 245], "40325": 25, "91it": [25, 33, 35, 36, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "40763": 25, "4284": [25, 82], "61it": [25, 35, 37, 40, 53, 72, 73, 74, 82, 83, 84, 85], "41192": 25, "4281": [25, 40, 82], "60": [25, 35, 36, 40, 44, 50, 53, 55, 64, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 91, 93, 119, 122, 125, 128, 130, 142, 161, 165, 170, 224, 247, 248], "41621": 25, "4247": 25, "42046": 25, "42469": 25, "4146": [25, 82], "42926": [25, 85], "4260": [25, 82], "43374": 25, "63": [25, 32, 35, 36, 37, 40, 51, 52, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 93, 98, 174, 224], "43818": 25, "4350": [25, 82], "44254": 25, "4348": [25, 82, 84], "44690": 25, "4271": [25, 82, 84], "45118": 25, "80it": [25, 37, 40, 72, 73, 74, 79, 80, 82, 83, 84, 85], "45583": 25, "4353": [25, 82, 84], "46038": 25, "4407": [25, 82], "46495": 25, "4450": [25, 40, 72, 82], "46941": 25, "4421": [25, 40, 82], "68": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 224, 247, 248], "47384": 25, "47816": 25, "4289": [25, 82, 84], "48269": 25, "4352": [25, 80, 82], "70": [25, 35, 36, 40, 51, 53, 69, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85, 86, 88, 93, 102, 114, 121, 155, 165, 169, 221, 224], "48705": 25, "4326": [25, 40, 82], "49153": 25, "4366": [25, 35, 40, 72, 82], "85it": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 81, 82, 83, 84, 85], "49590": 25, "4361": [25, 40, 82], "72": [25, 32, 33, 35, 37, 40, 44, 53, 72, 73, 74, 78, 79, 82, 83, 84, 85, 102, 146, 158, 161, 163, 171, 224, 234, 247, 248], "50027": 25, "50452": 25, "4161": [25, 82], "73": [25, 35, 36, 40, 53, 62, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 174, 224], "50874": 25, "4173": [25, 53, 82, 84], "51293": 25, "74": [25, 32, 33, 35, 36, 37, 40, 53, 70, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 92, 114, 224], "51739": 25, "4252": [25, 82, 84], "75": [25, 30, 32, 33, 35, 37, 39, 40, 51, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 102, 114, 134, 137, 158, 164, 174, 224, 235], "52170": 25, "4264": [25, 82], "04it": [25, 35, 36, 40, 53, 72, 73, 74, 82, 83, 84, 85], "52597": 25, "4208": [25, 82], "53019": 25, "4195": [25, 82], "77": [25, 32, 33, 35, 36, 37, 40, 53, 60, 72, 73, 74, 79, 80, 82, 83, 84, 85, 114, 163, 164, 169, 224], "53453": 25, "4232": [25, 82], "53887": 25, "4259": [25, 40, 82, 84], "36it": [25, 35, 36, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "78": [25, 32, 33, 35, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 114, 224], "54314": 25, "54740": 25, "4228": [25, 82], "55163": 25, "4126": [25, 82], "55577": 25, "4089": [25, 82], "55999": 25, "4122": [25, 82], "81": [25, 32, 33, 35, 36, 37, 40, 51, 53, 54, 70, 72, 73, 74, 78, 79, 82, 83, 84, 85, 102, 114, 135, 163, 165, 170, 224, 229], "56419": 25, "4144": [25, 71, 82], "56839": 25, "4155": [25, 82], "51it": [25, 32, 33, 36, 37, 40, 72, 73, 74, 79, 80, 82, 83, 84, 85], "57255": 25, "4140": [25, 72, 82], "83": [25, 30, 32, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 93, 174, 224], "57670": 25, "4087": [25, 82], "58079": 25, "4065": [25, 82, 84], "84": [25, 32, 33, 35, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85, 86, 114, 224, 225], "58498": 25, "4098": [25, 82, 84], "25it": [25, 33, 36, 37, 40, 53, 73, 74, 79, 82, 83, 84, 85, 93], "58924": 25, "4142": [25, 80, 82, 85], "85": [25, 32, 33, 35, 36, 40, 53, 67, 71, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 94, 98, 114, 121, 155, 164, 170, 172, 224, 231], "59352": 25, "4178": [25, 82, 84], "86": [25, 35, 36, 37, 40, 53, 71, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 89, 114, 224], "59796": 25, "60222": 25, "87": [25, 32, 33, 35, 36, 37, 40, 44, 53, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 94, 161, 174, 224, 236], "60640": 25, "4050": [25, 82], "61046": 25, "4027": [25, 72, 82], "88": [25, 32, 33, 35, 40, 51, 53, 70, 72, 73, 74, 78, 79, 82, 83, 84, 85, 86, 98, 114, 131, 170, 224], "61450": 25, "4024": [25, 82], "89": [25, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 93, 102, 108, 109, 114, 116, 124, 146, 170, 218, 224, 233], "61867": 25, "4063": [25, 82], "62306": 25, "4154": [25, 82], "78it": [25, 32, 33, 35, 40, 53, 73, 74, 79, 82, 83, 84, 85, 93], "62735": 25, "93it": [25, 32, 35, 36, 37, 40, 53, 72, 73, 74, 82, 83, 84, 85], "63155": 25, "4151": [25, 82], "91": [25, 32, 33, 35, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85, 86, 98, 165, 169, 224], "63571": 25, "63984": 25, "4120": [25, 82], "64397": 25, "4118": [25, 82], "93": [25, 32, 35, 36, 37, 40, 53, 71, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 114, 158, 218, 222], "64835": 25, "4190": [25, 82], "65256": 25, "68it": [25, 36, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 92], "94": [25, 32, 33, 35, 37, 40, 53, 59, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 102, 158, 166, 172, 217, 224, 230], "65676": 25, "95": [25, 29, 33, 35, 36, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85, 93, 94, 125, 128, 164, 170, 176, 197, 199, 224], "66074": 25, "3934": [25, 82], "66470": 25, "3936": [25, 82], "66883": 25, "67309": 25, "4055": [25, 72, 82], "74it": [25, 35, 37, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85], "97": [25, 32, 33, 35, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 114, 135, 170, 172, 224, 228, 236], "67716": 25, "4030": [25, 82], "98": [25, 32, 33, 35, 36, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 135, 157, 158, 174, 175, 176, 215, 224], "68120": 25, "3970": [25, 82], "68518": 25, "3931": [25, 82], "99": [25, 35, 36, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85, 98, 102, 121, 155, 164, 170, 172, 224], "68912": 25, "3906": [25, 82, 84], "69323": 25, "3961": [25, 82, 84], "69720": 25, "3944": [25, 80, 82], "4196": [25, 72, 82, 84], "optic": [25, 163, 165, 170], "radiat": [25, 128, 165], "calcarin": 25, "sulcu": 25, "cortex": [25, 29, 104], "genicul": 25, "nucleu": 25, "lgn": [25, 165], "roi": [25, 29, 43, 44, 62, 71, 79, 84, 89, 92, 94, 104, 126, 127, 128, 129, 132, 133, 158, 165, 170, 171, 174, 176, 177, 196, 203, 217, 222, 234, 238], "cube": [25, 44, 86, 161, 163, 166, 170], "3x3x3": [25, 166], "rad": [25, 164], "getter": [25, 28, 29, 30, 35, 37, 38, 40, 44, 128, 157, 167, 168, 170, 176, 214, 220, 221, 226, 228, 230, 237, 238], "streamlines_gener": [25, 34, 66], "step_siz": [25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 126, 128, 131, 136, 164, 167, 174, 176, 214, 215], "5x5x5": [25, 53, 166, 176, 189, 190], "travers": [25, 29, 174], "through": [25, 29, 35, 39, 40, 59, 75, 76, 82, 83, 84, 86, 89, 90, 96, 104, 113, 116, 126, 131, 142, 147, 151, 152, 154, 155, 156, 157, 163, 165, 170, 171, 174, 219, 224, 226, 231, 246], "mask_lgn": 25, "filtered_fibers2": 25, "tol": [25, 163, 164, 165, 166, 170, 174], "sfil": 25, "len": [25, 31, 43, 109, 111, 112, 113, 114, 124, 130, 131, 163, 164, 165, 169, 170, 171, 172, 174, 175, 217, 231], "propag": [25, 62, 76, 77, 83, 93, 119, 153, 157, 158, 167, 170, 172, 174, 176, 201, 226, 241, 243], "preserv": [25, 26, 27, 44, 50, 53, 55, 144, 149, 164, 166, 174, 238], "contextu": [25, 27, 158, 166, 174, 176, 218, 219, 238], "enhanc": [25, 27, 31, 110, 115, 151, 158, 166, 174, 218, 219, 226, 229, 238], "regard": [25, 85, 92, 163, 219], "electrostat": [25, 56, 91, 122, 164, 166, 235], "repuls": [25, 56, 164, 166, 219, 235], "chosen": [25, 34, 36, 66, 86, 91, 157, 167, 170, 174, 242], "recal": [25, 143, 170], "percent": [25, 171], "fbc_sl_orig": 25, "clrs_orig": 25, "rfbc_orig": 25, "get_points_rfbc_threshold": [25, 174, 177], "emphasi": [25, 174], "fbc_sl_thre": 25, "clrs_thre": 25, "rfbc_thre": 25, "125": [25, 44, 53, 82, 83, 114, 126, 129, 137, 161, 224], "optic_radiation_before_clean": 25, "procedur": [25, 29, 50, 51, 73, 80, 85, 86, 121, 152, 154, 155, 163, 164, 170, 172, 176, 195, 196, 198, 219, 221], "optic_radiation_after_clean": 25, "lineactor": 25, "vstack": [25, 56, 77, 85, 91, 119, 122, 130, 174], "linewidth": [25, 38, 39, 85, 99, 114, 124, 125, 126, 130, 135, 175, 177], "horizont": [25, 175, 246], "axial": [25, 50, 53, 54, 59, 64, 70, 71, 72, 73, 78, 79, 84, 85, 89, 90, 116, 131, 137, 158, 170, 174, 175, 176, 197, 199], "slice": [25, 34, 38, 44, 49, 50, 51, 53, 54, 55, 59, 62, 64, 66, 67, 70, 73, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 93, 94, 97, 105, 106, 107, 116, 126, 131, 132, 133, 134, 146, 158, 163, 164, 165, 166, 168, 170, 171, 176, 177, 202, 219, 221, 222, 228, 230, 234, 236, 238, 250], "t1": [25, 39, 44, 51, 54, 84, 110, 115, 128, 131, 134, 141, 146, 151, 165, 166, 169, 217, 237, 238, 247, 248], "vol_actor1": 25, "sagitt": [25, 34, 62, 66, 131, 137, 175], "vol_actor2": [25, 29, 38, 39, 131], "285": [25, 82, 83, 84, 225], "155": [25, 82, 83, 226], "n_frame": [25, 29, 70, 78, 99, 111, 125, 128, 131, 217], "or_befor": 25, "rm": [25, 29, 71, 73, 89], "or_aft": 25, "tau": [25, 86, 163, 164, 166, 170, 172, 174, 176, 177, 189, 231, 241], "techniqu": [25, 38, 40, 51, 53, 74, 84, 85, 89, 109, 156, 169, 170, 171, 174, 226], "pauli": [25, 176], "ossenblok": [25, 174], "academ": [25, 88], "epileptologi": 25, "kempenhaegh": 25, "maastricht": 25, "132": [25, 27, 82, 83, 224], "fiber_to_bundle_coher": [25, 27, 221, 238], "coher": [26, 27, 38, 44, 71, 86, 89, 158, 165, 168, 170, 174, 219, 238], "296": [27, 82, 83, 84, 114], "examples_builtcontextual_enhanc": 27, "mem": [27, 30, 42, 48, 61, 65, 95, 103, 115, 117, 120, 129, 133, 140, 175, 238], "mb": [27, 30, 42, 48, 61, 65, 95, 103, 115, 117, 120, 129, 133, 140, 165, 238], "surfac": [28, 30, 39, 44, 90, 126, 128, 132, 133, 158, 164, 165, 170, 177, 219, 221, 233, 238, 245], "determinist": [28, 30, 32, 34, 36, 40, 44, 66, 153, 158, 170, 174, 176, 214, 222, 226, 234, 238, 239], "transport": [28, 30, 44, 145, 158, 164, 167, 235, 236, 238], "unbias": [28, 30, 44, 68, 95, 98, 158, 163, 165, 170, 176, 235, 238, 247, 248], "rumba": [28, 30, 44, 89, 158, 161, 176, 177, 234, 235, 236, 238], "sd": [28, 30, 44, 89, 155, 158, 161, 170, 176, 235, 236, 238, 245], "bootstrap": [28, 30, 44, 94, 158, 167, 170, 176, 199, 221, 224, 237, 238], "closest": [28, 30, 44, 62, 153, 164, 166, 167, 170, 171, 174, 226, 238], "spars": [28, 29, 30, 44, 68, 83, 88, 95, 97, 158, 163, 164, 170, 171, 174, 226, 238], "filter": [28, 29, 30, 44, 50, 52, 54, 55, 85, 89, 102, 104, 108, 131, 151, 153, 158, 163, 164, 166, 167, 169, 170, 171, 174, 176, 191, 198, 207, 215, 219, 221, 234, 237, 238], "biggest": 29, "challeng": [29, 86, 123, 159, 247, 248], "predict": [29, 55, 67, 69, 82, 84, 90, 157, 163, 164, 169, 170, 174, 177, 217, 218, 219, 225, 226, 227, 230], "simultan": [29, 82, 89, 98, 158, 170, 237], "pestilli2014": 29, "breviti": [29, 39, 82, 104], "corpu": [29, 32, 33, 34, 35, 36, 37, 40, 62, 66, 67, 69, 70, 71, 78, 83, 86, 89, 90, 94, 104, 126, 128, 131, 136, 165, 170, 171, 174, 176, 212, 247, 248], "callosum": [29, 32, 33, 34, 35, 36, 37, 40, 62, 66, 67, 69, 70, 71, 78, 83, 86, 89, 90, 94, 104, 126, 128, 131, 136, 165, 170, 171, 174, 176, 212, 247, 248], "frontal": [29, 104, 131], "fulli": [29, 44, 73, 100, 104, 153, 164, 170, 172], "matric": [29, 44, 98, 104, 127, 129, 144, 163, 164, 165, 170, 174, 219, 222, 238], "intersect": [29, 44, 82, 85, 104, 127, 129, 174, 238], "pjoin": [29, 96, 97, 100, 104], "pyplot": [29, 34, 38, 40, 49, 50, 51, 52, 53, 54, 55, 59, 62, 64, 66, 69, 72, 74, 75, 76, 79, 80, 82, 84, 85, 86, 87, 89, 93, 94, 97, 102, 107, 116, 121, 122, 123, 126, 128, 130, 131, 165, 174], "plt": [29, 34, 38, 40, 49, 50, 51, 52, 53, 54, 55, 59, 62, 64, 66, 69, 72, 74, 75, 76, 79, 80, 82, 84, 85, 86, 87, 89, 93, 94, 97, 102, 107, 116, 121, 122, 123, 126, 130, 131, 174], "mpl_toolkit": [29, 128], "axes_grid1": [29, 128], "axesgrid": [29, 128], "fetch_stanford_track": [29, 104, 177], "colormap": [29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 70, 71, 77, 78, 79, 82, 83, 84, 89, 90, 92, 111, 112, 113, 114, 119, 122, 128, 131, 136, 170, 175, 176, 203, 219, 221, 222, 226, 228], "cmap": [29, 34, 38, 40, 49, 50, 51, 52, 53, 54, 55, 59, 64, 66, 72, 74, 79, 80, 82, 83, 84, 85, 86, 87, 97, 107, 109, 111, 113, 116, 128, 131, 136, 175], "hardi_img": [29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 128, 131, 136], "return_img": [29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 64, 66, 96, 97, 104, 128, 131, 136, 160, 168], "cc_slice": [29, 131], "streamline_tool": [29, 129, 131, 219, 221, 226, 228, 238], "candid": [29, 44, 161, 167, 174], "streamlines_fil": [29, 104], "lr_superiorfrontal_path": [29, 104], "lr": [29, 104, 131, 170], "superiorfront": [29, 104, 131], "candidate_sl_sft": 29, "to_vox": [29, 43, 168, 177], "candidate_sl": 29, "term": [29, 73, 82, 83, 88, 89, 111, 116, 142, 155, 163, 170, 225, 244], "connectom": [29, 147, 148, 158, 165, 174, 247, 248], "anatom": [29, 35, 40, 53, 55, 104, 126, 128, 131, 147, 149, 157, 158, 174, 176, 227, 239], "candidate_streamlines_actor": 29, "streamtub": [29, 38, 39, 99, 111, 112, 113, 114, 125, 130, 134, 135, 217, 221, 222, 225], "line_color": [29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 128, 131, 136], "cc_roi_actor": [29, 131], "contour_from_roi": [29, 128, 131, 136], "opac": [29, 67, 86, 111, 114, 131, 134, 136, 137, 217, 221, 222, 237], "vol_actor": [29, 38, 39, 131], "canva": [29, 131], "life_candid": 29, "800": [29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 73, 74, 82, 84, 85, 126, 128, 131, 146, 172, 247, 248], "fiber_model": [29, 174], "scanner": [29, 38, 50, 54, 72, 89, 142, 164, 165, 166, 170, 176, 241, 242, 247, 248], "iso": [29, 80, 87, 170, 177], "ac": [29, 165, 170], "pc": 29, "inv_affin": 29, "linalg": [29, 38, 39, 87, 104, 134, 135, 170, 231, 235], "inv": [29, 38, 39, 104, 134, 135, 163, 170], "invers": [29, 83, 86, 104, 105, 106, 134, 144, 163, 164, 167, 170, 173, 174, 175, 176, 177, 179, 210, 220, 228], "fiberfit": [29, 177], "beta": [29, 84, 87, 90, 100, 116, 143, 163, 170, 171, 174, 176, 184], "weight": [29, 39, 44, 51, 52, 53, 55, 57, 59, 61, 64, 67, 69, 72, 73, 78, 80, 82, 83, 85, 86, 87, 88, 89, 90, 94, 99, 110, 115, 123, 126, 142, 151, 152, 155, 161, 164, 165, 166, 170, 172, 173, 174, 176, 177, 189, 197, 199, 201, 237, 238, 241, 242, 247, 248], "matrix": [29, 43, 49, 51, 53, 55, 58, 60, 72, 73, 78, 85, 89, 90, 99, 104, 106, 107, 109, 131, 135, 137, 143, 144, 146, 151, 155, 156, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 184, 188, 189, 190, 217, 218, 219, 222, 223, 226, 228, 229, 230, 231, 232, 234, 237], "n_": [29, 73, 170], "th": [29, 69, 99, 105, 106, 163, 170, 171, 174, 175, 245], "column": [29, 87, 88, 90, 99, 131, 137, 144, 163, 164, 166, 170, 171, 172, 174, 175], "arbitrarili": 29, "percentag": [29, 96, 121, 122, 164, 171, 172], "node": [29, 123, 164, 169, 171, 173, 174, 177, 235], "cylindr": [29, 172], "gaussian": [29, 38, 52, 54, 59, 62, 69, 72, 73, 83, 85, 89, 96, 102, 105, 106, 116, 121, 155, 163, 164, 166, 170, 171, 172, 176, 179, 184, 191, 197, 201, 217, 221, 226], "fiber_fit": 29, "ey": [29, 43, 96, 97, 131, 134, 163, 170, 174, 227], "properti": [29, 46, 55, 70, 78, 81, 83, 85, 86, 94, 99, 113, 121, 123, 143, 155, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 217, 245], "beta_i": 29, "fig": [29, 40, 50, 51, 52, 54, 59, 62, 69, 72, 76, 79, 82, 86, 87, 89, 93, 97, 102, 116, 123, 126, 128, 130, 170], "subplot": [29, 34, 38, 40, 49, 50, 51, 52, 53, 54, 55, 59, 62, 64, 66, 69, 72, 74, 75, 80, 82, 85, 86, 87, 89, 94, 97, 102, 107, 123, 126, 130], "hist": [29, 94, 126, 130, 163, 169], "histtyp": [29, 94, 126, 130], "set_xlabel": [29, 69, 82, 85, 86, 94, 123, 126, 130], "set_ylabel": [29, 69, 82, 85, 86, 94, 123, 126, 130], "savefig": [29, 34, 38, 40, 49, 50, 51, 52, 53, 54, 55, 59, 62, 64, 66, 69, 74, 75, 76, 79, 80, 82, 84, 85, 86, 89, 93, 94, 97, 102, 107, 116, 121, 122, 123, 126, 128, 130, 131], "beta_histogram": 29, "optimized_sl": 29, "row_stack": 29, "life_optim": 29, "presum": 29, "quantifi": [29, 69, 72, 73, 83, 155, 170, 174], "unseen": 29, "fold": [29, 44, 68, 95, 170, 238], "s0": [29, 64, 69, 71, 77, 82, 85, 89, 90, 119, 121, 122, 170, 172, 174, 176, 200, 219, 225], "baselin": [29, 94], "model_predict": [29, 69], "squar": [29, 55, 69, 73, 76, 82, 83, 86, 88, 89, 90, 93, 94, 97, 105, 144, 156, 163, 164, 165, 170, 172, 174, 175, 176, 179, 197, 199, 230, 241, 242], "model_error": 29, "model_rms": 29, "sqrt": [29, 52, 53, 55, 73, 74, 75, 76, 78, 81, 86, 87, 88, 93, 113, 144, 164, 166, 170, 172, 174, 245, 246], "against": [29, 77, 89, 119, 163, 164, 165, 169, 170, 171, 174], "naiv": [29, 102, 170, 174], "beta_baselin": 29, "pred_weight": 29, "reshap": [29, 167, 168, 169, 170, 171, 172, 174, 237], "spdot": [29, 177], "life_matrix": [29, 174], "vox_coord": [29, 174], "b0s_mask": [29, 64, 67, 69, 104, 164, 170, 177], "mean_pr": 29, "empti": [29, 85, 147, 163, 164, 170, 171, 172, 174, 228, 230, 234, 236, 237], "b0_signal": [29, 174], "demean": 29, "multipli": [29, 84, 91, 121, 130, 163, 170, 171, 174, 176, 196], "mean_sign": [29, 53, 62], "mean_error": 29, "mean_rms": 29, "overal": [29, 83, 130], "altern": [29, 33, 35, 38, 47, 71, 73, 77, 88, 96, 102, 111, 119, 130, 156, 157, 163, 164, 166, 170, 176, 199, 225, 245], "median": [29, 84, 155, 164, 171, 173, 174, 176, 207, 219, 225, 233], "rmse": 29, "2f": [29, 85], "horizontalalign": [29, 82], "verticalalign": [29, 82], "transax": [29, 82], "error_histogram": 29, "vol_model": 29, "ones": [29, 40, 56, 74, 85, 109, 111, 112, 113, 114, 122, 138, 141, 164, 168, 170], "nan": [29, 74, 78, 163, 164, 170, 172, 174, 217, 218, 222, 223, 226, 230, 231], "vol_mean": 29, "vol_improv": 29, "sl_idx": 29, "subplots_adjust": [29, 51, 53, 55, 80, 85, 128], "111": [29, 73, 79, 82, 83, 85, 102, 121, 128, 155, 170, 172, 176, 199, 224], "nrows_ncol": [29, 128], "label_mod": 29, "share_al": 29, "cbar_loc": [29, 128], "cbar_mod": [29, 128], "cbar_siz": [29, 128], "cbar_pad": [29, 128], "matshow": [29, 84, 128], "rot90": [29, 51, 62, 84, 87, 116, 128], "cm": [29, 74, 79, 84, 128], "bone": [29, 84, 128], "hot": [29, 86], "cbar_ax": [29, 128], "colorbar": [29, 51, 74, 76, 79, 82, 85, 86, 89, 93, 102, 128, 222], "rdbu": 29, "lax": [29, 128], "set_xtick": [29, 87, 128], "set_ytick": [29, 87, 128], "spatial_error": 29, "amount": [29, 78, 83, 94, 109, 130, 163, 164, 166, 171, 174, 175, 176, 203], "profil": [29, 44, 51, 59, 100, 108, 124, 125, 127, 129, 153, 158, 163, 165, 166, 170, 171, 173, 175, 176, 177, 179, 182, 183, 208, 217, 220, 237, 238, 242], "matlab": [29, 142, 164, 166, 227, 231, 244], "franco": [29, 39, 90, 170], "webpag": 29, "wandel": [29, 39, 69, 90, 123, 170, 173, 174, 247, 248], "statist": [29, 44, 57, 61, 69, 72, 73, 78, 80, 94, 104, 123, 145, 158, 163, 164, 170, 173, 174, 176, 182, 217, 225, 233, 238], "infer": [29, 69, 78, 113, 155, 169, 171, 174, 176, 234], "natur": [29, 50, 59, 73, 157, 163, 164, 168, 169, 170, 171, 174, 241, 242, 254], "1058": [29, 82, 174, 219], "1063": [29, 82, 155, 174, 176, 200, 219], "doi": [29, 37, 38, 39, 44, 51, 52, 53, 55, 70, 72, 73, 74, 80, 82, 84, 85, 86, 87, 88, 89, 90, 134, 146, 147, 152, 155, 161, 163, 164, 165, 166, 167, 169, 170, 174, 176, 189, 190, 200, 202, 223, 247, 248], "1038": [29, 73, 74, 82, 84, 85, 146, 165, 174, 219, 247, 248], "nmeth": [29, 174], "3098": [29, 82, 84, 174], "304": [29, 30, 82, 83, 93, 226], "linear_fascicle_evalu": [29, 30, 223, 238], "565": [30, 82, 227], "examples_builtfiber_track": 30, "tracking_sfm": [30, 39, 238], "599": [30, 39, 82, 227], "tracking_pft": [30, 35, 238], "696": [30, 35, 80, 82, 85, 113, 217], "tracking_rumba": [30, 38, 238], "180": [30, 38, 73, 82, 83, 93, 114, 225, 247, 248], "tracking_stopping_criterion": [30, 40, 238], "866": [30, 40, 74, 82, 219], "tracking_probabilist": [30, 36, 238], "889": [30, 36, 74, 82, 219], "tracking_ptt": [30, 37, 238], "552": [30, 37, 82, 227], "tracking_bootstrap_peak": [30, 32, 238], "803": [30, 32, 73, 74, 82, 218], "tracking_introduction_eudx_1": [30, 34, 238], "678": [30, 34, 74, 82, 85, 217], "surface_se": [30, 31, 238], "000": [30, 44, 61, 95, 103, 115, 117, 120, 133, 140, 161, 164, 170, 172, 238], "tracking_determinist": [30, 33, 238], "cortic": [31, 35, 123], "stonge2018": 31, "mesh": [31, 158, 162, 164, 177, 233], "random_coordinates_from_surfac": [31, 177], "seeds_from_surface_coordin": [31, 177], "load_polydata": [31, 177], "get_polydata_triangl": 31, "get_polydata_vertic": 31, "get_actor_from_polydata": 31, "normals_from_v_f": 31, "brain_lh": 31, "fury_surfac": 31, "polydata": [31, 168, 230], "extract": [31, 39, 44, 49, 52, 55, 72, 73, 74, 80, 85, 89, 90, 107, 109, 110, 111, 113, 115, 125, 127, 129, 145, 147, 148, 163, 164, 165, 166, 167, 169, 170, 173, 174, 175, 176, 177, 193, 205, 213, 218, 219, 222, 224, 225, 226, 228, 231, 237, 238], "triangl": [31, 99, 122, 164, 174, 219], "vt": [31, 174], "surface_actor": 31, "500": [31, 44, 51, 73, 82, 161, 174, 226, 247, 248], "uncom": [31, 135, 136, 137], "600": [31, 36, 70, 71, 78, 79, 80, 82, 83, 84, 89, 92, 94, 108, 109, 111, 112, 113, 114, 124, 135, 137, 146, 170, 171, 176, 217, 247, 248], "reset_camera": [31, 67, 134, 135, 137], "surface_seed1": 31, "nb_seed": [31, 174], "100000": 31, "nb_triangl": [31, 174], "trilinear": [31, 35, 40, 60, 163, 164, 176, 209], "tri_idx": 31, "trilin_co": 31, "cartesian": [31, 44, 75, 85, 89, 122, 155, 161, 164, 170, 171, 172, 246], "seed_pt": 31, "seed_n": 31, "dot": [31, 86, 113, 163, 164, 166, 167, 170, 174, 224, 234, 235, 237], "seed_actor": 31, "dot_siz": 31, "outsid": [31, 40, 62, 88, 163, 164, 166, 169, 174, 176, 209, 222, 223, 228, 234], "red": [31, 51, 56, 62, 69, 74, 99, 100, 105, 106, 109, 116, 130, 135, 147, 170, 174, 175, 176, 203], "normal_length": 31, "normal_in": 31, "tile": [31, 86], "newaxi": [31, 228], "normal_out": 31, "normal_in_actor": 31, "normal_out_actor": 31, "visualis": [31, 43, 166, 167, 170, 219, 222, 245, 249], "surface_seed2": 31, "ong": [31, 109, 171, 175, 176, 203, 219, 233, 236], "daducci": [31, 38, 89, 170, 176, 247, 248], "169": [31, 73, 82, 83, 219, 225], "524": [31, 82, 226], "539": [31, 82, 217], "230": [31, 82, 83, 84, 225], "berman": [32, 170], "berman2008": 32, "nd": [32, 85, 167, 170, 171, 174, 219], "phd": [32, 34, 66, 81, 146, 157, 170, 172, 176, 214], "thesi": [32, 34, 51, 53, 66, 73, 81, 85, 146, 157, 166, 170, 172, 176, 202, 214], "small_spher": [32, 36, 38, 177], "closestpeakdirectiongett": [32, 177], "stateful_tractogram": [32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 66, 100, 104, 108, 131, 177], "has_furi": [32, 33, 34, 35, 36, 37, 39, 40, 66, 104], "seed_mask": [32, 33, 34, 35, 36, 37, 38, 40, 66, 126, 128, 136, 146], "white_matt": [32, 33, 34, 36, 37, 38, 39, 40, 66, 126, 128, 131, 136], "58788": [32, 33, 36, 37], "586": [32, 82, 227], "5810": 32, "1375": [32, 82, 221], "7015": 32, "83it": [32, 35, 37, 40, 53, 72, 73, 74, 82, 83, 84, 85, 93], "2184": [32, 82], "7493": 32, "3023": [32, 82], "7833": 32, "3888": [32, 82], "8103": 32, "4699": [32, 40, 82], "8097": 32, "5509": [32, 74], "8064": 32, "6371": 32, "8215": 32, "90it": [32, 35, 36, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "7246": 32, "8371": [32, 84], "8117": 32, "8465": [32, 36], "8974": [32, 84], "8480": 32, "29it": [32, 33, 35, 36, 37, 53, 72, 73, 74, 79, 82, 83, 84, 85, 93], "9840": 32, "8522": [32, 36], "10705": 32, "8551": [32, 37], "11561": 32, "8521": 32, "12424": 32, "8542": 32, "13301": [32, 74], "8600": 32, "14162": 32, "8199": 32, "14986": 32, "8175": 32, "15807": 32, "8104": [32, 84], "16627": 32, "8123": 32, "17464": 32, "8189": 32, "18285": 32, "8187": 32, "19133": [32, 35], "8264": 32, "19961": 32, "8235": 32, "20786": 32, "8230": [32, 37], "21610": 32, "8144": 32, "22425": 32, "7948": 32, "23221": 32, "7874": [32, 84], "24053": 32, "7997": 32, "24863": 32, "8018": 32, "25682": 32, "8059": 32, "35it": [32, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 93], "26491": 32, "8058": 32, "27298": 32, "7901": 32, "28089": 32, "7849": 32, "52it": [32, 35, 37, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "28916": 32, "7965": 32, "29714": 32, "7918": [32, 36, 84], "30534": 32, "7993": 32, "31358": 32, "8045": 32, "32194": 32, "8130": 32, "33036": 32, "8205": 32, "33882": [32, 53], "8271": 32, "34732": 32, "8329": 32, "35576": 32, "8352": [32, 37], "36425": 32, "8383": 32, "37284": 32, "8435": 32, "38150": 32, "8494": [32, 36], "39018": 32, "8537": [32, 36], "87it": [32, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "39878": 32, "8535": [32, 84], "40745": 32, "8564": [32, 37], "41602": 32, "8528": [32, 36], "42464": 32, "8536": [32, 36], "43318": 32, "8524": [32, 84], "71it": [32, 33, 35, 36, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 93], "44171": 32, "8490": [32, 36], "45046": 32, "8557": [32, 37, 84], "45902": 32, "8496": 32, "46780": 32, "8569": 32, "47642": 32, "8573": 32, "48505": 32, "8567": 32, "49384": 32, "8623": [32, 84], "50247": 32, "8526": [32, 36], "51100": 32, "8493": 32, "51953": 32, "8495": 32, "52803": 32, "8484": [32, 33], "92it": [32, 36, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85, 92], "53652": 32, "8440": [32, 33], "54498": [32, 74], "55342": 32, "8298": 32, "56176": 32, "8301": 32, "57007": 32, "8220": 32, "63it": [32, 35, 40, 53, 71, 72, 73, 74, 79, 80, 82, 83, 84, 85], "57830": 32, "8162": 32, "58647": 32, "7985": 32, "8225": [32, 84], "serv": [32, 108, 125, 138, 170], "boot_dg_csd": 32, "boot_streamline_gener": 32, "sft": [32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 104, 131, 168, 229, 230, 235, 236, 237], "rasmm": [32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 66, 100, 104, 108, 168, 171, 177], "tractogram_bootstrap_dg": 32, "NOT": [32, 164, 171, 176, 219, 228], "clip": [32, 36, 37, 70, 73, 78, 89, 166, 167, 169, 170, 176, 192, 222, 223, 230], "min": [32, 36, 37, 62, 64, 86, 89, 99, 109, 126, 135, 137, 146, 163, 164, 167, 169, 170, 171, 174, 177, 234, 237], "peak_dg": 32, "from_pmf": [32, 36, 37, 38, 167, 177], "peak_streamline_gener": 32, "closest_peak_dg_csd": 32, "tractogram_closest_peak_dg": 32, "ball": [32, 44, 45, 48, 68, 75, 84, 95, 146, 161, 166, 167, 170, 172, 176, 195, 238, 245], "residu": [32, 50, 51, 52, 53, 55, 67, 158, 163, 167, 170, 234, 237], "trajectori": [33, 35, 36, 44, 68, 72, 95, 123, 157, 158, 165, 170, 174, 234, 238], "pathwai": [33, 34, 36, 66, 108, 124, 125, 126, 147, 157, 171, 173, 174, 176, 182, 183, 208], "highest": [33, 62, 147, 157, 163, 164, 167, 170, 171, 222], "oppos": [33, 82, 157, 163, 170, 174], "draw": [33, 72, 96, 102, 105, 157, 174, 175], "therefor": [33, 51, 55, 59, 73, 75, 76, 78, 80, 81, 83, 98, 99, 134, 135, 137, 142, 144, 157, 163, 164, 166, 170, 245], "equival": [33, 78, 143, 157, 163, 164, 170, 172], "unlik": [33, 36, 157, 170], "deterministicmaximumdirectiongett": [33, 40, 177], "588": [33, 73, 80, 82, 227], "5861": 33, "1373": [33, 82, 230], "7013": 33, "2166": [33, 82], "7414": 33, "2959": [33, 82, 170], "7605": 33, "3737": [33, 82], "7657": 33, "4557": [33, 40, 82, 84], "7828": 33, "5397": 33, "7998": 33, "6273": 33, "8218": 33, "7108": [33, 74], "8250": 33, "7950": 33, "8293": 33, "8780": 33, "8285": 33, "57it": [33, 35, 36, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "9628": 33, "8334": 33, "10470": 33, "8348": 33, "11307": 33, "8346": 33, "12176": 33, "8439": 33, "13042": 33, "8498": 33, "13892": 33, "8414": [33, 36], "14763": 33, "8492": [33, 84], "15613": 33, "8462": 33, "16468": 33, "8476": 33, "17316": 33, "8392": 33, "18171": 33, "8430": 33, "19025": 33, "8451": [33, 37, 84], "19871": 33, "8370": 33, "20709": 33, "21561": 33, "8299": 33, "22440": 33, "8431": [33, 36, 84], "23284": 33, "8426": 33, "75it": [33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "24145": 33, "8457": 33, "24991": 33, "8423": 33, "25834": 33, "8391": [33, 84], "26674": 33, "8384": 33, "27513": 33, "8380": 33, "28352": 33, "08it": [33, 35, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "29183": 33, "7958": 33, "22it": [33, 35, 40, 53, 72, 73, 74, 82, 83, 84, 85, 93], "29982": 33, "7803": [33, 36], "30765": 33, "7287": 33, "31564": 33, "7475": 33, "32336": 33, "7536": 33, "33137": 33, "7669": 33, "33963": 33, "7832": 33, "34817": 33, "8030": 33, "35651": 33, "8111": 33, "36475": 33, "8142": 33, "37332": 33, "8259": [33, 36, 37], "38192": 33, "39061": 33, "8432": 33, "39925": 33, "40774": 33, "8324": 33, "41608": 33, "8079": 33, "42470": 33, "8213": [33, 37], "43320": 33, "8282": 33, "15it": [33, 35, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "44160": 33, "8307": 33, "44992": 33, "8252": [33, 37], "45832": 33, "8283": 33, "46711": 33, "8421": [33, 84], "47563": 33, "48410": 33, "49278": 33, "8503": 33, "50129": 33, "8481": [33, 36], "50980": 33, "8485": 33, "51831": 33, "8482": [33, 37, 84], "52680": 33, "8429": 33, "53524": 33, "8347": 33, "54359": 33, "8312": 33, "55194": [33, 53], "8323": 33, "56051": 33, "56890": 33, "8374": 33, "57728": 33, "8193": 33, "58549": 33, "7972": [33, 84], "8176": [33, 53], "detmax_dg": 33, "sh_to_pmf": [33, 35, 36, 167], "streamline_gener": [33, 36, 37, 38, 39, 40, 131], "tractogram_deterministic_dg": 33, "205": [33, 82, 83, 225], "direction": [34, 66, 86, 157], "tract": [34, 44, 62, 66, 74, 78, 100, 108, 109, 127, 129, 147, 149, 157, 163, 167, 170, 171, 173, 175, 176, 184, 203, 228, 230, 236, 238], "wide": [34, 66, 113, 157, 174, 241], "internet": [34, 66, 90], "qualiti": [34, 50, 51, 62, 66, 79, 111, 125, 156, 163, 165, 167, 168, 170, 171, 175, 176, 178, 222, 223, 228], "basi": [34, 36, 66, 79, 83, 86, 91, 92, 155, 157, 158, 164, 165, 166, 167, 169, 170, 176, 177, 201, 210, 222, 224, 225, 228, 230, 231, 233, 245], "peak_slic": [34, 66, 71, 89, 90, 222], "peak_dir": [34, 66, 71, 89, 90, 168], "peak_valu": [34, 66, 70, 71, 81, 89, 90, 167, 170, 177, 226], "csa_direction_field": [34, 66], "sli": [34, 38, 49, 52, 53, 55, 66, 107], "set_axis_off": [34, 38, 49, 50, 52, 59, 64, 66, 75, 76, 79, 93, 107], "imshow": [34, 38, 40, 49, 50, 51, 52, 53, 54, 55, 59, 62, 64, 66, 72, 74, 75, 76, 78, 79, 80, 82, 85, 86, 87, 89, 93, 97, 102, 107, 116, 131, 175], "grai": [34, 35, 38, 40, 49, 50, 51, 52, 53, 54, 55, 59, 64, 66, 72, 74, 79, 80, 82, 84, 85, 87, 97, 107, 116, 131, 157, 163, 170, 171, 174, 175, 247, 248], "gfa_tracking_mask": [34, 66], "deriv": [34, 35, 51, 66, 73, 74, 79, 80, 88, 94, 142, 147, 152, 155, 163, 164, 165, 166, 170, 171, 172, 174, 175, 176, 179, 197, 246], "grid": [34, 43, 44, 46, 66, 70, 71, 83, 96, 106, 135, 137, 161, 163, 170, 172, 174, 175, 176, 198, 219, 226, 234], "togeth": [34, 52, 66, 77, 83, 84, 86, 97, 99, 119, 131, 134, 138, 143, 163, 164, 168, 170, 171, 174, 176, 228, 231], "garyfallidis12": [34, 66, 98, 111, 112, 113, 114, 123, 146, 157, 171, 174], "streamlines_actor": [34, 38, 39, 66, 128, 136], "static": [34, 66, 92, 96, 97, 99, 100, 104, 105, 106, 148, 149, 156, 163, 164, 168, 170, 175, 176, 178, 179, 180, 184, 211, 237, 247, 248], "tractogram_eudx": [34, 66], "toward": [34, 35, 40, 66, 83, 96, 106, 143, 146, 157, 163, 164, 170, 174, 175, 176, 246], "accur": [34, 38, 66, 67, 73, 78, 89, 96, 146, 155, 157, 164, 166, 169, 170, 174, 176, 189, 190, 235], "pft": [35, 153, 158, 222, 223, 237], "girard2014": [35, 40, 157], "pve": [35, 40, 84, 116, 157, 171, 174, 176, 215, 227, 247, 248], "incorrectli": [35, 157], "corticospin": [35, 40, 62, 84, 108, 109, 116, 147, 157, 170, 174], "fluid": [35, 40, 80, 82, 84, 89, 116, 157, 164, 170, 174, 176, 215, 247, 248], "kept": [35, 71, 126, 157, 163, 164, 167, 170, 174], "whenev": [35, 40, 170], "invalidpoint": [35, 40, 174, 177], "f_pve_csf": [35, 40], "f_pve_gm": [35, 40], "f_pve_wm": [35, 40], "stanford_pve_map": [35, 40, 157], "pve_csf_data": [35, 40], "pve_gm_data": [35, 40], "pve_wm_data": [35, 40], "_": [22, 35, 40, 53, 67, 72, 77, 85, 87, 88, 89, 92, 94, 97, 99, 100, 104, 116, 119, 125, 164, 165, 166, 170, 172, 174, 176, 241, 242], "return_voxs": [35, 60, 75, 81, 163, 168], "dg": [35, 40, 174, 222], "77848": [35, 40], "317": [35, 52, 82, 83, 166, 226], "3154": [35, 82], "712": [35, 73, 74, 82, 85, 217], "3612": [35, 82, 84], "1082": [35, 82, 219], "3647": [35, 82], "1474": [35, 72, 82, 93, 221], "3748": [35, 72, 82], "1892": [35, 82, 228], "3897": [35, 82], "2306": [35, 82, 84], "3974": [35, 82], "2722": [35, 82, 236], "4029": [35, 82, 84], "3125": [35, 82, 84], "3525": [35, 82], "3872": [35, 82, 84], "66it": [35, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "4060": [35, 82], "4384": [35, 82], "4048": [35, 82], "4846": [35, 82, 84], "21it": [35, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "5284": [35, 84], "5710": 35, "6162": 35, "4325": [35, 82], "6595": 35, "7061": 35, "4385": [35, 82, 84], "7500": [35, 170], "4381": [35, 82], "7939": 35, "4287": [35, 82], "8428": 35, "4458": [35, 40, 79, 82], "8875": [35, 84], "4405": [35, 82], "9325": 35, "4428": [35, 82], "9792": 35, "4496": [35, 53, 82], "10243": 35, "4455": [35, 82], "10713": 35, "4521": [35, 82], "11185": 35, "4571": [35, 40, 82], "11643": 35, "4516": [35, 53, 82, 84], "12095": 35, "4499": [35, 82], "12557": 35, "4530": [35, 82], "33it": [35, 40, 53, 72, 73, 74, 82, 83, 84, 85], "13029": 35, "4581": [35, 40, 82], "13488": [35, 85], "4537": [35, 82], "13961": 35, "4591": [35, 82], "14446": 35, "4661": [35, 82], "14913": 35, "4589": [35, 82, 84], "15390": 35, "4634": [35, 40, 82], "15866": 35, "4665": [35, 74, 82], "16333": 35, "4605": [35, 82], "16794": 35, "4488": [35, 40, 82], "17266": 35, "4550": [35, 82], "17729": [35, 53], "4567": [35, 40, 82], "18199": 35, "4599": [35, 40, 82], "18660": 35, "4568": [35, 82], "4609": [35, 82, 84], "19595": 35, "4598": [35, 82, 84], "20073": 35, "4647": [35, 82], "20543": 35, "4656": [35, 40, 82, 84], "21010": 35, "4658": [35, 82], "21477": 35, "21943": 35, "4637": [35, 40, 82], "22409": 35, "22880": 35, "4654": [35, 82], "23351": 35, "4664": [35, 82], "23818": 35, "24285": 35, "4624": [35, 40, 82], "24763": [35, 85], "25245": 35, "4705": [35, 82], "25716": 35, "4644": [35, 40, 82], "26181": 35, "4534": [35, 82, 84], "26662": 35, "27124": [35, 74], "27580": 35, "4548": [35, 82], "28036": 35, "4520": [35, 40, 82], "28489": 35, "4464": [35, 40, 82], "28936": 35, "4460": [35, 40, 82, 84], "29383": 35, "4445": [35, 82], "29828": 35, "4402": [35, 82], "30269": 35, "30686": 35, "4072": [35, 82], "31121": 35, "4147": [35, 82, 84], "31538": 35, "4053": [35, 82, 84], "31945": 35, "4054": [35, 82], "32395": 35, "4172": [35, 82], "32827": 35, "4212": [35, 82], "33293": 35, "33767": 35, "4453": [35, 82], "34214": 35, "4454": [35, 82, 84], "34673": 35, "4489": [35, 82, 84], "35123": 35, "4474": [35, 82], "35601": 35, "36075": 35, "36563": 35, "4684": [35, 82], "37044": 35, "4716": [35, 40, 82], "37516": 35, "4697": [35, 79, 82], "37986": 35, "4677": [35, 82, 84], "38454": 35, "4631": [35, 40, 82], "38930": 35, "39396": 35, "4632": [35, 82], "4678": [35, 40, 82], "40345": 35, "4649": [35, 82, 84], "40810": 35, "4616": [35, 53, 82], "41272": 35, "41733": 35, "4562": [35, 53, 82], "42194": 35, "42652": 35, "4554": [35, 82], "43124": 35, "4592": [35, 72, 82], "43584": 35, "4508": [35, 82], "44036": 35, "4493": [35, 40, 82], "44491": 35, "4502": [35, 82], "44943": 35, "4500": [35, 82], "45394": 35, "4462": [35, 40, 82], "45841": 35, "4432": [35, 82, 84, 85], "46285": 35, "46751": 35, "4492": [35, 40, 53, 82, 84], "47209": 35, "4512": [35, 82], "47662": 35, "48140": 35, "4590": [35, 82], "48600": 35, "4505": [35, 79, 82, 84], "49060": [35, 40], "4533": [35, 82], "49514": 35, "4503": [35, 82, 85], "49965": 35, "4479": [35, 82, 84], "50430": 35, "4523": [35, 82], "50883": 35, "4498": [35, 82], "51348": 35, "4538": [35, 40], "51813": 35, "4566": [35, 82], "52273": 35, "52731": 35, "53196": 35, "4588": [35, 82], "53663": 35, "4604": [35, 82], "54134": 35, "54605": 35, "4650": [35, 79, 82, 85], "55071": 35, "55553": 35, "4614": [35, 82], "56032": 35, "4659": [35, 40, 82], "56499": 35, "56987": 35, "4703": [35, 82], "57458": 35, "4630": [35, 40, 82], "57950": 35, "4708": [35, 40, 82], "58422": 35, "58898": 35, "4696": [35, 82, 84], "59371": 35, "4700": [35, 82], "59842": 35, "4670": [35, 82], "60344": 35, "4767": [35, 53], "60821": 35, "4764": [35, 84], "61307": 35, "4785": [35, 53, 82], "61786": 35, "4736": [35, 82], "62265": 35, "4748": [35, 53, 82], "62760": 35, "4801": [35, 82], "63241": 35, "4783": [35, 82], "63720": 35, "4763": [35, 40, 82], "64197": 35, "4737": [35, 82], "64694": 35, "4800": [35, 40, 82], "65196": 35, "4860": [35, 40, 53, 82, 84], "65683": 35, "4792": [35, 53, 82], "66170": 35, "4809": [35, 40, 53], "66652": 35, "4722": [35, 40, 82], "67168": 35, "4845": [35, 82], "67662": 35, "4867": [35, 53, 82, 84], "68150": 35, "4861": [35, 53, 82], "68637": 35, "4842": [35, 53, 82, 84], "69122": 35, "4710": [35, 40, 82], "69640": 35, "4844": [35, 53, 72], "70126": 35, "4847": [35, 53, 82], "70612": 35, "4760": [35, 40, 72, 82], "71089": 35, "4689": [35, 37, 82], "71584": 35, "72070": 35, "4779": [35, 53, 82], "72549": 35, "4735": [35, 40, 82], "73023": 35, "4731": [35, 82], "73497": 35, "4715": [35, 80, 82], "73989": 35, "4775": [35, 53, 82], "74467": 35, "4673": [35, 82], "74935": 35, "4655": [35, 82], "75401": 35, "4623": [35, 82], "75881": 35, "76349": 35, "4667": [35, 82, 84], "76816": 35, "4620": [35, 72, 84], "77279": 35, "4578": [35, 82], "77781": 35, "4707": [35, 40, 82, 84], "78258it": 35, "4713": [35, 82], "78730it": 35, "4701": [35, 40, 82], "79201it": 35, "4613": [35, 82], "79735it": 35, "4820": [35, 82], "80218it": 35, "4762": [35, 40, 82], "26it": [35, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "80700it": 35, "4772": [35, 82], "81178it": 35, "4645": [35, 82, 84], "81695it": 35, "4793": [35, 82], "82176it": 35, "82655it": 35, "4752": [35, 82], "83131it": 35, "4666": [35, 40, 82], "83626it": 35, "4743": [35, 40, 79, 82], "84102it": 35, "4742": [35, 74, 82], "84577it": 35, "4669": [35, 40, 82], "85045it": 35, "4651": [35, 82], "85527it": 35, "4693": [35, 82], "85997it": 35, "4600": [35, 82], "86458it": 35, "86949it": 35, "87409it": 35, "87867it": 35, "4461": [35, 82], "88345it": 35, "4549": [35, 82, 84], "88801it": 35, "4442": [35, 82], "89252it": 35, "4456": [35, 82], "89716it": 35, "4506": [35, 72, 82], "90168it": 35, "4419": [35, 82], "90621it": 35, "91067it": 35, "4379": [35, 82], "91527it": 35, "4439": [35, 82, 84], "91972it": 35, "4386": [35, 40, 82], "92412it": 35, "92858it": 35, "93295it": 35, "93738it": 35, "94168it": 35, "4187": [35, 53, 82, 84, 171], "94601it": 35, "95025it": 35, "4078": [35, 84], "95446it": 35, "4111": [35, 72, 82], "95859it": 35, "4068": [35, 82, 84], "96267it": 35, "4009": [35, 84], "96669it": 35, "2633": [35, 73, 82], "96989it": [35, 40], "4482": [35, 82], "smith2012": [35, 40], "determin": [35, 40, 62, 71, 82, 83, 84, 116, 131, 144, 163, 166, 167, 171, 172, 174, 176, 177, 192, 196, 245], "invalid": [35, 40, 43, 75, 83, 84, 85, 87, 88, 89, 93, 163, 164, 168, 174, 217, 221, 234], "conjunct": 35, "cmc_criterion": 35, "from_pv": [35, 174, 177], "average_voxel_s": [35, 174], "pft_back_tracking_dist": [35, 174], "distanc": [35, 98, 99, 100, 108, 109, 112, 113, 114, 128, 130, 142, 163, 164, 166, 167, 168, 170, 171, 173, 175, 176, 177, 184, 203, 208, 215, 229, 233, 239, 246], "backtrack": [35, 40, 174], "wm": [35, 51, 71, 73, 84, 116, 157, 170, 176, 218, 235, 237, 247, 248], "csf": [35, 59, 80, 82, 83, 84, 89, 116, 170, 176, 221, 247, 248], "pft_front_tracking_dist": [35, 174], "event": [35, 92, 134, 164, 171, 175, 176, 219, 222, 247, 248], "particle_count": [35, 174], "min_wm_pve_before_stop": [35, 174, 176, 215], "gm": [35, 51, 84, 89, 116, 164, 170, 176, 247, 248], "wm_pve": 35, "particularlyuseful": 35, "sub": [35, 39, 44, 51, 69, 79, 80, 96, 138, 161, 163, 164, 168, 169, 170, 171, 176, 222], "exit": [35, 40, 131, 164, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 222], "deep": [35, 67, 73, 145, 158, 169, 176, 193, 230, 234], "pft_streamline_gen": 35, "max_cross": [35, 174], "maxlen": [35, 174], "1000": [35, 39, 43, 44, 51, 53, 56, 58, 64, 67, 75, 79, 84, 85, 90, 96, 97, 104, 122, 146, 161, 163, 164, 165, 169, 170, 172, 175, 176, 219, 241, 242, 247, 248], "return_al": [35, 40, 174], "tractogram_pft": 35, "prob_streamline_gener": 35, "tractogram_probabilistic_cmc": 35, "whittingstal": [35, 40, 157, 165, 174, 176, 215], "derich": [35, 40, 62, 157, 166, 167, 170, 172, 174, 176, 191, 215, 245, 247, 248], "bias": [35, 40, 73, 98, 157, 164, 174, 176, 215], "266": [35, 40, 72, 82, 83, 157, 174, 176, 215, 225], "278": [35, 40, 72, 82, 83, 157, 174, 176, 215, 226], "tournier": [35, 40, 44, 71, 84, 161, 166, 167, 169, 170, 174, 176, 196, 222, 245], "calamant": [35, 40, 71, 84, 166, 167, 170, 174, 245], "connelli": [35, 40, 71, 84, 166, 167, 170, 174, 245], "1924": [35, 40, 82, 174, 228], "1938": [35, 40, 82, 84, 174, 230], "5966": 36, "1388": [36, 82, 84, 221], "7078": 36, "2200": [36, 82, 146, 230, 247, 248], "7533": 36, "3026": [36, 82], "3858": [36, 72, 82], "7974": 36, "4679": [36, 82], "8040": 36, "5518": 36, "8145": 36, "6372": 36, "7234": 36, "8359": 36, "8091": 36, "8944": 36, "8442": 36, "9801": 36, "8467": 36, "10666": 36, "8507": 36, "11517": 36, "8472": [36, 84], "12382": 36, "8516": 36, "13256": 36, "8572": 36, "14122": 36, "8574": [36, 85], "14994": 36, "8610": 36, "15856": 36, "8474": 36, "16704": 36, "17559": 36, "18415": 36, "19279": 36, "20135": 36, "20990": 36, "8517": 36, "21847": 36, "22700": 36, "8514": 36, "23563": 36, "8538": 36, "24417": 36, "25261": 36, "8087": [36, 37], "26073": 36, "7868": 36, "26863": 36, "7845": 36, "27650": 36, "7799": 36, "28475": 36, "29279": 36, "7944": 36, "30088": 36, "7976": 36, "30910": 36, "8036": 36, "31732": 36, "8080": 36, "32541": 36, "8077": 36, "33370": 36, "8129": [36, 85], "34213": 36, "8209": 36, "35045": 36, "8231": 36, "35902": 36, "8322": 36, "36752": 36, "8366": [36, 37], "37620": 36, "8449": 36, "38494": 36, "8520": 36, "39373": 36, "8589": 36, "40233": 36, "8531": 36, "41087": 36, "41961": 36, "8580": 36, "42820": 36, "8543": 36, "43675": 36, "8533": 36, "44529": 36, "8499": 36, "45396": 36, "46253": 36, "8541": [36, 37], "47108": 36, "8532": 36, "47976": 36, "8565": 36, "48833": 36, "8530": 36, "49687": 36, "8471": 36, "50564": 36, "51418": [36, 74], "8502": [36, 84], "52269": 36, "53121": 36, "8487": 36, "53972": 36, "54821": 36, "8450": 36, "55667": 36, "8417": [36, 37], "56509": 36, "8382": 36, "57348": 36, "8335": [36, 37], "58182": 36, "8062": 36, "8289": 36, "neg": [36, 38, 43, 51, 55, 70, 71, 73, 83, 84, 85, 128, 163, 164, 165, 166, 167, 168, 170, 171, 174, 176, 192, 196, 217, 219, 225, 230, 232, 245], "ideal": [36, 44, 55, 73, 161, 170, 245], "strictli": [36, 38, 125, 170, 171], "tractogram_probabilistic_dg_pmf": 36, "disadvantag": 36, "tend": [36, 55, 83], "ram": [36, 89, 170], "106": [36, 54, 70, 78, 82, 83, 102, 224], "181": [36, 82, 83, 114, 225, 226], "sh": [36, 84, 91, 158, 166, 167, 168, 169, 170, 176, 210, 214, 222, 228, 230, 231, 234, 235, 237, 245], "362": [36, 39, 55, 82, 83, 84, 87, 88, 90, 165, 166, 170, 226], "tractogram_probabilistic_dg_sh": 36, "Not": [36, 145, 217], "attribut": [36, 43, 70, 71, 72, 73, 78, 82, 87, 114, 167, 168, 169, 219, 221, 222, 229, 230, 232, 236], "return_sh": [36, 47, 90, 167], "fod_coeff": 36, "tractogram_probabilistic_dg_sh_pfm": 36, "ptt": [37, 145, 158, 165, 167, 235, 236, 237], "aydogan2021": 37, "pttdirectiongett": [37, 177], "573": [37, 72, 82, 234], "5715": 37, "1365": [37, 82], "6999": 37, "2186": [37, 73, 82], "7535": 37, "3011": [37, 82, 84], "7794": 37, "3860": [37, 82], "8033": 37, "8107": 37, "5550": [37, 84], "6396": [37, 84], "8311": 37, "7251": 37, "8373": [37, 53], "8094": 37, "8387": 37, "8933": 37, "8240": 37, "9758": 37, "8183": 37, "10577": 37, "8152": 37, "11393": 37, "8120": 37, "12229": 37, "8180": 37, "13055": 37, "8196": 37, "13875": 37, "8067": 37, "14717": 37, "8166": 37, "15535": 37, "16389": 37, "8211": 37, "17211": 37, "8203": [37, 84], "18032": 37, "8146": 37, "18856": 37, "8164": 37, "19673": 37, "8158": 37, "20497": 37, "8174": 37, "21335": 37, "22181": 37, "8288": 37, "23010": 37, "8206": [37, 85], "23849": 37, "8254": 37, "24688": 37, "8284": 37, "25546": 37, "26398": 37, "8403": 37, "27239": 37, "8397": 37, "28079": 37, "8340": 37, "28914": 37, "29743": 37, "30581": 37, "31412": [37, 74], "8257": 37, "32258": 37, "8308": 37, "33094": 37, "8316": 37, "33927": 37, "34759": 37, "8279": 37, "35609": 37, "36452": 37, "37312": 37, "38184": 37, "8497": 37, "39067": 37, "8587": 37, "39932": [37, 85], "8583": 37, "40801": 37, "8606": 37, "41662": 37, "8595": 37, "42526": 37, "8585": 37, "43398": 37, "8614": 37, "44260": 37, "8555": 37, "45122": [37, 74], "45979": 37, "8527": 37, "46852": 37, "47729": 37, "8629": 37, "48593": 37, "49478": 37, "8634": [37, 84], "50342": 37, "8627": 37, "51205": 37, "52065": 37, "8546": [37, 84], "52924": 37, "53780": 37, "8434": 37, "54633": 37, "55493": 37, "56342": 37, "8477": 37, "57190": 37, "8363": 37, "58027": 37, "8233": 37, "8274": 37, "ptt_dg": 37, "probe_length": [37, 167], "direction_gett": [37, 177], "tractogram_ptt_dg_pmf": 37, "aydogan": [37, 167, 236], "db": [37, 167], "shi": [37, 167], "feb": [37, 167, 247, 248], "635": [37, 82, 167, 217], "647": [37, 82, 167, 222], "1109": [37, 73, 82, 89, 167, 170, 219], "tmi": [37, 167, 170], "3034038": [37, 167], "epub": [37, 167], "pmid": [37, 164, 167], "33104507": [37, 167], "pmcid": [37, 164, 167], "pmc7931442": [37, 167], "canalesrodriguez2015": [38, 89], "richardson": [38, 77, 89, 119, 170], "luci": [38, 77, 89, 119, 170], "noncentr": [38, 89, 170, 176], "chi": [38, 59, 89, 164, 170, 176], "reflect": [38, 89, 126, 131, 144, 163, 170, 176, 209], "transform_streamlin": [38, 39, 104, 134, 135, 177, 235, 236], "rumbasdmodel": [38, 89, 177], "t1_aff": [38, 39], "voxelwis": [38, 89, 170, 176, 219], "tv": [38, 89, 166, 170, 176, 202], "use_tv": [38, 89, 170, 176], "although": [38, 51, 72, 73, 83, 85, 86, 99, 152, 169, 170, 174], "wm_respons": [38, 89, 170], "n_iter": [38, 89, 170, 176], "200": [38, 44, 51, 55, 71, 82, 83, 86, 89, 105, 114, 121, 134, 146, 161, 165, 170, 176, 219, 234, 236, 247, 248], "rumba_fit": [38, 89], "fodf": [38, 67, 79, 84, 90, 155, 169, 170, 176, 217], "f_wm": [38, 89, 170, 177], "establish": [38, 94, 163], "caution": [38, 86], "isotrop": [38, 44, 60, 80, 83, 84, 89, 104, 130, 142, 161, 163, 164, 167, 169, 171, 172, 174, 176, 177, 178, 179, 230, 239], "bia": [38, 52, 83, 116, 164, 166, 169, 170, 174, 217, 223, 228], "f_wm_tracking_mask": 38, "adher": 38, "manipul": [38, 43, 141, 162, 168], "tractogram_probabilistic_rumba": 38, "canal": [38, 44, 77, 89, 119, 161, 170, 176, 224], "rodr\u00edguez": [38, 44, 89, 161, 170, 176], "sotiropoulo": [38, 44, 89, 161, 170, 176], "aja": [38, 89, 170, 176], "fern\u00e1ndez": [38, 89, 170, 176], "radua": [38, 89, 170, 176], "mendizab": [38, 89, 170, 176], "iturria": [38, 89, 170, 176], "medina": [38, 89, 170, 176], "meli": [38, 89, 170, 176], "garc\u00eda": [38, 89, 170, 176], "alem\u00e1n": [38, 89, 170, 176], "g\u00f3mez": [38, 89, 170, 176], "thiran": [38, 89, 170, 176], "sarr\u00f3": [38, 89, 170, 176], "pomarol": [38, 89, 170, 176], "clotet": [38, 89, 170, 176], "salvador": [38, 89, 170, 176], "multichannel": [38, 89, 170, 176], "ONE": [38, 39, 52, 53, 55, 89, 90, 166, 169, 170, 176, 189, 247, 248], "e0138910": [38, 89, 170, 176], "1371": [38, 39, 52, 53, 55, 82, 89, 90, 166, 169, 170, 176, 189, 221, 247, 248], "pone": [38, 39, 52, 53, 55, 89, 90, 166, 169, 170, 176, 189, 247, 248], "0138910": [38, 89, 170, 176], "sfm": [39, 44, 90, 161, 177, 218, 219, 221, 227, 230, 234, 237], "rokem2015": [39, 90, 170], "select_random_set_of_streamlin": [39, 43, 125, 177], "freesurf": [39, 131, 165], "canon": [39, 166, 170, 174], "deconvolv": [39, 71, 77, 119, 155, 170], "symmetr": [39, 44, 79, 90, 91, 99, 101, 103, 104, 113, 153, 158, 163, 164, 166, 168, 169, 170, 174, 175, 176, 208, 222, 223, 226, 230, 238, 241, 242, 245], "sf_model": [39, 90], "sparsefasciclemodel": [39, 90, 177], "l1_ratio": [39, 90, 170], "alpha": [39, 74, 86, 90, 100, 143, 149, 163, 164, 165, 166, 170, 174, 175, 176, 184, 192, 203], "001": [39, 71, 82, 84, 89, 90, 100, 163, 164, 168, 170, 174, 176], "pnm": 39, "suffici": [39, 44, 46, 89, 161, 170, 226], "high": [39, 44, 50, 51, 55, 62, 71, 73, 79, 80, 82, 83, 84, 91, 94, 111, 122, 142, 161, 163, 166, 169, 170, 171, 172, 174, 176, 184, 221, 247, 248], "sake": [39, 53, 84], "subject": [39, 58, 78, 80, 86, 88, 94, 99, 100, 108, 123, 131, 134, 142, 147, 148, 151, 154, 164, 165, 169, 170, 171, 173, 176, 181, 182, 183, 237, 240, 247, 248, 252, 253], "anatomi": [39, 43, 108, 126, 128, 145, 158, 176, 184, 185, 187, 203, 204], "throughout": [39, 100, 163, 174], "subset": [39, 163, 169], "plot_streamlin": 39, "tractogram_sfm": 39, "tractogram_sfm_detr": 39, "jason": [39, 90, 123, 170, 173], "kendrick": [39, 90, 170], "aviv": [39, 90, 170], "brian": [39, 90, 123, 170, 173], "e0123272": [39, 90, 170, 247, 248], "0123272": [39, 90, 170, 247, 248], "fa": [40, 46, 53, 62, 64, 70, 71, 73, 78, 79, 80, 84, 86, 87, 88, 89, 94, 104, 123, 134, 135, 146, 147, 155, 164, 165, 168, 170, 173, 175, 176, 177, 195, 196, 197, 199, 214, 222, 224, 226, 227, 229, 247, 248, 250], "endpoint": [40, 99, 113, 131, 170, 176, 177, 198], "outsideimag": [40, 174, 177, 219], "trackpoint": [40, 174, 177, 228], "2004": [40, 44, 75, 82, 84, 161, 165, 170, 172, 174, 234], "dti": [40, 44, 53, 62, 68, 69, 71, 72, 73, 78, 83, 84, 86, 87, 88, 94, 95, 121, 142, 146, 147, 153, 158, 161, 164, 165, 173, 176, 177, 199, 217, 218, 219, 220, 224, 225, 226, 228, 230, 231, 234, 235, 237, 238, 239, 250], "fractional_anisotropi": [40, 71, 78, 79, 177], "tensormodel": [40, 62, 69, 71, 73, 78, 80, 86, 94, 177, 219, 224, 235, 250], "320": [40, 72, 82, 83, 90, 170, 226], "3185": [40, 79, 82], "701": [40, 73, 74, 80, 82, 85, 217], "3543": [40, 82, 85], "1103": [40, 73, 82, 170, 219], "3753": [40, 82, 84], "1479": [40, 73, 82, 221], "3689": [40, 82, 84], "1849": [40, 82, 228], "3624": [40, 82], "2212": [40, 82, 84, 230], "3615": [40, 82], "2617": [40, 82, 235], "3751": [40, 82], "3029": [40, 73, 82], "3862": [40, 82], "3447": [40, 82, 84], "3950": [40, 82], "3884": [40, 82, 84], "4074": [40, 80, 82, 84], "4293": [40, 82], "4073": [40, 82], "4134": [40, 82, 84], "5181": [40, 82], "4263": [40, 82, 84], "5608": [40, 84], "6056": 40, "6486": 40, "6954": 40, "4373": [40, 82], "7406": 40, "4411": [40, 82], "7848": 40, "4382": [40, 82, 84], "8297": 40, "4408": [40, 82], "8759": 40, "9206": 40, "9666": 40, "4473": [40, 82], "10121": 40, "10571": 40, "11035": 40, "4527": [40, 82], "11502": 40, "4564": [40, 82], "11959": 40, "12442": 40, "4586": [40, 82, 84], "12916": 40, "4627": [40, 82], "13380": 40, "4528": [40, 82], "13872": 40, "14363": 40, "14835": 40, "4585": [40, 82], "15300": 40, "15777": 40, "4643": [40, 80, 82], "16246": 40, "16711": 40, "17178": 40, "4587": [40, 82], "17638": [40, 85], "18103": 40, "4601": [40, 82], "18564": 40, "4545": [40, 82, 84], "19054": 40, "19527": 40, "4663": [40, 82], "20000": 40, "20469": 40, "4676": [40, 72, 82], "20941": 40, "4685": [40, 82], "21418": 40, "4709": [40, 82], "21889": 40, "4704": [40, 72, 82], "22360": 40, "22835": [40, 85], "23319": 40, "23790": 40, "24261": 40, "4603": [40, 79, 82], "24757": 40, "4702": [40, 82], "25243": 40, "4741": [40, 82], "25718": 40, "26190": 40, "4638": [40, 82], "26689": 40, "27170": 40, "4751": [40, 53, 82], "27646": 40, "4749": [40, 82], "28122": 40, "28593": 40, "4683": [40, 53, 82], "29065": 40, "4688": [40, 82], "29534": 40, "4668": [40, 82], "30009": 40, "4686": [40, 82, 84], "30478": 40, "4639": [40, 82], "30968": 40, "4711": [40, 82], "31440": 40, "4712": [40, 53, 82], "31916": 40, "4721": [40, 53, 82], "32404": 40, "32881": 40, "33368": 40, "33851": 40, "34328": 40, "4744": [40, 53], "34803": 40, "35284": 40, "4756": [40, 82], "35764": 40, "36249": 40, "4784": [40, 53, 82], "36735": 40, "37216": 40, "4727": [40, 82], "4739": [40, 82, 84], "38170": 40, "4738": [40, 82], "38644": 40, "39127": 40, "4687": 40, "39597": 40, "40071": 40, "4675": [40, 82], "40539": 40, "4641": [40, 82], "41004": 40, "41468": 40, "41929": 40, "4540": [40, 82, 84], "42392": 40, "4561": [40, 82], "42849": [40, 53], "43306": [40, 85], "4543": [40, 82], "43761": 40, "4446": [40, 82], "44207": 40, "4406": [40, 82], "44649": 40, "4394": [40, 72, 82], "45089": 40, "45547": 40, "4389": [40, 53, 82], "45987": 40, "46424": 40, "46853": 40, "4261": [40, 82, 84], "47280": 40, "47723": 40, "4302": [40, 82, 84], "48176": 40, "4364": [40, 79, 82], "48613": 40, "4322": [40, 82], "49497": 40, "49926": 40, "50382": 40, "4356": [40, 82], "50818": 40, "4351": [40, 82], "51261": 40, "51698": 40, "4299": [40, 82], "52152": 40, "52623": 40, "53072": 40, "53561": 40, "54038": 40, "54502": 40, "54965": 40, "55463": 40, "55945": 40, "56417": 40, "4429": [40, 82], "56901": [40, 85], "4541": [40, 82], "57359": 40, "4551": [40, 82], "57851": 40, "4653": [40, 82], "58324": 40, "58806": 40, "59278": 40, "4691": [40, 53, 82], "59748": 40, "4621": [40, 82], "60259": 40, "4758": [40, 82], "60736": 40, "61210": 40, "4725": [40, 53, 82], "61694": 40, "4754": [40, 82, 84], "62170": 40, "62674": 40, "4810": [40, 82], "63169": 40, "4838": [40, 53, 82, 84], "63654": 40, "4818": [40, 82], "64139": 40, "4822": [40, 82], "64622": 40, "4821": [40, 82, 84], "65118": 40, "4862": [40, 53, 82], "65605": 40, "66092": 40, "66571": 40, "4726": [40, 82, 84], "67092": 40, "4855": [40, 53, 82], "67581": 40, "4857": [40, 53, 82], "68068": 40, "4841": [40, 53, 82], "68553": 40, "69036": 40, "69549": 40, "4859": [40, 53, 82], "70038": 40, "70525": 40, "4745": [40, 82, 84], "71001": 40, "71474": 40, "71964": 40, "4730": [40, 82], "72438": 40, "72916": 40, "4718": [40, 82, 84], "73389": 40, "4580": [40, 82], "73894": 40, "74371": 40, "74851": 40, "75326": 40, "75791": 40, "76266": 40, "76735": 40, "4660": [40, 53, 82, 84], "77202": 40, "4582": [40, 82], "77721": 40, "4753": [40, 82], "78197it": 40, "78671it": 40, "4729": [40, 82], "79145it": 40, "4657": [40, 53, 82], "79683it": 40, "4864": [40, 53, 82, 84], "80171it": 40, "80654it": 40, "4817": [40, 53, 74, 82], "81137it": 40, "4690": [40, 82], "81649it": 40, "82131it": 40, "4798": [40, 53, 82], "82612it": 40, "4796": [40, 82], "83093it": 40, "83593it": 40, "4769": [40, 53, 82], "84071it": 40, "84549it": 40, "85014it": 40, "4478": [40, 72, 82], "85493it": 40, "4560": [40, 82, 84], "85955it": 40, "86414it": 40, "4513": [40, 82], "86904it": 40, "87367it": 40, "4579": [40, 82, 84], "87826it": 40, "4510": [40, 82], "88310it": 40, "88771it": 40, "4463": [40, 82, 84], "89219it": 40, "4336": [40, 82], "89681it": 40, "90124it": 40, "90593it": 40, "91040it": 40, "4416": [40, 82], "91497it": 40, "91943it": 40, "4422": [40, 72, 82], "92386it": 40, "4355": [40, 82], "92834it": 40, "93273it": 40, "4254": [40, 72, 82], "93717it": 40, "94149it": 40, "4168": [40, 72, 82], "94585it": 40, "95008it": 40, "95424it": 40, "4133": [40, 82], "95838it": 40, "4070": [40, 82, 85], "96246it": 40, "3987": [40, 82], "96646it": 40, "3951": [40, 82], "metric_map": [40, 174], "tensor_model": 40, "tenfit": [40, 71, 73, 78, 86, 226, 250], "eval": [40, 71, 77, 78, 89, 94, 119, 121, 146, 170, 172, 174, 176, 177, 197, 199], "threshold_criterion": 40, "mask_fa": 40, "xtick": [40, 51, 53, 55, 74, 80, 85], "ytick": [40, 51, 53, 55, 74, 80, 85], "nearest": [40, 67, 74, 76, 79, 82, 86, 93, 109, 131, 163, 164, 171, 174, 176, 209, 236], "tight_layout": [40, 72, 86, 87, 102], "threshold_fa": 40, "tractogram_probabilistic_thresh_al": 40, "tractogram_deterministic_thresh_al": 40, "neighborhood": [40, 108, 163, 171, 176, 179], "binary_criterion": 40, "white_matter_mask": 40, "tractogram_deterministic_binary_al": 40, "include_map": [40, 174, 176, 215], "exclude_map": [40, 174, 176, 215], "stem": [40, 174], "plausibl": [40, 73, 170], "act_criterion": 40, "121": [40, 82, 83, 102, 224], "122": [40, 82, 83, 87, 102, 114, 170, 224], "act_map": 40, "tractogram_deterministic_act_al": 40, "tractogram_deterministic_act_valid": 40, "cut": [40, 174, 175], "subcort": [40, 174], "626": [73, 82, 84, 217], "examples_builtfile_format": 42, "streamline_format": [42, 43, 238], "complex": [43, 126, 144, 158, 170, 234, 243, 245], "question": [43, 62, 123, 131, 160, 174, 221, 230, 236, 237, 240, 253], "create_nifti_head": [43, 177], "get_reference_info": [43, 177], "is_header_compat": [43, 177], "fetcher": [43, 74, 82, 86, 96, 104, 123, 134, 158, 169, 177, 218, 219, 222, 225, 226, 228, 230, 231, 233, 235, 237], "fetch_file_format": [43, 177], "get_file_format": [43, 177], "cc_m_sub": 43, "laf_m_sub": 43, "lpt_m_sub": 43, "raf_m_sub": 43, "rpt_m_sub": 43, "template0": 43, "nii": [43, 49, 50, 52, 53, 54, 55, 58, 59, 60, 62, 64, 67, 78, 79, 80, 96, 97, 107, 123, 128, 131, 137, 138, 141, 142, 146, 147, 151, 152, 154, 155, 156, 157, 160, 168, 176, 185, 187, 192, 203, 204, 210, 212, 217, 221, 230, 235, 250], "gz": [43, 49, 50, 52, 53, 54, 55, 58, 59, 60, 62, 64, 67, 78, 79, 80, 96, 97, 107, 123, 128, 131, 134, 137, 138, 141, 146, 147, 151, 152, 154, 155, 156, 157, 160, 168, 176, 185, 187, 192, 203, 204, 210, 212, 230, 235, 250], "bundles_filenam": 43, "ref_anat_filenam": 43, "basenam": [43, 168], "reference_anatomi": 43, "cc_trk": 43, "cc_sft": 43, "laf_sft": 43, "raf_sft": 43, "998783": 43, "041415": 43, "026771": 43, "109": [43, 82, 83, 84, 174, 224], "003548": 43, "044491": 43, "990912": 43, "126939": 43, "126": [43, 62, 72, 73, 82, 83, 102, 105, 114, 158, 224], "781647": 43, "021270": 43, "127975": 43, "991549": 43, "033348": 43, "000000": [43, 64, 76, 93], "224": [43, 82, 83, 114], "140": [43, 73, 82, 83, 86, 98, 99, 134, 148, 156, 163, 165, 176, 211, 224, 247, 248], "voxel_ord": [43, 168, 177], "ra": [43, 104, 134, 146, 164, 168, 171], "streamline_count": 43, "6276": 43, "point_count": 43, "205884": 43, "data_per_streamlin": [43, 168, 176, 177, 214, 215, 237], "data_per_point": [43, 168, 177, 234], "anywai": [43, 241, 242], "lpt_sft": 43, "bbox_valid_check": [43, 100, 104, 108, 109, 111, 112, 113, 114, 123, 124, 168, 171], "rpt_sft": 43, "nifti1": [43, 165, 176, 194, 204, 213], "nifti1imag": [43, 70, 72, 73, 75, 76, 81, 93, 163, 165, 168], "trkfile": [43, 168], "nifti1head": [43, 168], "dict": [43, 51, 163, 164, 165, 168, 169, 170, 172, 174, 175, 176], "9878335e": 43, "1415159e": 43, "6770778e": 43, "0900355e": 43, "4491168e": 43, "9091226e": 43, "2693870e": 43, "2678165e": 43, "1270305e": 43, "2797531e": 43, "9154925e": 43, "7033348e": 43, "0000000e": 43, "accept": [43, 159, 164, 171, 224], "varieti": [43, 83, 97, 113, 155], "fake": 43, "wish": [43, 89], "freedom": [43, 96, 143, 163], "beginn": [43, 230], "create_tractogram_head": [43, 108, 177], "nifti_head": 43, "lpt": 43, "rpt": 43, "safer": [43, 96], "laf": 43, "raf": 43, "is_bbox_in_vox_valid": [43, 168, 177], "remove_invalid_streamlin": [43, 168, 177], "removing_invalid_coordin": 43, "to_voxmm": [43, 168, 177], "to_rasmm": [43, 168, 177], "voxmm": [43, 168, 171, 174, 177], "subsampl": [43, 88, 163, 166, 174], "mi": [43, 96, 97, 163, 168, 176, 234], "corner": [43, 97, 164, 168, 174, 222, 229], "to_corn": [43, 168, 177], "cc_streamlines_vox": 43, "laf_streamlines_vox": 43, "raf_streamlines_vox": 43, "lpt_streamlines_vox": 43, "rpt_streamlines_vox": 43, "reus": [43, 62, 170, 229], "space_attribut": [43, 108, 168, 177], "cc_densiti": 43, "laf_dens": 43, "raf_dens": 43, "lpt_densiti": 43, "rpt_densiti": 43, "explicitli": [43, 76, 83, 86, 163, 164, 169, 170, 171, 218, 219, 228, 237], "care": [43, 62, 75, 85, 89, 111, 158, 168, 170, 174, 176], "metadata": [43, 168, 169], "mention": [43, 53, 73, 82, 84, 147, 219], "vox": [43, 131, 168, 177], "cc_1000": 43, "laf_1000": 43, "raf_1000": 43, "lpt_1000": 43, "rpt_1000": 43, "experi": [44, 82, 86, 105, 147, 165], "synthet": [44, 145, 158, 165, 170, 247, 248], "alter": [44, 174], "dwi": [44, 55, 57, 59, 61, 62, 67, 79, 80, 83, 85, 86, 96, 142, 146, 151, 155, 163, 165, 166, 169, 170, 171, 174, 175, 176, 212, 230, 231, 236, 238, 250], "piesno": [44, 57, 61, 158, 177, 217, 218, 219, 221, 226, 238], "nlmean": [44, 50, 57, 61, 85, 138, 153, 176, 177, 191, 217, 218, 219, 226, 233, 237, 238], "supervis": [44, 57, 61, 158, 166, 176, 192, 232, 238], "independ": [44, 57, 61, 85, 111, 166, 170, 174, 176, 231, 238], "pca": [44, 55, 57, 61, 73, 84, 85, 153, 158, 174, 176, 177, 189, 190, 219, 220, 222, 228, 231, 235, 236, 237, 238], "empir": [44, 50, 57, 61, 85, 174, 238], "soft": [44, 54, 57, 61, 166, 238], "ascm": [44, 54, 57, 61, 238], "marcenko": [44, 52, 57, 61, 73, 153, 166, 176, 189, 190, 238], "pastur": [44, 52, 57, 61, 73, 153, 166, 176, 189, 190, 238], "suppress": [44, 50, 53, 57, 61, 73, 80, 83, 151, 153, 166, 219, 220, 221, 222, 238], "gibb": [44, 57, 61, 73, 153, 158, 171, 176, 177, 202, 228, 229, 230, 231, 233, 236, 238], "oscil": [44, 57, 61, 73, 83, 92, 153, 163, 170, 238], "singl": [44, 51, 67, 70, 71, 73, 75, 78, 79, 85, 88, 89, 90, 94, 97, 99, 100, 102, 121, 122, 123, 128, 131, 142, 144, 146, 148, 149, 155, 158, 161, 163, 164, 167, 168, 169, 170, 171, 172, 174, 176, 180, 195, 196, 198, 217, 222, 228, 231, 235, 239], "sl": [44, 126, 161, 218], "nnl": [44, 161, 164, 170], "ye": [44, 142, 161], "typic": [44, 73, 88, 90, 96, 104, 131, 151, 161, 163, 167, 168, 170, 171, 172, 173, 174, 176, 241, 242], "1200": [44, 82, 84, 134, 136, 137, 146, 161, 219, 247, 248], "success": [44, 161, 168, 169, 170, 252], "basser": [44, 52, 78, 155, 161, 166, 170, 176, 199, 241], "1994": [44, 78, 82, 155, 161, 170, 176, 199, 229, 241], "yendiki2013": [44, 94, 161], "chang2005": [44, 94, 161, 170], "chung2006": [44, 94, 161], "fwdti": [44, 80, 161, 177, 219, 220, 228], "acquist": [44, 161], "500mm": [44, 161], "1500mm": [44, 161], "pasternak": [44, 80, 161], "2009": [44, 59, 80, 82, 92, 104, 105, 106, 156, 161, 163, 164, 165, 166, 170, 171, 176, 195, 229, 247, 248], "dual": [44, 161, 174], "echo": [44, 82, 142, 155, 161, 165, 170, 172, 176, 199, 200, 241, 243], "epi": [44, 161], "acquir": [44, 50, 51, 52, 54, 55, 58, 59, 64, 71, 72, 73, 74, 79, 80, 82, 85, 87, 88, 92, 121, 142, 152, 154, 155, 161, 164, 165, 166, 170, 174, 176, 202], "jensen2005": [44, 73, 85, 155, 161], "tom": [44, 161, 163, 219, 235, 236], "dela": [44, 73, 83, 88, 161, 164, 165, 170, 235, 236], "haij": [44, 73, 83, 88, 161, 164, 165, 170, 235, 236], "micro": [44, 78, 155, 161, 219], "wmti": [44, 68, 73, 95, 161, 228, 238], "increment": [44, 161, 164], "fiereman": [44, 51, 53, 55, 73, 74, 152, 155, 161, 166, 170, 176, 189, 190], "tabesh": [44, 73, 74, 161, 170, 176, 197], "7t": [44, 55, 161], "3000": [44, 73, 82, 84, 146, 161, 165, 237, 247, 248], "aganj": [44, 46, 70, 146, 161, 170, 172, 176, 195], "westin": [44, 87, 88, 161, 164, 165, 170, 225], "ivim": [44, 82, 153, 158, 161, 165, 176, 177, 200, 219, 222, 223, 228, 229, 230, 234, 235, 247, 248], "lebihan": [44, 78, 155, 161, 170, 176, 199, 241], "1984": [44, 82, 108, 161, 164, 229], "sdt": [44, 161, 170, 217, 218, 225, 228], "qbi": [44, 142, 161, 239, 245], "1000mm": [44, 161], "dsi": [44, 68, 75, 81, 93, 95, 118, 120, 142, 158, 161, 165, 176, 177, 198, 217, 219, 224, 225, 226, 238, 239, 247, 248], "515": [44, 56, 82, 86, 161, 165, 226], "encod": [44, 72, 85, 87, 88, 158, 161, 163, 164, 165, 168, 169, 170, 237, 241], "subsequ": [44, 90, 161, 166, 171], "half": [44, 69, 87, 161, 164, 170, 174], "mm2": [44, 161], "dsid": [44, 77, 119, 161], "203": [44, 75, 76, 81, 82, 83, 93, 161, 165, 225, 247, 248], "radiu": [44, 50, 52, 105, 109, 151, 161, 163, 164, 166, 167, 170, 171, 172, 174, 175, 176, 179, 189, 190, 192, 207, 233, 234, 241, 246], "4000mm": [44, 161], "rodriguez": [44, 77, 89, 119, 161, 170, 224], "4000": [44, 82, 84, 161, 247, 248], "258": [44, 72, 82, 83, 161], "opdt": [44, 161], "tuch": [44, 75, 161, 170], "2007": [44, 71, 76, 82, 84, 89, 93, 161, 166, 167, 170, 172, 176, 196, 230, 245], "tristan": [44, 161, 170], "vega": [44, 161, 170], "shore": [44, 68, 95, 161, 177, 222, 225, 226, 229, 234, 238, 239], "514": [44, 77, 82, 119, 161, 226], "five": [44, 161, 169, 170], "lattic": [44, 105, 161, 163, 175], "\u00f6zarslan": [44, 92, 161], "six": [44, 78, 92, 155, 161, 163, 170, 225, 228], "5000": [44, 53, 56, 82, 85, 91, 122, 161, 164, 170], "6000": [44, 72, 84, 161], "170": [44, 73, 82, 83, 86, 161, 225, 247, 248], "olson": [44, 161], "ozarslan": [44, 59, 83, 88, 161, 166, 170], "1016": [44, 51, 53, 72, 73, 80, 82, 87, 88, 89, 152, 161, 163, 164, 165, 166, 170, 176, 189, 190, 219, 247, 248], "116405": [44, 73, 83, 161, 164, 165, 170], "mapl": [44, 83, 158, 161, 170, 220, 221], "wu": [44, 76, 93, 116, 161, 170], "minn": [44, 161], "hcp": [44, 55, 67, 83, 158, 161, 165, 170, 217, 222, 226, 234, 235, 237, 247, 248], "sm": [44, 161], "mt": [44, 86, 161, 164, 165], "jeurissen": [44, 51, 71, 73, 84, 89, 152, 161, 170], "forecast": [44, 68, 95, 158, 161, 177, 221, 222, 238], "1480": [44, 82, 161, 221], "anderson": [44, 79, 161, 169, 170], "2005": [44, 73, 79, 82, 85, 90, 94, 155, 161, 163, 170, 174, 176, 197, 199, 229], "256": [44, 72, 82, 83, 114, 116, 146, 158, 161, 163, 164, 169, 171, 176, 179, 226, 230], "qti": [44, 68, 72, 95, 158, 161, 175, 177, 235, 238], "216": [44, 73, 82, 83, 161, 225], "250": [44, 72, 73, 82, 83, 137, 155, 161, 163, 170, 176], "200mm": [44, 161], "stick": [44, 85, 122, 161, 170, 172], "prolat": [44, 71, 90, 161, 170, 172, 224], "plane": [44, 83, 86, 121, 134, 137, 144, 155, 161, 164, 170, 174, 228, 241, 246], "120": [44, 51, 73, 82, 83, 84, 96, 97, 134, 152, 161, 163, 224, 247, 248], "morez": [44, 161], "217": [44, 82, 83, 88, 161, 165, 225], "herberthson": [44, 88, 161, 170], "jone": [44, 56, 62, 94, 161, 164, 170, 176, 197, 199], "1999": [44, 56, 73, 78, 82, 161, 174, 222, 229], "behren": [44, 161, 170, 172], "2003": [44, 82, 96, 97, 161, 163, 229], "qtau": [44, 86, 158, 161, 222], "strength": [44, 78, 86, 142, 155, 161, 163, 164, 165, 170, 172, 176, 184, 198, 247, 248], "dellacqua2014": [44, 84, 161], "smt": [44, 79, 85, 161, 170], "smt2": [44, 158, 161, 170, 231], "\u03bcm2": [44, 161], "\u03bcm": [44, 161], "rapid": [44, 144, 161], "netohe2019": [44, 85, 161], "kaden2016b": [44, 85, 161], "cti": [44, 72, 145, 161, 165, 177, 237], "netohe2020": [44, 72, 161, 170], "novellol2022": [44, 72, 161], "nethe2021": [44, 72, 161], "spectrum": [44, 68, 77, 95, 119, 162, 170, 176, 198, 238], "correl": [44, 68, 95, 104, 105, 106, 145, 151, 156, 158, 163, 164, 170, 174, 176, 179, 219, 237, 238], "histolog": [44, 68, 95, 169, 238], "resdnn": [44, 68, 95, 158, 165, 169, 234, 238], "contamin": [44, 68, 95, 170, 238], "intravoxel": [44, 68, 95, 153, 170, 176, 200, 238], "msdki": [44, 51, 68, 73, 95, 177, 237, 238], "qt": [44, 68, 95, 165, 170, 238, 247, 248], "buan": [44, 100, 127, 129, 153, 158, 163, 175, 176, 203, 230, 231, 232, 238], "score": [44, 69, 126, 127, 129, 147, 171, 174, 222, 238], "creation": [44, 113, 127, 129, 145, 158, 169, 171, 176, 217, 222, 224, 238], "afq": [44, 127, 129, 228, 233, 238], "outlier": [44, 73, 94, 108, 127, 129, 163, 170, 176, 197, 199, 222, 238], "confid": [44, 127, 129, 164, 174, 238], "index": [44, 75, 83, 86, 94, 104, 127, 129, 163, 164, 166, 170, 171, 172, 174, 175, 219, 224, 225, 228, 234, 235, 237, 238], "groupwis": [44, 101, 103, 158, 163, 235, 238], "diffeomorph": [44, 101, 103, 104, 153, 158, 163, 175, 176, 179, 180, 223, 226, 231, 235, 238], "fuzzi": [44, 101, 103, 222, 238], "nonrigid": [44, 101, 103, 153, 176, 184, 238], "bundlewarp": [44, 101, 103, 145, 153, 158, 175, 176, 177, 184, 236, 237, 238], "deform": [44, 96, 97, 100, 101, 102, 103, 105, 153, 163, 174, 175, 176, 179, 184, 221, 229, 230, 237, 238], "classif": [44, 53, 84, 110, 115, 151, 158, 165, 171, 219, 230, 238], "examples_built_python": 44, "zip": [44, 86, 111, 112, 113, 114, 237], "examples_built_jupyt": 44, "mrm": [46, 51, 53, 55, 70, 72, 73, 75, 80, 85, 94, 146, 152, 164, 165, 166, 170, 172, 176, 189, 190, 197, 199, 202], "maskdata": [46, 47, 51, 53, 70, 73, 74, 78, 85], "numpass": [46, 47, 49, 51, 53, 70, 73, 74, 78, 84, 85, 89, 104, 105, 106, 107, 146, 171, 176, 207], "autocrop": [46, 47, 49, 51, 53, 70, 73, 74, 78, 85, 107, 171, 176, 207], "dilat": [46, 47, 51, 53, 70, 73, 74, 78, 85, 131, 171, 176, 207], "instanti": [46, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 92, 93, 96, 105, 164, 170, 172, 176], "csamodel": [46, 70, 131], "mainli": [46, 62, 70, 71, 112, 155, 164, 169], "start_tim": [46, 47], "processor": [46, 174], "sens": [46, 59, 83, 86, 89, 92, 102, 128, 166, 170, 174, 176, 240, 242], "csapeaks_parallel": 46, "return_odf": [46, 47, 70, 81, 167], "normalize_peak": [46, 47, 70, 81, 89, 167, 170, 176, 198], "npeak": [46, 47, 89, 167, 174, 176, 228], "time_parallel": [46, 47], "ran": [46, 47], "str": [46, 47, 116, 137, 146, 163, 164, 165, 166, 168, 169, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "51548433303833": 46, "csapeak": [46, 70, 131], "time_singl": [46, 47], "speedup": [46, 47, 113, 158, 171], "factor": [46, 47, 84, 89, 92, 96, 97, 104, 116, 131, 163, 164, 166, 170, 176, 178, 179, 189, 201, 231, 241, 245], "67166948318481": 46, "6782092417440397": 46, "frozen": [46, 47, 226], "__name__": [46, 47], "__main__": [46, 47], "freeze_support": [46, 47], "836": [46, 48, 74, 82, 170, 176, 197, 218], "reconst_csa_parallel": [46, 48, 238], "cpu": [47, 152, 174, 225], "durat": [47, 78, 86, 142, 155, 164], "csd_peaks_parallel": 47, "csd_peak": [47, 71], "166364431381226": 47, "695005893707275": 47, "0473423078365944": 47, "108": [47, 48, 73, 79, 82, 83, 166, 170, 224], "reconst_csd_parallel": [47, 48, 238], "943": [48, 82, 170, 219], "examples_builtmultiprocess": 48, "b0": [49, 51, 53, 55, 56, 62, 67, 71, 76, 85, 89, 96, 97, 104, 105, 106, 107, 122, 145, 146, 155, 158, 163, 164, 165, 166, 169, 170, 172, 176, 188, 189, 192, 195, 196, 197, 199, 200, 201, 204, 217, 218, 222, 226, 237, 247, 248], "histeq": [49, 107, 177], "save_nifti": [49, 50, 52, 53, 54, 55, 58, 59, 60, 62, 64, 67, 78, 107, 128, 131, 160, 177, 250], "scil_b0": [49, 107, 247, 248], "compani": [49, 107], "tesla": [49, 107, 165], "siemen": [49, 50, 59, 89, 107, 142, 165, 166, 170, 171, 176, 247, 248], "data_fnam": [49, 107], "squeez": [49, 67, 96, 97, 106, 107, 170, 174, 227], "fine": [49, 97, 102, 107], "tune": [49, 107], "num_pass": [49, 107], "yield": [49, 59, 107, 163, 167], "incorrect": [49, 107, 219, 232, 237], "float32": [49, 78, 102, 105, 107, 128, 167, 168, 171, 174, 176, 233], "fname": [49, 99, 100, 107, 111, 112, 113, 114, 125, 163, 164, 165, 168, 171, 175, 176], "se_1": [49, 107], "5t": [49, 50, 107, 165, 171], "_binary_mask": [49, 107], "astyp": [49, 50, 54, 59, 62, 67, 76, 78, 97, 102, 107, 128, 131, 170, 174, 237], "_mask": [49, 107], "middl": [49, 50, 51, 52, 53, 55, 64, 77, 86, 96, 106, 107, 111, 119, 130, 137, 165, 171, 174, 175], "axesimag": [], "0x000001338088a2c0": [], "crop": [49, 78, 107, 176, 177, 207], "largest": [49, 107, 163, 167, 169, 170, 176], "smaller": [49, 50, 71, 82, 83, 86, 88, 107, 108, 121, 124, 142, 163, 164, 166, 170, 171, 174, 175, 176, 189, 203], "auto": [49, 84, 107, 108, 164, 169, 175, 176, 207, 219, 226, 228, 230, 236], "b0_mask_crop": [49, 107], "mask_crop": [49, 107], "_binary_mask_crop": [49, 107], "_mask_crop": [49, 107], "128": [50, 64, 82, 83, 114, 116, 135, 169, 224, 234], "brain_extraction_dwi": [49, 61, 238], "coupe11": [50, 54, 151, 166], "degre": [50, 73, 77, 78, 85, 96, 119, 143, 155, 163, 164, 165, 166, 167, 170, 171, 172, 174, 245], "sharp": [50, 170], "non_local_mean": [50, 54, 177, 228], "radii": [50, 71, 164, 170, 172, 174, 176, 196, 222, 230], "involv": [50, 52, 71, 73, 84, 151, 155, 156, 163, 176, 241], "wavelet": [50, 177], "decomposit": [50, 166, 170, 176, 189, 190, 234, 241, 242], "frequenc": [50, 51, 73], "noise_estim": [50, 54, 59, 94, 177], "estimate_sigma": [50, 54, 94, 177, 217, 226], "adaptive_soft_match": [50, 177, 236], "dwi_fnam": [50, 52, 53, 58, 59], "dwi_bval_fnam": [50, 52, 53, 58, 59], "dwi_bvec_fnam": [50, 52, 53, 58, 59], "sherbrooke_3shel": [50, 58, 59, 64, 150, 151, 154, 247, 248], "denoin": 50, "noqa": [50, 53, 114, 164, 165, 170], "e501": [50, 53, 114], "coil": [50, 54, 59, 89, 166, 170, 176], "sigma": [50, 52, 53, 54, 59, 62, 73, 74, 94, 96, 97, 102, 104, 151, 163, 166, 170, 171, 172, 176, 178, 189, 190, 191, 197, 199, 219, 234], "sharper": [50, 77, 119, 170], "den_smal": 50, "patch_radiu": [50, 52, 53, 54, 84, 151, 166, 176, 189, 190, 191, 192, 230, 237], "block_radiu": [50, 54, 166, 176, 191], "den_larg": 50, "varianc": [50, 52, 53, 72, 78, 83, 86, 151, 155, 163, 166, 170, 171, 174, 176, 197, 199, 226, 228, 233], "itself": [50, 72, 86, 88, 113, 147, 165, 169, 170, 171, 252], "den_fin": 50, "760449409484863": 50, "plot": [50, 51, 52, 53, 54, 69, 73, 74, 80, 82, 83, 85, 86, 88, 90, 100, 105, 106, 116, 121, 122, 123, 130, 147, 163, 170, 174, 176, 177, 219, 221, 224, 226, 228, 249], "axial_middl": [50, 54, 64], "final_output": 50, "ab": [50, 51, 54, 80, 97, 164, 170, 174, 224], "set_titl": [50, 51, 52, 53, 54, 55, 59, 72, 80, 82, 85, 86, 87, 89, 97, 102, 116], "denoised_ascm": 50, "bbox_inch": [49, 50, 52, 54, 59, 62, 64, 75, 79, 97, 107, 116, 121, 122], "tight": [49, 50, 52, 54, 59, 62, 64, 75, 79, 97, 107, 116, 121, 122], "dictat": [50, 88], "ascm_comparison": 50, "outperform": 50, "pierrick": [50, 54, 151, 166], "coup": [50, 52, 53, 54, 55, 151, 166, 171, 176, 189], "jose": [50, 54, 151, 164, 166], "manjon": [50, 52, 53, 54, 55, 151, 166, 176, 189], "montserrat": [50, 54, 151, 166], "robl": [50, 54, 151, 166], "loui": [50, 54, 151, 165, 166], "collin": [50, 52, 53, 54, 55, 151, 165, 166, 176, 189, 247, 248], "multiresolut": [50, 54, 151, 166], "iet": [50, 54, 151, 166], "engin": [50, 54, 73, 89, 151, 166, 170], "00645538": 50, "254": [50, 72, 82, 83, 170, 176, 199], "denoise_ascm": [50, 61, 238], "magnet": [51, 53, 54, 55, 56, 67, 70, 72, 73, 74, 75, 76, 79, 82, 84, 85, 89, 93, 142, 146, 151, 152, 155, 165, 166, 169, 170, 171, 172, 175, 176, 189, 190, 197, 199, 203, 243], "fourier": [51, 83, 152, 170, 241], "finit": [51, 86, 152, 163, 164, 174], "corrupt": [51, 73, 80, 83, 85, 94, 152, 166, 170, 174], "artefact": [51, 55, 73, 80, 85, 152, 154, 166, 170, 229], "manifest": [51, 152, 226], "intens": [51, 59, 121, 152, 163, 166, 169, 170, 171, 174, 175, 176, 192, 219], "adjac": [51, 89, 113, 152, 170, 171, 175, 237], "edg": [51, 73, 152, 164, 165, 166, 170, 174, 177, 224, 226, 252], "context": [51, 113, 116, 128, 152, 169], "magnifi": [51, 152], "chapter": 51, "gibbs_remov": [51, 177, 231, 236], "read_cenir_multib": [51, 177], "t1_denoised_fnam": 51, "ap_fnam": 51, "tissue_data": [51, 116, 152, 247, 248], "axial_slic": [51, 74, 85], "t1_slice": 51, "figsiz": [51, 53, 55, 72, 74, 76, 79, 80, 85, 86, 87, 89, 93, 102, 174], "wspace": [51, 53, 55, 80, 85], "vmin": [51, 53, 72, 73, 74, 80, 83, 85, 87, 93, 128, 175], "vmax": [51, 53, 72, 73, 74, 80, 83, 85, 87, 128, 175], "400": [51, 73, 82, 83, 116, 146, 165, 170, 171, 176, 222, 247, 248], "evid": [51, 72, 228], "artifici": [51, 94, 121], "fft": [51, 170, 231], "fft2": 51, "fftshift": 51, "c_crop": 51, "192": [51, 53, 73, 82, 83, 84, 85, 165, 228], "t1_gibb": 51, "ifft2": 51, "t1_unr": 51, "fig1": [51, 53, 55, 74, 80, 85], "subplot_kw": [51, 53, 55, 74, 80, 85], "ring": [51, 73, 152, 158, 166, 176, 202, 229, 233], "fontsiz": [51, 86], "xy": [51, 78, 155, 164, 228, 241, 242], "xycoord": 51, "xytext": 51, "textcoord": 51, "offset": [51, 100, 163, 164, 170, 172, 174, 175, 176, 187], "arrowprop": 51, "arrowstyl": 51, "gibbs_suppression_structur": 51, "uncorrect": 51, "panel": [51, 52, 53, 73, 74, 80, 85, 134, 137, 177], "characterist": [51, 62, 149, 164, 174], "appreci": [51, 53], "arrow": 51, "artefactu": [51, 73], "compromis": [51, 53], "contrast": [51, 73, 74, 76, 78, 82, 83, 84, 85, 104, 130, 146, 151, 165, 170, 247, 248], "grei": [51, 84, 86, 89, 131, 157, 170, 176, 215], "highlight": [51, 147, 176, 203, 222, 226, 231], "kindli": [51, 53, 73, 74, 84, 85, 146, 246], "suppli": [51, 165, 174, 175], "romain": 51, "valabr\u00e8gu": 51, "cenir": [51, 165, 217, 218, 221, 234, 247, 248], "icm": [51, 116, 171, 237], "pari": 51, "asarrai": [51, 79, 80, 111, 135, 174], "data_slic": [51, 82], "data_correct": [51, 58], "slice_axi": [51, 166, 176, 202], "fig2": [51, 53, 85], "10000": [51, 58, 74, 82, 96, 97, 104, 163, 170, 175, 176, 223, 228], "gibbs_suppression_b0": 51, "unnecessari": [51, 72, 73, 80, 85, 164, 169, 219, 222, 234, 235], "dki_model": [51, 85], "meandiffusionkurtosismodel": [51, 85, 177], "dki_fit": [51, 85], "mskini": 51, "msk": [51, 85, 170, 177], "mskgib": 51, "fig3": [51, 53, 85], "gibbs_suppression_msdki": 51, "black": [51, 87, 135, 175, 226, 230], "ventricl": [51, 80, 97], "seem": [51, 85, 170, 220, 221, 224, 226], "veraart": [51, 53, 55, 73, 152, 166, 170, 176, 189, 190], "jelescu": [51, 152], "knoll": [51, 55, 152], "novikov": [51, 53, 55, 74, 152, 166, 176, 189, 190], "magn": [51, 72, 80, 152, 166, 167, 170, 176, 177, 197, 199, 202, 245], "301": [51, 82, 83, 90, 152, 170, 226], "314": [51, 72, 79, 82, 83, 152, 226], "1002": [51, 53, 55, 70, 72, 73, 74, 80, 82, 85, 146, 152, 166, 167, 170, 174, 176, 189, 190, 202, 219], "25866": [51, 152], "perron": [51, 73, 152, 170], "aelterman": [51, 73, 152], "piz": [51, 73, 152], "urica": [51, 73, 152], "philip": [51, 73, 89, 152, 165, 166, 170, 171, 176, 247, 248], "leeman": [51, 71, 73, 89, 152, 164, 170], "441": [51, 54, 55, 73, 79, 82, 83, 151, 152, 166, 170], "455": [51, 73, 82, 83, 93, 152, 226], "068": [51, 73, 152], "kellner": [51, 166, 176, 202], "dhital": [51, 166, 176, 202], "kiselev": [51, 166, 176, 202], "reisert": [51, 166, 176, 202, 231], "subvoxel": [51, 166, 176, 202], "1574": [51, 82, 222], "1581": [51, 82, 222], "26054": [51, 166, 176, 202], "healthi": [51, 53, 73, 79, 85, 88, 116, 147, 158, 165, 166, 170, 176, 202], "ag": [51, 53, 73, 80, 85, 165, 166, 170, 176, 202, 247, 248], "doctor": [51, 53, 73, 85, 166, 170, 176, 202], "17863": [51, 53, 73, 85, 166, 170, 176, 202], "cam": [51, 53, 73, 85, 166, 170, 176, 202], "29356": [51, 53, 73, 85, 166, 170, 176, 202], "retriev": [51, 130, 138, 163, 166, 170, 171, 174, 247], "digit": [51, 64, 134, 165, 174], "researchwork": [51, 64, 134, 165], "1773": [51, 64, 74, 82, 84, 134, 165], "33311": [51, 165], "356": [51, 79, 82, 83, 226], "denoise_gibb": [51, 61, 238], "explor": [52, 73, 74, 84, 85, 104, 121, 146, 151, 155, 170, 172, 174, 247, 248], "manjon2013": [52, 53, 55, 176, 189], "around": [52, 62, 71, 82, 143, 151, 164, 166, 170, 174, 175, 176, 189, 190, 192, 217, 226, 245], "eigenvalu": [52, 71, 78, 89, 90, 121, 122, 151, 163, 166, 170, 172, 174, 176, 189, 190, 197, 199, 222, 241], "isbi2013_2shel": [52, 92, 247, 248], "koai": [52, 59, 80, 166, 170], "koay2006": 52, "correct_bia": [52, 166], "2259585857391357": 52, "lowest": [52, 62, 147, 170, 174], "relationship": [52, 86, 131, 166, 170, 174, 176, 189, 241, 242], "tau_factor": [52, 166, 176, 189, 231], "accord": [52, 74, 82, 85, 111, 112, 113, 121, 155, 158, 163, 164, 165, 166, 170, 171, 172, 173, 174, 176, 209, 217, 218, 230], "denoised_arr": [52, 53, 55, 84, 166], "taken": [52, 53, 100, 121, 163, 164, 165, 166, 170, 174, 176, 189, 190, 192, 245], "slow": [52, 82, 111, 142, 155, 163, 222], "2871618270874": 52, "gra": [52, 53, 55], "orig": [52, 53, 55], "den": [52, 53, 54, 55], "rms_diff": [52, 53, 55], "denoised_localpca": 52, "jv": [52, 53, 55, 166, 176, 189], "concha": [52, 53, 55, 166, 176, 189], "buad": [52, 53, 55, 166, 176, 189], "dl": [52, 53, 55, 145, 165, 166, 176, 189], "overcomplet": [52, 53, 55, 153, 166, 176, 189], "e73021": [52, 53, 55, 166, 176, 189], "0073021": [52, 53, 55, 166, 176, 189], "cg": [52, 135, 163, 164, 166], "pj": [52, 78, 155, 166], "2006": [52, 82, 89, 94, 164, 166, 170, 176, 199, 229], "magnitud": [52, 89, 100, 163, 164, 166, 170, 174, 175], "jmr": [52, 59], "179": [52, 82, 83, 166, 225], "322": [52, 82, 83, 220], "913": [52, 82, 219], "denoise_localpca": [52, 53, 61, 238], "exploit": [53, 152], "veraart2016a": 53, "loss": [53, 55, 74, 90, 111, 164, 165, 169, 171, 176], "henri2018": 53, "princip": [53, 78, 86, 121, 122, 151, 164, 166, 170, 172, 174, 176, 189, 190], "veraa2016a": [53, 55], "veraa2016b": 53, "mppca": [53, 84, 151, 158, 177, 229], "auxiliari": 53, "hansen": [53, 67, 73, 74, 84, 85, 146, 158, 169, 170, 247, 248], "jespersen": [53, 72, 73, 74, 84, 85, 146, 170, 247, 248], "hansen2016": [53, 73, 74, 84, 85, 146], "mbyte": [53, 73, 75, 78, 83, 84, 85, 94], "cfin_multib": [53, 73, 74, 83, 84, 85, 146, 151, 155, 247, 248], "simplic": [53, 84, 113], "sel_b": [53, 84], "logical_or": [53, 71, 84], "mp": [53, 73, 84, 143, 158, 174, 233], "145": [53, 73, 79, 82, 83, 221, 224], "7494671344757": 53, "slide": [53, 163, 174, 175], "compris": [53, 88, 174], "assess": [53, 73, 170, 175, 176, 178, 228], "hspace": [53, 55, 80, 85], "denoised_mppca": 53, "dkimodel": [53, 73, 74], "diffusionkurtosismodel": [53, 73, 74, 85, 177], "dki_orig": 53, "dki_den": 53, "57345": 53, "422": [53, 79, 82, 83, 226], "841": [53, 74, 82, 218], "3905": [53, 82], "1233": [53, 82, 219], "3773": [53, 82], "1646": [53, 82, 233], "3903": [53, 82], "2062": [53, 82], "2522": [53, 73, 82, 234], "2985": [53, 82, 237], "4314": [53, 82], "3436": [53, 82], "4370": [53, 82], "3915": [53, 72, 82], "4851": [53, 82], "4574": [53, 82, 85], "5309": 53, "5795": [53, 84], "4615": [53, 82], "6258": [53, 85], "6736": [53, 72], "7212": 53, "7692": 53, "8664": 53, "4778": [53, 82], "9150": [53, 84], "4797": [53, 82], "9640": 53, "4815": 53, "10127": 53, "4825": [53, 82], "10618": 53, "4843": [53, 82], "11103": 53, "11587": 53, "4803": [53, 82], "12081": 53, "4837": [53, 82], "12567": 53, "4836": [53, 82], "13060": 53, "4858": [53, 82], "13547": 53, "4854": [53, 82], "14033": 53, "4849": [53, 82, 84], "14518": 53, "4828": [53, 82], "15001": [53, 74], "15497": 53, "15994": 53, "4880": [53, 82], "16483": 53, "4874": [53, 82], "16971": 53, "4853": [53, 82], "17469": 53, "4885": [53, 82], "17962": 53, "4892": [53, 82], "18459": 53, "4901": [53, 72, 82], "18950": 53, "4897": [53, 82], "19440": 53, "4894": [53, 82], "19930": 53, "20419": 53, "4878": [53, 82], "20907": 53, "21392": 53, "21882": 53, "22374": 53, "4866": [53, 82], "22864": 53, "4871": [53, 82], "23352": 53, "23839": 53, "24330": 53, "24820": 53, "25307": 53, "25802": 53, "4881": [53, 82], "26291": 53, "26780": 53, "4869": [53, 82], "27267": 53, "27754": 53, "28244": 53, "28744": 53, "29235": 53, "4896": [53, 82, 84], "29725": 53, "30212": 53, "30699": 53, "31187": 53, "4856": [53, 80, 82], "31678": 53, "32169": 53, "4872": [53, 82], "32666": 53, "4893": [53, 74, 82], "33156": 53, "4887": [53, 79, 82], "33645": 53, "4879": [53, 82], "34133": 53, "34628": 53, "35120": 53, "35610": 53, "4891": [53, 82], "36100": 53, "36590": 53, "4875": [53, 82], "37082": 53, "4876": [53, 82], "37572": 53, "4882": [53, 82], "38066": 53, "38558": 53, "4895": [53, 82], "39048": 53, "39538": 53, "40028": 53, "40514": 53, "41000": 53, "4848": [53, 82], "41494": 53, "41986": 53, "42475": 53, "42963": 53, "43451": 53, "4870": [53, 82, 84], "43945": 53, "4883": [53, 82], "44434": 53, "44921": 53, "45408": 53, "45893": 53, "4839": [53, 79, 82], "46389": 53, "46877": 53, "47364": 53, "47853": 53, "48352": 53, "4889": [53, 82], "48841": 53, "49332": 53, "4868": [53, 82], "49819": 53, "50306": 53, "50792": 53, "4795": [53, 82], "51280": 53, "4814": [53, 82], "51771": 53, "52264": 53, "52754": 53, "4863": [53, 82], "53245": 53, "53733": 53, "54220": 53, "54707": 53, "55680": 53, "56166": 53, "4850": [53, 82], "56658": 53, "57145": 53, "452": [53, 82, 83, 226], "950": [53, 82, 219], "1447": [53, 82, 221], "1932": [53, 82], "4833": [53, 82, 84], "2431": [53, 82, 234], "2920": [53, 73, 82, 237], "3422": [53, 84], "4915": [53, 82, 84], "3923": 53, "4939": [53, 82], "4417": [53, 82], "4934": [53, 82, 84], "4913": [53, 82], "4935": [53, 79, 82], "5407": [53, 84], "4928": [53, 82], "5904": [53, 84], "4936": [53, 82], "6398": [53, 84], "6895": 53, "4937": [53, 82, 84], "7394": 53, "4948": [53, 82], "7889": 53, "8865": 53, "9356": 53, "9847": 53, "10335": 53, "10825": 53, "11336": 53, "11838": 53, "4923": [53, 82], "12331": 53, "4906": [53, 82], "12822": 53, "13327": 53, "4917": [53, 82], "13825": 53, "4930": [53, 82, 84], "14319": 53, "3460": [53, 82], "14814": 53, "3800": [53, 82], "15310": 53, "4083": [53, 72, 79, 82], "15811": 53, "16299": 53, "4466": [53, 82, 84], "16771": 53, "4470": [53, 82], "17237": 53, "4518": 53, "4619": [53, 82], "18206": 53, "18685": 53, "19176": 53, "19659": 53, "20144": 53, "20625": 53, "4788": [53, 72, 82], "21106": 53, "21587": 53, "22066": 53, "4733": [53, 81, 82, 84], "22547": 53, "23036": 53, "4787": [53, 82], "23515": 53, "4786": [53, 80, 82], "24006": 53, "24488": 53, "24961": 53, "25436": 53, "25930": 53, "26415": 53, "4799": [53, 82], "26907": 53, "4829": [53, 82], "27411": 53, "4886": [53, 82, 84], "27907": 53, "4908": [53, 82], "28407": 53, "4929": [53, 72, 82], "28904": 53, "29400": 53, "4932": [53, 82], "29901": 53, "4949": [53, 82], "30396": 53, "4943": [53, 82], "30891": 53, "31393": 53, "4959": [53, 82], "31889": 53, "4955": [53, 82, 84], "32385": 53, "4950": [53, 82, 84], "32883": 53, "4954": [53, 82], "33380": 53, "4953": [53, 82], "4965": [53, 82, 84], "34382": 53, "4969": [53, 82], "34882": 53, "35380": 53, "4958": [53, 72, 84], "35876": 53, "36379": 53, "4966": [53, 82], "36877": 53, "4963": [53, 82, 84], "37374": 53, "37870": 53, "38366": 53, "38866": 53, "4951": 53, "39362": 53, "4947": [53, 82, 84], "39858": 53, "4944": [53, 82, 84], "40355": 53, "4945": [53, 82], "40850": 53, "41343": 53, "4919": [53, 82], "41840": 53, "42335": 53, "4985": [53, 82], "43355": 53, "43861": 53, "5013": [53, 82], "44363": 53, "4980": [53, 82], "44862": 53, "4977": [53, 82], "45360": 53, "45863": 53, "4970": [53, 82, 84], "46361": 53, "46863": 53, "4960": [53, 82], "47360": 53, "4962": [53, 82], "47857": 53, "48342": 53, "4830": [53, 82], "48839": 53, "49326": 53, "49812": 53, "50312": 53, "4884": [53, 82], "50801": 53, "51303": 53, "4916": [53, 82], "51795": 53, "4899": [53, 82], "52295": 53, "52789": 53, "4922": [53, 82], "53286": 53, "53796": 53, "4968": [53, 82], "54293": 53, "54788": 53, "55283": 53, "4925": [53, 82], "55776": 53, "56265": 53, "56763": 53, "4903": [53, 82], "57256": 53, "4905": [53, 82], "md": [53, 71, 72, 73, 78, 79, 80, 84, 85, 87, 146, 147, 155, 164, 170, 172, 173, 174, 176, 177, 197, 199, 218, 219, 221, 229, 230], "mk": [53, 72, 73, 74, 85, 87, 170, 176, 177], "fa_orig": 53, "fa_den": 53, "md_orig": 53, "md_den": 53, "mk_orig": 53, "mk_den": 53, "0e": [53, 89, 164, 170, 172], "denoised_dki": 53, "upper": [53, 69, 71, 73, 80, 82, 85, 102, 163, 164, 167, 168, 169, 170, 171, 176, 206, 219], "std": [53, 59, 62, 73, 86, 137, 163, 170, 175, 176, 179, 197, 199, 217, 226], "return_sigma": [53, 166, 176, 190], "pca_sigma": 53, "mean_sigma": 53, "6833844": 53, "nomin": [53, 164], "56180377412377": 53, "theori": [53, 55, 76, 93, 145, 164, 166, 170, 171, 176, 189, 190, 235], "26059": [53, 55, 166, 176, 189, 190], "christiaen": [53, 166, 176, 189, 190], "aron": [53, 166, 176, 189, 190], "sijber": [53, 73, 166, 170, 176, 189, 190], "142": [53, 82, 83, 84, 114, 146, 166, 171, 176, 189, 190, 224], "394": [53, 82, 83, 166, 176, 189, 190, 219], "406": [53, 82, 83, 84, 166, 176, 189, 190, 226], "016": [53, 166, 176, 189, 190], "850": [53, 73, 82, 218], "denoise_mppca": [53, 61, 238], "coupe08": [54, 55, 151, 166], "boost": [54, 240], "decid": [54, 58, 83, 108, 134, 171], "3t": [54, 72, 165, 170, 171], "ge": [54, 59, 89, 165, 166, 170, 171, 176, 247, 248], "23628950119018555": 54, "yger": [54, 55, 151, 166], "prima": [54, 55, 151, 166, 176], "hellier": [54, 55, 151, 166], "kervrann": [54, 55, 151, 166], "barillot": [54, 55, 151, 166, 176, 191], "blockwis": [54, 55, 151, 166], "transact": [54, 55, 76, 81, 89, 93, 96, 97, 116, 151, 163, 166, 170, 247, 248], "425": [54, 55, 79, 82, 83, 151, 166, 226], "735": [54, 73, 74, 82, 85, 217], "denoise_nlmean": [54, 61, 238], "fadnavis20": [55, 166, 176, 192], "rank": [55, 87, 151, 163, 170, 228, 241, 242], "oversampl": [55, 151], "explicit": [55, 163, 224], "classic": [55, 62, 105, 142, 241, 242, 243], "knoll11": 55, "assumpt": [55, 59, 82, 83, 86, 99, 170, 231], "fluctuat": 55, "regressor": [55, 164], "phase": [55, 89, 166, 169, 170, 171], "train": [55, 67, 169], "mathcal": [55, 170, 171], "phi_": [55, 170], "y_": [55, 245], "fed": [55, 176], "phi": [55, 56, 85, 91, 121, 122, 163, 164, 165, 166, 170, 177, 224, 245, 246], "held": [55, 69], "mere": [55, 146], "nor": [55, 164, 171], "loadtxt": [55, 77, 119, 165, 221], "shift_intens": [55, 166, 176, 192], "clip_negative_v": [55, 166, 176, 192], "ordinari": [55, 73, 170, 176, 197, 199], "regress": [55, 67, 166, 170, 176, 192, 218], "slower": [55, 88, 156, 164, 174, 176], "hamper": 55, "exhibit": [55, 62, 73], "attenu": [55, 62, 121, 170, 172, 222], "b0_denois": [55, 166, 176, 192], "higher": [55, 71, 73, 77, 80, 83, 84, 90, 100, 119, 125, 137, 142, 149, 163, 164, 170, 171, 174, 176, 207, 249], "accordingli": [55, 108, 146, 163, 171, 174], "denoised_patch2self": 55, "inspect": [55, 67, 105, 138, 141, 176, 221], "underli": [55, 62, 71, 72, 86, 126, 131, 155, 166, 170, 175, 176, 192, 226, 254], "rid": [55, 237], "lastli": [55, 138, 141], "batch": [55, 169], "300": [55, 56, 77, 79, 82, 83, 91, 97, 119, 122, 134, 165, 175, 226, 247, 248], "split": [55, 155, 163, 166, 167, 169, 170, 174, 176, 177, 200, 202, 209, 213, 219, 228], "denoised_batch1": 55, "denoised_batch2": 55, "denoised_p2": 55, "concaten": [55, 77, 119, 121, 171, 172, 176, 185], "batson": [55, 166, 176, 192], "neural": [55, 67, 72, 158, 162, 166, 169, 170, 176, 192], "bredi": 55, "pock": 55, "stollberg": 55, "tgv": 55, "pp": [55, 71, 84, 170, 172, 247, 248], "480": [55, 82, 226], "491": [55, 82, 86, 165, 226, 230], "denoise_patch2self": [55, 61, 238], "saw": [56, 145], "physicist": 56, "disperse_charg": [56, 85, 91, 122, 177, 219, 225, 229], "jones1999": 56, "polar": [56, 91, 121, 122, 164, 170, 172, 246], "n_pt": [56, 85, 91, 122, 130], "theta": [56, 83, 84, 85, 91, 93, 97, 121, 122, 144, 163, 164, 165, 166, 167, 170, 174, 224, 245, 246], "pi": [56, 85, 86, 91, 113, 122, 130, 142, 143, 164, 167, 170, 171, 172, 174, 241, 243, 245], "hsph_initi": [56, 85, 91, 122], "potenti": [56, 73, 85, 89, 91, 122, 126, 164, 166, 170, 220, 222], "energi": [56, 82, 91, 122, 155, 163, 170, 171, 176, 179], "hsph_updat": [56, 85, 91, 122], "setbackground": [56, 91, 99, 108, 109, 111, 112, 113, 114, 124, 125, 130], "point_radiu": [56, 111], "initial_vs_upd": 56, "becom": [56, 86, 99, 130, 137, 143, 164, 170, 174, 175], "sph": [56, 225, 230], "full_spher": 56, "fill": [56, 163, 164, 170, 172, 174, 176, 209, 217, 241, 242], "stack": [56, 97, 122, 230], "hstack": [56, 85, 122], "63996136": 56, "44439965": 56, "62686395": 56, "75440897": 56, "60871441": 56, "24562956": 56, "98294554": 56, "14395517": 56, "11443327": 56, "18514446": 56, "01717564": 56, "98256121": 56, "17136791": 56, "94579123": 56, "275884": 56, "07448775": 56, "44526699": 56, "89229417": 56, "44912135": 56, "7311377": 56, "51354424": 56, "88021744": 56, "30340889": 56, "36491137": 56, "0172223": 56, "91751007": 56, "39733949": 56, "41930481": 56, "40200301": 56, "81398836": 56, "74877952": 56, "58356541": 56, "31429389": 56, "94831563": 56, "26376272": 56, "17642761": 56, "41410954": 56, "89837931": 56, "14638274": 56, "30459549": 56, "90434746": 56, "29896029": 56, "24093597": 56, "80997809": 56, "53468248": 56, "66565665": 56, "22575477": 56, "71129178": 56, "57358735": 56, "7945475": 56, "19922806": 56, "45769216": 56, "29507511": 56, "83871841": 56, "43966987": 56, "30361358": 56, "84528646": 56, "06501272": 56, "16615552": 56, "98395411": 56, "48054011": 56, "8575286": 56, "18364614": 56, "20228912": 56, "96198486": 56, "18347819": 56, "8435801": 56, "2955378": 56, "44836371": 56, "16049732": 56, "6128623": 56, "77371856": 56, "6989936": 56, "1631694": 56, "6962641": 56, "91194621": 56, "40706569": 56, "05149406": 56, "67053713": 56, "46543199": 56, "57771362": 56, "12064139": 56, "72301164": 56, "68022042": 56, "84962835": 56, "32092277": 56, "4184976": 56, "1730404": 56, "59255945": 56, "78672124": 56, "67932634": 56, "73321564": 56, "03017523": 56, "1180453": 56, "98296197": 56, "14089383": 56, "10691311": 56, "75643611": 56, "64527048": 56, "42459631": 56, "64326575": 56, "63712412": 56, "4818426": 56, "79257411": 56, "37370307": 56, "13915753": 56, "17824287": 56, "97409684": 56, "14708067": 56, "82789599": 56, "54125365": 56, "20950968": 56, "88100869": 56, "42418084": 56, "87723032": 56, "30385801": 56, "37166824": 56, "3499303": 56, "04065808": 56, "935893": 56, "32479054": 56, "56888321": 56, "755568": 56, "17332499": 56, "31859342": 56, "93191023": 56, "69023219": 56, "48037198": 56, "54113056": 56, "74284626": 56, "57792813": 56, "33790312": 56, "41623113": 56, "66251656": 56, "62275473": 56, "55127069": 56, "13630237": 56, "82311742": 56, "56848304": 56, "73523947": 56, "36912052": 56, "91224815": 56, "02624222": 56, "40879661": 56, "6942519": 56, "10853653": 56, "71150131": 56, "44846801": 56, "50062334": 56, "74044089": 56, "12500718": 56, "99037073": 56, "0594896": 56, "80271906": 56, "54954735": 56, "23160273": 56, "1267564": 56, "47100083": 56, "87297826": 56, "98201323": 56, "05729855": 56, "17990803": 56, "8732449": 56, "48622748": 56, "03203404": 56, "26209575": 56, "30970766": 56, "91399507": 56, "51089319": 56, "72505232": 56, "46183036": 56, "69355897": 56, "71593672": 56, "08006601": 56, "42084449": 56, "9041882": 56, "07303165": 56, "62875702": 56, "47753322": 56, "61369914": 56, "46735473": 56, "05715018": 56, "88222073": 56, "87290169": 56, "01891337": 56, "48752941": 56, "7663917": 56, "15248476": 56, "62401295": 56, "97351627": 56, "18840973": 56, "12949072": 56, "cyan": 56, "colors_b1000": 56, "colors_b2500": 56, "ascontiguousarrai": [56, 130], "dk": [56, 94, 170, 176, 197, 199], "anisotrop": [56, 71, 75, 78, 81, 83, 84, 128, 142, 158, 163, 165, 170, 230, 239], "525": [56, 82, 226], "973": [56, 82, 219], "gradients_spher": [56, 61, 221, 238], "inevit": [58, 154], "misalign": [58, 97, 154, 163], "jenkinsonsmith01": [58, 154], "preprocess": [58, 79, 113, 154, 165, 237, 238], "motion_correct": [58, 61, 177, 238], "193": [58, 64, 75, 82, 83, 247, 248], "bvals_smal": 58, "bvecs_smal": 58, "reg_affin": [58, 96, 97], "jenkinson": [58, 154], "2001": [58, 82, 108, 116, 154, 171, 230], "optimis": [58, 154, 167, 226], "anal": [58, 154, 163], "143": [58, 82, 83, 114, 154, 170, 224], "koay2009": 59, "grappa": [59, 166], "intuit": [59, 86, 126, 144, 176], "fourth": [59, 73, 82, 87, 88, 164, 170, 172], "central": [59, 76, 93, 163, 164, 173, 174], "tim": 59, "trio": [59, 165, 241, 242, 247, 248], "receiv": [59, 105, 163, 166, 170], "distinct": 59, "return_mask": [59, 166], "axial_piesno": 59, "mask_piesno": 59, "uint8": [59, 62, 67, 78, 131, 168], "263329": 59, "933178": 59, "5934806": 59, "708311737182022": 59, "pierpaoli": [59, 78, 94, 166, 170, 176, 197, 199], "103": [59, 73, 80, 82, 83, 84, 158, 166, 170, 176, 199, 223, 224], "790": [59, 73, 74, 82, 85], "facilit": [60, 168, 169], "fimg": [60, 121, 165, 172], "aniso_vox": [60, 163, 165], "new_voxel_s": [60, 104], "data2": [60, 163, 171], "affine2": [60, 163], "iso_vox": 60, "analyz": [60, 75, 87, 164, 170, 173, 174, 229, 253], "img3": 60, "spm2analyzeimag": 60, "realiz": [60, 163, 166], "685": [60, 72, 82, 218, 232], "reslice_dataset": [60, 61, 238], "914": [80, 82, 172, 218], "examples_builtpreprocess": 61, "snr_in_cc": [61, 62, 222, 228, 238], "671": [62, 79, 80, 82, 85, 217], "divid": [62, 69, 75, 76, 83, 84, 86, 89, 93, 99, 113, 124, 163, 164, 166, 170, 171, 173, 174, 176, 181, 182, 220, 221, 228], "worst": 62, "cst": [62, 123, 124, 128, 134, 135, 165, 222, 233], "cfa": [62, 78, 171], "descoteaux2011": [62, 76, 93], "jones2013": 62, "ndimag": [62, 67, 73, 74, 131, 164, 234], "binary_dil": [62, 131], "segment_from_cfa": [62, 177], "bounding_box": [62, 177, 230], "tenmodel": [62, 71, 73, 78, 226, 250], "tensorfit": [62, 78, 171, 177, 224], "cc_box": 62, "zeros_lik": [62, 97, 174], "bounds_min": 62, "bounds_max": 62, "mask_cc_part": 62, "return_cfa": [62, 171], "cfa_cc_part": 62, "255": [62, 72, 73, 78, 82, 83, 131, 137, 168, 225], "cc_segment": 62, "crude": 62, "catch": [62, 217, 220], "manufactur": 62, "mask_nois": [62, 176], "noise_std": 62, "17113266785504": 62, "report": [62, 73, 82, 170, 219, 226, 233], "li": [62, 69, 155, 163, 171, 176], "null": [62, 164, 166, 176, 189, 234], "idx": [62, 89, 164, 166, 169, 174, 177], "inf": [62, 82, 123, 163, 169, 170, 171, 174, 176], "axis_x": 62, "argmin": [62, 88, 99, 174], "axis_i": 62, "axis_z": 62, "366354266706736": 62, "98875": 62, "1177": [62, 82, 219], "09229": 62, "918432129721111": 62, "05039": 62, "99871": 62, "0054406": 62, "72068171809924": 62, "11825": 62, "039925": 62, "99218": 62, "592653853373644": 62, "perpendicular": [62, 79, 83, 86, 89, 155, 164, 170, 172, 174, 176, 201, 217], "le": [62, 82, 155, 164, 170, 174, 176, 200], "bihan": [62, 82, 155, 170, 176, 200], "mangin": 62, "poupon": 62, "603": [62, 76, 80, 82, 93, 170, 227], "knosch": 62, "turner": 62, "count": [62, 67, 94, 130, 131, 170, 171, 174, 175, 225], "fallaci": 62, "239": [62, 82, 83, 225], "publicli": [64, 165, 224], "expandus": [64, 137], "fetch_sherbrooke_3shel": [64, 177], "hardi193": [64, 151, 154], "bitstream": [64, 73, 134], "38475": 64, "0b735e8f16695a37bfbd66aab136eb66": 64, "e9b9bb56252503ea49d31fb30a0ac637": 64, "0c83f7e8b917cd677ad58a078658ebb7": 64, "skoudoro": [64, 73, 75, 76, 80, 82, 83, 84, 86, 87, 88, 89, 93, 100, 134], "dname": 64, "fdwi": [64, 250], "fbval": [64, 73, 74, 75, 76, 81, 82, 83, 84, 85, 87, 92, 93, 121, 163, 165, 168, 172, 250], "fbvec": [64, 73, 74, 75, 76, 81, 82, 83, 84, 85, 87, 92, 93, 121, 163, 165, 168, 172, 250], "get_zoom": [64, 104], "quickli": [64, 160, 163, 170, 223], "3500": [64, 82, 84, 247, 248], "964050": 64, "999992": 64, "999979": 64, "00504001": 64, "00402795": 64, "00398794": 64, "0257055": 64, "653861": 64, "756178": 64, "589518": 64, "769236": 64, "246462": 64, "235785": 64, "529095": 64, "815147": 64, "893578": 64, "263559": 64, "363394": 64, "79784": 64, "133726": 64, "587851": 64, "232937": 64, "931884": 64, "278087": 64, "93672": 64, "144139": 64, "31903": 64, "fun": [64, 164], "hardi193_s0": 64, "123": [64, 65, 82, 83, 102, 114, 164, 224], "quick_start": [64, 65, 222, 238], "367": [65, 79, 82, 83, 219, 226], "examples_builtquick_start": 65, "tracking_introduction_eudx": [65, 66, 238], "244": [65, 66, 72, 82, 83], "driven": [67, 71, 89, 163, 170], "ground": [67, 77, 85, 88, 119, 175], "truth": [67, 77, 85, 88, 119, 175], "sequenti": [67, 89, 113, 171], "histologi": [67, 169], "squirrel": 67, "monkei": 67, "third": [67, 164, 166, 170, 174, 176, 202], "ndi": 67, "nn": [67, 158, 162, 163, 170, 177, 234, 237], "histo_resdnn": [67, 177], "historesdnn": [67, 177], "sh_to_sf_matrix": [67, 177], "onednn": 67, "tf_cpp_min_log_level": 67, "mean_b0": [67, 104], "mask_label": 67, "return_count": 67, "val": [67, 89, 97, 164, 170, 175, 218, 235, 237, 247, 248], "argmax": 67, "resdnn_model": [67, 169], "fetch_default_weight": [67, 169, 177], "predicted_sh": 67, "eta": 67, "2m": 67, "1m": 67, "996u": 67, "975u": 67, "941u": 67, "974u": 67, "1000u": 67, "988u": 67, "994u": 67, "968u": 67, "972u": 67, "973u": 67, "979u": 67, "971u": 67, "coron": [67, 116, 175, 228], "invb": [67, 167, 170], "basis_typ": [67, 166, 167, 169, 170], "0006": 67, "fod_spher": 67, "b_matrix": [67, 241, 242], "mean_sh": 67, "background_img": 67, "ori_shap": [67, 169], "slice_index": [67, 175], "display_ext": [67, 134, 175, 177], "camera": [67, 135], "zoom": [67, 134, 137, 151, 152, 163, 168, 222], "screenshot": [67, 134, 137], "curvatur": [67, 167, 174, 234, 236], "popul": [67, 69, 71, 73, 78, 85, 89, 98, 108, 121, 124, 125, 148, 153, 155, 170, 171, 173, 176, 247, 248], "visibl": [67, 151, 175, 177, 221, 224, 228, 232], "zoom_factor": 67, "view_posit": 67, "view_cent": 67, "up_vector": 67, "pred_fodf": 67, "nath": [67, 165, 169], "schill": [67, 165, 169], "parvathaneni": [67, 169], "hainlin": [67, 169], "huo": [67, 169], "stepniewska": [67, 169], "reveal": [67, 72, 84, 85, 121, 169, 170], "untap": [67, 169], "220": [67, 73, 82, 83, 169, 226], "227": [67, 82, 83, 169, 225], "bermudez": [67, 169], "st\u0119pniewska": [67, 169], "captur": [67, 72, 73, 85, 121, 142, 169], "arxiv": [67, 163, 169, 170, 174], "preprint": [67, 128, 169], "1911": [67, 72, 169, 228], "07927": [67, 169], "404": [67, 72, 82, 83, 217, 227, 229], "histology_resdnn": [67, 95, 238], "pattern": [69, 116, 164, 171], "nest": [69, 137, 142, 163, 164, 168, 169, 170, 171, 174], "likelihood": [69, 89, 116, 170, 171], "hastie2008": 69, "rokem2014": [69, 90, 170], "imprevi": 69, "math": [69, 83, 85, 86, 87, 92, 121, 164, 165, 170, 189, 218, 219, 222, 223, 226, 234], "rac": [69, 170], "conduct": [69, 78, 155, 170, 223, 233], "cross_valid": [69, 177, 226], "dpd": [69, 90, 94, 123, 170], "xval": [69, 226], "centrum": [69, 90], "semioval": [69, 90], "cso": 69, "cc_vox": 69, "cso_vox": 69, "dti_model": 69, "dti_cc": 69, "kfold_xval": [69, 95, 177, 238], "csd_cc": 69, "dti_cso": 69, "csd_cso": 69, "scatter": [69, 82], "focus": [69, 159], "set_size_inch": 69, "legend": [69, 82, 85, 86, 94, 121, 122, 130], "loc": [69, 82, 85], "this_ax": 69, "cc_dti_r2": 69, "pearsonr": 69, "cc_csd_r2": 69, "cso_dti_r2": 69, "cso_csd_r2": 69, "r2": [69, 170, 225], "7828795917129804": 69, "8051656184264907": 69, "43192536287688327": 69, "6038698891074342": 69, "hasti": [69, 90, 170], "tibshirani": 69, "friedman": 69, "mine": [69, 174], "springer": [69, 170, 171], "verlag": [69, 171], "berlin": 69, "953": [69, 82, 219], "aganj2010": [70, 146], "160": [70, 73, 78, 82, 83, 86, 165, 225, 247, 248], "apart": [70, 164, 165, 166, 170, 241], "peak_indic": [70, 81, 167, 170], "maxima": [70, 71, 167, 170, 224], "enough": [70, 164, 174, 252], "rectangular": [70, 78, 99, 241, 242], "splenium": [70, 78], "csaodf": 70, "csa_odfs_actor": 70, "plasma": [70, 71, 77, 79, 83, 84, 89, 90, 92, 119, 122], "csa_odf": 70, "lenglet": [70, 146, 170], "sapiro": [70, 146, 170], "yacoub": [70, 146, 170], "ugurbil": [70, 146, 170], "harel": [70, 146, 170], "aug": [70, 146], "554": [70, 82, 146, 170, 172, 227], "22365": [70, 146, 170], "970": [70, 82, 219], "reconst_csa": [70, 95, 221, 238], "tournier2007": [71, 84], "mean_diffus": [71, 78, 79, 177, 219], "mask_for_response_ssst": [71, 177], "recursive_respons": [71, 89, 177], "single_tensor_odf": [71, 89, 177], "proce": [71, 90, 170], "cuboid": [71, 84, 170, 176, 196], "ident": [71, 78, 81, 86, 96, 99, 143, 144, 163, 168, 170, 174, 175, 177, 217, 230, 234], "nvoxel": 71, "1254": [71, 82, 219], "tupl": [71, 96, 124, 138, 141, 163, 164, 165, 168, 169, 170, 171, 172, 174, 175, 176, 222, 225, 246], "00139919": [71, 89, 90], "0003007": [71, 89, 90], "416": [71, 74, 82, 83, 89, 90, 226], "7372408293461": [71, 89, 90], "radial": [71, 72, 73, 83, 85, 90, 92, 158, 164, 170, 174, 176, 197, 198, 199, 224, 246], "21491283972217437": 71, "evec": [71, 78, 89, 94, 121, 146, 170, 172, 176, 177, 197, 199], "response_odf": [71, 89], "1d": [71, 89, 112, 145, 158, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 176, 207, 236], "response_actor": [71, 89], "csd_respons": 71, "calibr": [71, 89, 108, 155, 158, 170, 176, 195, 196, 198, 227], "eigenvector": [71, 83, 121, 163, 166, 170, 172, 174, 176, 197, 199, 217, 222, 241], "tax2014": [71, 89], "fat": [71, 89, 170], "converg": [71, 73, 82, 83, 89, 96, 116, 163, 164, 166, 170, 171], "wm_mask": [71, 88], "logical_and": 71, "0011": 71, "peak_thr": [71, 89, 170], "init_fa": [71, 89, 170], "init_trac": [71, 89, 170], "0021": [71, 89, 170], "pancak": [71, 89], "response_sign": 71, "on_spher": [71, 89, 170, 177], "csd_recursive_respons": 71, "recurs": [71, 89, 158, 163, 164, 170], "portion": [71, 82, 89, 170], "417": [71, 79, 82, 83, 84, 226], "4152": [71, 82, 84], "834": [71, 82, 85], "4163": [71, 82, 84], "csd_odf": 71, "30x30": 71, "fodf_peak": [71, 89, 90], "getproperti": [71, 90], "setopac": [71, 90], "csd_both": 71, "fibr": [71, 84, 165, 166, 167, 170, 176, 196, 245], "super": [71, 84, 113, 158, 166, 167, 170, 176, 196, 245], "1459": [71, 82, 84, 166, 167, 170, 221, 245], "1472": [71, 82, 84, 166, 167, 170, 221, 245], "vo": [71, 89], "viergev": [71, 73, 89], "877": [71, 82, 219], "reconst_csd": [71, 95, 221, 238], "k_aniso": [72, 170, 177], "k_iso": [72, 170, 177], "microscop": [72, 85, 87, 164, 170], "k_micro": [72, 170, 177], "exchang": [72, 89, 170], "disord": [72, 79, 165], "alvesr2022": 72, "correlationtensormodel": [72, 177], "diffusionkurtosistensorfit": 72, "necess": 72, "e_": 72, "q_1": 72, "q_2": 72, "q_": [72, 170], "1i": 72, "1j": 72, "2i": 72, "2j": 72, "d_": [72, 73, 78, 80, 99, 155, 170, 241, 242], "ij": [72, 73, 170, 241, 242], "1k": 72, "1l": 72, "2k": 72, "2l": [72, 170, 245], "quad": [72, 170], "w_": [72, 73, 170], "ijkl": [72, 73, 170], "z_": 72, "s_": [72, 73, 82, 99, 170, 172], "dt": [72, 73, 74, 121, 123, 155, 168, 170, 172, 173, 241], "kt": [72, 73, 74, 121, 155, 170, 172, 177], "4th": 72, "displac": [72, 76, 82, 83, 86, 93, 100, 142, 155, 156, 163, 170, 172, 174, 175, 176, 179, 180, 241], "diffusionkurtosi": 72, "pair": [72, 98, 131, 163, 164, 170, 174, 175, 176, 184], "epoch": [72, 169, 170], "netohe2021": 72, "dde": [72, 165, 170], "fdata": [72, 87], "fbvals1": 72, "fbvecs1": 72, "fbvals2": 72, "fbvecs2": 72, "fmask": [72, 87], "cti_rat1": 72, "bvals1": 72, "bvecs1": 72, "bvals2": 72, "bvecs2": 72, "filefdata": 72, "bvec1": 72, "bvec2": 72, "gtab1": [72, 170], "gtab2": [72, 170], "mask_affin": 72, "ctimodel": 72, "ctifit": 72, "7516": 72, "214": [72, 82, 83], "226": [72, 82, 83, 225], "154": [72, 82, 83], "262": [72, 82, 83, 170, 225], "182": [72, 82, 83, 225], "210": [72, 82, 83, 92, 114, 225], "237": [72, 73, 82, 83, 114, 135, 225], "267": [72, 82, 83, 114, 225], "265": [72, 82, 83, 170, 225], "268": [72, 73, 82, 83, 89, 170, 225], "293": [72, 82, 83, 114], "269": [72, 82, 83], "348": [72, 82, 83, 226], "270": [72, 73, 82, 83, 114, 225], "376": [72, 79, 82, 83, 226], "272": [72, 82, 83], "274": [72, 73, 82, 83, 84, 225], "433": [72, 79, 82, 83, 226], "276": [72, 80, 82, 83], "461": [72, 79, 82, 83, 84, 226], "489": [72, 80, 82, 226], "517": [72, 73, 82, 219], "545": [72, 82, 233], "273": [72, 74, 82, 83, 225], "601": [72, 82, 227], "271": [72, 82, 83, 218], "629": [72, 76, 80, 82, 93, 170, 217], "657": [72, 73, 82, 217], "713": [72, 73, 74, 80, 82, 85, 217], "275": [72, 82, 83, 225], "741": [72, 74, 82, 85, 217], "769": [72, 73, 74, 82, 84, 85, 217], "797": [72, 74, 82, 218], "825": [72, 82, 218], "853": [72, 74, 82, 218], "881": [72, 82, 170, 219, 220], "909": [72, 82, 219], "937": [72, 79, 219], "993": [72, 73, 82, 219], "1021": [72, 73, 82, 219], "1049": [72, 219], "1077": [72, 82, 85, 219], "1105": [72, 73, 82, 219], "1133": [72, 82, 170], "1162": [72, 82, 219], "1191": [72, 82, 219], "1220": [72, 82, 93, 222], "277": [72, 82, 83, 226], "1249": [72, 82], "279": [72, 79, 82, 83, 225], "1277": [72, 75, 82, 220], "1305": [72, 74, 82, 230], "1333": [72, 82, 84, 220], "1361": [72, 82, 220], "1389": [72, 82, 222], "1417": [72, 82, 221], "1445": [72, 82, 221], "1502": [72, 82, 221], "1530": [72, 82, 85, 222], "1558": [72, 82, 228], "1586": [72, 82, 84, 222], "1614": [72, 74, 80, 82, 164, 222], "1642": [72, 82, 222], "1671": [72, 82, 230], "1727": [72, 82, 223], "1754": [72, 73, 82, 170, 223], "1780": [72, 82, 228], "1806": [72, 82, 84, 228], "252": [72, 82, 83, 84, 225], "1832": [72, 82, 228], "251": [72, 82, 83, 114, 131, 225], "1858": [72, 82, 228], "248": [72, 82, 83, 226], "1885": [72, 82, 228], "1937": [72, 82, 228], "247": [72, 82, 83, 170, 176, 199, 225], "1962": [72, 82, 163, 229], "246": [72, 79, 82, 83, 114], "1989": [72, 82, 229], "2041": [72, 82, 230], "2068": [72, 73, 82, 230], "259": [72, 82, 83, 89, 100, 170, 225], "2095": [72, 82, 230], "260": [72, 82, 83, 225], "2122": [72, 82, 230], "2150": [72, 230], "2177": [72, 82, 230], "2203": [72, 82, 230], "2231": [72, 82, 231], "263": [72, 82, 83, 84, 225], "2258": [72, 82, 231], "2286": [72, 82, 232], "2314": [72, 73, 82, 234], "2342": [72, 82, 234], "2370": [72, 82], "2398": [72, 82], "2426": [72, 82], "2454": [72, 82, 84, 234], "2482": [72, 82, 234], "2511": [72, 82], "2539": [72, 82, 234], "2567": [72, 82, 235], "2595": [72, 82, 235], "2623": [72, 82], "2651": [72, 82], "2679": [72, 73, 74, 82, 235], "2707": [72, 82, 236], "2735": [72, 82], "2763": [72, 82, 236], "2792": [72, 237], "2820": [72, 82, 237], "2848": [72, 82, 84], "2877": [72, 82], "2905": [72, 82, 237], "2933": [72, 82, 237], "2961": [72, 82, 237], "2989": [72, 82, 237], "3017": [72, 82], "3045": [72, 82, 84], "3074": [72, 73, 82], "3103": [72, 82], "3131": [72, 82, 84], "3159": [72, 82], "3187": [72, 82], "3215": [72, 82, 84], "3243": [72, 82, 84], "3271": [72, 73, 82, 170], "3299": [72, 82], "3328": [72, 82, 84], "3356": [72, 82], "3384": [72, 82, 134], "3412": [72, 82, 84], "3440": [72, 82], "3468": [72, 82], "3496": [72, 82], "3524": [72, 82, 84], "3552": [72, 82, 147], "3580": [72, 82], "3608": [72, 84], "3636": [72, 82], "3665": [72, 82], "3693": 72, "3721": 72, "3774": [72, 82], "3802": 72, "3830": [72, 82], "3886": [72, 82], "3943": [72, 82], "3971": [72, 82], "3999": [72, 82], "4282": [72, 80, 82, 84], "4310": [72, 82], "4535": [72, 82], "4563": [72, 82, 84], "4648": [72, 82], "4732": [72, 82], "4816": [72, 82], "4873": [72, 82, 84], "4986": [72, 82], "5015": [72, 82], "5043": [72, 82], "5071": [72, 82, 84], "5099": [72, 82], "5127": [72, 82], "5155": [72, 82, 84], "5183": [72, 82], "5211": [72, 84], "5239": 72, "5267": [72, 170, 176, 197, 199], "5296": 72, "5324": [72, 84], "5353": [72, 84], "5381": 72, "5409": 72, "5437": [72, 84], "5465": 72, "5493": [72, 84], "5522": 72, "5551": [72, 84], "5579": 72, "5607": 72, "5635": [72, 84], "5663": [72, 74], "5692": 72, "5720": [72, 84], "5748": 72, "5776": 72, "5804": [72, 85], "5832": [72, 84], "5860": 72, "5888": 72, "5916": 72, "5944": 72, "5972": 72, "6028": 72, "6057": 72, "6085": 72, "6112": [72, 84], "6138": 72, "253": [72, 82, 83, 225, 226], "6164": 72, "6190": 72, "6216": 72, "249": [72, 82, 83, 114, 225], "6243": 72, "6270": 72, "257": [72, 82, 83, 225], "6296": 72, "6324": 72, "261": [72, 82, 83, 225], "6351": [72, 84], "6379": 72, "6406": [72, 84], "6433": 72, "6460": 72, "6487": 72, "6514": 72, "6541": 72, "6568": 72, "6596": 72, "6624": 72, "6652": 72, "6680": 72, "6708": 72, "6764": 72, "6792": 72, "6820": 72, "6849": 72, "6877": 72, "6905": 72, "6933": 72, "6961": 72, "6989": 72, "7017": 72, "7045": 72, "7074": 72, "7102": 72, "7131": 72, "7159": 72, "7188": 72, "7216": 72, "7244": 72, "7272": 72, "7300": 72, "7328": 72, "7356": 72, "7384": 72, "7412": 72, "7440": [72, 85], "7469": 72, "7497": 72, "correlationtensorfit": [72, 177], "upon": [72, 163, 170, 174, 176, 224, 225], "inher": 72, "rd": [72, 73, 146, 147, 170, 176, 177, 197, 199], "ak": [72, 73, 164, 170, 176, 177], "rk": [72, 73, 170, 176, 177], "exclus": [72, 163, 174], "kiso_map": 72, "kaniso_map": 72, "kmicro_map": 72, "slice_idx": 72, "axarr": [72, 102], "kiso": 72, "kaniso": 72, "kmicro": 72, "shemesh": [72, 85, 170], "211": [72, 79, 82, 83, 170, 225], "116605": [72, 170], "novello": 72, "ianu": 72, "feiweier": 72, "jovicich": 72, "vivo": [72, 80, 85], "clinic": [72, 88, 164, 170], "119137": 72, "alv": 72, "kerkel\u00e4": 72, "chavarr\u00eda": 72, "deciph": 72, "stroke": 72, "118833": 72, "28938": 72, "reconst_cti": [72, 95, 238], "expans": [73, 83, 87, 88, 155, 164, 170, 172], "biolog": [73, 82, 86, 155, 170], "character": [73, 74, 78, 80, 85, 155, 170, 172], "microstructur": [73, 74, 79, 80, 82, 83, 85, 87, 88, 155, 158, 169, 170, 176, 199, 219], "heterogen": [73, 121, 155, 164], "jensen2010": [73, 155], "moreov": [73, 80, 85, 113, 155, 167, 245], "concret": [73, 74, 155, 176], "biophys": [73, 74, 78, 85, 86, 155, 170, 174], "axon": [73, 74, 78, 79, 83, 85, 86, 121, 155, 170, 228], "tortuos": [73, 74, 155, 177, 219], "fierem2011": [73, 74, 155], "netohe2015": [73, 85, 155], "bd": [73, 82, 170, 172], "mathbf": [73, 78, 80, 82, 87, 88, 99, 142, 144, 155, 170, 174, 241, 242, 243], "s_0": [73, 78, 80, 82, 87, 88, 155, 170, 172], "absenc": [73, 82], "sensit": [73, 74, 82, 83, 85, 94, 142, 170, 226], "sum_": [73, 88, 90, 99, 164, 170, 245], "antipod": [73, 78, 155, 164, 165, 166, 170, 224], "symmetri": [73, 78, 155, 164, 165, 166, 170, 245], "wijkl": [73, 172], "xxxx": [73, 170], "yyyi": [73, 170], "zzzz": [73, 170], "xxxy": [73, 170], "xxxz": [73, 170], "xyyi": [73, 170], "yyyz": [73, 170], "xzzz": [73, 170], "yzzz": [73, 170], "xxyi": [73, 170], "xxzz": [73, 170], "yyzz": [73, 170], "xxyz": [73, 170], "xyyz": [73, 170], "xyzz": [73, 170], "compare_map": [73, 83, 177], "gaussian_filt": [73, 74], "fraw": [73, 74, 75, 76, 81, 82, 83, 84, 85, 92, 93], "taxcmw2015": 73, "netohe2012": 73, "favor": 73, "fwhm": [73, 74], "pioneer": 73, "gauss_std": [73, 74], "data_smooth": [73, 74], "dkifit": [73, 74], "3121": [73, 82], "144": [73, 82, 83, 114, 170, 218, 224], "705": [74, 82, 85, 217], "715": [73, 74, 82, 85, 217], "290": [82, 83, 226], "717": [73, 74, 80, 82, 85, 234], "714": [74, 82, 84, 85, 217], "434": [79, 82, 83, 226], "506": [82, 226], "587": [80, 82, 217], "740": [74, 82, 85, 219], "662": [73, 80, 82, 220], "728": [73, 74, 82, 85, 228], "811": [74, 82, 85, 218], "736": [74, 82, 84, 85, 217], "885": [82, 219], "734": [74, 82, 85, 217], "959": [82, 219], "1035": [82, 219], "737": [74, 82, 85, 217], "760": [74, 82, 85, 218], "1274": 82, "780": [74, 82, 84], "1353": [79, 220], "775": [73, 74, 82, 85], "1431": [82, 221], "759": [74, 82, 85, 222], "1508": [82, 222], "752": [73, 74, 82, 85, 217], "1584": [82, 222], "748": [74, 82, 85, 217], "1659": [82, 222], "739": [74, 82, 85, 217], "1734": [82, 223], "733": [73, 74, 82, 85, 217, 237], "1808": [82, 228], "722": [74, 82, 85, 232], "1881": [82, 228], "723": [73, 74, 82, 85, 217], "1959": [82, 229], "2033": [82, 230], "2108": [80, 82, 230], "738": [73, 74, 82, 85, 217], "2195": [82, 230], "776": [73, 74, 82, 85], "2273": 82, "772": [73, 74, 82, 85, 217], "2351": [82, 233], "764": [73, 74, 82, 85, 93, 217], "2428": 82, "747": [74, 82, 84, 85, 218], "2504": [82, 234], "750": [73, 74, 82, 85], "2583": 82, "761": [74, 82, 85, 217], "2660": [82, 84], "751": [74, 82, 85, 217], "2748": [82, 84], "788": [73, 74, 82, 85], "2828": [82, 84, 237], "779": [74, 82, 85], "2907": [82, 237], "765": [73, 74, 82, 85, 217], "2984": [82, 237], "755": [73, 74, 82, 85, 217], "3060": [82, 84], "745": [74, 82, 85, 218], "diffusionkurtosisfit": [73, 177], "diffusionkurtosisifit": 73, "analog": [73, 74, 163], "decoupl": [73, 85], "veraar2011": 73, "fit_label": [73, 83, 175], "map_kwarg": [73, 83, 175], "2e": [73, 89, 170], "diffusion_tensor_measures_from_dti_and_dki": 73, "underestim": [73, 80], "kurtosis_tensor_standard_measur": 73, "confin": [73, 164, 170], "compartment": [73, 80, 85, 121, 170], "myelin": [73, 74, 78], "sheath": 73, "pronounc": 73, "perpendicularli": 73, "amplitud": [73, 80, 142, 170, 241], "band": [73, 170], "dark": 73, "decai": [73, 82, 170, 241], "consequ": [73, 82, 94, 121, 155], "tendenc": [73, 173], "inadequ": 73, "parametr": [73, 86, 142, 163, 165, 170, 171, 224, 247, 248], "perron2015": 73, "netohe2018": [73, 85], "unring": [73, 153, 158], "overcom": [73, 84, 85, 123, 170], "powder": [73, 85], "physic": [73, 82, 83, 88, 94, 143, 155, 163, 164, 170, 172, 175, 176, 200, 244], "delaha2020": 73, "though": [73, 102, 163, 170, 174, 241, 242], "fit_method": [73, 82, 88, 94, 170, 176, 197, 199, 234], "cl": [73, 74, 170], "cwl": [73, 170], "unconstrain": [73, 88, 163, 164], "unplaus": 73, "mosek": [73, 83, 88], "solver": [73, 83, 84, 88, 163, 164, 170, 222, 237], "cvxpy_solv": [73, 83, 88, 170], "greatli": [73, 83], "solut": [73, 75, 83, 84, 88, 96, 116, 134, 146, 158, 163, 164, 170, 174], "atyp": 73, "scenario": [73, 102], "counterpart": 73, "unexpect": [73, 80, 221], "qualit": [73, 228], "dkimodel_plu": 73, "dkifit_plu": 73, "158": [82, 83], "165": [73, 82, 83], "114": [82, 83, 224], "166": [73, 82, 83, 225], "131": [74, 82, 83, 84, 146, 224], "148": [82, 83, 114], "162": [73, 82, 83, 86, 133, 135, 225], "159": [73, 82, 83, 114, 225], "215": [82, 83, 221], "232": [82, 83, 217, 225], "161": [73, 82, 83, 164, 225], "284": [82, 83, 114, 231], "318": [82, 83, 84, 226], "167": [73, 82, 83, 114, 225], "335": [82, 83, 170, 226], "352": [79, 82, 83, 226], "369": [73, 82, 83, 219], "386": [79, 82, 83, 226], "403": [73, 79, 82, 83, 170, 226], "421": [73, 82, 83, 170, 226], "168": [73, 82, 83, 155, 170, 176, 200, 225], "438": [79, 82, 83, 226, 243], "473": [82, 83, 85, 226], "509": [82, 226], "527": [82, 84, 226], "563": [80, 82, 227], "580": [82, 227], "597": [82, 227], "614": 217, "632": [79, 80, 82, 217], "649": [82, 217], "667": [80, 82, 85, 92, 217], "703": [73, 74, 80, 82, 84, 85, 217], "721": [74, 82, 85, 217], "757": [74, 82, 85, 217], "793": [73, 74, 82, 85], "810": [73, 74, 82, 85, 218], "828": [82, 219], "845": [82, 218], "862": [74, 82, 85, 219], "880": [82, 219, 220], "898": [73, 82, 218], "916": [82, 218], "934": [82, 84, 219], "952": [82, 219], "988": [82, 219], "1006": [82, 219], "171": [73, 82, 83, 226], "1024": [82, 219], "1042": [82, 220], "1059": [82, 219], "1076": [82, 163, 219], "1094": [84, 219], "1111": [82, 170, 222], "1128": [82, 219], "1145": [82, 219], "1163": [73, 82, 219], "1180": [82, 220], "1198": [82, 219], "1215": 219, "1232": [85, 222], "1267": [75, 82, 84, 219], "1285": [82, 220], "1303": [82, 220], "1321": [82, 221], "1338": [82, 222], "1355": [82, 84, 222], "1372": [75, 82, 237], "1406": [82, 221], "1423": [82, 221], "1441": [73, 82, 221], "1458": [82, 221], "1476": [82, 84, 93, 221], "1494": [82, 221], "1512": 222, "1547": [82, 222], "1564": [82, 84, 222], "1598": [82, 222], "163": [73, 82, 83, 84, 225, 230], "1615": [82, 222], "1632": [82, 223], "1650": [82, 222], "1667": [82, 222], "1684": [73, 82, 222], "1701": [73, 223], "1718": [73, 84, 223, 228], "1735": [82, 223], "1752": [80, 82, 228], "1769": [82, 228], "1786": [82, 228], "1803": [82, 228], "1820": [80, 82], "1837": [73, 82, 228], "1854": [82, 228], "1871": [82, 230], "1888": [82, 228], "1905": [73, 82, 84, 228], "1922": [82, 228], "1939": [82, 228], "1956": [82, 229], "1973": [82, 233], "1990": [82, 236], "2025": [82, 231], "2042": [73, 82, 230], "2059": [82, 84, 230], "2076": [79, 82, 230], "2093": [82, 230], "2110": 82, "2127": 230, "2144": [82, 230], "2161": [82, 230], "2178": [80, 82, 230], "2229": [82, 232], "2246": [73, 82, 231], "2263": [82, 84, 231], "2280": [82, 232], "2298": 82, "2315": [82, 232], "2332": [82, 233], "2349": [73, 82, 233], "2366": 73, "2383": [82, 234], "2400": [76, 82, 84, 93, 146, 237, 247, 248], "2417": [82, 234], "2435": [82, 234], "2452": 82, "2469": [82, 84], "2486": [82, 234], "2521": [82, 234], "2538": 82, "2555": 234, "2572": [73, 82, 235], "2589": [82, 235], "2607": 73, "2625": [73, 82, 236], "2642": 82, "2659": 235, "2676": [82, 235], "2693": [82, 235], "2710": [82, 235], "2727": [82, 236], "2745": [82, 84, 236], "2780": [73, 236], "2798": [82, 84, 237], "2815": [82, 237], "2832": [82, 237], "2849": [82, 237], "2866": 82, "2883": [73, 82, 237], "2900": [82, 237], "2917": 82, "2934": [82, 237], "2951": 82, "2969": 237, "2986": [82, 237], "3003": [73, 82], "3020": 82, "3037": 82, "3054": 82, "3072": 82, "3089": 82, "3106": 82, "pure": [73, 144, 164, 166], "kurtosis_tensor_standard_measures_plu": 73, "obviat": 73, "dkifit_noisi": 73, "dkifit_noisy_plu": 73, "kurtosis_tensor_standard_measures_noisi": 73, "665": [82, 85, 218], "137": [82, 83, 166, 170, 224, 245], "684": [74, 82, 85, 217], "208": [82, 83, 84, 114, 225], "694": [73, 74, 80, 82, 85, 217], "695": [73, 74, 80, 82, 85, 218], "493": [73, 82, 226], "707": [82, 85, 217, 228], "564": [82, 227], "789": [73, 74, 82], "679": [73, 74, 82, 85, 217], "935": [82, 219], "693": [74, 80, 82, 85, 217], "1013": [82, 219], "1086": [73, 82, 219], "1158": [82, 219], "691": [74, 80, 82, 85, 93, 217], "1230": 228, "699": [73, 74, 82, 85, 217], "1301": [82, 221], "689": [82, 85, 217], "690": [82, 85, 217], "1583": 222, "1653": [82, 222], "698": [73, 74, 82, 85, 155, 170, 217], "1725": 82, "704": [74, 78, 80, 82, 85, 217], "1796": [82, 228], "1867": [82, 229], "697": [73, 74, 82, 85, 217], "676": [82, 85, 217, 222], "677": [80, 82, 85, 217], "2154": 230, "2235": [82, 231], "732": [73, 74, 82, 85, 217], "2309": [82, 233], "2381": [82, 233], "716": [73, 74, 82, 85, 217], "2526": [82, 234], "2603": [74, 235], "731": [74, 82, 85, 217], "2680": [], "2755": 82, "2827": [82, 237], "2899": [73, 79, 82, 237], "2970": 82, "3040": 82, "3111": 82, "appdata": [73, 80, 83, 84, 88], "continuum": [73, 80, 83, 84, 88], "anaconda3": [73, 80, 83, 84, 88], "env": [73, 80, 83, 84, 88], "py310": [73, 80, 83, 84, 88], "site": [73, 80, 83, 84, 88, 165, 226, 229], "cvxpy": [73, 83, 84, 88, 158, 164, 170, 220, 221, 222, 223, 230, 231, 237, 249], "1403": [73, 82, 83, 84, 88, 221], "userwarn": [73, 82, 83, 84, 88, 100, 222, 228], "inaccur": [73, 83, 84, 88, 235], "optimum": [73, 163, 164, 170], "optimal_inaccur": 73, "msg": [73, 222], "127": [82, 83, 102, 105, 135, 224], "177": [73, 74, 79, 82, 83, 155, 170, 226], "194": [82, 83, 222], "228": [82, 83, 85, 226], "101": [82, 83, 84, 114, 165, 224], "116": [82, 83, 100, 114, 166, 170, 224, 235, 245], "281": [82, 83], "298": [82, 83, 226], "315": [82, 83, 226], "332": [82, 83, 219], "151": [82, 83, 93, 114], "349": [82, 83, 226], "156": [73, 82, 83, 85], "366": [82, 83, 102, 233], "383": [79, 82, 83, 226], "469": [79, 83, 226], "486": [74, 82, 146, 226], "504": [146, 226], "522": [82, 226], "556": [82, 227], "590": [82, 228], "607": [80, 82, 217], "624": [82, 217], "642": [82, 222], "730": [73, 74, 82, 85, 217], "781": [74, 82, 85], "798": [74, 82, 85], "815": [74, 82, 85, 218], "832": [82, 228], "849": [74, 82, 218], "883": [82, 219], "917": [73, 82, 218], "951": [82, 219], "968": [82, 219], "985": [82, 228], "1019": [82, 219], "1036": [73, 82, 219], "1053": [82, 165, 220, 247, 248], "1070": [82, 219], "1088": [82, 94, 170, 176, 197, 199, 219], "1123": [73, 82, 219], "1140": [73, 82, 219], "1157": [82, 219], "1174": [82, 84, 219], "1208": [82, 170, 219], "1225": [82, 219], "1242": [82, 219], "1259": [73, 82], "1276": [73, 82], "1293": [82, 220], "1310": [79, 82, 220], "1327": [82, 221], "1344": [82, 84, 220], "1378": [73, 82, 221], "1395": [82, 221], "1412": [82, 221], "1428": [82, 221], "1462": [82, 221], "1496": [82, 221], "1513": [82, 93, 222], "1531": [73, 82, 84], "1548": [82, 222], "1565": [82, 223], "1582": [73, 82, 222], "1597": [82, 84, 222], "1610": [73, 82, 222], "1626": [82, 222], "1643": [82, 222], "1660": [73, 82, 222], "1677": [82, 222], "1694": [82, 228], "1711": [82, 229], "1728": [73, 82, 230], "1745": [82, 223], "113": [73, 82, 83, 86, 102, 135, 146, 224], "1762": [82, 84, 231], "1779": [82, 228], "135": [79, 82, 83, 87, 88, 114, 170, 224], "1814": [82, 228], "1831": [73, 228], "1848": [82, 230], "1865": [82, 228], "1882": [82, 228], "1899": [82, 228], "1916": [82, 84, 228], "1933": [82, 228], "1951": [82, 229], "1969": [82, 234], "1986": [73, 82, 93, 229], "2038": [82, 230], "2055": [73, 82, 230], "2072": [82, 230], "2089": [82, 230], "2106": [], "2141": [82, 230], "2159": [82, 230], "2176": [82, 230], "2193": [82, 230], "2210": [82, 232], "2228": [82, 231], "2264": [73, 82, 231], "2282": [73, 82, 232], "2300": [73, 82, 233], "2318": [82, 232], "2335": [82, 233], "2352": [82, 233], "2369": [82, 84, 235], "2386": [82, 233], "2403": 82, "2420": [82, 234], "2437": 82, "2471": [82, 234], "2488": [82, 234], "2505": 82, "2556": [82, 234], "2574": 82, "2591": [82, 235], "2608": [82, 84], "2643": 82, "2677": 82, "2694": [82, 235], "2711": [79, 82, 235], "2728": [82, 84], "2762": [73, 236], "2779": 82, "2796": 82, "2813": [73, 82, 237], "2830": 82, "2847": [73, 82, 237], "2864": [82, 237], "2882": [82, 237], "2916": [73, 82, 237], "2950": 84, "2967": [82, 237], "3001": [82, 237], "3018": 84, "3035": 82, "3052": 82, "3069": 82, "3086": 82, "3102": 73, "3113": [73, 82, 84], "unsmooth": 73, "hansen2013": 73, "glennr2015": 73, "mkt": [73, 170, 177], "kfa": [73, 170, 177, 230, 234], "measures_from_kurtosis_tensor_onli": 73, "jensen": [73, 74, 85, 155, 170, 176, 197], "jh": [73, 74, 85, 155, 170], "helpern": [73, 74, 85, 155, 170, 176, 197], "ja": [73, 74, 85, 155, 170], "ramani": [73, 85, 155, 176, 197], "lu": [73, 85, 94, 155, 163, 170, 176, 197, 199], "kaczynski": [73, 85, 155, 176, 197], "quantif": [73, 85, 123, 155, 170, 173, 176, 197], "non_gaussian": [73, 85, 155], "1432": [73, 82, 84, 85, 155, 176, 197, 228], "1440": [73, 82, 85, 155, 221], "nmr": [73, 89, 155, 164, 170, 176, 199], "biomedicin": [73, 155, 170], "710": [73, 74, 82, 85, 155, 170, 217], "188": [73, 74, 82, 83, 155, 170], "poot": 73, "dh": 73, "heck": 73, "blockx": 73, "linden": 73, "verhoy": 73, "138": [73, 82, 83, 135, 146, 217, 224], "ferreira": [73, 85, 155, 170], "dissert": 73, "bachelor": 73, "programin": 73, "biomed": [73, 170, 247, 248], "faculti": 73, "repositorio": 73, "ul": 73, "10451": 73, "8511": 73, "ulfc104137_tm_rafael_henriqu": 73, "pdf": [73, 75, 76, 96, 143, 163, 170, 172, 176, 177, 178, 198, 226, 235], "lund": [73, 170], "te": [73, 174], "sangil": [73, 170], "sn": [73, 74, 84, 85, 146, 164, 170], "experiment": [73, 158, 170, 172], "computationally393fast": 73, "1760": [73, 170, 228], "394doi": 73, "24743": [73, 170], "glenn": [73, 158, 170], "diffusional387kurtosi": 73, "biomedicine28": 73, "448": [73, 74, 79, 82, 83, 170, 226], "459": [73, 79, 82, 83, 170, 217], "nbm": [73, 170], "nune": [73, 85, 155, 170], "rg": [73, 85, 155, 170], "geometri": [73, 83, 85, 93, 121, 155, 162, 170, 172, 174, 177, 221, 226], "biomark": [73, 85, 121, 155, 170, 172], "cmw": 73, "ott": 73, "dijkhuizen": 73, "rekindl": 73, "794": [73, 74, 82, 85, 218], "808": [73, 74, 82, 85, 218], "160072": [73, 74, 84, 85, 146, 247, 248], "sdata": [73, 74, 84, 85, 146, 165, 247, 248], "program": [73, 83, 88, 142, 164, 165, 170, 176, 204], "209": [73, 80, 82, 83, 164, 165, 170, 176, 199, 225], "078": [], "reconst_dki": [73, 95, 219, 238], "hinder": [74, 83, 170, 172], "fierem2013": 74, "influenc": [74, 80, 165], "intra": [74, 85, 121, 170, 176, 200, 247, 248], "extra": [74, 80, 85, 97, 121, 138, 141, 143, 163, 164, 168, 170, 171, 175, 237, 249], "cellular": [74, 85, 121, 170], "fierem2012": 74, "distinguish": [74, 164, 174, 175, 176, 203, 204], "degener": [74, 164, 174], "dki_micro": [74, 177], "kurtosismicrostructuremodel": [74, 177], "dki_micro_model": 74, "fieremans2011": 74, "planar": [74, 87, 88, 164, 165, 174, 177, 237], "criteria": [74, 170, 174], "predefin": [74, 162, 166, 171], "well_aligned_mask": 74, "cp": [74, 157, 176, 214], "isnan": [74, 78, 224], "57580": [74, 85], "627": [74, 80, 82, 217], "651": [74, 80, 82, 217], "202": [73, 74, 82, 83, 166, 170, 225, 245, 247, 248], "674": [74, 82, 85, 217], "683": [74, 80, 82, 85, 124, 129, 217], "346": [74, 82, 83, 85, 170, 174, 226], "664": [74, 217], "562": [74, 82, 233], "636": [74, 82, 233], "782": [73, 74, 82, 85], "854": [74, 82, 222], "925": [74, 82, 218], "718": [73, 74, 80, 82, 85, 237], "1080": [74, 82, 219], "1154": [74, 82, 84, 219], "1228": [74, 82, 219], "725": [74, 82, 84, 85, 217], "1385": [74, 82, 221], "1463": [74, 82, 221], "762": [74, 82, 85, 218], "1540": [74, 82, 222], "1691": [73, 74, 223], "763": [74, 82, 85, 217], "1850": [73, 74, 82, 84, 228], "749": [73, 74, 82, 85, 164, 217], "1926": [74, 82, 228], "787": [73, 74, 82, 85, 222], "2107": [74, 82, 230], "826": [74, 82, 85, 218], "2199": [74, 82, 230], "2285": [74, 84], "806": [73, 74, 82, 85, 218], "2367": [74, 82, 233], "2446": [74, 82, 234], "2523": [74, 82, 237], "727": [73, 74, 85, 217], "2754": [73, 74, 82, 84, 236], "2837": [73, 74, 82, 84], "2918": [74, 82, 84], "773": [73, 74, 82, 85], "2997": [74, 82, 237], "3075": [74, 82, 228], "746": [73, 74, 79, 82, 85, 222], "3150": [74, 82], "3225": [74, 82], "3300": [74, 82, 84], "3374": [74, 82], "3452": [74, 82], "744": [73, 74, 82, 85], "3534": [74, 82, 84], "766": [74, 82, 85, 217], "3617": [74, 82], "784": [73, 74, 82, 85], "3699": [74, 82], "792": [74, 82, 85], "3779": [74, 82, 84], "767": [73, 74, 82, 85, 217], "3856": [74, 82], "3932": [74, 82], "743": [73, 74, 82, 85, 217], "4007": 74, "4082": [74, 82, 84], "726": [74, 82, 85, 217], "724": [74, 75, 79, 81, 82, 83, 84, 85, 92, 174, 217, 222], "4376": [74, 82], "4449": [74, 82], "720": [74, 82, 85, 108, 115, 165, 166, 219, 228, 236], "4522": [74, 82], "4593": [74, 82], "4974": [74, 82], "756": [74, 82, 85], "5051": [74, 82], "5128": [74, 82], "753": [73, 74, 82, 85, 217], "5206": [74, 84], "5283": 74, "5358": 74, "5433": [74, 84], "5585": 74, "5743": [74, 84], "5820": [74, 84], "5897": 74, "5974": 74, "6052": 74, "6135": 74, "6214": 74, "6304": 74, "6386": [74, 84], "6467": 74, "6554": 74, "813": [74, 82, 84, 218, 219], "6636": 74, "812": [74, 85, 218], "6718": [74, 84], "6800": 74, "805": [73, 74, 82, 218], "6881": 74, "6959": 74, "7034": 74, "7182": [74, 84], "7260": 74, "7342": 74, "7425": 74, "7506": 74, "791": [73, 74, 82, 84, 221], "7586": 74, "7663": 74, "7738": 74, "7822": 74, "7902": 74, "7980": 74, "8055": 74, "8136": 74, "8212": 74, "8287": 74, "8362": 74, "8437": 74, "8515": 74, "8598": 74, "771": [74, 82, 85, 217], "8676": 74, "8752": 74, "742": [74, 82, 85, 136, 164, 218, 222], "8827": 74, "8902": 74, "8977": 74, "9052": 74, "9127": 74, "9209": 74, "9292": 74, "777": [74, 80, 85], "9372": 74, "783": [73, 74, 79, 82], "9451": 74, "9528": 74, "9610": 74, "9693": 74, "786": [73, 74, 82], "9772": 74, "770": [74, 82, 85], "9850": 74, "9925": 74, "10074": 74, "10147": 74, "10220": 74, "10294": 74, "10371": 74, "10450": 74, "10533": 74, "10611": 74, "10688": 74, "10763": 74, "729": [74, 85, 217], "10837": 74, "10912": 74, "10987": 74, "11061": 74, "11135": 74, "11208": 74, "706": [74, 82, 85], "11279": 74, "700": [73, 74, 80, 82, 85, 92, 170, 217, 247, 248], "11353": 74, "709": [73, 74, 79, 82, 85, 217], "11427": 74, "11500": 74, "11573": 74, "11647": 74, "11730": 74, "11813": 74, "774": [74, 82, 85, 164], "11895": 74, "785": [73, 74, 82, 85, 229], "11978": 74, "795": [74, 82, 85, 228], "12058": 74, "12137": 74, "768": [73, 74, 82, 85, 217], "12214": 74, "12290": 74, "12365": 74, "12447": 74, "12526": 74, "12618": 74, "12709": 74, "835": [74, 84, 219], "12802": 74, "12889": 74, "12976": 74, "839": [74, 82, 218], "13061": 74, "13143": 74, "13223": 74, "13381": 74, "13463": 74, "13545": 74, "13626": 74, "796": [74, 85], "13706": 74, "13784": 74, "13860": 74, "13935": 74, "14009": 74, "14086": 74, "14161": 74, "14236": 74, "14311": 74, "14386": 74, "14460": 74, "14534": 74, "14608": 74, "14682": 74, "14758": 74, "14841": 74, "14923": 74, "15079": 74, "15156": 74, "15231": 74, "15306": 74, "15388": 74, "15464": 74, "15544": 74, "15626": 74, "778": [74, 82, 85], "15716": 74, "15803": 74, "829": [74, 82, 85, 218], "15895": 74, "852": [74, 82, 89, 170, 219, 222], "15981": 74, "831": [74, 82, 106, 219], "16065": 74, "809": [74, 82, 85, 218], "16147": 74, "16226": [74, 85], "16303": 74, "16386": 74, "16471": 74, "16554": 74, "16635": 74, "16712": 74, "16785": 74, "16863": 74, "16939": 74, "17013": 74, "17094": 74, "754": [73, 74, 82, 85, 90, 217], "17173": 74, "17250": 74, "17327": 74, "17405": 74, "17482": 74, "17558": 74, "17634": 74, "17710": 74, "17785": 74, "17861": 74, "17936": 74, "18010": 74, "18083": 74, "18156": 74, "18236": 74, "18317": 74, "18394": 74, "18470": 74, "18545": 74, "18619": 74, "18700": 74, "18776": 74, "18851": 74, "18926": 74, "18999": 74, "19071": 74, "19142": 74, "19214": 74, "19286": 74, "711": [74, 80, 82, 85, 219], "19361": 74, "19439": 74, "19518": 74, "19594": 74, "19669": 74, "19744": 74, "19819": 74, "19901": 74, "19978": 74, "20053": 74, "20128": 74, "20211": 74, "20294": 74, "20373": 74, "20452": 74, "20529": 74, "20605": 74, "20682": 74, "20757": 74, "20835": 74, "20919": 74, "21002": 74, "21085": 74, "801": [74, 82, 218], "21166": 74, "21244": 74, "21318": 74, "21391": 74, "21464": 74, "21540": 74, "21615": 74, "21689": 74, "21763": 74, "21837": 74, "21911": 74, "708": [74, 82, 85, 217], "21983": 74, "22054": 74, "22127": 74, "22199": 74, "22271": 74, "22346": 74, "22419": 74, "22491": 74, "22565": 74, "22640": 74, "22714": 74, "22787": 74, "22863": 74, "22937": 74, "23013": 74, "23097": 74, "23174": 74, "23250": 74, "23326": 74, "23401": 74, "23475": 74, "23549": 74, "23622": 74, "23702": 74, "23784": 74, "23864": 74, "23942": 74, "24018": 74, "24093": 74, "24167": 74, "24239": 74, "24314": 74, "24387": 74, "24460": 74, "24532": 74, "24608": 74, "24681": 74, "24755": 74, "24829": 74, "24904": 74, "24978": [74, 85], "25053": 74, "25127": 74, "25209": 74, "25291": 74, "25374": 74, "25457": 74, "25540": 74, "25621": 74, "25700": 74, "758": [74, 82, 84, 85, 218], "25777": 74, "25851": 74, "25926": 74, "26000": 74, "26075": 74, "26149": 74, "719": [73, 74, 82, 85, 217], "26222": 74, "26292": 74, "26369": 74, "26443": 74, "26515": 74, "26587": 74, "26669": 74, "26748": 74, "26824": 74, "26900": 74, "26975": 74, "27050": 74, "27197": 74, "27274": 74, "27348": 74, "27421": 74, "27494": 74, "27567": 74, "27640": 74, "27720": 74, "27800": 74, "27876": 74, "27951": 74, "28025": 74, "28101": 74, "28184": 74, "28267": 74, "28349": 74, "28429": 74, "28506": 74, "28579": 74, "681": [74, 82, 84, 85, 217], "28648": 74, "28717": 74, "28786": 74, "658": [74, 80, 82, 85, 217], "28856": 74, "669": [74, 80, 82, 85, 218], "28930": 74, "687": [74, 80, 82, 85], "29001": 74, "29071": 74, "29150": 74, "29225": 74, "29298": 74, "29373": 74, "29447": [74, 114], "29527": 74, "29608": 74, "29695": 74, "29777": 74, "802": [74, 82, 84, 218], "29859": 74, "807": [74, 82, 218], "29940": 74, "30020": 74, "30099": 74, "30178": 74, "30254": 74, "30330": 74, "30412": 74, "30493": 74, "30571": 74, "30648": 74, "30724": 74, "30799": 74, "30873": 74, "30947": 74, "31020": 74, "31095": 74, "31173": 74, "31257": 74, "31335": 74, "31489": 74, "31565": 74, "31640": 74, "31714": 74, "31790": 74, "31873": 74, "31950": 74, "32032": 74, "32115": 74, "32201": 74, "32283": 74, "32365": 74, "32445": 74, "32522": 74, "32598": 74, "32676": 74, "32759": 74, "32843": 74, "32926": 74, "33007": 74, "33088": 74, "33168": 74, "33245": 74, "33326": 74, "33418": 74, "33509": 74, "33597": 74, "33683": 74, "33765": 74, "33845": 74, "33924": 74, "34001": [74, 85], "34076": 74, "34153": 74, "34236": 74, "34318": 74, "34397": 74, "34474": 74, "34556": 74, "34635": 74, "34712": 74, "34786": 74, "34858": 74, "34933": 74, "35016": 74, "35099": 74, "35182": 74, "35264": 74, "35346": 74, "35427": 74, "35581": 74, "35656": 74, "35730": 74, "35809": 74, "35890": 74, "35967": 74, "36042": 74, "36118": 74, "36193": 74, "36266": 74, "36339": 74, "36411": 74, "36483": 74, "36556": 74, "36628": 74, "36701": 74, "36779": 74, "36861": 74, "36938": 74, "37013": 74, "37086": 74, "37158": 74, "37233": 74, "37317": 74, "37400": 74, "37481": 74, "37560": 74, "37637": 74, "37713": 74, "37793": 74, "37869": 74, "37948": 74, "38024": 74, "38099": 74, "38181": 74, "38262": [74, 85], "38344": 74, "38423": 74, "38500": 74, "38576": 74, "38659": 74, "38737": 74, "38814": 74, "38896": 74, "38974": 74, "39051": 74, "39126": 74, "39202": 74, "39284": 74, "39361": 74, "39437": 74, "39514": 74, "39606": 74, "39698": 74, "833": [74, 82, 85, 218], "39790": 74, "857": [74, 82, 84, 89, 170, 218], "39882": 74, "875": [74, 82, 170, 219], "39970": 74, "40054": 74, "40134": 74, "40212": 74, "40289": 74, "40364": 74, "40446": 74, "40523": 74, "40596": 74, "40666": 74, "675": [74, 82, 85, 219], "40735": 74, "40804": 74, "40885": 74, "40972": 74, "41054": 74, "41136": 74, "41220": 74, "41303": 74, "41385": 74, "41467": 74, "41549": 74, "41629": 74, "41713": 74, "41799": 74, "818": [74, 82, 85, 218], "41882": 74, "821": [74, 82, 218], "41965": 74, "823": [74, 82, 170, 176, 197], "42048": 74, "819": [74, 82, 218], "42132": 74, "824": [73, 74, 82, 84, 218], "42215": 74, "42295": 74, "42375": 74, "42453": 74, "42528": 74, "42602": 74, "42676": 74, "42749": 74, "42822": 74, "42896": 74, "42969": 74, "43042": 74, "43117": 74, "43202": 74, "43295": 74, "43387": 74, "842": [74, 82, 218], "43478": 74, "861": [73, 74, 82, 233], "43569": 74, "873": [74, 82, 219], "43662": 74, "43753": 74, "894": [74, 82, 218], "43843": 74, "840": [74, 82, 218], "43928": 74, "44009": 74, "44086": 74, "44167": 74, "44255": 74, "44339": [74, 85], "44421": 74, "44503": 74, "44585": 74, "44667": 74, "44745": 74, "44822": 74, "44899": 74, "44975": 74, "45049": 74, "45196": 74, "45269": 74, "45342": 74, "45414": 74, "45486": 74, "45558": 74, "45629": 74, "45699": [74, 85], "45769": 74, "680": [73, 74, 80, 82, 85, 217], "45842": 74, "45915": 74, "45993": 74, "46066": 74, "46139": 74, "46211": 74, "46283": 74, "46354": 74, "46426": 74, "46497": 74, "46568": 74, "46640": 74, "46713": 74, "46785": 74, "46857": 74, "46932": 74, "47012": 74, "47094": 74, "47177": 74, "47260": 74, "47342": 74, "799": [73, 74, 82], "47425": 74, "47506": 74, "47586": 74, "47664": 74, "47743": 74, "47826": 74, "47907": 74, "47989": 74, "48069": 74, "48147": 74, "48223": 74, "48297": 74, "48370": 74, "48443": 74, "48517": 74, "48592": 74, "48667": 74, "48741": 74, "48813": 74, "48887": 74, "48959": 74, "49031": 74, "49103": 74, "49175": 74, "49256": 74, "49338": 74, "49420": 74, "49498": 74, "49576": 74, "49653": 74, "49730": 74, "49806": 74, "49882": 74, "49958": 74, "50047": 74, "50139": 74, "50222": 74, "50305": 74, "50388": 74, "822": [74, 82, 85, 88, 218], "50471": 74, "50554": 74, "50637": 74, "50717": 74, "50808": 74, "820": [74, 79, 82, 218], "50900": 74, "848": [74, 82, 218], "50991": 74, "51078": 74, "51165": 74, "51251": 74, "51335": 74, "51497": 74, "51573": 74, "51654": 74, "51731": 74, "51808": 74, "51884": 74, "51963": 74, "52045": 74, "52123": 74, "52200": 74, "52275": 74, "52349": 74, "52422": 74, "52504": 74, "52579": 74, "52654": 74, "52727": 74, "52801": 74, "52879": 74, "52954": 74, "53028": 74, "53106": 74, "53185": 74, "53262": 74, "53338": 74, "53417": 74, "53493": 74, "53570": 74, "53646": 74, "53723": 74, "53798": 74, "53876": 74, "53955": 74, "54031": 74, "54107": 74, "54185": 74, "54267": 74, "54345": 74, "54422": 74, "54573": 74, "54649": 74, "54724": 74, "54799": 74, "54874": 74, "54949": 74, "55023": 74, "55097": 74, "55170": 74, "55242": 74, "55317": 74, "55391": 74, "55466": 74, "55540": 74, "55614": 74, "55688": 74, "55762": 74, "55838": 74, "55912": 74, "55986": 74, "56059": 74, "56136": 74, "56223": 74, "56305": 74, "56388": 74, "56470": 74, "804": [74, 82, 220], "56553": 74, "56635": 74, "56715": 74, "56792": 74, "56867": 74, "56950": 74, "57027": 74, "57102": 74, "57176": 74, "57257": 74, "57333": 74, "57409": 74, "57483": 74, "57561": 74, "dki_micro_fit": 74, "465": [74, 79, 82, 83, 226], "225": [74, 82, 83, 170, 224, 225], "299": [74, 83, 114, 226], "374": [74, 79, 82, 83, 226], "kurtosismicrostructurefit": 74, "awf": [74, 170, 177], "tort": [74, 164, 171, 176], "im0": [74, 85], "im1": [74, 85], "kurtosis_microstructural_measur": 74, "overlaid": [74, 90, 175], "kim": [74, 169], "grossman": [74, 104, 105, 106, 156, 163], "ri": 74, "ingles": 74, "demyelin": 74, "proceed": [74, 82, 84, 170, 171, 175, 176, 203], "20th": 74, "societi": [74, 82, 84, 89, 164, 170, 171, 174, 175, 176, 203], "melbourn": 74, "australia": 74, "benitez": 74, "falangola": 74, "deardorff": 74, "spampinato": 74, "babb": 74, "ferri": 74, "alzheim": 74, "diseas": [74, 147], "ajnr": 74, "neuroradiol": 74, "2105": [74, 82, 230], "2112": [74, 82, 230], "3174": [74, 82], "a3553": 74, "316": [74, 82, 83, 226], "reconst_dki_micro": [74, 95, 238], "wedeen08": 75, "keyhol": [75, 170], "ndindex": [75, 89, 177, 224, 226], "diffusionspectrummodel": [75, 76, 77, 119, 177, 218], "taiwan_ntu_dsi": [75, 76, 81, 93, 247, 248], "dsmodel": [75, 76], "dataslic": [75, 76, 81, 93], "dsfit": [75, 170], "9216": [75, 84], "509210": 75, "173": [73, 75, 82, 83, 225], "runtimewarn": [75, 76, 80, 83, 84, 86, 87, 88, 89, 93, 226, 230], "fashion": [75, 82, 155, 163, 169, 174], "345": [73, 75, 82, 83, 87, 88, 170, 226], "disc": [75, 164], "memmap": 75, "gbyte": 75, "tuch04": 75, "fig_hist": [75, 94, 130], "dsi_gfa": 75, "1358": [75, 82, 221], "reconst_dsi": [75, 95, 238], "rtop": [76, 83, 86, 93, 170, 172, 175, 176, 177, 201, 217, 237], "msd": [76, 83, 85, 86, 93, 170, 172, 176, 177, 201], "wu2007": [76, 93], "wu2008": [76, 93], "qgrid_siz": [76, 170, 176, 198], "filter_width": [76, 170, 176, 198], "rtop_sign": [76, 93, 170, 177], "480034": 76, "rtop_pdf": [76, 93, 170, 177], "480057": 76, "mse": [76, 93], "rtop_pdf_norm": 76, "600043": 76, "msd_norm": 76, "msd_discret": [76, 170, 177], "467809": 76, "ax1": [76, 79, 89, 93, 123], "add_subplot": [76, 79, 93, 116], "ind": [76, 79, 93, 170, 173, 174], "ax2": [76, 79, 93, 123], "ax3": [76, 79, 93], "examples_revamp": [76, 86, 238], "reconst_dsi_metr": [76, 95, 238], "104": [76, 82, 83, 102, 146, 224], "consum": [76, 86, 96], "rcparam": [76, 86], "max_open_warn": [76, 86], "621": [76, 82, 93, 170, 217], "hybrid": [76, 83, 93, 170], "617": [76, 80, 82, 93, 170, 217], "858": [76, 82, 93, 95, 170, 218], "865": [76, 82, 93, 170, 219], "canales10": [77, 119], "goal": [77, 119, 146, 156], "multi_tensor_odf": [77, 91, 119, 122, 177], "diffusionspectrumdeconvmodel": [77, 119, 177], "btabl": [77, 119], "dsi515btabl": [77, 119], "0015": [77, 91, 119, 122, 170, 172], "0003": [77, 91, 119, 122, 170, 172], "subdivid": [77, 91, 119, 122, 164, 166, 176, 177, 224], "odf_gt": [77, 119], "dsi_model": [77, 119], "dsi_odf": [77, 119], "dsid_model": [77, 119], "dsid_odf": [77, 119], "odf_actor": [77, 78, 79, 91, 119, 122], "rotatex": [77, 83, 91, 92, 99, 119, 122, 125], "136": [77, 82, 83, 119, 170, 224], "149": [77, 82, 83, 119], "653": [77, 80, 82, 217], "reconst_dsid": [77, 95, 219, 238], "colleagu": [78, 155], "basser1994": [78, 155], "influenti": [78, 155], "commonli": [78, 155], "quadrat": [78, 155, 170, 174], "pmatrix": [78, 87, 88, 155, 170, 241, 242], "xx": [78, 155, 241, 242], "xz": [78, 155, 241, 242], "yx": [78, 155, 241, 242], "yy": [78, 155, 241, 242], "yz": [78, 155, 241, 242], "zx": [78, 155], "zy": [78, 155], "zz": [78, 155, 241, 242], "covari": [78, 87, 88, 155, 170], "diagon": [78, 147, 155, 170, 176, 208], "numer": [78, 83, 142, 158, 163, 164, 170, 172, 175, 231, 233, 241, 249], "recov": [78, 86, 94, 109, 169, 170, 242, 245], "triangular": [78, 164, 165, 166, 168, 170], "dxx": [78, 155, 170, 176, 199], "dxy": [78, 155, 170, 176, 199], "dyi": [78, 155, 170, 176, 199], "dxz": [78, 155, 170, 176, 199], "dyz": [78, 155, 170, 176, 199], "dzz": [78, 155, 170, 176, 199], "tensor_v": 78, "lower_triangular": [78, 177], "quadratic_form": [78, 170, 177], "eigen": [78, 170, 172], "That": [78, 82, 138, 141, 143, 144, 163, 170, 174], "unrestrict": 78, "mathemat": [78, 88, 99, 163, 170, 174, 222, 244, 245, 249], "lambda_1": [78, 170, 241, 242], "lambda_2": [78, 170, 241, 242], "lambda_3": [78, 170, 241, 242], "carefulli": [78, 151], "pack": 78, "wrap": [78, 163, 169, 170, 174, 176, 189, 190, 191, 207, 209, 217, 227], "decreas": [78, 83, 86, 98, 102, 174, 219, 222], "fan": [78, 99], "color_fa": [78, 94, 177, 250], "tensor_fa": 78, "viewer": [78, 137, 143, 246], "tensor_evec": 78, "complimentari": 78, "md1": 78, "tensors_md": 78, "md2": 78, "quantiti": [78, 83, 85, 86, 170], "pajevic1999": 78, "tensor_rgb": 78, "ellipsoid": [78, 94, 164, 221], "tensor_slic": [78, 94], "scalar_color": [78, 94], "tensor_ellipsoid": 78, "tensor_odf": 78, "reliabl": 78, "drawback": 78, "mislead": [78, 219, 230], "fortun": [78, 91], "mattielo": [78, 155], "spectroscopi": [78, 155, 241], "pajev": 78, "reconst_dti": [78, 95, 219, 238], "anderson2005": 79, "kaden2016": 79, "zucchelli2017": 79, "forecastmodel": [79, 177], "fetch_hbn": [79, 80, 177], "op": [79, 80, 123, 226, 246], "alexander2017": 79, "hbn": [79, 158, 237], "pod2": [79, 165], "richiehalford2022": 79, "data_path": [79, 80], "ndaraa948vfh": [79, 80, 165], "dwi_path": [79, 80], "qsiprep": [79, 80], "hbnsiteru": [79, 80], "ndaraa948vfh_s": [79, 80], "hbnsiteru_acq": [79, 80], "64dir_spac": [79, 80], "t1w_desc": [79, 80], "preproc_dwi": [79, 80], "mask_img": [79, 80, 88, 165], "brain_mask": [79, 80, 146, 155, 176], "mask_smal": [79, 80], "dec_alg": [79, 170], "fm": [79, 170], "f_fit": [79, 170], "5148": [79, 80, 82], "240": [79, 82, 83, 225], "280": [79, 82, 83, 114], "295": [79, 82, 83], "310": [79, 82, 83, 226], "313": [79, 82, 83, 85, 230], "321": [79, 82, 83, 219], "329": [79, 82, 83, 84, 226], "328": [73, 79, 82, 83, 219], "333": [79, 80, 82, 83, 226], "351": [79, 82, 83, 84, 219], "342": [79, 82, 83, 112, 219, 231], "391": [79, 82, 83, 226], "359": [79, 82, 83, 85, 170, 226], "472": [79, 82, 83, 84, 89, 170, 226], "381": [79, 82, 83, 116, 226], "511": [79, 219, 226], "549": [79, 82, 84, 227], "593": [79, 82, 84, 227], "371": [79, 82, 83, 226], "859": [79, 82, 219], "899": [79, 82, 219], "982": [79, 82, 219], "393": [79, 82, 83, 174, 226], "1022": [79, 82, 84, 93, 217, 219, 228], "388": [79, 82, 83, 170, 226], "1064": [79, 82, 84, 219], "396": [79, 82, 83, 226], "1104": [79, 82, 84, 219], "377": [79, 82, 83, 146, 170, 226], "1147": [79, 82, 219], "1187": [73, 79, 82, 219], "380": [79, 82, 83, 226], "1229": [79, 82, 219], "389": [79, 82, 83, 228], "1270": [73, 79, 82, 219], "395": [79, 82, 83, 84], "392": [79, 82, 83, 174, 229, 231], "1401": [79, 80, 82, 229], "1444": [79, 82, 233], "1486": [79, 82, 222], "413": [79, 82, 83, 226], "1528": [79, 82, 222], "405": [79, 82, 83, 226], "1576": [79, 82, 222], "1622": [73, 79, 82, 164, 222], "1669": [79, 82, 222], "442": [79, 82, 83, 222], "1714": [79, 82, 223], "428": [79, 82, 83, 84, 226], "1761": [79, 82, 228], "436": [79, 82, 83, 228], "1805": [79, 82, 234], "435": [79, 82, 83, 226], "1852": [79, 82], "445": [79, 82, 83, 226], "1897": [79, 82, 228], "1942": [73, 79, 82, 228], "1987": [79, 82, 229], "424": [79, 82, 83, 226], "2032": [79, 82], "430": [79, 82, 83, 226], "427": [73, 79, 82, 83, 226], "2170": [79, 82, 230], "2216": [79, 82, 231], "446": [79, 82, 83, 226], "2261": [79, 82, 231], "2305": [79, 82, 234], "2348": [79, 82, 233], "2391": [79, 82, 234], "2436": [79, 82, 234], "2480": [79, 234], "2524": [79, 234], "2568": [79, 82, 235], "2612": [79, 82], "431": [79, 82, 83, 226], "2662": [73, 79, 82, 235], "451": [79, 82, 83, 146, 226], "2758": [79, 82], "457": [79, 82, 83], "2805": [79, 82, 237], "2851": [79, 82, 85, 237], "2946": [79, 82, 237], "2993": [79, 82], "453": [79, 82, 83, 226], "3041": [79, 82, 84], "458": [79, 82, 83, 226], "3090": [79, 82], "466": [79, 82, 83, 226], "3137": [79, 82, 84], "464": [79, 82, 83, 226], "3232": [79, 82], "3279": [79, 82], "463": [79, 82, 83, 226], "3326": [79, 82], "447": [79, 82, 83, 226], "3371": [79, 82], "3420": [79, 82], "419": [73, 79, 82, 83, 226], "3466": [79, 80, 82], "429": [79, 82, 83, 170, 226], "3515": [79, 82], "444": [79, 82, 83, 226], "3565": [79, 82, 84], "3613": [79, 82], "3660": [79, 82], "462": [79, 82, 83, 89, 170, 226], "3707": [79, 82], "460": [79, 82, 83, 85, 226], "3754": [79, 82], "439": [79, 82, 83, 84, 91, 226], "3799": [79, 82, 84], "3844": [79, 82, 84], "437": [73, 79, 82, 83, 92, 226], "3892": [79, 82], "449": [79, 82, 83, 129, 131, 226], "3938": [79, 82, 84], "3989": [79, 82], "4130": [79, 82], "4177": [79, 82, 84], "456": [79, 82, 83, 226], "4318": [79, 82], "450": [79, 82, 83, 84, 175, 226], "4412": [79, 82], "4556": [79, 82], "4789": [79, 82], "454": [79, 83, 226], "4984": [79, 82], "475": [79, 83, 226], "5034": [79, 82, 84], "481": [79, 82, 226], "5083": [79, 82], "476": [79, 82, 226], "5131": [79, 82], "d_par": [79, 170], "dpar": [79, 170, 177], "d_perp": [79, 170], "dperp": [79, 170, 177], "forecast_indic": 79, "shrink": [79, 174], "ax4": 79, "dpi": [79, 175], "129": [73, 79, 82, 83, 114, 158, 224, 237], "magnif": 79, "kaden": [79, 85, 170], "miccai": [79, 92, 166, 170, 176, 191], "cdmri": [79, 170], "lm": [79, 165], "escalera": [79, 165], "ai": [79, 164, 165], "transdiagnost": [79, 165], "pediatr": [79, 165, 247, 248], "mental": [79, 165], "health": [79, 165], "sci": [79, 108, 124, 125, 147, 165, 171, 173, 176, 182, 183, 208, 247, 248], "170181": [79, 165], "richi": [79, 165, 228], "halford": [79, 165, 228], "027": 79, "reconst_forecast": [79, 95, 221, 238], "parenchyma": 80, "cerebr": [80, 82], "spinal": [80, 82, 128, 166], "morphologi": [80, 165], "enlarg": 80, "atrophi": 80, "pathologi": 80, "pasternak2009": 80, "s_0fe": 80, "thebdiffus": 80, "hoy2014": 80, "henriques2017": 80, "freewatertensormodel": [80, 177], "fwdtimodel": 80, "fwdtifit": 80, "139": [80, 82, 83, 85, 114, 170, 224], "668": [73, 80, 82, 228], "347": [73, 80, 82, 83, 226], "415": [80, 82, 83, 226], "672": [80, 82, 85, 217], "559": [80, 82, 227], "702": [80, 82, 85, 217], "851": [80, 82, 218], "923": [80, 82, 84, 222, 247, 248], "995": [73, 80, 82, 219], "1067": [73, 80, 82, 219], "1138": [80, 82, 219], "1209": [80, 82, 219], "_minpack_pi": 80, "492": [80, 82, 226], "maxfev": 80, "1279": [80, 82, 220], "1341": [80, 82, 220], "571": [80, 82, 84, 227], "1473": [80, 82, 221], "1543": [80, 82, 222], "628": [73, 80, 82, 217], "1681": [80, 82, 222], "1891": [80, 82, 228], "650": [80, 82, 83, 170, 217], "1963": [80, 82, 229], "2036": [80, 82], "686": [73, 80, 82, 85, 217], "692": [80, 82, 84, 85, 218], "2252": [80, 82, 231], "2323": [80, 82, 232], "2393": [80, 82, 234], "2463": [80, 82, 85, 234], "2533": [80, 234], "2602": [80, 82, 235], "574": [80, 82, 227], "2663": [73, 80, 82], "528": [80, 82, 226], "2729": [80, 82, 236], "560": [80, 82, 84, 227], "2788": [80, 82, 84, 236], "2861": [80, 82], "2923": [80, 82, 237], "2991": [73, 80, 82, 237], "3056": [73, 80, 82], "630": [73, 80, 82, 217], "3124": [80, 82], "644": [80, 82, 221], "3189": [80, 82], "643": [73, 80, 82, 222], "3257": [80, 82], "3325": [80, 82, 84], "3396": [80, 82], "3535": [80, 82], "3604": [80, 82], "666": [80, 82, 218], "3671": [80, 82], "3738": [80, 82], "3801": [80, 82, 84], "3871": [80, 82], "584": [73, 80, 82, 120, 122, 227], "623": [80, 82, 217], "4008": [80, 82, 84], "616": [80, 82, 217], "4425": [80, 82, 84], "688": [73, 80, 82, 85, 217], "4497": [80, 82], "4570": [80, 82], "4926": [80, 82, 84], "4995": [80, 82], "5069": [80, 82, 84], "5140": [80, 82, 84], "656": [80, 82, 217], "freewatertensorfit": [80, 177], "dtimodel": 80, "dtifit": [80, 241, 242], "dti_fa": 80, "dti_md": 80, "fadiff": 80, "5e": [80, 87, 164, 170, 172], "mddiff": 80, "in_vivo_free_water_dti_and_standard_dti_measur": 80, "periventricular": 80, "problemat": 80, "reproduc": [80, 86, 87, 126, 153, 164, 165, 169, 171, 174, 176, 222, 226, 230], "inflat": [80, 126], "in_vivo_free_water_dti_and_standard_dti_correct": 80, "dismiss": 80, "sochen": 80, "gur": 80, "intrat": 80, "assaf": [80, 172], "22055": 80, "hoi": 80, "kecskemeti": 80, "323": [80, 82, 83, 164, 170, 172, 226], "053": 80, "reconst_fwdti": [80, 95, 220, 238], "yeh2010": 81, "generalizedqsamplingmodel": [81, 177], "gqmodel": 81, "sampling_length": [81, 170], "gqfit": 81, "424379": 81, "gqpeak": 81, "gqpeak_valu": 81, "gqpeak_indic": 81, "341": [81, 82, 83, 226], "reconst_gqi": [81, 95, 219, 238], "perfus": [82, 145, 155, 158, 170, 176, 200], "sequenc": [82, 99, 112, 113, 142, 143, 144, 155, 163, 164, 165, 169, 170, 171, 172, 174, 175, 176, 178, 230, 241, 242, 243], "understood": [82, 155, 174], "stejskal": [82, 142, 155, 172, 176, 200, 241, 242, 243], "tanner": [82, 142, 147, 155, 172, 176, 200, 241, 242, 243], "stejskal65": [82, 155, 176, 200], "lebihan84": [82, 155, 176, 200], "brownian": [82, 155], "thermal": [82, 94, 155], "vascular": [82, 155], "blood": [82, 155], "pressur": [82, 155], "pseudo": [82, 84, 155, 164, 170, 175, 176, 200], "laid": [82, 155, 170], "macroscop": [82, 155, 170], "fe": 82, "weigh": 82, "ivimmodel": [82, 170], "read_ivim": [82, 177], "regist": [82, 96, 97, 98, 99, 100, 104, 105, 106, 108, 134, 148, 149, 156, 163, 168, 175, 176, 177, 184, 222, 223, 230], "bvalu": [82, 84, 85, 121, 164, 170, 176, 188, 189, 195, 196, 197, 198, 199, 200], "midwai": 82, "axhlin": 82, "axvlin": 82, "ivim_data_slic": 82, "heat": 82, "hair": 82, "medial": 82, "mixtur": [82, 163], "x1": [82, 170, 174, 175], "x2": [82, 170, 174, 175], "y1": [82, 164, 175], "y2": [82, 164, 175], "csf_slice": 82, "exponenti": [82, 170, 226], "trr": [82, 170], "guess": [82, 163, 164, 170], "split_b_d": [82, 155, 170, 176, 200], "mono": [82, 163, 170], "logarithm": [82, 88, 170, 174], "split_b_s0": [82, 170, 176, 200], "s0_": 82, "d_star": [82, 170, 176, 177, 200], "two_stag": [82, 170], "literatur": [82, 131, 170, 245], "survei": [82, 174], "bounds_warn": 82, "ivimfit": [82, 177], "5200": [82, 84], "x0": [82, 108, 163, 164, 171, 176, 211, 228], "feasibl": [82, 170], "leastsq": 82, "warningmsg": 82, "507": [82, 226], "unfeas": 82, "344": [82, 83, 219], "violat": [82, 88], "152": [73, 82, 83, 247, 248], "189": [82, 83, 104, 225], "288": [82, 83, 155, 172, 176, 200, 225], "309": [82, 83, 226], "319": [82, 83, 226], "363": [73, 82, 83, 226], "373": [82, 83, 84, 226], "384": [73, 82, 83, 84, 226, 247, 248], "102": [82, 83, 84, 114, 165, 224], "440": [82, 83, 226], "484": [82, 226], "112": [73, 82, 83, 102, 114, 135, 224], "512": [73, 82, 226], "523": [82, 226], "534": [85, 226], "555": [82, 227], "566": [82, 170, 172, 227], "596": [82, 221, 227], "110": [73, 82, 83, 224], "608": [82, 93, 219], "107": [73, 82, 83, 102, 114, 224], "619": [82, 217], "105": [82, 83, 114, 224], "641": [82, 146, 222], "837": [82, 85, 233], "868": [82, 84, 219], "878": [82, 219], "888": [82, 146, 219], "902": [82, 219], "928": [82, 222], "939": [73, 82, 219], "960": [82, 219], "972": [219, 224], "992": [82, 114, 219], "1005": [82, 219], "1017": [82, 219], "1028": [82, 219], "1048": [73, 82, 228], "1072": [82, 219], "117": [82, 83, 98, 99, 102, 114, 148, 156, 163, 165, 172, 176, 211, 224], "1099": [82, 222], "1122": [82, 170, 219], "1132": [82, 219], "1151": [82, 219], "1164": [82, 84], "1176": [82, 170, 219, 226], "1197": [82, 229], "1207": [82, 219], "1221": [82, 219], "1238": [73, 82, 219], "1251": [73, 82, 219], "1263": 219, "1284": [82, 220], "1295": [73, 222], "1319": [82, 220], "1332": [73, 82, 220], "119": [82, 83, 114, 166, 224, 232], "1345": [82, 220], "1357": [82, 220], "1368": [73, 82, 221], "1383": [82, 85, 221], "1404": [73, 82], "1418": [82, 221, 235], "118": [73, 82, 83, 135, 224], "1456": [82, 93, 221], "1487": [82, 84, 222], "153": [73, 82, 83, 84, 218, 233], "1503": [82, 221], "1517": [82, 222], "124": [73, 82, 83, 98, 99, 102, 114, 148, 156, 163, 165, 176, 211, 224], "1544": [82, 222], "1570": [82, 222], "1601": [82, 222], "1616": [82, 223], "1655": [73, 82, 222], "187": [82, 83], "1676": [82, 222], "141": [82, 83, 224], "1693": [82, 223], "1737": [73, 82, 223], "191": [82, 83, 111, 171, 225], "146": [73, 82, 83, 170, 224], "229": [82, 83, 225], "1917": [82, 228], "1941": [82, 228], "1971": [82, 84, 229], "1993": [82, 84, 165, 174, 229], "2030": [82, 229], "2120": [82, 230], "2153": [73, 82, 230], "196": [82, 83, 225], "2209": [82, 234], "186": [82, 83, 84, 116], "2232": [82, 231], "2254": [82, 231], "2330": 82, "2376": 82, "2395": 82, "2466": [73, 82, 234], "185": [82, 83, 114, 225], "2508": 82, "2547": 82, "2570": 82, "2629": [82, 235], "2653": [73, 82, 84], "2674": [82, 235], "195": [82, 83], "2733": [82, 84, 236], "2752": 82, "2791": [73, 82, 237], "2835": [82, 237], "2875": [82, 237], "2953": [82, 237], "2983": [82, 237], "174": [73, 82, 83, 225], "3032": 82, "3063": 82, "183": [73, 82, 83, 164, 225], "3088": 82, "3117": [], "213": [82, 83, 121, 225], "3143": [82, 84], "218": [73, 82, 83, 230], "3212": 84, "3278": 82, "3304": [82, 84], "3360": 82, "3391": [], "236": [82, 83, 85], "3424": 82, "3453": 82, "198": [82, 83], "3485": 82, "219": [82, 83, 84, 170, 176, 199, 225], "3511": 82, "3560": 82, "178": [82, 83, 225, 247, 248], "3581": 82, "3599": [82, 84], "3616": [82, 84], "3640": 82, "3658": 82, "3673": 82, "3688": 82, "3711": 82, "3727": 82, "130": [73, 82, 83, 93, 145, 224, 229, 237], "3742": [82, 84], "3756": 82, "3769": 82, "3792": 82, "147": [73, 82, 83], "3808": 82, "3822": 82, "3834": 82, "3846": [], "3873": 82, "3889": 82, "3904": [82, 84], "3917": [82, 84], "3933": 82, "3953": 82, "3968": 82, "3994": [82, 84], "4006": [82, 84], "4031": 82, "4047": [82, 84], "4084": [82, 84], "4105": 82, "4119": 82, "4132": 82, "4170": 82, "4227": 82, "4267": [82, 84], "115": [82, 83, 102, 114, 135, 220], "4280": [82, 84], "4324": 82, "4342": 82, "4354": 82, "4377": 82, "4388": [82, 84], "4398": 82, "4426": 82, "4438": 82, "4467": 82, "4477": 82, "4524": 82, "4536": 82, "4547": 82, "4558": 82, "4635": [82, 84], "4672": [82, 84], "4682": 82, "4692": 82, "4782": 82, "4802": [82, 84], "4813": [82, 84], "4823": 82, "4865": [82, 85], "4877": [82, 84], "4888": 82, "4898": 82, "4909": 82, "4921": [82, 84], "4975": 82, "4994": 82, "5004": 82, "5022": 82, "5032": 82, "5041": 82, "5050": 82, "5059": [82, 84], "5068": 82, "5077": 82, "5086": 82, "5095": [82, 84], "5105": 82, "5115": 82, "5124": 82, "5133": 82, "5142": [82, 84], "5152": 82, "5161": 82, "5170": 82, "5180": 82, "5190": 82, "model_param": [82, 170, 219], "arrang": [82, 165, 172, 174], "ivimparam": 82, "20x20": 82, "height": [82, 221], "estimated_param": 82, "97863107e": 82, "00000000e": [82, 106], "69393990e": 82, "71052513e": 82, "heatmap": [82, 89], "def": [82, 86, 97, 99, 102, 105, 111, 112, 113, 125, 130, 134, 137, 138, 141, 163, 164, 168, 170, 172, 226], "plot_map": 82, "raw_data": 82, "clim": 82, "s0_predict": [82, 170, 176, 177, 200], "predicted_s0": 82, "measured_s0": 82, "perfusion_fract": [82, 170, 176, 177, 200], "perfusion_coeff": 82, "diffusion_coeff": 82, "refin": [82, 96, 108, 163, 170, 171, 176, 177, 208], "varpro": [82, 170, 228, 229, 235], "mix": [82, 147, 158, 169, 170, 176, 180, 181, 220, 221, 223], "farooq16": 82, "convex": [82, 83, 96, 170], "basin": 82, "fadnavis19": 82, "ivimmodel_vp": 82, "ivimfit_vp": 82, "157": [82, 83], "133": [82, 83, 85, 95, 224], "134": [73, 82, 83, 158, 224, 231], "172": [73, 82, 83, 225], "176": [82, 83, 116, 135, 146, 225], "184": [82, 83, 229], "190": [82, 83, 225], "201": [82, 83, 134, 225], "204": [82, 83, 225, 247, 248], "206": [82, 83, 225, 247, 248], "207": [82, 83, 225], "212": [82, 83, 220, 225], "221": [82, 83, 170, 225], "222": [82, 83, 225], "223": [82, 83, 225], "233": [73, 82, 83, 104, 217, 226], "234": [82, 83, 146, 225], "235": [82, 83, 226, 227], "238": [82, 83, 88, 170, 228], "241": [82, 83, 84, 226], "242": [82, 83, 225, 235], "243": [82, 83, 225], "245": [82, 83, 225], "282": [82, 83, 226], "283": [82, 83, 228, 247, 248], "286": [82, 83, 217], "287": [73, 82, 83, 158, 217, 222], "289": [82, 83, 146, 158, 225, 228], "291": [82, 83], "292": [73, 82, 83, 172, 225], "294": [82, 83], "297": [73, 82, 83, 114, 247, 248], "302": [82, 83, 226], "303": [82, 83, 226], "305": [82, 83, 226], "306": [73, 82, 83, 226], "307": [82, 83, 84, 226], "308": [82, 83, 226, 247, 248], "311": [73, 82, 83, 226], "312": [82, 83, 226], "324": [82, 83, 226], "325": [73, 82, 83, 86, 231], "327": [82, 83, 226, 237], "330": [82, 83, 226], "331": [82, 83, 226], "334": [82, 83, 226], "336": [82, 83, 226], "337": [82, 83, 226], "338": [82, 83, 226], "339": [82, 83, 226], "340": [82, 83, 84, 226], "343": [73, 82, 83, 226], "350": [82, 83, 226], "353": [82, 83, 222], "354": [82, 83, 227], "355": [82, 83, 226], "357": [82, 83, 226], "358": [82, 83, 226], "360": [82, 83, 108, 109, 124, 226], "361": [82, 83, 223, 226], "364": [82, 83, 226], "365": [73, 82, 83, 125, 129, 234], "370": [82, 83, 226], "372": [82, 83, 226], "375": [83, 220], "378": [82, 83, 226], "382": [73, 82, 83, 226], "385": [82, 83, 226], "387": [82, 83, 85, 217, 222], "397": [82, 83, 226], "398": [82, 83, 226], "399": [82, 83, 226, 247, 248], "401": [82, 83, 226], "402": [82, 83, 226], "407": [82, 83, 226], "408": [82, 83, 226], "409": [82, 83, 226], "410": [82, 83, 226], "411": [82, 83, 84, 170, 226], "414": [82, 83, 227], "418": [82, 83, 226], "420": [82, 83, 226], "423": [82, 83, 233], "426": [82, 83, 84, 226], "443": [82, 83, 226], "467": [82, 83, 226], "468": [82, 83], "470": [82, 83, 226], "471": [82, 83, 226], "474": [73, 82, 83, 226], "477": [73, 82, 226], "478": [73, 82, 226], "479": [82, 226], "482": [82, 226], "483": [82, 84, 137, 226], "485": [82, 226], "487": [82, 226], "488": [82, 146, 226], "490": [73, 82, 226], "494": [82, 84, 226], "495": [82, 226], "496": [73, 82, 83, 146, 226, 236, 247, 248], "497": [82, 155, 166, 167, 170, 172, 176, 200, 226, 245], "498": [82, 146, 226], "499": [82, 226], "501": [82, 226], "502": [82, 226], "503": [82, 119, 226], "505": [82, 84, 155, 170, 176, 200, 226], "508": [82, 226], "510": [82, 166, 167, 170, 172, 226, 245], "513": [73, 82, 226], "516": [82, 84, 226], "518": [82, 219], "519": [82, 226], "520": [82, 226], "521": [82, 226], "526": [82, 226], "529": [82, 226], "530": [82, 226], "531": [73, 82, 94, 170, 176, 199, 226], "532": [73, 82, 227], "535": [82, 226], "536": [82, 226], "537": [82, 226], "538": [82, 84, 226], "540": [73, 82, 226], "541": [82, 94, 170, 176, 199, 226], "542": [82, 226], "543": [82, 226], "544": [82, 226], "546": 82, "547": 82, "548": 82, "550": [82, 227], "551": [73, 82, 227], "553": [82, 227], "557": [82, 227], "558": [82, 222], "561": [73, 82, 227], "567": [82, 227], "568": [82, 227], "569": [73, 82, 146, 227], "570": [82, 220], "572": [82, 217], "575": [82, 227], "576": [82, 217], "577": [82, 98, 227], "578": [82, 228], "579": [82, 227], "581": [82, 227], "582": [82, 84, 217], "583": [82, 228], "585": [82, 227], "589": [82, 227], "591": [82, 219], "592": [82, 228], "594": [82, 217, 227], "595": [82, 227], "598": [82, 227], "602": [82, 227], "604": [82, 84, 217], "605": [82, 217], "606": [73, 82, 84, 217], "609": [82, 217], "610": [82, 217], "611": [82, 217], "612": [82, 94, 217], "613": [82, 85, 217], "615": [82, 84, 217, 247, 248], "618": [82, 217], "620": [73, 82, 228], "622": [82, 128, 129, 217], "625": [73, 82, 217], "631": [82, 218], "633": [82, 129, 130, 217], "637": [82, 84, 85, 217], "639": [82, 217], "640": [82, 217], "645": [73, 82, 85, 221, 222], "646": [82, 222], "648": [82, 84, 217], "652": [82, 85, 217], "654": [82, 85, 217], "655": [82, 217], "659": [82, 84, 217], "661": [82, 85, 217], "663": [73, 82, 217], "670": [82, 83, 84, 170, 219], "673": [85, 219], "682": [82, 85, 217], "814": [82, 218, 225], "816": [82, 218], "817": [82, 85, 218], "827": [73, 82, 89, 219], "838": [82, 218], "844": [82, 228], "846": [73, 82, 84, 218], "847": [82, 218], "855": [82, 85, 218], "856": [82, 218], "860": [82, 218], "864": [73, 82, 219], "867": [82, 219], "869": [73, 82, 219], "870": [82, 219], "871": [82, 219], "872": [82, 219], "874": [82, 170, 219], "876": [42, 43, 73, 82, 219], "879": [73, 82, 84, 219], "882": [73, 82, 219], "884": [82, 219], "886": [82, 129, 218], "887": [82, 219], "890": [82, 84, 218], "891": [82, 107, 218, 219], "892": [82, 218], "893": [82, 218], "895": [82, 218], "896": [82, 218, 219], "897": [82, 219], "901": [73, 82, 84, 219], "903": 82, "904": [82, 218], "905": [49, 61, 82, 218], "906": [82, 218], "907": [82, 219], "908": [82, 218], "910": [82, 172, 218], "911": [82, 218], "912": [82, 84, 219], "915": [82, 93, 218], "919": [82, 218], "921": [82, 218], "922": [82, 218], "924": [82, 219], "926": 219, "927": [82, 219], "929": [82, 219], "930": [82, 109, 170, 219], "931": [82, 219], "933": [82, 218, 219], "936": [73, 82, 170, 235], "938": [82, 219], "940": [82, 219], "941": [82, 219], "942": [82, 219], "944": [82, 222], "945": [82, 84, 219], "946": [73, 82, 170, 219], "947": [82, 219], "948": [82, 87, 88, 219], "949": [82, 219], "954": [73, 82, 219], "955": [82, 219], "956": [82, 84, 219, 226], "957": [73, 82, 219], "958": [82, 219], "962": [73, 82, 219], "963": [82, 219], "964": [82, 219], "966": [82, 219], "967": [82, 84, 219], "969": 82, "971": [82, 219], "974": [73, 82, 219], "975": [73, 82, 219], "976": [82, 219], "977": [82, 219], "978": [82, 84, 172, 219], "979": [82, 219], "980": [82, 99, 219], "981": [82, 219], "983": [82, 219], "984": [82, 219], "986": 219, "987": [82, 221], "990": [82, 219], "991": [85, 219], "994": [82, 219], "996": [82, 219], "997": [82, 219], "998": [82, 219], "999": [82, 170, 219], "1001": [82, 219], "1003": [82, 219], "1004": [82, 219], "1007": [82, 219], "1008": [82, 219], "1009": [82, 219], "1010": [82, 219], "1011": [82, 84, 219], "1012": [73, 82, 219], "1014": [73, 82, 219], "1015": [82, 219], "1018": [82, 219], "1020": 219, "1023": [82, 219], "1025": [82, 219], "1026": 82, "1027": [82, 219], "1030": [73, 82, 134, 219], "1031": [82, 219], "1032": [73, 82, 219], "1034": [82, 219], "1037": [82, 219], "1039": [82, 219], "1040": [82, 219], "1041": [82, 219], "1043": [82, 219], "1044": [82, 84, 220], "1045": [82, 219], "1046": [82, 219], "1047": [82, 230], "1051": [82, 219], "1052": [82, 219], "1054": [82, 84, 219], "1055": [82, 219], "1056": [82, 219], "1057": [82, 219], "1060": [82, 219], "1061": [82, 219], "1062": [82, 219], "1065": [82, 163, 219], "1066": [82, 219], "1068": [73, 93, 219], "1069": [82, 219], "1071": [82, 219], "1073": 236, "1074": [82, 84], "1075": [82, 219], "1078": [82, 219], "1079": [82, 219], "1081": [82, 219], "1083": [82, 219], "1084": [82, 84, 220], "1085": [82, 219], "1087": [73, 82, 219], "1089": [82, 219], "1090": [82, 170, 219], "1091": [82, 219], "1092": [82, 219], "1093": [82, 222], "1095": [82, 170, 176, 199], "1096": [82, 228], "1097": 219, "1098": [82, 219], "1100": [82, 219], "1101": [82, 219], "1102": [82, 219], "1106": [73, 82, 219], "1107": [82, 219], "1108": [82, 222], "1110": [82, 219], "1112": [82, 219], "1113": [82, 219], "1114": [82, 84, 219], "1115": [82, 170, 219], "1116": [82, 219], "1117": [82, 221], "1118": [82, 163, 219], "1119": [82, 219], "1120": [82, 219], "1121": [82, 219], "1124": [82, 84, 219], "1125": [73, 82, 219], "1126": [82, 228], "1127": [82, 219], "1129": [82, 219], "1130": [82, 219], "1134": [82, 84, 219], "1135": [82, 222], "1136": [82, 219], "1137": [82, 219], "1139": [82, 219], "1141": [82, 219], "1142": [82, 219], "1143": [82, 219], "1144": [73, 82, 84], "1146": [82, 220], "1148": [82, 219], "1149": [82, 219], "1150": [82, 221], "1152": [82, 230], "1153": [82, 219], "1155": [82, 85, 219], "1156": [82, 222], "1159": [73, 219], "1160": [82, 219], "1161": [82, 221], "1165": [82, 89, 221], "1166": [82, 219], "1167": 220, "1168": [82, 228], "1169": [82, 220], "1170": [82, 219], "1171": [82, 219], "1172": 82, "1173": [82, 219], "1175": 82, "1178": [73, 82], "1179": [82, 219], "1181": [82, 221], "1182": [73, 82, 219], "1183": [82, 219], "1184": [82, 84, 221], "1185": [82, 170, 219], "1186": [82, 219], "1188": [82, 219], "1189": [73, 82, 219], "1190": [82, 219], "1192": [82, 228], "1193": [82, 219], "1194": [82, 84, 170, 219], "1195": [82, 219], "1196": [73, 82, 93, 219], "1199": [82, 219], "1201": [73, 82, 219], "1203": [82, 222], "1204": [82, 84, 219], "1205": [82, 219], "1206": [82, 219], "1210": [82, 219], "1212": [82, 219], "1213": [82, 219], "1214": [73, 82, 84, 219], "1216": [82, 219], "1217": [82, 219], "1218": [82, 219], "1219": [73, 82, 219], "1222": [82, 219], "1223": [82, 219], "1224": [82, 84], "1226": [82, 219], "1227": [82, 219], "1231": [73, 82, 219, 247, 248], "1235": [82, 84, 219], "1236": [82, 222], "1237": 228, "1239": [82, 220], "1240": [82, 228], "1241": [82, 219], "1243": [82, 219], "1244": [82, 219], "1245": [82, 84, 228], "1246": [82, 219], "1248": [82, 220], "1250": [82, 219], "1252": [82, 219], "1253": [82, 219], "1255": [82, 219], "1256": [73, 82, 84, 237], "1257": [82, 146, 219], "1258": [82, 219], "1260": [82, 219], "1261": [82, 219], "1262": [82, 220], "1264": [82, 231], "1265": [73, 82, 219], "1266": [82, 231], "1269": [82, 219], "1271": [82, 219], "1272": [82, 219], "1273": [82, 219], "1275": 82, "1278": [82, 84, 220], "1280": [82, 223], "1281": [82, 222], "1283": [82, 222], "1287": [82, 220], "1288": [73, 82, 220], "1289": [82, 84, 220], "1291": 221, "1292": [82, 220], "1294": [82, 221], "1296": [82, 222], "1297": [82, 220], "1298": [82, 220], "1299": [82, 221], "1300": [82, 84, 221], "1302": [82, 233], "1304": [82, 220], "1306": [82, 220], "1307": [73, 82, 220], "1308": [82, 85, 93, 220], "1309": [82, 220], "1311": [82, 84, 233], "1313": [73, 82, 220], "1314": [82, 220], "1315": [82, 220], "1316": [82, 220], "1317": [82, 220], "1318": [82, 220], "1320": [82, 228], "1322": [82, 84, 221], "1323": [82, 220], "1324": [82, 220], "1325": [73, 82, 220], "1326": [82, 221], "1328": [82, 220], "1329": [82, 220], "1330": [82, 220], "1331": [73, 82, 221], "1334": [82, 220], "1335": [82, 220], "1336": [82, 164, 220], "1337": [82, 220], "1339": [82, 221], "1340": [82, 221], "1342": [73, 82, 221], "1343": [82, 221], "1346": [82, 220], "1347": [82, 221], "1348": [82, 220], "1349": [73, 82, 164, 220], "1350": [82, 221], "1352": [82, 220], "1354": [82, 231], "1356": [82, 220], "1359": [73, 82, 220], "1360": [82, 220], "1362": [82, 221], "1363": [82, 230], "1364": [82, 89, 230], "1366": [82, 84, 220], "1367": [82, 220], "1369": [82, 221], "1370": [93, 221], "1374": [82, 221], "1376": [82, 221], "1377": [82, 84, 221], "1379": [82, 221], "1380": [82, 221], "1381": [82, 221], "1382": [82, 221], "1384": [82, 221], "1386": [73, 82, 221], "1387": [82, 93, 221], "1390": [82, 221], "1391": [82, 221], "1392": [82, 221], "1393": [82, 221], "1394": [82, 221], "1396": [82, 222], "1397": [73, 82, 222], "1398": [82, 221], "1399": [82, 84, 221], "1400": [82, 146, 221, 247, 248], "1402": [82, 221], "1405": [82, 221], "1407": [82, 84, 221], "1408": [82, 221], "1409": [82, 221], "1410": [82, 84, 221], "1411": [82, 221], "1413": [82, 221], "1414": [73, 82, 222], "1415": [73, 82, 221], "1416": [82, 221], "1419": [82, 221], "1420": [82, 222], "1421": [82, 84, 221], "1422": [73, 82, 221], "1424": [82, 93, 221], "1425": [82, 221], "1426": [82, 221], "1427": [82, 221], "1429": [82, 221], "1430": [82, 221], "1433": [73, 222], "1434": [82, 221], "1435": [82, 221], "1436": [82, 221], "1437": [82, 221], "1438": [82, 221], "1439": [82, 221], "1442": [73, 82, 229], "1443": [82, 84, 221], "1446": [82, 221], "1448": [82, 221], "1449": [82, 221], "1450": [82, 221], "1451": [73, 82, 221], "1452": [82, 221], "1453": [82, 221], "1454": [82, 84, 221], "1455": [82, 221], "1457": [82, 85, 221], "1460": [73, 82, 221], "1461": [82, 221], "1464": [82, 221], "1465": [82, 84, 221], "1466": [82, 221], "1467": [82, 221], "1468": [82, 221], "1469": [82, 221], "1470": [73, 82, 221], "1475": [82, 221], "1477": [82, 221], "1478": [82, 221], "1481": [82, 93, 221], "1482": [82, 221], "1483": [82, 221], "1484": [82, 221], "1485": [82, 221], "1488": [73, 82, 93, 221], "1489": [82, 231], "1490": [82, 221], "1491": [82, 219, 221], "1492": [82, 222], "1493": [82, 221], "1495": [82, 221], "1497": [82, 221], "1498": [73, 82, 84, 221], "1499": [73, 82, 228], "1501": 82, "1504": [82, 221], "1505": [73, 82], "1506": [82, 222], "1507": [82, 222], "1509": [82, 84, 222], "1510": [82, 222], "1511": [82, 222], "1514": [82, 222], "1515": [82, 93, 222], "1516": [73, 82, 222], "1518": [82, 222], "1519": [82, 222], "1520": [82, 84, 93, 222], "1521": [82, 222], "1522": [82, 93, 222], "1523": [82, 222], "1524": [82, 222], "1525": [73, 82], "1526": [82, 222], "1527": [82, 222], "1529": [82, 222], "1533": [82, 222], "1534": [82, 222], "1536": [73, 82, 222], "1537": [82, 222], "1538": [82, 222, 247, 248], "1539": [82, 222], "1541": [82, 222], "1542": [73, 82, 84, 222], "1545": [82, 222], "1546": [82, 222], "1549": [82, 222], "1550": [82, 222], "1551": [82, 222], "1552": [82, 230], "1553": [82, 84], "1554": [73, 82, 222], "1555": [82, 222], "1556": [82, 222], "1557": [82, 222], "1559": [82, 222], "1560": [82, 222], "1561": [73, 82, 222], "1562": [82, 222], "1563": [82, 222], "1566": [82, 222], "1567": [82, 222], "1568": [82, 222], "1569": [82, 222], "1571": [82, 222], "1572": [82, 222], "1573": [73, 82, 222], "1575": [82, 84, 222], "1577": [82, 222], "1578": [73, 82, 222], "1579": [82, 222], "1580": [82, 222], "1585": [82, 222], "1587": [82, 228], "1588": [82, 222], "1589": [82, 222], "1590": [82, 222], "1592": [73, 82, 222], "1593": 222, "1594": [82, 222], "1595": [82, 222], "1596": [82, 222], "1599": 82, "1602": [82, 222], "1603": [82, 85, 228], "1604": [82, 223, 234], "1605": [82, 223], "1606": [82, 228], "1607": [82, 222], "1608": [82, 84, 222], "1612": 82, "1613": 82, "1617": 82, "1618": [82, 222], "1619": [82, 84, 222], "1620": [82, 222], "1621": [73, 82, 222], "1623": [82, 222], "1624": [82, 222], "1625": 82, "1627": [82, 237], "1628": [82, 170, 222], "1629": [73, 82, 222], "1630": [82, 84, 228], "1631": [82, 222], "1633": [82, 223], "1634": [82, 229], "1635": [82, 233], "1636": [82, 222], "1637": [73, 82, 222], "1638": [82, 222], "1639": 82, "1640": [82, 223], "1641": [82, 84, 222], "1645": 222, "1647": [73, 82, 222], "1648": [82, 233], "1649": [82, 222], "1651": 222, "1652": [82, 84, 223], "1654": [82, 222], "1656": [82, 222], "1657": [82, 222], "1658": [82, 222], "1661": [82, 223], "1662": [82, 222], "1663": [82, 84, 222], "1664": [82, 223], "1665": 82, "1666": [73, 82, 223], "1668": [82, 222], "1670": [82, 222], "1672": [82, 93, 233], "1673": [82, 222], "1674": [73, 82, 84, 222], "1675": [82, 233], "1678": [82, 222], "1679": [82, 222], "1680": [82, 85, 222], "1682": [82, 222], "1683": [82, 222], "1685": [82, 84, 222], "1686": [82, 222], "1687": 82, "1688": 82, "1689": 82, "1690": [82, 223], "1695": [82, 223], "1696": [82, 84, 223], "1697": [82, 223], "1702": [82, 223], "1703": [82, 223], "1704": [82, 223], "1705": [82, 223], "1706": [82, 223], "1707": [82, 84, 223], "1708": [82, 223], "1709": 82, "1710": [73, 82, 223], "1712": [82, 228], "1713": [82, 228], "1715": 223, "1716": [82, 223], "1717": [82, 223], "1719": [73, 82, 223], "1720": [82, 223], "1721": [82, 228], "1722": [82, 228], "1723": [82, 223], "1729": [82, 84, 223], "1730": [82, 223], "1731": [82, 228], "1732": [82, 223], "1733": [82, 223], "1736": 82, "1738": [82, 223], "1739": [82, 223], "1740": [82, 84, 223], "1741": [82, 223], "1742": [82, 223], "1743": [73, 82, 223], "1744": [82, 231], "1746": [82, 223], "1747": [73, 82, 228], "1748": [82, 223], "1749": [82, 223], "1750": 82, "1751": [82, 84, 223], "1753": [82, 85, 223], "1755": [82, 223], "1756": [73, 82, 228], "1757": [82, 223], "1759": [82, 228], "1763": [82, 228], "1765": [73, 82, 230], "1766": [82, 170, 228], "1767": [82, 228], "1768": [82, 228], "1770": [82, 228], "1771": [82, 228], "1772": [82, 228], "1774": [82, 228], "1775": [73, 82, 170, 228], "1776": 82, "1777": [82, 229], "1778": [82, 236], "1782": [73, 82, 228], "1784": [82, 84, 228], "1785": [82, 230], "1787": [82, 228], "1788": [82, 228], "1789": [82, 228], "1790": [82, 228], "1791": [82, 229], "1792": [82, 228], "1793": [73, 82, 230], "1794": [82, 228], "1795": [82, 84, 228], "1797": [82, 228], "1798": [82, 228], "1799": [82, 228], "1801": [82, 228], "1804": [82, 228], "1807": [82, 228], "1809": [82, 228], "1810": [82, 228], "1811": [82, 228], "1812": [73, 82, 228], "1813": [82, 228], "1815": [82, 228], "1816": [73, 82, 228], "1817": [82, 84, 228], "1818": [82, 228], "1819": [73, 82, 228], "1821": [82, 228], "1822": [82, 228], "1823": [82, 228], "1824": [82, 228], "1825": [82, 228], "1826": 82, "1827": [82, 85, 228], "1828": [73, 82, 84, 228], "1829": [82, 228], "1830": [82, 228], "1833": [82, 93, 228], "1834": [82, 228], "1835": [82, 228], "1836": [82, 228], "1838": 82, "1839": [82, 84, 228], "1840": [82, 229], "1841": [82, 229], "1842": [82, 228], "1844": [82, 228], "1845": [82, 228], "1847": [82, 233], "1851": [82, 228], "1853": 82, "1855": [82, 228], "1856": [73, 82, 228], "1857": [82, 228], "1859": [82, 229], "1860": [82, 228], "1861": [82, 84, 230], "1862": [82, 229], "1864": [82, 230], "1866": [82, 228], "1868": 82, "1869": [73, 82, 228], "1870": [82, 229], "1872": [82, 84, 233], "1873": [82, 233], "1874": [73, 82, 228], "1875": [82, 228], "1876": [82, 228], "1877": [82, 228], "1878": [82, 228], "1879": [82, 228], "1880": [82, 228], "1883": [82, 84, 237], "1884": [82, 228], "1886": 82, "1887": [73, 82, 228], "1889": [82, 228], "1890": [82, 228], "1893": [82, 228], "1894": [73, 82, 84, 228], "1895": [82, 233], "1896": [82, 228], "1898": [82, 228], "1901": [82, 228], "1902": [73, 82, 228], "1903": [82, 228], "1904": [82, 228], "1906": [82, 228], "1907": [82, 228], "1908": [82, 228], "1909": [82, 228], "1912": [82, 228], "1913": [73, 82, 228], "1914": [82, 228], "1915": [82, 228], "1918": [82, 228], "1921": 82, "1923": [73, 82, 228], "1925": [82, 228], "1927": [82, 84, 228], "1928": [82, 228], "1929": [82, 229], "1931": [73, 82, 228], "1934": [82, 234], "1935": [82, 228], "1936": 82, "1944": [82, 228], "1945": 82, "1946": [82, 228], "1947": [82, 228], "1948": [82, 229], "1949": [73, 82, 84, 229], "1950": [82, 229], "1952": [82, 229], "1953": [82, 229], "1954": [82, 229], "1955": [82, 229], "1957": 82, "1958": [82, 229], "1960": [82, 84, 229], "1961": [73, 82, 229], "1964": [82, 229], "1965": [82, 155, 172, 174, 176, 200, 229], "1967": 229, "1968": [82, 229], "1970": [82, 229], "1972": [82, 89, 229], "1974": 82, "1975": [82, 229], "1976": [82, 229], "1977": [82, 85, 229], "1978": [82, 83, 170, 229], "1979": [73, 82, 229], "1980": [82, 229], "1981": [82, 229], "1982": [82, 84, 164, 229], "1983": [73, 82, 229], "1985": 82, "1988": [82, 155, 164, 170, 176, 200, 229, 241], "1991": 82, "1995": [82, 172, 229], "1996": [82, 170, 176, 199, 230, 233], "1997": [82, 89, 170, 222, 229], "1998": [82, 229], "2002": [82, 170, 174, 229], "2026": [82, 84], "2027": 82, "2028": [82, 230], "2029": [82, 229], "2031": 82, "2034": [82, 230], "2035": [82, 230], "2037": [73, 82, 84, 230], "2039": [82, 230], "2040": [82, 230], "2043": [82, 230], "2044": [82, 230], "2045": [82, 230], "2046": [82, 231], "2048": [82, 84, 230], "2049": [82, 230], "2050": 82, "2051": [82, 230], "2052": [82, 230], "2053": [82, 230], "2054": [82, 231], "2056": [82, 230], "2057": [82, 230], "2058": [82, 85, 230], "2060": [73, 82, 230], "2061": [82, 230], "2063": [82, 230], "2064": 82, "2065": [82, 230], "2066": [82, 230], "2067": [82, 230], "2069": [82, 230], "2071": [82, 230], "2073": [73, 82, 230], "2074": [82, 230], "2075": [82, 230], "2077": [82, 230], "2078": [82, 230], "2079": [82, 230], "2080": [73, 82, 230], "2081": [82, 84, 230], "2082": [82, 230], "2083": [82, 230], "2084": [82, 230], "2085": [82, 230], "2086": [82, 230], "2087": [82, 92], "2088": [82, 230], "2090": [82, 230], "2091": [82, 230], "2092": [73, 82, 84], "2094": [82, 230], "2096": [82, 230], "2097": 230, "2099": [82, 230], "2101": [82, 230], "2102": [82, 230], "2103": [82, 84, 230], "2104": [82, 230], "2109": [82, 231], "2111": [73, 82, 230], "2113": [82, 230], "2114": [82, 84, 230], "2115": [82, 231], "2116": [73, 82, 230], "2117": [82, 231], "2118": [82, 230], "2119": [82, 231], "2121": [82, 230], "2123": [82, 234], "2125": [82, 84, 230], "2126": [82, 230], "2128": [82, 230], "2129": [82, 230], "2130": [73, 82, 230], "2131": [82, 230], "2132": [82, 231], "2133": [82, 230], "2134": [82, 230], "2135": [73, 82, 230], "2136": [82, 84, 230], "2137": 82, "2138": [82, 93, 230], "2139": [82, 85, 230], "2140": [82, 230], "2142": [82, 230], "2143": 82, "2145": [82, 230], "2146": [82, 230], "2147": [82, 84, 230], "2148": [73, 82, 230], "2149": [82, 230], "2151": [82, 230], "2152": [82, 230], "2155": [82, 230], "2156": [82, 230], "2157": [82, 230], "2158": [82, 84, 230], "2160": [73, 82, 230], "2162": [82, 230], "2163": [82, 230], "2164": 82, "2165": 82, "2167": [73, 82], "2168": [82, 84, 230], "2169": [82, 230], "2171": [73, 82, 230], "2172": [82, 230], "2173": [82, 230], "2174": [82, 230], "2175": [82, 230], "2179": [82, 84, 234], "2180": [73, 82, 231], "2181": [82, 231], "2182": [82, 230], "2183": [82, 230], "2185": [82, 231], "2187": 82, "2188": 230, "2189": 82, "2190": [73, 82, 84, 92, 230, 231], "2191": [82, 230], "2192": [82, 231], "2194": [82, 230], "2196": [82, 230], "2197": [82, 231], "2198": [82, 231], "2201": [82, 84, 231], "2202": [82, 231], "2205": [82, 230], "2206": [82, 231], "2207": [82, 230], "2211": [82, 231], "2213": 82, "2214": [82, 231], "2215": [82, 231], "2217": [82, 231], "2218": [82, 231], "2219": [82, 231], "2220": [82, 85, 231], "2221": [82, 231], "2222": [82, 170, 231], "2223": [73, 82, 84, 231], "2224": [82, 231], "2225": [82, 231], "2226": [73, 82, 231], "2227": [82, 231], "2230": [82, 231], "2233": [82, 170, 231], "2234": [82, 84, 231], "2236": [82, 92, 231], "2237": 231, "2238": [82, 231], "2239": [82, 231], "2240": [82, 231], "2241": [73, 82, 231], "2242": [82, 231], "2243": [82, 231], "2244": [73, 82, 231], "2245": [82, 84, 92, 231], "2248": [82, 231], "2249": [82, 231], "2250": [82, 231], "2251": [82, 231], "2253": [82, 231], "2255": [82, 84, 231], "2256": [82, 231], "2257": [82, 231], "2259": [73, 82, 231], "2260": 231, "2262": [82, 231], "2265": [82, 231], "2266": [82, 231], "2267": [82, 231], "2268": [82, 231], "2269": 82, "2270": 82, "2271": [85, 231], "2272": [82, 231], "2274": [82, 84, 233], "2275": [82, 232], "2276": [73, 82], "2277": [82, 232], "2278": [82, 232], "2279": [82, 232], "2281": 82, "2284": [82, 232], "2287": [82, 232], "2289": [82, 232], "2290": [82, 93], "2291": [82, 232], "2292": [82, 232], "2293": 82, "2294": [82, 232], "2295": [73, 82, 84, 232], "2296": [82, 232], "2297": 82, "2299": 82, "2301": [82, 85], "2302": 82, "2303": [82, 232], "2304": 82, "2307": [82, 232], "2308": 82, "2310": [82, 234], "2311": [82, 233], "2312": [82, 234], "2313": [82, 235], "2316": [82, 84, 233], "2319": 82, "2320": [82, 233], "2321": 82, "2322": 82, "2324": [73, 82, 233], "2325": 82, "2326": 82, "2327": [82, 84, 235], "2328": [82, 232], "2329": 82, "2331": [73, 82, 233], "2333": [82, 233], "2334": [82, 233], "2336": [73, 82], "2337": [82, 84, 233], "2339": [82, 233], "2343": [82, 233], "2344": [82, 233], "2345": [82, 233], "2346": [82, 84, 233], "2347": [82, 233], "2350": [82, 233], "2353": [82, 84, 233], "2354": [73, 82], "2355": 82, "2356": 82, "2358": 82, "2359": 82, "2361": 82, "2362": 82, "2363": 233, "2365": [82, 233], "2371": [82, 233], "2372": [82, 85, 233], "2373": [73, 82, 233], "2374": [82, 234], "2375": [82, 233], "2377": [82, 233], "2378": 82, "2379": 82, "2380": [82, 84, 85, 233], "2382": [82, 233], "2384": [73, 82, 233], "2385": [82, 233], "2387": [82, 233], "2388": 82, "2389": [82, 234], "2390": [82, 84, 234], "2392": [73, 82, 234], "2396": 82, "2399": [], "2401": 82, "2402": [73, 82, 234], "2404": [82, 234], "2406": [82, 234], "2407": [82, 234], "2408": 82, "2409": [73, 82, 234], "2410": [73, 82, 234], "2411": [82, 84, 234], "2412": 82, "2414": [82, 236], "2415": [73, 82, 234], "2416": [82, 234], "2418": [82, 234], "2419": [82, 234], "2421": [73, 82], "2422": [82, 84, 234], "2423": [82, 234], "2424": [82, 235], "2425": [], "2427": 82, "2429": [82, 234], "2430": [73, 82, 234], "2432": [82, 84, 234], "2433": 82, "2434": [82, 234], "2438": [73, 82, 234], "2439": 82, "2440": 82, "2441": [82, 84, 234], "2442": [82, 234], "2443": [82, 234], "2444": [82, 234], "2445": 82, "2447": [82, 234], "2449": [82, 234], "2450": [82, 235], "2451": 82, "2453": [82, 234], "2455": 82, "2456": [73, 82, 234], "2457": [82, 234], "2458": 82, "2459": [82, 84], "2460": [82, 234], "2461": [82, 234], "2462": [82, 247, 248], "2464": [82, 234], "2465": 82, "2467": [82, 234], "2468": [82, 234], "2470": [82, 234], "2472": [82, 234], "2473": 82, "2474": 82, "2475": [82, 234], "2476": [73, 234], "2478": [82, 234], "2479": [82, 84, 234], "2481": [82, 234], "2483": [82, 234], "2484": [82, 234], "2485": [73, 82, 234], "2489": [82, 84, 234], "2490": [73, 82, 234], "2491": [82, 237], "2492": [82, 234], "2494": 82, "2495": [73, 82, 234], "2496": 82, "2497": [73, 82, 234], "2498": 82, "2499": [82, 84, 234], "2501": 82, "2502": [82, 234], "2503": [73, 82], "2506": [82, 234], "2507": [82, 234], "2509": [82, 84, 234], "2510": [82, 234], "2512": [82, 234], "2513": [82, 234], "2514": [73, 82, 237], "2515": [82, 234], "2516": 82, "2517": 82, "2518": [82, 234], "2519": [82, 84], "2520": [82, 234], "2525": [82, 234], "2528": [82, 84, 234], "2529": [82, 234], "2530": [82, 236], "2531": 235, "2534": [73, 82, 234], "2535": 82, "2536": [82, 234], "2537": [82, 84, 236], "2540": [73, 82, 236], "2541": [82, 234], "2543": [82, 85, 234], "2544": [82, 84], "2545": [82, 234], "2546": [82, 234], "2548": [82, 234], "2549": [82, 84, 234], "2550": [82, 234], "2551": [82, 234], "2552": 82, "2553": [73, 82, 235], "2554": [82, 84, 234], "2557": 234, "2558": [82, 234], "2559": [73, 82, 84, 235], "2561": [82, 234], "2562": 82, "2563": [73, 82], "2564": [82, 84, 235], "2565": [82, 235], "2569": 82, "2571": 82, "2575": [82, 84, 236], "2576": [82, 235], "2577": [82, 235], "2578": [73, 82], "2580": [82, 235], "2581": [82, 235], "2582": 82, "2584": [73, 82, 235], "2585": 82, "2586": [82, 84], "2587": [82, 235], "2588": 82, "2590": [73, 82, 236], "2592": [82, 235], "2593": 82, "2594": [82, 235], "2596": [73, 82, 236], "2597": [82, 84], "2598": 82, "2599": [82, 236], "2600": [82, 146, 235, 247, 248], "2604": 82, "2606": [82, 235], "2609": 236, "2611": 82, "2613": 82, "2614": 82, "2615": [73, 82], "2616": [82, 235], "2618": [82, 84, 235], "2619": 82, "2620": [82, 85], "2621": 82, "2622": [82, 164, 235], "2624": 82, "2626": [82, 236], "2627": [82, 84, 235], "2628": [82, 236], "2630": [82, 235], "2631": [82, 235], "2632": 82, "2635": [82, 163, 235], "2636": 82, "2637": [], "2638": 82, "2639": 82, "2641": 82, "2644": 82, "2645": [73, 82, 84], "2646": 82, "2648": [82, 236, 237], "2649": [82, 84, 235], "2650": 82, "2652": [73, 82], "2654": 82, "2656": [82, 84], "2657": 82, "2658": [82, 235], "2661": 82, "2664": [82, 235], "2665": 82, "2666": 82, "2667": [82, 235], "2668": [82, 235], "2669": [82, 235], "2670": [73, 82, 235], "2671": [82, 84], "2672": [82, 235], "2673": [82, 235], "2675": 82, "2681": [82, 84], "2682": [], "2683": [82, 235], "2684": 82, "2685": 82, "2687": [82, 235], "2688": [73, 82, 235], "2689": [82, 237], "2690": [82, 235], "2691": [82, 84], "2692": [82, 235], "2695": 82, "2696": [82, 235], "2697": [82, 85, 235], "2698": 82, "2699": [73, 82, 235], "2700": [82, 235], "2701": [82, 84, 235], "2702": 235, "2703": [82, 237], "2704": [82, 235], "2705": 82, "2706": [73, 82, 237], "2708": [82, 235], "2709": [82, 235], "2712": [82, 84], "2713": [82, 236], "2714": 82, "2715": [82, 237], "2716": [82, 236], "2717": [82, 236], "2719": 82, "2721": [82, 84], "2723": [82, 236], "2724": 82, "2725": [73, 82, 236], "2726": [82, 236], "2730": [82, 237], "2731": 82, "2732": 82, "2734": [73, 82], "2736": [73, 82, 237], "2737": 82, "2738": [82, 84], "2739": [82, 236], "2740": [82, 236], "2741": [82, 236], "2742": [82, 84, 236], "2743": [73, 82], "2744": [82, 236], "2746": [82, 237], "2747": [73, 82, 237], "2749": [82, 236], "2750": [82, 236], "2751": [82, 84, 236], "2753": [82, 236], "2756": [82, 236], "2757": [82, 84], "2759": [82, 237], "2760": 82, "2761": [82, 237], "2764": [], "2765": [82, 236], "2766": 82, "2767": [82, 84, 236], "2769": [82, 237, 247, 248], "2770": [82, 236], "2771": [82, 237], "2772": [73, 82], "2773": [82, 236], "2774": [82, 85, 237], "2775": [82, 236], "2776": 82, "2777": [82, 84, 237], "2778": [82, 236], "2781": [82, 237], "2783": [82, 236], "2784": 82, "2785": [82, 236], "2786": [82, 237], "2787": [82, 237], "2789": [82, 89, 170], "2790": [82, 237], "2793": 82, "2794": [82, 237], "2795": [82, 237], "2797": [82, 237], "2799": [73, 82], "2800": [82, 146, 237, 247, 248], "2801": [82, 237], "2802": 82, "2803": [82, 237], "2804": [82, 237], "2806": [82, 237], "2807": [82, 84], "2808": [82, 237], "2809": 82, "2810": [73, 82], "2812": [82, 237], "2814": [82, 237], "2816": [82, 84, 237], "2817": [73, 82], "2818": [82, 237], "2821": [82, 237], "2823": [82, 84, 237], "2824": 82, "2825": [82, 237], "2826": 82, "2829": [73, 82, 237], "2831": [82, 237], "2833": [82, 84, 237], "2834": 82, "2836": [73, 82, 237], "2838": [82, 237], "2839": [82, 237], "2841": [82, 237], "2842": 82, "2843": [82, 84, 237], "2844": [82, 237], "2846": [82, 84, 237], "2850": [82, 84], "2852": 82, "2853": [82, 84], "2854": [73, 82], "2855": [82, 84], "2856": [82, 237], "2858": [82, 237], "2859": 82, "2860": [82, 237], "2863": [82, 237], "2865": [73, 82, 84, 237], "2867": [82, 237], "2868": [82, 237], "2869": 82, "2870": [82, 237], "2871": [82, 237], "2872": [73, 82, 237], "2873": 237, "2874": 82, "2876": [82, 84, 237], "2878": [82, 237], "2879": [82, 237], "2880": 82, "2881": [82, 237], "2884": [82, 237], "2885": [82, 237], "2886": 82, "2887": [82, 84, 237], "2888": [82, 237], "2889": [82, 237], "2890": [73, 82, 237], "2891": [82, 237], "2892": [82, 237], "2893": [82, 237], "2894": [82, 237], "2895": 82, "2896": [82, 237], "2897": [82, 84, 237], "2898": [82, 237], "2901": [82, 237], "2902": [73, 82, 237], "2904": [82, 237], "2906": [82, 84, 237], "2908": [82, 237], "2909": [73, 82], "2910": [82, 237], "2911": 82, "2912": [82, 237], "2913": [82, 84, 237], "2914": [82, 237], "2915": [82, 237], "2919": [82, 237], "2921": [82, 237], "2924": [82, 237], "2925": [82, 237], "2926": [82, 84, 237], "2927": [73, 82, 237], "2928": [82, 237], "2930": [82, 237], "2931": [82, 237], "2932": [82, 84, 85, 237], "2935": [82, 84], "2937": 82, "2939": [82, 237], "2940": [82, 237], "2941": [82, 84, 237], "2942": [82, 237], "2943": [82, 84, 237], "2944": [82, 237], "2945": [73, 82, 84, 237], "2947": [82, 84, 237], "2948": 82, "2949": [82, 237], "2952": [82, 84, 237], "2954": [82, 237], "2955": [73, 82, 237], "2956": [82, 237], "2957": [82, 237], "2958": [82, 237], "2960": [82, 237], "2962": [82, 84], "2963": [73, 82, 237], "2964": [82, 237], "2965": [82, 237], "2966": [82, 237], "2971": 82, "2972": [82, 84], "2973": [73, 82], "2974": [82, 237], "2975": [82, 237], "2976": [82, 237], "2977": 82, "2978": [82, 237], "2979": [82, 237], "2980": [73, 82, 237], "2981": [82, 237], "2987": [82, 237], "2988": [82, 237], "2990": [82, 237], "2992": [82, 84, 237], "2994": 82, "2995": [82, 237], "2996": [82, 237], "2998": [82, 237], "2999": [82, 237], "3002": [82, 237], "3004": [82, 237], "3005": [82, 237], "3006": [82, 84, 237], "3007": [82, 237], "3008": 82, "3009": [82, 237], "3010": [73, 82], "3012": 82, "3013": [82, 85], "3014": 82, "3015": [82, 84], "3016": 82, "3019": [73, 82], "3021": 82, "3022": [82, 84], "3024": 82, "3025": [82, 84], "3027": 82, "3028": 82, "3031": 82, "3033": [82, 84], "3034": 82, "3036": [82, 84], "3038": [73, 82], "3039": [82, 84], "3042": 82, "3043": [82, 84], "3044": 82, "3046": 82, "3047": [73, 82], "3048": [82, 84], "3049": 82, "3050": [82, 84], "3053": 82, "3055": 82, "3057": [73, 82], "3058": 82, "3059": 82, "3062": 82, "3064": 82, "3065": [73, 82], "3066": 82, "3067": 82, "3068": 82, "3070": 82, "3071": [82, 84], "3073": 82, "3076": 82, "3077": [82, 247, 248], "3078": 82, "3079": 82, "3080": 82, "3081": [82, 84], "3082": 82, "3083": [73, 82], "3084": 82, "3085": [73, 82], "3091": [82, 84, 85], "3092": 82, "3093": 82, "3094": 82, "3095": 82, "3096": 82, "3097": 82, "3099": 82, "3101": [73, 82], "3104": [82, 84], "3105": 82, "3107": 82, "3108": 82, "3109": [82, 84], "3110": 82, "3112": 82, "3115": 82, "3116": [82, 84], "3118": 82, "3119": [82, 84], "3120": [73, 82], "3122": [82, 84], "3123": 82, "3126": 82, "3127": 82, "3128": [82, 84], "3129": 82, "3130": 82, "3132": 82, "3133": 82, "3134": [82, 84], "3135": 82, "3138": 82, "3139": [82, 84], "3141": [82, 84], "3144": 82, "3145": 82, "3146": 82, "3147": [82, 84], "3148": 82, "3149": 82, "3151": 82, "3152": 82, "3153": 82, "3155": 82, "3156": 82, "3157": [82, 84], "3158": 82, "3160": 82, "3161": 82, "3162": 82, "3163": 82, "3164": 82, "3165": 82, "3166": 82, "3167": [82, 84], "3168": [82, 85], "3169": 82, "3170": 82, "3171": 82, "3172": 82, "3173": 82, "3175": 82, "3176": 82, "3177": 82, "3178": [82, 84], "3180": 82, "3181": 82, "3182": 82, "3183": 82, "3184": 82, "3186": [82, 84], "3188": 82, "3190": 82, "3191": 82, "3192": 82, "3193": 82, "3195": 82, "3196": 82, "3197": 82, "3198": 82, "3199": 82, "3200": [82, 84], "3201": 82, "3202": 82, "3203": 82, "3204": 82, "3205": [82, 84], "3206": 82, "3207": 82, "3208": 82, "3209": [82, 84], "3210": 82, "3211": 82, "3213": 82, "3214": [], "3216": 82, "3218": 82, "3219": [], "3220": [82, 84], "3221": 82, "3222": 82, "3223": [82, 84], "3224": 82, "3226": [82, 84], "3227": 82, "3228": 82, "3229": [82, 84], "3230": [], "3231": 82, "3233": [82, 84], "3234": 82, "3236": [82, 84], "3237": 82, "3238": 82, "3239": [82, 84], "3240": 82, "3241": [82, 84], "3242": 82, "3244": [82, 85], "3245": 82, "3246": 82, "3247": 82, "3248": 82, "3249": 82, "3250": 82, "3252": 82, "3253": [82, 84], "3254": 82, "3255": 82, "3256": 82, "3259": 82, "3260": 82, "3261": 82, "3262": 82, "3263": 82, "3264": [82, 84], "3265": 82, "3266": 82, "3267": 82, "3268": 82, "3269": 82, "3270": 82, "3272": 82, "3273": 82, "3274": [82, 84], "3275": 82, "3277": 82, "3280": 82, "3281": 82, "3282": [82, 84], "3283": 82, "3284": 82, "3285": 82, "3286": 82, "3287": 82, "3288": 82, "3289": [82, 84], "3291": [], "3292": 82, "3294": 82, "3295": [82, 84], "3298": 82, "3301": 82, "3302": 82, "3303": 82, "3305": 82, "3306": 82, "3307": [82, 84], "3308": 82, "3309": 82, "3310": [82, 84], "3311": [], "3312": 82, "3313": [82, 84], "3314": 82, "3315": 82, "3316": [82, 84], "3317": 82, "3318": 82, "3319": [82, 85], "3320": 82, "3321": 84, "3322": 82, "3323": 82, "3324": 82, "3327": 82, "3329": 82, "3330": 82, "3331": [82, 84], "3332": 82, "3333": [82, 84, 170], "3334": 82, "3335": 82, "3336": [82, 84], "3339": [], "3340": 82, "3341": [], "3342": 82, "3343": 82, "3344": 82, "3345": 82, "3346": 82, "3347": 82, "3348": [82, 84], "3349": 82, "3350": 82, "3351": 82, "3352": 82, "3353": 82, "3354": 82, "3355": 82, "3357": [], "3358": 82, "3359": [82, 84], "3361": 82, "3362": 82, "3363": 82, "3364": 82, "3366": 82, "3367": 82, "3368": 82, "3369": 82, "3370": [82, 84], "3373": 82, "3375": 82, "3376": [], "3377": 82, "3378": [82, 84], "3379": 82, "3380": 82, "3381": 82, "3382": 82, "3383": [82, 147], "3385": [82, 84, 147, 247, 248], "3386": 82, "3387": [82, 147], "3388": 82, "3390": [82, 84], "3392": [82, 147], "3393": 82, "3394": [82, 84, 85], "3395": 82, "3397": [82, 84], "3398": 82, "3399": 82, "3400": 84, "3401": 82, "3403": 82, "3404": 82, "3405": 82, "3406": [82, 84], "3407": 82, "3408": 82, "3410": 82, "3411": [], "3413": 82, "3414": 82, "3415": 82, "3416": 84, "3417": 82, "3418": 82, "3419": [82, 84], "3421": 82, "3423": 82, "3425": [82, 84], "3426": 82, "3427": [82, 84], "3428": 82, "3429": [82, 84], "3430": 82, "3431": [82, 84], "3432": 82, "3433": 82, "3434": 82, "3435": 82, "3437": [82, 84], "3438": 82, "3439": 82, "3441": 82, "3442": 82, "3443": 82, "3444": 82, "3445": 82, "3446": 82, "3448": [], "3449": 82, "3450": 82, "3451": 82, "3454": 82, "3456": 82, "3457": 82, "3458": [82, 84], "3459": 82, "3461": 82, "3462": 82, "3463": 82, "3464": 82, "3465": 82, "3467": 82, "3469": [82, 84, 85], "3470": 82, "3472": 82, "3473": 82, "3474": 82, "3475": 82, "3476": 82, "3477": [82, 84], "3478": 82, "3479": 82, "3480": 82, "3481": 82, "3482": 82, "3483": [82, 84], "3484": 82, "3486": 82, "3487": 82, "3488": 84, "3490": 82, "3491": 82, "3492": [82, 84], "3493": 82, "3494": 82, "3495": [82, 84], "3497": 82, "3498": [82, 84], "3499": 82, "3501": 82, "3502": [82, 84], "3503": 82, "3504": [82, 84], "3505": 82, "3506": [82, 84], "3507": 82, "3508": [82, 84], "3509": [82, 84], "3510": [82, 84], "3512": [82, 84], "3513": 82, "3514": 82, "3516": [82, 84], "3517": 82, "3518": [82, 84], "3519": 82, "3520": [82, 84], "3521": 82, "3522": [82, 84], "3526": [82, 84], "3527": 82, "3528": [82, 84], "3529": 82, "3530": 82, "3531": 82, "3532": 82, "3533": 82, "3536": 82, "3537": 82, "3538": 82, "3539": 82, "3540": 82, "3541": 82, "3542": 82, "3544": [82, 84], "3545": 82, "3546": 82, "3547": 82, "3548": 82, "3549": [], "3550": 82, "3553": 82, "3554": 82, "3555": [82, 84], "3556": 82, "3557": 82, "3559": 82, "3561": 82, "3562": 82, "3563": 82, "3564": 82, "3566": 82, "3567": 82, "3568": 82, "3569": 82, "3570": 82, "3571": 82, "3572": 82, "3573": [82, 84], "3574": 82, "3575": 82, "3576": 82, "3577": 82, "3578": 82, "3579": [82, 84], "3582": 82, "3583": 82, "3584": [82, 84], "3585": 82, "3586": 82, "3587": 82, "3588": [82, 84], "3589": 82, "3590": 82, "3591": [82, 84], "3592": 82, "3593": 82, "3594": [82, 84], "3595": 82, "3596": 82, "3597": [82, 84], "3598": 82, "3600": 82, "3601": [82, 84], "3602": 82, "3603": [82, 84], "3605": [82, 84], "3607": [82, 84], "3609": [82, 84], "3610": 82, "3611": 82, "3614": [82, 84], "3618": [82, 84], "3619": 82, "3620": [82, 84], "3621": [82, 85], "3622": [82, 84], "3623": 82, "3625": [82, 84], "3626": 82, "3627": 82, "3628": [82, 84], "3630": 82, "3631": [82, 84], "3632": 82, "3633": 82, "3634": 82, "3635": 82, "3637": 82, "3638": 82, "3641": 82, "3642": [82, 84], "3643": 82, "3645": 82, "3646": 82, "3648": 82, "3649": 82, "3650": 82, "3651": 82, "3652": 82, "3653": [82, 84], "3654": 82, "3655": 82, "3656": 82, "3657": 82, "3659": 82, "3661": 82, "3662": [82, 84], "3663": 82, "3664": 82, "3666": 82, "3667": 82, "3668": 82, "3669": [82, 84], "3670": 82, "3672": 82, "3674": 82, "3675": [82, 84], "3676": 82, "3677": 82, "3678": 82, "3679": 82, "3681": 82, "3682": 82, "3683": 82, "3685": [82, 84], "3686": 82, "3687": 82, "3690": 82, "3691": 82, "3692": [82, 84, 247, 248], "3694": 82, "3695": [82, 84], "3696": 82, "3697": 82, "3698": [82, 84], "3700": [82, 85], "3701": [82, 84], "3702": 82, "3703": 82, "3704": [82, 84], "3705": 82, "3706": [82, 84], "3708": [82, 84], "3709": 82, "3710": [82, 84], "3712": [82, 84], "3713": 82, "3714": [82, 84], "3715": 82, "3716": [82, 84], "3717": 82, "3718": [82, 84], "3719": 82, "3720": [82, 84], "3722": [82, 84], "3723": 82, "3724": [82, 84], "3725": 82, "3726": [82, 84], "3728": 82, "3730": 82, "3731": 82, "3732": 84, "3733": 82, "3735": 82, "3736": 82, "3739": 82, "3740": 82, "3743": 82, "3744": 82, "3745": 82, "3746": 82, "3747": 82, "3749": 82, "3750": 82, "3752": 82, "3755": 82, "3757": 82, "3758": 82, "3759": 82, "3760": [82, 84], "3761": 82, "3762": 82, "3763": 82, "3764": 82, "3765": 82, "3766": 82, "3767": [82, 84], "3768": 82, "3770": 82, "3771": [], "3772": [82, 84], "3775": 82, "3776": [82, 84, 85], "3777": 82, "3778": 82, "3780": 82, "3781": 82, "3782": 82, "3783": 82, "3784": [82, 84], "3785": 82, "3786": 82, "3787": 82, "3789": 82, "3790": 82, "3791": 84, "3793": 82, "3794": [82, 84], "3795": 82, "3796": 82, "3797": [82, 84], "3798": 82, "3803": [82, 84], "3804": 82, "3805": [82, 84, 147], "3806": [82, 147], "3809": [82, 84, 147], "3810": 82, "3811": [82, 84], "3812": 82, "3813": [82, 84], "3814": 82, "3815": [82, 84], "3816": 82, "3817": [82, 84], "3818": [82, 84], "3819": 82, "3820": 82, "3821": 82, "3823": [82, 84], "3824": 82, "3825": 82, "3826": [], "3827": 82, "3828": 82, "3829": 82, "3831": 82, "3832": 82, "3833": [82, 84], "3835": 82, "3837": 82, "3838": 82, "3839": 82, "3840": 82, "3841": 82, "3842": 82, "3843": 82, "3847": 82, "3848": 82, "3849": 82, "3850": [82, 147], "3851": [82, 147], "3852": [82, 85], "3853": 82, "3854": [82, 84], "3855": 82, "3857": 82, "3859": 82, "3861": [82, 84], "3863": 82, "3864": 82, "3865": 82, "3866": 82, "3868": 82, "3869": 82, "3874": 82, "3875": 82, "3876": [82, 84], "3877": 82, "3878": 82, "3879": 82, "3880": 82, "3881": [82, 84], "3882": 82, "3883": 82, "3885": 82, "3887": [82, 84], "3890": [82, 84], "3891": 82, "3893": [82, 84], "3894": [], "3895": [82, 84], "3896": 82, "3898": [82, 84], "3899": 82, "3900": [82, 84], "3901": 82, "3902": 84, "3907": 82, "3908": [82, 84], "3909": [82, 84], "3910": 82, "3911": [82, 84], "3912": [82, 84], "3913": 82, "3914": [82, 84], "3916": 82, "3918": 82, "3919": [82, 84], "3920": 82, "3922": 82, "3925": 82, "3926": [82, 85], "3927": [82, 84], "3928": 82, "3930": 82, "3935": 82, "3937": 82, "3939": 82, "3940": 82, "3942": 82, "3945": [], "3946": 82, "3947": 82, "3948": [82, 84], "3952": 82, "3954": 82, "3955": [82, 84], "3956": 82, "3957": 82, "3958": 82, "3959": 82, "3960": 82, "3962": 82, "3964": 82, "3965": [82, 84], "3966": 82, "3967": 82, "3972": 82, "3973": [82, 84], "3975": 82, "3977": [82, 84], "3978": 82, "3979": 82, "3981": 82, "3983": 82, "3984": [82, 84], "3985": 82, "3986": [82, 84], "3988": [82, 84], "3990": [82, 84], "3991": 82, "3992": [82, 84], "3993": 82, "3996": [82, 84], "3997": 82, "3998": [82, 84, 85], "4002": [82, 84], "4003": 82, "4004": [82, 84], "4005": 82, "4010": [82, 84], "4011": [82, 84], "4012": 82, "4013": [82, 84], "4014": [82, 84], "4015": 82, "4016": 82, "4017": 82, "4018": 82, "4019": [82, 84], "4020": 82, "4021": 82, "4023": 82, "4026": 82, "4028": 82, "4032": 82, "4033": 82, "4035": 82, "4037": 82, "4038": 82, "4039": 82, "4040": [82, 84], "4041": 82, "4042": 82, "4043": 82, "4045": 82, "4046": 82, "4049": 82, "4051": 82, "4052": 82, "4056": 82, "4057": [82, 84], "4058": 82, "4059": 82, "4062": [82, 84], "4064": 82, "4066": 82, "4067": 82, "4069": 82, "4071": [82, 84], "4075": 82, "4077": 82, "4079": 82, "4080": [82, 84], "4086": [82, 84], "4090": 82, "4091": [82, 84], "4092": 82, "4093": 82, "4094": 82, "4095": 82, "4097": 82, "4099": 82, "4100": [82, 84], "4101": 82, "4102": [82, 84], "4103": 82, "4104": [82, 84], "4106": [82, 84], "4107": [82, 84], "4109": [82, 84], "4110": [82, 84], "4112": 82, "4113": 82, "4114": [82, 84], "4115": 82, "4116": 82, "4117": [], "4121": 82, "4124": [82, 84], "4125": 82, "4127": 82, "4128": 82, "4129": 82, "4131": 82, "4135": 82, "4137": 82, "4138": 82, "4139": 82, "4141": [82, 84], "4143": 82, "4145": 82, "4148": 82, "4153": 82, "4157": 82, "4159": 82, "4160": [82, 84], "4165": 82, "4166": [82, 84], "4169": [82, 84], "4174": 82, "4179": [], "4180": [82, 84], "4183": 82, "4184": [82, 84], "4185": 82, "4188": 82, "4193": 82, "4197": 82, "4198": [82, 84], "4200": [82, 84], "4201": 82, "4202": [82, 84], "4203": 82, "4205": 82, "4209": 82, "4210": 82, "4211": 82, "4215": [82, 84, 85], "4216": 82, "4218": 82, "4220": 82, "4224": [], "4226": [82, 84], "4229": 82, "4231": 82, "4234": 82, "4238": 82, "4239": 82, "4249": 82, "4251": 82, "4255": 82, "4262": 82, "4268": 82, "4269": [82, 84], "4270": 82, "4275": [82, 84], "4277": [82, 84], "4283": 82, "4285": 82, "4286": [82, 84], "4288": [82, 85], "4291": [82, 84], "4294": 82, "4295": [82, 84], "4296": 82, "4297": 82, "4300": 82, "4301": 82, "4305": 82, "4306": 82, "4308": [82, 84], "4311": 82, "4312": 82, "4313": 82, "4316": 82, "4317": 82, "4319": [82, 84], "4321": 82, "4323": 82, "4327": 82, "4328": 82, "4330": [82, 84], "4331": 82, "4332": 82, "4333": 82, "4334": 82, "4337": [82, 84], "4339": 82, "4340": 82, "4341": 82, "4343": [82, 84], "4344": 82, "4346": 82, "4347": 82, "4349": 82, "4357": [82, 84], "4358": 82, "4362": 82, "4365": [82, 84], "4367": [82, 84], "4368": 82, "4369": [82, 84], "4371": [82, 84], "4374": 82, "4375": 82, "4378": [82, 84], "4380": 82, "4383": 82, "4387": 82, "4390": 82, "4391": 82, "4392": [82, 84], "4393": 82, "4395": [82, 84], "4396": 82, "4397": 84, "4400": 82, "4401": 82, "4403": 82, "4404": [82, 84], "4409": [], "4410": 82, "4413": 82, "4414": 82, "4418": 82, "4420": 82, "4423": 82, "4424": 82, "4427": 82, "4430": 82, "4431": 82, "4433": 82, "4434": 82, "4435": 82, "4436": 82, "4437": 82, "4440": 82, "4441": 82, "4443": [], "4444": [82, 84], "4447": 82, "4448": [82, 84], "4451": [82, 84], "4452": 82, "4457": [82, 84], "4459": 82, "4465": 82, "4468": 82, "4469": 82, "4472": 82, "4475": [82, 84], "4476": 82, "4480": 82, "4481": 82, "4483": [82, 84], "4484": [82, 114], "4485": 82, "4486": [82, 84], "4487": 82, "4490": 82, "4491": 82, "4494": 82, "4495": [82, 84], "4501": 82, "4504": 82, "4507": 82, "4509": 82, "4511": 82, "4514": 82, "4515": 82, "4517": 82, "4519": 82, "4525": 82, "4526": [82, 84], "4529": 82, "4531": 82, "4532": 82, "4539": 82, "4542": 82, "4544": 82, "4546": 82, "4552": 82, "4553": [82, 84], "4555": 82, "4565": 82, "4569": 82, "4572": [82, 84], "4573": 82, "4575": 82, "4576": [82, 84], "4577": 82, "4583": [82, 84], "4584": 82, "4594": 82, "4595": 82, "4596": 82, "4597": 82, "4602": 82, "4606": 82, "4607": 82, "4608": 82, "4610": 82, "4611": 82, "4612": 82, "4617": 82, "4618": 82, "4622": 82, "4626": 82, "4628": [82, 84], "4629": 82, "4633": 82, "4636": 82, "4640": [82, 84], "4642": 82, "4646": 82, "4652": 82, "4662": 82, "4671": 82, "4674": 82, "4680": 82, "4681": 82, "4694": 82, "4695": 82, "4698": 82, "4706": 82, "4714": 82, "4719": [], "4720": 82, "4723": [82, 85], "4724": 82, "4728": 82, "4734": 82, "4740": 82, "4746": 82, "4747": 82, "4750": [82, 84], "4755": 82, "4757": [82, 84], "4759": 82, "4761": 82, "4765": 82, "4766": 82, "4768": [82, 84], "4770": 82, "4771": 82, "4773": 84, "4774": 82, "4776": 82, "4777": [82, 84], "4780": 82, "4781": [82, 84], "4790": 82, "4791": [82, 84], "4794": [82, 85], "4804": 82, "4806": 82, "4807": 82, "4808": 82, "4811": 82, "4812": 82, "4819": 82, "4826": 82, "4827": [82, 84], "4831": 82, "4832": 82, "4834": 82, "4835": 82, "4840": 82, "4852": [82, 84], "4890": 82, "4900": 82, "4902": 82, "4904": 82, "4907": [82, 84], "4910": 82, "4911": 82, "4912": 82, "4914": 82, "4918": 82, "4920": 82, "4924": 82, "4927": 82, "4931": 82, "4933": 82, "4938": 85, "4940": [82, 84], "4941": 82, "4942": [82, 84], "4946": [82, 84], "4952": 82, "4956": [], "4957": 82, "4961": [82, 84], "4964": 82, "4971": 82, "4972": 82, "4973": [82, 84], "4976": [82, 84], "4978": 82, "4979": 82, "4981": 82, "4982": 82, "4983": 82, "4987": [82, 84], "4988": 82, "4989": 82, "4990": 82, "4991": 82, "4992": 82, "4993": 82, "4996": 82, "4997": 82, "4998": [82, 84], "4999": 82, "5001": 82, "5002": 82, "5003": 82, "5005": [82, 84], "5006": 82, "5007": 82, "5008": 82, "5009": [82, 85], "5010": 82, "5011": 82, "5012": [82, 84], "5014": 82, "5016": 82, "5017": [82, 84], "5018": 82, "5019": 82, "5020": 82, "5021": [82, 84], "5023": 82, "5024": 82, "5025": [82, 84], "5026": 82, "5027": 82, "5029": 82, "5030": 82, "5031": [82, 84], "5033": 82, "5035": 82, "5036": [82, 84], "5038": [82, 84], "5039": 82, "5040": [82, 84], "5042": [82, 84], "5044": [82, 84], "5045": 82, "5046": [82, 84], "5047": 82, "5048": 82, "5049": [82, 84], "5052": 82, "5053": [82, 84], "5054": 82, "5055": [82, 84], "5056": 82, "5057": [82, 84], "5058": 82, "5060": 82, "5061": [82, 84], "5062": 82, "5064": 82, "5065": [82, 84], "5066": 82, "5067": [82, 84], "5070": 82, "5072": 82, "5073": [82, 84], "5074": 82, "5075": 82, "5076": 82, "5078": 82, "5079": 82, "5080": 82, "5081": [82, 85], "5082": 82, "5084": [82, 84], "5085": 82, "5087": 82, "5088": 82, "5089": 82, "5090": 82, "5091": 82, "5092": 82, "5093": 82, "5094": 82, "5096": 82, "5097": 82, "5098": 82, "5100": 82, "5101": 82, "5102": 82, "5103": [82, 84], "5104": 82, "5106": 82, "5107": 82, "5108": 82, "5109": [82, 84], "5110": 82, "5111": 82, "5112": 82, "5113": 82, "5114": [82, 84], "5116": 82, "5117": 82, "5118": 82, "5119": [82, 84], "5120": 82, "5121": 82, "5122": 82, "5123": [82, 84], "5125": 82, "5126": [82, 84], "5129": [82, 84], "5130": 82, "5132": [82, 84], "5134": [82, 84], "5135": 82, "5136": [82, 84], "5137": [], "5138": [82, 84], "5139": 82, "5141": 82, "5143": 82, "5144": [82, 84], "5145": 82, "5146": 82, "5147": [82, 84], "5149": 82, "5150": 82, "5151": [82, 84], "5153": [82, 84], "5154": 82, "5156": 82, "5157": [82, 84], "5158": 82, "5159": [82, 85], "5160": 82, "5162": [82, 84], "5163": 82, "5164": [82, 84], "5165": 82, "5166": [82, 84], "5167": 82, "5168": 82, "5169": 82, "5171": [82, 84], "5172": 82, "5173": 82, "5174": 82, "5175": 82, "5176": 82, "5177": 82, "5178": 82, "5179": 82, "5182": [82, 84], "5184": 82, "5185": 82, "5186": 82, "5187": 82, "5188": 82, "5189": 82, "5191": 82, "5192": 82, "5193": [82, 84], "5194": 82, "5195": 82, "5196": 82, "5197": 82, "5198": 82, "5199": 82, "15609783e": 82, "09732577e": 82, "86659301e": 82, "19170291e": 82, "ivim_trr_predict": 82, "s0_est": 82, "f_est": 82, "d_star_est": 82, "d_est": 82, "text_fit": 82, "param": [82, 138, 141, 163, 170, 174, 176, 217, 222, 226, 236], "3f": 82, "4f": [82, 164], "5f": 82, "gca": 82, "ivim_predict_vp": 82, "ivim_voxel_plot": 82, "januari": [82, 145, 155, 159, 176, 200, 247, 248], "presenc": [82, 88, 94, 155, 172, 176, 200, 245], "chemic": [82, 155, 172, 176, 200], "bibcod": [82, 155, 176, 200], "1965jchph": [82, 155, 176, 200], "1695690": [82, 155, 176, 200], "deni": [82, 155, 170, 176, 200], "radiologi": [82, 155, 170, 176, 200], "microlearn": [82, 170, 223], "canada": [82, 92, 159, 170, 175, 176, 203], "farooq": [82, 170], "hamza": [82, 170], "reconst_ivim": [82, 95, 238], "ozarslan2013": [83, 86], "qiv": [83, 86, 170, 176, 177, 201], "teturn": 83, "ng": [83, 170, 176, 177, 201, 221], "interestingli": 83, "rtap": [83, 86, 155, 170, 176, 177, 201, 217, 237], "rtpp": [83, 86, 155, 170, 176, 177, 201, 217, 237], "delahaije2020": 83, "laplacian": [83, 86, 158, 170, 176, 201, 219], "fick2016a": 83, "mapmri": [83, 86, 155, 176, 177, 201, 217, 219, 220, 221, 222, 223, 230, 237, 239], "big_delta": [83, 86, 164, 170, 176, 201, 220], "small_delta": [83, 86, 164, 170, 176, 201, 220], "0365": [83, 155], "0157": [83, 155], "radial_ord": [83, 86, 92, 170, 176, 201], "anisotropic_sc": [83, 170], "laplacian_regular": [83, 86, 170, 230], "regularization_weight": 83, "gcv": [83, 86, 170, 228], "craven1978": 83, "omit": [83, 163, 170, 174], "custom": [83, 84, 163, 169, 170, 176, 178, 219, 231, 237], "positivity_constraint": [83, 170], "global_constraint": [83, 170], "everywher": [83, 158, 170], "pos_grid": [83, 170], "pos_radiu": [83, 170], "job": [83, 142, 174, 222, 237], "viabl": 83, "impos": [83, 86, 88, 170], "extrapol": [83, 86, 170, 174], "desir": [83, 108, 113, 128, 163, 164, 166, 170, 171, 172, 174], "map_model_laplacian_aniso": 83, "mapmrimodel": [83, 177], "laplacian_weight": [83, 86, 170, 176, 201], "map_model_positivity_aniso": 83, "map_model_both_aniso": 83, "map_model_plus_aniso": 83, "preset": [83, 86, 170], "mapfit_laplacian_aniso": [83, 221], "mapfit_positivity_aniso": 83, "mapfit_both_aniso": 83, "mapfit_plus_aniso": 83, "cmapl": 83, "197": [73, 82, 83, 84, 104, 145, 166, 174, 226, 237], "368": [82, 83, 226], "379": [82, 83, 84, 226], "map_label": [83, 175], "mapmri_rtop": 83, "smoother": [83, 163, 170, 171, 174, 176, 179], "norm_of_laplacian_sign": [83, 170, 177], "mapmri_norm_laplacian": 83, "mapmri_map": 83, "proton": [83, 142, 243], "said": 83, "hosseinbor2013": 83, "composit": [83, 163], "fick2016b": 83, "puls": [83, 86, 142, 164, 165, 170, 172, 241, 243], "appar": [83, 151, 153, 158, 166, 170], "diamet": 83, "strong": 83, "pore": [83, 170], "realist": 83, "map_model_both_ng": 83, "bval_threshold": [83, 170, 176, 201], "map_model_plus_ng": 83, "mapfit_both_ng": 83, "mapfit_plus_ng": 83, "ng_perpendicular": [83, 170, 177], "ng_parallel": [83, 170, 177], "mapmri_ng": 83, "clue": 83, "map_model_both_iso": 83, "mapfit_both_iso": 83, "arcco": [83, 93, 113, 164, 171, 223, 246], "noisier": 83, "sfu": [83, 92], "hj": [83, 86, 165, 170], "craven": [83, 170], "spline": [83, 163, 170, 177], "hosseinbor": [83, 170], "bessel": [83, 170], "bfor": [83, 170], "dispers": [83, 85, 167], "isbi": [83, 92, 159, 165, 170, 224, 247, 248], "reconst_mapmri": [83, 95, 221, 238], "msmt": [84, 158, 170, 228, 229, 231, 237], "jeurissen2014": 84, "cerebrospin": [84, 89, 157, 176, 215, 247, 248], "overestim": [84, 170], "ssst": [84, 170], "otsu": [84, 155, 177, 219, 225], "powermap": 84, "unavail": 84, "unique_bvals_toler": [84, 170, 177], "auto_response_msmt": [84, 177], "mask_for_response_msmt": [84, 177], "response_from_mask_msmt": [84, 177, 232], "multishelldeconvmodel": [84, 177], "thetax": 84, "qball_model": 84, "qballmodel": [84, 177], "ap": [84, 170, 174], "anisotropic_pow": [84, 177, 219], "anisotropic_power_map": 84, "treat": [84, 163, 164, 165, 166, 170, 176], "hidden": [84, 116, 163, 165, 169, 170, 221, 230], "markov": [84, 116, 171, 224, 225], "hmrf": [84, 116], "nclass": [84, 116, 171], "initial_segment": [84, 116, 171], "final_segment": [84, 116, 171], "precis": [84, 85, 113, 142, 163, 164, 169, 170, 174, 219, 221, 226, 227], "mask_wm": [84, 170], "mask_gm": [84, 170], "mask_csf": [84, 170], "wm_fa_thr": [84, 170], "gm_fa_thr": [84, 170], "csf_fa_thr": [84, 170], "gm_md_thr": [84, 170], "csf_md_thr": [84, 170], "0032": [84, 170], "msg_bval": 84, "nvoxels_wm": 84, "nvoxels_gm": 84, "nvoxels_csf": 84, "precalcul": [84, 176, 184], "response_wm": [84, 170], "response_gm": [84, 170], "response_csf": [84, 170], "auto_response_wm": 84, "auto_response_gm": 84, "auto_response_csf": 84, "56692320e": 84, "46085143e": 84, "62131485e": 84, "34276461e": 84, "52534556e": 84, "72067588e": 84, "03258278e": 84, "83944994e": 84, "84867552e": 84, "24112459e": 84, "48269864e": 84, "33687318e": 84, "54087379e": 84, "19307328e": 84, "03487796e": 84, "70814058e": 84, "99497542e": 84, "66589967e": 84, "37647490e": 84, "22844899e": 84, "02876747e": 84, "64284096e": 84, "90155949e": 84, "05450074e": 84, "52760292e": 84, "33298612e": 84, "19461602e": 84, "31346774e": 84, "09567957e": 84, "48548376e": 84, "multishellrespons": [84, 177], "ubval": [84, 164, 170], "response_mcsd": 84, "wm_rf": [84, 170], "gm_rf": [84, 170], "csf_rf": [84, 170], "mcsd_model_simple_respons": 84, "mcsd_model": 84, "mcsd_fit": 84, "989": [82, 84, 219], "1033": [82, 84, 219], "2070": [82, 84, 230], "2360": [82, 84], "2448": [73, 84], "2634": [84, 235], "2640": [82, 84], "2840": [82, 84, 237], "2922": [84, 237], "2938": [73, 84, 237], "2982": [73, 84], "3030": 84, "3194": 84, "3338": [82, 84], "3402": 84, "3409": 84, "3680": [82, 84], "3788": 84, "3807": 84, "3867": 84, "4088": [82, 84], "4182": 84, "5028": [82, 84], "5215": 84, "5219": 84, "5222": 84, "5225": 84, "5227": 84, "5229": 84, "5231": 84, "5233": 84, "5235": 84, "5238": 84, "5240": 84, "5242": 84, "5247": 84, "5249": 84, "5251": 84, "5253": 84, "5256": 84, "5258": 84, "5260": 84, "5262": 84, "5264": 84, "5274": 84, "5293": 84, "5300": 84, "5306": 84, "5310": 84, "5314": 84, "5317": 84, "5321": 84, "5326": 84, "5328": 84, "5330": 84, "5332": 84, "5334": 84, "5337": 84, "5339": 84, "5341": 84, "5343": 84, "5345": 84, "5347": 84, "5348": 84, "5349": 84, "5350": 84, "5351": 84, "5352": 84, "5354": 84, "5356": 84, "5359": 84, "5363": 84, "5373": 84, "5383": 84, "5390": 84, "5396": 84, "5400": 84, "5404": 84, "5410": 84, "5412": 84, "5417": 84, "5420": 84, "5422": 84, "5424": 84, "5427": 84, "5429": 84, "5431": 84, "5435": 84, "5439": 84, "5441": 84, "5442": 84, "5443": 84, "5444": 84, "5446": 84, "5447": [84, 85], "5448": 84, "5449": 84, "5450": 84, "5452": 84, "5454": 84, "5455": 84, "5458": 84, "5469": 84, "5479": 84, "5486": 84, "5498": 84, "5502": 84, "5505": 84, "5508": 84, "5512": 84, "5515": 84, "5517": 84, "5519": [84, 85], "5521": 84, "5523": 84, "5526": 84, "5528": 84, "5530": 84, "5532": 84, "5534": 84, "5536": 84, "5538": 84, "5540": 84, "5541": 84, "5542": 84, "5543": 84, "5544": 84, "5545": 84, "5547": 84, "5549": 84, "5553": 84, "5563": 84, "5574": 84, "5583": 84, "5590": 84, "5595": 84, "5599": 84, "5603": 84, "5612": 84, "5615": 84, "5618": 84, "5621": 84, "5624": 84, "5626": 84, "5628": 84, "5630": 84, "5632": 84, "5633": 84, "5634": 84, "5636": 84, "5638": 84, "5639": 84, "5640": 84, "5641": 84, "5642": 84, "5643": 84, "5648": 84, "5659": 84, "5669": 84, "5678": 84, "5685": 84, "5690": 84, "5694": 84, "5698": 84, "5701": 84, "5704": 84, "5707": 84, "5709": 84, "5711": 84, "5713": 84, "5716": 84, "5718": [84, 170], "5722": 84, "5724": 84, "5726": 84, "5728": 84, "5730": 84, "5732": 84, "5733": [84, 85], "5735": 84, "5738": 84, "5740": 84, "5753": 84, "5764": 84, "5774": 84, "5782": 84, "5788": 84, "5792": 84, "5798": 84, "5801": 84, "5803": 84, "5805": 84, "5807": 84, "5809": 84, "5811": 84, "5813": 84, "5815": 84, "5818": 84, "5824": 84, "5826": 84, "5828": 84, "5830": 84, "5834": 84, "5836": 84, "5843": 84, "5853": 84, "5863": 84, "5872": 84, "5880": 84, "5886": 84, "5891": 84, "5895": 84, "5898": 84, "5901": 84, "5906": 84, "5908": 84, "5911": 84, "5915": 84, "5918": 84, "5921": 84, "5923": 84, "5926": 84, "5929": 84, "5934": 84, "5945": 84, "5956": 84, "5967": 84, "5975": 84, "5981": 84, "5986": 84, "5990": 84, "5993": 84, "5996": 84, "5998": 84, "6003": 84, "6007": 84, "6011": 84, "6014": 84, "6017": 84, "6020": 84, "6023": 84, "6025": 84, "6027": 84, "6032": 84, "6043": 84, "6054": 84, "6065": 84, "6072": 84, "6078": 84, "6083": 84, "6087": 84, "6090": 84, "6093": 84, "6095": 84, "6099": 84, "6103": 84, "6106": 84, "6109": [84, 85], "6115": 84, "6117": 84, "6119": 84, "6122": 84, "6124": 84, "6126": 84, "6136": 84, "6147": 84, "6158": 84, "6166": 84, "6173": 84, "6178": 84, "6182": 84, "6185": 84, "6188": 84, "6192": 84, "6196": 84, "6200": 84, "6203": 84, "6206": 84, "6209": 84, "6211": 84, "6215": 84, "6217": 84, "6219": 84, "6228": 84, "6239": 84, "6249": 84, "6259": 84, "6266": 84, "6272": 84, "6277": 84, "6281": 84, "6284": 84, "6287": 84, "6292": 84, "6295": 84, "6298": 84, "6301": 84, "6303": 84, "6305": 84, "6307": 84, "6309": 84, "6313": 84, "6319": 84, "6330": 84, "6341": 84, "6359": 84, "6367": 84, "6373": 84, "6378": 84, "6382": 84, "6389": 84, "6392": 84, "6394": 84, "6400": 84, "6402": 84, "6404": 84, "6410": 84, "6421": 84, "6432": 84, "6442": 84, "6453": 84, "6462": 84, "6469": 84, "6474": 84, "6478": 84, "6482": 84, "6485": 84, "6488": 84, "6490": 84, "6493": 84, "6495": 84, "6497": 84, "6499": 84, "6502": 84, "6504": 84, "6515": 84, "6525": 84, "6535": 84, "6545": 84, "6553": 84, "6561": 84, "6567": 84, "6572": 84, "6577": 84, "6581": 84, "6585": 84, "6588": 84, "6591": 84, "6594": 84, "6597": 84, "6599": 84, "6604": 84, "6615": 84, "6626": 84, "6637": 84, "6647": 84, "6656": 84, "6663": 84, "6668": 84, "6674": 84, "6678": 84, "6682": 84, "6685": 84, "6688": 84, "6691": 84, "6696": 84, "6707": 84, "6729": 84, "6740": 84, "6749": 84, "6757": 84, "6763": 84, "6768": 84, "6773": 84, "6777": 84, "6782": 84, "6785": [84, 85], "6788": 84, "6797": 84, "6808": 84, "6819": 84, "6830": 84, "6841": 84, "6850": 84, "6857": 84, "6862": 84, "6867": 84, "6872": 84, "6876": 84, "6880": 84, "6890": 84, "6900": 84, "6910": 84, "6920": 84, "6930": 84, "6940": 84, "6949": 84, "6957": 84, "6963": 84, "6969": 84, "6976": 84, "6987": 84, "6998": 84, "7008": 84, "7018": 84, "7029": 84, "7040": 84, "7050": 84, "7058": 84, "7065": 84, "7076": 84, "7087": 84, "7098": 84, "7109": 84, "7120": 84, "7130": 84, "7141": 84, "7151": 84, "7160": 84, "7171": 84, "7193": 84, "7204": 84, "7215": 84, "7226": 84, "7237": 84, "7248": 84, "7259": 84, "7270": 84, "7281": 84, "7292": 84, "7303": 84, "7314": 84, "7325": 84, "7336": 84, "7347": 84, "7358": 84, "7369": 84, "7380": 84, "7391": 84, "7402": 84, "7413": 84, "7424": 84, "7435": 84, "7446": 84, "7457": 84, "7468": 84, "7479": 84, "7490": 84, "7501": 84, "7512": 84, "7523": 84, "7534": 84, "7545": 84, "7556": 84, "7567": 84, "7578": 84, "7589": 84, "7600": 84, "7611": 84, "7622": 84, "7633": 84, "7644": 84, "7655": 84, "7666": 84, "7677": 84, "7688": 84, "7699": 84, "7710": 84, "7721": 84, "7732": 84, "7743": 84, "7754": 84, "7764": 84, "7775": 84, "7786": 84, "7797": 84, "7808": 84, "7819": 84, "7830": 84, "7841": 84, "7852": 84, "7863": 84, "7885": 84, "7896": 84, "7907": 84, "7929": 84, "7940": 84, "7951": 84, "7962": 84, "7983": 84, "7994": 84, "8005": 84, "8016": 84, "8027": 84, "8038": 84, "8049": 84, "8060": 84, "8071": 84, "8082": 84, "8093": 84, "8115": 84, "8126": 84, "8137": 84, "8148": 84, "8159": 84, "8170": 84, "8181": 84, "8192": 84, "8214": 84, "8236": 84, "8247": 84, "8258": 84, "8269": 84, "8280": 84, "8290": 84, "8300": 84, "8310": 84, "8320": 84, "8330": 84, "8341": 84, "8351": 84, "8361": 84, "8381": 84, "8401": 84, "8411": 84, "8441": 84, "8461": 84, "8513": 84, "8568": 84, "8579": 84, "8590": 84, "8601": 84, "8612": 84, "8645": 84, "8656": 84, "8666": 84, "8677": 84, "8688": 84, "8699": 84, "8710": 84, "8721": 84, "8732": 84, "8743": 84, "8754": 84, "8765": 84, "8776": 84, "8787": 84, "8798": [84, 85], "8809": 84, "8820": 84, "8831": 84, "8842": 84, "8853": 84, "8864": 84, "8886": 84, "8897": 84, "8908": 84, "8919": 84, "8930": 84, "8941": 84, "8952": 84, "8963": 84, "8985": 84, "8996": 84, "9007": 84, "9018": 84, "9029": 84, "9040": 84, "9051": 84, "9062": 84, "9073": 84, "9084": 84, "9095": 84, "9106": 84, "9117": 84, "9128": 84, "9139": 84, "9161": 84, "9171": 84, "9182": 84, "9193": 84, "9204": 84, "9215": 84, "all_shm_coeff": [84, 170, 177], "vf": [84, 163], "volume_fract": [84, 170, 177], "sh_coeff": [84, 91, 160, 170, 177], "csf_sh_coeff": 84, "gm_sh_coeff": 84, "wm_sh_coeff": 84, "mcsd_pred": 84, "mcsd_odf": 84, "reset_camera_tight": 84, "msdodf": 84, "07819397e": 84, "48056889e": 84, "86317738e": 84, "80318112e": 84, "13450501e": 84, "90510861e": 84, "91056542e": 84, "78808950e": 84, "18908921e": 84, "61958970e": 84, "17237838e": 84, "23186090e": 84, "38676232e": 84, "99152866e": 84, "14832163e": 84, "06892957e": 84, "41825726e": 84, "65070379e": 84, "38250941e": 84, "38942356e": 84, "67702568e": 84, "34357229e": 84, "36801020e": 84, "26912924e": 84, "69950448e": 84, "43861871e": 84, "76332334e": 84, "76965057e": 84, "30105513e": 84, "04356019e": 84, "12702942e": 84, "57674067e": 84, "04510936e": 84, "23442424e": 84, "49056228e": 84, "99149700e": 84, "66042016e": 84, "10946414e": 84, "39300078e": 84, "83495625e": 84, "67843779e": 84, "53254789e": 84, "33471409e": 84, "11565718e": 84, "00278023e": 84, "98227330e": 84, "41515801e": 84, "36097977e": 84, "15859621e": 84, "28331076e": 84, "97839734e": 84, "42637736e": 84, "32416120e": 84, "95430344e": 84, "73620758e": 84, "07359260e": 84, "61738361e": 84, "29678673e": 84, "62750988e": 84, "58723140e": 84, "94548779e": 84, "10784012e": 84, "20042914e": 84, "50135856e": 84, "07379628e": 84, "28699862e": 84, "87638912e": 84, "55356793e": 84, "39732048e": 84, "96030402e": 84, "09439424e": 84, "07074878e": 84, "64342252e": 84, "94125547e": 84, "86817699e": 84, "04562301e": 84, "90321192e": 84, "46903789e": 84, "94198316e": 84, "67351437e": 84, "07922379e": 84, "42989381e": 84, "02894434e": 84, "06017373e": 84, "00443786e": 84, "01026621e": 84, "62710991e": 84, "05185017e": 84, "29846537e": 84, "48944537e": 84, "69262470e": 84, "72415715e": 84, "83042591e": 84, "02239573e": 84, "61051689e": 84, "71427461e": 84, "70664466e": 84, "20885237e": 84, "81182893e": 84, "72282936e": 84, "35450334e": 84, "03993364e": 84, "83646689e": 84, "88310692e": 84, "98688769e": 84, "12299493e": 84, "16502966e": 84, "87089565e": 84, "11524042e": 84, "34079283e": 84, "65542623e": 84, "88922363e": 84, "12219624e": 84, "70655936e": 84, "23346100e": 84, "43813347e": 84, "15633085e": 84, "97143551e": 84, "90622199e": 84, "01889036e": 84, "93710007e": 84, "52279438e": 84, "17271730e": 84, "25254560e": 84, "87380649e": 84, "43598600e": 84, "60994960e": 84, "65058430e": 84, "63470182e": 84, "22384636e": 84, "12773778e": 84, "85653822e": 84, "14586308e": 84, "77664617e": 84, "21709957e": 84, "36277507e": 84, "00149315e": 84, "15089758e": 84, "70157210e": 84, "43197131e": 84, "28292374e": 84, "31501996e": 84, "25902169e": 84, "38710836e": 84, "73876799e": 84, "15229642e": 84, "47936185e": 84, "56338317e": 84, "83792975e": 84, "77440136e": 84, "96635855e": 84, "26243670e": 84, "85722562e": 84, "64078001e": 84, "06838050e": 84, "04555163e": 84, "53992561e": 84, "45864228e": 84, "04756400e": 84, "09634648e": 84, "54845037e": 84, "48961940e": 84, "38681294e": 84, "19466814e": 84, "19583387e": 84, "42192035e": 84, "49746735e": 84, "49303974e": 84, "41843434e": 84, "33030323e": 84, "63123941e": 84, "10201510e": 84, "68332713e": 84, "72911840e": 84, "44350286e": 84, "39052455e": 84, "86860441e": 84, "73857661e": 84, "33382036e": 84, "02057132e": 84, "03885597e": 84, "29565370e": 84, "82095643e": 84, "01674891e": 84, "40213897e": 84, "21585971e": 84, "75680535e": 84, "81140382e": 84, "34829726e": 84, "39614203e": 84, "33580077e": 84, "94860840e": 84, "65061333e": 84, "70904466e": 84, "38132479e": 84, "45167177e": 84, "18533114e": 84, "13296334e": 84, "50528233e": 84, "23909465e": 84, "07433362e": 84, "45461738e": 84, "95002361e": 84, "10818063e": 84, "53487264e": 84, "02700617e": 84, "42558305e": 84, "29635527e": 84, "63540384e": 84, "46209339e": 84, "24832761e": 84, "35102386e": 84, "88873403e": 84, "82259677e": 84, "01056189e": 84, "98621188e": 84, "64901754e": 84, "95809057e": 84, "06006364e": 84, "48670256e": 84, "63229030e": 84, "61980546e": 84, "67269383e": 84, "00770942e": 84, "80023822e": 84, "02478689e": 84, "59898050e": 84, "19738552e": 84, "13595424e": 84, "04725397e": 84, "31177763e": 84, "03230831e": 84, "00851960e": 84, "63056657e": 84, "32697472e": 84, "46096185e": 84, "48486417e": 84, "25061276e": 84, "11447111e": 84, "54846471e": 84, "66207618e": 84, "69827448e": 84, "88722223e": 84, "62563824e": 84, "45950496e": 84, "50953589e": 84, "06737025e": 84, "63297210e": 84, "05470615e": 84, "54984383e": 84, "20058485e": 84, "53633515e": 84, "93584964e": 84, "00639040e": 84, "04792098e": 84, "22611069e": 84, "35319468e": 84, "34433859e": 84, "25263335e": 84, "55943878e": 84, "72215430e": 84, "38473404e": 84, "31554116e": 84, "29384830e": 84, "74368496e": 84, "71571848e": 84, "98499400e": 84, "77486229e": 84, "76454989e": 84, "38067351e": 84, "90919442e": 84, "26599617e": 84, "27656479e": 84, "24225059e": 84, "30608450e": 84, "83647236e": 84, "39530201e": 84, "23380689e": 84, "02865238e": 84, "60562810e": 84, "71004378e": 84, "55224326e": 84, "17127333e": 84, "57579584e": 84, "33600452e": 84, "51661163e": 84, "63708142e": 84, "99784929e": 84, "82597409e": 84, "44015531e": 84, "19105865e": 84, "07878237e": 84, "10037403e": 84, "87524277e": 84, "63229514e": 84, "18749803e": 84, "56688954e": 84, "79054622e": 84, "10357390e": 84, "45220433e": 84, "85215698e": 84, "51322362e": 84, "20937098e": 84, "85036124e": 84, "66356111e": 84, "13196136e": 84, "16839829e": 84, "33405933e": 84, "49660975e": 84, "33779555e": 84, "62828367e": 84, "43129847e": 84, "14112316e": 84, "27402686e": 84, "17155893e": 84, "94753072e": 84, "09286280e": 84, "61274058e": 84, "80868616e": 84, "55720392e": 84, "38598149e": 84, "84370835e": 84, "10953917e": 84, "72244551e": 84, "11560295e": 84, "28019034e": 84, "27587415e": 84, "83522763e": 84, "39934601e": 84, "66755842e": 84, "42426690e": 84, "12527850e": 84, "83709433e": 84, "57704045e": 84, "48342871e": 84, "04452619e": 84, "09923080e": 84, "60720306e": 84, "72655725e": 84, "45779054e": 84, "54721773e": 84, "73331175e": 84, "52938382e": 84, "17779632e": 84, "58762993e": 84, "04042480e": 84, "07066651e": 84, "70571341e": 84, "25624177e": 84, "14091580e": 84, "35477744e": 84, "99773766e": 84, "17731612e": 84, "65009051e": 84, "12298936e": 84, "90775556e": 84, "60863347e": 84, "51733843e": 84, "28036399e": 84, "78310481e": 84, "35960381e": 84, "46777795e": 84, "dell": [84, 89, 170], "acqua": [84, 89, 170], "milan": [84, 170], "itali": [84, 170], "reconst_mcsd": [84, 95, 238], "implaus": 85, "mesoscop": 85, "contrari": [85, 111], "confound": [85, 94], "secondli": 85, "meval": [85, 91, 121, 122, 170, 172], "00099": [85, 121, 172], "00226": [85, 121, 172], "00087": [85, 121, 172], "loop": [85, 89, 116, 137, 138, 141, 142, 163, 164, 170, 171, 174, 222, 228, 234], "linspac": [85, 86, 130, 172, 174], "num": [85, 164, 218], "ang": 85, "f_i": 85, "a_i": 85, "msdki_model": 85, "msdki_fit": 85, "2405": [82, 234], "ncol": [85, 86, 102, 163, 175], "bbox_to_anchor": 85, "msdki_simul": 85, "curv": [85, 174], "art": [85, 158, 239], "1050": [73, 82, 219], "5325": [], "5401": [], "5476": [], "5552": [], "5627": [], "5702": [], "5777": [], "5852": [], "5925": [], "6004": [], "6311": [], "6383": [], "6454": [], "6667": [], "6737": [], "6807": [], "7026": [], "7096": [], "7165": [], "7233": [], "7301": [], "7367": 85, "7437": [], "7504": [], "7573": [], "7712": [], "7780": [], "7924": [], "7995": [], "8065": [], "8135": [], "8272": [], "8339": [], "8409": [], "8561": [], "8707": [], "8852": [], "8924": [], "8994": [], "9064": [], "9135": [], "9276": [], "9346": [], "9416": [], "9487": [], "9559": [], "9631": [], "9702": [], "9776": [], "9849": [], "9921": [], "9992": [], "10062": [], "10132": [], "10202": [], "10272": [], "10341": [], "10418": [], "10497": [], "10643": [], "10715": [], "10787": [], "10858": [], "10939": [], "11012": [], "11085": [], "11156": [], "11227": [], "11298": [], "11371": [], "11445": [], "11589": [], "11661": [], "11732": [], "11802": [], "11883": [], "11963": [], "12038": [], "12113": [], "12193": [], "12269": [], "12349": [], "12428": [], "12506": [], "12581": [], "12656": [], "12730": [], "12804": [], "12879": [], "12959": [], "13045": [], "13126": [], "13206": [], "13285": [], "13365": [], "13446": [], "13526": [], "13605": [], "13684": [], "13762": [], "13839": [], "13915": [], "13990": [], "14064": [], "14143": [], "14224": [], "14306": [], "14385": [], "14464": [], "14540": [], "14614": [], "14687": [], "14759": [], "14831": [], "14904": [], "14977": [], "15051": [], "15129": [], "15206": [], "15281": [], "15354": [], "15425": [], "15496": [], "15569": [], "15643": [], "15789": [], "15862": [], "15935": [], "16007": [], "16080": [], "16154": 85, "16227": [], "16302": [], "16378": [], "16461": [], "16542": [], "16620": [], "16699": [], "16777": [], "16854": [], "16931": [], "17006": [], "17081": [], "17157": [], "17232": [], "17307": [], "17382": [], "17456": [], "17532": [], "17611": [], "17689": [], "17768": [], "17853": [], "17932": [], "18011": [], "18088": [], "18162": [], "18313": [], "18388": [], "18462": [], "18534": [], "18607": [], "18679": [], "18751": [], "18826": [], "18898": [], "18973": [], "19057": [], "19138": [], "19215": [], "19290": [], "19370": [], "19452": [], "19533": [], "19613": [], "19693": [], "19772": [], "19850": [], "19926": [], "19999": [], "20072": [], "20150": [], "20232": [], "20313": [], "20391": [], "20468": [], "20544": [], "20619": [], "20692": [], "20770": [], "20845": [], "20993": [], "21066": [], "21138": [], "21210": [], "21280": [], "21349": [], "21422": [], "21493": [], "21563": [], "21632": [], "21703": [], "21782": [], "21861": [], "21938": [], "22013": [], "22087": [], "22160": [], "22234": [], "22308": [], "22382": [], "22455": [], "22534": [], "22614": [], "22690": [], "22765": [], "22837": [], "22909": [], "22982": [], "23054": [], "23128": [], "23200": [], "23271": [], "23350": [], "23440": [], "23522": [], "23602": [], "23679": [], "23755": [], "23830": [], "23905": [], "23985": [], "24060": [], "24135": [], "24209": [], "24281": [], "24353": [], "24428": [], "24502": [], "24583": [], "24665": [], "24742": [], "24818": [], "24893": [], "24967": [], "25040": [], "25113": [], "25184": [], "25255": [], "25335": [], "25416": [], "25492": [], "25566": [], "25640": [], "25713": [], "25786": [], "25856": [], "25925": [], "25994": [], "26065": [], "26150": [], "26232": [], "26310": [], "26387": [], "26463": [], "26536": [], "26607": [], "26680": [], "26753": [], "26828": [], "26982": [], "27056": [], "27128": [], "27200": [], "27271": [], "27344": [], "27419": [], "27639": [], "27710": [], "27785": [], "27860": [], "27933": [], "28007": [], "28084": [], "28160": [], "28234": [], "28308": [], "28386": [], "28467": [], "28548": [], "28626": [], "28704": [], "28785": [], "28870": [], "28951": [], "29031": [], "29111": [], "29191": [], "29272": [], "29352": [], "29430": [], "29514": [], "29595": [], "29675": [], "29755": [], "29834": [], "29910": [], "29984": [], "30057": [], "30129": [], "30201": [], "30273": [], "30345": [], "30417": [], "30488": [], "30566": [], "30639": [], "30712": [], "30785": [], "30857": [], "30929": [], "31002": [], "31074": [], "31147": [], "31219": [], "31291": [], "31366": [], "31450": [], "31539": [], "31619": [], "31698": [], "31774": [], "31848": [], "31920": [], "31992": [], "32063": [], "32143": [], "32217": [], "32290": [], "32363": [], "32434": [], "32504": [], "32585": [], "32675": [], "32752": [], "32830": [], "32906": [], "32980": [], "33054": [], "33140": [], "33228": [], "33310": [], "33391": [], "33472": [], "33553": [], "33635": [], "33716": [], "33797": [], "33876": [], "33952": [], "34026": [], "34100": [], "34173": [], "34252": [], "34326": [], "34398": [], "34550": [], "34624": [], "34701": [], "34779": [], "34854": [], "34928": [], "35001": [], "35074": [], "35145": [], "35217": [], "35290": [], "35361": [], "35431": [], "35501": [], "35580": [], "35655": [], "35728": [], "35800": [], "35871": [], "35942": [], "36012": [], "36082": [], "36155": [], "36234": [], "36308": [], "36387": [], "36463": [], "36541": [], "36620": [], "36697": [], "36772": [], "36845": [], "36918": [], "36991": [], "37064": [], "37136": [], "37208": [], "37281": [], "37353": [], "37425": [], "37496": [], "37566": [], "37638": [], "37711": [], "37786": [], "37859": [], "37933": [], "38006": [], "38078": [], "38149": [], "38220": [], "38305": [], "38393": [], "38473": [], "38552": [], "38631": [], "38710": [], "38786": [], "38860": [], "38934": [], "39007": [], "39079": [], "39151": [], "39223": [], "39295": [], "39366": [], "39439": [], "39515": [], "39589": [], "39666": [], "39745": [], "39829": [], "39909": [], "39988": [], "40068": [], "40147": [], "40226": [], "40303": [], "40378": [], "40451": [], "40522": [], "40593": [], "40664": [], "40805": 85, "40875": [], "40946": [], "41016": [], "41088": [], "41158": [], "41228": [], "41300": [], "41373": [], "41450": [], "41526": [], "41600": [], "41678": [], "41756": [], "41832": [], "41909": [], "41987": [], "42063": [], "42143": [], "42219": [], "42376": [], "42529": [], "42603": [], "42675": [], "42746": [], "42817": [], "42886": [], "42954": [], "43024": [], "43100": [], "43171": [], "43241": [], "43310": [], "43378": [], "43453": [], "43523": [], "43593": [], "43663": [], "43734": [], "43804": [], "43884": [], "43957": [], "44029": [], "44102": [], "44175": [], "44247": [], "44318": [], "44390": [], "44461": [], "44537": [], "44609": [], "44680": [], "44749": [], "44819": [], "44888": [], "44957": [], "45027": [], "45096": [], "45165": 85, "45234": [], "45302": [], "45372": [], "45442": [], "45512": [], "45582": [], "45655": [], "45726": [], "45798": [], "45869": [], "45943": [], "46016": [], "46088": [], "46160": [], "46237": [], "46315": [], "46390": [], "46464": [], "46537": [], "46609": [], "46679": [], "46749": [], "46818": [], "46887": [], "46955": [], "47023": [], "47163": [], "47233": [], "47302": [], "47370": [], "47443": [], "47513": [], "47582": [], "47650": [], "47718": [], "47789": [], "47928": [], "47997": [], "48066": [], "48136": [], "48205": [], "48271": [], "48344": [], "48425": [], "48503": [], "48576": [], "48649": [], "48722": [], "48794": [], "48865": [], "48936": [], "49008": [], "49079": [], "49159": [], "49233": [], "49306": 85, "49382": [], "49464": [], "49540": [], "49614": [], "49686": [], "49761": [], "49839": [], "49913": [], "49986": [], "50058": [], "50200": [], "50270": [], "50339": [], "50409": [], "50481": [], "50551": [], "50620": [], "50692": [], "50767": [], "50839": [], "50915": [], "50990": [], "51073": [], "51153": [], "51231": [], "51308": [], "51385": [], "51464": [], "51541": [], "51618": [], "51695": [], "51851": [], "51929": [], "52006": [], "52083": [], "52161": [], "52237": [], "52313": [], "52386": [], "52457": [], "52527": [], "52596": [], "52670": [], "52744": [], "52815": [], "52900": [], "52980": [], "53057": [], "53134": [], "53208": [], "53280": [], "53351": 85, "53420": [], "53489": [], "53557": [], "53625": [], "53693": [], "53760": [], "53831": [], "53900": [], "53969": [], "54045": [], "54116": [], "54193": [], "54266": [], "54338": [], "54411": [], "54483": [], "54554": [], "54623": [], "54691": [], "54759": [], "54828": [], "54897": [], "55033": [], "55100": [], "55173": [], "55251": [], "55326": [], "55398": [], "55469": [], "55538": [], "55607": [], "55676": [], "55744": [], "55813": [], "55881": [], "55948": [], "56015": [], "56082": [], "56149": [], "56220": [], "56289": [], "56358": [], "56426": [], "56494": [], "56563": [], "56631": [], "56698": [], "56765": [], "56832": [], "56903": [], "56971": [], "57040": [], "57109": [], "57177": [], "57246": [], "57315": [], "57383": [], "57452": [], "57521": [], "im2": 85, "im3": 85, "msdki_invivo": 85, "insur": [85, 170, 219], "intris": [85, 170], "di": [85, 234], "smt2f": [85, 170, 177], "smt2di": [85, 170, 177], "ufa2": 85, "smt2ufa": [85, 170, 177], "ufa": [85, 87, 88, 170, 175, 177], "msdki_smt2_invivo": 85, "intrins": [85, 170], "confirm": [85, 87, 98], "rescal": [85, 170], "colleg": [85, 170], "misestim": [85, 170], "press": [85, 170], "27606": [85, 170], "kelm": [85, 170], "carson": [85, 170], "rp": [85, 170], "dc": 85, "reconst_msdki": [85, 95, 238], "sought": 86, "unsolv": 86, "fick2017": 86, "terminologi": 86, "au": [86, 165], "graphnet": [86, 165, 170, 247, 248], "sparsiti": [86, 90, 164, 170], "drastic": 86, "nervou": 86, "mous": [86, 137], "fetch_qtdmri_test_retest_2subject": [86, 177], "read_qtdmri_test_retest_2subject": [86, 177], "qtdmri": [86, 177, 237], "retest": [86, 165, 247, 248], "mice": [86, 165, 247, 248], "freeli": 86, "citeabl": 86, "wassermann2017": 86, "cc_mask": [86, 165], "5m": [86, 165], "visualise_gradient_table_g_delta_rainbow": [86, 177], "dmri_acquisition_schem": 86, "reconst_qtdmri": [86, 95, 238], "isolin": [86, 170], "subplot_titl": 86, "subject1": 86, "subject2": 86, "data_": 86, "mask_": 86, "gtab_": [86, 170], "enumer": [86, 87, 99, 125, 126, 130, 174], "data_middle_slic": 86, "mask_middle_slic": 86, "tenmod": 86, "overlai": [86, 105, 145], "mask_templ": 86, "greys_r": 86, "dmri_datasets_fa_with_ccmask": 86, "tau_min": 86, "tau_max": 86, "qtdmri_fit": 86, "cc_voxel": 86, "time_ord": [86, 170], "l1": [86, 90, 170, 171, 174], "cv": [86, 170], "qtdmri_mod": 86, "qtdmrimodel": [86, 177], "l1_regular": [86, 170], "l1_weight": [86, 170], "5th": [86, 170, 176, 199], "trend": 86, "plot_mean_with_std": 86, "ind1": 86, "plotcolor": 86, "std_mult": 86, "lw": 86, "fill_between": 86, "005": [86, 172], "msd_": 86, "4e": 86, "10e": 86, "delta_grid": 86, "msd_grid": 86, "meshgrid": 86, "d_grid": 86, "d_level": 86, "1e": [86, 87, 92, 163, 164, 166, 167, 168, 170, 171, 176, 228], "contourf": 86, "1e3": 86, "1e5": 86, "dashdot": 86, "marker": [86, 147], "0091": 86, "14e": 86, "set_ylim": 86, "set_xlim": 86, "009": [86, 123, 129], "0185": 86, "cb": [86, 163], "set_label": 86, "qt_indices_msd": 86, "slowli": 86, "nearli": [86, 174], "perfectli": [86, 100, 163, 167], "rtxp_": 86, "rtxp_grid": 86, "d_color": 86, "3e": [86, 87, 170], "6e": 86, "qt_indices_rtop": 86, "experienc": 86, "odd": [86, 166, 170, 176, 198, 231, 245], "arriv": 86, "qt_indices_rtap": 86, "9e": 86, "15e": 86, "qt_indices_rtpp": 86, "bigger": [86, 164, 174], "asid": 86, "sharpening_factor": 86, "conclud": 86, "tempor": [86, 142, 170, 241, 242], "briefli": [87, 88], "summar": [87, 88, 173], "dtd": [87, 88, 170], "langl": [87, 88, 170], "rangl": [87, 88, 170], "otim": [87, 88, 170], "product": [87, 88, 163, 164, 166, 170, 171, 174, 176], "cumul": [87, 88, 170, 174], "approx": [87, 88], "exp": [87, 88, 170, 174, 243], "inner": [87, 88, 163, 164, 170, 174], "ln": [87, 88], "s_1": [87, 88], "vdot": [87, 88], "s_n": [87, 88], "_1": [87, 88, 170, 241, 242], "_n": [87, 88, 170], "_i": [87, 88, 90, 170], "voigt": [87, 88, 170], "notat": [87, 88, 170, 223], "qte": [87, 165, 170], "qte_lte_pt": 87, "bten": [87, 164, 170, 172, 230, 231, 232, 237], "lte": [87, 164, 170], "pte": [87, 164, 170], "matrix_rank": 87, "qtimodel": [87, 88, 177], "qtifit": [87, 88, 177], "\u03bcfa": 87, "c_mu": [87, 88, 170, 177], "v_md": [87, 170, 177], "v_shear": [87, 170, 177], "shear": [87, 96, 131, 144, 156, 163, 164, 170, 171, 174, 176, 178, 219], "v_iso": [87, 170, 177], "c_md": [87, 170, 177], "\u03bc": 87, "c_m": [87, 170, 177], "c_c": [87, 170, 177], "k_bulk": [87, 170, 177], "bulk": [87, 170, 174], "k_shear": [87, 170, 177], "k_mu": [87, 170, 177], "carl": [87, 88, 170], "fredrik": [87, 88, 170], "multidimension": [87, 88, 164, 170, 172, 230], "039": [87, 88, 170], "reconst_qti": [87, 95, 238], "heteroskedast": 88, "mathrm": [88, 164, 170, 174, 241], "s_k": 88, "ldot": [88, 99], "ddot": 88, "semi": [88, 163, 164, 174], "succeq": 88, "unreli": [88, 169], "enfoc": 88, "semidefinit": [88, 165, 170], "sdp": [88, 170], "sc": [88, 142, 170, 174], "readili": 88, "licenc": 88, "routin": [88, 170, 174, 175, 235], "read_dib_217_lte_pte_st": [88, 177], "read_dib_70_lte_pte_st": [88, 177], "compare_qti_map": [88, 177], "showcas": [88, 89, 151, 152, 154, 155, 157, 230], "richer": 88, "emul": 88, "shorter": [88, 126, 167, 174, 176], "scan": [88, 169], "filip": 88, "szczepankiewicz": [88, 165], "szczepankiewicz_dib_2019": 88, "mark": [88, 102, 170, 174, 221, 237], "_217": 88, "suffix": 88, "data_img": [88, 165], "gtab_217": 88, "data_217": 88, "downsampl": [88, 114, 130, 177, 224, 234], "_70": 88, "gtab_70": 88, "data_70": 88, "consider": [88, 99, 130, 170, 176, 195], "qtimodel_217": 88, "qtifit_217": 88, "qtimodel_unconstrain": 88, "qtifit_unconstrain": 88, "sdpdc": [88, 170], "qtimodel_constrain": 88, "qtifit_constrain": 88, "\u00b5fa": 88, "clearli": [88, 254], "fall": [88, 163, 174, 176, 179, 229, 232], "rich": 88, "despit": 88, "cost": [88, 90, 99, 163, 170, 171], "dens": [88, 109, 163, 164, 169, 235], "boito": [88, 170, 235], "feragen": [88, 170], "118198": 88, "hoge": [88, 165], "waveform": [88, 165], "oil": [88, 165], "liquid": [88, 165], "crystal": [88, 165], "brief": [88, 111, 112, 165], "dib": [88, 165], "104208": [88, 165], "reconst_qtiplu": [88, 95, 238], "priori": [89, 116, 170], "rl": 89, "richardson1972": 89, "constantinides1997": 89, "promot": [89, 164, 170, 171, 221, 226], "rudin1992": 89, "wise": [89, 126, 167, 170, 172, 174, 176, 247, 248], "peak_direct": [89, 177, 228, 236], "symmetric362": [89, 165, 166, 170], "7e": [89, 170], "csf_respons": [89, 170, 176], "gm_respons": [89, 170, 176], "8e": [89, 170], "adequ": [89, 170], "impuls": [89, 170], "imprecis": [89, 170], "acqua2007": 89, "0017": [89, 170], "003": [89, 138, 140, 170, 176], "0008": [89, 170, 176], "default_respons": 89, "auto_response_sst": 89, "estimated_respons": 89, "arang": [89, 111, 112, 113, 114, 170, 172, 174], "rec_respons": 89, "single_peak_mask": 89, "rec_response_sign": 89, "bear": 89, "recon_typ": [89, 170, 176], "n_coil": [89, 170, 176], "suitabl": [89, 165, 167, 170, 241, 242], "smf": [89, 170, 176], "isn": [89, 142, 164], "ipat": [89, 170, 176], "asset": [89, 170, 176], "cover": [89, 97, 131, 163, 168, 219], "wherein": 89, "inclus": [89, 163, 174], "neither": [89, 164, 171, 174], "f_iso": [89, 170, 177], "ax0": 89, "wm_iso_partit": 89, "rumbafit": [89, 177], "combined_odf_iso": [89, 170, 177], "rumba_odf": 89, "rumba_peak": 89, "demand": 89, "gb": [89, 170], "singleton": [89, 170, 176, 218, 221], "data_tv": 89, "rumba_global_odf": 89, "pk": 89, "rumba_global_peak": 89, "bayesian": [89, 116, 158, 219], "josa": 89, "000055": 89, "constantinid": [89, 170], "atalar": [89, 170], "mcveigh": [89, 170], "offici": [89, 158, 159, 170], "rudin": [89, 170], "osher": [89, 170], "fatemi": [89, 170], "1992": [82, 89, 170, 229], "nonlinear": [89, 100, 145, 149, 158, 163, 165, 170, 176, 184, 233, 236, 247, 248], "physica": [89, 170], "phenomena": [89, 170], "0167": [89, 164, 170], "90242": [89, 170], "dellacqua2007": 89, "rizzo": [89, 170], "scifo": [89, 170], "clark": [89, 170], "scotti": [89, 170], "fazio": [89, 170], "bio": [89, 170], "tbme": [89, 170], "888830": [89, 170], "067": [89, 146], "reconst_rumba": [89, 95, 238], "dpp": [90, 234], "examin": [90, 102, 164, 170, 172, 239], "elast": [90, 170], "net": [90, 164, 169, 170, 174, 176, 193, 225], "zou2005": [90, 170], "y_i": [90, 168, 245], "lambda": [90, 113, 163, 166, 170, 175, 217], "w_j": 90, "2_j": 90, "balanc": [90, 170], "l2": [90, 144, 164, 170, 171, 174], "entri": [90, 163, 164, 170, 174, 217, 241], "sf_fit": 90, "sf_odf": 90, "sf_peak": 90, "sf_both": 90, "zou": [90, 170], "reconst_sfm": [90, 95, 238], "sf": [91, 164, 166, 167, 170, 222], "00015": 91, "symm_sign": 91, "sh_basi": [91, 170], "reproject": 91, "high_res_sph": 91, "symm_reconst": 91, "asymmetr": [91, 145, 158, 163, 176, 208, 234, 236, 245], "odf2": 91, "n_pts_hemispher": 91, "asym_odf": 91, "asym_sign": 91, "asym_reconst": 91, "deal": [91, 94, 171, 233, 234, 239], "full_basi": [91, 166, 170], "asym_reconst_ful": 91, "reconst_sh": [91, 95, 234, 238], "merlet2013": 92, "\u00f6zarslan2008": 92, "\u00f6zarslan2009": 92, "shoremodel": [92, 93, 177], "fetch_isbi2013_2shel": [92, 177], "contest": 92, "2013_isbi": [92, 247, 248], "xmin": 92, "xmax": 92, "ymin": 92, "ymax": 92, "zmin": 92, "zmax": 92, "zeta": [92, 170], "lambdan": [92, 170], "lambdal": [92, 170], "cheng2011": 92, "asm": [92, 93, 170], "asmfit": [92, 93, 170], "toronto": 92, "honolulu": 92, "hi": [92, 164, 170], "eap": [92, 164, 170], "compress": [92, 130, 168, 170, 174, 176, 195, 196, 217], "cheng": [92, 169, 170, 172], "insight": [92, 170], "unifi": [92, 164, 170, 175, 176, 203], "961": [82, 92, 219], "reconst_shor": [92, 95, 238], "shore_map": 93, "ON": [93, 164, 170, 171, 176], "reconst_shore_metr": [93, 95, 238], "physiolog": [94, 170, 176, 199], "pernici": 94, "particip": [94, 171], "young": 94, "yendiki": 94, "refit": 94, "intermitt": [94, 222, 228, 234], "ne": 94, "fetch_stanford_hardi": [94, 96, 97, 177], "dti_wl": 94, "roi_idx": 94, "fit_wl": 94, "fa1": 94, "evals1": 94, "evecs1": 94, "cfa1": 94, "tensor_ellipsoids_wl": 94, "noisy_data": 94, "noisy_idx": 94, "fit_wls_noisi": 94, "fa2": 94, "evals2": 94, "evecs2": 94, "cfa2": 94, "tensor_ellipsoids_wls_noisi": 94, "distort": [94, 151, 163, 169, 174, 237], "dti_restor": 94, "fit_restore_noisi": 94, "fa3": 94, "evals3": 94, "evecs3": 94, "cfa3": 94, "tensor_ellipsoids_restore_noisi": 94, "convinc": 94, "ourselv": [94, 143], "ravel": [94, 111, 113, 174, 224], "dti_fa_distribut": 94, "resembl": [94, 165], "importantli": 94, "believ": 94, "koldewynb": 94, "kakunooria": 94, "kanwish": 94, "fischl": 94, "reject": [94, 167, 170, 176, 197, 199], "chung": [94, 170, 231], "sw": [94, 170, 176, 199], "henri": [94, 126, 170, 176, 199], "uncertainti": [94, 142, 170, 176, 199], "restore_dti": [94, 95, 219, 238], "examples_builtreconstruct": 95, "mutual": [96, 97, 156, 163, 176, 178], "mattes03": [96, 97, 163], "ant": [96, 97, 104, 105, 106, 116, 156, 163, 170, 176, 186], "avants11": [96, 97, 104, 105, 106, 156, 163], "twice": [96, 143, 164, 166, 174, 219, 222], "simplifi": [96, 114, 143, 158, 163, 168, 170, 174, 221, 225, 231, 239], "regtool": [96, 97, 102, 104, 105, 106, 177, 226, 227, 230], "fetch_syn_data": [96, 177], "transform_centers_of_mass": [96, 177], "mutualinformationmetr": [96, 97, 177], "affineregistr": [96, 97, 177, 218, 234], "translationtransform3d": [96, 97, 177], "rigidtransform3d": [96, 97, 177], "affinetransform3d": [96, 177], "affine_registr": [96, 97, 104, 177], "register_dwi_to_templ": [96, 177], "static_data": [96, 97], "static_affin": [96, 97, 104, 106, 163], "static_img": [96, 97], "hardi150": [96, 97, 151, 155], "static_grid2world": [96, 97, 163], "folder2": 96, "moving_data": 96, "moving_affin": [96, 97, 104, 106, 163], "moving_img": 96, "moving_grid2world": [96, 97, 163], "affine_map": [96, 97, 106, 163], "overlay_slic": [96, 97, 104, 106, 177], "resampled_0": 96, "resampled_1": 96, "resampled_2": 96, "640x480": [96, 97, 104, 105, 106], "rough": [96, 99], "c_of_mass": 96, "occupi": [96, 164, 170, 172], "roughli": [96, 104, 106, 123, 163, 171], "transformed_com_0": 96, "transformed_com_1": 96, "transformed_com_2": 96, "translat": [96, 97, 104, 131, 144, 156, 164, 171, 174, 176, 177, 178, 208, 228], "joint": [96, 163, 176, 178, 243], "margin": [96, 163, 174, 176, 178], "integ": [96, 130, 131, 142, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 217, 219, 226, 230, 233], "nbin": [96, 97, 163, 171, 176, 178], "sampling_prop": [96, 97, 176, 178], "optima": 96, "pyramid": [96, 105, 106, 163, 176, 179], "flexibl": [96, 113, 166, 170, 171, 219, 245], "indirectli": 96, "coarsest": [96, 163, 176, 178], "medium": [96, 121, 176, 208], "finest": [96, 105, 106, 163, 176, 178], "level_it": [96, 97, 102, 104, 105, 106, 163, 176, 178, 179], "nx": [96, 164], "nz": [96, 164], "affreg": [96, 97], "dictionari": [96, 134, 138, 141, 163, 164, 165, 168, 169, 170, 172, 174, 175, 176, 214, 215, 222, 237], "regtransform": 96, "params0": [96, 163], "starting_affin": [96, 97, 163, 176, 234], "transformed_trans_0": 96, "transformed_trans_1": 96, "transformed_trans_2": 96, "rigid": [96, 97, 99, 100, 104, 156, 171, 176, 177, 178, 184, 208, 211, 222, 228, 231, 234], "slight": [96, 143], "transformed_rigid_0": 96, "transformed_rigid_1": 96, "transformed_rigid_2": 96, "transformed_affine_0": 96, "transformed_affine_1": 96, "transformed_affine_2": 96, "center_of_mass": [96, 104, 177], "string": [96, 138, 141, 146, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 192, 222, 223, 230, 231, 237], "rigid_isosc": [96, 104, 176, 177, 178], "rigid_sc": [96, 104, 176, 177, 178], "xformed_img": [96, 97], "xformed_affine_0": 96, "xformed_affine_1": 96, "xformed_affine_2": 96, "bvals_fil": [96, 176, 201, 212], "bvecs_fil": [96, 176, 201, 212], "opposit": [96, 123, 163, 170, 221], "revers": [96, 113, 169, 170, 171, 246], "xformed_dwi": 96, "templat": [96, 102, 104, 163, 165, 170, 175, 217, 219, 230, 237, 247, 248], "reg_method": [96, 163], "aff": [96, 98, 163], "xformed_dwi_0": 96, "xformed_dwi_1": 96, "xformed_dwi_2": 96, "dwi_to_templ": 96, "haynor": [96, 97, 163], "vessel": [96, 97, 163], "lewellen": [96, 97, 163], "eubank": [96, 97, 163], "pet": [96, 97, 163], "ct": [96, 97, 163, 170, 177, 234], "chest": [96, 97, 163], "avant": [96, 97, 104, 105, 106, 116, 156, 163], "tustison": [96, 97, 104, 105, 106, 116, 156, 163], "song": [96, 97, 104, 105, 106, 156, 163], "533": [82, 96, 217], "affine_registration_3d": [96, 103, 238], "pixel": [97, 102, 151, 163, 166, 171, 174, 175], "circumst": 97, "cardiac": 97, "priorit": 97, "register_seri": [97, 177], "pad_bi": 97, "constant_valu": 97, "affmat": 97, "sin": [97, 143, 164, 172, 174, 246], "deregist": 97, "transl": 97, "static_mask": [97, 163], "moving_mask": [97, 163], "reg_func": 97, "fignam": 97, "scope": 97, "hopefulli": 97, "transformed_pipelin": 97, "border": [97, 137, 226], "troublesom": 97, "sz": [97, 169], "pd": 97, "squares_st": 97, "int32": [97, 163, 174, 175], "squares_mv": 97, "deregistered_squar": 97, "masked_stat": 97, "transformed_squar": 97, "pin": [97, 228, 235, 237], "transformed_squares_mask": 97, "transformed_squares_mask_2": 97, "transformed_squares_mask_3": 97, "xform": [97, 163], "series_affin": [97, 163], "series_mask_1": 97, "series_mask_2": 97, "affine_registration_mask": [97, 103, 238], "coregist": 98, "atla": [98, 108, 109, 123, 124, 147, 148, 165, 171, 173, 247, 248], "garyfallidis15": [98, 99, 108, 148, 156, 163, 176, 211], "shuffl": [98, 169], "pairwis": [98, 99, 126, 163, 171], "centroid": [98, 108, 111, 113, 114, 123, 125, 163, 171, 173, 176, 177, 211], "streamlinear": [98, 99, 108, 177, 222, 226], "groupwise_slr": [98, 177], "read_five_af_bundl": [98, 177], "show_bundl": [98, 177], "basicconfig": 98, "arcuat": [98, 108, 109, 124, 134, 147, 148, 165], "fasciculi": 98, "save_a": [98, 175], "before_group_registr": 98, "nativ": [98, 99, 130, 134, 135, 146, 147, 148, 163, 168, 175, 176, 203, 211], "bundles_reg": 98, "after_group_registr": 98, "romerobascones22": 98, "romero": [98, 233, 234, 235], "bascon": [98, 233, 234, 235], "bundleatlas": 98, "atlas": [98, 163, 165, 247, 248], "bundle_group_registr": [98, 103, 238], "garyfallidis14": [99, 146, 147, 148, 149, 163, 176, 211], "cingulum": [99, 125, 135, 165], "sleep": 99, "streamlinelinearregistr": [99, 177], "two_cingulum_bundl": [99, 125, 177], "set_number_of_point": [99, 100, 111, 112, 130, 177, 217, 219, 220, 222, 226, 237], "cb_subj1": [99, 125], "cb_subj2": 99, "srr": 99, "srm": 99, "cb_subj2_align": 99, "show_both_bundl": [99, 125], "lines_actor": 99, "rotatez": [99, 125], "orang": [99, 135], "before_registr": 99, "after_registr": 99, "stai": [99, 113, 241, 242], "bmd": [99, 163], "operatornam": [99, 143, 243, 246], "flip": [99, 108, 163, 171, 174, 220, 230, 245], "mdf": [99, 100, 108, 111, 114, 163, 174, 176, 177, 184, 208, 230], "eq": [99, 163, 164, 170, 220], "row": [99, 109, 113, 130, 131, 137, 144, 163, 164, 165, 166, 170, 171, 172, 174, 175, 228], "primarili": [99, 170], "visser": 99, "intact": [99, 163, 174], "x_": 99, "prove": 99, "nonneg": [99, 170, 174], "satisfi": [99, 164, 174], "inequ": [99, 164, 170], "formul": [99, 116, 164, 170, 241, 243], "underset": 99, "compos": [99, 163, 164, 170, 174, 176], "bundle_registr": [99, 103, 238], "nonlinearli": [100, 149, 163, 176, 184], "chandio23": [100, 149], "chandio20": [100, 147], "uncin": [100, 147, 149], "streamwarp": [100, 177], "bundlewarp_vector_fil": [100, 177], "bundlewarp_shape_analysi": [100, 177], "fetch_bundle_warp_dataset": [100, 177], "unlist_streamlin": [100, 163, 177], "viz_two_bundl": [100, 177], "viz_vector_field": [100, 177], "viz_displacement_mag": [100, 177], "uf_l": [100, 147], "figshar": [100, 147, 148, 149, 247, 248], "test_bundles_for_dipi": [100, 149], "22557733": [100, 149], "bundle_warp_fil": 100, "s_uf_l_path": 100, "s_uf_l": [100, 149], "m_uf_l_path": 100, "m_uf_l": [100, 149], "uf_subj1": 100, "uf_subj2": 100, "static_and_mov": 100, "trade": [100, 149, 163, 176, 184], "deformed_bundl": [100, 163], "moving_align": [100, 163], "match_pair": 100, "warp_map": 100, "max_it": [100, 163, 171, 176, 184], "080122470855713": 100, "warp": [100, 102, 105, 106, 149, 156, 163, 165, 175, 176, 179, 184, 233, 237], "static_and_partially_deform": 100, "linearli": [100, 163, 174, 176, 184, 237], "linearly_and_nonlinearly_mov": 100, "c1": [100, 165, 175], "points_align": [100, 175], "partially_vectorfield": 100, "partially_vectorfield_over_linearly_mov": 100, "partially_deformation_magnitude_over_linearly_mov": 100, "new_tractogram": 100, "partially_deformed_bundl": 100, "deformed_bundle2": 100, "extrem": [100, 111, 113, 125, 163, 171, 176, 184], "4480140209198": 100, "static_and_fully_deform": 100, "fully_vectorfield": 100, "fully_vectorfield_over_linearly_mov": 100, "fully_deformation_magnitude_over_linearly_mov": 100, "no_disk": [100, 163, 173, 176, 181, 182], "fully_deformed_bundl": 100, "biorxiv": [100, 128, 149, 163, 176, 184], "stnd": 100, "neurip": 100, "bundlewarp_registr": [100, 103, 238], "skimag": [102, 171, 217, 219], "imwarp": [102, 105, 106, 177, 219], "symmetricdiffeomorphicregistr": [102, 105, 106, 177], "ssdmetric": [102, 105, 177], "ellips": [102, 164], "draw_ellips": 102, "rr": 102, "img_ref": 102, "img_in": 102, "show_imag": 102, "img_warp": 102, "fig_nam": 102, "ssd": [102, 105, 156, 163, 170, 176, 179], "02f": 102, "step_length": [102, 163, 176, 179], "sdr": [102, 105, 106, 221, 222, 235], "ndim": [102, 105, 164, 170, 172, 228], "inv_it": [102, 105, 163, 176, 179], "ss_sigma_factor": [102, 163, 176, 179], "opt_tol": [102, 163, 176, 179], "plot_2d_diffeomorphic_map": [102, 105, 177, 226], "38297": 102, "57499": 102, "00001": [102, 105], "71281": 102, "99999": [102, 105], "51155": 102, "138626": 102, "743256": 102, "57159": 102, "77189": 102, "51843": 102, "39175": 102, "77338": 102, "40704": 102, "40047": 102, "26481": 102, "818726": 102, "22971": 102, "945564": 102, "12815": 102, "529335": 102, "99735": 102, "59097": 102, "39428": 102, "35901": 102, "08593": 102, "9184668": 102, "04836": 102, "811745": 102, "83968": 102, "33975": 102, "619865": 102, "683014": 102, "771965": 102, "96909": 102, "14295": 102, "97683": 102, "927216": 102, "678276": 102, "898346": 102, "99135": 102, "97298": 102, "460953": 102, "87729": 102, "2770734": 102, "register_binary_fuzzi": [102, 103, 238], "examples_builtregistr": 103, "streamline_registr": [103, 104, 177, 238], "syn_registration_3d": [103, 106, 217, 238], "syn_registration_2d": [103, 105, 238], "008": 105, "greene17": 104, "sphx_glr_examples_built_streamline_analysis_streamline_tool": [], "syn_registr": [104, 177, 226], "fetch_mni_templ": [104, 177], "read_mni_templ": [104, 177], "horizon": [104, 145, 158, 176, 177, 203, 223, 228, 229, 230, 231, 234, 236, 237], "dwi_data": 104, "dwi_affin": [104, 163], "dwi_img": 104, "dwi_vox_s": 104, "dwi_bval": 104, "dwi_bvec": 104, "t2": [104, 165, 166, 174, 217, 247, 248], "mni": [104, 108, 147, 148, 165, 217, 219, 247, 248], "1x1x1": [104, 166, 171, 176, 207], "2x2x2": [104, 163], "img_t2_mni": 104, "t2_mni_data": 104, "t2_mni_affin": 104, "t2_mni_voxel_s": 104, "t2_resliced_data": 104, "t2_resliced_affin": 104, "skull": [104, 105, 106, 116], "b0_idx_stanford": 104, "tolist": 104, "dwi_data_noskul": 104, "b0_data_stanford": 104, "mean_b0_masked_stanford": 104, "rigidli": 104, "eventu": 104, "syn": [104, 105, 106, 116, 156, 163, 217, 219, 234, 247, 248], "warped_b0": [104, 163], "warped_b0_affin": 104, "avants09": [104, 105, 106, 156], "final_warped_b0": 104, "prealign": [104, 163], "transformed_sagitt": 104, "transformed_coron": 104, "transformed_axi": 104, "forget": 104, "warp_b0_affin": 104, "undo": 104, "mni_t2_streamlines_using_affine_reg": 104, "sft_in_t2_using_aff_reg": 104, "world_coord": [104, 134, 175], "out_png": [104, 175], "streamlines_dsn_mni_aff_reg": 104, "resiz": 104, "mni_t2_streamlines_using_syn": 104, "transform_points_invers": [104, 163, 177], "sft_in_t2_using_syn": 104, "streamlines_dsn_mni_syn": 104, "superiorfrontal_aff_reg": 104, "superiorfrontal_syn": 104, "epstein": [104, 105, 106, 156, 163], "gee": [104, 105, 106, 116, 156, 163], "elderli": [104, 105, 106, 156, 163], "neurodegen": [104, 105, 106, 156, 163], "grafton": 104, "ccmetric": [105, 106, 177, 219, 228], "fname_mov": 105, "reg_o": [105, 165], "fname_stat": 105, "reg_c": [105, 165], "overlay_imag": [105, 177], "input_imag": [105, 171], "decis": 105, "dim": [105, 158, 163, 221, 235], "n_0": [105, 106], "n_1": [105, 106], "n_k": [105, 106, 170], "diffeomorphicmap": [105, 106, 175, 177, 231, 235], "forth": [105, 106], "diffeomorphic_map": 105, "88535": 105, "92105": 105, "85171": 105, "warped_mov": [105, 106, 156, 163, 176], "direct_warp_result": 105, "warped_stat": [105, 106], "inverse_warp_result": 105, "callback_cc": 105, "react": [105, 221], "registrationstag": [105, 177], "scale_end": 105, "wmove": 105, "moving_imag": [105, 163], "wstatic": 105, "static_imag": [105, 163], "t1_name": 105, "b0_name": 105, "syn_data": [105, 106, 247, 248], "sigma_diff": [105, 163, 234], "callback": [105, 134, 137, 163, 164, 169, 175], "t1_slices_input": 105, "t1_slices_r": 105, "inv_warp": 105, "t1_slices_res2": 105, "diffeomorphic_map_b0": 105, "99708": 105, "999725": 105, "99444": 105, "modal": [106, 163, 176, 179], "stanford_b0": 106, "stanford_b0_affin": 106, "b0_fname": 106, "syn_b0": 106, "syn_b0_affin": 106, "stanford_b0_mask": 106, "syn_b0_mask": 106, "pre_align": 106, "02783543e": 106, "83019053e": 106, "07735639e": 106, "57654118e": 106, "34051706e": 106, "41918267e": 106, "66525861e": 106, "23579799e": 106, "34288908e": 106, "90262026e": 106, "80820307e": 106, "46216651e": 106, "input_3d": 106, "0x00000239bfbd08b0": [], "brain_extraction_dwi_1": [107, 115, 238], "garyfallidis17": [108, 123, 148, 163, 171, 176, 205, 208, 211], "whole_brain_slr": 108, "get_two_hcp842_bundl": [108, 109, 123, 124, 177], "fetch_target_tractogram_hcp": [108, 109, 177], "fetch_bundle_atlas_hcp842": [108, 109, 124, 177], "get_bundle_atlas_hcp842": [108, 177], "get_target_tractogram_hcp": [108, 109, 177], "target_fil": 108, "target_fold": 108, "atlas_fil": [108, 124], "atlas_fold": [108, 124], "all_bundles_fil": 108, "sft_atla": 108, "atlas_head": 108, "sft_target": 108, "target_head": 108, "tractograms_initi": [108, 109], "qb_centroids1": 108, "qb_centroids2": 108, "randomst": [108, 169, 174], "slr_transform": [108, 176, 208], "npy": [108, 142, 147, 148, 168, 176, 217], "tractograms_after_registr": 108, "millimet": [108, 130, 142, 163, 170, 171], "model_clust_thr": [108, 171, 176, 208], "reduction_thr": [108, 171, 176, 208], "pruning_thr": [108, 171, 176, 208], "reduction_dist": [108, 171, 176, 208], "pruning_dist": [108, 171, 176, 208], "diferect": 108, "mam": [108, 171, 176, 208, 229], "neighbour": [108, 166, 174, 176, 202], "model_af_l_fil": [108, 109, 123, 124], "model_cst_l_fil": [108, 109, 123, 124], "sft_af_l": [108, 109, 124], "model_af_l": [108, 109, 123, 124], "17281532": [108, 109, 124], "55606842": [108, 109, 124], "92485857": [108, 109, 124], "028": [103, 104, 108, 109, 124, 238], "af_l_model_bundl": [108, 109], "rb": [108, 171, 232], "recognized_af_l": [108, 109], "af_l_label": 108, "model_bundl": [108, 171, 173], "af_l_recognized_bundl": [108, 109], "reco_af_l": 108, "af_l_rec_1": 108, "af_l_org_1": 108, "af_l_recognized_bundle2": 108, "af_l_rec_2": 108, "af_l_org_2": 108, "af_l_recognized_bundle3": 108, "af_l_rec_3": 108, "af_l_org_3": 108, "r_recognized_af_l": 108, "r_af_l_label": 108, "pruned_streamlin": [108, 171], "af_l_refine_recognized_bundl": 108, "af_l_rec_refin": 108, "af_l_org_refin": 108, "sft_cst_l": 108, "model_cst_l": [108, 123], "cst_l_model_bundl": 108, "recognized_cst_l": 108, "cst_l_label": 108, "cst_l_recognized_bundl": 108, "reco_cst_l": 108, "cst_l_rec_1": 108, "cst_l_org_1": 108, "cst_l_recognized_bundle2": 108, "cst_l_rec_2": 108, "cst_l_org_2": 108, "cst_l_recognized_bundle3": 108, "cst_l_rec_3": 108, "cst_l_org_3": 108, "r_recognized_cst_l": 108, "r_cst_l_label": 108, "cst_l_refine_recognized_bundl": 108, "cst_l_rec_refin": 108, "cst_l_org_refin": 108, "chandio2020": [108, 124, 125, 171, 173, 176, 182, 183, 208], "risach": [108, 124, 125, 147, 171, 173, 176, 182, 183, 208], "bullock": [108, 124, 125, 147, 171, 173, 176, 182, 183, 208, 234], "fc": [108, 124, 125, 147, 171, 173, 176, 182, 183, 208], "harezlak": [108, 124, 125, 147, 171, 173, 176, 182, 183, 208], "rep": [108, 124, 125, 147, 171, 173, 174, 176, 182, 183, 208], "17149": [108, 124, 125, 147, 171, 173, 176, 182, 183, 208], "bundle_extract": [108, 115, 222, 229, 238], "stonge2022": [109, 171], "fss": [109, 177], "faststreamlinesearch": [109, 177], "nearest_from_matrix_row": [109, 177], "hcp_file": 109, "faststreamlinessearch": 109, "ref_streamlin": [109, 171], "max_radiu": [109, 171], "radius_search": [109, 171, 177], "cautiou": 109, "fs_tree_af": 109, "coo_mdist_mtx": 109, "ids_": 109, "ids_ref": 109, "col": [109, 137], "af": [109, 123, 124, 134, 164, 165], "nn_": 109, "nn_ref": 109, "nn_dist": 109, "colormap_lookup_t": [109, 126, 135, 137, 175], "scale_rang": [109, 126, 135, 137], "lookup_colormap": [109, 126, 135, 137, 175], "scalar_bar": [109, 126, 135], "af_l_recognized_bundle_dist": 109, "ref_color": 109, "af_l_model_bundle_reach": 109, "fast_streamline_search": [109, 115, 238], "familiar": [111, 112], "averagepointwiseeuclideanmetr": [111, 112, 123, 177], "euclideanmetr": 111, "cosinemetr": [111, 112, 113, 177], "identityfeatur": [111, 112, 177], "centerofmassfeatur": [111, 177], "midpointfeatur": [111, 177], "arclengthfeatur": [111, 113, 177], "vectorofendpointsfeatur": [111, 112, 113, 177], "get_streamlin": [111, 112], "fornix": [111, 112, 113, 114, 158, 165, 171], "unalt": 111, "nb_point": [111, 112, 123, 171, 174, 219], "qb": [111, 112, 113, 114, 123, 171, 221], "nb": [111, 112, 114, 170], "predetermin": 111, "perman": 111, "graviti": [111, 163], "wiki": [111, 112, 113, 143, 164, 165, 170, 171], "belong": [111, 112, 113, 131, 147, 171, 173, 176], "create_colormap": [111, 112, 113, 114], "colormap_ful": [111, 112, 113, 114], "center_of_mass_featur": 111, "halfwai": [111, 163], "midpoint_featur": 111, "arclength_featur": 111, "ambigu": 111, "vector_of_endpoints_featur": 111, "075": 111, "segment_clustering_featur": [111, 115, 238], "sumpointwiseeuclideanmetr": [112, 113, 177], "won": [112, 123, 174, 222, 228, 230], "0x00000239bdcc3ac0": 112, "0x00000239a4841510": 112, "cosine_metr": 112, "segment_clustering_metr": [112, 115, 238], "n_i": [113, 130, 170, 174], "modular": [113, 175, 176, 203], "subclass": [113, 164, 170, 171], "hierarch": [113, 168], "clustermap": [113, 114, 177], "arc": [113, 163, 171], "redefin": 113, "infer_shap": [113, 177], "__init__": [113, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 219], "is_order_invari": [113, 171, 177], "educ": [113, 114], "neuroanatomi": [113, 114], "fornix_clusters_arclength": 113, "cosin": [113, 130, 164, 171], "minu": [113, 163, 164, 166, 167, 170, 171, 174, 176, 195, 196, 198, 202, 209, 211], "wikipedia": [113, 143, 144, 164, 170, 171, 246], "cosine_similar": [113, 169], "are_compat": [113, 168, 171, 177, 234], "shape1": [113, 171], "shape2": [113, 171], "v2": [113, 164], "cos_theta": 113, "arccosin": 113, "fornix_clusters_cosin": 113, "segment_extending_clustering_framework": [113, 115, 238], "pickl": [114, 142, 177, 219], "save_pickl": [114, 142, 177], "10mm": [114, 171, 174], "upsampl": [114, 166, 171, 174], "0x00000239bf8dace0": 114, "83774": 114, "9259": 114, "322784": 114, "108505": 114, "84363": 114, "91885": 114, "40357": 114, "25677": 114, "7293": 114, "48337": 114, "60328": 114, "137825": 114, "238976": 114, "51007": 114, "04564": 114, "460205": 114, "542404": 114, "6024": 114, "14851": 114, "84209": 114, "98937": 114, "57682": 114, "63652": 114, "72344": 114, "60828": 114, "939186": 114, "40846": 114, "158745": 114, "745346": 114, "002625": 114, "82582": 114, "02451": 114, "43942": 114, "06974": 114, "fornix_initi": 114, "fornix_centroid": 114, "fornix_clust": 114, "pkl": 114, "segment_quickbundl": [114, 115, 217, 221, 225, 238], "examples_builtsegment": 115, "tissue_classif": [115, 116, 238], "mrf": [116, 158, 177, 219], "zhang": [116, 171, 174], "zhang2001": 116, "avants2011": [116, 163], "fsl": [116, 160, 165, 170, 176, 186, 199, 230, 241, 242], "atropo": 116, "strip": [116, 228], "img_ax": 116, "imgplot": 116, "img_cor": 116, "t1_imag": 116, "pad_inch": 116, "adult": 116, "100th": 116, "t0": [116, 164], "total_tim": 116, "final_seg": 116, "59300875663757": 116, "light": 116, "bradi": 116, "cook": 116, "multivari": 116, "reconst_dsid_1": [119, 120, 238], "examples_builtsimul": 120, "simulate_multi_tensor": [120, 122, 238], "simulate_dki": [120, 121, 238], "barrier": 121, "media": 121, "rnh2015": 121, "multi_tensor_dki": [121, 177], "decompose_tensor": [121, 177], "from_lower_triangular": [121, 177], "small_64d": [121, 165, 172], "circ": [121, 170], "fie": 121, "signal_dki": 121, "signal_noisi": [121, 122], "decompos": 121, "dt_eval": 121, "dt_evec": 121, "signal_dti": 121, "simulated_dki_sign": 121, "simulated_sign": 122, "cach": [122, 166, 174, 177, 224], "multi_tensor_simul": 122, "diverg": [123, 174], "yeatman2012": [123, 173], "dsa": 123, "metricspe": [123, 177], "grab": [123, 165, 237], "bundles_path": 123, "fetch_bundles_2_subject": [123, 134, 135, 137, 177], "bundles_fold": 123, "cst_l_file": 123, "bundles_2_subject": [123, 134, 137, 165, 247, 248], "subj_2": [123, 165], "bundles_cst": 123, "af_l_fil": 123, "bundles_af": 123, "cst_l": [123, 147, 233], "af_l": [123, 124, 147, 148, 165, 171, 176], "cluster_cst_l": 123, "standard_cst_l": 123, "cluster_af_l": 123, "standard_af_l": 123, "oriented_cst_l": 123, "orient_by_streamlin": [123, 173, 177], "oriented_af_l": 123, "volumetr": 123, "fetch_bundle_fa_hcp": [123, 177, 247], "fa_affin": 123, "hcp_bundle_fa": 123, "w_cst_l": 123, "gaussian_weight": [123, 177], "w_af_l": 123, "profile_cst_l": 123, "profile_af_l": 123, "tract_profil": 123, "robert": [123, 173, 235], "dougherti": [123, 173], "nathaniel": [123, 173], "myall": [123, 173], "heidi": [123, 173], "feldman": [123, 173], "e49790": [123, 173], "afq_tract_profil": [123, 129, 238], "assignment_map": [124, 163, 177], "fasiculu": 124, "fake_tub": 124, "af_l_before_assignment_map": 124, "indx": [124, 173], "si": [124, 174], "disks_color": 124, "af_l_after_assignment_map": 124, "bundle_assignment_map": [124, 129, 238], "whatsoev": 125, "dissimilar": [125, 163], "bundle_shape_similar": [125, 129, 177, 231, 238], "bundle1": [125, 135, 171, 174], "bundle2": [125, 135, 171, 174], "streamtube_actor": 125, "two_bundl": 125, "cluster_thr": [125, 146, 175, 176, 203], "clust_thr": [125, 171, 176, 183, 208], "ba_scor": 125, "6833333333333333": 125, "lenient": 125, "jordan_2018_plm": [126, 128], "cluster_confid": [126, 129, 177, 238], "40mm": 126, "cci": [126, 174], "long_streamlin": 126, "hue": [126, 135], "satur": [126, 135], "lut_cmap": [126, 135], "hue_rang": [126, 135, 137], "saturation_rang": [126, 135, 137], "bar3": [126, 135], "stream_actor": [126, 134, 135], "pop": [126, 128, 136], "cci_streamlin": 126, "landscap": 126, "probe": [126, 167], "phenomenon": 126, "lone": 126, "vote": 126, "lend": 126, "cci_histogram": 126, "histogram": [126, 130, 163, 164, 171, 175], "keep_streamlin": 126, "keep_streamlines_actor": 126, "filtered_cci_streamlin": 126, "keshavan": 126, "therapi": 128, "shortest": [128, 164, 174], "treatment": [128, 143], "gross": 128, "tumor": [128, 234], "gtv": 128, "mpl": [128, 175, 219, 226], "lesion": 128, "electrod": 128, "surface_opac": [128, 136], "surface_color": [128, 136, 175], "seedroi_actor": [128, 136], "plm_roi_sl": 128, "transpar": [128, 136, 175, 176, 203], "hypothesi": 128, "motor": 128, "cortico": 128, "path_length_map_base_roi": 128, "wmpl": 128, "example_cc_path_length_map": 128, "ignor": [128, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 203, 222, 226, 230], "wmpl_show": 128, "masked_wher": 128, "slx": 128, "sly": 128, "slz": 128, "path_length_map": [128, 129, 238], "plan": [128, 144, 222, 228, 241, 242], "neuro": 128, "oncologi": 128, "examples_builtstreamline_analysi": 129, "streamline_length": [129, 130, 238], "approx_polygon_track": [130, 177, 234], "simulated_bundl": 130, "no_streamlin": 130, "burlywood": 130, "length_histogram": 130, "2mm": 130, "bundle_downsampl": 130, "n_pts_d": 130, "curvi": 130, "bundle_downsampled2": 130, "n_pts_ds2": 130, "lossi": 130, "bundle_actor": 130, "bundle_actor2": 130, "bundle_actor3": 130, "simulated_cosine_bundl": 130, "equidist": 130, "obviou": 130, "great": [130, 164], "n_pts_histogram": 130, "lengths_downsampl": 130, "lengths_downsampled2": 130, "id": [130, 164, 171, 175, 176], "lengths_plot": 130, "meant": [131, 164, 166, 169, 170, 174], "labels_img": 131, "cc_streamlin": 131, "other_streamlin": 131, "cc_streamlines_actor": 131, "corpuscallosum_axi": 131, "corpuscallosum_sagitt": 131, "return_map": [131, 164, 170, 174], "mapping_as_streamlin": [131, 174], "log1p": 131, "gyru": 131, "surpris": 131, "tricki": 131, "lr_superiorfrontal_track": 131, "dm": [131, 163, 174], "int16": [131, 146, 164, 168, 170, 172], "lr_sf_trk": 131, "footnot": 131, "aparc": [131, 165, 230], "aseg": 131, "mgz": 131, "lie": [131, 164, 174], "label_info": 131, "4x4": [131, 163, 164, 168, 175], "071": [], "examples_builtvisu": 133, "viz_roi_contour": [133, 136, 238], "viz_bundl": [133, 135, 238], "viz_advanc": [133, 134, 222, 238], "thin": [134, 167, 174], "read_bundles_2_subject": [134, 135, 177, 219], "dialog": 134, "snapshot": [134, 147], "primit": 134, "slider": [134, 175, 219, 221, 222, 234, 237], "lineslider2d": [134, 175], "tar": 134, "38477": 134, "97756fbef11ce2df31f1bedf1fc7aac7": 134, "exp_bundles_and_map": [134, 137], "subj_1": [134, 135, 137, 165], "cc_1": [134, 165], "1mm": [134, 171, 174], "image_actor_z": 134, "slicer_opac": 134, "image_actor_x": 134, "x_midpoint": 134, "round": [134, 164, 169, 170, 174, 218, 221, 226, 227], "image_actor_i": 134, "y_midpoint": 134, "image_actor": 134, "showmanag": [134, 137, 175], "show_m": [134, 137], "line_slider_z": 134, "min_valu": [134, 175], "max_valu": [134, 170, 175], "initial_valu": [134, 175], "text_templ": [134, 175], "0f": 134, "line_slider_x": 134, "line_slider_i": 134, "opacity_slid": 134, "change_slice_z": 134, "change_slice_x": 134, "change_slice_i": 134, "change_opac": 134, "on_chang": [134, 175], "build_label": [134, 177], "textblock2d": [134, 137, 175, 221], "font_siz": [134, 175], "font_famili": 134, "arial": 134, "justif": 134, "ital": 134, "shadow": 134, "background_color": 134, "line_slider_label_z": 134, "line_slider_label_x": 134, "line_slider_label_i": 134, "opacity_slider_label": 134, "panel2d": [134, 137, 221], "add_el": [134, 137], "screen": [134, 143, 165], "re_align": 134, "getsiz": 134, "win_callback": 134, "size_old": 134, "size_chang": 134, "reset_clipping_rang": 134, "add_window_callback": 134, "bundles_and_3_slic": 134, "del": 134, "garyfallidis2021": 134, "soham": 134, "biswa": 134, "david": [134, 170, 217, 219, 220, 221, 222, 233, 234, 235], "reagan": [134, 175, 176, 203, 219, 220, 221, 222], "nasim": [134, 233, 234], "anousheh": [134, 233, 234], "filipi": 134, "silva": 134, "geoffrei": 134, "fox": 134, "21105": 134, "joss": [134, 228], "03384": 134, "dix": [135, 165, 168], "subj_id": [135, 165], "bundle_n": 135, "knew": 135, "camera_info": 135, "focal": 135, "stream_actor2": 135, "stream_actor3": 135, "bar2": 135, "bundle3": 135, "stream_actor4": 135, "bundle4": 135, "stream_actor5": 135, "bundle5": 135, "fst": [], "fw": 230, "semibold": [], "stream_actor6": 135, "bundle6": 135, "decim": [136, 220], "contour_from_roi_tutori": 136, "fname_t1": 137, "t1_warp": 137, "value_rang": [137, 231], "slice_actor": [137, 175, 177], "slice_actor2": 137, "hsv": 137, "fname_fa": 137, "fa_1x1x1": 137, "lut": 137, "fa_actor": 137, "slices_lut": 137, "label_posit": 137, "label_valu": 137, "result_posit": 137, "result_valu": 137, "panel_pick": 137, "left_click_callback": 137, "ev": 137, "event_po": 137, "iren": [137, 175], "geteventposit": 137, "picker": [137, 222], "getpointijk": 137, "8f": 137, "setinterpol": 137, "addobserv": 137, "leftbuttonpressev": 137, "perspect": [137, 164], "show_m_mosa": 137, "left_click_callback_mosa": 137, "slice_mosa": 137, "drag": 137, "scroll": [137, 222], "combinedworkflow": [138, 177], "combined_workflow": [138, 177], "nlmeansflow": [138, 177], "medianotsuflow": [138, 177], "denoiseandseg": 138, "_get_sub_flow": 138, "commandlin": [138, 147, 176], "input_fil": [138, 141, 146, 169, 176, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 209, 210, 213], "out_dir": [138, 141, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 165, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 247], "out_fil": [138, 141, 176, 180, 210, 212], "wildcard": [138, 141, 152, 154, 176, 181, 182, 183, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 207, 209, 210, 212, 214, 215], "out_": [138, 141], "parser": [138, 141, 176], "io_it": [138, 141], "get_io_iter": [138, 141, 176, 177, 222], "in_fil": [138, 141], "nl_flow": 138, "run_sub_flow": [138, 176, 177], "last_generated_output": 138, "out_denois": [138, 176, 189, 190, 191, 192], "me_flow": 138, "ioiter": [138, 141, 177], "globbin": 138, "dipy_root": [138, 141], "dipy_denoise_seg": 138, "cli": [138, 141, 158, 177, 228, 230, 231, 232, 233, 234, 235, 237], "cli_flow": [138, 141], "my_combined_workflow": 138, "argpars": [138, 141, 176], "overwrit": [138, 141, 169, 231], "wrote": [138, 141], "combined_workflow_cr": [138, 140, 238], "examples_builtworkflow": 140, "workflow_cr": [140, 141, 238], "002": [141, 170], "callabl": [141, 163, 164, 165, 167, 170, 173, 175, 226, 230], "t1_denois": 141, "my_workflow": 141, "shutil": 141, "Will": [141, 165, 168, 169, 170], "appendtextflow": 141, "text_to_append": 141, "myfil": 141, "glob": 141, "dipy_append_text": 141, "paradigm": [142, 241], "bloch": 142, "torrei": 142, "pgse": [142, 241, 242, 243], "readout": 142, "gamma": [142, 143, 166, 170, 241], "gyromagnet": [142, 241], "width": [142, 163, 170, 175, 241], "wave": [142, 165, 170, 243], "proport": [142, 163, 169], "stand": [142, 169], "gather": [142, 176, 178], "mobil": 142, "molecul": 142, "movement": 142, "counterintuit": 142, "dephas": 142, "dwmri": 142, "speak": 142, "plenti": 142, "nonisotrop": [142, 226], "textrm": [142, 170], "batteri": 142, "painless": 142, "noth": [142, 163, 228], "ever": 142, "dicom": [142, 228], "npz": [142, 165, 222], "pydicom": 142, "v4": 142, "v6": 142, "v7": 142, "loadmat": 142, "pytabl": [142, 158, 219, 220], "hdf5": [142, 158, 168, 169, 219, 229], "serial": [142, 170], "load_pickl": [142, 177], "huge": [142, 176, 208, 239], "pycharm": 142, "sublim": 142, "aptana": 142, "emac": 142, "eclips": 142, "pydev": 142, "chri": [142, 147, 222], "rorden": 142, "dcm2nii": 142, "mricron": 142, "reader": [142, 177], "openli": 142, "grade": 142, "fcon_1000": 142, "nitrc": 142, "humanconnectom": [142, 165], "openneuro": 142, "gimbal_lock": [143, 230], "euler": [143, 144, 164, 230], "defici": 143, "indistinguish": 143, "spitfir": 143, "aircraft": 143, "wing": 143, "roll": [143, 164], "tilt": 143, "violent": 143, "straight": [143, 174], "wait": 143, "pm": [143, 170, 241, 242], "radian": [143, 164, 167, 174, 241], "smallmatrix": 143, "pm1": 143, "proof": 143, "mathworld": [143, 144, 164, 246], "rewrit": 143, "v_": [143, 164, 170], "v_1": [143, 171], "v_2": [143, 171], "conclus": 143, "gregslabaugh": 143, "homogen": [144, 163, 164, 170, 172], "theorem": 144, "boldsymbol": 144, "x_1": 144, "x_n": 144, "pythagora": 144, "gimbal": 144, "lock": [144, 170], "quaternion": 144, "suffer": [144, 170], "orthogon": [144, 170, 174, 245, 246], "transpos": [144, 163, 164, 170, 172, 175], "synonym": 144, "paragon": 145, "special": [145, 163, 164, 166, 169, 170, 171, 176], "ecosystem": [145, 169], "brows": 145, "recip": 145, "dedic": 145, "answer": [145, 160, 174], "comfort": 145, "evac": [145, 165, 176, 177, 193, 236, 237], "10x": [145, 158], "synb0": [145, 158, 165, 177, 236, 237], "cnn": [145, 158, 177, 236], "decemb": [145, 159, 164], "april": [145, 159], "past": 145, "mac": [146, 218, 222, 231, 235, 239, 252], "mkdir": [146, 147, 148, 150, 151, 152, 154, 155, 156, 157], "data_fold": [146, 150], "dipy_fetch": [146, 150, 216, 229], "__dti_ax_ep2d_2_5_iso_33d_20141015095334_4": [146, 151, 155], "mv": 146, "dipy_info": [146, 216], "uint16": [146, 217], "avg": [146, 174], "940581408413976": 146, "percentil": [146, 175], "98th": 146, "psr": 146, "62918037280702": 146, "084": 146, "069": 146, "082": 146, "elef": 146, "b0_thr": 146, "dipy_horizon": [146, 147, 148, 149, 216, 228, 231, 234, 237], "dipy_median_otsu": [146, 155, 216], "out_work": 146, "dipy_fit_dti": [146, 155, 216, 228, 235], "ga": [146, 170, 176, 177, 197, 199], "dec": [146, 168, 175, 222, 250], "fastest": 146, "dipy_fit_csa": [146, 155, 216, 228], "dipy_mask": [146, 157, 216], "out_mask": [146, 176, 193, 206, 207], "pam5": [146, 147, 157, 158, 168, 176, 229], "out_tractogram": [146, 176, 185, 187, 214, 215], "tracks_from_peak": 146, "tracking_method": [146, 157, 176, 214], "random_color": [146, 148, 149, 175, 176, 203, 234], "length_gt": [146, 175, 176, 203], "length_lt": [146, 175, 176, 203], "clusters_gt": [146, 175, 176, 203], "clusters_lt": [146, 175, 176, 203], "native_coord": [146, 176, 203], "stealth": [146, 175, 176, 203], "emergency_head": [146, 176, 203], "bg_color": [146, 175, 176, 203], "disable_order_transpar": [146, 176, 203], "out_stealth_png": [146, 176, 203], "out_strat": 146, "mix_nam": [146, 148, 176], "log_level": [146, 168, 169], "log_fil": 146, "stretch": 146, "nonetheless": 146, "parkinson": 147, "ppmi": 147, "marek11": 147, "yeh18": [147, 148], "atlas_of_30_human_brain_bundles_in_mni_spac": [147, 148], "12089652": [147, 148], "35092": 147, "yhjc": 147, "12098397": 147, "h5": [147, 168], "subjects_smal": 147, "af_r": 147, "ccmid": 147, "cc_forcepsmajor": [147, 165], "cc_forcepsminor": 147, "cst_r": [147, 165], "emc_l": 147, "emc_r": 147, "fpt_l": 147, "fpt_r": 147, "ifof_l": 147, "ifof_r": 147, "ilf_l": 147, "ilf_r": 147, "mlf_l": 147, "mlf_r": 147, "ml_l": 147, "ml_r": 147, "mdlf_l": 147, "mdlf_r": 147, "opt_l": 147, "opt_r": 147, "or_l": 147, "or_r": 147, "stt_l": 147, "stt_r": 147, "uf_r": 147, "anatomical_measur": [147, 177], "org_bundl": 147, "rec_bundl": 147, "streamlines_moved_af_l__labels__recognized_orig": 147, "streamlines_moved_af_r__labels__recognized_orig": 147, "streamlines_moved_ccmid__labels__recognized_orig": 147, "streamlines_moved_uf_l__labels__recognized_orig": 147, "streamlines_moved_uf_r__labels__recognized_orig": 147, "streamlines_moved_v__labels__recognized_orig": 147, "moved_af_l__recogn": 147, "moved_af_r__recogn": 147, "moved_ccmid__recogn": 147, "moved_uf_l__recogn": 147, "moved_uf_r__recogn": 147, "moved_v__recogn": 147, "overridden": 147, "eg": [147, 171, 173, 176, 225, 236], "bundle_profil": 147, "dipy_buan_profil": [147, 216], "lmm": [147, 176], "lmm_plot": 147, "dipy_buan_lmm": [147, 216], "buan_thr": [147, 176, 203], "buan_highlight": [147, 176, 203], "af_l_fa_pvalu": 147, "pvalu": [147, 176, 203], "cst_l_fa_pvalu": 147, "sm_plot": 147, "dipy_buan_shap": [147, 216, 230], "12033390": 147, "marek": 147, "kenneth": 147, "jen": [147, 176, 197], "danna": 147, "lasch": 147, "shirlei": 147, "siderowf": 147, "carolin": 147, "simuni": 147, "tanya": 147, "coffei": 147, "kieburtz": 147, "karl": 147, "flagg": 147, "emili": 147, "chowdhuri": 147, "sohini": 147, "neurobiologi": 147, "panesar": [147, 148], "fernand": [147, 148], "meola": [147, 148], "yoshino": [147, 148], "fernandez": [147, 148], "miranda": [147, 148], "vettel": [147, 148], "verstynen": [147, 148], "macroscal": [147, 148, 247, 248], "topologi": [147, 148, 170, 174, 247, 248], "hcp_tractogram_zip": 148, "7013003": 148, "whole_brain_mni": 148, "dipy_slr": [148, 156, 158, 216], "rb_output": 148, "dipy_recobundl": [148, 216], "pink": [148, 149], "org_output": 148, "dipy_labelsbundl": [148, 216], "visit": [148, 149, 162, 171], "chandio2023": [149, 163, 176, 184], "m_uf": 149, "s_uf_li": 149, "capac": 149, "\u03bb": [149, 176, 184], "requirs": 149, "dipy_bundlewarp": [149, 216], "nonlinearly_mov": [149, 176], "caustiou": 149, "destin": 150, "specific_dataset": 150, "specific_data_out_fold": 150, "eigenspectrum": 151, "lpca": [151, 158, 176, 189, 228, 229, 234], "ow": 151, "denoise_lpca_output": 151, "suffic": [151, 152, 154], "dipy_denoise_lpca": [151, 216], "dwi_lpca": [151, 176], "subtl": 151, "hardli": 151, "image1": 151, "image2": 151, "denoise_mppca_output": 151, "dipy_denoise_mppca": [151, 216], "textur": 151, "denoise_nlmeans_output": 151, "lcpa": 151, "veraart15": 152, "perrone15": 152, "gibbs_ringing_output": 152, "dipy_gibbs_ring": [152, 216], "t1_brain_denois": 152, "motion_output": 154, "dipy_correct_mot": [154, 216], "recons_csd_output": 155, "stanford_hardi_mask": 155, "dipy_fit_csd": [155, 216, 228], "recons_mapmri_output": 155, "big": [155, 164, 170, 176, 201, 220, 226, 228, 252], "dipy_fit_mapmri": [155, 216], "recons_dti_output": 155, "save_metr": [155, 176, 178, 197, 199, 200, 201], "out_tensor": [155, 176, 186, 199], "dti_tensor": [155, 176], "recons_dki_output": 155, "cfin_multib_mask": 155, "dipy_fit_dki": [155, 216], "recons_csa_output": 155, "pam": [155, 167, 168, 175, 176, 195, 196, 198, 214, 215, 222], "extract_pam_valu": [155, 176, 195, 196, 198], "recons_ivim_output": 155, "ivim_mask": 155, "dipy_fit_ivim": [155, 216], "meanwhil": 156, "image_reg_output": 156, "dipy_align_affin": [156, 216], "path_to_static_fil": 156, "path_to_moving_fil": 156, "affine_reg_output": 156, "out_affin": [156, 176, 178, 188, 211], "affine_reg": 156, "syn_reg_output": 156, "out_warp": [156, 176, 179], "em": [156, 163, 171, 176, 179], "dipy_align_syn": [156, 216, 231, 237], "syn_reg_warp": 156, "transform_typ": [156, 176, 180], "transform_reg_output": 156, "dipy_apply_transform": [156, 216], "path_to_transform_map_fil": 156, "nb_pt": [156, 163, 171, 176, 211], "sl_reg_output": 156, "stop_fil": 157, "seed_dens": [157, 176, 214, 215], "recon": [157, 219, 228], "pve_wm": 157, "eudx_tracking_output": 157, "det_tracking_output": 157, "det": [157, 163, 164, 170, 176, 214, 220, 221], "prob_tracking_output": 157, "prob": [157, 176, 214, 228], "closest_peaks_output": 157, "prematur": 157, "pft_output": 157, "dipy_track_pft": [157, 216], "pve_gm": 157, "pve_csf": 157, "dtiflow": 158, "lpcaflow": [158, 177], "rumbaflow": 158, "vtp": [158, 168, 234, 235], "dkiflow": 158, "imageregistrationflow": [158, 177], "motioncorrectionflow": [158, 177], "parallelis": 158, "govern": [158, 170, 233], "multiplatform": [158, 239], "vtk9": [158, 230], "typographi": 158, "tensorflow": [158, 169, 229], "appveyor": [158, 222, 229, 230], "smarter": 158, "critic": [158, 168, 169], "mtm": [158, 228], "fetchflow": [158, 177, 228, 229, 247], "quickbundlesx": [158, 163, 175, 176, 177, 183, 203, 211, 221], "tractometri": [158, 162, 223], "almost": [158, 170, 224], "cvxopt": [158, 220, 226, 228], "reorient": [158, 164, 174, 217, 218, 222], "64bit": [158, 252], "cleaner": 158, "summer": [158, 159, 229], "exhibitor": [158, 159], "ohbm": [158, 159], "massiv": 158, "geodes": [158, 170, 176, 197, 199, 227], "robustli": 158, "march": 159, "novemb": [159, 164], "septemb": 159, "august": 159, "octob": [159, 163], "june": [159, 164], "februari": 159, "magazin": 159, "nov": [159, 166, 170, 245], "22nd": 159, "3x": 159, "teach": 159, "fundament": 159, "seminar": 159, "neuroscientist": 159, "qbin": 159, "dont": 159, "creator": 159, "attend": 159, "hbm": [159, 217, 226], "0dev": 159, "win": 159, "took": 159, "mia": 159, "mcgill": [159, 165, 247, 248], "3rd": [159, 171, 174, 237], "sprint": 159, "my_fib_file_path": 160, "my_fold": 160, "my_path": 160, "my_tractogram": 160, "my_trk_file_path": 160, "my_trk": 160, "mrtrix3": [160, 166, 170, 176, 210, 228, 245], "convert_sh_descoteaux_tourni": [160, 177], "convert_tensor": [160, 177], "my_data": 160, "otensor": 160, "phantom": [162, 165, 177, 247, 248], "gui": 162, "unittest": [162, 226], "__version__": [162, 252], "pycpd": 163, "siavashk": 163, "encapsul": 163, "codomain": 163, "parzen": 163, "parzen62": 163, "cubic": [163, 170, 174, 176, 179], "annal": 163, "kwd": 163, "enum": [163, 168], "diagnos": 163, "debug": [163, 164, 168, 169, 219], "metric_kwarg": 163, "ride": [163, 168], "ndarrai": [163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 231], "template_affin": 163, "reg_kwarg": 163, "fist": 163, "disp": [163, 164], "domain_img": 163, "codomain_img": 163, "between_affin": 163, "ret_metr": 163, "gradual": 163, "boolean": [163, 164, 166, 169, 170, 174, 175, 176, 237], "sampling_proport": 163, "interv": [163, 167, 174], "xopt": [163, 164, 168, 177], "fopt": [163, 164, 168, 177], "isosc": [163, 231, 234], "kwarg": [163, 164, 165, 167, 168, 169, 170, 171, 176, 217, 231, 235], "ref_affin": 163, "b0_ref": 163, "xform_img": 163, "affine_arrai": 163, "n_point": [163, 164, 166, 173, 174, 176, 202, 230], "native_resampl": 163, "opm_get_num_proc": [163, 166, 174], "valueerror": [163, 164, 166, 170, 174, 217, 226, 228, 236], "streamlines_a": 163, "streamlines_b": 163, "sigma2": 163, "low_rank": 163, "num_eig": 163, "max_iter": 163, "arg": [163, 164, 165, 167, 168, 169, 170, 171, 175, 176, 223], "cloud": 163, "nxd": 163, "mxd": 163, "ty": 163, "consecut": [163, 174, 228, 237], "span": [163, 164, 170], "absolut": [163, 164, 168, 169, 170, 174, 176, 219, 223, 230, 245], "mxn": 163, "pt1": 163, "nx1": 163, "p1": 163, "mx1": 163, "likelihoo": 163, "lowrank": 163, "get_registration_paramet": [163, 177], "registration_paramet": 163, "transform_point_cloud": [163, 177], "update_transform": [163, 177], "0905": 163, "update_vari": [163, 177], "eig_fgt": 163, "gauss": [163, 176, 179], "grad_mov": 163, "avants2008": 163, "precomput": [163, 170], "avants08": 163, "grad_stat": 163, "pointwis": [163, 171], "sq": 163, "ocegueda2016": 163, "delta_field": 163, "sigma_sq_field": 163, "gradient_mov": 163, "sigma_sq_x": 163, "demon": [163, 176, 179, 221, 222], "vercauteren09": 163, "arce14": 163, "sigma_i": 163, "vercauteren": 163, "intend": [163, 169, 175, 176, 201, 235], "quantiz": [163, 176, 179], "sigma_x": 163, "demons_step": 163, "santana": 163, "campo": 163, "delgado": 163, "viguera": 163, "multimod": 163, "168140": 163, "pennec": [163, 170], "perchant": 163, "ayach": [163, 170], "suppl": 163, "s61": 163, "040": 163, "num_label": 163, "whose": [163, 164, 174, 176], "infinit": [163, 172, 174, 228], "num_level": 163, "undefin": [163, 174], "secial": 163, "domain_grid_shap": 163, "domain_grid2world": 163, "codomain_grid_shap": 163, "codomain_grid2world": 163, "domain_grid": 163, "codomain_grid": 163, "stream": [163, 174], "get_affin": [163, 177, 219], "set_affin": [163, 177], "affine_inv": 163, "unchang": [163, 164, 170, 172, 174], "image_grid2world": 163, "sampling_grid_shap": 163, "sampling_grid2world": 163, "resample_onli": 163, "domain_shap": 163, "codomain_shap": 163, "drive": 163, "neg_mi": 163, "distance_and_gradi": [163, 177], "neg_mi_grad": 163, "grad": [163, 174], "bfg": [163, 164, 171, 226], "newton": [163, 164, 169, 234], "dogleg": [163, 164], "trust": [163, 164, 170], "ncg": [163, 164], "n_scale": [163, 176, 179], "never": [163, 174], "docstring_addendum": [163, 177], "accomplish": [163, 170, 176], "disp_shap": 163, "disp_grid2world": 163, "alloc": [163, 164, 170, 172, 177, 252], "compute_inversion_error": [163, 177], "perfect": 163, "comp": [163, 170], "dinv": 163, "expand_field": [163, 177], "expand_factor": 163, "new_shap": 163, "get_backward_field": [163, 177], "is_invers": 163, "get_forward_field": [163, 177], "get_simplified_transform": [163, 177], "diffeomorh": 163, "interpret_matrix": [163, 177], "shallow_copi": [163, 177], "shallow": 163, "new_map": 163, "image_world2grid": 163, "out_shap": 163, "out_grid2world": 163, "_warp_forward": 163, "_warp_backward": 163, "transform_point": [163, 177], "coord2world": 163, "world2coord": 163, "warp_endomorph": [163, 177], "endomorph": 163, "inherit": [163, 166, 170, 171, 176, 192], "costli": 163, "computation": [163, 170], "simpler": [163, 224], "abstract": [163, 164, 170, 171, 174, 175, 176], "get_map": [163, 177, 231], "set_level_it": [163, 177], "inv_tol": [163, 176, 179], "static_to_ref": 163, "current_displac": 163, "new_displac": 163, "disp_world2grid": 163, "time_sc": 163, "d2": [163, 168, 170], "d1": [163, 170], "mean_norm": 163, "csv": [163, 164, 168, 169, 170, 171], "xl": [163, 164, 168, 169, 170, 171], "gnumer": [163, 164, 168, 169, 170, 171], "cater": [163, 164, 168, 169, 170, 171], "namespac": [163, 164, 168, 169, 170, 171, 176, 230], "hierarchi": [163, 164, 168, 169, 170, 171], "period": [163, 164, 168, 169, 170, 171, 230], "java": [163, 164, 168, 169, 170, 171], "gnu": [163, 164, 168, 169, 170, 171], "charg": [163, 164, 166], "compute_backward": [163, 177], "compute_forward": [163, 177], "free_iter": [163, 177], "registrationoptim": 163, "get_energi": [163, 177], "initialize_iter": [163, 177], "unpract": 163, "set_levels_abov": [163, 177], "set_levels_below": [163, 177], "set_moving_imag": [163, 177], "moving_spac": 163, "moving_direct": 163, "set_static_imag": [163, 177], "static_spac": 163, "static_direct": 163, "use_moving_image_dynam": [163, 177], "original_moving_imag": 163, "diffeomorficmap": 163, "use_static_image_dynam": [163, 177], "original_static_imag": 163, "inner_it": 163, "q_level": 163, "double_gradi": 163, "step_typ": 163, "gauss_newton": [163, 176, 179], "transfer": [163, 223], "seidel": [163, 176, 179], "schedul": [163, 174, 176, 179, 219], "compute_demons_step": [163, 177], "forward_step": 163, "compute_gauss_newton_step": [163, 177], "bruhn": 163, "weickert": 163, "bruhn05": 163, "andr": 163, "joachim": 163, "ultim": 163, "iccv": 163, "use_double_gradi": 163, "originalstaticimag": 163, "xavier": 163, "aymer": 163, "nichola": 163, "gradient_field": 163, "lambda_param": 163, "coarser": 163, "sigmafield": 163, "ti": 163, "_joint_pdf_gradient_dense_2d": 163, "_joint_pdf_gradient_dense_3d": 163, "jacobian": [163, 164, 170, 177, 237], "bin_index": [163, 177], "xnorm": 163, "bin_normalize_mov": [163, 177], "mmin": 163, "mmax": 163, "bin_normalize_stat": [163, 177], "smin": 163, "smax": 163, "smask": 163, "mmask": 163, "ones_lik": 163, "update_gradient_dens": [163, 177], "grid2world": 163, "mgradient": 163, "joint_grad": 163, "update_gradient_spars": [163, 177], "sval": 163, "mval": 163, "sample_point": 163, "sampled_point": 163, "update_pdfs_dens": [163, 177], "smargin": 163, "mmargin": 163, "update_pdfs_spars": [163, 177], "joint_gradi": 163, "mi_gradi": 163, "buffer": [163, 164, 165, 170, 172, 219], "floor": [163, 166], "total_voxel": 163, "lexicograph": 163, "perturb": 163, "increasingli": 163, "rate": [163, 171], "total_pixel": 163, "isampl": 163, "new_zoom": 163, "cval": [163, 176, 209], "pool": [163, 166, 169, 170, 176, 202, 209, 225], "f_name": 163, "input_spac": 163, "sigma_factor": 163, "mask0": 163, "weaker": 163, "from_level": 163, "get_affine_inv": [163, 177], "get_domain_shap": [163, 177], "get_expand_factor": [163, 177], "to_level": 163, "get_imag": [163, 177], "get_scal": [163, 177], "get_sigma": [163, 177], "get_spac": [163, 177], "print_level": [163, 177], "aka": 163, "hungri": [163, 218], "l_bfgs_b": [163, 171], "powel": [163, 164, 171], "mat": [163, 164, 170, 174, 225], "matopt": 163, "matopt_histori": 163, "func": [163, 164, 170, 172, 176], "matrix_histori": 163, "matrix1": 163, "matrix2": 163, "block_siz": 163, "min_siz": [163, 171], "default_bound": 163, "rm_small_clust": [163, 176, 211, 236], "maxit": [163, 164, 170], "select_random": 163, "greater_than": [163, 171, 176, 208, 211], "less_than": [163, 170, 171, 176, 208, 211], "qbx_thr": [163, 176, 211], "n_bundl": 163, "lst": 163, "unmatch": 163, "ml": [163, 176, 184], "matched_pair": [163, 176], "unitari": [163, 175], "shape_profil": [163, 175], "stdv": 163, "greedi": 163, "descent": [163, 164], "useless": 163, "sigmasq_field": 163, "displacement_field": [163, 176], "max_displac": 163, "mx": 163, "2x2": 163, "is_singular": 163, "singular": [163, 164, 166, 176, 189, 190, 242], "contract": [163, 164, 171, 176], "_jacobian": 163, "_get_identity_paramet": 163, "_param_to_matrix": 163, "wrapper": [163, 164, 169, 170, 174, 224], "get_dim": [163, 177], "get_identity_paramet": [163, 177], "get_number_of_paramet": [163, 177], "param_to_matrix": [163, 177], "premult_index": 163, "premult_disp": 163, "sinv": 163, "cancel": 163, "standard_devi": 163, "iff": 163, "chen": [163, 217], "understand": [163, 170, 243], "ruchala": 163, "olivera": 163, "2816107": 163, "nslice": 163, "from_shap": 163, "from_grid2world": 163, "to_shap": 163, "to_grid2world": 163, "rnadom": 163, "int_field": 163, "ceil": [163, 177], "img_world2grid": 163, "img_spac": 163, "d_world2grid": 163, "cell": [163, 164, 174, 217], "diag": [163, 164, 170], "affine_idx_in": 163, "affine_idx_out": 163, "affine_disp": 163, "rinv": 163, "cinv": 163, "pinv": 163, "tinv": 163, "ref_shap": 163, "bilinear": [163, 164], "necessarili": 163, "bi": 163, "in2world": 163, "world2out": 163, "field_world2grid": 163, "algebra": 164, "descriptor": 164, "reserv": [164, 169, 171], "redistribut": [164, 171, 176], "permit": [164, 170, 171, 176], "met": [164, 171, 176], "disclaim": [164, 171, 176], "materi": [164, 171, 176], "endors": [164, 171], "BY": [164, 171, 176], "THE": [164, 171, 176], "holder": 164, "AND": [164, 168, 171, 176], "AS": [164, 171, 176], "OR": [164, 171, 176], "warranti": [164, 165, 171, 176], "BUT": [164, 171, 176], "TO": [164, 171, 176], "OF": [164, 171, 176], "merchant": [164, 171, 176], "FOR": [164, 171, 176], "NO": [164, 171, 176], "shall": [164, 171, 174, 176], "owner": 164, "liabl": [164, 171, 176], "indirect": [164, 171, 176], "incident": [164, 171, 176], "exemplari": [164, 171, 176], "consequenti": [164, 171, 176], "damag": [164, 165, 171, 176], "procur": [164, 171, 176], "substitut": [164, 170, 171, 176], "profit": [164, 171, 176], "busi": [164, 171, 176], "interrupt": [164, 171, 176], "liabil": [164, 171, 176], "strict": [164, 165, 168, 171, 176], "neglig": [164, 171, 176], "aris": [164, 171, 176], "IF": [164, 171, 176], "SUCH": [164, 171, 176], "declar": [164, 169, 174, 223, 224, 228], "overhead": [164, 170], "untrigg": 164, "raymond": 164, "hetting": 164, "rcn": 164, "htm": 164, "datamodel": 164, "octahedron": [164, 224], "modulu": 164, "lon": 164, "lat": 164, "parameter": [164, 235], "inclin": [164, 165, 166, 246], "azimuth": [164, 165, 166, 170, 246], "south": [164, 246], "north": [164, 246], "west": [164, 246], "east": [164, 246], "posterior": [164, 167], "anterior": 164, "zenith": [164, 246], "counter": 164, "clockwis": 164, "geograph": 164, "nomenclatur": [164, 229], "latitud": [164, 246], "longitud": [164, 246], "array_lik": [164, 165, 166, 170, 173, 174], "spherical_coordinate_system": 164, "wolfram": 164, "sphericalcoordin": 164, "hypotenus": 164, "sph2cart": [164, 246], "unusu": [164, 228], "trivial": [164, 223], "vec": [164, 170, 174], "nvec": 164, "l2n": 164, "allclos": [164, 170, 174, 224], "keepdim": 164, "flatten": [164, 170, 172, 174], "instabl": 164, "taylor": [164, 172], "tetha": 164, "teta2": 164, "theta2": 164, "ur": 164, "rad2deg": 164, "npd": 164, "niethamm": 164, "estepar": 164, "bouix": 164, "shenton": 164, "cf": [164, 170, 225], "eng": 164, "biol": 164, "pubm": 164, "17946125": 164, "pmc2791793": 164, "pts1": 164, "pts2": 164, "check_radiu": 164, "broadcast": [164, 170, 171, 174, 228, 235], "5708": 164, "7124": 164, "vecs1": 164, "vecs2": 164, "v_co": 164, "vco": 164, "lambert": 164, "mardia": 164, "jupp": 164, "y_1": 164, "y_2": 164, "annulu": 164, "vice": [164, 170, 176, 210, 230], "versa": [164, 170, 176, 210, 230], "aj": 164, "sxyz": 164, "gohlk": 164, "cgohlk": 164, "yaw": 164, "syxz": 164, "34786452": 164, "383436184": 164, "_axes2tupl": 164, "partit": [164, 174], "persp": 164, "m0": 164, "smallest": [164, 166, 170, 171, 174], "collinear": [164, 174, 217], "furthest": [164, 174], "3x3": [164, 166, 170], "ru": 164, "sv": [164, 165], "mat1": 164, "mat2": 164, "matn": 164, "circumfer": 164, "otherw": 164, "psampl": 164, "frame": [164, 167, 174, 176], "a_": [164, 170], "is_hemi": 164, "pole": [164, 170, 174], "rstudio": 164, "pub": 164, "s3": [164, 165], "amazonaw": 164, "27121_a22e51b47c544980bad594d5e0bb2d04": 164, "qval": [164, 170, 177], "ie": [164, 170, 174], "immut": 164, "factori": [164, 221], "gradient_strength": [164, 177], "bmag": [164, 170], "rbval": 164, "expireddeprecationerror": [164, 170, 174], "log_": [164, 170], "slice_start": 164, "atol": 164, "ste": [164, 170], "cte": [164, 170], "cigar": [164, 170], "bo_threshold": 164, "30m": 164, "10m": 164, "sq2": 164, "gt": [164, 171, 175], "03e": 164, "compens": 164, "leemans2009": 164, "bvector": [164, 170, 176, 188, 189, 195, 196, 198, 199, 218], "bmagmax": 164, "bmaxmag": 164, "gap": [164, 170], "regroup": 164, "n_bval": 164, "non_zero": 164, "ztol": 164, "trace": [164, 177, 241], "asymmetri": 164, "bdelta": 164, "b_eta": 164, "topgaard": 164, "valiullin": 164, "ed": [164, 171], "porou": 164, "royal": [164, 174], "chemistri": 164, "ornt1": 164, "ornt2": 164, "orn1": 164, "orn2": 164, "current_ornt": 164, "new_ornt": 164, "stort": 164, "lp": [164, 168], "inferior": 164, "string_ornt": 164, "ornt": 164, "add_nod": [164, 177], "add_edg": [164, 177], "up_short": [164, 177], "wp": 164, "attr": [164, 219], "all_path": [164, 177], "del_nod": [164, 177], "del_node_and_edg": [164, 177], "down_short": [164, 177], "shortest_path": [164, 177], "arr": [164, 166, 170, 174], "num_bin": 164, "janeriksolem": 164, "sphere_origin": 164, "sphere_target": 164, "multiquadr": 164, "epsilon": [164, 168, 171, 230], "spread": [164, 165], "rbf": [164, 224], "_interpolate_scalar_2d": 164, "map_coordin": 164, "_interpolate_scalar_3d": 164, "_interpolate_scalar_nn_2d": 164, "_interpolate_scalar_nn_3d": 164, "_interpolate_vector_2d": 164, "_interpolate_vector_3d": 164, "data_strid": 164, "len_point": 164, "mixin": 164, "offer": [164, 245], "accessor": 164, "uniformtimeseri": 164, "sampling_r": 164, "sampling_interv": 164, "lose": [164, 233], "circular": [164, 172, 219, 220], "chain": 164, "_no_reset": 164, "protect": [164, 174], "caveat": 164, "emptor": 164, "recomput": 164, "fire": 164, "mostli": [164, 170, 174, 217, 224, 227], "afterward": 164, "magicprop": 164, "__dict__": 164, "jac": [164, 170], "hess": 164, "hessp": 164, "hessian": 164, "nelder": 164, "mead": 164, "anneal": 164, "tnc": 164, "cobyla": 164, "slsqp": 164, "ineq": 164, "wherea": [164, 170, 174, 176], "xk": [164, 174], "show_opt": 164, "nfev": [164, 177], "nit": [164, 177, 226], "print_summari": [164, 177], "sklearn": [164, 166, 170, 176, 192, 229, 234, 237], "signatur": [164, 170, 227, 236], "coef_": 164, "y_hat": 164, "n_sampl": 164, "n_featur": 164, "a_0": 164, "h_i": 164, "s_j": 164, "slack": 164, "polynomi": [164, 170, 245], "design_matrix": [164, 177, 231], "pipermail": 164, "027700": 164, "momentum": 164, "non_neg": [164, 170], "check_error_it": 164, "max_error_check": 164, "converge_on_ss": 164, "xh": 164, "persist": [164, 219], "sse": [164, 170], "h_best": 164, "caller": 164, "print_stat": [164, 177], "prin": 164, "rand": [164, 174, 175], "1000000": [164, 171, 176], "src": 164, "profiling_tutori": 164, "rkern": 164, "line_profil": 164, "pstat": 164, "slowest": 164, "function_nam": 164, "ix": 164, "100001": 164, "200002": 164, "iz": 164, "300003": 164, "400004": 164, "wichmann": 164, "hill": 164, "issn": [164, 247, 248], "9473": 164, "csda": 164, "019": 164, "sciencedirect": 164, "pii": 164, "s0167947306001836": 164, "advic": [164, 222], "r_number": 164, "uniformli": [164, 171], "appl": [164, 252], "rectangularli": 164, "95e": 164, "claim": 164, "30000": [85, 164], "arithmet": 164, "5212632": 164, "s1": [164, 171], "s2": [164, 171], "ecuy": 164, "portabl": 164, "30584e": 164, "unspecifi": [164, 165, 166, 175], "delaunai": [164, 165, 166, 224], "triangul": [164, 165, 166, 175], "find_closest": [164, 166, 177], "vertex": [164, 166, 170, 174, 226], "____": [164, 166], "subdivis": [164, 166], "new_spher": [164, 166], "remap": [164, 165, 166, 228], "classmethod": [164, 166, 167, 174, 176], "from_spher": [164, 166, 177], "__________": 164, "return_invers": 164, "hemi": [164, 166], "const": [164, 166], "felt": [164, 166], "unstabl": [164, 166, 222], "fibonacci": 164, "spiral": [164, 174], "init_pointset": 164, "reimplement": 164, "fmin_slsqp": 164, "number_of_edg": 164, "item": [164, 165, 168, 170, 172, 174, 175, 234], "byte": [164, 170, 172, 177, 224, 228, 237], "__new__": [164, 170, 172], "expos": [164, 165, 170, 172], "fortran": [164, 170, 172], "c_contigu": [164, 170, 172], "owndata": [164, 170, 172], "writeabl": [164, 170, 172, 226], "flatit": [164, 170, 172], "todo": [164, 170, 172, 219], "imaginari": [164, 170, 172, 245], "items": [164, 170, 172, 174], "nbyte": [164, 170, 172, 177], "contigu": [164, 170, 172, 174], "jump": [164, 170, 172], "ctype": [164, 170, 172], "garbag": [164, 170, 172], "coord": [164, 218], "spherepointpick": 164, "fisher": 164, "lewi": 164, "embleton": 164, "supplement": [164, 247, 248], "coverag": [164, 219, 226, 228, 233, 234], "b1": [164, 175, 229], "max_mean_cosin": 164, "max_cosine_dist": 164, "7071067811865475": 164, "unimport": 164, "12f": 164, "707106781187": 164, "recursion_level": 164, "n2": [164, 174], "n3": [164, 223], "perm": 164, "permut": [164, 170], "bank": 164, "n1xn2xn2": 164, "ni": [164, 174, 217, 223, 237], "lowpass": 164, "highpass": 164, "lo": 164, "subband": 164, "synthesi": 164, "n1xn2xn3": 164, "sf1": 164, "sf2": 164, "sf3": 164, "sfi": 164, "af1": 164, "af2": 164, "af3": 164, "afi": 164, "byte_data": 165, "bytes_or_buff": 165, "handler": 165, "__str__": [165, 233], "repr": [165, 221], "sy": [165, 176], "getdefaultencod": 165, "fib1": 165, "fib0": 165, "fib2": 165, "sv2": 165, "skeleton": [165, 227], "lsc": 165, "c3": 165, "symmetric642": [165, 166], "repulsion100": [165, 166, 170], "repulsion200": [165, 166], "vert": [165, 166, 175], "func_coef": 165, "func_discret": 165, "dwi2sh": 165, "maptlotlib": 165, "model_nam": 165, "unsign": [165, 170, 174, 176, 230], "sdp_constraint": 165, "id_constraint_ord": 165, "fsrc": 165, "fdst": 165, "total_length": 165, "16384": 165, "stored_md5": 165, "md5": [165, 176, 194, 219, 225], "data_s": 165, "checksum": [165, 176, 194], "fetchererror": 165, "3shell": 165, "deepn4": [165, 177], "kanakaraj": [165, 169], "park": [165, 169, 176, 193, 236, 237], "session": 165, "2009a": [165, 247, 248], "2009c": [165, 219, 247, 248], "juli": [165, 247, 248], "fonov": [165, 247, 248], "evan": [165, 247, 248], "botteron": [165, 247, 248], "almli": [165, 247, 248], "rc": [165, 217], "mckinstri": [165, 247, 248], "bdcg": [165, 247, 248], "8119": [165, 247, 248], "033": [165, 247, 248], "birth": [165, 247, 248], "adulthood": [165, 247, 248], "s102": [165, 247, 248], "s1053": [165, 247, 248], "70884": [165, 247, 248], "mcconnel": 165, "neurolog": 165, "fee": 165, "herebi": 165, "equip": 165, "injuri": 165, "misus": [165, 219], "snail": [165, 247, 248], "cfin": [165, 221, 247, 248], "hcp842": [165, 247, 248], "oneof": 165, "c57bl6": [165, 247, 248], "gold": [165, 247, 248], "rat": 165, "small_101d": [165, 172], "pittsburgh": 165, "competit": 165, "gqi_vector": [165, 227], "small_25": 165, "10x8x2": 165, "test_piesno": 165, "cb_2": 165, "wild": 165, "bruker": 165, "80x160x5": 165, "110x110x500\u03bcm": 165, "eddi": [165, 221, 237, 247, 248], "drawn": [165, 174, 175], "subject1_test": 165, "subject1_retest": 165, "subject2_test": 165, "subject2_retest": 165, "5281": [86, 165, 247, 248], "zenodo": [86, 165, 247, 248], "996889": [86, 165, 247, 248], "scil": [165, 222, 247, 248], "taiwan": [165, 247, 248], "ntu": [165, 247, 248], "with_raw": 165, "meta": 165, "uw": 165, "exp_bundles_map": 165, "renauld": [165, 235, 237], "bernier": 165, "thalamu": 165, "eeg": [165, 223], "submiss": 165, "bundles_list": 165, "ref_anat": 165, "file1": 165, "file2": 165, "arraysequ": [165, 168, 174, 219, 220, 236], "dataset_descript": [165, 237], "json": [165, 176], "bidsvers": 165, "dump": [165, 236], "bid": [165, 237], "hcp_bucket": 165, "openaccess": 165, "profile_nam": 165, "hcp_1200": 165, "aws_access_key_id": 165, "aws_secret_access_kei": 165, "bucket": 165, "aw": 165, "credenti": 165, "xxxxxxxxxxxxxxxx": 165, "publicdata": 165, "gorgolewski": [165, 222], "160044": 165, "ndarek918ec2": 165, "ima": [166, 167, 174], "fimau": 166, "fimao": 166, "5x5": 166, "fima": 166, "dim_siz": 166, "force_recomput": 166, "meesters2016_ismrm": 166, "duitsandfranken_ijcv": 166, "evaluate_kernel": [166, 177], "kernel_valu": 166, "get_lookup_t": [166, 177], "dataerror": [166, 177], "tempfil": [166, 167, 168, 235], "tempdir": [166, 167, 226], "vg": [166, 176, 202], "num_sampl": 166, "spr": 166, "plu": [166, 170], "patch_siz": [166, 235], "pca_method": [166, 176, 189, 190], "eig": [166, 176, 189, 190], "out_dtyp": 166, "suppress_warn": 166, "svd": [166, 176, 189, 190, 219, 220], "occasion": [166, 176, 189, 190], "tau_": [166, 176, 189], "patch_radius_sigma": 166, "descoteaux08": [166, 176, 191], "wiest": [166, 176, 191], "daessl\u00e9": [166, 176, 191], "nicola": [166, 176, 191, 237], "christian": [166, 170, 176, 191], "rachid": [166, 176, 191], "columnwis": [166, 170], "upfirdn": 166, "port": [166, 235], "itermax": 166, "ep": [166, 170, 171, 174], "realis": 166, "fmri": 166, "cord": 166, "disable_background_mask": 166, "ok": 166, "oversmooth": 166, "un": [166, 221, 226], "inaccuraci": 166, "nonloc": 166, "lasso": [166, 170, 176, 192], "sklearnlinearsolv": [166, 170, 176, 177, 192], "scikit": [166, 170, 171, 176, 192, 249], "linear_model": [166, 170, 176, 192, 229], "linearregress": [166, 176, 192], "regressormixin": [166, 170, 176, 192], "image_as_sampl": 166, "sigma_corr": 166, "stacklevel": [166, 174], "odfs_sh": [166, 170], "odfs_sf": 166, "legaci": [166, 167, 170, 220, 221, 228, 234, 236, 237, 245], "angelino": [166, 167, 170, 172, 245], "fitzgibbon": [166, 167, 170, 172, 245], "raffelt": [166, 170, 245], "tabbara": [166, 170, 245], "dholland": [166, 170, 245], "pietsch": [166, 170, 245], "trekker": 167, "tangent": [167, 174], "max_attempt": 167, "b_tol": 167, "get_pmf": [167, 177], "get_pmf_no_boot": [167, 177], "initial_direct": [167, 170, 174, 177, 228], "is_symmetr": 167, "descend": [167, 170], "incom": [167, 168], "shcoeff": 167, "real_sh_descoteaux": [167, 177], "sheric": 167, "sphere_ev": 167, "xtol": [167, 170], "finder": [167, 224], "gfa_thr": 167, "sh_basis_typ": 167, "subprocess": [167, 170, 176, 195, 196, 198], "cpu_count": [167, 170, 176, 195, 196, 198], "fibernavig": [167, 170, 219], "pmf_gen": 167, "cylinder": 167, "k1": 167, "max_curvatur": 167, "probe_radiu": 167, "mitig": [167, 174], "harder": 167, "intric": 167, "erod": 167, "probe_qu": 167, "cylind": [167, 172, 174], "probe_count": 167, "data_support_expon": 167, "datasupportexpon": 167, "generate_streamlin": [167, 174, 177, 234], "dir": 167, "stream_statu": [167, 174], "fixedstep": [167, 174], "min_radius_curvatur": [167, 174], "onlinelibrari": [167, 174], "wilei": [167, 174], "22005": [167, 174], "hdfgroup": 168, "intro": [168, 222], "storag": [168, 174], "mkstemp": 168, "temp": [168, 225, 237], "dpy_exampl": 168, "fd": 168, "dpw": 168, "write_track": [168, 177], "dpr": 168, "read_track": [168, 177], "read_tracksi": [168, 177], "as_ndarrai": 168, "arrayproxi": 168, "return_coord": 168, "aff2axcod": 168, "vox_siz": [168, 174], "hdr": 168, "peaksandmetr": [168, 170, 175, 177, 219], "fname_shm": 168, "fname_dir": 168, "fname_valu": 168, "fname_indic": 168, "fname_gfa": 168, "reshape_dir": 168, "attach": 168, "fh": 168, "neat": 168, "awar": [168, 174, 242], "verif": 168, "sft_1": 168, "sft_2": 168, "compute_bounding_box": [168, 177], "dtype_dict": [168, 177], "from_sft": [168, 177], "get_data_per_point_kei": [168, 177], "get_data_per_streamline_kei": [168, 177], "get_streamlines_copi": [168, 177], "indices_to_remov": 168, "indices_to_keep": 168, "to_cent": [168, 177], "to_origin": [168, 177], "target_origin": 168, "to_spac": [168, 177], "target_spac": 168, "trk_header_check": 168, "ttype": 168, "loader": 168, "saver": 168, "trx": [168, 176, 236, 237], "return_meta": 168, "pial": 168, "gifti": [168, 230], "image_data": 168, "intent": 168, "img_orig": 168, "compliant": 168, "nimh": 168, "nih": [168, 223], "gov": 168, "nifti1field": 168, "nifti1fields_pag": 168, "ext": [168, 170], "trxfile": [168, 176, 185], "reference_1": 168, "reference_2": 168, "tractogram_typ": 168, "datafram": [168, 173], "panda": [168, 249], "helper": [168, 169, 170, 174], "file_nam": [168, 175, 177], "ply": 168, "stl": 168, "xml": 168, "vtkpolydata": 168, "color_array_nam": 168, "to_lp": 168, "mitkdiffus": 168, "crucial": 169, "advers": 169, "layer": [169, 170, 171, 176, 193, 230], "speech": 169, "relu": 169, "vinci": 169, "booher": 169, "wang": 169, "caron": 169, "wen": 169, "newman": 169, "e0274396": 169, "0274396": 169, "sig_length": 169, "mean_squared_error": 169, "loss_weight": 169, "sgd": 169, "rmsprop": 169, "adagrad": 169, "adadelta": 169, "mean_absolute_error": 169, "mean_absolute_percentage_error": 169, "mean_squared_logarithmic_error": 169, "squared_hing": 169, "hing": 169, "categorical_hing": 169, "logcosh": 169, "categorical_crossentropi": 169, "sparse_categorical_crossentropi": 169, "binary_crossentropi": 169, "kullback_leibler_diverg": 169, "poisson": 169, "binary_accuraci": 169, "categorical_accuraci": 169, "top_k_categorical_accuraci": 169, "sparse_categorical_accuraci": 169, "sparse_top_k_categorical_accuraci": 169, "batch_siz": 169, "max_queue_s": 169, "worker": [169, 170, 174], "use_multiprocess": 169, "return_dict": 169, "silent": 169, "queue": [169, 230], "validation_split": 169, "validation_data": 169, "initial_epoch": 169, "steps_per_epoch": 169, "validation_step": 169, "validation_batch_s": 169, "validation_freq": 169, "kera": 169, "x_val": 169, "y_val": 169, "tf": [169, 174], "Its": [169, 170, 172], "load_weight": [169, 177], "filepath": [169, 250], "save_weight": [169, 177], "textual": 169, "nonetyp": 169, "train_test_split": [169, 177], "test_siz": 169, "train_siz": 169, "random_st": 169, "stratifi": 169, "complement": 169, "glossari": 169, "x_train": 169, "x_test": 169, "y_train": 169, "y_test": 169, "out_channel": 169, "kernel_s": 169, "invoc": [169, 225, 226], "init_scop": 169, "input_shap": 169, "input_spec": 169, "savedmodel": 169, "tfmot": 169, "tflite": 169, "came": 169, "deepn4_model": 169, "mimick": 169, "yao": 169, "cai": 169, "newlin": 169, "moyer": 169, "n4itk": 169, "load_model_weight": [169, 177], "weights_path": 169, "deepn4_default_weight": 169, "load_resampl": [169, 177], "subj": 169, "img_affin": 169, "assembl": 169, "final_correct": 169, "drop_r": 169, "n_layer": 169, "layer_typ": 169, "crf": [169, 176], "voxsiz": 169, "return_affin": 169, "return_prob": 169, "largest_area": 169, "ndarri": [169, 174], "foreground": 169, "minor": [169, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232], "pred_output": 169, "input_data": 169, "model_scal": 169, "fetch_model_weights_path": 169, "histo_resdnn_weight": 169, "chunk_siz": 169, "nonzero": [169, 170, 171], "pred_sh_coef": 169, "num_hidden": 169, "act_hidden": 169, "dropout": 169, "num_out": 169, "act_out": 169, "softmax": 169, "perceptron": 169, "batchsiz": 169, "testsiz": 169, "outputs": 169, "disco": 169, "alon": 169, "blaber": 169, "landman": 169, "synthes": 169, "roger": 169, "e0236418": 169, "min_v": 169, "max_v": 169, "new_min": 169, "new_max": 169, "norm_min": 169, "norm_max": 169, "init_shap": 169, "voxelspac": 169, "transformed_img": 169, "image_shap": 169, "recovered_img": 169, "binary_img": 169, "chunk": [169, 170, 252], "hole": 169, "largest_img": 169, "methodologi": 170, "funk": 170, "radon": 170, "bx": 170, "plug": 170, "rewritten": 170, "sh_coef": 170, "mymodel": 170, "mymodelfit": 170, "cache_get": [170, 177], "odf_basis_matrix": 170, "_compute_basis_matrix": 170, "cache_set": [170, 177], "cache_clear": [170, 177], "compute_expensive_matrix": 170, "expens": [170, 174], "expensive_matrix": 170, "cod": 170, "coefficient_of_determin": 170, "model_arg": 170, "model_kwarg": 170, "divis": [170, 219, 222, 226], "dwi_respons": 170, "reg_spher": 170, "inject": 170, "knowledg": 170, "tractomet": 170, "pred_sig": 170, "sdtmodel": 170, "csdmodel": 170, "opppos": 170, "roi_cent": [170, 176, 196], "roi_radiu": 170, "fa_cal": 170, "return_number_of_voxel": 170, "fa_oper": [170, 220], "versu": 170, "r2_term": 170, "frt": 170, "dwsignal": 170, "b_reg": 170, "r_rh": 170, "fodf_sh": 170, "num_it": 170, "minimis": 170, "f_n": 170, "xf_n": 170, "h_": 170, "b_": [170, 241, 242], "reg": 170, "hf_": 170, "rightarrow": 170, "2x": 170, "th_": 170, "tx": 170, "regularis": 170, "superresolut": 170, "mu": [170, 171], "qf_n": 170, "choleski": [170, 227], "l_y": 170, "tf_n": 170, "rankn": 170, "f_0": 170, "pf_0": 170, "l_": 170, "h_n": 170, "f_": 170, "donald": 170, "odf_sh": [170, 177], "plai": 170, "odfdeconv": [170, 226], "20x20x20": 170, "cti_param": 170, "fifteen": 170, "twenti": 170, "k_": 170, "aniso": 170, "d_c": 170, "overlin": [170, 245], "k_total": [170, 177], "excess": 170, "psi": 170, "2d_": 170, "2w_": 170, "ccti": 170, "columnar": 170, "min_diffus": [170, 224], "inverse_design_matrix": 170, "return_s0_hat": 170, "ull": [170, 176, 197], "wll": 170, "uwll": [170, 176, 197], "lmi": 170, "ardekani": [170, 176, 197], "multi_fit": [170, 177], "dki_param": 170, "model_s0": 170, "min_kurtosi": 170, "42857142857142855": 170, "e1": [170, 172], "analogi": 170, "barmpouti": 170, "zhuo": 170, "8th": 170, "symposium": 170, "nano": [170, 176, 208], "macro": 170, "5872402": 170, "akc": [170, 177], "adc": [170, 177, 225], "equiv": 170, "_f": 170, "frobeniu": 170, "kmax": [170, 177], "gtol": 170, "4pi": 170, "domega_mathbf": 170, "f_1": 170, "f_2": 170, "lambda_2lambda_3": 170, "r_f": 170, "3lambda_1": 170, "lambda_1lambda_2": 170, "lambda_1lambda_3": 170, "r_d": 170, "2lambda_1": 170, "3sqrt": 170, "carlson": 170, "hardin": 170, "sloan": 170, "mclaren": 170, "snub": 170, "omega_": 170, "mathnbf": 170, "n_j": 170, "n_l": 170, "tr": 170, "medicine69": 170, "2pi": 170, "domega": 170, "_mathbf": 170, "bot": [170, 217, 221, 222, 226, 228, 237], "g_1": 170, "g_2": 170, "errtol": 170, "incomplet": [170, 217, 219, 220, 221, 222, 223, 228, 229, 230, 232, 233, 234, 235, 236, 237], "infti": [170, 245], "9409227": 170, "adv": 170, "biologicali": 170, "pluasibl": 170, "advc": 170, "eingenvalu": 170, "max_dir": 170, "sunaert": 170, "pitfal": 170, "positivedefiniteleastsquar": [170, 177], "wrot": 170, "hui": 170, "cheung": 170, "qi": 170, "indi": 170, "indj": 170, "indk": 170, "indl": 170, "wre": 170, "ind_i": [170, 172], "ind_j": [170, 172], "ind_k": [170, 172], "ind_l": [170, 172], "k_element": 170, "eigval": 170, "eigvec": 170, "kurtosismicrostruturemodel": 170, "ols_fit_dki": 170, "wls_fit_dki": 170, "006": 170, "awf_onli": 170, "optiom": 170, "kurtosismicrostructur": 170, "axonal_diffus": [170, 177], "hindered_ad": [170, 177], "hindered_ev": [170, 177], "hindered_rd": [170, 177], "adc_": 170, "restricted_ev": [170, 177], "rde": 170, "edt": 170, "idt": 170, "r_start": [170, 176, 198], "r_end": [170, 176, 198], "r_step": [170, 176, 198], "nowrap": 170, "eqnarrai": 170, "i2pimathbf": 170, "cdotmathbf": 170, "dmathbf": 170, "sit": 170, "q_space": [170, 176, 198], "han": [170, 174, 176, 198], "dsi_voxel": [170, 177], "gqrid_siz": 170, "generalizedqsampl": 170, "dr_x": 170, "dr_y": 170, "dr_z": 170, "psi_": 170, "rhat": 170, "dr": 170, "truncat": [170, 175, 245], "p_": [170, 243], "iiintlimits_": 170, "bigg": 170, "qspace": 170, "qgrid": 170, "qtabl": 170, "premultipli": 170, "rradiu": 170, "interp_coord": 170, "diffusionspectrum": 170, "new_data": 170, "new_gtab": 170, "estimated_snr": 170, "qgrid_sampl": 170, "siz_x": 170, "siz_i": 170, "siz_z": 170, "psf": 170, "ifft": 170, "prop": 170, "numit": 170, "acc_factor": 170, "nll": [170, 176, 199, 229, 237], "rt": [170, 176, 199], "min_sign": [170, 226, 228], "consumpt": 170, "1e4": 170, "mattiello": [170, 176, 199], "elucid": [170, 176, 199], "lin": [170, 176, 199], "ching": [170, 176, 199], "cutoff": 170, "dti_param": 170, "s0_hat": [170, 177], "ec": 170, "pele": 170, "gubjartsson": 170, "kikini": 170, "jolesz": 170, "dodf": 170, "scratch": [170, 219, 228], "ftp": 170, "sop": 170, "athena": [170, 219], "descoteaux_thesi": 170, "heta": 170, "infin": [170, 174], "lambda_i": [170, 241, 242], "lambda_1lambda_2lambda_3": 170, "denomin": 170, "appendix": 170, "batchelor": 170, "moakher": 170, "atkinson": 170, "rigor": 170, "calculu": 170, "newcomb": 170, "etal": 170, "thompson": 170, "monozygot": 170, "dizygot": 170, "twin": 170, "arsigni": 170, "fillard": 170, "medecin": 170, "q_form": 170, "a_hat": 170, "daniel": [170, 222], "enni": 170, "kindlmann": 170, "a_squiggl": 170, "widetild": 170, "mo": 170, "orthotropi": 170, "fit_tensor": [170, 217, 219], "counteract": 170, "heteroscedast": 170, "return_lower_triangular": 170, "fail_is_nan": 170, "npar": 170, "gmm": 170, "geman": 170, "mclure": 170, "nlls_param": 170, "n_direct": 170, "background_nois": [170, 176, 197, 199], "num_vox": 170, "restore_param": 170, "sixth": 170, "dummi": 170, "1994a": 170, "hermitian": 170, "bxx": 170, "byi": 170, "bzz": 170, "bxy": 170, "bxz": 170, "byz": 170, "odf_vertic": [170, 174, 226], "ang_thr": [170, 174, 177], "qa_thr": [170, 174, 177], "total_weight": [170, 174, 177], "lambda_lb": 170, "lambda_csd": 170, "rho": [170, 241, 243], "po": [170, 225], "tessel": 170, "get_3shell_gtab": [170, 177], "descoteaux07_legacy_msg": 170, "catch_warn": 170, "filterwarn": 170, "pendingdeprecationwarn": 170, "analyticalmodel": 170, "clip_neg": 170, "b_uniqu": 170, "data_norm": 170, "lb_matrix": 170, "fwdti_param": 170, "diso": 170, "sig": 170, "mdreg": 170, "0027": 170, "piter": 170, "md_reg": 170, "inter": 170, "fw_param": 170, "f_transform": 170, "ft": 170, "arcsin": 170, "tensor_el": 170, "cholesky_el": 170, "r0": 170, "r1": 170, "r3": 170, "r4": 170, "r5": 170, "carew": 170, "meyerand": 170, "anomal": 170, "20832": 170, "pg": 170, "subdivide_octahedron": [170, 177], "create_unit_spher": [170, 177], "gq": 170, "voxel_sign": 170, "max_qa": 170, "nqa": 170, "equatori": 170, "zone": 170, "conjug": [170, 245], "cone": 170, "x_scale": 170, "ftol": 170, "extracellular": 170, "fill_na": 170, "least_squar": 170, "federau": 170, "estimate_f_d_star": [170, 177], "params_f_d_star": 170, "estimate_linear_fit": [170, 177], "split_b": 170, "intercept": 170, "ivim_param": 170, "ivim_sign": 170, "cvx_fit": [170, 177], "f1": 170, "f2": 170, "ivim_mix_cost_on": [170, 177], "stoc_search_cost": [170, 177], "moor": [170, 174], "penros": 170, "thorough": 170, "nlls_cost": [170, 177], "x_f": 170, "stationari": 170, "exp_phi1": 170, "x_and_f_to_x_f": [170, 177], "x_f_to_x_and_f": [170, 177], "selector": [170, 220], "eigenvalue_threshold": 170, "dti_scale_estim": 170, "static_diffus": 170, "0007": [170, 172], "eapoc": 170, "ensembl": [170, 172], "ph": [170, 174], "avram": 170, "posiv": 170, "vastli": 170, "golden_direct": 170, "map_model": 170, "mapfit": 170, "mapmri_coef": 170, "lopt": 170, "errorcod": 170, "linalgerror": [170, 218, 222], "fitted_sign": [170, 177], "mapmri_r": [170, 177], "mapmri_coeff": [170, 177], "mapmri_mu": [170, 177], "c13": 170, "gaussiann": 170, "act": [170, 174, 219, 227], "c8": 170, "r_point": 170, "recalcul": 170, "qvals_or_gtab": 170, "qvalu": [170, 226], "c14": 170, "44a": 170, "c11": 170, "mu_squar": 170, "u0": 170, "index_matrix": 170, "q_gradient": 170, "rgrad": 170, "binomi": 170, "odf_mat": 170, "n_vertic": 170, "n_mapmri_coef": 170, "odf_sh_mat": 170, "n_sh_coef": 170, "c7": 170, "n_coef": 170, "ind_mat": 170, "gridsiz": 170, "radius_max": 170, "tab": [170, 177, 224, 226, 236], "phi_n": 170, "phi_m": 170, "submatric": 170, "s_mat": 170, "t_mat": 170, "u_mat": 170, "weights_arrai": 170, "ncoef": 170, "n_of_weight": 170, "gcv_startpoint": 170, "startpoint": [170, 177], "optimal_lambda": 170, "coeff": [170, 237], "setter": 170, "warm": 170, "qp": 170, "iso_comp": 170, "osqp": 170, "primal": 170, "multishel": [170, 234], "msdki_param": 170, "diffusit": 170, "msignal": 170, "nub": 170, "fit_arrai": 170, "single_voxel_fit": 170, "sum_i": 170, "psi_i": 170, "bracket": [170, 174], "cohen": 170, "adad": 170, "wald": 170, "jmri": 170, "ndrrai": 170, "constrain_q0": 170, "10000000000": 170, "eco": 170, "textbf": 170, "sum_k": 170, "ik": 170, "phi_i": 170, "t_k": 170, "c_i": 170, "q0": 170, "uniti": 170, "cham": 170, "qtdmri_coef": 170, "ut": 170, "tau_scal": 170, "cvxpy_solution_optim": 170, "rt_point": 170, "qtdmri_to_mapmri_coef": [170, 177], "convers": [170, 171, 176, 210, 228, 237, 246], "depen": 170, "sparsity_ab": [170, 177], "sparsity_dens": [170, 177], "part1_ut_precomp": 170, "part23_ut_precomp": 170, "part4_ut_precomp": 170, "part1_uq_iso_precomp": 170, "b2": [170, 175], "c4": 170, "0005": 170, "grid_size_r": 170, "max_radius_r": 170, "grid_size_tau": 170, "min_radius_tau": 170, "max_radius_tau": 170, "weight_arrai": 170, "big_delta_start": 170, "big_delta_end": 170, "g_start": 170, "g_end": 170, "bval_isolin": 170, "14000": 170, "alpha_shad": 170, "shade": 170, "_ols_fit": 170, "_wls_fit": 170, "_sdpdc_fit": 170, "c_": [170, 174], "d_sq": [170, 177], "mean_d_sq": [170, 177], "themselv": 170, "egin": 170, "bmatrix": 170, "ig": 170, "bmat": 170, "ight": 170, "otimesmathbf": 170, "_notimesmathbf": 170, "obj_arr": 170, "adj_ind": 170, "adj_indic": 170, "unrol": 170, "vertex_ind": 170, "vertind": 170, "adj_count": 170, "uint32": [170, 176], "odfn": 170, "radiusn": 170, "anglesn": 170, "return_index": 170, "remove_antipod": 170, "return_indic": [170, 171, 177], "unique_vertic": [170, 224], "relative_threshold": 170, "intp": 170, "outn": 170, "summat": 170, "alongsid": [170, 174, 175], "f_csf": [170, 177], "f_gm": [170, 177], "fit_vec": 170, "s_i": 170, "f_j": 170, "b_i": 170, "_j": 170, "b_id_": 170, "v_i": 170, "d_j": 170, "hf": 170, "modern": 170, "prod_": 170, "i_": 170, "i_n": 170, "t_n": 170, "gautschi": 170, "slavik": 170, "s0025": 170, "0470267": 170, "discontinu": 170, "global_fit": 170, "elsewher": 170, "alpha_": 170, "div": 170, "triangledown": 170, "lvert": 170, "rvert": 170, "biggr": 170, "rvert_": 170, "discrep": [170, 219, 226, 231], "chambol": 170, "boil": 170, "n_vox": 170, "elasticnet": 170, "parallel_backend": 170, "joblib": [170, 234], "parallelbackendbas": 170, "backend": 170, "loki": 170, "bottleneck": 170, "gil": 170, "tensor_matrix": 170, "behrens2007": 170, "stick_matrix": 170, "tej": [170, 219], "berg": 170, "jbabdi": 170, "rushworth": 170, "mf": [170, 172], "woolrich": 170, "mw": 170, "gain": [170, 172, 174], "sampling_matrix": [170, 177], "assume_norm": 170, "qball": [170, 224], "shm_coef": 170, "signal_object": 170, "where_dwi": 170, "residualbootstrapwapp": 170, "rh": 170, "r_sh": 170, "dirac": [170, 235], "colatitudin": 170, "use_scipi": 170, "y_mn": 170, "m_n": 170, "sph_harm": [170, 217], "onward": 170, "interchang": 170, "agre": [170, 245], "0_n": 170, "real_sh": 170, "gadian": 170, "m_list": 170, "n_list": 170, "kx1": 170, "lazi": 170, "where_b0": 170, "leverag": [170, 237], "hd": 170, "lcr": 170, "haroon": 170, "return_inv": 170, "n_coeff": 170, "rarrow": 170, "2n": 170, "3l": 170, "8n": 170, "norm_factor": 170, "rectifi": 170, "log_ap": 170, "ixjxkxc": 170, "ixjxkx6": 170, "lacerda": 170, "catani": 170, "simmon": 170, "full_sh_coeff": 170, "out_sh_coeff": 170, "tournier19": 170, "mrtrixbasi": 170, "mrtrixdipybas": 170, "025330295910584444": [170, 172], "constrain_e0": 170, "positive_constraint": 170, "amongst": 170, "rathi": 170, "20e": 170, "get_isbi2013_2shell_gtab": [170, 177], "shore_coef": 170, "pdf_grid": [170, 177], "shore_coeff": [170, 177], "qtextbf": 170, "nlm": 170, "biggl": 170, "dfrac": 170, "expbiggl": 170, "2zeta": 170, "y_l": [170, 245], "rtab": 170, "sphere_vertic": 170, "bxxxx": 170, "byyyi": 170, "bzzzz": 170, "bxxxy": 170, "bxxxz": 170, "bxyyi": 170, "byyyz": 170, "bxzzz": 170, "byzzz": 170, "bxxyi": 170, "bxxzz": 170, "byyzz": 170, "bxxyz": 170, "bxyyz": 170, "bxyzz": 170, "blogs0": 170, "from_format": [170, 176, 186], "to_format": [170, 176, 186], "dwi2tensor": 170, "antsx": 170, "fmrib": [170, 234], "ox": 170, "fslwiki": 170, "fdt": 170, "userguid": 170, "ellid": 170, "cluster_map": 171, "evaluate_result": [171, 177], "slr_select": 171, "neirborhood": 171, "ba_valu": 171, "prune": [171, 174, 176, 208], "bmd_valu": 171, "slr_metric": [171, 176, 208], "slr_x0": 171, "slr_bound": 171, "slr_method": 171, "bundlemindistancemetr": [171, 177], "recognized_transf": 171, "recognized_label": 171, "lt": 171, "dtracks0": 171, "dtracks1": 171, "ba": 171, "recognized_bundl": 171, "expert_bundl": 171, "select_randomli": 171, "500000": 171, "refdata": [171, 177], "id_datum": 171, "add_clust": [171, 177], "clusters_s": [171, 177], "get_large_clust": [171, 177], "get_small_clust": [171, 177], "max_siz": 171, "remove_clust": [171, 177], "mdf_12point": 171, "max_nb_clust": 171, "2147483647": 171, "nk": 171, "farther": 171, "exceed": 171, "tradeoff": [171, 174], "garyfallidis16": 171, "million": [171, 174], "singapor": 171, "quickbundlex": 171, "child": [171, 176], "is_leaf": [171, 177], "get_clust": [171, 177], "wanted_level": 171, "iter_preord": [171, 177], "traverse_postord": [171, 177], "clusters_list": 171, "centroid_shap": 171, "get_cluster_map": [171, 177], "get_stat": [171, 177], "get_tree_cluster_map": [171, 177], "datum_idx": 171, "nb_dimens": 171, "c_infer_shap": 171, "overrid": [171, 174, 219, 230], "nb_mpt": 171, "bin_siz": 171, "bidirect": 171, "barycent": 171, "use_neg": 171, "nb_sline": 171, "nb_slines_ref": 171, "coo_matrix": [171, 174], "non_zero_id": 171, "nb_non_empty_row": 171, "sline": 171, "nearest_id": 171, "nearest_dist": 171, "nb_non_empty_col": 171, "masked_vol": 171, "npmin": 171, "npmax": 171, "input_volum": [171, 176, 207], "bet": 171, "maskedvolum": 171, "tensor_fit": 171, "r_min": 171, "r_max": 171, "g_min": 171, "g_max": 171, "b_min": 171, "b_max": 171, "coars": 171, "new_cc_mask": 171, "manhattan": [171, 174], "c_dist": 171, "c_are_compat": 171, "features1": 171, "features2": 171, "datum1": 171, "datum2": 171, "data1": 171, "spawn": 171, "llist": 171, "mu_": 171, "sigma_": 171, "eta_": 171, "initialize_param_uniform": [171, 177], "negloglikelihood": [171, 177], "sigmasq": 171, "nloglik": 171, "prob_imag": [171, 177], "p_l_n": 171, "prob_neighborhood": [171, 177], "p_l_y": 171, "seg_stat": [171, 177], "seg_imag": 171, "var": [171, 226, 230, 235], "update_param": [171, 177], "jan": 171, "mu_upd": 171, "var_upd": 171, "icm_is": [171, 177], "seg": 171, "pott": 171, "Ising": 171, "potts_model": 171, "new_seg": 171, "initialize_maximum_likelihood": [171, 177], "loglikelihood": 171, "neglog": 171, "likelihhood": 171, "stan": 171, "pln": 171, "upperbound": 171, "upper_bound": 171, "save_histori": 171, "posteriori": 171, "rice": 172, "rayleigh": 172, "gudbjartson": 172, "patz": 172, "signal_w_nois": 172, "dx": 172, "dy": 172, "dz": 172, "0004": 172, "00628947": 172, "01257895": 172, "01886842": 172, "0251579": 172, "03144737": 172, "03773685": 172, "04402632": 172, "0503158": 172, "05660527": 172, "06289475": 172, "06918422": 172, "0754737": 172, "08176317": 172, "08805265": 172, "09434212": 172, "1006316": 172, "10692107": 172, "11321055": 172, "11950002": 172, "1257895": 172, "13207897": 172, "13836845": 172, "14465792": 172, "15094739": 172, "15723687": 172, "16352634": 172, "16981582": 172, "17610529": 172, "18239477": 172, "18868424": 172, "19497372": 172, "20126319": 172, "20755267": 172, "21384214": 172, "22013162": 172, "22642109": 172, "23271057": 172, "23900004": 172, "24528952": 172, "25157899": 172, "25786847": 172, "26415794": 172, "27044742": 172, "27673689": 172, "28302637": 172, "28931584": 172, "29560531": 172, "30189479": 172, "30818426": 172, "31447374": 172, "32076321": 172, "32705269": 172, "33334216": 172, "33963164": 172, "34592111": 172, "35221059": 172, "35850006": 172, "36478954": 172, "37107901": 172, "37736849": 172, "38365796": 172, "38994744": 172, "39623691": 172, "40252639": 172, "40881586": 172, "41510534": 172, "42139481": 172, "42768429": 172, "43397376": 172, "44026323": 172, "44655271": 172, "45284218": 172, "45913166": 172, "46542113": 172, "47171061": 172, "47800008": 172, "48428956": 172, "49057903": 172, "49686851": 172, "50315798": 172, "50944746": 172, "51573693": 172, "52202641": 172, "52831588": 172, "53460536": 172, "54089483": 172, "54718431": 172, "55347378": 172, "55976326": 172, "56605273": 172, "57234221": 172, "57863168": 172, "58492115": 172, "59121063": 172, "5975001": 172, "60378958": 172, "61007905": 172, "61636853": 172, "622658": 172, "62894748": 172, "63523695": 172, "64152643": 172, "6478159": 172, "65410538": 172, "66039485": 172, "66668433": 172, "6729738": 172, "67926328": 172, "68555275": 172, "69184223": 172, "6981317": 172, "70442118": 172, "71071065": 172, "71700013": 172, "7232896": 172, "72957907": 172, "73586855": 172, "74215802": 172, "7484475": 172, "75473697": 172, "76102645": 172, "76731592": 172, "7736054": 172, "77989487": 172, "78618435": 172, "79247382": 172, "7987633": 172, "80505277": 172, "81134225": 172, "81763172": 172, "8239212": 172, "83021067": 172, "83650015": 172, "84278962": 172, "8490791": 172, "85536857": 172, "86165805": 172, "86794752": 172, "87423699": 172, "88052647": 172, "88681594": 172, "89310542": 172, "89939489": 172, "90568437": 172, "91197384": 172, "91826332": 172, "92455279": 172, "93084227": 172, "93713174": 172, "94342122": 172, "94971069": 172, "95600017": 172, "96228964": 172, "96857912": 172, "97486859": 172, "98115807": 172, "98744754": 172, "99373702": 172, "00002649": 172, "00631597": 172, "01260544": 172, "01889491": 172, "02518439": 172, "03147386": 172, "03776334": 172, "04405281": 172, "05034229": 172, "05663176": 172, "06292124": 172, "06921071": 172, "07550019": 172, "08178966": 172, "08807914": 172, "09436861": 172, "10065809": 172, "10694756": 172, "11323704": 172, "11952651": 172, "12581599": 172, "13210546": 172, "13839494": 172, "14468441": 172, "15097389": 172, "15726336": 172, "16355283": 172, "16984231": 172, "17613178": 172, "18242126": 172, "18871073": 172, "19500021": 172, "20128968": 172, "20757916": 172, "21386863": 172, "22015811": 172, "22644758": 172, "23273706": 172, "23902653": 172, "24531601": 172, "25160548": 172, "25789496": 172, "26418443": 172, "27047391": 172, "27676338": 172, "28305286": 172, "28934233": 172, "29563181": 172, "30192128": 172, "30821075": 172, "31450023": 172, "3207897": 172, "32707918": 172, "33336865": 172, "33965813": 172, "3459476": 172, "35223708": 172, "35852655": 172, "36481603": 172, "3711055": 172, "37739498": 172, "38368445": 172, "38997393": 172, "3962634": 172, "40255288": 172, "40884235": 172, "41513183": 172, "4214213": 172, "42771078": 172, "43400025": 172, "44028973": 172, "4465792": 172, "45286867": 172, "45915815": 172, "46544762": 172, "4717371": 172, "47802657": 172, "48431605": 172, "49060552": 172, "496895": 172, "50318447": 172, "50947395": 172, "51576342": 172, "5220529": 172, "52834237": 172, "53463185": 172, "54092132": 172, "5472108": 172, "55350027": 172, "55978975": 172, "56607922": 172, "5723687": 172, "57865817": 172, "58494765": 172, "59123712": 172, "59752659": 172, "60381607": 172, "61010554": 172, "61639502": 172, "62268449": 172, "62897397": 172, "63526344": 172, "64155292": 172, "64784239": 172, "65413187": 172, "66042134": 172, "66671082": 172, "67300029": 172, "67928977": 172, "68557924": 172, "69186872": 172, "69815819": 172, "70444767": 172, "71073714": 172, "71702662": 172, "72331609": 172, "72960557": 172, "73589504": 172, "74218451": 172, "74847399": 172, "75476346": 172, "76105294": 172, "76734241": 172, "77363189": 172, "77992136": 172, "78621084": 172, "79250031": 172, "79878979": 172, "80507926": 172, "81136874": 172, "81765821": 172, "82394769": 172, "83023716": 172, "83652664": 172, "84281611": 172, "84910559": 172, "85539506": 172, "86168454": 172, "86797401": 172, "87426349": 172, "88055296": 172, "88684243": 172, "89313191": 172, "89942138": 172, "90571086": 172, "91200033": 172, "91828981": 172, "92457928": 172, "93086876": 172, "93715823": 172, "94344771": 172, "94973718": 172, "95602666": 172, "96231613": 172, "96860561": 172, "97489508": 172, "98118456": 172, "98747403": 172, "99376351": 172, "00005298": 172, "00634246": 172, "01263193": 172, "01892141": 172, "02521088": 172, "03150035": 172, "03778983": 172, "0440793": 172, "05036878": 172, "05665825": 172, "06294773": 172, "0692372": 172, "07552668": 172, "08181615": 172, "08810563": 172, "0943951": 172, "10068458": 172, "10697405": 172, "11326353": 172, "119553": 172, "12584248": 172, "13213195": 172, "13842143": 172, "1447109": 172, "15100038": 172, "15728985": 172, "16357932": 172, "1698688": 172, "17615827": 172, "18244775": 172, "18873722": 172, "1950267": 172, "20131617": 172, "20760565": 172, "21389512": 172, "2201846": 172, "22647407": 172, "23276355": 172, "23905302": 172, "2453425": 172, "25163197": 172, "25792145": 172, "26421092": 172, "2705004": 172, "27678987": 172, "28307935": 172, "28936882": 172, "2956583": 172, "30194777": 172, "30823724": 172, "31452672": 172, "32081619": 172, "32710567": 172, "33339514": 172, "33968462": 172, "34597409": 172, "35226357": 172, "35855304": 172, "36484252": 172, "37113199": 172, "37742147": 172, "38371094": 172, "39000042": 172, "39628989": 172, "40257937": 172, "40886884": 172, "41515832": 172, "42144779": 172, "42773727": 172, "43402674": 172, "44031622": 172, "44660569": 172, "45289516": 172, "45918464": 172, "46547411": 172, "47176359": 172, "47805306": 172, "48434254": 172, "49063201": 172, "49692149": 172, "50321096": 172, "50950044": 172, "51578991": 172, "52207939": 172, "52836886": 172, "53465834": 172, "54094781": 172, "54723729": 172, "55352676": 172, "55981624": 172, "56610571": 172, "57239519": 172, "57868466": 172, "58497414": 172, "59126361": 172, "59755308": 172, "60384256": 172, "61013203": 172, "61642151": 172, "62271098": 172, "62900046": 172, "63528993": 172, "64157941": 172, "64786888": 172, "65415836": 172, "66044783": 172, "66673731": 172, "67302678": 172, "67931626": 172, "68560573": 172, "69189521": 172, "69818468": 172, "70447416": 172, "71076363": 172, "71705311": 172, "72334258": 172, "72963206": 172, "73592153": 172, "742211": 172, "74850048": 172, "75478995": 172, "76107943": 172, "7673689": 172, "77365838": 172, "77994785": 172, "78623733": 172, "7925268": 172, "79881628": 172, "80510575": 172, "81139523": 172, "8176847": 172, "82397418": 172, "83026365": 172, "83655313": 172, "8428426": 172, "84913208": 172, "85542155": 172, "86171103": 172, "8680005": 172, "87428998": 172, "88057945": 172, "88686892": 172, "8931584": 172, "89944787": 172, "90573735": 172, "91202682": 172, "9183163": 172, "92460577": 172, "93089525": 172, "93718472": 172, "9434742": 172, "94976367": 172, "95605315": 172, "96234262": 172, "9686321": 172, "97492157": 172, "98121105": 172, "98750052": 172, "99379": 172, "00007947": 172, "00636895": 172, "01265842": 172, "0189479": 172, "02523737": 172, "03152684": 172, "03781632": 172, "04410579": 172, "05039527": 172, "05668474": 172, "06297422": 172, "06926369": 172, "07555317": 172, "08184264": 172, "08813212": 172, "09442159": 172, "10071107": 172, "10700054": 172, "11329002": 172, "11957949": 172, "12586897": 172, "13215844": 172, "13844792": 172, "14473739": 172, "15102687": 172, "15731634": 172, "16360582": 172, "16989529": 172, "17618476": 172, "18247424": 172, "18876371": 172, "19505319": 172, "20134266": 172, "20763214": 172, "21392161": 172, "22021109": 172, "22650056": 172, "23279004": 172, "23907951": 172, "24536899": 172, "25165846": 172, "25794794": 172, "26423741": 172, "27052689": 172, "27681636": 172, "28310584": 172, "28939531": 172, "29568479": 172, "30197426": 172, "30826374": 172, "31455321": 172, "32084268": 172, "32713216": 172, "33342163": 172, "33971111": 172, "34600058": 172, "35229006": 172, "35857953": 172, "36486901": 172, "37115848": 172, "37744796": 172, "38373743": 172, "39002691": 172, "39631638": 172, "40260586": 172, "40889533": 172, "41518481": 172, "42147428": 172, "42776376": 172, "43405323": 172, "44034271": 172, "44663218": 172, "45292166": 172, "45921113": 172, "4655006": 172, "47179008": 172, "47807955": 172, "48436903": 172, "4906585": 172, "49694798": 172, "50323745": 172, "50952693": 172, "5158164": 172, "52210588": 172, "52839535": 172, "53468483": 172, "5409743": 172, "54726378": 172, "55355325": 172, "55984273": 172, "5661322": 172, "57242168": 172, "57871115": 172, "58500063": 172, "5912901": 172, "59757958": 172, "60386905": 172, "61015852": 172, "616448": 172, "62273747": 172, "62902695": 172, "63531642": 172, "6416059": 172, "64789537": 172, "65418485": 172, "66047432": 172, "6667638": 172, "67305327": 172, "67934275": 172, "68563222": 172, "6919217": 172, "69821117": 172, "70450065": 172, "71079012": 172, "7170796": 172, "72336907": 172, "72965855": 172, "73594802": 172, "7422375": 172, "74852697": 172, "75481644": 172, "76110592": 172, "76739539": 172, "77368487": 172, "77997434": 172, "78626382": 172, "79255329": 172, "79884277": 172, "80513224": 172, "81142172": 172, "81771119": 172, "82400067": 172, "83029014": 172, "83657962": 172, "84286909": 172, "84915857": 172, "85544804": 172, "86173752": 172, "86802699": 172, "87431647": 172, "88060594": 172, "88689542": 172, "89318489": 172, "89947436": 172, "90576384": 172, "91205331": 172, "91834279": 172, "92463226": 172, "93092174": 172, "93721121": 172, "94350069": 172, "94979016": 172, "95607964": 172, "96236911": 172, "96865859": 172, "97494806": 172, "98123754": 172, "98752701": 172, "99381649": 172, "00010596": 172, "00639544": 172, "01268491": 172, "01897439": 172, "02526386": 172, "03155334": 172, "03784281": 172, "04413228": 172, "05042176": 172, "05671123": 172, "06300071": 172, "06929018": 172, "07557966": 172, "08186913": 172, "08815861": 172, "09444808": 172, "10073756": 172, "10702703": 172, "11331651": 172, "11960598": 172, "12589546": 172, "13218493": 172, "13847441": 172, "14476388": 172, "15105336": 172, "15734283": 172, "16363231": 172, "16992178": 172, "17621126": 172, "18250073": 172, "1887902": 172, "19507968": 172, "20136915": 172, "20765863": 172, "2139481": 172, "22023758": 172, "22652705": 172, "23281653": 172, "239106": 172, "24539548": 172, "25168495": 172, "25797443": 172, "2642639": 172, "27055338": 172, "27684285": 172, "28313233": 172, "2894218": 172, "29571128": 172, "30200075": 172, "30829023": 172, "3145797": 172, "32086918": 172, "32715865": 172, "33344812": 172, "3397376": 172, "34602707": 172, "35231655": 172, "35860602": 172, "3648955": 172, "37118497": 172, "37747445": 172, "38376392": 172, "3900534": 172, "39634287": 172, "40263235": 172, "40892182": 172, "4152113": 172, "42150077": 172, "42779025": 172, "43407972": 172, "4403692": 172, "44665867": 172, "45294815": 172, "45923762": 172, "4655271": 172, "47181657": 172, "47810604": 172, "48439552": 172, "49068499": 172, "49697447": 172, "50326394": 172, "50955342": 172, "51584289": 172, "52213237": 172, "52842184": 172, "53471132": 172, "54100079": 172, "54729027": 172, "55357974": 172, "55986922": 172, "56615869": 172, "57244817": 172, "57873764": 172, "58502712": 172, "59131659": 172, "59760607": 172, "60389554": 172, "61018502": 172, "61647449": 172, "62276396": 172, "62905344": 172, "63534291": 172, "64163239": 172, "64792186": 172, "65421134": 172, "66050081": 172, "66679029": 172, "67307976": 172, "67936924": 172, "68565871": 172, "69194819": 172, "69823766": 172, "70452714": 172, "71081661": 172, "71710609": 172, "72339556": 172, "72968504": 172, "73597451": 172, "74226399": 172, "74855346": 172, "75484294": 172, "76113241": 172, "76742188": 172, "77371136": 172, "78000083": 172, "78629031": 172, "79257978": 172, "79886926": 172, "80515873": 172, "81144821": 172, "81773768": 172, "82402716": 172, "83031663": 172, "83660611": 172, "84289558": 172, "84918506": 172, "85547453": 172, "86176401": 172, "86805348": 172, "87434296": 172, "88063243": 172, "88692191": 172, "89321138": 172, "89950086": 172, "90579033": 172, "9120798": 172, "91836928": 172, "92465875": 172, "93094823": 172, "9372377": 172, "94352718": 172, "94981665": 172, "95610613": 172, "9623956": 172, "96868508": 172, "97497455": 172, "98126403": 172, "9875535": 172, "99384298": 172, "00013245": 172, "00642193": 172, "0127114": 172, "01900088": 172, "02529035": 172, "03157983": 172, "0378693": 172, "04415878": 172, "05044825": 172, "05673772": 172, "0630272": 172, "06931667": 172, "07560615": 172, "08189562": 172, "0881851": 172, "09447457": 172, "10076405": 172, "10705352": 172, "113343": 172, "11963247": 172, "12592195": 172, "13221142": 172, "1385009": 172, "14479037": 172, "15107985": 172, "15736932": 172, "1636588": 172, "16994827": 172, "17623775": 172, "18252722": 172, "1888167": 172, "19510617": 172, "20139564": 172, "20768512": 172, "21397459": 172, "22026407": 172, "22655354": 172, "23284302": 172, "23913249": 172, "24542197": 172, "25171144": 172, "25800092": 172, "26429039": 172, "27057987": 172, "27686934": 172, "28315882": 172, "28944829": 172, "29573777": 172, "30202724": 172, "30831672": 172, "31460619": 172, "32089567": 172, "32718514": 172, "33347462": 172, "33976409": 172, "34605356": 172, "35234304": 172, "35863251": 172, "36492199": 172, "37121146": 172, "37750094": 172, "38379041": 172, "39007989": 172, "39636936": 172, "40265884": 172, "40894831": 172, "41523779": 172, "42152726": 172, "42781674": 172, "43410621": 172, "44039569": 172, "44668516": 172, "45297464": 172, "45926411": 172, "46555359": 172, "47184306": 172, "47813254": 172, "48442201": 172, "49071148": 172, "49700096": 172, "50329043": 172, "50957991": 172, "51586938": 172, "52215886": 172, "52844833": 172, "53473781": 172, "54102728": 172, "54731676": 172, "55360623": 172, "55989571": 172, "56618518": 172, "57247466": 172, "57876413": 172, "58505361": 172, "59134308": 172, "59763256": 172, "60392203": 172, "61021151": 172, "61650098": 172, "62279046": 172, "62907993": 172, "6353694": 172, "64165888": 172, "64794835": 172, "65423783": 172, "6605273": 172, "66681678": 172, "67310625": 172, "67939573": 172, "6856852": 172, "69197468": 172, "69826415": 172, "70455363": 172, "7108431": 172, "71713258": 172, "72342205": 172, "72971153": 172, "736001": 172, "74229048": 172, "74857995": 172, "75486943": 172, "7611589": 172, "76744838": 172, "77373785": 172, "78002732": 172, "7863168": 172, "79260627": 172, "79889575": 172, "80518522": 172, "8114747": 172, "81776417": 172, "82405365": 172, "83034312": 172, "8366326": 172, "84292207": 172, "84921155": 172, "85550102": 172, "8617905": 172, "86807997": 172, "87436945": 172, "88065892": 172, "8869484": 172, "89323787": 172, "89952735": 172, "90581682": 172, "9121063": 172, "91839577": 172, "92468524": 172, "93097472": 172, "93726419": 172, "94355367": 172, "94984314": 172, "95613262": 172, "96242209": 172, "96871157": 172, "97500104": 172, "98129052": 172, "98757999": 172, "99386947": 172, "00015894": 172, "00644842": 172, "01273789": 172, "01902737": 172, "02531684": 172, "03160632": 172, "03789579": 172, "04418527": 172, "05047474": 172, "05676422": 172, "06305369": 172, "06934316": 172, "07563264": 172, "08192211": 172, "08821159": 172, "09450106": 172, "10079054": 172, "10708001": 172, "11336949": 172, "11965896": 172, "12594844": 172, "13223791": 172, "13852739": 172, "14481686": 172, "15110634": 172, "15739581": 172, "16368529": 172, "16997476": 172, "17626424": 172, "18255371": 172, "18884319": 172, "19513266": 172, "20142214": 172, "20771161": 172, "21400108": 172, "22029056": 172, "22658003": 172, "23286951": 172, "23915898": 172, "24544846": 172, "25173793": 172, "25802741": 172, "26431688": 172, "27060636": 172, "27689583": 172, "28318531": 172, "datashap": 172, "2026834": 172, "40536679": 172, "60805019": 172, "81073359": 172, "01341699": 172, "21610038": 172, "41878378": 172, "62146718": 172, "82415057": 172, "02683397": 172, "22951737": 172, "43220076": 172, "63488416": 172, "83756756": 172, "04025096": 172, "24293435": 172, "44561775": 172, "64830115": 172, "85098454": 172, "05366794": 172, "25635134": 172, "45903473": 172, "66171813": 172, "86440153": 172, "06708493": 172, "26976832": 172, "47245172": 172, "67513512": 172, "87781851": 172, "08050191": 172, "orbit": 172, "thick": [172, 175], "unweight": [172, 174], "remaind": 172, "soderman": 172, "s\u00f6derman": 172, "oll": 172, "bengt": 172, "j\u00f6nsson": 172, "yaniv": 172, "ten": 172, "nr": 172, "e0": [172, 226, 227], "multicompartment": 172, "imperm": 172, "neglect": [172, 174], "bvals_2": 172, "bvecs_2": 172, "d_comp": 172, "odf_vert": 172, "pdf_point": 172, "pname": 173, "bname": 173, "group_id": [173, 176], "dir_nam": 173, "hd5": 173, "10001": [173, 176], "target_bundl": 173, "return_mahalnobi": 173, "mahalanobi": 173, "return_mahalanobi": 173, "n_streamlin": [173, 174], "profile_stat": 173, "orient_bi": 173, "weights_kwarg": 173, "voxel_to_rasmm": [173, 174], "distanch": 174, "phrase": 174, "get_direct": [174, 177], "vec1": 174, "vec2": 174, "rougher": 174, "decahexagon": 174, "7853": 174, "octagon": 174, "characteristic_point": 174, "helix": 174, "xyza": 174, "tracksa": 174, "tracksb": 174, "nm": 174, "hit": 174, "rcd": 174, "refx": 174, "bundlex": 174, "70710683": 174, "70710677": 174, "sa": [174, 176], "sb": [174, 176], "collis": 174, "ericson": 174, "thr": [174, 175], "reassign": 174, "distant": 174, "sqd_thr": 174, "larch_fast_split": 174, "3track": 174, "sqd_trh": 174, "trh": 174, "rep3": 174, "start0": 174, "end0": 174, "start1": 174, "end1": 174, "whang": 174, "sigmod07": 174, "angle_dist": 174, "l_0": 174, "l_1": 174, "cos_theta_squar": 174, "perpendicular_dist": 174, "l0": 174, "k0": 174, "u1": 174, "u2": 174, "pe": 174, "lperp1": 174, "lperp2": 174, "6f": 174, "787888": 174, "d_thr": 174, "t_1": 174, "t_2": 174, "fo": 174, "xyz1": 174, "xyz2": 174, "laidlaw": 174, "ieeexplor": 174, "4479455": 174, "coroug": 174, "avg_mcd": 174, "average_mean_closest_dist": 174, "min_mcd": 174, "minimum_mean_closest_dist": 174, "max_mcd": 174, "maximum_mean_closest_dist": 174, "minab": 174, "minba": 174, "avg_minab": 174, "avg_minba": 174, "min_minab": 174, "min_minba": 174, "vagu": 174, "tracks_combinations_of_2": 174, "mean_closest_dist": 174, "mcd_i": 174, "mcd_j": 174, "vec_out": 174, "sq_dist_thr": 174, "sq_distanc": 174, "f4": 174, "tracka": 174, "trackb": 174, "3pt": 174, "721573": 174, "min_fiberlength": 174, "minimum_length": 174, "max_windows": 174, "meesters2016_hbm": 174, "stress": 174, "leafsiz": 174, "compact_nod": 174, "copy_data": 174, "balanced_tre": 174, "boxsiz": 174, "ckdtree": 174, "kd": 174, "rapidli": 174, "bogu": 174, "brute": 174, "hyperrectangl": 174, "queri": [174, 177], "toroid": 174, "x_i": 174, "l_i": 174, "maneewongvatana": 174, "mount": 174, "count_neighbor": [174, 177], "nearbi": 174, "minkowski": 174, "overflow": [174, 217, 222, 226], "cosmologi": 174, "assembli": 174, "landi": 174, "szalai": 174, "xi": 174, "loos": [174, 241], "redshift": 174, "sky": 174, "astro": 174, "0012333": 174, "astrophys": 174, "adsab": 174, "1993apj": 174, "64l": 174, "sheth": 174, "connolli": 174, "skibba": 174, "galaxi": 174, "0511773": 174, "hawkin": 174, "2df": 174, "peculiar": 174, "monthli": 174, "astronom": 174, "2003mnra": 174, "78h": 174, "5647": 174, "points1": 174, "points2": 174, "kd_tree1": 174, "kd_tree2": 174, "query_ball_tre": [174, 177], "innernod": [174, 177], "ckdtreenod": 174, "split_dim": [174, 177], "leafnod": [174, 177], "ckdtree_nod": 174, "distance_upper_bound": 174, "kth": 174, "miss": [174, 217, 219, 220, 221, 222, 224, 226, 228, 229, 231, 233, 235, 237], "query_ball_point": [174, 177], "mgrid": 174, "dd": 174, "sep": 174, "2236068": 174, "unsqueez": 174, "23606798": 174, "80622577": 174, "return_sort": 174, "return_length": 174, "nearer": 174, "indici": 174, "nearby_point": 174, "markers": 174, "og": 174, "query_pair": [174, 177], "output_typ": 174, "kd_tree": 174, "sparse_distance_matrix": [174, 177], "max_dist": 174, "dok_matrix": 174, "sdm": 174, "toarrai": 174, "12295571": 174, "28942611": 174, "2333084": 174, "24617575": 174, "29571802": 174, "26836782": 174, "distance_matrix": [174, 176, 177], "56906522": 174, "39923701": 174, "8658745": 174, "79428925": 174, "37327919": 174, "7225693": 174, "87665969": 174, "32580855": 174, "75679479": 174, "30088013": 174, "6395831": 174, "33630734": 174, "31994999": 174, "72658602": 174, "71124834": 174, "55396483": 174, "90785663": 174, "57714465": 174, "6473269": 174, "bounds_error": 174, "fill_valu": [174, 177], "assume_sort": 174, "_interpolator1d": 174, "slinear": 174, "zeroth": 174, "x_new": 174, "monoton": 174, "__call__": 174, "splrep": 174, "splev": 174, "fitpack": 174, "univariatesplin": 174, "interp2d": 174, "xnew": 174, "ynew": 174, "streamlines_length": 174, "streamline_scor": 174, "streamlines_scor": 174, "tracks1": 174, "tracks2": 174, "m1": 174, "track2track": 174, "tl": 174, "indices2": 174, "speedi": 174, "maker": 174, "calc_sign": [174, 177], "reconstmodel": [174, 177], "bunch": [174, 177], "to_fit": 174, "weighted_sign": 174, "relative_sign": 174, "mean_sig": 174, "vox_data": 174, "reconstfit": [174, 177], "interior": 174, "n_node": 174, "unique_idx": 174, "v2f": 174, "v2fn": 174, "minlen": 174, "random_se": 174, "save_se": [174, 176, 214, 215, 231], "unidirect": 174, "randomize_forward_direct": 174, "discart": 174, "stepsiz": [174, 236], "pft_max_trial": 174, "back_tracking_dist": [174, 176, 215], "front_tracking_dist": [174, 176, 215], "trial": 174, "seed_po": 174, "first_step": 174, "workhors": 174, "prev_dir": 174, "fixed_step": 174, "pft_max_nbr_back_step": 174, "pft_max_nbr_front_step": 174, "particle_path": 174, "particle_dir": 174, "particle_weight": 174, "particle_step": 174, "particle_stream_status": 174, "pft_max_step": 174, "triangles_mask": 174, "triangles_weight": 174, "rand_gen": 174, "triangles_indic": 174, "trilinear_coord": 174, "triangles_idx": 174, "trilin_coord": 174, "trilinear_coordin": 174, "vts_valu": 174, "vertices_norm": 174, "vertices_color": 174, "triangles_valu": 174, "expected_len": 174, "len_along": 174, "cumsum": 174, "n_pol": 174, "frenet": 174, "serret": 174, "mathwork": 174, "matlabcentr": 174, "fileexchang": 174, "11169": 174, "parametris": 174, "qquad": 174, "binorm": 174, "kappa": 174, "torsion": 174, "tm": 174, "ic": 174, "longest": [174, 176], "longest_or_indic": 174, "sph_cent": 174, "sph_radiu": 174, "rai": [174, 235], "paulbourk": 174, "circlespher": 174, "cpp": 174, "xyzn": 174, "cookbook": 174, "netlib": 174, "dierckx": 174, "datapoint": 174, "knot": 174, "ascend": 174, "splprep": 174, "travel": 174, "va": 174, "51010101": 174, "09883545": 174, "step_sz": 174, "max_point": 174, "lenind": 174, "types": 174, "interp_out_doubl": 174, "interp_out_view": 174, "wm_map": 174, "gm_map": 174, "csf_map": 174, "kw": 174, "get_exclud": [174, 177], "get_includ": [174, 177], "cmc": [174, 176, 215], "correction_factor": 174, "check_point": [174, 177], "intflag": 174, "pyerror": [174, 177], "pxd": 174, "new_streamlin": 174, "inv_shift": 174, "deform_field": 174, "stream_to_current_grid": 174, "current_grid_to_world": 174, "stream_to_ref_grid": 174, "ref_grid_to_world": 174, "in_plac": 174, "selected_streamlin": 174, "roi1": 174, "roi2": 174, "n_roi": 174, "either_end": 174, "both_end": 174, "mask1": 174, "mask2": 174, "max_mdf": 174, "subsamplen": 174, "degrad": 174, "5mm": 174, "jordan17": 174, "as_gener": 174, "ndarrrai": 174, "tol_error": 174, "max_segment_length": 174, "presseau15": 174, "rheault15": 174, "01mm": 174, "probabilit": 174, "compressed_streamlin": 174, "wiggl": 174, "c_streamlin": 174, "houde15": 174, "presseau": 174, "common_shap": 174, "expected_length": 174, "modified_streamlin": 174, "vol_dim": 174, "image_volum": 174, "indexerror": [174, 228], "label_volum": 174, "defaultdict": 174, "bincount": 174, "new_label": 174, "output_streamlin": 174, "seeds_count": 174, "seed_count_per_voxel": 174, "23838787": 174, "20150886": 174, "31422574": 174, "41435083": 174, "26318949": 174, "30127447": 174, "44305611": 174, "01132755": 174, "47624371": 174, "30500292": 174, "30794079": 174, "01532556": 174, "03816435": 174, "15672913": 174, "13093276": 174, "12509547": 174, "3972138": 174, "27568569": 174, "3702492": 174, "78681721": 174, "10314815": 174, "target_mask": 174, "bresenham5": 174, "bresenham": 174, "jack": 174, "elton": 174, "plotter": 174, "ibm": 174, "roi_coord": 174, "region_of_interest": 174, "in_arrai": 174, "u_return": 174, "tracking_output": 174, "include_roi": 174, "exclude_roi": 174, "aoi": 174, "seq": 174, "plm": 174, "return_el": 174, "trackviz": 174, "tc": 174, "vox_track0": 174, "vox_track1": 174, "vox_dim": 174, "recorded_ev": 175, "return_showm": 175, "order_transpar": 175, "buan_color": 175, "roi_imag": [175, 176, 203], "roi_color": [175, 176, 203], "peakandmetr": 175, "anim": [175, 176, 203, 247, 248], "pictur": [175, 176, 203], "cababl": 175, "peel": [175, 176, 203], "anti": [175, 176, 203], "alias": [175, 176, 203], "horizon_ismrm19": [175, 176, 203], "juneja": [175, 176, 203, 221], "build_scen": [175, 177], "build_show": [175, 177], "selected_valu": [175, 177], "dataclass": 175, "abc": [175, 234], "tab_id": [175, 177], "tab_ui": [175, 177], "tabui": 175, "register_el": [175, 177], "win_siz": 175, "on_tab_chang": 175, "synchronize_slic": [175, 177], "synchronize_volum": [175, 177], "handle_text_overflow": [175, 177], "reposit": [175, 177], "active_tab_id": 175, "x_valu": 175, "y_valu": 175, "z_valu": 175, "synchron": [175, 237], "is_horizon_label": 175, "line_width": 175, "1f": 175, "on_moving_slid": 175, "on_value_chang": 175, "label_font_s": 175, "label_style_bold": 175, "is_double_slid": 175, "knob": 175, "programmat": 175, "checked_label": 175, "checkbox": [175, 222, 237], "initial_select": 175, "on_prev_click": 175, "on_next_click": 175, "switcher": 175, "prev": 175, "horizoncombineel": 175, "clusters_visu": 175, "peak_actor": 175, "contour_actor": 175, "slices_visu": 175, "tab_nam": 175, "force_rend": 175, "_tab_ui": 175, "on_tab_select": [175, 177], "update_slic": [175, 177], "x_slice": 175, "y_slice": 175, "z_slice": 175, "update_volum": [175, 177], "fallback": 175, "text_siz": 175, "available_s": 175, "ellipsi": 175, "unpack": 175, "unique_point": 175, "show_manag": 175, "enable_callback": 175, "add_cluster_actor": [175, 177], "tract_idx": 175, "centroid_actor": [175, 177], "cluster_actor": [175, 177], "recluster_tractogram": [175, 177], "tractogram_clust": [175, 177], "interactor": [175, 219, 220], "change_volum": [175, 177], "prev_idx": 175, "next_idx": 175, "visible_slic": 175, "data_shap": [175, 177], "intensities_rang": [175, 177], "register_picker_callback": [175, 177], "selected_slic": [175, 177], "volume_max": [175, 177], "volume_min": [175, 177], "fit_kwarg": 175, "fit1": 175, "fit2": 175, "fitnam": 175, "xlimit": 175, "disprang": 175, "cbar": 175, "basemap_arg": 175, "triang": 175, "xlabel": 175, "ylabel": 175, "ylabl": 175, "img0": 175, "img1": 175, "title0": 175, "title_mid": 175, "title1": 175, "fig_kwarg": [175, 230], "segular": 175, "direct_grid_shap": 175, "direct_grid2world": 175, "inverse_grid_shap": 175, "inverse_grid2world": 175, "show_figur": 175, "warped_forward": 175, "warped_backward": 175, "wouldn": 175, "slice_indic": 175, "slice_typ": 175, "ltitl": 175, "rtitl": 175, "sagit": 175, "c2": 175, "magnitdu": 175, "docscrap": 176, "mentat": 176, "virtanen": 176, "pav": 176, "iki": 176, "fi": 176, "output_strategi": 176, "get_short_nam": [176, 177], "troubl": 176, "subworkflow": 176, "strongli": 176, "new_vox_s": [176, 209], "out_resl": [176, 209], "new_vox_sz": [176, 209], "static_fil": [176, 184, 211], "moving_fil": [176, 184, 211], "out_mov": [176, 178, 188, 211], "out_stat_centroid": [176, 211], "static_centroid": 176, "out_moving_centroid": [176, 211], "moving_centroid": 176, "out_moved_centroid": [176, 211], "moved_centroid": 176, "static_image_fil": [176, 178, 179, 180], "moving_image_fil": [176, 178, 179, 180], "out_qual": [176, 178], "quality_metr": [176, 178], "transform_map_fil": [176, 180], "overwritten": [176, 180], "prealign_fil": [176, 179], "inv_stat": [176, 179], "mopt_sigma_diff": [176, 179], "mopt_radiu": [176, 179], "mopt_smooth": [176, 179], "mopt_inner_it": [176, 179], "mopt_q_level": [176, 179], "mopt_double_gradi": [176, 179], "mopt_step_typ": [176, 179], "out_inv_stat": [176, 179], "inc_stat": 176, "out_field": [176, 179], "bvalues_fil": [176, 188, 189, 195, 196, 197, 198, 199, 200], "bvectors_fil": [176, 188, 189, 195, 196, 197, 198, 199, 200], "bvecs_tol": [176, 188, 189, 195, 196, 199, 204], "out_linear_mov": [176, 184], "linearly_mov": 176, "out_nonlinear_mov": [176, 184], "out_warp_transform": [176, 184], "warp_transform": 176, "out_warp_kernel": [176, 184], "warp_kernel": 176, "out_dist": [176, 184], "out_matched_pair": [176, 184], "cpd": [176, 177, 184], "treamlin": [176, 184], "prog": 176, "epilog": 176, "formatter_class": 176, "rawtexthelpformatt": 176, "prefix_char": 176, "fromfile_prefix_char": 176, "argument_default": 176, "conflict_handl": 176, "add_help": 176, "argumentpars": 176, "augment": 176, "argv": 176, "helpformatt": 176, "charact": [176, 219, 221, 225, 226], "add_descript": [176, 177], "add_epilogu": [176, 177], "add_sub_flow_arg": [176, 177], "sub_flow": 176, "introspect": 176, "sub_flow_opt": 176, "add_workflow": [176, 177], "arpars": 176, "get_flow_arg": [176, 177], "optional_paramet": [176, 177], "output_paramet": [176, 177], "positional_paramet": [176, 177], "show_argu": [176, 177], "dest": 176, "update_argu": [176, 177], "karg": 176, "get_opt": [176, 177], "get_sub_run": [176, 177], "set_sub_flows_opt": [176, 177], "_option": 176, "bval_fil": [176, 192], "dwi_patch2self": [176, 192], "globe": [176, 191, 192, 197, 199, 200, 207, 246], "dwi_nlmean": 176, "dwi_mppca": 176, "out_sigma": [176, 190], "dwi_sigma": 176, "out_unr": [176, 202], "dwi_unr": 176, "eof": [176, 177], "is_empti": [176, 177], "peek": [176, 177], "read_to_condit": [176, 177], "condition_func": 176, "read_to_next_empty_lin": [176, 177], "read_to_next_unindented_lin": [176, 177], "seek_next_non_empty_lin": [176, 177], "deindent": 176, "lvl": 176, "bshell_thr": [176, 204], "get_fetcher_datanam": [176, 177, 247], "available_data": [176, 247], "load_modul": [176, 177], "module_path": 176, "reload": [176, 219], "data_nam": [176, 194], "out_split": [176, 213], "tractogram_fil": [176, 185], "delete_dpv": [176, 185], "delete_dp": [176, 185], "delete_group": [176, 185], "check_space_attribut": [176, 185], "prealloc": [176, 185], "out_extens": [176, 185], "concatenated_tractogram": 176, "tractogram_list": 176, "dpv": [176, 185], "trx_list": [176, 185], "sh_convert_dipy_mrtrix_out": [176, 210], "tensor_fil": [176, 186], "converted_tensor": 176, "pos_dtyp": [176, 187], "offsets_dtyp": [176, 187], "converted_tractogram": 176, "lb": [176, 206, 236], "ub": [176, 206], "out_fnam": 176, "create_directori": [176, 177], "create_output": [176, 177], "file_existence_check": [176, 177], "set_input": [176, 177], "set_out_dir": [176, 177], "set_out_fnam": [176, 177], "set_output_kei": [176, 177], "substr": 176, "dir_str": 176, "prepend": 176, "multi_input": 176, "out_kei": 176, "fnc": 176, "frameobject": 176, "save_mask": [176, 193, 207], "dwi_mask": 176, "park2022": [176, 193], "data_fil": [176, 201, 212], "out_rtop": [176, 201], "out_lapnorm": [176, 201], "lapnorm": [176, 201], "out_msd": [176, 201], "out_qiv": [176, 201], "out_rtap": [176, 201], "out_rtpp": [176, 201], "out_ng": [176, 201], "out_perng": [176, 201], "perng": [176, 201], "out_parng": [176, 201], "parng": [176, 201], "laplacian_sign": [176, 201], "get_fitted_tensor": [176, 177], "optional_arg": 176, "mask_fil": [176, 195, 196, 197, 198, 199, 200, 212], "out_fa": [176, 197, 199], "out_ga": [176, 197, 199], "out_rgb": [176, 197, 199], "out_md": [176, 197, 199], "out_ad": [176, 197, 199], "out_rd": [176, 197, 199], "out_mod": [176, 197, 199], "out_evec": [176, 197, 199], "out_ev": [176, 197, 199], "nifti_tensor": [176, 199], "hung": [176, 199], "out_pam": [176, 195, 196, 198], "out_shm": [176, 195, 196, 198], "out_peaks_dir": [176, 195, 196, 198], "peaks_dir": [175, 176], "out_peaks_valu": [176, 195, 196, 198], "peaks_valu": [175, 176], "out_peaks_indic": [176, 195, 196, 198], "peaks_indic": 176, "frf": [176, 196], "odf_to_sh_ord": [176, 195, 196], "out_gfa": [176, 195, 196], "peak_from_model": [176, 195, 196, 225], "out_dt_tensor": [176, 197], "out_dk_tensor": [176, 197], "dki_tensor": 176, "out_mk": [176, 197], "out_ak": [176, 197], "out_rk": [176, 197], "joseph": [176, 197], "anita": [176, 197], "hanzhang": [176, 197], "kyle": [176, 197], "get_fitted_ivim": [176, 177], "out_s0_predict": [176, 200], "out_perfusion_fract": [176, 200], "out_d_star": [176, 200], "out_d": [176, 200], "sphere_nam": 176, "streamline_fil": [176, 205, 208], "model_bundle_fil": [176, 208], "no_slr": [176, 208], "slr_matrix": [176, 208], "r_reduction_thr": [176, 208], "r_pruning_thr": [176, 208], "no_r_slr": [176, 208], "out_recognized_transf": [176, 208], "out_recognized_label": [176, 208], "tini": [176, 208, 237], "labels_fil": [176, 205], "out_bundl": [176, 205], "recognized_orig": 176, "bbox_threshold": [176, 212], "out_mask_cc": [176, 212], "out_mask_nois": [176, 212], "model_bundle_fold": [176, 182], "subject_fold": [176, 182, 183], "get_metric_nam": [176, 177], "af_l_fa": 176, "h5_file": [176, 181], "save_lmm_plot": [176, 177], "plot_fil": 176, "bundle_nam": 176, "log10": 176, "bundle_fold": 176, "orig_bundle_fold": 176, "metric_fold": 176, "orig_fold": 176, "pam_fil": [176, 214, 215], "stopping_fil": [176, 214], "seeding_fil": [176, 214, 215], "use_binary_mask": [176, 214], "stopping_thr": [176, 214], "binar": [176, 214], "closestpeak": [176, 214, 223], "wm_file": [176, 215], "gm_file": [176, 215], "csf_file": [176, 215], "pft_back": [176, 215], "pft_front": [176, 215], "pft_count": [176, 215], "100000000": 176, "icbm_2009a": [176, 203], "emerg": [176, 203], "icbm_2009c": [176, 203], "manage_output_overwrit": [176, 177], "_force_overwrit": 176, "outcom": 176, "liter": [176, 230, 231], "subpackag": 177, "get_info": [177, 217, 218, 252], "_public": [177, 232], "bundlemin": 177, "crosscorr": [177, 226], "expectmax": 177, "parzenhist": 177, "scalespac": 177, "sumsqdiff": 177, "verbositylevel": 177, "write_map": [177, 235], "read_map": 177, "_method_dict": 177, "register_dwi_seri": 177, "determine_num_thread": 177, "distance_matrix_mdf": 177, "deformableregistr": 177, "gaussian_kernel": 177, "low_rank_eigen": 177, "initialize_sigma2": 177, "lowrankq": 177, "compute_cc_backward_step_2d": 177, "compute_cc_backward_step_3d": 177, "compute_cc_forward_step_2d": 177, "compute_cc_forward_step_3d": 177, "precompute_cc_factors_2d": 177, "precompute_cc_factors_2d_test": 177, "precompute_cc_factors_3d": 177, "precompute_cc_factors_3d_test": 177, "compute_em_demons_step_2d": 177, "compute_em_demons_step_3d": 177, "compute_masked_class_stats_2d": 177, "compute_masked_class_stats_3d": 177, "quantize_positive_2d": 177, "quantize_positive_3d": 177, "affineinversionerror": 177, "affineinvalidvalueserror": 177, "_transform_method": 177, "transform_geometric_cent": 177, "transform_origin": 177, "diffeomorphicregistr": [177, 228], "logger": [177, 235], "mult_aff": 177, "get_direction_and_spac": 177, "similaritymetr": 177, "emmetr": 177, "v_cycle_2d": 177, "v_cycle_3d": 177, "parzenjointhistogram": 177, "compute_parzen_mi": 177, "cubic_splin": 177, "cubic_spline_deriv": 177, "sample_domain_regular": 177, "isotropicscalespac": 177, "streamlinedistancemetr": 177, "bundlemindistancematrixmetr": 177, "bundlemindistanceasymmetricmetr": 177, "bundlesumdistancematrixmetr": 177, "jointbundlemindistancemetr": 177, "streamlineregistrationmap": 177, "jointstreamlineregistrationmap": 177, "bundle_sum_dist": 177, "bundle_min_dist": 177, "bundle_min_distance_fast": 177, "bundle_min_distance_asymmetric_fast": 177, "remove_clusters_by_s": 177, "progressive_slr": 177, "slr_with_qbx": [177, 236], "get_unique_pair": 177, "compose_matrix44": 177, "decompose_matrix44": 177, "average_bundle_length": 177, "find_miss": 177, "compute_energy_ssd_2d": 177, "compute_energy_ssd_3d": 177, "compute_residual_displacement_field_ssd_2d": 177, "compute_residual_displacement_field_ssd_3d": 177, "compute_ssd_demons_step_2d": 177, "compute_ssd_demons_step_3d": 177, "iterate_residual_displacement_field_ssd_2d": 177, "iterate_residual_displacement_field_ssd_3d": 177, "solve_2d_symmetric_positive_definit": 177, "solve_3d_symmetric_positive_definit": 177, "affinetransform2d": 177, "rigidisoscalingtransform2d": 177, "rigidisoscalingtransform3d": 177, "rigidscalingtransform2d": 177, "rigidscalingtransform3d": 177, "rigidtransform2d": 177, "rotationtransform2d": 177, "rotationtransform3d": 177, "scalingtransform2d": 177, "scalingtransform3d": 177, "translationtransform2d": [177, 233], "compose_vector_fields_2d": 177, "compose_vector_fields_3d": 177, "create_circl": 177, "create_harmonic_fields_2d": 177, "create_harmonic_fields_3d": 177, "create_random_displacement_2d": 177, "create_random_displacement_3d": 177, "create_spher": 177, "downsample_displacement_field_2d": 177, "downsample_displacement_field_3d": 177, "downsample_scalar_field_2d": 177, "downsample_scalar_field_3d": 177, "invert_vector_field_fixed_point_2d": 177, "invert_vector_field_fixed_point_3d": 177, "is_valid_affin": 177, "reorient_vector_field_2d": 177, "reorient_vector_field_3d": 177, "resample_displacement_field_2d": 177, "resample_displacement_field_3d": 177, "simplify_warp_function_2d": 177, "simplify_warp_function_3d": [177, 219], "sparse_gradi": 177, "warp_2d": 177, "warp_2d_nn": 177, "warp_3d": 177, "warp_3d_nn": 177, "warp_coordinates_2d": 177, "warp_coordinates_3d": 177, "onetim": 177, "sphere_stat": [177, 225, 226], "_tuple2ax": 177, "sphere2cart": [177, 224, 246], "cart2spher": [177, 224, 227], "sph2latlon": 177, "normalized_vector": 177, "vector_norm": [177, 224], "rodrigues_axis_rot": 177, "nearest_pos_semi_def": 177, "sphere_dist": 177, "cart_dist": 177, "vector_cosin": 177, "lambert_equal_area_projection_polar": 177, "lambert_equal_area_projection_cart": 177, "euler_matrix": 177, "compose_matrix": [177, 226], "decompose_matrix": 177, "circumradiu": 177, "vec2vec_rotmat": [177, 217, 233], "compose_transform": 177, "perpendicular_direct": 177, "dist_to_corn": 177, "is_hemispher": [177, 228], "b0_threshold_empty_gradient_messag": 177, "b0_threshold_update_slicing_messag": 177, "mask_non_weighted_bv": 177, "gradient_table_from_bvals_bvec": 177, "gradient_table_from_qvals_bvec": 177, "gradient_table_from_gradient_strength_bvec": 177, "generate_bvec": 177, "round_bval": 177, "get_bval_indic": 177, "check_multi_b": 177, "btens_to_param": 177, "params_to_bten": 177, "ornt_map": 177, "reorient_vector": 177, "reorient_on_axi": 177, "orientation_from_str": 177, "orientation_to_str": 177, "nearestneighborinterpol": 177, "trilinearinterpol": 177, "interpolate_scalar_2d": 177, "interpolate_scalar_3d": 177, "interpolate_scalar_nn_2d": 177, "interpolate_scalar_nn_3d": 177, "interpolate_vector_2d": 177, "interpolate_vector_3d": 177, "map_coordinates_trilinear_iso": 177, "nearestneighbor_interpol": [177, 219], "trilinear_interp": 177, "trilinear_interpolate4d": [177, 228], "resetmixin": 177, "onetimeproperti": 177, "auto_attr": [177, 226], "nonnegativeleastsquar": 177, "sparse_nnl": 177, "wichmannhill2006": 177, "wichmannhill1982": 177, "lecuy": 177, "faces_from_sphere_vertic": 177, "unique_edg": 177, "unique_set": 177, "fibonacci_spher": 177, "disperse_charges_alt": 177, "euler_characteristic_check": 177, "octahedron_vertic": 177, "octahedron_fac": 177, "icosahedron_vertic": 177, "icosahedron_fac": 177, "unit_octahedron": 177, "unit_icosahedron": 177, "hemi_icosahedron": 177, "random_uniform_on_spher": [177, 225, 226], "eigenstat": 177, "compare_orientation_set": 177, "angular_similar": 177, "create_unit_hemispher": 177, "cshift3d": 177, "permutationinvers": 177, "afb3d_a": 177, "sfb3d_a": 177, "sfb3d": 177, "afb3d": 177, "dwt3d": 177, "idwt3d": 177, "loads_compat": 177, "data_dir": 177, "get_sim_voxel": 177, "get_skeleton": 177, "get_gtab_taiwan_dsi": 177, "dsi_deconv_voxel": 177, "mrtrix_spherical_funct": 177, "get_cmap": [177, 226], "matlab_life_result": 177, "load_sdp_constraint": 177, "copyfileobj_withprogress": 177, "check_md5": 177, "fetch_data": 177, "fetch_stanford_label": 177, "fetch_resdnn_weight": 177, "fetch_synb0_weight": 177, "fetch_synb0_test": 177, "fetch_deepn4_weight": 177, "fetch_deepn4_test": 177, "fetch_evac_weight": 177, "fetch_evac_test": 177, "fetch_stanford_t1": 177, "fetch_stanford_pve_map": [177, 247, 248], "fetch_taiwan_ntu_dsi": 177, "fetch_scil_b0": 177, "fetch_ivim": [177, 247, 248], "fetch_cfin_multib": 177, "fetch_gold_standard_io": [177, 230], "fetch_qte_lte_pt": 177, "fetch_cti_rat1": 177, "fetch_fury_surfac": 177, "fetch_dib_70_lte_pte_st": 177, "fetch_dib_217_lte_pte_st": 177, "fetch_ptt_minimal_dataset": 177, "read_scil_b0": 177, "read_siemens_scil_b0": 177, "read_isbi2013_2shel": 177, "read_sherbrooke_3shel": 177, "read_stanford_label": 177, "read_stanford_hardi": 177, "read_stanford_t1": 177, "read_stanford_pve_map": 177, "read_taiwan_ntu_dsi": 177, "read_syn_data": 177, "fetch_tissue_data": 177, "read_tissue_data": 177, "fetch_cenir_multib": 177, "read_cfin_dwi": 177, "read_cfin_t1": 177, "read_qte_lte_pt": 177, "extract_example_tract": 177, "to_bids_descript": 177, "fetch_hcp": 177, "denspe": [177, 219], "nlmeans_block": 177, "add_padding_reflect": 177, "correspond_indic": 177, "nlmeans_3d": [177, 226], "remove_pad": 177, "gettempdir": 177, "dimensionality_problem_messag": 177, "create_patch_radius_arr": 177, "compute_patch_s": 177, "compute_num_sampl": 177, "compute_suggested_patch_radiu": 177, "firdn": 177, "upfir": 177, "convolve_sf": 177, "ptt_direction_gett": 177, "peak_directions_nl": 177, "reshape_peaks_for_visu": 177, "shcoeffpmfgen": 177, "simplepmfgen": 177, "min_radius_curvature_from_angl": 177, "save_qa_metr": 177, "load_peak": [177, 229], "save_peak": 177, "peaks_to_nifti": 177, "set_sft_logger_level": 177, "load_gener": 177, "save_gener": 177, "load_trx": 177, "load_vtk": 177, "load_vtp": 177, "load_fib": 177, "load_dpi": 177, "save_trx": 177, "save_vtk": 177, "save_vtp": 177, "save_fib": 177, "save_dpi": 177, "load_pial": 177, "load_gifti": 177, "nifti1_symmat": 177, "make5d": 177, "decfa": [177, 223, 228], "decfa_to_float": 177, "is_reference_info_valid": 177, "split_name_with_gz": 177, "save_buan_profiles_hdf5": 177, "read_img_arr_or_path": 177, "save_polydata": 177, "save_vtk_streamlin": [177, 230], "load_vtk_streamlin": [177, 230], "cnn_1d_denois": 177, "cnn1ddenois": 177, "encoderblock": 177, "decoderblock": 177, "unet3d": 177, "channelsum": 177, "evacplu": 177, "prepare_img": 177, "init_model": 177, "singlelayerperceptron": 177, "multiplelayerpercepton": 177, "unnorm": 177, "set_logger_level": 177, "transform_img": 177, "recover_img": 177, "correct_minor_error": 177, "multi_voxel": [177, 224, 230], "quick_squash": 177, "recspe": 177, "vec_val_sum": 177, "coeff_of_determin": 177, "axsymshrespons": 177, "constrainedsdtmodel": 177, "estimate_respons": 177, "forward_sdt_deconv_mat": 177, "odf_deconv": 177, "fa_trace_to_lambda": 177, "from_qte_to_cti": 177, "multi_gaussian_k_from_c": 177, "split_cti_param": 177, "cti_predict": 177, "params_to_cti_param": 177, "ls_fit_cti": 177, "carlson_rf": 177, "carlson_rd": 177, "directional_diffus": 177, "directional_diffusion_vari": 177, "directional_kurtosi": 177, "apparent_kurtosis_coef": 177, "radial_kurtosi": 177, "kurtosis_maximum": 177, "mean_kurtosis_tensor": 177, "kurtosis_fractional_anisotropi": 177, "dki_predict": 177, "params_to_dki_param": 177, "ls_fit_dki": 177, "cls_fit_dki": 177, "wrotat": 177, "wrotate_el": 177, "wcon": 177, "split_dki_param": 177, "kurtosismicrostructuralfit": 177, "axonal_water_fract": 177, "diffusion_compon": 177, "dkimicro_predict": 177, "diffusionspectrumfit": 177, "diffusionspectrumdeconvfit": 177, "create_qspac": 177, "create_qt": 177, "hanning_filt": 177, "pdf_interp_coord": 177, "pdf_odf": [177, 224], "half_to_full_qspac": 177, "project_hemisph_bvec": 177, "threshold_propag": 177, "gen_psf": 177, "lr_deconv": 177, "geodesic_anisotropi": 177, "axial_diffus": 177, "radial_diffus": 177, "deviator": 177, "apparent_diffusion_coef": 177, "tensor_predict": 177, "iter_fit_tensor": [177, 217], "wls_fit_tensor": 177, "ols_fit_tensor": 177, "nlls_fit_tensor": 177, "restore_fit_tensor": 177, "_lt_indic": 177, "_lt_row": 177, "_lt_col": 177, "quantize_evec": [177, 219, 230], "eig_from_lo_tri": [177, 226], "forecastfit": 177, "find_signal_mean": 177, "forecast_error_func": 177, "psi_l": 177, "forecast_matrix": 177, "rho_matrix": 177, "lb_forecast": 177, "fwdti_predict": 177, "wls_iter": 177, "nls_iter": 177, "nls_fit_tensor": 177, "lower_triangular_to_choleski": 177, "cholesky_to_lower_triangular": 177, "generalizedqsamplingfit": 177, "normalize_qa": 177, "squared_radial_compon": 177, "npa": 177, "equatorial_zone_vertic": 177, "polar_zone_vertic": 177, "upper_hemi_map": 177, "equatorial_maximum": 177, "patch_vertic": 177, "patch_maximum": 177, "odf_sum": 177, "patch_sum": 177, "triple_odf_maxima": 177, "ivimmodeltrr": 177, "ivimmodelvp": 177, "ivim_predict": 177, "f_d_star_predict": 177, "f_d_star_error": 177, "ivim_model_selector": 177, "mapmrifit": 177, "isotropic_scale_factor": 177, "mapmri_index_matrix": 177, "b_mat": 177, "b_mat_isotrop": 177, "mapmri_phi_1d": 177, "mapmri_phi_matrix": 177, "mapmri_psi_1d": 177, "mapmri_psi_matrix": 177, "mapmri_odf_matrix": 177, "mapmri_isotropic_phi_matrix": 177, "mapmri_isotropic_radial_signal_basi": 177, "mapmri_isotropic_m_mu_independ": 177, "mapmri_isotropic_m_mu_depend": 177, "mapmri_isotropic_psi_matrix": 177, "mapmri_isotropic_radial_pdf_basi": 177, "mapmri_isotropic_k_mu_independ": 177, "mapmri_isotropic_k_mu_depend": 177, "binomialfloat": 177, "mapmri_isotropic_odf_matrix": 177, "mapmri_isotropic_odf_sh_matrix": 177, "mapmri_isotropic_laplacian_reg_matrix": 177, "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix": 177, "mapmri_isotropic_index_matrix": 177, "create_rspac": 177, "map_laplace_u": 177, "map_laplace_t": 177, "map_laplace_": 177, "mapmri_stu_reg_matric": 177, "mapmri_laplacian_reg_matrix": 177, "generalized_crossvalidation_arrai": 177, "generalized_crossvalid": 177, "gcv_cost_funct": 177, "msdeconvfit": 177, "qpfitter": 177, "multi_tissue_basi": 177, "solve_qp": [177, 231, 236], "meandiffusionkurtosisfit": 177, "mean_signal_bvalu": 177, "msk_from_awf": 177, "awf_from_msk": 177, "msdki_predict": 177, "wls_fit_msdki": 177, "multivoxelfit": 177, "callablearrai": 177, "multi_voxel_fit": [177, 234], "odfmodel": 177, "odffit": 177, "minmax_norm": [177, 225, 228], "qtdmrifit": 177, "qtdmri_to_mapmri_matrix": 177, "qtdmri_isotropic_to_mapmri_matrix": 177, "qtdmri_temporal_norm": 177, "qtdmri_mapmri_norm": 177, "qtdmri_mapmri_isotropic_norm": 177, "qtdmri_signal_matrix_": 177, "qtdmri_signal_matrix": 177, "qtdmri_eap_matrix": 177, "qtdmri_isotropic_signal_matrix_": 177, "qtdmri_isotropic_signal_matrix": 177, "qtdmri_eap_matrix_": 177, "qtdmri_isotropic_eap_matrix_": 177, "qtdmri_isotropic_eap_matrix": 177, "radial_basis_opt": 177, "angular_basis_opt": 177, "radial_basis_eap_opt": 177, "angular_basis_eap_opt": 177, "temporal_basi": 177, "qtdmri_index_matrix": 177, "qtdmri_isotropic_index_matrix": 177, "qtdmri_laplacian_reg_matrix": 177, "qtdmri_isotropic_laplacian_reg_matrix": 177, "part23_reg_matrix_q": 177, "part23_iso_reg_matrix_q": 177, "part4_reg_matrix_q": 177, "part4_iso_reg_matrix_q": 177, "part1_reg_matrix_tau": 177, "part23_reg_matrix_tau": 177, "part4_reg_matrix_tau": 177, "qtdmri_isotropic_sc": 177, "qtdmri_anisotropic_sc": 177, "design_matrix_spati": 177, "create_rt_space_grid": 177, "qtdmri_number_of_coeffici": 177, "l1_crossvalid": 177, "elastic_crossvalid": 177, "from_3x3_to_6x1": 177, "from_6x1_to_3x3": 177, "from_6x6_to_21x1": 177, "from_21x1_to_6x6": 177, "cvxpy_1x6_to_3x3": 177, "cvxpy_1x21_to_6x6": 177, "dtd_covari": 177, "qti_sign": 177, "adj_to_countarr": 177, "argmax_from_adj": 177, "argmax_from_countarr": 177, "le_to_odf": 177, "local_maxima": 177, "proc_reco_arg": 177, "remove_similar_vertic": [177, 224], "search_descend": 177, "sum_on_blocks_1d": 177, "rumba_deconv": 177, "mbessel_ratio": 177, "generate_kernel": 177, "rumba_deconv_glob": 177, "isotropicmodel": 177, "isotropicfit": 177, "exponentialisotropicmodel": 177, "exponentialisotropicfit": 177, "sparsefasciclefit": 177, "sfm_design_matrix": 177, "sphharmmodel": [177, 225], "qballbasemodel": [177, 228], "sphharmfit": [177, 225], "opdtmodel": 177, "residualbootstrapwrapp": 177, "forward_sdeconv_mat": 177, "sh_to_rh": 177, "gen_dirac": 177, "spherical_harmon": 177, "real_sph_harm": [177, 219], "real_sh_tournier_from_index": 177, "real_sh_descoteaux_from_index": 177, "real_sh_tourni": 177, "real_sym_sh_mrtrix": 177, "real_sym_sh_basi": 177, "sph_harm_ind_list": 177, "order_from_ncoef": [177, 237], "smooth_pinv": 177, "lazy_index": 177, "normalize_data": 177, "lcr_matrix": [177, 237], "bootstrap_data_arrai": 177, "bootstrap_data_voxel": 177, "calculate_max_ord": [177, 222], "convert_sh_to_full_basi": 177, "convert_sh_from_legaci": 177, "convert_sh_to_legaci": [177, 235], "shorefit": 177, "shore_matrix": 177, "shore_matrix_pdf": 177, "shore_matrix_odf": 177, "l_shore": 177, "n_shore": 177, "shore_indic": 177, "shore_ord": 177, "dki_design_matrix": 177, "cti_design_matrix": 177, "vec_val_vect": [177, 224], "clustering_algorithm": 177, "clusteringspe": 177, "cythonutil": 177, "check_rang": 177, "bundle_adjac": 177, "ba_analysi": 177, "cluster_bundl": 177, "clustercentroid": 177, "treeclust": 177, "treeclustermap": 177, "qbx_and_merg": 177, "clusters_centroid2clustermap_centroid": 177, "clusterscentroid": 177, "evaluate_aabb_check": 177, "cythonfeatur": 177, "nearest_from_matrix_col": 177, "applymask": 177, "clean_cc_mask": 177, "mean_manhattan_dist": 177, "mean_euclidean_dist": 177, "cythonmetr": 177, "minimumaveragedirectflipmetr": 177, "constantobservationmodel": 177, "iteratedconditionalmod": 177, "upper_bound_by_r": 177, "upper_bound_by_perc": 177, "diff2eigenvector": 177, "orbital_phantom": 177, "diffusion_ev": 177, "callaghan_perpendicular": 177, "gaussian_parallel": 177, "cylinders_and_ball_soderman": 177, "kurtosis_el": 177, "dki_sign": [177, 219], "all_tensor_evec": [177, 227], "single_tensor_rtop": 177, "multi_tensor_rtop": 177, "single_tensor_pdf": 177, "multi_tensor_pdf": 177, "single_tensor_msd": 177, "multi_tensor_msd": 177, "propspe": [177, 226], "streamlinespe": [177, 219, 226], "vox2track": 177, "add_3vec": 177, "approximate_mdl_trajectori": 177, "bundles_distances_mam": 177, "bundles_distances_mdf": [177, 234], "cut_plan": 177, "inner_3vec": 177, "intersect_segment_cylind": 177, "larch_3merg": 177, "larch_3split": 177, "lee_angle_dist": 177, "lee_perpendicular_dist": 177, "local_skeleton_clust": 177, "local_skeleton_clustering_3pt": 177, "mam_dist": 177, "minimum_closest_dist": 177, "most_similar_track_mam": 177, "mul_3vec": 177, "norm_3vec": 177, "normalized_3vec": 177, "point_segment_sq_dist": 177, "point_track_sq_distance_check": 177, "sub_3vec": 177, "track_dist_3pt": 177, "track_roi_intersection_check": 177, "kdtree": 177, "interp1d": 177, "compute_rfbc": 177, "min_moving_averag": 177, "detect_corresponding_track": 177, "detect_corresponding_tracks_plu": 177, "lifesignalmak": 177, "streamline_sign": 177, "streamline_gradi": 177, "grad_tensor": 177, "streamline_tensor": 177, "pft_tracker": 177, "triangles_area": 177, "vertices_to_triangles_valu": 177, "wind": [177, 219], "midpoint": 177, "frenet_serret": 177, "mean_curvatur": 177, "mean_orient": 177, "generate_combin": 177, "longest_track_bundl": 177, "intersect_spher": 177, "inside_spher": 177, "inside_sphere_point": 177, "arbitrarypoint": 177, "principal_compon": 177, "midpoint2point": 177, "eudx_both_direct": 177, "ndarray_offset": 177, "relist_streamlin": 177, "center_streamlin": 177, "compress_streamlin": [177, 217, 235], "ndbincount": 177, "reduce_label": 177, "subseg": 177, "streamline_near_roi": [177, 234], "unique_row": [177, 226], "transform_tracking_output": [177, 237], "reduce_roi": [177, 234], "max_angle_from_curvatur": 177, "streamline_map": [177, 221], "track_count": 177, "gmem": 177, "app": 177, "globalhorizon": 177, "horizonuiel": 177, "horizontab": 177, "tabmanag": 177, "build_slid": 177, "build_checkbox": 177, "build_switch": 177, "color_single_slid": 177, "color_double_slid": 177, "clusterstab": 177, "peakstab": 177, "roistab": 177, "slicestab": 177, "surfacetab": 177, "check_img_shap": 177, "check_img_dtyp": 177, "show_ellipsi": 177, "unpack_imag": 177, "unpack_surfac": 177, "is_binary_imag": 177, "clustersvisu": 177, "slicesvisu": 177, "surfacevisu": 177, "slicer_panel": 177, "bundle_shape_profil": 177, "sph_project": [177, 224, 226], "simple_plot": 177, "draw_lattice_2d": 177, "plot_slic": 177, "docstring_pars": 177, "flow_runn": 177, "multi_io": [177, 220, 222], "resliceflow": 177, "slrwithqbxflow": 177, "applytransformflow": 177, "synregistrationflow": [177, 236], "bundlewarpflow": 177, "check_dimens": 177, "introspectiveargumentpars": 177, "get_args_default": 177, "none_or_dtyp": 177, "patch2selfflow": 177, "mppcaflow": 177, "gibbsringingflow": 177, "numpydocstr": 177, "dedent_lin": 177, "get_level": 177, "run_flow": 177, "ioinfoflow": 177, "splitflow": [177, 229], "concatenatetractogramflow": 177, "convertshflow": 177, "converttensorsflow": 177, "converttractogramflow": 177, "maskflow": 177, "common_start": 177, "slash_to_und": 177, "connect_output_path": 177, "concatenate_input": 177, "basename_without_extens": 177, "io_iter": 177, "io_iterator_": 177, "evacplusflow": 177, "reconstmapmriflow": 177, "reconstdtiflow": 177, "reconstdsiflow": 177, "reconstcsdflow": 177, "reconstcsaflow": 177, "reconstdkiflow": 177, "reconstivimflow": 177, "reconstrumbaflow": 177, "recobundlesflow": 177, "labelsbundlesflow": 177, "snrinccflow": 177, "bundleanalysistractometryflow": 177, "linearmixedmodelsflow": 177, "bundleshapeanalysi": 177, "buan_bundle_profil": 177, "localfibertrackingpamflow": 177, "pftrackingpamflow": 177, "horizonflow": 177, "andgaryfallidi": [182, 183, 208], "forinvestig": [182, 183, 208], "acrosspopul": [182, 183, 208], "randommatrix": [189, 228], "noisemap": [189, 190], "inmedicin": 189, "matrixtheori": 190, "andprima": 191, "onhardi": 191, "featurecrf": 193, "mridata": 202, "ringingartifact": 202, "2016doi": 202, "linearregistr": 211, "ofstreamlin": 211, "fiberbundl": 211, "matterbundl": 211, "registrationand": 211, "towardsquantit": 215, "dipy_convert_tractogram": 216, "dipy_convert_tensor": 216, "dipy_denoise_patch2self": 216, "dipy_evac_plu": 216, "dipy_fit_dsi": 216, "dipy_concatenate_tractogram": 216, "dipy_reslic": 216, "dipy_sh_convert_mrtrix": 216, "dipy_snr_in_cc": 216, "dipy_split": 216, "alphabet": 217, "qixiang": 217, "gonzalo": 217, "altogeth": 217, "xvfb": 217, "headless": 217, "car": 217, "gitter": [217, 218, 221, 230, 240], "chat": [217, 218, 221], "tst": [217, 218, 219, 221, 222, 224, 226, 229, 230, 231], "offscreen": 217, "test_slic": 217, "pr1": [217, 227], "_to_voxel_toler": 217, "memleak": 217, "sinkpoint": 217, "randint": [217, 223], "tk": 217, "travi": [217, 218, 219, 220, 221, 222, 223, 226, 229, 230, 231], "wip": [217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "gh707": 217, "pr3": 217, "da": [217, 234], "segfault": [217, 222, 225], "sourceforg": 217, "makefil": 217, "gh": [217, 226], "upl": 217, "infrastructur": 217, "mrg": [217, 218, 219, 220, 221, 225, 226], "pyhon26": 217, "pr2": 217, "usherbrook": [217, 247, 248], "wrt": 217, "resav": 217, "tissuetyp": 217, "loosevers": 217, "dconn": 217, "tkinter": 217, "mesa": 217, "cleanup": [217, 219, 224, 225, 226, 227, 230, 233, 234], "test_shm": 217, "test_sf_to_sh": 217, "typeerror": [217, 225, 226, 236], "same_kind": 217, "cento": [217, 222], "python2": 217, "timeout": [217, 226, 231, 234], "test_spher": 217, "test_interp_rbf": 217, "hyp1f1": 217, "revisit": [217, 225], "cuba": 217, "638": 217, "test_vector_field": [217, 219], "test_reorient_vector_field_2d": 217, "icon": [217, 222], "nanmean": [217, 227], "dipy_quickbundl": 218, "918": [82, 85, 218], "test_expectmax": 218, "upcom": [218, 220, 226, 228, 229, 233, 236, 237], "room": 218, "miscellan": [218, 234, 235, 237], "examples_index": 218, "843": [73, 82, 85, 218], "toollib": 218, "anymor": [218, 222, 224, 226, 231, 235], "moco": 218, "revert": [218, 219, 222, 224, 226], "commit_info": 218, "shebang": [218, 219], "broken": [218, 219, 220, 221, 222, 223, 226, 228, 229, 230, 236, 237], "badg": [218, 219, 220, 221, 222, 234], "quickstart": [218, 222], "me": 218, "urlerror": 218, "urlopen": 218, "errno": 218, "10060": 218, "3rc": 218, "macosx": 218, "pr5": [218, 232], "hash": [218, 222], "_voxel2stream": 218, "antonio": 219, "ossa": 219, "etienn": [219, 233, 236], "julio": 219, "villalon": 219, "manu": 219, "sharma": [219, 222, 223], "gonzalez": 219, "riddhish": 219, "bhalodia": 219, "sourav": 219, "singh": [219, 221], "stong": 219, "guillaum": [219, 220, 222], "theaud": [219, 220, 222], "tingyi": 219, "wanyan": 219, "wright": 219, "vibhatha": 219, "abeykoon": 219, "theaveragegui": 219, "tut": 219, "mismatch": [219, 222], "dipy_hom": 219, "1234": [82, 219], "ascii": [219, 221, 225, 226], "lightweight": [219, 220, 222], "dropbox": 219, "clarif": 219, "simplify_warp_funcion_3d": 219, "1202": 219, "cla": 219, "textbox": 219, "wheelhous": 219, "assert_arrays_equ": 219, "accent": [219, 228], "anticip": 219, "int64": 219, "get_head": 219, "fmin": 219, "pathlength": 219, "drop26": 219, "nbr_process": 219, "python3": [219, 220, 229, 237, 252], "imp": 219, "py35": 219, "test_shor": 219, "heavi": 219, "progressbar": [219, 231], "pkg_info": 219, "test_sumsqdiff": 219, "test_scalespac": 219, "test_imaffin": 219, "clamp": 219, "mathjax": 219, "932": 219, "test_bvectxt": 219, "todai": 219, "test_nlmeans_4d_3dsigma_and_thread": 219, "cryptic": 219, "intermittenli": 219, "revamp": 219, "api_chang": 219, "test_imwarp": 219, "seed_from_mask": [219, 228], "incompat": [219, 226, 235, 236], "inconsist": [219, 226, 231, 232], "1211": 219, "tracking_quick_start": [219, 220, 226], "swallow": [219, 230], "rework": [219, 224, 226], "test_peaksfrommodelparallel": 219, "np1": 219, "streamlines_format": 219, "ivim_linear": 219, "nipyp": [219, 234], "bufferediobas": 219, "workaround": [219, 225], "slowadcopdfmodel": 219, "footer": 219, "charm": 219, "make_fetch": 219, "stabilis": 219, "pip3": [219, 230], "test_metr": 219, "test_parzenhist": 219, "test_transform": 219, "test_crosscorr": 219, "weird": 219, "920": [73, 219], "indent": 219, "unus": [219, 226, 228, 229, 234, 236, 237], "bennet": [220, 221], "fauber": [220, 221], "saber": 220, "sheybani": 220, "1351": [82, 220], "epilogu": 220, "gpl": [220, 226, 232], "test_csdeconv": 220, "eigh": 220, "textactor2d": 220, "1312": 220, "reciproc": [220, 241], "1290": [82, 220], "viz_ui": 220, "clinicalgraph": 220, "1247": [82, 220], "coveral": 220, "baggi": 220, "activeax": [220, 221], "vtkcommoncor": 220, "func_mul": 220, "directiion": 220, "ppc": [220, 226, 231], "step_help": 220, "conor": 221, "corbin": 221, "jiri": [221, 222], "borovec": [221, 222, 230], "mendoza": 221, "karandeep": [221, 222], "kumar": 221, "ashutosh": 221, "pradeep": 221, "reddi": 221, "raamana": 221, "ricci": [221, 222, 229], "woo": [221, 222, 229], "aman": 221, "arya": 221, "test_whole_brain_slr": 221, "vtk8": 221, "sfm_reconst": 221, "punctuat": 221, "_iter": 221, "test_mapmri": 221, "diskslid": 221, "logo": [221, 226], "banner": [221, 226], "progit": 221, "delimit": 221, "hyperlink": [221, 223], "mdfmetric": 221, "qbx": [221, 236], "textblock": 221, "getargspec": 221, "rcond": [221, 231], "eddy_rotated_bvec": 221, "assert_tru": 221, "assert_equ": [221, 224, 230], "ravel_multi_index": [221, 226], "whatnot": 221, "affili": [221, 222, 237], "parallel_voxel_fit": [221, 222, 235], "globalimmediatemoderenderingon": 221, "pyautogui": 221, "monitor": [221, 239], "memview": 221, "struct": [221, 234], "syntaxerror": 221, "xe2": [221, 225], "coding_style_guidelin": 221, "faq": [221, 224, 230], "jet": 221, "rint": 221, "misc": [221, 222, 234], "chrome": 221, "mmriflow": 221, "test_rmi": [221, 226], "1282": [82, 221], "filo": 222, "albai": 222, "parichit": [222, 223], "chandan": 222, "gangwar": 222, "enrico": 222, "cahal": 222, "hunt": 222, "honor": 222, "neurostar": [222, 240], "codecov": [222, 233, 236], "1644": [82, 222], "starter": 222, "evenly_distributed_sphere_642": 222, "listbox2d": 222, "timer": 222, "imread": 222, "radiobutton": 222, "1609": [73, 222], "nosetest": [222, 236], "out_strategi": 222, "major_vers": 222, "button2d": 222, "listbox": 222, "mistakenli": 222, "pep8speak": [222, 229], "appeas": 222, "634": 222, "ana": 222, "mini": 222, "1611": 222, "preload": 222, "noddix": 222, "filemenu2d": 222, "listboxitem2d": 222, "1532": 222, "sierra": 222, "ananoda": 222, "disappear": 222, "vtk6": [222, 225, 226], "voxsz": 222, "gsoc": [222, 223], "noddix_pr": 222, "1591": [82, 222], "tortois": 222, "mess": 222, "test_ui_listbox_2d": 222, "check_scratch": 222, "1535": 222, "exaampl": 222, "cl\u00e9ment": 223, "zotti": 223, "katrin": 223, "leinweb": 223, "yijun": 223, "liu": [223, 233], "1726": [82, 223], "sponsor": 223, "maiincrement": 223, "bullet": 223, "quot": [223, 226], "liner": 223, "random_integ": 223, "pendingdeprec": 223, "blank": [223, 226], "tripl": 223, "sensor": 223, "acsept": 223, "deprecationwarn": 223, "usersranjianaconda3libsit": 223, "packagesipykernel_launch": 223, "imsav": 223, "imageio": 223, "imwrit": 223, "n4": 223, "1692": [82, 223], "mdesco": 224, "sf2sh": 224, "dsi_deconv": 224, "colorfa": [224, 250], "result_typ": 224, "getitem": [224, 236], "_squash": 224, "einsum": 224, "xp": 224, "sty": 224, "multivoxel": 224, "ip": 224, "yai": 224, "l2norm": 224, "e1381s6_edcor": 224, "optional_trait": 224, "brought": 224, "_filter": 224, "reduce_antipod": 224, "_filter_peak": 224, "optionalimporterror": 224, "trait": 224, "gitwash": 224, "frontpag": 224, "longest_track_len": 224, "mayavi": 224, "refacotor": 224, "tb": 224, "hap": 224, "triangle_subdivid": 224, "badrequest": 224, "erik": 225, "autopep8": 225, "shmfit": 225, "peaks_from_model_parallel": 225, "sdeconv": 225, "brainextract": 225, "setinput": 225, "vtk5": 225, "setinputdata": 225, "mask_voxel_s": 225, "promote_dtyp": 225, "wi": 225, "tensor_": 225, "testfail": 225, "probabilisticodfweightedtrack": 225, "soureforg": 225, "supersed": 225, "stamp": 225, "pyc": 225, "archiv": 225, "plot_2d": 226, "npymath": 226, "ugli": 226, "win32": 226, "christma": 226, "reinstat": 226, "mergsort": 226, "importlib": 226, "__import__": 226, "traco": 226, "redesign": 226, "npy_math": 226, "checker": 226, "pxi": 226, "memory_leak": 226, "test_strealin": 226, "pipe": 226, "omarocegueda": 226, "ae": 226, "test_peak_directions_thorough": 226, "skiptest": 226, "odf_sh_sharpen": 226, "bumpi": 226, "fopenmp": 226, "crossplatform": 226, "tone": 226, "sent": 226, "vec2vec": 226, "pep": 226, "stuf": 226, "wheezi": [226, 227], "argsort": 226, "mergesort": 226, "dpy_math": 226, "hyp2f1": 226, "travis": 226, "tmp_file": 226, "matrix44": 226, "mkl": 226, "pow": 226, "16gb": 226, "wasn": 226, "demianw": 226, "quicki": 226, "peaksfrommodel": 226, "incomprehens": 226, "dipy_fit_tensor": 226, "brittl": 226, "create_half_unit_spher": 226, "dpy_rint": 227, "test_center_of_mass": 227, "undetect": 227, "typograph": 227, "quickbundles2": 227, "francopestilli": 227, "test_feature_center_of_mass": 227, "amico": 227, "three_shells_voxel": 227, "chatroom": 227, "32bit": [227, 252], "sparc": 227, "antoin": 228, "theberg": 228, "clint": 228, "1940": [82, 228], "1943": [82, 228], "endian": 228, "s390x": 228, "stateful": 228, "python_requir": 228, "test_refine_rb": 228, "test_bundl": 228, "numpy_less_0": 228, "scipy_less_0": 228, "oversight": 228, "1843": [82, 228], "statsmodel": [228, 249], "tput": 228, "diffeormorph": 228, "acknowledg": 228, "peaks_direct": 228, "bedpostx": 228, "test_streamlin": 228, "1724": [228, 230], "shouldn": [228, 234], "nodirect": 228, "1846": [82, 228, 247, 248], "1863": 228, "1781": 228, "1764": [82, 228], "reco": 228, "lab": [228, 229, 230, 231, 247, 248], "infeas": 228, "b0slice": 228, "implicit": 228, "dii": 228, "1802": 228, "1758": [82, 228], "dettrackpamflow": 228, "nifiti": 228, "1783": 228, "operand": 228, "flesh": 228, "behnel": 228, "proxi": 229, "dead": [229, 234], "cenir_multib": [229, 247, 248], "stateful_tractogram_post_1": 229, "0_fix": 229, "reloc": 229, "sim_respons": 229, "1966": [73, 82, 229], "read_": 229, "statefulltractogram": 229, "ioerror": 229, "circleci": 229, "intersphinx": 229, "inventori": 229, "aryansh": 230, "omrai": 230, "charl": [230, 231, 236, 237], "poirier": [230, 231, 236, 237], "fabio": 230, "neri": 230, "jirka": 230, "leevi": [230, 234], "kerkela": [230, 234], "leon": [230, 234], "wening": [230, 234], "martijn": 230, "nagtega": 230, "sarath": 230, "chandra": 230, "shrishti": 230, "hore": 230, "shubham": 230, "shaswat": 230, "taki": 230, "panagopoulo": 230, "tashrif": 230, "billah": 230, "kunal": 230, "mehta": 230, "svabhishek29": 230, "areesha": [230, 231, 232], "tariq": [230, 231, 232], "philipp": [230, 231, 232, 237, 247, 248], "karan": [230, 231, 232, 237], "shader": 230, "2208": [73, 230], "uniniti": [230, 237], "2204": [73, 82, 230], "_streamlines_in_mask": 230, "buan_flow": 230, "ssl": 230, "certif": 230, "assert_": 230, "rag": 230, "initialis": 230, "grammar": [230, 235, 237], "cigar_tensor": 230, "grammat": 230, "sform": 230, "get_best_affin": 230, "kunakl07": 230, "_gibbs_removal_2d": 230, "2047": 230, "__future__": 230, "wf": 230, "colab": 230, "kaggl": 230, "tp_print": 230, "elementwis": 230, "winter": 230, "friendli": 230, "regn": 230, "polici": 230, "old_highlight": 230, "maintainer_workflow": 230, "troubleshoot": 230, "hub": 230, "backlog": 230, "basil": 231, "pinsard": 231, "jaewon": 231, "siddharth": 231, "kapoor": 231, "part2": 231, "btensor": 231, "2247": 231, "backtick": 231, "robustifi": 231, "solvererror": 231, "rackspac": 231, "nightli": [231, 234], "xfail": 231, "assert_rais": 231, "lstsq": 231, "unr": 231, "test_mapmri_isotropic_static_scale_factor": 231, "somesuch": 231, "verbatim": 231, "spring": [231, 234], "test_multi_shell_fiber_respons": 231, "p2": [232, 233], "2317": [73, 232], "weekli": 232, "doctstr": 232, "doctsr": 232, "2283": 232, "arclength": 232, "2098": [73, 82, 232], "felix": 233, "kruper": [233, 237], "size_t": 233, "mnt": [233, 234], "wherev": [233, 234], "2340": 233, "reactiv": 233, "fault": 233, "vr": 233, "aphys": 233, "dan": 234, "franci": 234, "jerom": 234, "giulia": 234, "bert\u00f2": 234, "joshua": 234, "kenji": 234, "marshal": 234, "luca": 234, "costa": 234, "sam": [234, 235, 236, 237], "covenei": [234, 235, 236, 237], "errant": 234, "embarrassingli": 234, "concurr": 234, "gha": [234, 237], "underlin": 234, "2532": [82, 234], "2527": [82, 234], "2493": 234, "reboot": 234, "2487": 234, "2413": 234, "bitwis": 234, "misplac": 234, "c_compress_streamlin": 234, "2368": [82, 234], "_local_track": 234, "2477": [82, 234], "nonsens": 234, "reusabl": 234, "footprint": 234, "fwdwi": 234, "dipy_to_nipype_interfac": 234, "homepag": 234, "bitwise_or": 234, "_pytest": 234, "pathlib": 234, "importpathmismatcherror": 234, "dcperror": 234, "probtrackx2": 234, "toolbox": 234, "deneb": 235, "jacob": 235, "malinda": 235, "dilhara": 235, "temporarydirectori": [235, 247], "progbar": 235, "diffeormorphicmap": 235, "multi_dot": 235, "intemporarydirectori": [235, 237], "tmpfile": 235, "mutabl": 235, "2579": 235, "2566": 235, "noreg": 235, "redux": 235, "pyafq": 235, "cmd_line": 235, "chanc": 235, "wholebrain": 235, "tvis_hdr": 235, "nii_aff": 235, "dear": 235, "expert": 235, "dti_peak": 235, "safeti": 235, "concern": 235, "relianc": 235, "tmpdir": 235, "2573": 235, "dogu": 236, "baran": 236, "jong": [236, 237], "sung": [236, 237], "martino": 236, "pilia": 236, "mitesh": 236, "gulecha": 236, "rahul": 236, "ubal": 236, "shilpi": [236, 237], "karp2601": 236, "ujjwal": 236, "shekhar": 236, "test_roi_imag": 236, "2782": 236, "mtn": [236, 237], "fast_numpi": 236, "codespel": [236, 237], "extras_requir": 236, "attributeerror": 236, "fixdenois": 236, "atharva": 237, "shah": 237, "papadopoulo": 237, "maharshi": 237, "gor": 237, "cruso": 237, "delint": 237, "paul": 237, "camacho": 237, "prasad": 237, "theodor": 237, "vara": 237, "lakshmi": 237, "bayanagari": 237, "dependabot": 237, "\u00e9tienn": 237, "mollier": 237, "clarabel": 237, "optional_packag": 237, "_importlib": 237, "resort": 237, "swap": 237, "test_mcsd": 237, "incub": 237, "miniconda": 237, "negat": 237, "sctype": 237, "int_t": 237, "deleg": 237, "jhlegarreta": 237, "dep": 237, "sec": 237, "refurb": 237, "newli": 237, "pyupgrad": 237, "trail": 237, "license_fil": 237, "cfg": 237, "blog": 237, "week0": 237, "week1": 237, "submit": 237, "week13": 237, "week12": 237, "to_x": 237, "2862": 237, "7th_blog": 237, "4thblog": 237, "week6": 237, "clearn": 237, "nisext": 237, "prereleas": 237, "test_icm_squar": 237, "2936": [82, 237], "streamlines_registr": 237, "2560": 237, "dipy_motion_correct": 237, "gab": 237, "2903": 237, "week14blog": 237, "test_fil": 237, "topup": 237, "worsen": 237, "orbitofront": 237, "odffp": 237, "2857": 237, "2845": [82, 237], "2822": 237, "fyi": 237, "2718": [73, 237], "fiber_track": 238, "streamline_analysi": 238, "file_format": 238, "respond": 240, "privat": [241, 242], "req": [241, 242], "g_x": [241, 242], "g_y": [241, 242], "g_z": [241, 242], "supposedli": [241, 242], "envelop": 241, "int_0": 241, "matiello": 241, "onset": 241, "g_i": 241, "g_j": 241, "direcrt": 241, "trse": [241, 242], "ramp": [241, 242], "2b_": [241, 242], "_2": [241, 242], "_3": [241, 242], "dft": [241, 242], "callaghan": 241, "eccl": 241, "xia": 241, "narrow": [241, 243], "mysteri": 241, "exposit": 242, "clearer": 242, "frank": 243, "calaghan": 243, "transit": 243, "orthonorm": 245, "p_l": 245, "legendr": 245, "a_l": 245, "m_l": 245, "formal": 245, "leq": 245, "Their": 245, "foral": 245, "omiss": 245, "motiv": 245, "jorg": 246, "stolfi": 246, "atan2": 246, "cart2sph": 246, "fetch_flow": 247, "bundle_fa_hcp": [247, 248], "bundle_file_formats_exampl": [247, 248], "3352379": [247, 248], "gold_standard_io": [247, 248], "2651349": [247, 248], "bundle_atlas_hcp842": [247, 248], "href": [247, 248], "advanced_atlas_of_80_bundles_in_mni_spac": [247, 248], "7375883": [247, 248], "target_tractogram_hcp": [247, 248], "testing_data": [247, 248], "6084": [247, 248], "m9": [247, 248], "3395704": [247, 248], "ivim_dataset": [247, 248], "mni_templ": [247, 248], "servicesatlas": [247, 248], "icbm152nlin2009": [247, 248], "icbm": [247, 248], "qtdmri_test_retest_2subject": [247, 248], "santin": [247, 248], "leherici": [247, 248], "petiet": [247, 248], "dinf": [247, 248], "discoveri": [247, 248], "mr750": [247, 248], "purl": [247, 248], "ng782rw8378": [247, 248], "exercis": 250, "gotten": 252, "greatest": 252, "bleed": 252, "mint": 252, "neurodebian": 252, "courtesi": 252, "neurofedora": 252, "dnf": 252, "uninstal": 252, "__file__": 252, "canopi": 252, "okai": 252, "expertis": 253, "didn": 253, "depict": 253, "2338": [73, 82], "4164": 82, "2357": 82, "2364": [82, 85], "2610": 82, "2655": 82, "2811": 82, "3142": 82, "3276": 82, "3290": 82, "3365": 82, "3489": 82, "3639": 82, "3729": 82, "3734": 82, "3845": 82, "3924": 82, "3963": 82, "4158": 82, "4221": 82, "5063": 82, "5232": 85, "5304": 85, "5375": 85, "5591": 85, "5662": 85, "5876": 85, "5954": 85, "6034": 85, "6184": 85, "6332": 85, "6411": 85, "6492": 85, "6569": 85, "6642": 85, "6714": 85, "6856": 85, "6928": 85, "7002": 85, "7073": 85, "7146": 85, "7220": 85, "7294": 85, "7511": 85, "7581": 85, "7651": 85, "7727": 85, "7807": 85, "7888": 85, "7969": 85, "8050": 85, "8281": 85, "8353": 85, "8427": 85, "8501": 85, "8646": 85, "8722": 85, "8872": 85, "8948": 85, "9025": 85, "9100": 85, "9174": 85, "9247": 85, "9320": 85, "9392": 85, "9464": 85, "9534": 85, "9603": 85, "9671": 85, "9739": 85, "9811": 85, "9881": 85, "9951": 85, "10022": 85, "10094": 85, "10179": 85, "10255": 85, "10330": 85, "10404": 85, "10477": 85, "10549": 85, "10624": 85, "10700": 85, "10774": 85, "10852": 85, "10927": 85, "11002": 85, "11078": 85, "11153": 85, "11228": 85, "11302": 85, "11375": 85, "11451": 85, "11526": 85, "11600": 85, "11673": 85, "11746": 85, "11818": 85, "11890": 85, "11965": 85, "12037": 85, "12109": 85, "12181": 85, "12254": 85, "12326": 85, "12398": 85, "12468": 85, "12538": 85, "12607": 85, "12675": 85, "12746": 85, "12820": 85, "12894": 85, "12967": 85, "13039": 85, "13111": 85, "13182": 85, "13252": 85, "13323": 85, "13403": 85, "13568": 85, "13649": 85, "13728": 85, "13806": 85, "13882": 85, "13957": 85, "14030": 85, "14101": 85, "14172": 85, "14246": 85, "14318": 85, "14392": 85, "14466": 85, "14542": 85, "14619": 85, "14694": 85, "14767": 85, "14839": 85, "14910": 85, "14982": 85, "15053": 85, "15124": 85, "15205": 85, "15279": 85, "15352": 85, "15424": 85, "15495": 85, "15565": 85, "15638": 85, "15719": 85, "15792": 85, "15865": 85, "15938": 85, "16011": 85, "16083": 85, "16298": 85, "16375": 85, "16465": 85, "16555": 85, "16644": 85, "16732": 85, "16817": 85, "16900": 85, "16978": 85, "17055": 85, "17131": 85, "17205": 85, "17277": 85, "17349": 85, "17420": 85, "17491": 85, "17566": 85, "17708": 85, "17780": 85, "17851": 85, "17920": 85, "17991": 85, "18061": 85, "18134": 85, "18205": 85, "18275": 85, "18362": 85, "18451": 85, "18530": 85, "18608": 85, "18683": 85, "18761": 85, "18840": 85, "18916": 85, "18992": 85, "19067": 85, "19144": 85, "19221": 85, "19296": 85, "19377": 85, "19458": 85, "19539": 85, "19621": 85, "19700": 85, "19778": 85, "19854": 85, "19936": 85, "20013": 85, "20095": 85, "20185": 85, "20275": 85, "20365": 85, "20453": 85, "20540": 85, "20622": 85, "20700": 85, "20775": 85, "20850": 85, "20922": 85, "20994": 85, "21067": 85, "21140": 85, "21218": 85, "21298": 85, "21374": 85, "21448": 85, "21522": 85, "21596": 85, "21669": 85, "21742": 85, "21815": 85, "21888": 85, "21961": 85, "22033": 85, "22103": 85, "22172": 85, "22243": 85, "22312": 85, "22387": 85, "22464": 85, "22540": 85, "22613": 85, "22686": 85, "22761": 85, "22911": 85, "22987": 85, "23063": 85, "23138": 85, "23216": 85, "23291": 85, "23365": 85, "23444": 85, "23524": 85, "23605": 85, "23683": 85, "23759": 85, "23833": 85, "23906": 85, "23979": 85, "24051": 85, "24123": 85, "24194": 85, "24266": 85, "24337": 85, "24406": 85, "24475": 85, "24548": 85, "24620": 85, "24692": 85, "24834": 85, "24905": 85, "25121": 85, "25193": 85, "25265": 85, "25337": 85, "25409": 85, "25484": 85, "25561": 85, "25635": 85, "25707": 85, "25781": 85, "25854": 85, "25931": 85, "26012": 85, "26094": 85, "26174": 85, "26252": 85, "26329": 85, "26405": 85, "26484": 85, "26563": 85, "26643": 85, "26721": 85, "26798": 85, "26872": 85, "26945": 85, "27017": 85, "27088": 85, "27159": 85, "27235": 85, "27306": 85, "27386": 85, "27465": 85, "27545": 85, "27625": 85, "27703": 85, "27780": 85, "27855": 85, "27928": 85, "28000": 85, "28073": 85, "28152": 85, "28229": 85, "28304": 85, "28379": 85, "28453": 85, "28526": 85, "28597": 85, "28667": 85, "28740": 85, "28817": 85, "28897": 85, "28976": 85, "29056": 85, "29135": 85, "29213": 85, "29289": 85, "29365": 85, "29443": 85, "29519": 85, "29593": 85, "29666": 85, "29746": 85, "29835": 85, "29919": 85, "30078": 85, "30154": 85, "30228": 85, "30301": 85, "30374": 85, "30447": 85, "30519": 85, "30590": 85, "30660": 85, "30731": 85, "30801": 85, "30872": 85, "30945": 85, "31016": 85, "31105": 85, "31190": 85, "31279": 85, "31368": 85, "31452": 85, "31532": 85, "31609": 85, "31683": 85, "31757": 85, "31832": 85, "31908": 85, "31982": 85, "32055": 85, "32132": 85, "32206": 85, "32279": 85, "32352": 85, "32424": 85, "32495": 85, "32566": 85, "32644": 85, "32716": 85, "32788": 85, "32859": 85, "32930": 85, "33000": 85, "33071": 85, "33141": 85, "33211": 85, "33280": 85, "33357": 85, "33436": 85, "33513": 85, "33588": 85, "33661": 85, "33730": 85, "33796": 85, "33864": 85, "33932": 85, "34072": 85, "34141": 85, "34208": 85, "34278": 85, "34352": 85, "34426": 85, "34500": 85, "34574": 85, "34650": 85, "34724": 85, "34801": 85, "34877": 85, "34952": 85, "35028": 85, "35106": 85, "35188": 85, "35273": 85, "35353": 85, "35432": 85, "35509": 85, "35584": 85, "35658": 85, "35731": 85, "35803": 85, "35874": 85, "35945": 85, "36024": 85, "36102": 85, "36176": 85, "36250": 85, "36324": 85, "36397": 85, "36469": 85, "36540": 85, "36610": 85, "36683": 85, "36753": 85, "36893": 85, "36963": 85, "37035": 85, "37107": 85, "37178": 85, "37249": 85, "37326": 85, "37399": 85, "37471": 85, "37543": 85, "37615": 85, "37687": 85, "37759": 85, "37831": 85, "37903": 85, "37974": 85, "38047": 85, "38118": 85, "38189": 85, "38334": 85, "38406": 85, "38478": 85, "38549": 85, "38619": 85, "38698": 85, "38782": 85, "38858": 85, "38933": 85, "39008": 85, "39080": 85, "39163": 85, "39248": 85, "39326": 85, "39403": 85, "39477": 85, "39549": 85, "39620": 85, "39693": 85, "39771": 85, "39851": 85, "40009": 85, "40084": 85, "40157": 85, "40228": 85, "40298": 85, "40369": 85, "40439": 85, "40509": 85, "40580": 85, "40658": 85, "40732": 85, "40877": 85, "40948": 85, "41019": 85, "41090": 85, "41164": 85, "41244": 85, "41325": 85, "41401": 85, "41477": 85, "41552": 85, "41626": 85, "41698": 85, "41771": 85, "41845": 85, "41918": 85, "41990": 85, "42062": 85, "42135": 85, "42207": 85, "42278": 85, "42351": 85, "42426": 85, "42499": 85, "42571": 85, "42642": 85, "42713": 85, "42784": 85, "42855": 85, "42996": 85, "43070": 85, "43146": 85, "43226": 85, "43386": 85, "43465": 85, "43543": 85, "43619": 85, "43694": 85, "43767": 85, "43839": 85, "43911": 85, "43983": 85, "44054": 85, "44125": 85, "44197": 85, "44268": 85, "44410": 85, "44480": 85, "44552": 85, "44632": 85, "44709": 85, "44783": 85, "44860": 85, "44940": 85, "45016": 85, "45092": 85, "45238": 85, "45313": 85, "45388": 85, "45463": 85, "45544": 85, "45622": 85, "45776": 85, "45853": 85, "45933": 85, "46011": 85, "46092": 85, "46170": 85, "46246": 85, "46320": 85, "46394": 85, "46466": 85, "46538": 85, "46619": 85, "46697": 85, "46773": 85, "46848": 85, "46922": 85, "46995": 85, "47067": 85, "47144": 85, "47228": 85, "47304": 85, "47378": 85, "47450": 85, "47522": 85, "47594": 85, "47667": 85, "47739": 85, "47812": 85, "47898": 85, "47977": 85, "48054": 85, "48131": 85, "48207": 85, "48281": 85, "48354": 85, "48436": 85, "48521": 85, "48599": 85, "48677": 85, "48755": 85, "48831": 85, "48905": 85, "48978": 85, "49057": 85, "49137": 85, "49217": 85, "49396": 85, "49481": 85, "49565": 85, "49647": 85, "49726": 85, "49803": 85, "49880": 85, "49957": 85, "50037": 85, "50114": 85, "50190": 85, "50265": 85, "50340": 85, "50414": 85, "50485": 85, "50557": 85, "50630": 85, "50711": 85, "50791": 85, "50872": 85, "50950": 85, "51028": 85, "51105": 85, "51181": 85, "51259": 85, "51338": 85, "51419": 85, "51499": 85, "51580": 85, "51661": 85, "51741": 85, "51818": 85, "51893": 85, "51966": 85, "52047": 85, "52138": 85, "52227": 85, "52312": 85, "52395": 85, "52475": 85, "52553": 85, "52629": 85, "52704": 85, "52777": 85, "52848": 85, "52923": 85, "52995": 85, "53066": 85, "53137": 85, "53207": 85, "53277": 85, "53424": 85, "53495": 85, "53566": 85, "53636": 85, "53705": 85, "53774": 85, "53847": 85, "53917": 85, "53987": 85, "54057": 85, "54127": 85, "54199": 85, "54278": 85, "54358": 85, "54439": 85, "54518": 85, "54595": 85, "54671": 85, "54745": 85, "54818": 85, "54890": 85, "54962": 85, "55034": 85, "55107": 85, "55187": 85, "55267": 85, "55345": 85, "55421": 85, "55496": 85, "55569": 85, "55640": 85, "55710": 85, "55778": 85, "55847": 85, "55926": 85, "56008": 85, "56088": 85, "56164": 85, "56239": 85, "56313": 85, "56402": 85, "56493": 85, "56577": 85, "56659": 85, "56740": 85, "56821": 85, "56977": 85, "57051": 85, "57127": 85, "57203": 85, "57277": 85, "57356": 85, "57432": 85, "57508": 85, "052": [86, 95], "043": 95, "sync_slic": 175, "sync_volum": 175, "sync_peak": 175, "ref_img_shap": 175, "sync_img": 175, "vtkactor": 175, "x_indic": 175, "y_indic": 175, "z_indic": 175, "rgb_standard": 175, "vtklookupt": 175, "cross_sect": [175, 177], "display_cross_sect": [175, 177], "z1": 175, "z2": 175, "global_opac": [175, 177], "high_rang": [175, 177], "is_rang": [175, 177], "low_rang": [175, 177], "max_cent": [175, 177], "min_cent": [175, 177], "lodactor": 175, "check_peak_s": 177, "peakactor": 177, "peaksvisu": 177, "_median_otsu": [49, 107], "038": []}, "objects": {"": [[162, 0, 0, "-", "dipy"]], "dipy": [[163, 0, 0, "-", "align"], [164, 0, 0, "-", "core"], [165, 0, 0, "-", "data"], [166, 0, 0, "-", "denoise"], [167, 0, 0, "-", "direction"], [162, 3, 1, "", "get_info"], [168, 0, 0, "-", "io"], [169, 0, 0, "-", "nn"], [170, 0, 0, "-", "reconst"], [171, 0, 0, "-", "segment"], [172, 0, 0, "-", "sims"], [173, 0, 0, "-", "stats"], [174, 0, 0, "-", "tracking"], [175, 0, 0, "-", "viz"], [176, 0, 0, "-", "workflows"]], "dipy.align": [[163, 1, 1, "", "Bunch"], [163, 3, 1, "", "VerbosityLevels"], [163, 0, 0, "-", "_public"], [163, 0, 0, "-", "bundlemin"], [163, 0, 0, "-", "cpd"], [163, 0, 0, "-", "crosscorr"], [163, 0, 0, "-", "expectmax"], [163, 0, 0, "-", "imaffine"], [163, 0, 0, "-", "imwarp"], [163, 0, 0, "-", "metrics"], [163, 0, 0, "-", "parzenhist"], [163, 0, 0, "-", "reslice"], [163, 0, 0, "-", "scalespace"], [163, 0, 0, "-", "streamlinear"], [163, 0, 0, "-", "streamwarp"], [163, 0, 0, "-", "sumsqdiff"], [163, 0, 0, "-", "transforms"], [163, 0, 0, "-", "vector_fields"]], "dipy.align.Bunch": [[163, 2, 1, "", "__init__"]], "dipy.align._public": [[163, 3, 1, "", "_METHOD_DICT"], [163, 3, 1, "", "affine"], [163, 3, 1, "", "affine_registration"], [163, 3, 1, "", "center_of_mass"], [163, 3, 1, "", "motion_correction"], [163, 3, 1, "", "read_mapping"], [163, 3, 1, "", "register_dwi_series"], [163, 3, 1, "", "register_dwi_to_template"], [163, 3, 1, "", "register_series"], [163, 3, 1, "", "resample"], [163, 3, 1, "", "rigid"], [163, 3, 1, "", "rigid_isoscaling"], [163, 3, 1, "", "rigid_scaling"], [163, 3, 1, "", "streamline_registration"], [163, 3, 1, "", "syn_registration"], [163, 3, 1, "", "translation"], [163, 3, 1, "", "write_mapping"]], "dipy.align.bundlemin": [[163, 3, 1, "", "determine_num_threads"], [163, 3, 1, "", "distance_matrix_mdf"]], "dipy.align.cpd": [[163, 1, 1, "", "DeformableRegistration"], [163, 3, 1, "", "gaussian_kernel"], [163, 3, 1, "", "initialize_sigma2"], [163, 3, 1, "", "low_rank_eigen"], [163, 3, 1, "", "lowrankQS"]], "dipy.align.cpd.DeformableRegistration": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "expectation"], [163, 2, 1, "", "get_registration_parameters"], [163, 2, 1, "", "iterate"], [163, 2, 1, "", "maximization"], [163, 2, 1, "", "register"], [163, 2, 1, "", "transform_point_cloud"], [163, 2, 1, "", "update_transform"], [163, 2, 1, "", "update_variance"]], "dipy.align.crosscorr": [[163, 3, 1, "", "compute_cc_backward_step_2d"], [163, 3, 1, "", "compute_cc_backward_step_3d"], [163, 3, 1, "", "compute_cc_forward_step_2d"], [163, 3, 1, "", "compute_cc_forward_step_3d"], [163, 3, 1, "", "precompute_cc_factors_2d"], [163, 3, 1, "", "precompute_cc_factors_2d_test"], [163, 3, 1, "", "precompute_cc_factors_3d"], [163, 3, 1, "", "precompute_cc_factors_3d_test"]], "dipy.align.expectmax": [[163, 3, 1, "", "compute_em_demons_step_2d"], [163, 3, 1, "", "compute_em_demons_step_3d"], [163, 3, 1, "", "compute_masked_class_stats_2d"], [163, 3, 1, "", "compute_masked_class_stats_3d"], [163, 3, 1, "", "quantize_positive_2d"], [163, 3, 1, "", "quantize_positive_3d"]], "dipy.align.imaffine": [[163, 1, 1, "", "AffineInvalidValuesError"], [163, 1, 1, "", "AffineInversionError"], [163, 1, 1, "", "AffineMap"], [163, 1, 1, "", "AffineRegistration"], [163, 1, 1, "", "MutualInformationMetric"], [163, 3, 1, "", "_transform_method"], [163, 3, 1, "", "transform_centers_of_mass"], [163, 3, 1, "", "transform_geometric_centers"], [163, 3, 1, "", "transform_origins"]], "dipy.align.imaffine.AffineInvalidValuesError": [[163, 2, 1, "", "__init__"]], "dipy.align.imaffine.AffineInversionError": [[163, 2, 1, "", "__init__"]], "dipy.align.imaffine.AffineMap": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "get_affine"], [163, 2, 1, "", "set_affine"], [163, 2, 1, "", "transform"], [163, 2, 1, "", "transform_inverse"]], "dipy.align.imaffine.AffineRegistration": [[163, 2, 1, "", "__init__"], [163, 4, 1, "", "docstring_addendum"], [163, 2, 1, "", "optimize"]], "dipy.align.imaffine.MutualInformationMetric": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "distance"], [163, 2, 1, "", "distance_and_gradient"], [163, 2, 1, "", "gradient"], [163, 2, 1, "", "setup"]], "dipy.align.imwarp": [[163, 1, 1, "", "DiffeomorphicMap"], [163, 1, 1, "", "DiffeomorphicRegistration"], [163, 3, 1, "", "RegistrationStages"], [163, 1, 1, "", "SymmetricDiffeomorphicRegistration"], [163, 3, 1, "", "get_direction_and_spacings"], [163, 3, 1, "", "logger"], [163, 3, 1, "", "mult_aff"]], "dipy.align.imwarp.DiffeomorphicMap": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "allocate"], [163, 2, 1, "", "compute_inversion_error"], [163, 2, 1, "", "expand_fields"], [163, 2, 1, "", "get_backward_field"], [163, 2, 1, "", "get_forward_field"], [163, 2, 1, "", "get_simplified_transform"], [163, 2, 1, "", "interpret_matrix"], [163, 2, 1, "", "inverse"], [163, 2, 1, "", "shallow_copy"], [163, 2, 1, "", "transform"], [163, 2, 1, "", "transform_inverse"], [163, 2, 1, "", "transform_points"], [163, 2, 1, "", "transform_points_inverse"], [163, 2, 1, "", "warp_endomorphism"]], "dipy.align.imwarp.DiffeomorphicRegistration": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "get_map"], [163, 2, 1, "", "optimize"], [163, 2, 1, "", "set_level_iters"]], "dipy.align.imwarp.SymmetricDiffeomorphicRegistration": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "get_map"], [163, 2, 1, "", "optimize"], [163, 2, 1, "", "update"]], "dipy.align.metrics": [[163, 1, 1, "", "CCMetric"], [163, 1, 1, "", "EMMetric"], [163, 1, 1, "", "SSDMetric"], [163, 1, 1, "", "SimilarityMetric"], [163, 3, 1, "", "v_cycle_2d"], [163, 3, 1, "", "v_cycle_3d"]], "dipy.align.metrics.CCMetric": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "compute_backward"], [163, 2, 1, "", "compute_forward"], [163, 2, 1, "", "free_iteration"], [163, 2, 1, "", "get_energy"], [163, 2, 1, "", "initialize_iteration"]], "dipy.align.metrics.EMMetric": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "compute_backward"], [163, 2, 1, "", "compute_demons_step"], [163, 2, 1, "", "compute_forward"], [163, 2, 1, "", "compute_gauss_newton_step"], [163, 2, 1, "", "free_iteration"], [163, 2, 1, "", "get_energy"], [163, 2, 1, "", "initialize_iteration"], [163, 2, 1, "", "use_moving_image_dynamics"], [163, 2, 1, "", "use_static_image_dynamics"]], "dipy.align.metrics.SSDMetric": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "compute_backward"], [163, 2, 1, "", "compute_demons_step"], [163, 2, 1, "", "compute_forward"], [163, 2, 1, "", "compute_gauss_newton_step"], [163, 2, 1, "", "free_iteration"], [163, 2, 1, "", "get_energy"], [163, 2, 1, "", "initialize_iteration"]], "dipy.align.metrics.SimilarityMetric": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "compute_backward"], [163, 2, 1, "", "compute_forward"], [163, 2, 1, "", "free_iteration"], [163, 2, 1, "", "get_energy"], [163, 2, 1, "", "initialize_iteration"], [163, 2, 1, "", "set_levels_above"], [163, 2, 1, "", "set_levels_below"], [163, 2, 1, "", "set_moving_image"], [163, 2, 1, "", "set_static_image"], [163, 2, 1, "", "use_moving_image_dynamics"], [163, 2, 1, "", "use_static_image_dynamics"]], "dipy.align.parzenhist": [[163, 1, 1, "", "ParzenJointHistogram"], [163, 3, 1, "", "compute_parzen_mi"], [163, 3, 1, "", "cubic_spline"], [163, 3, 1, "", "cubic_spline_derivative"], [163, 3, 1, "", "sample_domain_regular"]], "dipy.align.parzenhist.ParzenJointHistogram": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "bin_index"], [163, 2, 1, "", "bin_normalize_moving"], [163, 2, 1, "", "bin_normalize_static"], [163, 2, 1, "", "setup"], [163, 2, 1, "", "update_gradient_dense"], [163, 2, 1, "", "update_gradient_sparse"], [163, 2, 1, "", "update_pdfs_dense"], [163, 2, 1, "", "update_pdfs_sparse"]], "dipy.align.reslice": [[163, 3, 1, "", "reslice"]], "dipy.align.scalespace": [[163, 1, 1, "", "IsotropicScaleSpace"], [163, 1, 1, "", "ScaleSpace"], [163, 3, 1, "", "logger"]], "dipy.align.scalespace.IsotropicScaleSpace": [[163, 2, 1, "", "__init__"]], "dipy.align.scalespace.ScaleSpace": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "get_affine"], [163, 2, 1, "", "get_affine_inv"], [163, 2, 1, "", "get_domain_shape"], [163, 2, 1, "", "get_expand_factors"], [163, 2, 1, "", "get_image"], [163, 2, 1, "", "get_scaling"], [163, 2, 1, "", "get_sigmas"], [163, 2, 1, "", "get_spacing"], [163, 2, 1, "", "print_level"]], "dipy.align.streamlinear": [[163, 1, 1, "", "BundleMinDistanceAsymmetricMetric"], [163, 1, 1, "", "BundleMinDistanceMatrixMetric"], [163, 1, 1, "", "BundleMinDistanceMetric"], [163, 1, 1, "", "BundleSumDistanceMatrixMetric"], [163, 1, 1, "", "JointBundleMinDistanceMetric"], [163, 1, 1, "", "JointStreamlineRegistrationMap"], [163, 1, 1, "", "StreamlineDistanceMetric"], [163, 1, 1, "", "StreamlineLinearRegistration"], [163, 1, 1, "", "StreamlineRegistrationMap"], [163, 3, 1, "", "bundle_min_distance"], [163, 3, 1, "", "bundle_min_distance_asymmetric_fast"], [163, 3, 1, "", "bundle_min_distance_fast"], [163, 3, 1, "", "bundle_sum_distance"], [163, 3, 1, "", "compose_matrix44"], [163, 3, 1, "", "decompose_matrix44"], [163, 3, 1, "", "get_unique_pairs"], [163, 3, 1, "", "groupwise_slr"], [163, 3, 1, "", "logger"], [163, 3, 1, "", "progressive_slr"], [163, 3, 1, "", "remove_clusters_by_size"], [163, 3, 1, "", "slr_with_qbx"]], "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "distance"]], "dipy.align.streamlinear.BundleMinDistanceMatrixMetric": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "distance"], [163, 2, 1, "", "setup"]], "dipy.align.streamlinear.BundleMinDistanceMetric": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "distance"], [163, 2, 1, "", "setup"]], "dipy.align.streamlinear.BundleSumDistanceMatrixMetric": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "distance"]], "dipy.align.streamlinear.JointBundleMinDistanceMetric": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "distance"], [163, 2, 1, "", "setup"]], "dipy.align.streamlinear.JointStreamlineRegistrationMap": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "transform"]], "dipy.align.streamlinear.StreamlineDistanceMetric": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "distance"], [163, 2, 1, "", "setup"]], "dipy.align.streamlinear.StreamlineLinearRegistration": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "optimize"]], "dipy.align.streamlinear.StreamlineRegistrationMap": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "transform"]], "dipy.align.streamwarp": [[163, 3, 1, "", "average_bundle_length"], [163, 3, 1, "", "bundlewarp"], [163, 3, 1, "", "bundlewarp_shape_analysis"], [163, 3, 1, "", "bundlewarp_vector_filed"], [163, 3, 1, "", "find_missing"]], "dipy.align.sumsqdiff": [[163, 3, 1, "", "compute_energy_ssd_2d"], [163, 3, 1, "", "compute_energy_ssd_3d"], [163, 3, 1, "", "compute_residual_displacement_field_ssd_2d"], [163, 3, 1, "", "compute_residual_displacement_field_ssd_3d"], [163, 3, 1, "", "compute_ssd_demons_step_2d"], [163, 3, 1, "", "compute_ssd_demons_step_3d"], [163, 3, 1, "", "iterate_residual_displacement_field_ssd_2d"], [163, 3, 1, "", "iterate_residual_displacement_field_ssd_3d"], [163, 3, 1, "", "solve_2d_symmetric_positive_definite"], [163, 3, 1, "", "solve_3d_symmetric_positive_definite"]], "dipy.align.transforms": [[163, 1, 1, "", "AffineTransform2D"], [163, 1, 1, "", "AffineTransform3D"], [163, 1, 1, "", "RigidIsoScalingTransform2D"], [163, 1, 1, "", "RigidIsoScalingTransform3D"], [163, 1, 1, "", "RigidScalingTransform2D"], [163, 1, 1, "", "RigidScalingTransform3D"], [163, 1, 1, "", "RigidTransform2D"], [163, 1, 1, "", "RigidTransform3D"], [163, 1, 1, "", "RotationTransform2D"], [163, 1, 1, "", "RotationTransform3D"], [163, 1, 1, "", "ScalingTransform2D"], [163, 1, 1, "", "ScalingTransform3D"], [163, 1, 1, "", "Transform"], [163, 1, 1, "", "TranslationTransform2D"], [163, 1, 1, "", "TranslationTransform3D"]], "dipy.align.transforms.AffineTransform2D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.AffineTransform3D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidIsoScalingTransform2D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidIsoScalingTransform3D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidScalingTransform2D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidScalingTransform3D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidTransform2D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidTransform3D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.RotationTransform2D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.RotationTransform3D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.ScalingTransform2D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.ScalingTransform3D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.Transform": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "get_dim"], [163, 2, 1, "", "get_identity_parameters"], [163, 2, 1, "", "get_number_of_parameters"], [163, 2, 1, "", "jacobian"], [163, 2, 1, "", "param_to_matrix"]], "dipy.align.transforms.TranslationTransform2D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.TranslationTransform3D": [[163, 2, 1, "", "__init__"]], "dipy.align.vector_fields": [[163, 3, 1, "", "compose_vector_fields_2d"], [163, 3, 1, "", "compose_vector_fields_3d"], [163, 3, 1, "", "create_circle"], [163, 3, 1, "", "create_harmonic_fields_2d"], [163, 3, 1, "", "create_harmonic_fields_3d"], [163, 3, 1, "", "create_random_displacement_2d"], [163, 3, 1, "", "create_random_displacement_3d"], [163, 3, 1, "", "create_sphere"], [163, 3, 1, "", "downsample_displacement_field_2d"], [163, 3, 1, "", "downsample_displacement_field_3d"], [163, 3, 1, "", "downsample_scalar_field_2d"], [163, 3, 1, "", "downsample_scalar_field_3d"], [163, 3, 1, "", "gradient"], [163, 3, 1, "", "invert_vector_field_fixed_point_2d"], [163, 3, 1, "", "invert_vector_field_fixed_point_3d"], [163, 3, 1, "", "is_valid_affine"], [163, 3, 1, "", "reorient_vector_field_2d"], [163, 3, 1, "", "reorient_vector_field_3d"], [163, 3, 1, "", "resample_displacement_field_2d"], [163, 3, 1, "", "resample_displacement_field_3d"], [163, 3, 1, "", "simplify_warp_function_2d"], [163, 3, 1, "", "simplify_warp_function_3d"], [163, 3, 1, "", "sparse_gradient"], [163, 3, 1, "", "transform_2d_affine"], [163, 3, 1, "", "transform_2d_affine_nn"], [163, 3, 1, "", "transform_3d_affine"], [163, 3, 1, "", "transform_3d_affine_nn"], [163, 3, 1, "", "warp_2d"], [163, 3, 1, "", "warp_2d_nn"], [163, 3, 1, "", "warp_3d"], [163, 3, 1, "", "warp_3d_nn"], [163, 3, 1, "", "warp_coordinates_2d"], [163, 3, 1, "", "warp_coordinates_3d"]], "dipy.core": [[164, 0, 0, "-", "geometry"], [164, 0, 0, "-", "gradients"], [164, 0, 0, "-", "graph"], [164, 0, 0, "-", "histeq"], [164, 0, 0, "-", "interpolation"], [164, 0, 0, "-", "ndindex"], [164, 0, 0, "-", "onetime"], [164, 0, 0, "-", "optimize"], [164, 0, 0, "-", "profile"], [164, 0, 0, "-", "rng"], [164, 0, 0, "-", "sphere"], [164, 0, 0, "-", "sphere_stats"], [164, 0, 0, "-", "subdivide_octahedron"], [164, 0, 0, "-", "wavelet"]], "dipy.core.geometry": [[164, 3, 1, "", "_TUPLE2AXES"], [164, 3, 1, "", "cart2sphere"], [164, 3, 1, "", "cart_distance"], [164, 3, 1, "", "circumradius"], [164, 3, 1, "", "compose_matrix"], [164, 3, 1, "", "compose_transformations"], [164, 3, 1, "", "decompose_matrix"], [164, 3, 1, "", "dist_to_corner"], [164, 3, 1, "", "euler_matrix"], [164, 3, 1, "", "is_hemispherical"], [164, 3, 1, "", "lambert_equal_area_projection_cart"], [164, 3, 1, "", "lambert_equal_area_projection_polar"], [164, 3, 1, "", "nearest_pos_semi_def"], [164, 3, 1, "", "normalized_vector"], [164, 3, 1, "", "perpendicular_directions"], [164, 3, 1, "", "rodrigues_axis_rotation"], [164, 3, 1, "", "sph2latlon"], [164, 3, 1, "", "sphere2cart"], [164, 3, 1, "", "sphere_distance"], [164, 3, 1, "", "vec2vec_rotmat"], [164, 3, 1, "", "vector_cosine"], [164, 3, 1, "", "vector_norm"]], "dipy.core.gradients": [[164, 1, 1, "", "GradientTable"], [164, 3, 1, "", "b0_threshold_empty_gradient_message"], [164, 3, 1, "", "b0_threshold_update_slicing_message"], [164, 3, 1, "", "btens_to_params"], [164, 3, 1, "", "check_multi_b"], [164, 3, 1, "", "generate_bvecs"], [164, 3, 1, "", "get_bval_indices"], [164, 3, 1, "", "gradient_table"], [164, 3, 1, "", "gradient_table_from_bvals_bvecs"], [164, 3, 1, "", "gradient_table_from_gradient_strength_bvecs"], [164, 3, 1, "", "gradient_table_from_qvals_bvecs"], [164, 3, 1, "", "logger"], [164, 3, 1, "", "mask_non_weighted_bvals"], [164, 3, 1, "", "orientation_from_string"], [164, 3, 1, "", "orientation_to_string"], [164, 3, 1, "", "ornt_mapping"], [164, 3, 1, "", "params_to_btens"], [164, 3, 1, "", "reorient_bvecs"], [164, 3, 1, "", "reorient_on_axis"], [164, 3, 1, "", "reorient_vectors"], [164, 3, 1, "", "round_bvals"], [164, 3, 1, "", "unique_bvals"], [164, 3, 1, "", "unique_bvals_magnitude"], [164, 3, 1, "", "unique_bvals_tolerance"]], "dipy.core.gradients.GradientTable": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "b0s_mask"], [164, 2, 1, "", "bvals"], [164, 2, 1, "", "bvecs"], [164, 2, 1, "", "gradient_strength"], [164, 5, 1, "", "info"], [164, 2, 1, "", "qvals"], [164, 2, 1, "", "tau"]], "dipy.core.graph": [[164, 1, 1, "", "Graph"]], "dipy.core.graph.Graph": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "add_edge"], [164, 2, 1, "", "add_node"], [164, 2, 1, "", "all_paths"], [164, 2, 1, "", "children"], [164, 2, 1, "", "del_node"], [164, 2, 1, "", "del_node_and_edges"], [164, 2, 1, "", "down"], [164, 2, 1, "", "down_short"], [164, 2, 1, "", "parents"], [164, 2, 1, "", "shortest_path"], [164, 2, 1, "", "up"], [164, 2, 1, "", "up_short"]], "dipy.core.histeq": [[164, 3, 1, "", "histeq"]], "dipy.core.interpolation": [[164, 1, 1, "", "Interpolator"], [164, 1, 1, "", "NearestNeighborInterpolator"], [164, 1, 1, "", "OutsideImage"], [164, 1, 1, "", "TriLinearInterpolator"], [164, 3, 1, "", "interp_rbf"], [164, 3, 1, "", "interpolate_scalar_2d"], [164, 3, 1, "", "interpolate_scalar_3d"], [164, 3, 1, "", "interpolate_scalar_nn_2d"], [164, 3, 1, "", "interpolate_scalar_nn_3d"], [164, 3, 1, "", "interpolate_vector_2d"], [164, 3, 1, "", "interpolate_vector_3d"], [164, 3, 1, "", "map_coordinates_trilinear_iso"], [164, 3, 1, "", "nearestneighbor_interpolate"], [164, 3, 1, "", "trilinear_interp"], [164, 3, 1, "", "trilinear_interpolate4d"]], "dipy.core.interpolation.Interpolator": [[164, 2, 1, "", "__init__"]], "dipy.core.interpolation.NearestNeighborInterpolator": [[164, 2, 1, "", "__init__"]], "dipy.core.interpolation.OutsideImage": [[164, 2, 1, "", "__init__"]], "dipy.core.interpolation.TriLinearInterpolator": [[164, 2, 1, "", "__init__"]], "dipy.core.ndindex": [[164, 3, 1, "", "ndindex"]], "dipy.core.onetime": [[164, 1, 1, "", "OneTimeProperty"], [164, 1, 1, "", "ResetMixin"], [164, 3, 1, "", "auto_attr"]], "dipy.core.onetime.OneTimeProperty": [[164, 2, 1, "", "__init__"]], "dipy.core.onetime.ResetMixin": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "reset"]], "dipy.core.optimize": [[164, 1, 1, "", "NonNegativeLeastSquares"], [164, 1, 1, "", "Optimizer"], [164, 1, 1, "", "PositiveDefiniteLeastSquares"], [164, 1, 1, "", "SKLearnLinearSolver"], [164, 3, 1, "", "sparse_nnls"], [164, 3, 1, "", "spdot"]], "dipy.core.optimize.NonNegativeLeastSquares": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "fit"]], "dipy.core.optimize.Optimizer": [[164, 2, 1, "", "__init__"], [164, 5, 1, "", "evolution"], [164, 5, 1, "", "fopt"], [164, 5, 1, "", "message"], [164, 5, 1, "", "nfev"], [164, 5, 1, "", "nit"], [164, 2, 1, "", "print_summary"], [164, 5, 1, "", "xopt"]], "dipy.core.optimize.PositiveDefiniteLeastSquares": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "solve"]], "dipy.core.optimize.SKLearnLinearSolver": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "fit"], [164, 2, 1, "", "predict"]], "dipy.core.profile": [[164, 1, 1, "", "Profiler"]], "dipy.core.profile.Profiler": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "print_stats"]], "dipy.core.rng": [[164, 3, 1, "", "LEcuyer"], [164, 3, 1, "", "WichmannHill1982"], [164, 3, 1, "", "WichmannHill2006"]], "dipy.core.sphere": [[164, 1, 1, "", "HemiSphere"], [164, 1, 1, "", "Sphere"], [164, 3, 1, "", "disperse_charges"], [164, 3, 1, "", "disperse_charges_alt"], [164, 3, 1, "", "euler_characteristic_check"], [164, 3, 1, "", "faces_from_sphere_vertices"], [164, 3, 1, "", "fibonacci_sphere"], [164, 3, 1, "", "hemi_icosahedron"], [164, 3, 1, "", "icosahedron_faces"], [164, 3, 1, "", "icosahedron_vertices"], [164, 3, 1, "", "octahedron_faces"], [164, 3, 1, "", "octahedron_vertices"], [164, 3, 1, "", "unique_edges"], [164, 3, 1, "", "unique_sets"], [164, 3, 1, "", "unit_icosahedron"], [164, 3, 1, "", "unit_octahedron"]], "dipy.core.sphere.HemiSphere": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "faces"], [164, 2, 1, "", "find_closest"], [164, 2, 1, "", "from_sphere"], [164, 2, 1, "", "mirror"], [164, 2, 1, "", "subdivide"]], "dipy.core.sphere.Sphere": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "edges"], [164, 2, 1, "", "faces"], [164, 2, 1, "", "find_closest"], [164, 2, 1, "", "subdivide"], [164, 2, 1, "", "vertices"], [164, 5, 1, "", "x"], [164, 5, 1, "", "y"], [164, 5, 1, "", "z"]], "dipy.core.sphere_stats": [[164, 3, 1, "", "angular_similarity"], [164, 3, 1, "", "compare_orientation_sets"], [164, 3, 1, "", "eigenstats"], [164, 3, 1, "", "random_uniform_on_sphere"]], "dipy.core.subdivide_octahedron": [[164, 3, 1, "", "create_unit_hemisphere"], [164, 3, 1, "", "create_unit_sphere"]], "dipy.core.wavelet": [[164, 3, 1, "", "afb3D"], [164, 3, 1, "", "afb3D_A"], [164, 3, 1, "", "cshift3D"], [164, 3, 1, "", "dwt3D"], [164, 3, 1, "", "idwt3D"], [164, 3, 1, "", "permutationinverse"], [164, 3, 1, "", "sfb3D"], [164, 3, 1, "", "sfb3D_A"]], "dipy.data": [[165, 3, 1, "", "DATA_DIR"], [165, 1, 1, "", "DataError"], [165, 3, 1, "", "default_sphere"], [165, 3, 1, "", "dsi_deconv_voxels"], [165, 3, 1, "", "dsi_voxels"], [165, 0, 0, "-", "fetcher"], [165, 3, 1, "", "get_3shell_gtab"], [165, 3, 1, "", "get_cmap"], [165, 3, 1, "", "get_gtab_taiwan_dsi"], [165, 3, 1, "", "get_isbi2013_2shell_gtab"], [165, 3, 1, "", "get_sim_voxels"], [165, 3, 1, "", "get_skeleton"], [165, 3, 1, "", "get_sphere"], [165, 3, 1, "", "load_sdp_constraints"], [165, 3, 1, "", "loads_compat"], [165, 3, 1, "", "matlab_life_results"], [165, 3, 1, "", "mrtrix_spherical_functions"], [165, 3, 1, "", "small_sphere"], [165, 3, 1, "", "two_cingulum_bundles"]], "dipy.data.DataError": [[165, 2, 1, "", "__init__"]], "dipy.data.fetcher": [[165, 3, 1, "", "check_md5"], [165, 3, 1, "", "copyfileobj_withprogress"], [165, 3, 1, "", "extract_example_tracts"], [165, 3, 1, "", "fetch_DiB_217_lte_pte_ste"], [165, 3, 1, "", "fetch_DiB_70_lte_pte_ste"], [165, 3, 1, "", "fetch_bundle_atlas_hcp842"], [165, 3, 1, "", "fetch_bundle_fa_hcp"], [165, 3, 1, "", "fetch_bundle_warp_dataset"], [165, 3, 1, "", "fetch_bundles_2_subjects"], [165, 3, 1, "", "fetch_cenir_multib"], [165, 3, 1, "", "fetch_cfin_multib"], [165, 3, 1, "", "fetch_cti_rat1"], [165, 3, 1, "", "fetch_data"], [165, 3, 1, "", "fetch_deepn4_test"], [165, 3, 1, "", "fetch_deepn4_weights"], [165, 3, 1, "", "fetch_evac_test"], [165, 3, 1, "", "fetch_evac_weights"], [165, 3, 1, "", "fetch_file_formats"], [165, 3, 1, "", "fetch_fury_surface"], [165, 3, 1, "", "fetch_gold_standard_io"], [165, 3, 1, "", "fetch_hbn"], [165, 3, 1, "", "fetch_hcp"], [165, 3, 1, "", "fetch_isbi2013_2shell"], [165, 3, 1, "", "fetch_ivim"], [165, 3, 1, "", "fetch_mni_template"], [165, 3, 1, "", "fetch_ptt_minimal_dataset"], [165, 3, 1, "", "fetch_qtdMRI_test_retest_2subjects"], [165, 3, 1, "", "fetch_qte_lte_pte"], [165, 3, 1, "", "fetch_resdnn_weights"], [165, 3, 1, "", "fetch_scil_b0"], [165, 3, 1, "", "fetch_sherbrooke_3shell"], [165, 3, 1, "", "fetch_stanford_hardi"], [165, 3, 1, "", "fetch_stanford_labels"], [165, 3, 1, "", "fetch_stanford_pve_maps"], [165, 3, 1, "", "fetch_stanford_t1"], [165, 3, 1, "", "fetch_stanford_tracks"], [165, 3, 1, "", "fetch_syn_data"], [165, 3, 1, "", "fetch_synb0_test"], [165, 3, 1, "", "fetch_synb0_weights"], [165, 3, 1, "", "fetch_taiwan_ntu_dsi"], [165, 3, 1, "", "fetch_target_tractogram_hcp"], [165, 3, 1, "", "fetch_tissue_data"], [165, 3, 1, "", "get_bundle_atlas_hcp842"], [165, 3, 1, "", "get_file_formats"], [165, 3, 1, "", "get_fnames"], [165, 3, 1, "", "get_target_tractogram_hcp"], [165, 3, 1, "", "get_two_hcp842_bundles"], [165, 3, 1, "", "read_DiB_217_lte_pte_ste"], [165, 3, 1, "", "read_DiB_70_lte_pte_ste"], [165, 3, 1, "", "read_bundles_2_subjects"], [165, 3, 1, "", "read_cenir_multib"], [165, 3, 1, "", "read_cfin_dwi"], [165, 3, 1, "", "read_cfin_t1"], [165, 3, 1, "", "read_five_af_bundles"], [165, 3, 1, "", "read_isbi2013_2shell"], [165, 3, 1, "", "read_ivim"], [165, 3, 1, "", "read_mni_template"], [165, 3, 1, "", "read_qtdMRI_test_retest_2subjects"], [165, 3, 1, "", "read_qte_lte_pte"], [165, 3, 1, "", "read_scil_b0"], [165, 3, 1, "", "read_sherbrooke_3shell"], [165, 3, 1, "", "read_siemens_scil_b0"], [165, 3, 1, "", "read_stanford_hardi"], [165, 3, 1, "", "read_stanford_labels"], [165, 3, 1, "", "read_stanford_pve_maps"], [165, 3, 1, "", "read_stanford_t1"], [165, 3, 1, "", "read_syn_data"], [165, 3, 1, "", "read_taiwan_ntu_dsi"], [165, 3, 1, "", "read_tissue_data"], [165, 3, 1, "", "to_bids_description"]], "dipy.denoise": [[166, 0, 0, "-", "adaptive_soft_matching"], [166, 0, 0, "-", "denspeed"], [166, 0, 0, "-", "enhancement_kernel"], [166, 0, 0, "-", "gibbs"], [166, 0, 0, "-", "localpca"], [166, 0, 0, "-", "nlmeans"], [166, 0, 0, "-", "nlmeans_block"], [166, 0, 0, "-", "noise_estimate"], [166, 0, 0, "-", "non_local_means"], [166, 0, 0, "-", "patch2self"], [166, 0, 0, "-", "pca_noise_estimate"], [166, 0, 0, "-", "shift_twist_convolution"]], "dipy.denoise.adaptive_soft_matching": [[166, 3, 1, "", "adaptive_soft_matching"]], "dipy.denoise.denspeed": [[166, 3, 1, "", "add_padding_reflection"], [166, 3, 1, "", "correspond_indices"], [166, 3, 1, "", "determine_num_threads"], [166, 3, 1, "", "nlmeans_3d"], [166, 3, 1, "", "remove_padding"]], "dipy.denoise.enhancement_kernel": [[166, 1, 1, "", "EnhancementKernel"], [166, 1, 1, "", "HemiSphere"], [166, 1, 1, "", "Sphere"], [166, 3, 1, "", "ceil"], [166, 3, 1, "", "disperse_charges"], [166, 3, 1, "", "get_sphere"], [166, 3, 1, "", "gettempdir"]], "dipy.denoise.enhancement_kernel.EnhancementKernel": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "evaluate_kernel"], [166, 2, 1, "", "get_lookup_table"], [166, 2, 1, "", "get_orientations"], [166, 2, 1, "", "get_sphere"]], "dipy.denoise.enhancement_kernel.HemiSphere": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "faces"], [166, 2, 1, "", "find_closest"], [166, 2, 1, "", "from_sphere"], [166, 2, 1, "", "mirror"], [166, 2, 1, "", "subdivide"]], "dipy.denoise.enhancement_kernel.Sphere": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "edges"], [166, 2, 1, "", "faces"], [166, 2, 1, "", "find_closest"], [166, 2, 1, "", "subdivide"], [166, 2, 1, "", "vertices"], [166, 5, 1, "", "x"], [166, 5, 1, "", "y"], [166, 5, 1, "", "z"]], "dipy.denoise.gibbs": [[166, 3, 1, "", "gibbs_removal"]], "dipy.denoise.localpca": [[166, 3, 1, "", "compute_num_samples"], [166, 3, 1, "", "compute_patch_size"], [166, 3, 1, "", "compute_suggested_patch_radius"], [166, 3, 1, "", "create_patch_radius_arr"], [166, 3, 1, "", "dimensionality_problem_message"], [166, 3, 1, "", "genpca"], [166, 3, 1, "", "localpca"], [166, 3, 1, "", "mppca"]], "dipy.denoise.nlmeans": [[166, 3, 1, "", "nlmeans"]], "dipy.denoise.nlmeans_block": [[166, 3, 1, "", "firdn"], [166, 3, 1, "", "nlmeans_block"], [166, 3, 1, "", "upfir"]], "dipy.denoise.noise_estimate": [[166, 3, 1, "", "estimate_sigma"], [166, 3, 1, "", "piesno"]], "dipy.denoise.non_local_means": [[166, 3, 1, "", "non_local_means"]], "dipy.denoise.patch2self": [[166, 3, 1, "", "patch2self"]], "dipy.denoise.pca_noise_estimate": [[166, 3, 1, "", "pca_noise_estimate"], [166, 3, 1, "", "warn"]], "dipy.denoise.shift_twist_convolution": [[166, 3, 1, "", "convolve"], [166, 3, 1, "", "convolve_sf"], [166, 3, 1, "", "determine_num_threads"], [166, 3, 1, "", "sf_to_sh"], [166, 3, 1, "", "sh_to_sf"]], "dipy.direction": [[167, 0, 0, "-", "bootstrap_direction_getter"], [167, 0, 0, "-", "closest_peak_direction_getter"], [167, 0, 0, "-", "peaks"], [167, 0, 0, "-", "pmf"], [167, 0, 0, "-", "probabilistic_direction_getter"], [167, 0, 0, "-", "ptt_direction_getter"]], "dipy.direction.bootstrap_direction_getter": [[167, 1, 1, "", "BootDirectionGetter"], [167, 3, 1, "", "peak_directions"]], "dipy.direction.bootstrap_direction_getter.BootDirectionGetter": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "from_data"], [167, 2, 1, "", "get_pmf"], [167, 2, 1, "", "get_pmf_no_boot"], [167, 2, 1, "", "initial_direction"]], "dipy.direction.closest_peak_direction_getter": [[167, 1, 1, "", "BaseDirectionGetter"], [167, 1, 1, "", "BasePmfDirectionGetter"], [167, 1, 1, "", "ClosestPeakDirectionGetter"], [167, 1, 1, "", "PmfGenDirectionGetter"], [167, 3, 1, "", "peak_directions"]], "dipy.direction.closest_peak_direction_getter.BaseDirectionGetter": [[167, 2, 1, "", "__init__"]], "dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "initial_direction"]], "dipy.direction.closest_peak_direction_getter.ClosestPeakDirectionGetter": [[167, 2, 1, "", "__init__"]], "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "from_pmf"], [167, 2, 1, "", "from_shcoeff"]], "dipy.direction.peaks": [[167, 1, 1, "", "PeaksAndMetrics"], [167, 3, 1, "", "peak_directions"], [167, 3, 1, "", "peak_directions_nl"], [167, 3, 1, "", "peaks_from_model"], [167, 3, 1, "", "reshape_peaks_for_visualization"]], "dipy.direction.peaks.PeaksAndMetrics": [[167, 2, 1, "", "__init__"]], "dipy.direction.pmf": [[167, 1, 1, "", "PmfGen"], [167, 1, 1, "", "SHCoeffPmfGen"], [167, 1, 1, "", "SimplePmfGen"]], "dipy.direction.pmf.PmfGen": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "get_pmf"], [167, 2, 1, "", "get_pmf_value"]], "dipy.direction.pmf.SHCoeffPmfGen": [[167, 2, 1, "", "__init__"]], "dipy.direction.pmf.SimplePmfGen": [[167, 2, 1, "", "__init__"]], "dipy.direction.probabilistic_direction_getter": [[167, 1, 1, "", "DeterministicMaximumDirectionGetter"], [167, 1, 1, "", "ProbabilisticDirectionGetter"], [167, 3, 1, "", "random"]], "dipy.direction.probabilistic_direction_getter.DeterministicMaximumDirectionGetter": [[167, 2, 1, "", "__init__"]], "dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter": [[167, 2, 1, "", "__init__"]], "dipy.direction.ptt_direction_getter": [[167, 1, 1, "", "PTTDirectionGetter"], [167, 3, 1, "", "min_radius_curvature_from_angle"]], "dipy.direction.ptt_direction_getter.PTTDirectionGetter": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "generate_streamline"]], "dipy.io": [[168, 0, 0, "-", "dpy"], [168, 0, 0, "-", "gradients"], [168, 0, 0, "-", "image"], [168, 0, 0, "-", "peaks"], [168, 0, 0, "-", "pickles"], [168, 0, 0, "-", "stateful_tractogram"], [168, 0, 0, "-", "streamline"], [168, 0, 0, "-", "surface"], [168, 0, 0, "-", "utils"], [168, 0, 0, "-", "vtk"]], "dipy.io.dpy": [[168, 1, 1, "", "Dpy"]], "dipy.io.dpy.Dpy": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "close"], [168, 2, 1, "", "read_track"], [168, 2, 1, "", "read_tracks"], [168, 2, 1, "", "read_tracksi"], [168, 2, 1, "", "version"], [168, 2, 1, "", "write_track"], [168, 2, 1, "", "write_tracks"]], "dipy.io.gradients": [[168, 3, 1, "", "read_bvals_bvecs"]], "dipy.io.image": [[168, 3, 1, "", "load_nifti"], [168, 3, 1, "", "load_nifti_data"], [168, 3, 1, "", "save_nifti"], [168, 3, 1, "", "save_qa_metric"]], "dipy.io.peaks": [[168, 3, 1, "", "load_peaks"], [168, 3, 1, "", "peaks_to_niftis"], [168, 3, 1, "", "save_peaks"]], "dipy.io.pickles": [[168, 3, 1, "", "load_pickle"], [168, 3, 1, "", "save_pickle"]], "dipy.io.stateful_tractogram": [[168, 1, 1, "", "Origin"], [168, 1, 1, "", "Space"], [168, 1, 1, "", "StatefulTractogram"], [168, 3, 1, "", "logger"], [168, 3, 1, "", "set_sft_logger_level"]], "dipy.io.stateful_tractogram.Origin": [[168, 4, 1, "", "NIFTI"], [168, 4, 1, "", "TRACKVIS"], [168, 2, 1, "", "__init__"]], "dipy.io.stateful_tractogram.Space": [[168, 4, 1, "", "RASMM"], [168, 4, 1, "", "VOX"], [168, 4, 1, "", "VOXMM"], [168, 2, 1, "", "__init__"]], "dipy.io.stateful_tractogram.StatefulTractogram": [[168, 2, 1, "", "__init__"], [168, 5, 1, "", "affine"], [168, 2, 1, "", "are_compatible"], [168, 2, 1, "", "compute_bounding_box"], [168, 5, 1, "", "data_per_point"], [168, 5, 1, "", "data_per_streamline"], [168, 5, 1, "", "dimensions"], [168, 5, 1, "", "dtype_dict"], [168, 2, 1, "", "from_sft"], [168, 2, 1, "", "get_data_per_point_keys"], [168, 2, 1, "", "get_data_per_streamline_keys"], [168, 2, 1, "", "get_streamlines_copy"], [168, 2, 1, "", "is_bbox_in_vox_valid"], [168, 5, 1, "", "origin"], [168, 2, 1, "", "remove_invalid_streamlines"], [168, 5, 1, "", "space"], [168, 5, 1, "", "space_attributes"], [168, 5, 1, "", "streamlines"], [168, 2, 1, "", "to_center"], [168, 2, 1, "", "to_corner"], [168, 2, 1, "", "to_origin"], [168, 2, 1, "", "to_rasmm"], [168, 2, 1, "", "to_space"], [168, 2, 1, "", "to_vox"], [168, 2, 1, "", "to_voxmm"], [168, 5, 1, "", "voxel_order"], [168, 5, 1, "", "voxel_sizes"]], "dipy.io.streamline": [[168, 3, 1, "", "load_dpy"], [168, 3, 1, "", "load_fib"], [168, 3, 1, "", "load_generator"], [168, 3, 1, "", "load_tck"], [168, 3, 1, "", "load_tractogram"], [168, 3, 1, "", "load_trk"], [168, 3, 1, "", "load_trx"], [168, 3, 1, "", "load_vtk"], [168, 3, 1, "", "load_vtp"], [168, 3, 1, "", "save_dpy"], [168, 3, 1, "", "save_fib"], [168, 3, 1, "", "save_generator"], [168, 3, 1, "", "save_tck"], [168, 3, 1, "", "save_tractogram"], [168, 3, 1, "", "save_trk"], [168, 3, 1, "", "save_trx"], [168, 3, 1, "", "save_vtk"], [168, 3, 1, "", "save_vtp"]], "dipy.io.surface": [[168, 3, 1, "", "load_gifti"], [168, 3, 1, "", "load_pial"]], "dipy.io.utils": [[168, 3, 1, "", "create_nifti_header"], [168, 3, 1, "", "create_tractogram_header"], [168, 3, 1, "", "decfa"], [168, 3, 1, "", "decfa_to_float"], [168, 3, 1, "", "get_reference_info"], [168, 3, 1, "", "is_header_compatible"], [168, 3, 1, "", "is_reference_info_valid"], [168, 3, 1, "", "make5d"], [168, 3, 1, "", "nifti1_symmat"], [168, 3, 1, "", "read_img_arr_or_path"], [168, 3, 1, "", "save_buan_profiles_hdf5"], [168, 3, 1, "", "split_name_with_gz"]], "dipy.io.vtk": [[168, 3, 1, "", "load_polydata"], [168, 3, 1, "", "load_vtk_streamlines"], [168, 3, 1, "", "save_polydata"], [168, 3, 1, "", "save_vtk_streamlines"]], "dipy.nn": [[169, 0, 0, "-", "cnn_1d_denoising"], [169, 0, 0, "-", "deepn4"], [169, 0, 0, "-", "evac"], [169, 0, 0, "-", "histo_resdnn"], [169, 0, 0, "-", "model"], [169, 0, 0, "-", "synb0"], [169, 0, 0, "-", "utils"]], "dipy.nn.cnn_1d_denoising": [[169, 1, 1, "", "Cnn1DDenoiser"]], "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "compile"], [169, 2, 1, "", "evaluate"], [169, 2, 1, "", "fit"], [169, 2, 1, "", "load_weights"], [169, 2, 1, "", "predict"], [169, 2, 1, "", "save_weights"], [169, 2, 1, "", "summary"], [169, 2, 1, "", "train_test_split"]], "dipy.nn.deepn4": [[169, 1, 1, "", "DecoderBlock"], [169, 1, 1, "", "DeepN4"], [169, 1, 1, "", "EncoderBlock"], [169, 3, 1, "", "UNet3D"], [169, 3, 1, "", "logger"]], "dipy.nn.deepn4.DecoderBlock": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "call"]], "dipy.nn.deepn4.DeepN4": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "fetch_default_weights"], [169, 2, 1, "", "load_model_weights"], [169, 2, 1, "", "load_resample"], [169, 2, 1, "", "pad"], [169, 2, 1, "", "predict"]], "dipy.nn.deepn4.EncoderBlock": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "call"]], "dipy.nn.evac": [[169, 1, 1, "", "Block"], [169, 1, 1, "", "ChannelSum"], [169, 1, 1, "", "EVACPlus"], [169, 3, 1, "", "init_model"], [169, 3, 1, "", "logger"], [169, 3, 1, "", "prepare_img"]], "dipy.nn.evac.Block": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "call"]], "dipy.nn.evac.ChannelSum": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "call"]], "dipy.nn.evac.EVACPlus": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "fetch_default_weights"], [169, 2, 1, "", "load_model_weights"], [169, 2, 1, "", "predict"]], "dipy.nn.histo_resdnn": [[169, 1, 1, "", "HistoResDNN"], [169, 3, 1, "", "logger"]], "dipy.nn.histo_resdnn.HistoResDNN": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "fetch_default_weights"], [169, 2, 1, "", "load_model_weights"], [169, 2, 1, "", "predict"]], "dipy.nn.model": [[169, 1, 1, "", "MultipleLayerPercepton"], [169, 1, 1, "", "SingleLayerPerceptron"]], "dipy.nn.model.MultipleLayerPercepton": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "evaluate"], [169, 2, 1, "", "fit"], [169, 2, 1, "", "predict"], [169, 2, 1, "", "summary"]], "dipy.nn.model.SingleLayerPerceptron": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "evaluate"], [169, 2, 1, "", "fit"], [169, 2, 1, "", "predict"], [169, 2, 1, "", "summary"]], "dipy.nn.synb0": [[169, 1, 1, "", "DecoderBlock"], [169, 1, 1, "", "EncoderBlock"], [169, 1, 1, "", "Synb0"], [169, 3, 1, "", "UNet3D"], [169, 3, 1, "", "logger"]], "dipy.nn.synb0.DecoderBlock": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "call"]], "dipy.nn.synb0.EncoderBlock": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "call"]], "dipy.nn.synb0.Synb0": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "fetch_default_weights"], [169, 2, 1, "", "load_model_weights"], [169, 2, 1, "", "predict"]], "dipy.nn.utils": [[169, 3, 1, "", "correct_minor_errors"], [169, 3, 1, "", "normalize"], [169, 3, 1, "", "recover_img"], [169, 3, 1, "", "set_logger_level"], [169, 3, 1, "", "transform_img"], [169, 3, 1, "", "unnormalize"]], "dipy.reconst": [[170, 0, 0, "-", "base"], [170, 0, 0, "-", "cache"], [170, 0, 0, "-", "cross_validation"], [170, 0, 0, "-", "csdeconv"], [170, 0, 0, "-", "cti"], [170, 0, 0, "-", "dki"], [170, 0, 0, "-", "dki_micro"], [170, 0, 0, "-", "dsi"], [170, 0, 0, "-", "dti"], [170, 0, 0, "-", "eudx_direction_getter"], [170, 0, 0, "-", "forecast"], [170, 0, 0, "-", "fwdti"], [170, 0, 0, "-", "gqi"], [170, 0, 0, "-", "ivim"], [170, 0, 0, "-", "mapmri"], [170, 0, 0, "-", "mcsd"], [170, 0, 0, "-", "msdki"], [170, 0, 0, "-", "multi_voxel"], [170, 0, 0, "-", "odf"], [170, 0, 0, "-", "qtdmri"], [170, 0, 0, "-", "qti"], [170, 0, 0, "-", "quick_squash"], [170, 0, 0, "-", "recspeed"], [170, 0, 0, "-", "rumba"], [170, 0, 0, "-", "sfm"], [170, 0, 0, "-", "shm"], [170, 0, 0, "-", "shore"], [170, 0, 0, "-", "utils"], [170, 0, 0, "-", "vec_val_sum"]], "dipy.reconst.base": [[170, 1, 1, "", "ReconstFit"], [170, 1, 1, "", "ReconstModel"]], "dipy.reconst.base.ReconstFit": [[170, 2, 1, "", "__init__"]], "dipy.reconst.base.ReconstModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"]], "dipy.reconst.cache": [[170, 1, 1, "", "Cache"]], "dipy.reconst.cache.Cache": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "cache_clear"], [170, 2, 1, "", "cache_get"], [170, 2, 1, "", "cache_set"]], "dipy.reconst.cross_validation": [[170, 3, 1, "", "coeff_of_determination"], [170, 3, 1, "", "kfold_xval"]], "dipy.reconst.csdeconv": [[170, 1, 1, "", "AxSymShResponse"], [170, 1, 1, "", "ConstrainedSDTModel"], [170, 1, 1, "", "ConstrainedSphericalDeconvModel"], [170, 3, 1, "", "auto_response"], [170, 3, 1, "", "auto_response_ssst"], [170, 3, 1, "", "csdeconv"], [170, 3, 1, "", "estimate_response"], [170, 3, 1, "", "fa_trace_to_lambdas"], [170, 3, 1, "", "forward_sdt_deconv_mat"], [170, 3, 1, "", "mask_for_response_ssst"], [170, 3, 1, "", "odf_deconv"], [170, 3, 1, "", "odf_sh_to_sharp"], [170, 3, 1, "", "recursive_response"], [170, 3, 1, "", "response_from_mask"], [170, 3, 1, "", "response_from_mask_ssst"]], "dipy.reconst.csdeconv.AxSymShResponse": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "basis"], [170, 2, 1, "", "on_sphere"]], "dipy.reconst.csdeconv.ConstrainedSDTModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"]], "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"], [170, 2, 1, "", "predict"]], "dipy.reconst.cti": [[170, 1, 1, "", "CorrelationTensorFit"], [170, 1, 1, "", "CorrelationTensorModel"], [170, 3, 1, "", "cti_prediction"], [170, 3, 1, "", "from_qte_to_cti"], [170, 3, 1, "", "ls_fit_cti"], [170, 3, 1, "", "multi_gaussian_k_from_c"], [170, 3, 1, "", "params_to_cti_params"], [170, 3, 1, "", "split_cti_params"]], "dipy.reconst.cti.CorrelationTensorFit": [[170, 5, 1, "", "K_aniso"], [170, 5, 1, "", "K_iso"], [170, 5, 1, "", "K_micro"], [170, 2, 1, "", "K_total"], [170, 2, 1, "", "__init__"], [170, 5, 1, "", "ct"], [170, 2, 1, "", "predict"]], "dipy.reconst.cti.CorrelationTensorModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"], [170, 2, 1, "", "predict"]], "dipy.reconst.dki": [[170, 1, 1, "", "DiffusionKurtosisFit"], [170, 1, 1, "", "DiffusionKurtosisModel"], [170, 3, 1, "", "Wcons"], [170, 3, 1, "", "Wrotate"], [170, 3, 1, "", "Wrotate_element"], [170, 3, 1, "", "apparent_kurtosis_coef"], [170, 3, 1, "", "axial_kurtosis"], [170, 3, 1, "", "carlson_rd"], [170, 3, 1, "", "carlson_rf"], [170, 3, 1, "", "cls_fit_dki"], [170, 3, 1, "", "directional_diffusion"], [170, 3, 1, "", "directional_diffusion_variance"], [170, 3, 1, "", "directional_kurtosis"], [170, 3, 1, "", "dki_prediction"], [170, 3, 1, "", "kurtosis_fractional_anisotropy"], [170, 3, 1, "", "kurtosis_maximum"], [170, 3, 1, "", "ls_fit_dki"], [170, 3, 1, "", "mean_kurtosis"], [170, 3, 1, "", "mean_kurtosis_tensor"], [170, 3, 1, "", "params_to_dki_params"], [170, 3, 1, "", "radial_kurtosis"], [170, 3, 1, "", "split_dki_param"]], "dipy.reconst.dki.DiffusionKurtosisFit": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "ak"], [170, 2, 1, "", "akc"], [170, 5, 1, "", "kfa"], [170, 2, 1, "", "kmax"], [170, 5, 1, "", "kt"], [170, 2, 1, "", "mk"], [170, 2, 1, "", "mkt"], [170, 2, 1, "", "predict"], [170, 2, 1, "", "rk"]], "dipy.reconst.dki.DiffusionKurtosisModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"], [170, 2, 1, "", "multi_fit"], [170, 2, 1, "", "predict"]], "dipy.reconst.dki_micro": [[170, 1, 1, "", "KurtosisMicrostructuralFit"], [170, 1, 1, "", "KurtosisMicrostructureModel"], [170, 3, 1, "", "axonal_water_fraction"], [170, 3, 1, "", "diffusion_components"], [170, 3, 1, "", "dkimicro_prediction"], [170, 3, 1, "", "tortuosity"]], "dipy.reconst.dki_micro.KurtosisMicrostructuralFit": [[170, 2, 1, "", "__init__"], [170, 5, 1, "", "awf"], [170, 5, 1, "", "axonal_diffusivity"], [170, 5, 1, "", "hindered_ad"], [170, 5, 1, "", "hindered_evals"], [170, 5, 1, "", "hindered_rd"], [170, 2, 1, "", "predict"], [170, 5, 1, "", "restricted_evals"], [170, 5, 1, "", "tortuosity"]], "dipy.reconst.dki_micro.KurtosisMicrostructureModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"], [170, 2, 1, "", "predict"]], "dipy.reconst.dsi": [[170, 1, 1, "", "DiffusionSpectrumDeconvFit"], [170, 1, 1, "", "DiffusionSpectrumDeconvModel"], [170, 1, 1, "", "DiffusionSpectrumFit"], [170, 1, 1, "", "DiffusionSpectrumModel"], [170, 3, 1, "", "LR_deconv"], [170, 3, 1, "", "create_qspace"], [170, 3, 1, "", "create_qtable"], [170, 3, 1, "", "gen_PSF"], [170, 3, 1, "", "half_to_full_qspace"], [170, 3, 1, "", "hanning_filter"], [170, 3, 1, "", "pdf_interp_coords"], [170, 3, 1, "", "pdf_odf"], [170, 3, 1, "", "project_hemisph_bvecs"], [170, 3, 1, "", "threshold_propagator"]], "dipy.reconst.dsi.DiffusionSpectrumDeconvFit": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "pdf"]], "dipy.reconst.dsi.DiffusionSpectrumDeconvModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"]], "dipy.reconst.dsi.DiffusionSpectrumFit": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "msd_discrete"], [170, 2, 1, "", "odf"], [170, 2, 1, "", "pdf"], [170, 2, 1, "", "rtop_pdf"], [170, 2, 1, "", "rtop_signal"]], "dipy.reconst.dsi.DiffusionSpectrumModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"]], "dipy.reconst.dti": [[170, 1, 1, "", "TensorFit"], [170, 1, 1, "", "TensorModel"], [170, 3, 1, "", "_lt_cols"], [170, 3, 1, "", "_lt_indices"], [170, 3, 1, "", "_lt_rows"], [170, 3, 1, "", "apparent_diffusion_coef"], [170, 3, 1, "", "axial_diffusivity"], [170, 3, 1, "", "color_fa"], [170, 3, 1, "", "decompose_tensor"], [170, 3, 1, "", "design_matrix"], [170, 3, 1, "", "determinant"], [170, 3, 1, "", "deviatoric"], [170, 3, 1, "", "eig_from_lo_tri"], [170, 3, 1, "", "fractional_anisotropy"], [170, 3, 1, "", "from_lower_triangular"], [170, 3, 1, "", "geodesic_anisotropy"], [170, 3, 1, "", "isotropic"], [170, 3, 1, "", "iter_fit_tensor"], [170, 3, 1, "", "linearity"], [170, 3, 1, "", "lower_triangular"], [170, 3, 1, "", "mean_diffusivity"], [170, 3, 1, "", "mode"], [170, 3, 1, "", "nlls_fit_tensor"], [170, 3, 1, "", "norm"], [170, 3, 1, "", "ols_fit_tensor"], [170, 3, 1, "", "planarity"], [170, 3, 1, "", "quantize_evecs"], [170, 3, 1, "", "radial_diffusivity"], [170, 3, 1, "", "restore_fit_tensor"], [170, 3, 1, "", "sphericity"], [170, 3, 1, "", "tensor_prediction"], [170, 3, 1, "", "trace"], [170, 3, 1, "", "wls_fit_tensor"]], "dipy.reconst.dti.TensorFit": [[170, 5, 1, "", "S0_hat"], [170, 2, 1, "", "__init__"], [170, 2, 1, "", "ad"], [170, 2, 1, "", "adc"], [170, 2, 1, "", "color_fa"], [170, 5, 1, "", "directions"], [170, 5, 1, "", "evals"], [170, 5, 1, "", "evecs"], [170, 2, 1, "", "fa"], [170, 2, 1, "", "ga"], [170, 2, 1, "", "linearity"], [170, 2, 1, "", "lower_triangular"], [170, 2, 1, "", "md"], [170, 2, 1, "", "mode"], [170, 2, 1, "", "odf"], [170, 2, 1, "", "planarity"], [170, 2, 1, "", "predict"], [170, 5, 1, "", "quadratic_form"], [170, 2, 1, "", "rd"], [170, 5, 1, "", "shape"], [170, 2, 1, "", "sphericity"], [170, 2, 1, "", "trace"]], "dipy.reconst.dti.TensorModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"], [170, 2, 1, "", "predict"]], "dipy.reconst.eudx_direction_getter": [[170, 1, 1, "", "EuDXDirectionGetter"]], "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter": [[170, 2, 1, "", "__init__"], [170, 4, 1, "", "ang_thr"], [170, 2, 1, "", "initial_direction"], [170, 4, 1, "", "qa_thr"], [170, 4, 1, "", "total_weight"]], "dipy.reconst.forecast": [[170, 1, 1, "", "ForecastFit"], [170, 1, 1, "", "ForecastModel"], [170, 3, 1, "", "find_signal_means"], [170, 3, 1, "", "forecast_error_func"], [170, 3, 1, "", "forecast_matrix"], [170, 3, 1, "", "lb_forecast"], [170, 3, 1, "", "psi_l"], [170, 3, 1, "", "rho_matrix"]], "dipy.reconst.forecast.ForecastFit": [[170, 2, 1, "", "__init__"], [170, 5, 1, "", "dpar"], [170, 5, 1, "", "dperp"], [170, 2, 1, "", "fractional_anisotropy"], [170, 2, 1, "", "mean_diffusivity"], [170, 2, 1, "", "odf"], [170, 2, 1, "", "predict"], [170, 5, 1, "", "sh_coeff"]], "dipy.reconst.forecast.ForecastModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"]], "dipy.reconst.fwdti": [[170, 1, 1, "", "FreeWaterTensorFit"], [170, 1, 1, "", "FreeWaterTensorModel"], [170, 3, 1, "", "cholesky_to_lower_triangular"], [170, 3, 1, "", "fwdti_prediction"], [170, 3, 1, "", "lower_triangular_to_cholesky"], [170, 3, 1, "", "nls_fit_tensor"], [170, 3, 1, "", "nls_iter"], [170, 3, 1, "", "wls_fit_tensor"], [170, 3, 1, "", "wls_iter"]], "dipy.reconst.fwdti.FreeWaterTensorFit": [[170, 2, 1, "", "__init__"], [170, 5, 1, "", "f"], [170, 2, 1, "", "predict"]], "dipy.reconst.fwdti.FreeWaterTensorModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"], [170, 2, 1, "", "predict"]], "dipy.reconst.gqi": [[170, 1, 1, "", "GeneralizedQSamplingFit"], [170, 1, 1, "", "GeneralizedQSamplingModel"], [170, 3, 1, "", "equatorial_maximum"], [170, 3, 1, "", "equatorial_zone_vertices"], [170, 3, 1, "", "normalize_qa"], [170, 3, 1, "", "npa"], [170, 3, 1, "", "odf_sum"], [170, 3, 1, "", "patch_maximum"], [170, 3, 1, "", "patch_sum"], [170, 3, 1, "", "patch_vertices"], [170, 3, 1, "", "polar_zone_vertices"], [170, 3, 1, "", "squared_radial_component"], [170, 3, 1, "", "triple_odf_maxima"], [170, 3, 1, "", "upper_hemi_map"]], "dipy.reconst.gqi.GeneralizedQSamplingFit": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "odf"]], "dipy.reconst.gqi.GeneralizedQSamplingModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"]], "dipy.reconst.ivim": [[170, 1, 1, "", "IvimFit"], [170, 1, 1, "", "IvimModelTRR"], [170, 1, 1, "", "IvimModelVP"], [170, 3, 1, "", "f_D_star_error"], [170, 3, 1, "", "f_D_star_prediction"], [170, 3, 1, "", "ivim_model_selector"], [170, 3, 1, "", "ivim_prediction"]], "dipy.reconst.ivim.IvimFit": [[170, 5, 1, "", "D"], [170, 5, 1, "", "D_star"], [170, 5, 1, "", "S0_predicted"], [170, 2, 1, "", "__init__"], [170, 5, 1, "", "perfusion_fraction"], [170, 2, 1, "", "predict"], [170, 5, 1, "", "shape"]], "dipy.reconst.ivim.IvimModelTRR": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "estimate_f_D_star"], [170, 2, 1, "", "estimate_linear_fit"], [170, 2, 1, "", "fit"], [170, 2, 1, "", "predict"]], "dipy.reconst.ivim.IvimModelVP": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "cvx_fit"], [170, 2, 1, "", "fit"], [170, 2, 1, "", "ivim_mix_cost_one"], [170, 2, 1, "", "nlls_cost"], [170, 2, 1, "", "phi"], [170, 2, 1, "", "stoc_search_cost"], [170, 2, 1, "", "x_and_f_to_x_f"], [170, 2, 1, "", "x_f_to_x_and_f"]], "dipy.reconst.mapmri": [[170, 1, 1, "", "MapmriFit"], [170, 1, 1, "", "MapmriModel"], [170, 3, 1, "", "b_mat"], [170, 3, 1, "", "b_mat_isotropic"], [170, 3, 1, "", "binomialfloat"], [170, 3, 1, "", "create_rspace"], [170, 3, 1, "", "delta"], [170, 3, 1, "", "gcv_cost_function"], [170, 3, 1, "", "generalized_crossvalidation"], [170, 3, 1, "", "generalized_crossvalidation_array"], [170, 3, 1, "", "isotropic_scale_factor"], [170, 3, 1, "", "map_laplace_s"], [170, 3, 1, "", "map_laplace_t"], [170, 3, 1, "", "map_laplace_u"], [170, 3, 1, "", "mapmri_STU_reg_matrices"], [170, 3, 1, "", "mapmri_index_matrix"], [170, 3, 1, "", "mapmri_isotropic_K_mu_dependent"], [170, 3, 1, "", "mapmri_isotropic_K_mu_independent"], [170, 3, 1, "", "mapmri_isotropic_M_mu_dependent"], [170, 3, 1, "", "mapmri_isotropic_M_mu_independent"], [170, 3, 1, "", "mapmri_isotropic_index_matrix"], [170, 3, 1, "", "mapmri_isotropic_laplacian_reg_matrix"], [170, 3, 1, "", "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix"], [170, 3, 1, "", "mapmri_isotropic_odf_matrix"], [170, 3, 1, "", "mapmri_isotropic_odf_sh_matrix"], [170, 3, 1, "", "mapmri_isotropic_phi_matrix"], [170, 3, 1, "", "mapmri_isotropic_psi_matrix"], [170, 3, 1, "", "mapmri_isotropic_radial_pdf_basis"], [170, 3, 1, "", "mapmri_isotropic_radial_signal_basis"], [170, 3, 1, "", "mapmri_laplacian_reg_matrix"], [170, 3, 1, "", "mapmri_odf_matrix"], [170, 3, 1, "", "mapmri_phi_1d"], [170, 3, 1, "", "mapmri_phi_matrix"], [170, 3, 1, "", "mapmri_psi_1d"], [170, 3, 1, "", "mapmri_psi_matrix"]], "dipy.reconst.mapmri.MapmriFit": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fitted_signal"], [170, 5, 1, "", "mapmri_R"], [170, 5, 1, "", "mapmri_coeff"], [170, 5, 1, "", "mapmri_mu"], [170, 2, 1, "", "msd"], [170, 2, 1, "", "ng"], [170, 2, 1, "", "ng_parallel"], [170, 2, 1, "", "ng_perpendicular"], [170, 2, 1, "", "norm_of_laplacian_signal"], [170, 2, 1, "", "odf"], [170, 2, 1, "", "odf_sh"], [170, 2, 1, "", "pdf"], [170, 2, 1, "", "predict"], [170, 2, 1, "", "qiv"], [170, 2, 1, "", "rtap"], [170, 2, 1, "", "rtop"], [170, 2, 1, "", "rtpp"]], "dipy.reconst.mapmri.MapmriModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"]], "dipy.reconst.mcsd": [[170, 1, 1, "", "MSDeconvFit"], [170, 1, 1, "", "MultiShellDeconvModel"], [170, 1, 1, "", "MultiShellResponse"], [170, 1, 1, "", "QpFitter"], [170, 3, 1, "", "auto_response_msmt"], [170, 3, 1, "", "mask_for_response_msmt"], [170, 3, 1, "", "multi_shell_fiber_response"], [170, 3, 1, "", "multi_tissue_basis"], [170, 3, 1, "", "response_from_mask_msmt"], [170, 3, 1, "", "solve_qp"]], "dipy.reconst.mcsd.MSDeconvFit": [[170, 2, 1, "", "__init__"], [170, 5, 1, "", "all_shm_coeff"], [170, 5, 1, "", "shm_coeff"], [170, 5, 1, "", "volume_fractions"]], "dipy.reconst.mcsd.MultiShellDeconvModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"], [170, 2, 1, "", "predict"]], "dipy.reconst.mcsd.MultiShellResponse": [[170, 2, 1, "", "__init__"], [170, 5, 1, "", "iso"]], "dipy.reconst.mcsd.QpFitter": [[170, 2, 1, "", "__init__"]], "dipy.reconst.msdki": [[170, 1, 1, "", "MeanDiffusionKurtosisFit"], [170, 1, 1, "", "MeanDiffusionKurtosisModel"], [170, 3, 1, "", "awf_from_msk"], [170, 3, 1, "", "design_matrix"], [170, 3, 1, "", "mean_signal_bvalue"], [170, 3, 1, "", "msdki_prediction"], [170, 3, 1, "", "msk_from_awf"], [170, 3, 1, "", "wls_fit_msdki"]], "dipy.reconst.msdki.MeanDiffusionKurtosisFit": [[170, 5, 1, "", "S0_hat"], [170, 2, 1, "", "__init__"], [170, 2, 1, "", "msd"], [170, 2, 1, "", "msk"], [170, 2, 1, "", "predict"], [170, 2, 1, "", "smt2di"], [170, 2, 1, "", "smt2f"], [170, 2, 1, "", "smt2uFA"]], "dipy.reconst.msdki.MeanDiffusionKurtosisModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"], [170, 2, 1, "", "predict"]], "dipy.reconst.multi_voxel": [[170, 1, 1, "", "CallableArray"], [170, 1, 1, "", "MultiVoxelFit"], [170, 3, 1, "", "multi_voxel_fit"]], "dipy.reconst.multi_voxel.CallableArray": [[170, 2, 1, "", "__init__"]], "dipy.reconst.multi_voxel.MultiVoxelFit": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "predict"], [170, 5, 1, "", "shape"]], "dipy.reconst.odf": [[170, 1, 1, "", "OdfFit"], [170, 1, 1, "", "OdfModel"], [170, 3, 1, "", "gfa"], [170, 3, 1, "", "minmax_normalize"]], "dipy.reconst.odf.OdfFit": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "odf"]], "dipy.reconst.odf.OdfModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"]], "dipy.reconst.qtdmri": [[170, 3, 1, "", "GCV_cost_function"], [170, 3, 1, "", "H"], [170, 1, 1, "", "QtdmriFit"], [170, 1, 1, "", "QtdmriModel"], [170, 3, 1, "", "angular_basis_EAP_opt"], [170, 3, 1, "", "angular_basis_opt"], [170, 3, 1, "", "create_rt_space_grid"], [170, 3, 1, "", "design_matrix_spatial"], [170, 3, 1, "", "elastic_crossvalidation"], [170, 3, 1, "", "generalized_crossvalidation"], [170, 3, 1, "", "l1_crossvalidation"], [170, 3, 1, "", "part1_reg_matrix_tau"], [170, 3, 1, "", "part23_iso_reg_matrix_q"], [170, 3, 1, "", "part23_reg_matrix_q"], [170, 3, 1, "", "part23_reg_matrix_tau"], [170, 3, 1, "", "part4_iso_reg_matrix_q"], [170, 3, 1, "", "part4_reg_matrix_q"], [170, 3, 1, "", "part4_reg_matrix_tau"], [170, 3, 1, "", "qtdmri_anisotropic_scaling"], [170, 3, 1, "", "qtdmri_eap_matrix"], [170, 3, 1, "", "qtdmri_eap_matrix_"], [170, 3, 1, "", "qtdmri_index_matrix"], [170, 3, 1, "", "qtdmri_isotropic_eap_matrix"], [170, 3, 1, "", "qtdmri_isotropic_eap_matrix_"], [170, 3, 1, "", "qtdmri_isotropic_index_matrix"], [170, 3, 1, "", "qtdmri_isotropic_laplacian_reg_matrix"], [170, 3, 1, "", "qtdmri_isotropic_scaling"], [170, 3, 1, "", "qtdmri_isotropic_signal_matrix"], [170, 3, 1, "", "qtdmri_isotropic_signal_matrix_"], [170, 3, 1, "", "qtdmri_isotropic_to_mapmri_matrix"], [170, 3, 1, "", "qtdmri_laplacian_reg_matrix"], [170, 3, 1, "", "qtdmri_mapmri_isotropic_normalization"], [170, 3, 1, "", "qtdmri_mapmri_normalization"], [170, 3, 1, "", "qtdmri_number_of_coefficients"], [170, 3, 1, "", "qtdmri_signal_matrix"], [170, 3, 1, "", "qtdmri_signal_matrix_"], [170, 3, 1, "", "qtdmri_temporal_normalization"], [170, 3, 1, "", "qtdmri_to_mapmri_matrix"], [170, 3, 1, "", "radial_basis_EAP_opt"], [170, 3, 1, "", "radial_basis_opt"], [170, 3, 1, "", "temporal_basis"], [170, 3, 1, "", "visualise_gradient_table_G_Delta_rainbow"]], "dipy.reconst.qtdmri.QtdmriFit": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fitted_signal"], [170, 2, 1, "", "msd"], [170, 2, 1, "", "norm_of_laplacian_signal"], [170, 2, 1, "", "odf"], [170, 2, 1, "", "odf_sh"], [170, 2, 1, "", "pdf"], [170, 2, 1, "", "predict"], [170, 2, 1, "", "qiv"], [170, 2, 1, "", "qtdmri_to_mapmri_coef"], [170, 2, 1, "", "rtap"], [170, 2, 1, "", "rtop"], [170, 2, 1, "", "rtpp"], [170, 2, 1, "", "sparsity_abs"], [170, 2, 1, "", "sparsity_density"]], "dipy.reconst.qtdmri.QtdmriModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"]], "dipy.reconst.qti": [[170, 1, 1, "", "QtiFit"], [170, 1, 1, "", "QtiModel"], [170, 3, 1, "", "cvxpy_1x21_to_6x6"], [170, 3, 1, "", "cvxpy_1x6_to_3x3"], [170, 3, 1, "", "design_matrix"], [170, 3, 1, "", "dtd_covariance"], [170, 3, 1, "", "from_21x1_to_6x6"], [170, 3, 1, "", "from_3x3_to_6x1"], [170, 3, 1, "", "from_6x1_to_3x3"], [170, 3, 1, "", "from_6x6_to_21x1"], [170, 3, 1, "", "qti_signal"]], "dipy.reconst.qti.QtiFit": [[170, 2, 1, "", "S0_hat"], [170, 2, 1, "", "__init__"], [170, 2, 1, "", "c_c"], [170, 2, 1, "", "c_m"], [170, 2, 1, "", "c_md"], [170, 2, 1, "", "c_mu"], [170, 2, 1, "", "d_sq"], [170, 2, 1, "", "fa"], [170, 2, 1, "", "k_bulk"], [170, 2, 1, "", "k_mu"], [170, 2, 1, "", "k_shear"], [170, 2, 1, "", "md"], [170, 2, 1, "", "mean_d_sq"], [170, 2, 1, "", "mk"], [170, 2, 1, "", "predict"], [170, 2, 1, "", "ufa"], [170, 2, 1, "", "v_iso"], [170, 2, 1, "", "v_md"], [170, 2, 1, "", "v_shear"]], "dipy.reconst.qti.QtiModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"], [170, 2, 1, "", "predict"]], "dipy.reconst.quick_squash": [[170, 3, 1, "", "quick_squash"], [170, 3, 1, "", "reduce"]], "dipy.reconst.recspeed": [[170, 3, 1, "", "adj_to_countarrs"], [170, 3, 1, "", "argmax_from_adj"], [170, 3, 1, "", "argmax_from_countarrs"], [170, 3, 1, "", "le_to_odf"], [170, 3, 1, "", "local_maxima"], [170, 3, 1, "", "proc_reco_args"], [170, 3, 1, "", "remove_similar_vertices"], [170, 3, 1, "", "search_descending"], [170, 3, 1, "", "sum_on_blocks_1d"]], "dipy.reconst.rumba": [[170, 1, 1, "", "RumbaFit"], [170, 1, 1, "", "RumbaSDModel"], [170, 3, 1, "", "generate_kernel"], [170, 3, 1, "", "logger"], [170, 3, 1, "", "mbessel_ratio"], [170, 3, 1, "", "rumba_deconv"], [170, 3, 1, "", "rumba_deconv_global"]], "dipy.reconst.rumba.RumbaFit": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "combined_odf_iso"], [170, 2, 1, "", "f_csf"], [170, 2, 1, "", "f_gm"], [170, 2, 1, "", "f_iso"], [170, 2, 1, "", "f_wm"], [170, 2, 1, "", "odf"], [170, 2, 1, "", "predict"]], "dipy.reconst.rumba.RumbaSDModel": [[170, 2, 1, "", "__init__"]], "dipy.reconst.sfm": [[170, 1, 1, "", "ExponentialIsotropicFit"], [170, 1, 1, "", "ExponentialIsotropicModel"], [170, 1, 1, "", "IsotropicFit"], [170, 1, 1, "", "IsotropicModel"], [170, 1, 1, "", "SparseFascicleFit"], [170, 1, 1, "", "SparseFascicleModel"], [170, 3, 1, "", "sfm_design_matrix"]], "dipy.reconst.sfm.ExponentialIsotropicFit": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "predict"]], "dipy.reconst.sfm.ExponentialIsotropicModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"]], "dipy.reconst.sfm.IsotropicFit": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "predict"]], "dipy.reconst.sfm.IsotropicModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"]], "dipy.reconst.sfm.SparseFascicleFit": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "odf"], [170, 2, 1, "", "predict"]], "dipy.reconst.sfm.SparseFascicleModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "design_matrix"], [170, 2, 1, "", "fit"]], "dipy.reconst.shm": [[170, 1, 1, "", "CsaOdfModel"], [170, 1, 1, "", "OpdtModel"], [170, 1, 1, "", "QballBaseModel"], [170, 1, 1, "", "QballModel"], [170, 1, 1, "", "ResidualBootstrapWrapper"], [170, 1, 1, "", "SphHarmFit"], [170, 1, 1, "", "SphHarmModel"], [170, 3, 1, "", "anisotropic_power"], [170, 3, 1, "", "bootstrap_data_array"], [170, 3, 1, "", "bootstrap_data_voxel"], [170, 3, 1, "", "calculate_max_order"], [170, 3, 1, "", "convert_sh_descoteaux_tournier"], [170, 3, 1, "", "convert_sh_from_legacy"], [170, 3, 1, "", "convert_sh_to_full_basis"], [170, 3, 1, "", "convert_sh_to_legacy"], [170, 3, 1, "", "forward_sdeconv_mat"], [170, 3, 1, "", "gen_dirac"], [170, 3, 1, "", "hat"], [170, 3, 1, "", "lazy_index"], [170, 3, 1, "", "lcr_matrix"], [170, 3, 1, "", "normalize_data"], [170, 3, 1, "", "order_from_ncoef"], [170, 3, 1, "", "real_sh_descoteaux"], [170, 3, 1, "", "real_sh_descoteaux_from_index"], [170, 3, 1, "", "real_sh_tournier"], [170, 3, 1, "", "real_sh_tournier_from_index"], [170, 3, 1, "", "real_sph_harm"], [170, 3, 1, "", "real_sym_sh_basis"], [170, 3, 1, "", "real_sym_sh_mrtrix"], [170, 3, 1, "", "sf_to_sh"], [170, 3, 1, "", "sh_to_rh"], [170, 3, 1, "", "sh_to_sf"], [170, 3, 1, "", "sh_to_sf_matrix"], [170, 3, 1, "", "smooth_pinv"], [170, 3, 1, "", "sph_harm_ind_list"], [170, 3, 1, "", "spherical_harmonics"]], "dipy.reconst.shm.CsaOdfModel": [[170, 2, 1, "", "__init__"], [170, 4, 1, "", "max"], [170, 4, 1, "", "min"]], "dipy.reconst.shm.OpdtModel": [[170, 2, 1, "", "__init__"]], "dipy.reconst.shm.QballBaseModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"]], "dipy.reconst.shm.QballModel": [[170, 2, 1, "", "__init__"]], "dipy.reconst.shm.ResidualBootstrapWrapper": [[170, 2, 1, "", "__init__"]], "dipy.reconst.shm.SphHarmFit": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "gfa"], [170, 2, 1, "", "odf"], [170, 2, 1, "", "predict"], [170, 5, 1, "", "shape"], [170, 5, 1, "", "shm_coeff"]], "dipy.reconst.shm.SphHarmModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "sampling_matrix"]], "dipy.reconst.shore": [[170, 1, 1, "", "ShoreFit"], [170, 1, 1, "", "ShoreModel"], [170, 3, 1, "", "create_rspace"], [170, 3, 1, "", "l_shore"], [170, 3, 1, "", "n_shore"], [170, 3, 1, "", "shore_indices"], [170, 3, 1, "", "shore_matrix"], [170, 3, 1, "", "shore_matrix_odf"], [170, 3, 1, "", "shore_matrix_pdf"], [170, 3, 1, "", "shore_order"]], "dipy.reconst.shore.ShoreFit": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fitted_signal"], [170, 2, 1, "", "msd"], [170, 2, 1, "", "odf"], [170, 2, 1, "", "odf_sh"], [170, 2, 1, "", "pdf"], [170, 2, 1, "", "pdf_grid"], [170, 2, 1, "", "rtop_pdf"], [170, 2, 1, "", "rtop_signal"], [170, 5, 1, "", "shore_coeff"]], "dipy.reconst.shore.ShoreModel": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"]], "dipy.reconst.utils": [[170, 3, 1, "", "convert_tensors"], [170, 3, 1, "", "cti_design_matrix"], [170, 3, 1, "", "dki_design_matrix"]], "dipy.reconst.vec_val_sum": [[170, 3, 1, "", "vec_val_vect"]], "dipy.segment": [[171, 0, 0, "-", "bundles"], [171, 0, 0, "-", "clustering"], [171, 0, 0, "-", "clustering_algorithms"], [171, 0, 0, "-", "clusteringspeed"], [171, 0, 0, "-", "cythonutils"], [171, 0, 0, "-", "featurespeed"], [171, 0, 0, "-", "fss"], [171, 0, 0, "-", "mask"], [171, 0, 0, "-", "metric"], [171, 0, 0, "-", "metricspeed"], [171, 0, 0, "-", "mrf"], [171, 0, 0, "-", "threshold"], [171, 0, 0, "-", "tissue"]], "dipy.segment.bundles": [[171, 1, 1, "", "RecoBundles"], [171, 3, 1, "", "ba_analysis"], [171, 3, 1, "", "bundle_adjacency"], [171, 3, 1, "", "bundle_shape_similarity"], [171, 3, 1, "", "check_range"], [171, 3, 1, "", "cluster_bundle"], [171, 3, 1, "", "logger"]], "dipy.segment.bundles.RecoBundles": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "evaluate_results"], [171, 2, 1, "", "recognize"], [171, 2, 1, "", "refine"]], "dipy.segment.clustering": [[171, 1, 1, "", "Cluster"], [171, 1, 1, "", "ClusterCentroid"], [171, 1, 1, "", "ClusterMap"], [171, 1, 1, "", "ClusterMapCentroid"], [171, 1, 1, "", "Clustering"], [171, 1, 1, "", "Identity"], [171, 1, 1, "", "QuickBundles"], [171, 1, 1, "", "QuickBundlesX"], [171, 1, 1, "", "TreeCluster"], [171, 1, 1, "", "TreeClusterMap"], [171, 3, 1, "", "logger"], [171, 3, 1, "", "qbx_and_merge"]], "dipy.segment.clustering.Cluster": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "assign"]], "dipy.segment.clustering.ClusterCentroid": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "assign"], [171, 2, 1, "", "update"]], "dipy.segment.clustering.ClusterMap": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "add_cluster"], [171, 2, 1, "", "clear"], [171, 5, 1, "", "clusters"], [171, 2, 1, "", "clusters_sizes"], [171, 2, 1, "", "get_large_clusters"], [171, 2, 1, "", "get_small_clusters"], [171, 5, 1, "", "refdata"], [171, 2, 1, "", "remove_cluster"], [171, 2, 1, "", "size"]], "dipy.segment.clustering.ClusterMapCentroid": [[171, 2, 1, "", "__init__"], [171, 5, 1, "", "centroids"]], "dipy.segment.clustering.Clustering": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "cluster"]], "dipy.segment.clustering.Identity": [[171, 2, 1, "", "__init__"]], "dipy.segment.clustering.QuickBundles": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "cluster"]], "dipy.segment.clustering.QuickBundlesX": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "cluster"]], "dipy.segment.clustering.TreeCluster": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "add"], [171, 5, 1, "", "is_leaf"], [171, 2, 1, "", "return_indices"]], "dipy.segment.clustering.TreeClusterMap": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "get_clusters"], [171, 2, 1, "", "iter_preorder"], [171, 5, 1, "", "refdata"], [171, 2, 1, "", "traverse_postorder"]], "dipy.segment.clustering_algorithms": [[171, 1, 1, "", "ClusterCentroid"], [171, 1, 1, "", "ClusterMapCentroid"], [171, 4, 1, "", "DTYPE"], [171, 3, 1, "", "clusters_centroid2clustermap_centroid"], [171, 3, 1, "", "peek"], [171, 3, 1, "", "quickbundles"], [171, 3, 1, "", "quickbundlesx"]], "dipy.segment.clustering_algorithms.ClusterCentroid": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "assign"], [171, 2, 1, "", "update"]], "dipy.segment.clustering_algorithms.ClusterMapCentroid": [[171, 2, 1, "", "__init__"], [171, 5, 1, "", "centroids"]], "dipy.segment.clusteringspeed": [[171, 1, 1, "", "ClusterCentroid"], [171, 1, 1, "", "ClusterMapCentroid"], [171, 1, 1, "", "Clusters"], [171, 1, 1, "", "ClustersCentroid"], [171, 4, 1, "", "DTYPE"], [171, 1, 1, "", "QuickBundles"], [171, 1, 1, "", "QuickBundlesX"], [171, 1, 1, "", "TreeCluster"], [171, 1, 1, "", "TreeClusterMap"], [171, 3, 1, "", "evaluate_aabb_checks"]], "dipy.segment.clusteringspeed.ClusterCentroid": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "assign"], [171, 2, 1, "", "update"]], "dipy.segment.clusteringspeed.ClusterMapCentroid": [[171, 2, 1, "", "__init__"], [171, 5, 1, "", "centroids"]], "dipy.segment.clusteringspeed.Clusters": [[171, 2, 1, "", "__init__"]], "dipy.segment.clusteringspeed.ClustersCentroid": [[171, 2, 1, "", "__init__"]], "dipy.segment.clusteringspeed.QuickBundles": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "get_cluster_map"], [171, 2, 1, "", "get_stats"]], "dipy.segment.clusteringspeed.QuickBundlesX": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "get_stats"], [171, 2, 1, "", "get_tree_cluster_map"], [171, 2, 1, "", "insert"]], "dipy.segment.clusteringspeed.TreeCluster": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "add"], [171, 5, 1, "", "is_leaf"], [171, 2, 1, "", "return_indices"]], "dipy.segment.clusteringspeed.TreeClusterMap": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "get_clusters"], [171, 2, 1, "", "iter_preorder"], [171, 5, 1, "", "refdata"], [171, 2, 1, "", "traverse_postorder"]], "dipy.segment.featurespeed": [[171, 1, 1, "", "ArcLengthFeature"], [171, 1, 1, "", "CenterOfMassFeature"], [171, 1, 1, "", "CythonFeature"], [171, 1, 1, "", "Feature"], [171, 1, 1, "", "IdentityFeature"], [171, 1, 1, "", "MidpointFeature"], [171, 1, 1, "", "ResampleFeature"], [171, 1, 1, "", "VectorOfEndpointsFeature"], [171, 3, 1, "", "extract"], [171, 3, 1, "", "infer_shape"]], "dipy.segment.featurespeed.ArcLengthFeature": [[171, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.CenterOfMassFeature": [[171, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.CythonFeature": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "extract"], [171, 2, 1, "", "infer_shape"]], "dipy.segment.featurespeed.Feature": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "extract"], [171, 2, 1, "", "infer_shape"], [171, 4, 1, "", "is_order_invariant"]], "dipy.segment.featurespeed.IdentityFeature": [[171, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.MidpointFeature": [[171, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.ResampleFeature": [[171, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.VectorOfEndpointsFeature": [[171, 2, 1, "", "__init__"]], "dipy.segment.fss": [[171, 1, 1, "", "FastStreamlineSearch"], [171, 3, 1, "", "nearest_from_matrix_col"], [171, 3, 1, "", "nearest_from_matrix_row"]], "dipy.segment.fss.FastStreamlineSearch": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "radius_search"]], "dipy.segment.mask": [[171, 3, 1, "", "applymask"], [171, 3, 1, "", "bounding_box"], [171, 3, 1, "", "clean_cc_mask"], [171, 3, 1, "", "crop"], [171, 3, 1, "", "median_otsu"], [171, 3, 1, "", "multi_median"], [171, 3, 1, "", "segment_from_cfa"]], "dipy.segment.metric": [[171, 3, 1, "", "mdf"], [171, 3, 1, "", "mean_euclidean_distance"], [171, 3, 1, "", "mean_manhattan_distance"]], "dipy.segment.metricspeed": [[171, 1, 1, "", "AveragePointwiseEuclideanMetric"], [171, 1, 1, "", "CosineMetric"], [171, 1, 1, "", "CythonMetric"], [171, 1, 1, "", "Metric"], [171, 1, 1, "", "MinimumAverageDirectFlipMetric"], [171, 1, 1, "", "SumPointwiseEuclideanMetric"], [171, 3, 1, "", "dist"], [171, 3, 1, "", "distance_matrix"]], "dipy.segment.metricspeed.AveragePointwiseEuclideanMetric": [[171, 2, 1, "", "__init__"]], "dipy.segment.metricspeed.CosineMetric": [[171, 2, 1, "", "__init__"]], "dipy.segment.metricspeed.CythonMetric": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "are_compatible"], [171, 2, 1, "", "dist"]], "dipy.segment.metricspeed.Metric": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "are_compatible"], [171, 2, 1, "", "dist"], [171, 4, 1, "", "feature"], [171, 4, 1, "", "is_order_invariant"]], "dipy.segment.metricspeed.MinimumAverageDirectFlipMetric": [[171, 2, 1, "", "__init__"], [171, 4, 1, "", "is_order_invariant"]], "dipy.segment.metricspeed.SumPointwiseEuclideanMetric": [[171, 2, 1, "", "__init__"]], "dipy.segment.mrf": [[171, 1, 1, "", "ConstantObservationModel"], [171, 1, 1, "", "IteratedConditionalModes"]], "dipy.segment.mrf.ConstantObservationModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "initialize_param_uniform"], [171, 2, 1, "", "negloglikelihood"], [171, 2, 1, "", "prob_image"], [171, 2, 1, "", "seg_stats"], [171, 2, 1, "", "update_param"]], "dipy.segment.mrf.IteratedConditionalModes": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "icm_ising"], [171, 2, 1, "", "initialize_maximum_likelihood"], [171, 2, 1, "", "prob_neighborhood"]], "dipy.segment.threshold": [[171, 3, 1, "", "otsu"], [171, 3, 1, "", "upper_bound_by_percent"], [171, 3, 1, "", "upper_bound_by_rate"]], "dipy.segment.tissue": [[171, 1, 1, "", "TissueClassifierHMRF"]], "dipy.segment.tissue.TissueClassifierHMRF": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "classify"]], "dipy.sims": [[172, 0, 0, "-", "phantom"], [172, 0, 0, "-", "voxel"]], "dipy.sims.phantom": [[172, 3, 1, "", "add_noise"], [172, 3, 1, "", "diff2eigenvectors"], [172, 3, 1, "", "orbital_phantom"]], "dipy.sims.voxel": [[172, 3, 1, "", "add_noise"], [172, 3, 1, "", "all_tensor_evecs"], [172, 3, 1, "", "callaghan_perpendicular"], [172, 3, 1, "", "cylinders_and_ball_soderman"], [172, 3, 1, "", "diffusion_evals"], [172, 3, 1, "", "dki_signal"], [172, 3, 1, "", "gaussian_parallel"], [172, 3, 1, "", "kurtosis_element"], [172, 3, 1, "", "multi_tensor"], [172, 3, 1, "", "multi_tensor_dki"], [172, 3, 1, "", "multi_tensor_msd"], [172, 3, 1, "", "multi_tensor_odf"], [172, 3, 1, "", "multi_tensor_pdf"], [172, 3, 1, "", "multi_tensor_rtop"], [172, 3, 1, "", "single_tensor"], [172, 3, 1, "", "single_tensor_msd"], [172, 3, 1, "", "single_tensor_odf"], [172, 3, 1, "", "single_tensor_pdf"], [172, 3, 1, "", "single_tensor_rtop"], [172, 3, 1, "", "sticks_and_ball"]], "dipy.stats": [[173, 0, 0, "-", "analysis"]], "dipy.stats.analysis": [[173, 3, 1, "", "afq_profile"], [173, 3, 1, "", "anatomical_measures"], [173, 3, 1, "", "assignment_map"], [173, 3, 1, "", "gaussian_weights"], [173, 3, 1, "", "peak_values"]], "dipy.tracking": [[174, 0, 0, "-", "_utils"], [174, 0, 0, "-", "direction_getter"], [174, 0, 0, "-", "distances"], [174, 0, 0, "-", "fbcmeasures"], [174, 0, 0, "-", "learning"], [174, 0, 0, "-", "life"], [174, 0, 0, "-", "local_tracking"], [174, 0, 0, "-", "localtrack"], [174, 0, 0, "-", "mesh"], [174, 0, 0, "-", "metrics"], [174, 0, 0, "-", "propspeed"], [174, 0, 0, "-", "stopping_criterion"], [174, 0, 0, "-", "streamline"], [174, 0, 0, "-", "streamlinespeed"], [174, 0, 0, "-", "utils"], [174, 0, 0, "-", "vox2track"]], "dipy.tracking.direction_getter": [[174, 1, 1, "", "DirectionGetter"]], "dipy.tracking.direction_getter.DirectionGetter": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "generate_streamline"], [174, 2, 1, "", "get_direction"], [174, 2, 1, "", "initial_direction"]], "dipy.tracking.distances": [[174, 3, 1, "", "add_3vecs"], [174, 3, 1, "", "approx_polygon_track"], [174, 3, 1, "", "approximate_mdl_trajectory"], [174, 3, 1, "", "bundles_distances_mam"], [174, 3, 1, "", "bundles_distances_mdf"], [174, 3, 1, "", "cut_plane"], [174, 3, 1, "", "inner_3vecs"], [174, 3, 1, "", "intersect_segment_cylinder"], [174, 3, 1, "", "larch_3merge"], [174, 3, 1, "", "larch_3split"], [174, 3, 1, "", "lee_angle_distance"], [174, 3, 1, "", "lee_perpendicular_distance"], [174, 3, 1, "", "local_skeleton_clustering"], [174, 3, 1, "", "local_skeleton_clustering_3pts"], [174, 3, 1, "", "mam_distances"], [174, 3, 1, "", "minimum_closest_distance"], [174, 3, 1, "", "most_similar_track_mam"], [174, 3, 1, "", "mul_3vec"], [174, 3, 1, "", "mul_3vecs"], [174, 3, 1, "", "norm_3vec"], [174, 3, 1, "", "normalized_3vec"], [174, 3, 1, "", "point_segment_sq_distance"], [174, 3, 1, "", "point_track_sq_distance_check"], [174, 3, 1, "", "sub_3vecs"], [174, 3, 1, "", "track_dist_3pts"], [174, 3, 1, "", "track_roi_intersection_check"], [174, 3, 1, "", "warn"]], "dipy.tracking.fbcmeasures": [[174, 1, 1, "", "FBCMeasures"], [174, 1, 1, "", "KDTree"], [174, 3, 1, "", "compute_rfbc"], [174, 3, 1, "", "determine_num_threads"], [174, 1, 1, "", "interp1d"], [174, 3, 1, "", "min_moving_average"]], "dipy.tracking.fbcmeasures.FBCMeasures": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "get_points_rfbc_thresholded"]], "dipy.tracking.fbcmeasures.KDTree": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "count_neighbors"], [174, 1, 1, "", "innernode"], [174, 1, 1, "", "leafnode"], [174, 1, 1, "", "node"], [174, 2, 1, "", "query"], [174, 2, 1, "", "query_ball_point"], [174, 2, 1, "", "query_ball_tree"], [174, 2, 1, "", "query_pairs"], [174, 2, 1, "", "sparse_distance_matrix"], [174, 5, 1, "", "tree"]], "dipy.tracking.fbcmeasures.KDTree.innernode": [[174, 5, 1, "", "children"], [174, 5, 1, "", "split"], [174, 5, 1, "", "split_dim"]], "dipy.tracking.fbcmeasures.KDTree.leafnode": [[174, 5, 1, "", "children"], [174, 5, 1, "", "idx"]], "dipy.tracking.fbcmeasures.interp1d": [[174, 2, 1, "", "__init__"], [174, 4, 1, "", "dtype"], [174, 5, 1, "", "fill_value"]], "dipy.tracking.learning": [[174, 3, 1, "", "detect_corresponding_tracks"], [174, 3, 1, "", "detect_corresponding_tracks_plus"]], "dipy.tracking.life": [[174, 1, 1, "", "FiberFit"], [174, 1, 1, "", "FiberModel"], [174, 1, 1, "", "LifeSignalMaker"], [174, 3, 1, "", "grad_tensor"], [174, 3, 1, "", "gradient"], [174, 3, 1, "", "streamline_gradients"], [174, 3, 1, "", "streamline_signal"], [174, 3, 1, "", "streamline_tensors"], [174, 3, 1, "", "voxel2streamline"]], "dipy.tracking.life.FiberFit": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "predict"]], "dipy.tracking.life.FiberModel": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "fit"], [174, 2, 1, "", "setup"]], "dipy.tracking.life.LifeSignalMaker": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "calc_signal"], [174, 2, 1, "", "streamline_signal"]], "dipy.tracking.local_tracking": [[174, 1, 1, "", "LocalTracking"], [174, 1, 1, "", "ParticleFilteringTracking"]], "dipy.tracking.local_tracking.LocalTracking": [[174, 2, 1, "", "__init__"]], "dipy.tracking.local_tracking.ParticleFilteringTracking": [[174, 2, 1, "", "__init__"]], "dipy.tracking.localtrack": [[174, 3, 1, "", "local_tracker"], [174, 3, 1, "", "pft_tracker"], [174, 3, 1, "", "random"]], "dipy.tracking.mesh": [[174, 3, 1, "", "random_coordinates_from_surface"], [174, 3, 1, "", "seeds_from_surface_coordinates"], [174, 3, 1, "", "triangles_area"], [174, 3, 1, "", "vertices_to_triangles_values"]], "dipy.tracking.metrics": [[174, 3, 1, "", "arbitrarypoint"], [174, 3, 1, "", "bytes"], [174, 3, 1, "", "center_of_mass"], [174, 3, 1, "", "downsample"], [174, 3, 1, "", "endpoint"], [174, 3, 1, "", "frenet_serret"], [174, 3, 1, "", "generate_combinations"], [174, 3, 1, "", "inside_sphere"], [174, 3, 1, "", "inside_sphere_points"], [174, 3, 1, "", "intersect_sphere"], [174, 3, 1, "", "length"], [174, 3, 1, "", "longest_track_bundle"], [174, 3, 1, "", "magn"], [174, 3, 1, "", "mean_curvature"], [174, 3, 1, "", "mean_orientation"], [174, 3, 1, "", "midpoint"], [174, 3, 1, "", "midpoint2point"], [174, 3, 1, "", "principal_components"], [174, 3, 1, "", "spline"], [174, 3, 1, "", "startpoint"], [174, 3, 1, "", "winding"]], "dipy.tracking.propspeed": [[174, 3, 1, "", "eudx_both_directions"], [174, 3, 1, "", "ndarray_offset"]], "dipy.tracking.stopping_criterion": [[174, 1, 1, "", "ActStoppingCriterion"], [174, 1, 1, "", "AnatomicalStoppingCriterion"], [174, 1, 1, "", "BinaryStoppingCriterion"], [174, 1, 1, "", "CmcStoppingCriterion"], [174, 1, 1, "", "StoppingCriterion"], [174, 1, 1, "", "StreamlineStatus"], [174, 1, 1, "", "ThresholdStoppingCriterion"]], "dipy.tracking.stopping_criterion.ActStoppingCriterion": [[174, 2, 1, "", "__init__"]], "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "from_pve"], [174, 2, 1, "", "get_exclude"], [174, 2, 1, "", "get_include"]], "dipy.tracking.stopping_criterion.BinaryStoppingCriterion": [[174, 2, 1, "", "__init__"]], "dipy.tracking.stopping_criterion.CmcStoppingCriterion": [[174, 2, 1, "", "__init__"]], "dipy.tracking.stopping_criterion.StoppingCriterion": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "check_point"]], "dipy.tracking.stopping_criterion.StreamlineStatus": [[174, 4, 1, "", "ENDPOINT"], [174, 4, 1, "", "INVALIDPOINT"], [174, 4, 1, "", "OUTSIDEIMAGE"], [174, 4, 1, "", "PYERROR"], [174, 4, 1, "", "TRACKPOINT"], [174, 2, 1, "", "__init__"]], "dipy.tracking.stopping_criterion.ThresholdStoppingCriterion": [[174, 2, 1, "", "__init__"]], "dipy.tracking.streamline": [[174, 3, 1, "", "center_streamlines"], [174, 3, 1, "", "cluster_confidence"], [174, 3, 1, "", "deform_streamlines"], [174, 3, 1, "", "nbytes"], [174, 3, 1, "", "orient_by_rois"], [174, 3, 1, "", "orient_by_streamline"], [174, 3, 1, "", "relist_streamlines"], [174, 3, 1, "", "select_by_rois"], [174, 3, 1, "", "select_random_set_of_streamlines"], [174, 3, 1, "", "transform_streamlines"], [174, 3, 1, "", "unlist_streamlines"], [174, 3, 1, "", "values_from_volume"]], "dipy.tracking.streamlinespeed": [[174, 4, 1, "", "Streamlines"], [174, 3, 1, "", "compress_streamlines"], [174, 3, 1, "", "length"], [174, 3, 1, "", "set_number_of_points"]], "dipy.tracking.utils": [[174, 3, 1, "", "connectivity_matrix"], [174, 3, 1, "", "density_map"], [174, 3, 1, "", "length"], [174, 3, 1, "", "max_angle_from_curvature"], [174, 3, 1, "", "min_radius_curvature_from_angle"], [174, 3, 1, "", "ndbincount"], [174, 3, 1, "", "near_roi"], [174, 3, 1, "", "path_length"], [174, 3, 1, "", "random_seeds_from_mask"], [174, 3, 1, "", "reduce_labels"], [174, 3, 1, "", "reduce_rois"], [174, 3, 1, "", "seeds_from_mask"], [174, 3, 1, "", "streamline_near_roi"], [174, 3, 1, "", "subsegment"], [174, 3, 1, "", "target"], [174, 3, 1, "", "target_line_based"], [174, 3, 1, "", "transform_tracking_output"], [174, 3, 1, "", "unique_rows"]], "dipy.tracking.vox2track": [[174, 3, 1, "", "streamline_mapping"], [174, 3, 1, "", "track_counts"]], "dipy.viz": [[175, 0, 0, "-", "gmem"], [175, 0, 0, "-", "horizon"], [175, 0, 0, "-", "panel"], [175, 0, 0, "-", "plotting"], [175, 0, 0, "-", "projections"], [175, 0, 0, "-", "regtools"], [175, 0, 0, "-", "streamline"]], "dipy.viz.gmem": [[175, 1, 1, "", "GlobalHorizon"]], "dipy.viz.gmem.GlobalHorizon": [[175, 2, 1, "", "__init__"]], "dipy.viz.horizon": [[175, 0, 0, "-", "app"], [175, 0, 0, "-", "tab"], [175, 0, 0, "-", "util"], [175, 0, 0, "-", "visualizer"]], "dipy.viz.horizon.app": [[175, 1, 1, "", "Horizon"], [175, 3, 1, "", "horizon"]], "dipy.viz.horizon.app.Horizon": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "build_scene"], [175, 2, 1, "", "build_show"]], "dipy.viz.horizon.tab": [[175, 0, 0, "-", "base"], [175, 0, 0, "-", "cluster"], [175, 0, 0, "-", "peak"], [175, 0, 0, "-", "roi"], [175, 0, 0, "-", "slice"], [175, 0, 0, "-", "surface"]], "dipy.viz.horizon.tab.base": [[175, 1, 1, "", "HorizonTab"], [175, 1, 1, "", "HorizonUIElement"], [175, 1, 1, "", "TabManager"], [175, 3, 1, "", "build_checkbox"], [175, 3, 1, "", "build_label"], [175, 3, 1, "", "build_slider"], [175, 3, 1, "", "build_switcher"], [175, 3, 1, "", "color_double_slider"], [175, 3, 1, "", "color_single_slider"]], "dipy.viz.horizon.tab.base.HorizonTab": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "build"], [175, 5, 1, "", "elements"], [175, 5, 1, "", "name"], [175, 2, 1, "", "on_tab_selected"], [175, 2, 1, "", "register_elements"]], "dipy.viz.horizon.tab.base.HorizonUIElement": [[175, 2, 1, "", "__init__"], [175, 4, 1, "", "obj"], [175, 4, 1, "", "position"], [175, 4, 1, "", "selected_value"], [175, 4, 1, "", "size"], [175, 4, 1, "", "visibility"]], "dipy.viz.horizon.tab.base.TabManager": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "handle_text_overflows"], [175, 2, 1, "", "reposition"], [175, 2, 1, "", "synchronize_slices"], [175, 2, 1, "", "synchronize_volumes"], [175, 5, 1, "", "tab_ui"]], "dipy.viz.horizon.tab.cluster": [[175, 1, 1, "", "ClustersTab"]], "dipy.viz.horizon.tab.cluster.ClustersTab": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "build"], [175, 5, 1, "", "name"]], "dipy.viz.horizon.tab.peak": [[175, 1, 1, "", "PeaksTab"]], "dipy.viz.horizon.tab.peak.PeaksTab": [[175, 2, 1, "", "__init__"], [175, 5, 1, "", "actors"], [175, 2, 1, "", "build"], [175, 5, 1, "", "name"], [175, 2, 1, "", "on_tab_selected"], [175, 5, 1, "", "tab_id"], [175, 2, 1, "", "update_slices"]], "dipy.viz.horizon.tab.roi": [[175, 1, 1, "", "ROIsTab"]], "dipy.viz.horizon.tab.roi.ROIsTab": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "build"], [175, 5, 1, "", "name"]], "dipy.viz.horizon.tab.slice": [[175, 1, 1, "", "SlicesTab"]], "dipy.viz.horizon.tab.slice.SlicesTab": [[175, 2, 1, "", "__init__"], [175, 5, 1, "", "actors"], [175, 2, 1, "", "build"], [175, 5, 1, "", "file_name"], [175, 5, 1, "", "name"], [175, 2, 1, "", "on_tab_selected"], [175, 5, 1, "", "tab_id"], [175, 2, 1, "", "update_slices"], [175, 2, 1, "", "update_volume"]], "dipy.viz.horizon.tab.surface": [[175, 1, 1, "", "SurfaceTab"]], "dipy.viz.horizon.tab.surface.SurfaceTab": [[175, 2, 1, "", "__init__"], [175, 5, 1, "", "actors"], [175, 2, 1, "", "build"], [175, 5, 1, "", "name"], [175, 5, 1, "", "tab_id"]], "dipy.viz.horizon.util": [[175, 3, 1, "", "check_img_dtype"], [175, 3, 1, "", "check_img_shapes"], [175, 3, 1, "", "check_peak_size"], [175, 3, 1, "", "is_binary_image"], [175, 3, 1, "", "show_ellipsis"], [175, 3, 1, "", "unpack_image"], [175, 3, 1, "", "unpack_surface"]], "dipy.viz.horizon.visualizer": [[175, 0, 0, "-", "cluster"], [175, 0, 0, "-", "peak"], [175, 0, 0, "-", "slice"], [175, 0, 0, "-", "surface"]], "dipy.viz.horizon.visualizer.cluster": [[175, 1, 1, "", "ClustersVisualizer"]], "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "add_cluster_actors"], [175, 5, 1, "", "centroid_actors"], [175, 5, 1, "", "cluster_actors"], [175, 5, 1, "", "lengths"], [175, 2, 1, "", "recluster_tractograms"], [175, 5, 1, "", "sizes"], [175, 5, 1, "", "tractogram_clusters"]], "dipy.viz.horizon.visualizer.peak": [[175, 1, 1, "", "PeakActor"], [175, 1, 1, "", "PeaksVisualizer"], [175, 3, 1, "", "peak"]], "dipy.viz.horizon.visualizer.peak.PeakActor": [[175, 2, 1, "", "__init__"], [175, 5, 1, "", "cross_section"], [175, 2, 1, "", "display_cross_section"], [175, 2, 1, "", "display_extent"], [175, 5, 1, "", "global_opacity"], [175, 5, 1, "", "high_ranges"], [175, 5, 1, "", "is_range"], [175, 5, 1, "", "linewidth"], [175, 5, 1, "", "low_ranges"], [175, 5, 1, "", "max_centers"], [175, 5, 1, "", "min_centers"]], "dipy.viz.horizon.visualizer.peak.PeaksVisualizer": [[175, 2, 1, "", "__init__"], [175, 5, 1, "", "actors"]], "dipy.viz.horizon.visualizer.slice": [[175, 1, 1, "", "SlicesVisualizer"]], "dipy.viz.horizon.visualizer.slice.SlicesVisualizer": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "change_volume"], [175, 5, 1, "", "data_shape"], [175, 5, 1, "", "intensities_range"], [175, 2, 1, "", "register_picker_callback"], [175, 5, 1, "", "rgb"], [175, 5, 1, "", "selected_slices"], [175, 5, 1, "", "slice_actors"], [175, 5, 1, "", "volume_max"], [175, 5, 1, "", "volume_min"]], "dipy.viz.horizon.visualizer.surface": [[175, 1, 1, "", "SurfaceVisualizer"]], "dipy.viz.horizon.visualizer.surface.SurfaceVisualizer": [[175, 2, 1, "", "__init__"], [175, 5, 1, "", "actors"]], "dipy.viz.panel": [[175, 3, 1, "", "build_label"], [175, 3, 1, "", "slicer_panel"]], "dipy.viz.plotting": [[175, 3, 1, "", "bundle_shape_profile"], [175, 3, 1, "", "compare_maps"], [175, 3, 1, "", "compare_qti_maps"]], "dipy.viz.projections": [[175, 3, 1, "", "sph_project"]], "dipy.viz.regtools": [[175, 3, 1, "", "draw_lattice_2d"], [175, 3, 1, "", "overlay_images"], [175, 3, 1, "", "overlay_slices"], [175, 3, 1, "", "plot_2d_diffeomorphic_map"], [175, 3, 1, "", "plot_slices"], [175, 3, 1, "", "simple_plot"]], "dipy.viz.streamline": [[175, 3, 1, "", "show_bundles"], [175, 3, 1, "", "viz_displacement_mag"], [175, 3, 1, "", "viz_two_bundles"], [175, 3, 1, "", "viz_vector_field"]], "dipy.workflows": [[176, 0, 0, "-", "align"], [176, 0, 0, "-", "base"], [176, 0, 0, "-", "cli"], [176, 0, 0, "-", "combined_workflow"], [176, 0, 0, "-", "denoise"], [176, 0, 0, "-", "docstring_parser"], [176, 0, 0, "-", "flow_runner"], [176, 0, 0, "-", "io"], [176, 0, 0, "-", "mask"], [176, 0, 0, "-", "multi_io"], [176, 0, 0, "-", "nn"], [176, 0, 0, "-", "reconst"], [176, 0, 0, "-", "segment"], [176, 0, 0, "-", "stats"], [176, 0, 0, "-", "tracking"], [176, 0, 0, "-", "viz"], [176, 0, 0, "-", "workflow"]], "dipy.workflows.align": [[176, 1, 1, "", "ApplyTransformFlow"], [176, 1, 1, "", "BundleWarpFlow"], [176, 1, 1, "", "ImageRegistrationFlow"], [176, 1, 1, "", "MotionCorrectionFlow"], [176, 1, 1, "", "ResliceFlow"], [176, 1, 1, "", "SlrWithQbxFlow"], [176, 1, 1, "", "SynRegistrationFlow"], [176, 3, 1, "", "check_dimensions"]], "dipy.workflows.align.ApplyTransformFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "run"]], "dipy.workflows.align.BundleWarpFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.align.ImageRegistrationFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "run"]], "dipy.workflows.align.MotionCorrectionFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "run"]], "dipy.workflows.align.ResliceFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.align.SlrWithQbxFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.align.SynRegistrationFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "run"]], "dipy.workflows.base": [[176, 1, 1, "", "IntrospectiveArgumentParser"], [176, 3, 1, "", "get_args_default"], [176, 3, 1, "", "none_or_dtype"]], "dipy.workflows.base.IntrospectiveArgumentParser": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "add_description"], [176, 2, 1, "", "add_epilogue"], [176, 2, 1, "", "add_sub_flow_args"], [176, 2, 1, "", "add_workflow"], [176, 2, 1, "", "get_flow_args"], [176, 5, 1, "", "optional_parameters"], [176, 5, 1, "", "output_parameters"], [176, 5, 1, "", "positional_parameters"], [176, 2, 1, "", "show_argument"], [176, 2, 1, "", "update_argument"]], "dipy.workflows.cli": [[176, 3, 1, "", "run"]], "dipy.workflows.combined_workflow": [[176, 1, 1, "", "CombinedWorkflow"]], "dipy.workflows.combined_workflow.CombinedWorkflow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_optionals"], [176, 2, 1, "", "get_sub_runs"], [176, 2, 1, "", "run_sub_flow"], [176, 2, 1, "", "set_sub_flows_optionals"]], "dipy.workflows.denoise": [[176, 1, 1, "", "GibbsRingingFlow"], [176, 1, 1, "", "LPCAFlow"], [176, 1, 1, "", "MPPCAFlow"], [176, 1, 1, "", "NLMeansFlow"], [176, 1, 1, "", "Patch2SelfFlow"]], "dipy.workflows.denoise.GibbsRingingFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.denoise.LPCAFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.denoise.MPPCAFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.denoise.NLMeansFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.denoise.Patch2SelfFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.docstring_parser": [[176, 1, 1, "", "NumpyDocString"], [176, 1, 1, "", "Reader"], [176, 3, 1, "", "dedent_lines"]], "dipy.workflows.docstring_parser.NumpyDocString": [[176, 2, 1, "", "__init__"]], "dipy.workflows.docstring_parser.Reader": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "eof"], [176, 2, 1, "", "is_empty"], [176, 2, 1, "", "peek"], [176, 2, 1, "", "read"], [176, 2, 1, "", "read_to_condition"], [176, 2, 1, "", "read_to_next_empty_line"], [176, 2, 1, "", "read_to_next_unindented_line"], [176, 2, 1, "", "reset"], [176, 2, 1, "", "seek_next_non_empty_line"]], "dipy.workflows.flow_runner": [[176, 3, 1, "", "get_level"], [176, 3, 1, "", "run_flow"]], "dipy.workflows.io": [[176, 1, 1, "", "ConcatenateTractogramFlow"], [176, 1, 1, "", "ConvertSHFlow"], [176, 1, 1, "", "ConvertTensorsFlow"], [176, 1, 1, "", "ConvertTractogramFlow"], [176, 1, 1, "", "FetchFlow"], [176, 1, 1, "", "IoInfoFlow"], [176, 1, 1, "", "SplitFlow"]], "dipy.workflows.io.ConcatenateTractogramFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.io.ConvertSHFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.io.ConvertTensorsFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.io.ConvertTractogramFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.io.FetchFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_fetcher_datanames"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "load_module"], [176, 2, 1, "", "run"]], "dipy.workflows.io.IoInfoFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.io.SplitFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.mask": [[176, 1, 1, "", "MaskFlow"]], "dipy.workflows.mask.MaskFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.multi_io": [[176, 1, 1, "", "IOIterator"], [176, 3, 1, "", "basename_without_extension"], [176, 3, 1, "", "common_start"], [176, 3, 1, "", "concatenate_inputs"], [176, 3, 1, "", "connect_output_paths"], [176, 3, 1, "", "io_iterator"], [176, 3, 1, "", "io_iterator_"], [176, 3, 1, "", "slash_to_under"]], "dipy.workflows.multi_io.IOIterator": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "create_directories"], [176, 2, 1, "", "create_outputs"], [176, 2, 1, "", "file_existence_check"], [176, 2, 1, "", "set_inputs"], [176, 2, 1, "", "set_out_dir"], [176, 2, 1, "", "set_out_fnames"], [176, 2, 1, "", "set_output_keys"]], "dipy.workflows.nn": [[176, 1, 1, "", "EVACPlusFlow"]], "dipy.workflows.nn.EVACPlusFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.reconst": [[176, 1, 1, "", "ReconstCSAFlow"], [176, 1, 1, "", "ReconstCSDFlow"], [176, 1, 1, "", "ReconstDkiFlow"], [176, 1, 1, "", "ReconstDsiFlow"], [176, 1, 1, "", "ReconstDtiFlow"], [176, 1, 1, "", "ReconstIvimFlow"], [176, 1, 1, "", "ReconstMAPMRIFlow"], [176, 1, 1, "", "ReconstRUMBAFlow"]], "dipy.workflows.reconst.ReconstCSAFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstCSDFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstDkiFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_fitted_tensor"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstDsiFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstDtiFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_fitted_tensor"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstIvimFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_fitted_ivim"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstMAPMRIFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstRUMBAFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.segment": [[176, 1, 1, "", "LabelsBundlesFlow"], [176, 1, 1, "", "MedianOtsuFlow"], [176, 1, 1, "", "RecoBundlesFlow"]], "dipy.workflows.segment.LabelsBundlesFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.segment.MedianOtsuFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.segment.RecoBundlesFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.stats": [[176, 1, 1, "", "BundleAnalysisTractometryFlow"], [176, 1, 1, "", "BundleShapeAnalysis"], [176, 1, 1, "", "LinearMixedModelsFlow"], [176, 1, 1, "", "SNRinCCFlow"], [176, 3, 1, "", "buan_bundle_profiles"]], "dipy.workflows.stats.BundleAnalysisTractometryFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.stats.BundleShapeAnalysis": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.stats.LinearMixedModelsFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_metric_name"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"], [176, 2, 1, "", "save_lmm_plot"]], "dipy.workflows.stats.SNRinCCFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.tracking": [[176, 1, 1, "", "LocalFiberTrackingPAMFlow"], [176, 1, 1, "", "PFTrackingPAMFlow"]], "dipy.workflows.tracking.LocalFiberTrackingPAMFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.tracking.PFTrackingPAMFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.viz": [[176, 1, 1, "", "HorizonFlow"]], "dipy.workflows.viz.HorizonFlow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "run"]], "dipy.workflows.workflow": [[176, 1, 1, "", "Workflow"]], "dipy.workflows.workflow.Workflow": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "get_io_iterator"], [176, 2, 1, "", "get_short_name"], [176, 2, 1, "", "get_sub_runs"], [176, 2, 1, "", "manage_output_overwrite"], [176, 2, 1, "", "run"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"api": [0, 177], "chang": [0, 6, 15], "dipi": [0, 2, 3, 9, 14, 18, 21, 22, 44, 64, 150, 153, 161, 162, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 247, 248, 251, 253], "1": [0, 4, 32, 34, 66, 71, 89, 160, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "9": [0, 227], "0": [0, 4, 160, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228], "8": [0, 160, 226, 237], "7": [0, 4, 160, 225, 236], "6": [0, 160, 224, 235], "5": [0, 4, 160, 234], "4": [0, 4, 232, 233], "3": [0, 4, 34, 66, 160, 231], "2": [0, 4, 32, 34, 66, 71, 89, 160, 230], "16": [0, 4, 160, 223], "15": [0, 222], "14": [0, 221], "13": [0, 160, 220], "12": [0, 219], "10": [0, 217], "between": [0, 58, 85, 111, 154], "public": 1, "A": [1, 15, 21, 239], "note": [1, 40, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 252], "cite": 1, "our": 1, "work": [1, 14, 98], "benchmark": [2, 22], "prerequisit": 2, "get": [2, 8, 19, 34, 64, 66, 247, 250], "start": [2, 44, 63, 64, 250], "run": [2, 176], "compar": 2, "result": [2, 147], "version": [2, 4, 22, 160, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 249, 252], "contribut": 2, "write": [2, 43], "embrac": 2, "speed": 2, "code": [3, 4, 8, 14], "style": 3, "guidelin": 3, "import": [3, 174], "cython": 3, "variabl": 3, "declar": 3, "us": [3, 40, 46, 47, 50, 52, 53, 54, 59, 67, 80, 85, 86, 91, 94, 151, 169, 252], "c": 3, "librari": 3, "error": 3, "return": [3, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176], "valu": [3, 135, 137], "pointer": 3, "refer": [3, 22, 24, 25, 29, 31, 32, 34, 35, 37, 38, 39, 40, 50, 51, 52, 53, 54, 55, 56, 58, 59, 62, 66, 67, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 104, 105, 106, 108, 109, 111, 112, 113, 114, 116, 119, 121, 123, 124, 125, 126, 128, 134, 146, 148, 149, 151, 152, 154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 245], "cast": 3, "loop": 3, "document": [3, 19, 22, 145], "svg": [4, 160], "width": [4, 160], "0em": [4, 160], "height": [4, 160], "class": [4, 160], "sd": [4, 38, 160], "octicon": [4, 160], "git": [4, 5, 10, 11, 13], "commit": [4, 6, 15], "text": 4, "info": 4, "viewbox": [4, 160], "aria": [4, 160], "hidden": [4, 160], "true": [4, 160], "path": [4, 128, 160], "fill": [4, 160], "rule": [4, 160], "evenodd": [4, 160], "d": [4, 160], "m10": 4, "75a2": 4, "11": [4, 160, 218], "015": 4, "0zm1": 4, "43": 4, "75a4": 4, "002": 4, "01": [4, 160], "86": 4, "0h": 4, "75a": 4, "75": [4, 160], "110": 4, "5h3": 4, "32a4": 4, "001": 4, "017": 4, "0h3": 4, "32a": 4, "5h": 4, "32z": 4, "messag": 4, "configur": [5, 9], "overview": [5, 6, 11, 16, 17, 43, 151, 157, 239], "In": [5, 6, 11, 16, 17, 145], "detail": [5, 6, 11, 16, 17], "user": [5, 251], "name": 5, "email": 5, "alias": 5, "editor": 5, "merg": [5, 6], "fanci": 5, "log": 5, "output": [5, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "develop": [6, 10, 16, 18, 23], "workflow": [6, 13, 15, 44, 138, 139, 141, 153, 176], "summari": [6, 13], "consid": 6, "delet": 6, "your": [6, 9, 17, 135, 137], "master": 6, "branch": 6, "updat": [6, 8], "mirror": 6, "trunk": [6, 15], "make": [6, 9, 16, 21], "new": [6, 138, 141], "featur": [6, 111, 113, 171, 239], "The": [6, 241, 242, 246], "edit": 6, "more": 6, "ask": [6, 142], "review": 6, "some": 6, "other": [6, 21, 164], "thing": 6, "you": 6, "might": 6, "want": 6, "do": [6, 21], "github": [6, 9], "sever": 6, "peopl": 6, "share": 6, "singl": 6, "repositori": [6, 17], "explor": 6, "rebas": 6, "recov": 6, "from": [6, 16, 19, 34, 66, 123, 135, 137], "mess": 6, "up": [6, 9, 17], "rewrit": 6, "histori": [6, 15], "two": 7, "three": 7, "dot": 7, "differ": [7, 113, 135], "spec": 7, "follow": 8, "latest": 8, "sourc": [8, 14, 19], "local": [8, 52, 54, 67, 151, 157, 166], "copi": [8, 9], "own": 9, "fork": [9, 17], "set": [9, 17, 34, 66], "account": 9, "creat": [9, 137, 138, 141], "instal": [11, 19, 88, 252], "introduct": [12, 20, 33, 34, 36, 66, 146], "resourc": 13, "tutori": 13, "advanc": [13, 134], "manual": 13, "page": 13, "onlin": 13, "maintain": 15, "integr": 15, "few": 15, "long": 15, "seri": 15, "check": 15, "push": 15, "patch": 16, "move": 16, "clone": 17, "link": [17, 145], "upstream": 17, "repo": 17, "guid": [18, 21, 251], "build": [19, 21, 22], "all": 19, "oper": 19, "system": [19, 239], "recommend": 19, "unix": 19, "e": 19, "g": 19, "linux": [19, 252], "maco": 19, "ubuntu": 19, "debian": 19, "fedora": 19, "mandriva": 19, "mayb": 19, "redhat": 19, "window": [19, 252], "openmp": 19, "under": 19, "anaconda": [19, 252], "homebrew": 19, "python": [19, 22, 145, 162, 249, 252], "org": 19, "test": [19, 22, 85], "tip": 19, "troubleshoot": 19, "releas": [21, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 252], "checklist": 21, "upload": 21, "binari": [21, 40, 102], "stuff": [21, 241], "need": 21, "toolchain": 22, "roadmap": 22, "numpi": 22, "compil": 22, "offici": 22, "packag": [22, 252], "cross": [24, 69, 79], "preserv": 24, "contextu": [24, 26, 44], "enhanc": [24, 26, 44, 113], "fiber": [25, 28, 44, 71, 79, 89, 108, 157], "bundl": [25, 98, 99, 100, 108, 123, 124, 125, 135, 147, 148, 149, 171], "coher": 25, "measur": 25, "acknowledg": 25, "comput": [27, 30, 42, 48, 61, 65, 95, 103, 115, 117, 120, 129, 133, 140, 238], "time": [27, 30, 42, 48, 61, 65, 86, 95, 103, 115, 117, 120, 129, 133, 140, 238], "track": [28, 34, 38, 39, 44, 66, 157, 174, 176], "linear": [29, 148, 170], "fascicl": [29, 39, 90], "evalu": 29, "life": [29, 174], "surfac": [31, 136, 168, 175], "seed": [31, 34, 66], "tractographi": [31, 35, 37, 40, 111, 112, 114], "displai": 31, "gener": [31, 81], "list": [31, 247], "posit": [31, 88, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "bootstrap": 32, "closest": [32, 157], "peak": [32, 157, 167, 168, 175], "direct": [32, 33, 34, 36, 66, 99, 167], "getter": [32, 33, 36], "exampl": [32, 44, 87, 88, 98, 163, 164, 165, 166, 168, 170, 172, 174, 175], "csd": [32, 47, 84, 155], "model": [32, 38, 39, 69, 72, 73, 74, 78, 79, 80, 83, 89, 90, 92, 169], "an": [33, 36, 135], "determinist": [33, 157], "maximum": 33, "basic": [34, 66], "step": [34, 66, 71, 89, 250], "diffus": [34, 60, 62, 66, 72, 73, 74, 75, 78, 83, 85, 86, 92, 145, 151, 155, 162, 169], "dataset": [34, 58, 60, 66, 147, 150, 247, 248], "identifi": [34, 66], "when": [34, 66], "must": [34, 66], "stop": [34, 35, 40, 66], "defin": [34, 66], "which": [34, 66], "begin": [34, 66], "particl": [35, 157], "filter": [35, 157], "cmc": 35, "act": [35, 40], "criterion": [35, 40], "probabilist": [36, 157], "parallel": [37, 46, 47], "transport": 37, "robust": [38, 89, 94], "unbias": [38, 89], "base": [38, 76, 89, 104, 148, 156, 166, 170, 175, 176, 245], "spheric": [38, 71, 89, 91, 155, 170, 245, 246], "deconvolut": [38, 71, 77, 89, 119, 155], "rumba": [38, 170], "spars": [39, 90], "variou": 40, "threshold": [40, 52, 171], "file": [41, 43, 44], "format": [41, 44], "read": 43, "streamlin": [43, 44, 104, 109, 127, 130, 135, 136, 148, 156, 168, 174, 175], "content": 44, "quick": [44, 63, 145, 239], "preprocess": [44, 57], "reconstruct": [44, 46, 47, 67, 68, 70, 71, 72, 73, 74, 75, 78, 81, 84, 85, 87, 89, 90, 91, 155, 161], "method": [44, 151, 157, 161, 163, 174], "avail": [44, 111, 112, 161, 247, 248], "analysi": [44, 127, 173], "connect": [44, 127, 131], "registr": [44, 96, 97, 98, 99, 100, 101, 102, 105, 106, 148, 149, 156], "segment": [44, 49, 107, 110, 123, 148, 171, 176], "simul": [44, 118, 121, 122], "multiprocess": [44, 45], "visual": [44, 132, 134, 135, 136, 175], "q": [46, 70, 81, 86, 87, 88, 241, 243], "ball": [46, 70], "brain": [49, 107], "median_otsu": [49, 107, 171], "denois": [50, 52, 53, 54, 55, 151, 166, 169, 176], "imag": [50, 52, 53, 54, 62, 75, 81, 85, 87, 88, 102, 104, 116, 145, 155, 156, 162, 168, 169, 243], "adapt": 50, "soft": 50, "coeffici": 50, "match": 50, "ascm": 50, "suppress": [51, 152], "gibb": [51, 152, 166], "oscil": [51, 152], "pca": [52, 53, 151, 166], "via": [52, 55], "empir": 52, "estim": [52, 53, 59, 62, 71, 86, 89, 166], "nois": [52, 53, 59, 166], "standard": [52, 53], "deviat": [52, 53], "perform": 52, "localpca": [52, 166], "function": [52, 71, 79, 89], "marcenko": [53, 151], "pastur": [53, 151], "algorithm": [53, 94], "marchenko": 53, "non": 54, "mean": [54, 73, 85, 155], "nlmean": [54, 151, 166], "patch2self": [55, 166], "self": 55, "supervis": 55, "statist": 55, "independ": 55, "gradient": [56, 163, 164, 168, 174], "sphere": [56, 164, 166], "volum": [58, 135, 137, 154], "motion": [58, 82, 154, 155], "correct": [58, 154], "dwi": 58, "piesno": [59, 166], "reslic": [60, 163], "snr": 62, "weight": [62, 116, 169], "histolog": 67, "resdnn": 67, "k": 69, "fold": 69, "valid": 69, "comparison": [69, 147], "constant": [70, 155], "solid": [70, 155], "angl": [70, 155], "constrain": [71, 73, 155], "respons": [71, 79, 89], "fodf": [71, 89], "signal": [72, 73, 74, 78, 83, 85, 91, 92], "correl": 72, "tensor": [72, 73, 78, 94, 155], "kurtosi": [73, 85, 155], "optim": [73, 164], "dki": [73, 121, 155, 170], "fraction": 73, "anisotropi": 73, "wmti": 74, "spectrum": 75, "calcul": [76, 93, 126, 128], "dsi": [76, 77, 119, 170], "scalar": [76, 93], "map": [76, 83, 93, 124, 128, 131, 155], "v": [77, 119], "invari": 79, "forecast": [79, 170], "free": 80, "water": 80, "elimin": 80, "remov": 80, "dti": [80, 155, 170], "contamin": 80, "sampl": [81, 243], "intravoxel": [82, 155], "incoher": [82, 155], "continu": [83, 92], "analyt": [83, 92, 147], "mri": [83, 155], "multi": 84, "shell": 84, "tissu": [84, 116, 171], "msdki": [85, 170], "synthet": 85, "data": [85, 165, 169, 247], "relationship": 85, "smt2": 85, "depend": [86, 249], "space": [86, 87, 88, 168], "indic": 86, "qt": 86, "dmri": 86, "trajectori": [87, 88], "qti": [87, 88, 170], "theori": [87, 88, 244], "usag": [87, 88, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "appli": [88, 104, 156], "constraint": 88, "harmon": [91, 245], "3d": [92, 96, 106], "shore": [92, 93, 170], "restor": 94, "fit": 94, "affin": [96, 97, 163], "mask": [97, 171, 176], "groupwis": 98, "how": [98, 247], "extend": [98, 113], "capabl": 98, "nonrigid": [100, 149], "bundlewarp": [100, 149, 163], "diffeomorph": [102, 105, 106, 156], "fuzzi": 102, "deform": [104, 149], "symmetr": [105, 106, 156], "2d": 105, "automat": 108, "extract": [108, 123, 171], "recobundl": [108, 148, 171], "fast": 109, "search": 109, "cluster": [111, 112, 113, 114, 126, 171, 175], "ident": [111, 171], "resampl": [111, 163], "center": 111, "mass": 111, "midpoint": [111, 174], "arclength": 111, "vector": 111, "endpoint": [111, 174], "metric": [112, 113, 135, 163, 171, 174], "averag": 112, "pointwis": 112, "euclidean": 112, "sum": 112, "cosin": 112, "quickbundl": [113, 114, 171], "framework": [113, 147], "classif": 116, "t1": [116, 137], "structur": [116, 151], "multitensor": [121, 122], "afq": 123, "tract": 123, "profil": [123, 147, 164], "buan": [124, 125, 147], "assign": 124, "creation": 124, "shape": [125, 147], "similar": [125, 147], "score": 125, "outlier": 126, "confid": 126, "index": 126, "length": [128, 130, 174], "size": 130, "reduct": 130, "matric": 131, "roi": [131, 136, 175], "intersect": 131, "densiti": 131, "interact": 134, "show": 135, "everi": 135, "orient": 135, "color": 135, "point": 135, "default": 135, "colormap": [135, 137], "specif": [135, 137, 147], "render": [136, 137], "simpl": 137, "slice": [137, 175], "rang": 137, "fa": 137, "mosaic": 137, "combin": 138, "frequent": 142, "question": 142, "theoret": 142, "practic": 142, "gimbal": 143, "lock": 143, "mathemat": [143, 246], "glossari": 144, "highlight": [145, 158], "announc": [145, 159], "command": [146, 216], "line": [146, 216], "interfac": [146, 153], "group": 147, "across": 147, "popul": 147, "reproduc": 147, "larger": 147, "white": [148, 149], "matter": [148, 149], "partial": 149, "fulli": 149, "download": 150, "overcomplet": 151, "unring": 152, "appar": 155, "propag": 155, "csa": 155, "ivim": [155, 170], "transform": [156, 163], "eudx": 157, "pft": 157, "older": 158, "past": 159, "mortar": 160, "board": 160, "m7": 160, "693": 160, "066a": 160, "614": 160, "0l7": 160, "25": 160, "25a": 160, "010": 160, "368l13": 160, "831v2": 160, "794c0": 160, "024": 160, "81": 160, "749": 160, "66": 160, "173": 160, "893": 160, "447": 160, "075": 160, "702": 160, "34": 160, "278": 160, "55": 160, "012": 160, "816": 160, "036a": 160, "133": 160, "494c": 160, "22": 160, "02": 160, "45": 160, "03": 160, "683": 160, "082": 160, "025": 160, "221": 160, "67": 160, "543": 160, "69": 160, "345": 160, "83": 160, "682": 160, "832v7": 160, "503l8": 160, "307": 160, "934a": 160, "0l4": 160, "28v1": 160, "663c": 160, "296": 160, "105": 160, "575": 160, "275": 160, "812": 160, "512": 160, "438": 160, "688": 160, "059": 160, "796v3a": 160, "75h": 160, "3a": 160, "75v": 160, "3c0": 160, "737": 160, "358": 160, "796": 160, "237": 160, "516": 160, "407": 160, "512v6": 160, "606l": 160, "443": 160, "684a": 160, "368l7": 160, "25zm2": 160, "583": 160, "5l8": 160, "428": 160, "416": 160, "572": 160, "5zm2": 160, "25c0": 160, "388": 160, "125": 160, "611": 160, "735a": 160, "704": 160, "203c": 160, "19": 160, "37": 160, "071": 160, "203": 160, "124": 160, "347": 160, "735v2": 160, "25h2": 160, "5v": 160, "25z": 160, "recip": 160, "subpackag": 162, "util": [162, 168, 169, 170, 174, 175, 216], "get_info": 162, "align": [163, 176], "modul": [163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176], "_public": 163, "bundlemin": 163, "cpd": 163, "crosscorr": 163, "expectmax": 163, "imaffin": 163, "imwarp": 163, "parzenhist": 163, "scalespac": 163, "streamlinear": 163, "streamwarp": 163, "sumsqdiff": 163, "vector_field": 163, "bunch": 163, "verbositylevel": 163, "syn_registr": 163, "paramet": [163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176], "register_dwi_to_templ": 163, "write_map": 163, "read_map": 163, "affine_registr": 163, "center_of_mass": [163, 174], "translat": 163, "rigid": 163, "rigid_isosc": 163, "rigid_sc": 163, "_method_dict": 163, "register_seri": 163, "register_dwi_seri": 163, "motion_correct": 163, "streamline_registr": 163, "determine_num_thread": [163, 166, 174], "distance_matrix_mdf": 163, "deformableregistr": 163, "attribut": [163, 164, 170, 172, 174, 175], "gaussian_kernel": 163, "low_rank_eigen": 163, "initialize_sigma2": 163, "lowrankq": 163, "compute_cc_backward_step_2d": 163, "compute_cc_backward_step_3d": 163, "compute_cc_forward_step_2d": 163, "compute_cc_forward_step_3d": 163, "precompute_cc_factors_2d": 163, "precompute_cc_factors_2d_test": 163, "precompute_cc_factors_3d": 163, "precompute_cc_factors_3d_test": 163, "compute_em_demons_step_2d": 163, "compute_em_demons_step_3d": 163, "compute_masked_class_stats_2d": 163, "compute_masked_class_stats_3d": 163, "quantize_positive_2d": 163, "quantize_positive_3d": 163, "affineinversionerror": 163, "affineinvalidvalueserror": 163, "affinemap": 163, "mutualinformationmetr": 163, "affineregistr": 163, "_transform_method": 163, "transform_centers_of_mass": 163, "transform_geometric_cent": 163, "transform_origin": 163, "diffeomorphicmap": 163, "diffeomorphicregistr": 163, "symmetricdiffeomorphicregistr": 163, "registrationstag": 163, "logger": [163, 164, 168, 169, 170, 171], "mult_aff": 163, "get_direction_and_spac": 163, "similaritymetr": 163, "ccmetric": 163, "emmetr": 163, "ssdmetric": 163, "v_cycle_2d": 163, "v_cycle_3d": 163, "parzenjointhistogram": 163, "compute_parzen_mi": 163, "cubic_splin": 163, "cubic_spline_deriv": 163, "sample_domain_regular": 163, "isotropicscalespac": 163, "streamlinedistancemetr": 163, "bundlemindistancemetr": 163, "bundlemindistancematrixmetr": 163, "bundlemindistanceasymmetricmetr": 163, "bundlesumdistancematrixmetr": 163, "jointbundlemindistancemetr": 163, "streamlinelinearregistr": 163, "streamlineregistrationmap": 163, "jointstreamlineregistrationmap": 163, "bundle_sum_dist": 163, "bundle_min_dist": 163, "bundle_min_distance_fast": 163, "bundle_min_distance_asymmetric_fast": 163, "remove_clusters_by_s": 163, "progressive_slr": 163, "slr_with_qbx": 163, "groupwise_slr": 163, "get_unique_pair": 163, "compose_matrix44": 163, "decompose_matrix44": 163, "average_bundle_length": 163, "find_miss": 163, "bundlewarp_vector_fil": 163, "bundlewarp_shape_analysi": 163, "compute_energy_ssd_2d": 163, "compute_energy_ssd_3d": 163, "compute_residual_displacement_field_ssd_2d": 163, "compute_residual_displacement_field_ssd_3d": 163, "compute_ssd_demons_step_2d": 163, "compute_ssd_demons_step_3d": 163, "iterate_residual_displacement_field_ssd_2d": 163, "iterate_residual_displacement_field_ssd_3d": 163, "solve_2d_symmetric_positive_definit": 163, "solve_3d_symmetric_positive_definit": 163, "affinetransform2d": 163, "affinetransform3d": 163, "rigidisoscalingtransform2d": 163, "rigidisoscalingtransform3d": 163, "rigidscalingtransform2d": 163, "rigidscalingtransform3d": 163, "rigidtransform2d": 163, "rigidtransform3d": 163, "rotationtransform2d": 163, "rotationtransform3d": 163, "scalingtransform2d": 163, "scalingtransform3d": 163, "translationtransform2d": 163, "translationtransform3d": 163, "compose_vector_fields_2d": 163, "compose_vector_fields_3d": 163, "create_circl": 163, "create_harmonic_fields_2d": 163, "create_harmonic_fields_3d": 163, "create_random_displacement_2d": 163, "create_random_displacement_3d": 163, "create_spher": 163, "downsample_displacement_field_2d": 163, "downsample_displacement_field_3d": 163, "downsample_scalar_field_2d": 163, "downsample_scalar_field_3d": 163, "invert_vector_field_fixed_point_2d": 163, "invert_vector_field_fixed_point_3d": 163, "is_valid_affin": 163, "reorient_vector_field_2d": 163, "reorient_vector_field_3d": 163, "resample_displacement_field_2d": 163, "resample_displacement_field_3d": 163, "simplify_warp_function_2d": 163, "simplify_warp_function_3d": 163, "sparse_gradi": 163, "transform_2d_affin": 163, "transform_2d_affine_nn": 163, "transform_3d_affin": 163, "transform_3d_affine_nn": 163, "warp_2d": 163, "warp_2d_nn": 163, "warp_3d": 163, "warp_3d_nn": 163, "warp_coordinates_2d": 163, "warp_coordinates_3d": 163, "core": 164, "geometri": 164, "graph": 164, "histeq": 164, "interpol": 164, "ndindex": 164, "onetim": 164, "rng": 164, "sphere_stat": 164, "subdivide_octahedron": 164, "wavelet": 164, "_tuple2ax": 164, "sphere2cart": 164, "cart2spher": 164, "sph2latlon": 164, "normalized_vector": 164, "vector_norm": 164, "rodrigues_axis_rot": 164, "nearest_pos_semi_def": 164, "sphere_dist": 164, "see": [164, 165, 166, 167, 168, 170, 172, 174], "also": [164, 165, 166, 167, 168, 170, 172, 174], "cart_dist": 164, "vector_cosin": 164, "lambert_equal_area_projection_polar": 164, "lambert_equal_area_projection_cart": 164, "euler_matrix": 164, "compose_matrix": 164, "decompose_matrix": 164, "rais": [164, 165, 170, 174], "circumradiu": 164, "vec2vec_rotmat": 164, "compose_transform": 164, "perpendicular_direct": 164, "dist_to_corn": 164, "is_hemispher": 164, "gradientt": 164, "unique_bv": 164, "b0_threshold_empty_gradient_messag": 164, "b0_threshold_update_slicing_messag": 164, "mask_non_weighted_bv": 164, "gradient_table_from_bvals_bvec": 164, "gradient_table_from_qvals_bvec": 164, "gradient_table_from_gradient_strength_bvec": 164, "gradient_t": 164, "reorient_bvec": 164, "generate_bvec": 164, "round_bval": 164, "unique_bvals_toler": 164, "get_bval_indic": 164, "unique_bvals_magnitud": 164, "check_multi_b": 164, "btens_to_param": 164, "params_to_bten": 164, "ornt_map": 164, "reorient_vector": 164, "reorient_on_axi": 164, "orientation_from_str": 164, "orientation_to_str": 164, "nearestneighborinterpol": 164, "outsideimag": 164, "trilinearinterpol": 164, "interp_rbf": 164, "interpolate_scalar_2d": 164, "interpolate_scalar_3d": 164, "interpolate_scalar_nn_2d": 164, "interpolate_scalar_nn_3d": 164, "interpolate_vector_2d": 164, "interpolate_vector_3d": 164, "map_coordinates_trilinear_iso": 164, "nearestneighbor_interpol": 164, "trilinear_interp": 164, "trilinear_interpolate4d": 164, "resetmixin": 164, "onetimeproperti": 164, "auto_attr": 164, "sklearnlinearsolv": 164, "nonnegativeleastsquar": 164, "positivedefiniteleastsquar": 164, "spdot": 164, "sparse_nnl": 164, "wichmannhill2006": 164, "wichmannhill1982": 164, "lecuy": 164, "hemispher": [164, 166], "faces_from_sphere_vertic": 164, "unique_edg": 164, "unique_set": 164, "disperse_charg": [164, 166], "fibonacci_spher": 164, "disperse_charges_alt": 164, "euler_characteristic_check": 164, "octahedron_vertic": 164, "octahedron_fac": 164, "icosahedron_vertic": 164, "icosahedron_fac": 164, "unit_octahedron": 164, "unit_icosahedron": 164, "hemi_icosahedron": 164, "random_uniform_on_spher": 164, "eigenstat": 164, "compare_orientation_set": 164, "angular_similar": 164, "create_unit_spher": 164, "create_unit_hemispher": 164, "cshift3d": 164, "permutationinvers": 164, "afb3d_a": 164, "sfb3d_a": 164, "sfb3d": 164, "afb3d": 164, "dwt3d": 164, "idwt3d": 164, "fetcher": 165, "dataerror": 165, "loads_compat": 165, "data_dir": 165, "get_sim_voxel": 165, "get_skeleton": 165, "get_spher": [165, 166], "default_spher": 165, "small_spher": 165, "get_3shell_gtab": 165, "get_isbi2013_2shell_gtab": 165, "get_gtab_taiwan_dsi": 165, "dsi_voxel": 165, "dsi_deconv_voxel": 165, "mrtrix_spherical_funct": 165, "get_cmap": 165, "two_cingulum_bundl": 165, "matlab_life_result": 165, "load_sdp_constraint": 165, "copyfileobj_withprogress": 165, "check_md5": 165, "fetch_data": 165, "fetch_isbi2013_2shel": 165, "fetch_stanford_label": 165, "fetch_sherbrooke_3shel": 165, "fetch_stanford_hardi": 165, "fetch_resdnn_weight": 165, "fetch_synb0_weight": 165, "fetch_synb0_test": 165, "fetch_deepn4_weight": 165, "fetch_deepn4_test": 165, "fetch_evac_weight": 165, "fetch_evac_test": 165, "fetch_stanford_t1": 165, "fetch_stanford_pve_map": 165, "fetch_stanford_track": 165, "fetch_taiwan_ntu_dsi": 165, "fetch_syn_data": 165, "fetch_mni_templ": 165, "fetch_scil_b0": 165, "fetch_bundles_2_subject": 165, "fetch_ivim": 165, "fetch_cfin_multib": 165, "fetch_file_format": 165, "fetch_bundle_atlas_hcp842": 165, "fetch_target_tractogram_hcp": 165, "fetch_bundle_fa_hcp": 165, "fetch_qtdmri_test_retest_2subject": 165, "fetch_gold_standard_io": 165, "fetch_qte_lte_pt": 165, "fetch_cti_rat1": 165, "fetch_fury_surfac": 165, "fetch_dib_70_lte_pte_st": 165, "fetch_dib_217_lte_pte_st": 165, "fetch_ptt_minimal_dataset": 165, "fetch_bundle_warp_dataset": 165, "get_fnam": 165, "read_qtdmri_test_retest_2subject": 165, "read_scil_b0": 165, "read_siemens_scil_b0": 165, "read_isbi2013_2shel": 165, "read_sherbrooke_3shel": 165, "read_stanford_label": 165, "read_stanford_hardi": 165, "read_stanford_t1": 165, "read_stanford_pve_map": 165, "read_taiwan_ntu_dsi": 165, "read_syn_data": 165, "fetch_tissue_data": 165, "read_tissue_data": 165, "read_mni_templ": 165, "fetch_cenir_multib": 165, "read_cenir_multib": 165, "read_bundles_2_subject": 165, "read_ivim": 165, "read_cfin_dwi": 165, "read_cfin_t1": 165, "get_file_format": 165, "get_bundle_atlas_hcp842": 165, "get_two_hcp842_bundl": 165, "get_target_tractogram_hcp": 165, "read_qte_lte_pt": 165, "read_dib_70_lte_pte_st": 165, "read_dib_217_lte_pte_st": 165, "extract_example_tract": 165, "read_five_af_bundl": 165, "to_bids_descript": 165, "fetch_hcp": 165, "fetch_hbn": 165, "adaptive_soft_match": 166, "denspe": 166, "enhancement_kernel": 166, "nlmeans_block": 166, "noise_estim": 166, "non_local_mean": 166, "pca_noise_estim": 166, "shift_twist_convolut": 166, "add_padding_reflect": 166, "correspond_indic": 166, "nlmeans_3d": 166, "remove_pad": 166, "enhancementkernel": 166, "ceil": 166, "gettempdir": 166, "gibbs_remov": 166, "dimensionality_problem_messag": 166, "create_patch_radius_arr": 166, "compute_patch_s": 166, "compute_num_sampl": 166, "compute_suggested_patch_radiu": 166, "genpca": 166, "mppca": 166, "firdn": 166, "upfir": 166, "estimate_sigma": 166, "warn": [166, 174], "convolv": 166, "convolve_sf": 166, "sf_to_sh": [166, 170], "sh_to_sf": [166, 170], "bootstrap_direction_gett": 167, "closest_peak_direction_gett": 167, "pmf": 167, "probabilistic_direction_gett": 167, "ptt_direction_gett": 167, "bootdirectiongett": 167, "peak_direct": 167, "basedirectiongett": 167, "basepmfdirectiongett": 167, "closestpeakdirectiongett": 167, "pmfgendirectiongett": 167, "peaksandmetr": 167, "peak_directions_nl": 167, "peaks_from_model": 167, "reshape_peaks_for_visu": 167, "pmfgen": 167, "shcoeffpmfgen": 167, "simplepmfgen": 167, "deterministicmaximumdirectiongett": 167, "probabilisticdirectiongett": 167, "random": [167, 174], "pttdirectiongett": 167, "min_radius_curvature_from_angl": [167, 174], "io": [168, 176], "dpy": 168, "pickl": 168, "stateful_tractogram": 168, "vtk": 168, "read_bvals_bvec": 168, "load_nifti_data": 168, "load_nifti": 168, "save_nifti": 168, "save_qa_metr": 168, "load_peak": 168, "save_peak": 168, "peaks_to_nifti": 168, "save_pickl": 168, "load_pickl": 168, "origin": 168, "statefultractogram": 168, "set_sft_logger_level": 168, "save_tractogram": 168, "load_tractogram": 168, "load_gener": 168, "save_gener": 168, "load_trk": 168, "load_tck": 168, "load_trx": 168, "load_vtk": 168, "load_vtp": 168, "load_fib": 168, "load_dpi": 168, "save_trk": 168, "save_tck": 168, "save_trx": 168, "save_vtk": 168, "save_vtp": 168, "save_fib": 168, "save_dpi": 168, "load_pial": 168, "load_gifti": 168, "nifti1_symmat": 168, "make5d": 168, "decfa": 168, "decfa_to_float": 168, "is_reference_info_valid": 168, "split_name_with_gz": 168, "get_reference_info": 168, "is_header_compat": 168, "create_tractogram_head": 168, "create_nifti_head": 168, "save_buan_profiles_hdf5": 168, "read_img_arr_or_path": 168, "load_polydata": 168, "save_polydata": 168, "save_vtk_streamlin": 168, "load_vtk_streamlin": 168, "nn": [169, 176], "cnn_1d_denois": 169, "titl": 169, "cnn": 169, "deepn4": 169, "evac": 169, "histo_resdnn": 169, "synb0": 169, "cnn1ddenois": 169, "encoderblock": 169, "decoderblock": 169, "unet3d": 169, "block": 169, "channelsum": 169, "evacplu": 169, "prepare_img": 169, "init_model": 169, "historesdnn": 169, "singlelayerperceptron": 169, "multiplelayerpercepton": 169, "normal": 169, "unnorm": 169, "set_logger_level": 169, "transform_img": 169, "recover_img": 169, "correct_minor_error": 169, "reconst": [170, 176], "cach": 170, "cross_valid": 170, "csdeconv": 170, "cti": 170, "dki_micro": 170, "eudx_direction_gett": 170, "fwdti": 170, "gqi": 170, "mapmri": 170, "mcsd": 170, "multi_voxel": 170, "odf": 170, "qtdmri": 170, "quick_squash": 170, "recspe": 170, "sfm": 170, "shm": 170, "vec_val_sum": 170, "reconstmodel": 170, "reconstfit": 170, "coeff_of_determin": 170, "kfold_xval": 170, "axsymshrespons": 170, "constrainedsphericaldeconvmodel": 170, "constrainedsdtmodel": 170, "auto_respons": 170, "response_from_mask": 170, "estimate_respons": 170, "forward_sdt_deconv_mat": 170, "odf_deconv": 170, "odf_sh_to_sharp": 170, "mask_for_response_ssst": 170, "response_from_mask_ssst": 170, "auto_response_ssst": 170, "recursive_respons": 170, "fa_trace_to_lambda": 170, "correlationtensormodel": 170, "correlationtensorfit": 170, "from_qte_to_cti": 170, "multi_gaussian_k_from_c": 170, "split_cti_param": 170, "cti_predict": 170, "params_to_cti_param": 170, "ls_fit_cti": 170, "diffusionkurtosismodel": 170, "diffusionkurtosisfit": 170, "carlson_rf": 170, "carlson_rd": 170, "directional_diffus": 170, "directional_diffusion_vari": 170, "directional_kurtosi": 170, "apparent_kurtosis_coef": 170, "mean_kurtosi": 170, "radial_kurtosi": 170, "axial_kurtosi": 170, "kurtosis_maximum": 170, "mean_kurtosis_tensor": 170, "kurtosis_fractional_anisotropi": 170, "dki_predict": 170, "params_to_dki_param": 170, "ls_fit_dki": 170, "cls_fit_dki": 170, "wrotat": 170, "wrotate_el": 170, "wcon": 170, "split_dki_param": 170, "kurtosismicrostructuremodel": 170, "kurtosismicrostructuralfit": 170, "axonal_water_fract": 170, "diffusion_compon": 170, "dkimicro_predict": 170, "tortuos": 170, "diffusionspectrummodel": 170, "diffusionspectrumfit": 170, "diffusionspectrumdeconvmodel": 170, "diffusionspectrumdeconvfit": 170, "create_qspac": 170, "create_qt": 170, "hanning_filt": 170, "pdf_interp_coord": 170, "pdf_odf": 170, "half_to_full_qspac": 170, "project_hemisph_bvec": 170, "threshold_propag": 170, "gen_psf": 170, "lr_deconv": 170, "tensormodel": 170, "tensorfit": 170, "fractional_anisotropi": 170, "geodesic_anisotropi": 170, "mean_diffus": 170, "axial_diffus": 170, "radial_diffus": 170, "trace": 170, "color_fa": 170, "determin": 170, "isotrop": 170, "deviator": 170, "norm": 170, "mode": 170, "planar": 170, "apparent_diffusion_coef": 170, "tensor_predict": 170, "iter_fit_tensor": 170, "wls_fit_tensor": 170, "ols_fit_tensor": 170, "nlls_fit_tensor": 170, "restore_fit_tensor": 170, "_lt_indic": 170, "from_lower_triangular": 170, "_lt_row": 170, "_lt_col": 170, "lower_triangular": 170, "decompose_tensor": 170, "design_matrix": 170, "quantize_evec": 170, "eig_from_lo_tri": 170, "eudxdirectiongett": 170, "forecastmodel": 170, "forecastfit": 170, "find_signal_mean": 170, "forecast_error_func": 170, "psi_l": 170, "forecast_matrix": 170, "rho_matrix": 170, "lb_forecast": 170, "freewatertensormodel": 170, "freewatertensorfit": 170, "fwdti_predict": 170, "wls_iter": 170, "nls_iter": 170, "nls_fit_tensor": 170, "lower_triangular_to_choleski": 170, "cholesky_to_lower_triangular": 170, "generalizedqsamplingmodel": 170, "generalizedqsamplingfit": 170, "normalize_qa": 170, "squared_radial_compon": 170, "npa": 170, "equatorial_zone_vertic": 170, "polar_zone_vertic": 170, "upper_hemi_map": 170, "equatorial_maximum": 170, "patch_vertic": 170, "patch_maximum": 170, "odf_sum": 170, "patch_sum": 170, "triple_odf_maxima": 170, "ivimmodeltrr": 170, "ivimmodelvp": 170, "ivimfit": 170, "ivim_predict": 170, "f_d_star_predict": 170, "f_d_star_error": 170, "ivim_model_selector": 170, "mapmrimodel": 170, "mapmrifit": 170, "isotropic_scale_factor": 170, "mapmri_index_matrix": 170, "b_mat": 170, "b_mat_isotrop": 170, "mapmri_phi_1d": 170, "mapmri_phi_matrix": 170, "mapmri_psi_1d": 170, "mapmri_psi_matrix": 170, "mapmri_odf_matrix": 170, "mapmri_isotropic_phi_matrix": 170, "mapmri_isotropic_radial_signal_basi": 170, "mapmri_isotropic_m_mu_independ": 170, "mapmri_isotropic_m_mu_depend": 170, "mapmri_isotropic_psi_matrix": 170, "mapmri_isotropic_radial_pdf_basi": 170, "mapmri_isotropic_k_mu_independ": 170, "mapmri_isotropic_k_mu_depend": 170, "binomialfloat": 170, "mapmri_isotropic_odf_matrix": 170, "mapmri_isotropic_odf_sh_matrix": 170, "mapmri_isotropic_laplacian_reg_matrix": 170, "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix": 170, "mapmri_isotropic_index_matrix": 170, "create_rspac": 170, "delta": 170, "map_laplace_u": 170, "map_laplace_t": 170, "map_laplace_": 170, "mapmri_stu_reg_matric": 170, "mapmri_laplacian_reg_matrix": 170, "generalized_crossvalidation_arrai": 170, "generalized_crossvalid": 170, "gcv_cost_funct": 170, "multishellrespons": 170, "multishelldeconvmodel": 170, "msdeconvfit": 170, "qpfitter": 170, "multi_tissue_basi": 170, "solve_qp": 170, "multi_shell_fiber_respons": 170, "mask_for_response_msmt": 170, "response_from_mask_msmt": 170, "auto_response_msmt": 170, "meandiffusionkurtosismodel": 170, "meandiffusionkurtosisfit": 170, "mean_signal_bvalu": 170, "msk_from_awf": 170, "awf_from_msk": 170, "msdki_predict": 170, "wls_fit_msdki": 170, "multivoxelfit": 170, "callablearrai": 170, "multi_voxel_fit": 170, "odfmodel": 170, "odffit": 170, "gfa": 170, "minmax_norm": 170, "qtdmrimodel": 170, "qtdmrifit": 170, "qtdmri_to_mapmri_matrix": 170, "qtdmri_isotropic_to_mapmri_matrix": 170, "qtdmri_temporal_norm": 170, "qtdmri_mapmri_norm": 170, "qtdmri_mapmri_isotropic_norm": 170, "qtdmri_signal_matrix_": 170, "qtdmri_signal_matrix": 170, "qtdmri_eap_matrix": 170, "qtdmri_isotropic_signal_matrix_": 170, "qtdmri_isotropic_signal_matrix": 170, "qtdmri_eap_matrix_": 170, "qtdmri_isotropic_eap_matrix_": 170, "qtdmri_isotropic_eap_matrix": 170, "radial_basis_opt": 170, "angular_basis_opt": 170, "radial_basis_eap_opt": 170, "angular_basis_eap_opt": 170, "temporal_basi": 170, "qtdmri_index_matrix": 170, "qtdmri_isotropic_index_matrix": 170, "qtdmri_laplacian_reg_matrix": 170, "qtdmri_isotropic_laplacian_reg_matrix": 170, "part23_reg_matrix_q": 170, "part23_iso_reg_matrix_q": 170, "part4_reg_matrix_q": 170, "part4_iso_reg_matrix_q": 170, "part1_reg_matrix_tau": 170, "part23_reg_matrix_tau": 170, "part4_reg_matrix_tau": 170, "h": 170, "qtdmri_isotropic_sc": 170, "qtdmri_anisotropic_sc": 170, "design_matrix_spati": 170, "create_rt_space_grid": 170, "qtdmri_number_of_coeffici": 170, "l1_crossvalid": 170, "elastic_crossvalid": 170, "visualise_gradient_table_g_delta_rainbow": 170, "qtimodel": 170, "qtifit": 170, "from_3x3_to_6x1": 170, "from_6x1_to_3x3": 170, "from_6x6_to_21x1": 170, "from_21x1_to_6x6": 170, "cvxpy_1x6_to_3x3": 170, "cvxpy_1x21_to_6x6": 170, "dtd_covari": 170, "qti_sign": 170, "reduc": 170, "adj_to_countarr": 170, "argmax_from_adj": 170, "argmax_from_countarr": 170, "le_to_odf": 170, "local_maxima": 170, "proc_reco_arg": 170, "remove_similar_vertic": 170, "search_descend": 170, "sum_on_blocks_1d": 170, "rumbasdmodel": 170, "rumbafit": 170, "rumba_deconv": 170, "mbessel_ratio": 170, "generate_kernel": 170, "rumba_deconv_glob": 170, "isotropicmodel": 170, "isotropicfit": 170, "exponentialisotropicmodel": 170, "exponentialisotropicfit": 170, "sparsefasciclemodel": 170, "sparsefasciclefit": 170, "sfm_design_matrix": 170, "sphharmmodel": 170, "qballbasemodel": 170, "sphharmfit": 170, "csaodfmodel": 170, "opdtmodel": 170, "qballmodel": 170, "residualbootstrapwrapp": 170, "forward_sdeconv_mat": 170, "sh_to_rh": 170, "gen_dirac": 170, "spherical_harmon": 170, "real_sph_harm": 170, "real_sh_tournier_from_index": 170, "real_sh_descoteaux_from_index": 170, "real_sh_tourni": 170, "real_sh_descoteaux": 170, "real_sym_sh_mrtrix": 170, "real_sym_sh_basi": 170, "sph_harm_ind_list": 170, "order_from_ncoef": 170, "smooth_pinv": 170, "lazy_index": 170, "normalize_data": 170, "hat": 170, "lcr_matrix": 170, "bootstrap_data_arrai": 170, "bootstrap_data_voxel": 170, "sh_to_sf_matrix": 170, "calculate_max_ord": 170, "anisotropic_pow": 170, "convert_sh_to_full_basi": 170, "convert_sh_from_legaci": 170, "convert_sh_to_legaci": 170, "convert_sh_descoteaux_tourni": 170, "shoremodel": 170, "shorefit": 170, "shore_matrix": 170, "shore_matrix_pdf": 170, "shore_matrix_odf": 170, "l_shore": 170, "n_shore": 170, "shore_indic": 170, "shore_ord": 170, "dki_design_matrix": 170, "cti_design_matrix": 170, "convert_tensor": 170, "vec_val_vect": 170, "clustering_algorithm": 171, "clusteringspe": 171, "cythonutil": 171, "featurespe": 171, "fss": 171, "metricspe": 171, "mrf": 171, "check_rang": 171, "bundle_adjac": 171, "ba_analysi": 171, "cluster_bundl": 171, "bundle_shape_similar": 171, "clustercentroid": 171, "clustermap": 171, "clustermapcentroid": 171, "quickbundlesx": 171, "treeclust": 171, "treeclustermap": 171, "qbx_and_merg": 171, "dtype": 171, "clusters_centroid2clustermap_centroid": 171, "peek": 171, "clusterscentroid": 171, "evaluate_aabb_check": 171, "arclengthfeatur": 171, "centerofmassfeatur": 171, "cythonfeatur": 171, "identityfeatur": 171, "midpointfeatur": 171, "resamplefeatur": 171, "vectorofendpointsfeatur": 171, "infer_shap": 171, "faststreamlinesearch": 171, "nearest_from_matrix_row": 171, "nearest_from_matrix_col": 171, "multi_median": 171, "applymask": 171, "bounding_box": 171, "crop": 171, "segment_from_cfa": 171, "clean_cc_mask": 171, "mdf": 171, "mean_manhattan_dist": 171, "mean_euclidean_dist": 171, "averagepointwiseeuclideanmetr": 171, "cosinemetr": 171, "cythonmetr": 171, "minimumaveragedirectflipmetr": 171, "sumpointwiseeuclideanmetr": 171, "dist": 171, "distance_matrix": 171, "constantobservationmodel": 171, "iteratedconditionalmod": 171, "otsu": 171, "upper_bound_by_r": 171, "upper_bound_by_perc": 171, "tissueclassifierhmrf": 171, "sim": 172, "phantom": 172, "voxel": 172, "add_nois": 172, "diff2eigenvector": 172, "orbital_phantom": 172, "diffusion_ev": 172, "sticks_and_bal": 172, "callaghan_perpendicular": 172, "gaussian_parallel": 172, "cylinders_and_ball_soderman": 172, "single_tensor": 172, "multi_tensor": 172, "multi_tensor_dki": 172, "kurtosis_el": 172, "dki_sign": 172, "single_tensor_odf": 172, "all_tensor_evec": 172, "multi_tensor_odf": 172, "single_tensor_rtop": 172, "multi_tensor_rtop": 172, "single_tensor_pdf": 172, "multi_tensor_pdf": 172, "single_tensor_msd": 172, "multi_tensor_msd": 172, "stat": [173, 176], "peak_valu": 173, "anatomical_measur": 173, "assignment_map": 173, "gaussian_weight": 173, "afq_profil": 173, "_util": 174, "direction_gett": 174, "distanc": 174, "fbcmeasur": 174, "learn": 174, "local_track": 174, "localtrack": 174, "mesh": 174, "propspe": 174, "stopping_criterion": 174, "streamlinespe": 174, "vox2track": 174, "directiongett": 174, "add_3vec": 174, "approx_polygon_track": 174, "approximate_mdl_trajectori": 174, "bundles_distances_mam": 174, "bundles_distances_mdf": 174, "cut_plan": 174, "inner_3vec": 174, "intersect_segment_cylind": 174, "larch_3merg": 174, "larch_3split": 174, "lee_angle_dist": 174, "lee_perpendicular_dist": 174, "local_skeleton_clust": 174, "local_skeleton_clustering_3pt": 174, "mam_dist": 174, "minimum_closest_dist": 174, "most_similar_track_mam": 174, "mul_3vec": 174, "norm_3vec": 174, "normalized_3vec": 174, "point_segment_sq_dist": 174, "point_track_sq_distance_check": 174, "sub_3vec": 174, "track_dist_3pt": 174, "track_roi_intersection_check": 174, "kdtree": 174, "interp1d": 174, "compute_rfbc": 174, "min_moving_averag": 174, "detect_corresponding_track": 174, "detect_corresponding_tracks_plu": 174, "lifesignalmak": 174, "fibermodel": 174, "fiberfit": 174, "streamline_gradi": 174, "grad_tensor": 174, "streamline_tensor": 174, "streamline_sign": 174, "voxel2streamlin": 174, "particlefilteringtrack": 174, "pft_tracker": 174, "random_coordinates_from_surfac": 174, "seeds_from_surface_coordin": 174, "triangles_area": 174, "vertices_to_triangles_valu": 174, "wind": 174, "byte": 174, "downsampl": 174, "magn": 174, "frenet_serret": 174, "mean_curvatur": 174, "mean_orient": 174, "generate_combin": 174, "longest_track_bundl": 174, "intersect_spher": 174, "inside_spher": 174, "inside_sphere_point": 174, "spline": 174, "startpoint": 174, "arbitrarypoint": 174, "principal_compon": 174, "midpoint2point": 174, "eudx_both_direct": 174, "ndarray_offset": 174, "actstoppingcriterion": 174, "anatomicalstoppingcriterion": 174, "binarystoppingcriterion": 174, "cmcstoppingcriterion": 174, "stoppingcriterion": 174, "streamlinestatu": 174, "thresholdstoppingcriterion": 174, "unlist_streamlin": 174, "relist_streamlin": 174, "center_streamlin": 174, "deform_streamlin": 174, "transform_streamlin": 174, "select_random_set_of_streamlin": 174, "select_by_roi": 174, "cluster_confid": 174, "orient_by_roi": 174, "orient_by_streamlin": 174, "values_from_volum": 174, "nbyte": 174, "compress_streamlin": 174, "set_number_of_point": 174, "density_map": 174, "connectivity_matrix": 174, "ndbincount": 174, "reduce_label": 174, "subseg": 174, "seeds_from_mask": 174, "random_seeds_from_mask": 174, "target": 174, "target_line_bas": 174, "streamline_near_roi": 174, "near_roi": 174, "unique_row": 174, "transform_tracking_output": 174, "reduce_roi": 174, "path_length": 174, "max_angle_from_curvatur": 174, "streamline_map": 174, "track_count": 174, "viz": [175, 176], "gmem": 175, "horizon": 175, "app": 175, "tab": 175, "panel": 175, "plot": 175, "project": 175, "regtool": 175, "globalhorizon": 175, "horizonuiel": 175, "horizontab": 175, "tabmanag": 175, "build_label": 175, "build_slid": 175, "build_checkbox": 175, "build_switch": 175, "color_single_slid": 175, "color_double_slid": 175, "clusterstab": 175, "peakstab": 175, "roistab": 175, "slicestab": 175, "surfacetab": 175, "check_img_shap": 175, "check_img_dtyp": 175, "show_ellipsi": 175, "unpack_imag": 175, "unpack_surfac": 175, "is_binary_imag": 175, "clustersvisu": 175, "slicesvisu": 175, "surfacevisu": 175, "slicer_panel": 175, "compare_map": 175, "compare_qti_map": 175, "bundle_shape_profil": 175, "sph_project": 175, "simple_plot": 175, "overlay_imag": 175, "draw_lattice_2d": 175, "plot_2d_diffeomorphic_map": 175, "plot_slic": 175, "overlay_slic": 175, "show_bundl": 175, "viz_two_bundl": 175, "viz_vector_field": 175, "viz_displacement_mag": 175, "cli": 176, "combined_workflow": 176, "docstring_pars": 176, "flow_runn": 176, "multi_io": 176, "resliceflow": 176, "slrwithqbxflow": 176, "imageregistrationflow": 176, "applytransformflow": 176, "synregistrationflow": 176, "motioncorrectionflow": 176, "bundlewarpflow": 176, "check_dimens": 176, "introspectiveargumentpars": 176, "get_args_default": 176, "none_or_dtyp": 176, "combinedworkflow": 176, "patch2selfflow": 176, "nlmeansflow": 176, "lpcaflow": 176, "mppcaflow": 176, "gibbsringingflow": 176, "reader": 176, "numpydocstr": 176, "dedent_lin": 176, "get_level": 176, "run_flow": 176, "ioinfoflow": 176, "fetchflow": 176, "splitflow": 176, "concatenatetractogramflow": 176, "convertshflow": 176, "converttensorsflow": 176, "converttractogramflow": 176, "maskflow": 176, "ioiter": 176, "common_start": 176, "slash_to_und": 176, "connect_output_path": 176, "concatenate_input": 176, "basename_without_extens": 176, "io_iter": 176, "io_iterator_": 176, "evacplusflow": 176, "reconstmapmriflow": 176, "reconstdtiflow": 176, "reconstdsiflow": 176, "reconstcsdflow": 176, "reconstcsaflow": 176, "reconstdkiflow": 176, "reconstivimflow": 176, "reconstrumbaflow": 176, "medianotsuflow": 176, "recobundlesflow": 176, "labelsbundlesflow": 176, "snrinccflow": 176, "bundleanalysistractometryflow": 176, "linearmixedmodelsflow": 176, "bundleshapeanalysi": 176, "buan_bundle_profil": 176, "localfibertrackingpamflow": 176, "pftrackingpamflow": 176, "horizonflow": 176, "dipy_align_affin": 178, "argument": [178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "option": [178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "dipy_align_syn": 179, "dipy_apply_transform": 180, "dipy_buan_lmm": 181, "dipy_buan_profil": 182, "dipy_buan_shap": 183, "dipy_bundlewarp": 184, "dipy_concatenate_tractogram": 185, "dipy_convert_tensor": 186, "dipy_convert_tractogram": 187, "dipy_correct_mot": 188, "dipy_denoise_lpca": 189, "dipy_denoise_mppca": 190, "dipy_denoise_nlmean": 191, "dipy_denoise_patch2self": 192, "dipy_evac_plu": 193, "dipy_fetch": 194, "dipy_fit_csa": 195, "dipy_fit_csd": 196, "dipy_fit_dki": 197, "dipy_fit_dsi": 198, "dipy_fit_dti": 199, "dipy_fit_ivim": 200, "dipy_fit_mapmri": 201, "dipy_gibbs_ring": 202, "dipy_horizon": 203, "dipy_info": 204, "dipy_labelsbundl": 205, "dipy_mask": 206, "dipy_median_otsu": 207, "dipy_recobundl": 208, "dipy_reslic": 209, "dipy_sh_convert_mrtrix": 210, "dipy_slr": 211, "dipy_snr_in_cc": 212, "dipy_split": 213, "dipy_track": 214, "dipy_track_pft": 215, "support": [239, 252], "subscrib": 240, "dii": 241, "about": 241, "b": [241, 242], "matrix": [241, 242], "siemen": [241, 242], "dicom": [241, 242], "what": [241, 253], "generalis": 243, "concept": 244, "coordin": 246, "term": 246, "physic": 246, "convent": 246, "matlab": 246, "next": 250, "pip": 252, "osx": 252, "contact": 252, "u": 252, "common": 252, "problem": 252, "multipl": 252, "altern": 252, "memori": 252, "issu": 252, "i": 253, "mission": 254, "statement": 254, "check_peak_s": 175, "peakactor": 175, "peaksvisu": 175}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"API changes": [[0, "api-changes"]], "DIPY 1.9.0 changes": [[0, "dipy-1-9-0-changes"]], "DIPY 1.8.0 changes": [[0, "dipy-1-8-0-changes"]], "DIPY 1.7.0 changes": [[0, "dipy-1-7-0-changes"]], "DIPY 1.6.0 changes": [[0, "dipy-1-6-0-changes"]], "DIPY 1.5.0 changes": [[0, "dipy-1-5-0-changes"]], "DIPY 1.4.1 changes": [[0, "dipy-1-4-1-changes"]], "DIPY 1.4.0 changes": [[0, "dipy-1-4-0-changes"]], "DIPY 1.3.0 changes": [[0, "dipy-1-3-0-changes"]], "DIPY 1.2.0 changes": [[0, "dipy-1-2-0-changes"]], "DIPY 1.1.1 changes": [[0, "dipy-1-1-1-changes"]], "DIPY 1.0.0 changes": [[0, "dipy-1-0-0-changes"]], "DIPY 0.16 Changes": [[0, "dipy-0-16-changes"]], "DIPY 0.15 Changes": [[0, "dipy-0-15-changes"]], "DIPY 0.14 Changes": [[0, "dipy-0-14-changes"]], "DIPY 0.13 Changes": [[0, "dipy-0-13-changes"]], "DIPY 0.12 Changes": [[0, "dipy-0-12-changes"]], "DIPY 0.10 Changes": [[0, "dipy-0-10-changes"]], "DIPY 0.9 Changes": [[0, "dipy-0-9-changes"]], "DIPY 0.8 Changes": [[0, "dipy-0-8-changes"]], "Changes between 0.7.1 and 0.6": [[0, "changes-between-0-7-1-and-0-6"]], "Publications": [[1, "publications"]], "A note on citing our work": [[1, "a-note-on-citing-our-work"]], "\ud83d\ude80 DIPY Benchmarks \ud83d\udcca": [[2, "dipy-benchmarks"]], "Prerequisites \u2699\ufe0f": [[2, "prerequisites"]], "Getting Started \ud83c\udfc3\u200d\u2642\ufe0f": [[2, "getting-started"]], "Running Benchmarks \ud83d\udcc8": [[2, "running-benchmarks"]], "Comparing Results \ud83d\udcca": [[2, "comparing-results"]], "Benchmarking Versions \ud83d\udcbb": [[2, "benchmarking-versions"]], "Contributing \ud83e\udd1d": [[2, "contributing"]], "Writing Benchmarks \u270f\ufe0f": [[2, "writing-benchmarks"]], "Embrace the Speed! \u23e9": [[2, "embrace-the-speed"]], "\ud83d\udcbb DIPY Coding Style Guideline": [[3, "dipy-coding-style-guideline"]], "Coding style": [[3, "coding-style"]], "Imports": [[3, "imports"], [3, "id1"]], "Cython coding style": [[3, "cython-coding-style"]], "Variable declaration": [[3, "variable-declaration"]], "Using C libraries": [[3, "using-c-libraries"]], "Error return values": [[3, "error-return-values"]], "Pointers and references": [[3, "pointers-and-references"]], "Casting": [[3, "casting"]], "Loops": [[3, "loops"]], "Documentation": [[3, "documentation"], [19, "documentation"]], "References": [[3, "references"], [22, "references"], [24, "references"], [25, "references"], [29, "references"], [31, "references"], [32, "references"], [34, "references"], [35, "references"], [37, "references"], [38, "references"], [39, "references"], [40, "references"], [50, "references"], [51, "references"], [52, "references"], [53, "references"], [54, "references"], [55, "references"], [56, "references"], [58, "references"], [59, "references"], [62, "references"], [66, "references"], [67, "references"], [69, "references"], [70, "references"], [71, "references"], [72, "references"], [73, "references"], [74, "references"], [77, "references"], [78, "references"], [79, "references"], [80, "references"], [81, "references"], [82, "references"], [83, "references"], [84, "references"], [85, "references"], [86, "references"], [87, "references"], [88, "references"], [89, "references"], [90, "references"], [92, "references"], [93, "references"], [94, "references"], [96, "references"], [97, "references"], [98, "references"], [99, "references"], [100, "references"], [104, "references"], [105, "references"], [106, "references"], [108, "references"], [109, "references"], [111, "references"], [112, "references"], [113, "references"], [114, "references"], [116, "references"], [119, "references"], [121, "references"], [123, "references"], [124, "references"], [125, "references"], [126, "references"], [128, "references"], [134, "references"], [146, "references"], [148, "references"], [149, "references"], [151, "references"], [152, "references"], [154, "references"], [155, "references"], [156, "references"], [157, "references"], [163, "references"], [163, "id42"], [163, "id47"], [163, "id55"], [163, "id60"], [163, "id65"], [163, "id71"], [163, "id149"], [163, "id155"], [163, "id160"], [163, "id164"], [163, "id205"], [163, "id230"], [163, "id253"], [163, "id258"], [163, "id262"], [163, "id276"], [163, "id289"], [163, "id292"], [163, "id295"], [163, "id298"], [164, "references"], [164, "id17"], [164, "id52"], [164, "id82"], [164, "id96"], [164, "id140"], [165, "references"], [166, "references"], [166, "id7"], [166, "id25"], [166, "id39"], [166, "id51"], [166, "id58"], [166, "id63"], [166, "id67"], [166, "id72"], [166, "id80"], [166, "id85"], [166, "id89"], [166, "id98"], [166, "id102"], [166, "id110"], [166, "id117"], [167, "references"], [167, "id32"], [168, "references"], [169, "references"], [169, "id33"], [169, "id44"], [169, "id78"], [170, "references"], [170, "id91"], [170, "id102"], [170, "id114"], [170, "id122"], [170, "id145"], [170, "id150"], [170, "id158"], [170, "id181"], [170, "id194"], [170, "id212"], [170, "id223"], [170, "id230"], [170, "id238"], [170, "id244"], [170, "id250"], [170, "id268"], [170, "id281"], [170, "id293"], [170, "id302"], [170, "id306"], [170, "id311"], [170, "id315"], [170, "id326"], [170, "id332"], [170, "id337"], [170, "id341"], [170, "id344"], [170, "id348"], [170, "id352"], [170, "id356"], [170, "id360"], [170, "id365"], [170, "id370"], [170, "id377"], [170, "id393"], [170, "id416"], [170, "id427"], [170, "id438"], [170, "id447"], [170, "id454"], [170, "id491"], [170, "id504"], [170, "id510"], [170, "id516"], [170, "id526"], [170, "id533"], [170, "id541"], [170, "id570"], [170, "id589"], [170, "id594"], [170, "id606"], [170, "id611"], [170, "id617"], [170, "id630"], [170, "id639"], [170, "id651"], [170, "id679"], [170, "id700"], [170, "id711"], [170, "id716"], [170, "id721"], [170, "id726"], [170, "id730"], [170, "id734"], [170, "id738"], [170, "id743"], [170, "id748"], [170, "id753"], [170, "id758"], [170, "id763"], [170, "id768"], [170, "id773"], [170, "id778"], [170, "id782"], [170, "id786"], [170, "id790"], [170, "id794"], [170, "id798"], [170, "id802"], [170, "id806"], [170, "id810"], [170, "id814"], [170, "id821"], [170, "id829"], [170, "id835"], [170, "id840"], [170, "id845"], [170, "id852"], [170, "id857"], [170, "id862"], [170, "id867"], [170, "id872"], [170, "id879"], [170, "id887"], [170, "id912"], [170, "id915"], [170, "id922"], [170, "id930"], [170, "id938"], [170, "id945"], [170, "id953"], [170, "id959"], [170, "id972"], [170, "id976"], [170, "id980"], [170, "id986"], [170, "id992"], [170, "id997"], [170, "id1002"], [170, "id1008"], [170, "id1014"], [170, "id1018"], [170, "id1021"], [170, "id1027"], [170, "id1029"], [170, "id1031"], [170, "id1033"], [170, "id1035"], [170, "id1037"], [170, "id1039"], [170, "id1041"], [170, "id1043"], [170, "id1046"], [170, "id1049"], [170, "id1053"], [170, "id1059"], [170, "id1123"], [170, "id1185"], [170, "id1189"], [170, "id1194"], [170, "id1204"], [170, "id1224"], [170, "id1231"], [170, "id1238"], [170, "id1245"], [170, "id1257"], [170, "id1265"], [170, "id1275"], [170, "id1283"], [170, "id1286"], [170, "id1291"], [170, "id1295"], [171, "references"], [171, "id15"], [171, "id21"], [171, "id25"], [171, "id28"], [171, "id32"], [171, "id36"], [171, "id69"], [171, "id76"], [171, "id91"], [171, "id96"], [171, "id135"], [171, "id140"], [171, "id164"], [172, "references"], [172, "id20"], [172, "id26"], [172, "id31"], [172, "id39"], [172, "id44"], [172, "id54"], [172, "id60"], [172, "id64"], [172, "id68"], [172, "id77"], [172, "id81"], [172, "id85"], [172, "id89"], [172, "id93"], [172, "id97"], [173, "references"], [173, "id8"], [174, "references"], [174, "id144"], [174, "id217"], [174, "id221"], [174, "id243"], [174, "id264"], [174, "id297"], [174, "id317"], [174, "id320"], [175, "references"], [175, "id3"], [176, "references"], [176, "id12"], [176, "id19"], [176, "id21"], [176, "id25"], [176, "id31"], [176, "id35"], [176, "id57"], [176, "id61"], [176, "id69"], [176, "id72"], [176, "id76"], [176, "id81"], [176, "id84"], [176, "id88"], [176, "id91"], [176, "id95"], [176, "id101"], [176, "id104"], [176, "id107"], [176, "id109"], [176, "id111"], [178, "references"], [179, "references"], [180, "references"], [181, "references"], [182, "references"], [183, "references"], [184, "references"], [185, "references"], [186, "references"], [187, "references"], [188, "references"], [189, "references"], [190, "references"], [191, "references"], [192, "references"], [193, "references"], [194, "references"], [195, "references"], [196, "references"], [197, "references"], [198, "references"], [199, "references"], [200, "references"], [201, "references"], [202, "references"], [203, "references"], [204, "references"], [205, "references"], [206, "references"], [207, "references"], [208, "references"], [209, "references"], [210, "references"], [211, "references"], [212, "references"], [213, "references"], [214, "references"], [215, "references"], [245, "references"]], "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-git-commit sd-text-info\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M10.5 7.75a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm1.43.75a4.002 4.002 0 01-7.86 0H.75a.75.75 0 110-1.5h3.32a4.001 4.001 0 017.86 0h3.32a.75.75 0 110 1.5h-3.32z\"></path></svg> Commit message codes": [[4, "svg-version-1-1-width-1-0em-height-1-0em-class-sd-octicon-sd-octicon-git-commit-sd-text-info-viewbox-0-0-16-16-aria-hidden-true-path-fill-rule-evenodd-d-m10-5-7-75a2-5-2-5-0-11-5-0-2-5-2-5-0-015-0zm1-43-75a4-002-4-002-0-01-7-86-0h-75a-75-75-0-110-1-5h3-32a4-001-4-001-0-017-86-0h3-32a-75-75-0-110-1-5h-3-32z-path-svg-commit-message-codes"]], "Configure git": [[5, "configure-git"]], "Overview": [[5, "overview"], [6, "overview"], [11, "overview"], [16, "overview"], [17, "overview"], [43, "overview"]], "In detail": [[5, "in-detail"], [11, "in-detail"], [16, "in-detail"], [17, "in-detail"]], "user.name and user.email": [[5, "user-name-and-user-email"]], "Aliases": [[5, "aliases"]], "Editor": [[5, "editor"]], "Merging": [[5, "merging"]], "Fancy log output": [[5, "fancy-log-output"]], "Development workflow": [[6, "development-workflow"]], "Workflow summary": [[6, "workflow-summary"]], "Consider deleting your master branch": [[6, "consider-deleting-your-master-branch"]], "Update the mirror of trunk": [[6, "update-the-mirror-of-trunk"]], "Make a new feature branch": [[6, "make-a-new-feature-branch"]], "The editing workflow": [[6, "the-editing-workflow"]], "In more detail": [[6, "in-more-detail"]], "Ask for your changes to be reviewed or merged": [[6, "ask-for-your-changes-to-be-reviewed-or-merged"]], "Some other things you might want to do": [[6, "some-other-things-you-might-want-to-do"]], "Delete a branch on github": [[6, "delete-a-branch-on-github"]], "Several people sharing a single repository": [[6, "several-people-sharing-a-single-repository"]], "Explore your repository": [[6, "explore-your-repository"]], "Rebasing on trunk": [[6, "rebasing-on-trunk"]], "Recovering from mess-ups": [[6, "recovering-from-mess-ups"]], "Rewriting commit history": [[6, "rewriting-commit-history"]], "Two and three dots in difference specs": [[7, "two-and-three-dots-in-difference-specs"]], "Following the latest source": [[8, "following-the-latest-source"]], "Get the local copy of the code": [[8, "get-the-local-copy-of-the-code"]], "Updating the code": [[8, "updating-the-code"]], "Making your own copy (fork) of DIPY": [[9, "making-your-own-copy-fork-of-dipy"]], "Set up and configure a github account": [[9, "set-up-and-configure-a-github-account"]], "Create your own forked copy of DIPY": [[9, "create-your-own-forked-copy-of-dipy"]], "Git for development": [[10, "git-for-development"]], "Install git": [[11, "install-git"]], "Introduction": [[12, "introduction"], [20, "introduction"]], "git resources": [[13, "git-resources"]], "Tutorials and summaries": [[13, "tutorials-and-summaries"]], "Advanced git workflow": [[13, "advanced-git-workflow"]], "Manual pages online": [[13, "manual-pages-online"]], "Working with DIPY source code": [[14, "working-with-dipy-source-code"]], "Maintainer workflow": [[15, "maintainer-workflow"]], "Integrating changes": [[15, "integrating-changes"]], "A few commits": [[15, "a-few-commits"]], "A long series of commits": [[15, "a-long-series-of-commits"]], "Check the history": [[15, "check-the-history"]], "Push to trunk": [[15, "push-to-trunk"]], "Making a patch": [[16, "making-a-patch"]], "Making patches": [[16, "making-patches"]], "Moving from patching to development": [[16, "moving-from-patching-to-development"]], "Set up your fork": [[17, "set-up-your-fork"]], "Clone your fork": [[17, "clone-your-fork"]], "Linking your repository to the upstream repo": [[17, "linking-your-repository-to-the-upstream-repo"]], "DIPY Developer Guide": [[18, "dipy-developer-guide"]], "Installing from source": [[19, "installing-from-source"]], "Getting the source": [[19, "getting-the-source"]], "Building and installing": [[19, "building-and-installing"], [19, "id1"]], "Install from source (all operating systems - recommended)": [[19, "install-from-source-all-operating-systems-recommended"]], "Install from source for Unix (e.g Linux, macOS)": [[19, "install-from-source-for-unix-e-g-linux-macos"]], "Ubuntu/Debian": [[19, "ubuntu-debian"]], "Fedora / Mandriva maybe Redhat": [[19, "fedora-mandriva-maybe-redhat"]], "Windows": [[19, "windows"], [252, "windows"]], "macOS": [[19, "macos"]], "OpenMP with macOS": [[19, "openmp-with-macos"]], "Under Anaconda": [[19, "under-anaconda"]], "Under Homebrew Python or python.org Python": [[19, "under-homebrew-python-or-python-org-python"]], "Testing": [[19, "testing"]], "Tip": [[19, "tip"]], "Troubleshooting": [[19, "troubleshooting"]], "A guide to making a DIPY release": [[21, "a-guide-to-making-a-dipy-release"]], "Release checklist": [[21, "release-checklist"]], "Doing the release": [[21, "doing-the-release"]], "Uploading binary builds for the release": [[21, "uploading-binary-builds-for-the-release"]], "Other stuff that needs doing for the release": [[21, "other-stuff-that-needs-doing-for-the-release"]], "\ud83d\udee0\ufe0f Toolchain Roadmap": [[22, "toolchain-roadmap"]], "Building DIPY": [[22, "building-dipy"]], "Python Versions": [[22, "python-versions"]], "NumPy": [[22, "numpy"]], "Compilers": [[22, "compilers"]], "Official Builds": [[22, "official-builds"]], "Testing and Benchmarking": [[22, "testing-and-benchmarking"]], "Building the Documentation": [[22, "building-the-documentation"]], "Packaging": [[22, "packaging"]], "Developers": [[23, "developers"]], "Crossing-preserving contextual enhancement": [[24, "crossing-preserving-contextual-enhancement"]], "Fiber to bundle coherence measures": [[25, "fiber-to-bundle-coherence-measures"]], "Acknowledgments": [[25, "acknowledgments"]], "Contextual Enhancement": [[26, "contextual-enhancement"], [44, "contextual-enhancement"]], "Computation times": [[27, "computation-times"], [30, "computation-times"], [42, "computation-times"], [48, "computation-times"], [61, "computation-times"], [65, "computation-times"], [95, "computation-times"], [103, "computation-times"], [115, "computation-times"], [117, "computation-times"], [120, "computation-times"], [129, "computation-times"], [133, "computation-times"], [140, "computation-times"], [238, "computation-times"]], "Fiber Tracking": [[28, "fiber-tracking"], [44, "fiber-tracking"]], "Linear fascicle evaluation (LiFE)": [[29, "linear-fascicle-evaluation-life"]], "Surface seeding for tractography": [[31, "surface-seeding-for-tractography"]], "Display the surface": [[31, "display-the-surface"]], "Generate a list of seeding positions": [[31, "generate-a-list-of-seeding-positions"]], "Bootstrap and Closest Peak Direction Getters Example": [[32, "bootstrap-and-closest-peak-direction-getters-example"]], "Example #1: Bootstrap direction getter with CSD Model": [[32, "example-1-bootstrap-direction-getter-with-csd-model"]], "Example #2: Closest peak direction getter with CSD Model": [[32, "example-2-closest-peak-direction-getter-with-csd-model"]], "An introduction to the Deterministic Maximum Direction Getter": [[33, "an-introduction-to-the-deterministic-maximum-direction-getter"]], "Introduction to Basic Tracking": [[34, "introduction-to-basic-tracking"], [66, "introduction-to-basic-tracking"]], "Step 1: Getting directions from a diffusion dataset": [[34, "step-1-getting-directions-from-a-diffusion-dataset"], [66, "step-1-getting-directions-from-a-diffusion-dataset"]], "Step 2: Identifying when the tracking must stop": [[34, "step-2-identifying-when-the-tracking-must-stop"], [66, "step-2-identifying-when-the-tracking-must-stop"]], "Step 3: Defining a set of seeds from which to begin tracking": [[34, "step-3-defining-a-set-of-seeds-from-which-to-begin-tracking"], [66, "step-3-defining-a-set-of-seeds-from-which-to-begin-tracking"]], "Particle Filtering Tractography": [[35, "particle-filtering-tractography"], [35, "id4"]], "CMC/ACT Stopping Criterion": [[35, "cmc-act-stopping-criterion"]], "An introduction to the Probabilistic Direction Getter": [[36, "an-introduction-to-the-probabilistic-direction-getter"]], "Parallel Transport Tractography": [[37, "parallel-transport-tractography"]], "Tracking with Robust Unbiased Model-BAsed Spherical Deconvolution (RUMBA-SD)": [[38, "tracking-with-robust-unbiased-model-based-spherical-deconvolution-rumba-sd"]], "Tracking with the Sparse Fascicle Model": [[39, "tracking-with-the-sparse-fascicle-model"]], "Using Various Stopping Criterion for Tractography": [[40, "using-various-stopping-criterion-for-tractography"]], "Threshold Stopping Criterion": [[40, "threshold-stopping-criterion"]], "Binary Stopping Criterion": [[40, "binary-stopping-criterion"]], "ACT Stopping Criterion": [[40, "act-stopping-criterion"]], "Notes": [[40, "notes"], [163, "notes"], [163, "id8"], [163, "id11"], [163, "id16"], [163, "id54"], [163, "id88"], [163, "id108"], [163, "id116"], [163, "id119"], [163, "id124"], [163, "id165"], [163, "id209"], [163, "id211"], [163, "id215"], [163, "id219"], [163, "id223"], [163, "id227"], [163, "id237"], [163, "id248"], [163, "id256"], [163, "id283"], [163, "id286"], [163, "id308"], [163, "id333"], [163, "id336"], [163, "id345"], [163, "id348"], [163, "id353"], [163, "id356"], [163, "id359"], [163, "id362"], [163, "id365"], [163, "id368"], [163, "id371"], [163, "id374"], [164, "notes"], [164, "id28"], [164, "id47"], [164, "id55"], [164, "id70"], [164, "id74"], [164, "id78"], [164, "id91"], [164, "id95"], [164, "id118"], [164, "id168"], [164, "id176"], [164, "id181"], [164, "id186"], [164, "id191"], [165, "notes"], [165, "id15"], [165, "id19"], [165, "id43"], [165, "id48"], [165, "id51"], [165, "id67"], [165, "id71"], [166, "notes"], [166, "id24"], [166, "id71"], [166, "id77"], [166, "id94"], [167, "notes"], [167, "id12"], [167, "id18"], [168, "notes"], [168, "id22"], [168, "id73"], [168, "id76"], [170, "notes"], [170, "id90"], [170, "id118"], [170, "id121"], [170, "id143"], [170, "id149"], [170, "id154"], [170, "id157"], [170, "id190"], [170, "id210"], [170, "id219"], [170, "id229"], [170, "id234"], [170, "id264"], [170, "id277"], [170, "id291"], [170, "id310"], [170, "id314"], [170, "id330"], [170, "id335"], [170, "id339"], [170, "id346"], [170, "id350"], [170, "id354"], [170, "id358"], [170, "id363"], [170, "id375"], [170, "id411"], [170, "id413"], [170, "id426"], [170, "id434"], [170, "id437"], [170, "id441"], [170, "id446"], [170, "id450"], [170, "id453"], [170, "id457"], [170, "id460"], [170, "id471"], [170, "id474"], [170, "id477"], [170, "id480"], [170, "id483"], [170, "id489"], [170, "id497"], [170, "id503"], [170, "id509"], [170, "id515"], [170, "id519"], [170, "id525"], [170, "id532"], [170, "id545"], [170, "id552"], [170, "id557"], [170, "id574"], [170, "id620"], [170, "id628"], [170, "id645"], [170, "id650"], [170, "id656"], [170, "id902"], [170, "id905"], [170, "id908"], [170, "id920"], [170, "id928"], [170, "id936"], [170, "id943"], [170, "id951"], [170, "id1070"], [170, "id1072"], [170, "id1076"], [170, "id1078"], [170, "id1080"], [170, "id1082"], [170, "id1085"], [170, "id1088"], [170, "id1091"], [170, "id1094"], [170, "id1097"], [170, "id1100"], [170, "id1115"], [170, "id1158"], [170, "id1174"], [170, "id1307"], [171, "notes"], [171, "id40"], [171, "id45"], [171, "id81"], [171, "id101"], [171, "id113"], [171, "id116"], [171, "id119"], [171, "id121"], [171, "id134"], [171, "id139"], [171, "id154"], [171, "id173"], [171, "id176"], [171, "id179"], [171, "id181"], [172, "notes"], [172, "id12"], [172, "id17"], [172, "id52"], [172, "id58"], [173, "notes"], [174, "notes"], [174, "id17"], [174, "id24"], [174, "id28"], [174, "id32"], [174, "id39"], [174, "id42"], [174, "id45"], [174, "id48"], [174, "id67"], [174, "id71"], [174, "id88"], [174, "id102"], [174, "id112"], [174, "id116"], [174, "id119"], [174, "id131"], [174, "id137"], [174, "id190"], [174, "id235"], [174, "id237"], [174, "id251"], [174, "id262"], [174, "id274"], [174, "id281"], [174, "id312"], [175, "notes"], [175, "id18"], [175, "id20"], [175, "id22"], [175, "id25"], [175, "id28"], [175, "id33"], [175, "id68"], [176, "notes"]], "File Formats": [[41, "file-formats"], [44, "file-formats"]], "Read/Write streamline files": [[43, "read-write-streamline-files"]], "Examples": [[44, "examples"], [163, "examples"], [163, "id184"], [164, "examples"], [164, "id10"], [164, "id13"], [164, "id16"], [164, "id21"], [164, "id25"], [164, "id31"], [164, "id34"], [164, "id37"], [164, "id42"], [164, "id69"], [164, "id73"], [164, "id77"], [164, "id92"], [164, "id98"], [164, "id122"], [164, "id123"], [164, "id126"], [164, "id139"], [164, "id144"], [164, "id147"], [164, "id150"], [164, "id177"], [164, "id182"], [164, "id187"], [164, "id192"], [164, "id199"], [164, "id202"], [165, "examples"], [165, "id7"], [165, "id10"], [165, "id28"], [165, "id42"], [166, "examples"], [168, "examples"], [168, "id16"], [168, "id20"], [170, "examples"], [170, "id546"], [170, "id553"], [170, "id558"], [170, "id623"], [170, "id707"], [170, "id1106"], [170, "id1119"], [170, "id1171"], [170, "id1310"], [172, "examples"], [172, "id9"], [172, "id13"], [172, "id23"], [172, "id49"], [172, "id53"], [172, "id74"], [174, "examples"], [174, "id18"], [174, "id19"], [174, "id25"], [174, "id29"], [174, "id33"], [174, "id38"], [174, "id53"], [174, "id56"], [174, "id59"], [174, "id62"], [174, "id82"], [174, "id85"], [174, "id89"], [174, "id92"], [174, "id95"], [174, "id98"], [174, "id103"], [174, "id111"], [174, "id115"], [174, "id130"], [174, "id166"], [174, "id171"], [174, "id176"], [174, "id179"], [174, "id184"], [174, "id187"], [174, "id193"], [174, "id197"], [174, "id200"], [174, "id203"], [174, "id206"], [174, "id209"], [174, "id214"], [174, "id240"], [174, "id246"], [174, "id261"], [174, "id268"], [174, "id271"], [174, "id278"], [174, "id282"], [174, "id286"], [174, "id290"], [174, "id323"], [174, "id326"], [175, "examples"]], "Contents": [[44, "contents"]], "Quick Start": [[44, "quick-start"], [63, "quick-start"]], "Preprocessing": [[44, "preprocessing"], [57, "preprocessing"]], "Reconstruction": [[44, "reconstruction"], [68, "reconstruction"], [155, "reconstruction"]], "Reconstruction methods available in DIPY": [[44, "id2"], [161, "id1"]], "Streamlines Analysis and Connectivity": [[44, "streamlines-analysis-and-connectivity"], [127, "streamlines-analysis-and-connectivity"]], "Registration": [[44, "registration"], [101, "registration"], [156, "registration"]], "Segmentation": [[44, "segmentation"], [110, "segmentation"]], "Simulation": [[44, "simulation"], [118, "simulation"]], "Multiprocessing": [[44, "multiprocessing"], [45, "multiprocessing"]], "Visualization": [[44, "visualization"], [132, "visualization"]], "Workflows": [[44, "workflows"], [139, "workflows"]], "Parallel reconstruction using Q-Ball": [[46, "parallel-reconstruction-using-q-ball"]], "Parallel reconstruction using CSD": [[47, "parallel-reconstruction-using-csd"]], "Brain segmentation with median_otsu": [[49, "brain-segmentation-with-median-otsu"], [107, "brain-segmentation-with-median-otsu"]], "Denoise images using Adaptive Soft Coefficient Matching (ASCM)": [[50, "denoise-images-using-adaptive-soft-coefficient-matching-ascm"]], "Suppress Gibbs oscillations": [[51, "suppress-gibbs-oscillations"]], "Denoise images using Local PCA via empirical thresholds": [[52, "denoise-images-using-local-pca-via-empirical-thresholds"]], "Estimate the noise standard deviation": [[52, "estimate-the-noise-standard-deviation"]], "Perform the localPCA using the function localpca": [[52, "perform-the-localpca-using-the-function-localpca"]], "Denoise images using the Marcenko-Pastur PCA algorithm": [[53, "denoise-images-using-the-marcenko-pastur-pca-algorithm"]], "Noise standard deviation estimation using the Marchenko-Pastur PCA algorithm": [[53, "noise-standard-deviation-estimation-using-the-marchenko-pastur-pca-algorithm"]], "Denoise images using Non-Local Means (NLMEANS)": [[54, "denoise-images-using-non-local-means-nlmeans"]], "Patch2Self: Self-Supervised Denoising via Statistical Independence": [[55, "patch2self-self-supervised-denoising-via-statistical-independence"]], "Gradients and Spheres": [[56, "gradients-and-spheres"]], "Between-volumes Motion Correction on DWI datasets": [[58, "between-volumes-motion-correction-on-dwi-datasets"]], "Noise estimation using PIESNO": [[59, "noise-estimation-using-piesno"]], "Reslice diffusion datasets": [[60, "reslice-diffusion-datasets"]], "SNR estimation for Diffusion-Weighted Images": [[62, "snr-estimation-for-diffusion-weighted-images"]], "Getting started with DIPY": [[64, "getting-started-with-dipy"]], "Local reconstruction using the Histological ResDNN": [[67, "local-reconstruction-using-the-histological-resdnn"]], "K-fold cross-validation for model comparison": [[69, "k-fold-cross-validation-for-model-comparison"]], "Reconstruct with Constant Solid Angle (Q-Ball)": [[70, "reconstruct-with-constant-solid-angle-q-ball"]], "Reconstruction with Constrained Spherical Deconvolution": [[71, "reconstruction-with-constrained-spherical-deconvolution"]], "Step 1. Estimation of the fiber response function": [[71, "step-1-estimation-of-the-fiber-response-function"], [89, "step-1-estimation-of-the-fiber-response-function"]], "Step 2. fODF reconstruction": [[71, "step-2-fodf-reconstruction"]], "Reconstruction of the diffusion signal with the correlation tensor model": [[72, "reconstruction-of-the-diffusion-signal-with-the-correlation-tensor-model"]], "Reconstruction of the diffusion signal with the kurtosis tensor model": [[73, "reconstruction-of-the-diffusion-signal-with-the-kurtosis-tensor-model"]], "Constrained optimization for DKI": [[73, "constrained-optimization-for-dki"]], "Mean kurtosis tensor and kurtosis fractional anisotropy": [[73, "mean-kurtosis-tensor-and-kurtosis-fractional-anisotropy"]], "Reconstruction of the diffusion signal with the WMTI model": [[74, "reconstruction-of-the-diffusion-signal-with-the-wmti-model"]], "Reconstruct with Diffusion Spectrum Imaging": [[75, "reconstruct-with-diffusion-spectrum-imaging"]], "Calculate DSI-based scalar maps": [[76, "calculate-dsi-based-scalar-maps"]], "DSI Deconvolution vs DSI": [[77, "dsi-deconvolution-vs-dsi"], [119, "dsi-deconvolution-vs-dsi"]], "Reconstruction of the diffusion signal with the Tensor model": [[78, "reconstruction-of-the-diffusion-signal-with-the-tensor-model"]], "Crossing invariant fiber response function with FORECAST model": [[79, "crossing-invariant-fiber-response-function-with-forecast-model"]], "Using the free water elimination model to remove DTI free water contamination": [[80, "using-the-free-water-elimination-model-to-remove-dti-free-water-contamination"]], "Reconstruct with Generalized Q-Sampling Imaging": [[81, "reconstruct-with-generalized-q-sampling-imaging"]], "Intravoxel incoherent motion": [[82, "intravoxel-incoherent-motion"]], "Continuous and analytical diffusion signal modelling with MAP-MRI": [[83, "continuous-and-analytical-diffusion-signal-modelling-with-map-mri"]], "Reconstruction with Multi-Shell Multi-Tissue CSD": [[84, "reconstruction-with-multi-shell-multi-tissue-csd"]], "Mean signal diffusion kurtosis imaging (MSDKI)": [[85, "mean-signal-diffusion-kurtosis-imaging-msdki"]], "Testing MSDKI in synthetic data": [[85, "testing-msdki-in-synthetic-data"]], "Reconstructing diffusion data using MSDKI": [[85, "reconstructing-diffusion-data-using-msdki"]], "Relationship between MSDKI and SMT2": [[85, "relationship-between-msdki-and-smt2"]], "Estimating diffusion time dependent q-space indices using qt-dMRI": [[86, "estimating-diffusion-time-dependent-q-space-indices-using-qt-dmri"]], "Reconstruct with Q-space Trajectory Imaging (QTI)": [[87, "reconstruct-with-q-space-trajectory-imaging-qti"]], "Theory": [[87, "theory"], [88, "theory"]], "Usage example": [[87, "usage-example"], [88, "usage-example"]], "Applying positivity constraints to Q-space Trajectory Imaging (QTI+)": [[88, "applying-positivity-constraints-to-q-space-trajectory-imaging-qti"]], "Installation": [[88, "installation"], [252, "installation"]], "Reconstruction with Robust and Unbiased Model-BAsed Spherical Deconvolution": [[89, "reconstruction-with-robust-and-unbiased-model-based-spherical-deconvolution"]], "Step 2. fODF Reconstruction": [[89, "step-2-fodf-reconstruction"]], "Reconstruction with the Sparse Fascicle Model": [[90, "reconstruction-with-the-sparse-fascicle-model"]], "Signal Reconstruction Using Spherical Harmonics": [[91, "signal-reconstruction-using-spherical-harmonics"]], "Continuous and analytical diffusion signal modelling with 3D-SHORE": [[92, "continuous-and-analytical-diffusion-signal-modelling-with-3d-shore"]], "Calculate SHORE scalar maps": [[93, "calculate-shore-scalar-maps"]], "Using the RESTORE algorithm for robust tensor fitting": [[94, "using-the-restore-algorithm-for-robust-tensor-fitting"]], "Affine Registration in 3D": [[96, "affine-registration-in-3d"]], "Affine Registration with Masks": [[97, "affine-registration-with-masks"]], "Groupwise Bundle Registration": [[98, "groupwise-bundle-registration"]], "How it works": [[98, "how-it-works"]], "Example": [[98, "example"]], "Extended capabilities": [[98, "extended-capabilities"]], "Direct Bundle Registration": [[99, "direct-bundle-registration"]], "Nonrigid Bundle Registration with BundleWarp": [[100, "nonrigid-bundle-registration-with-bundlewarp"]], "Diffeomorphic Registration with binary and fuzzy images": [[102, "diffeomorphic-registration-with-binary-and-fuzzy-images"]], "Applying image-based deformations to streamlines": [[104, "applying-image-based-deformations-to-streamlines"]], "Symmetric Diffeomorphic Registration in 2D": [[105, "symmetric-diffeomorphic-registration-in-2d"]], "Symmetric Diffeomorphic Registration in 3D": [[106, "symmetric-diffeomorphic-registration-in-3d"]], "Automatic Fiber Bundle Extraction with RecoBundles": [[108, "automatic-fiber-bundle-extraction-with-recobundles"]], "Fast Streamline Search": [[109, "fast-streamline-search"]], "Tractography Clustering - Available Features": [[111, "tractography-clustering-available-features"]], "Available Features": [[111, "available-features"]], "Identity Feature": [[111, "clustering-examples-identityfeature"]], "Resample Feature": [[111, "resample-feature"]], "Center of Mass Feature": [[111, "center-of-mass-feature"]], "Midpoint Feature": [[111, "midpoint-feature"]], "ArcLength Feature": [[111, "arclength-feature"]], "Vector Between Endpoints Feature": [[111, "vector-between-endpoints-feature"]], "Tractography Clustering - Available Metrics": [[112, "tractography-clustering-available-metrics"]], "Available Metrics": [[112, "available-metrics"]], "Average of Pointwise Euclidean Metric": [[112, "average-of-pointwise-euclidean-metric"]], "Sum of Pointwise Euclidean Metric": [[112, "sum-of-pointwise-euclidean-metric"]], "Cosine Metric": [[112, "cosine-metric"]], "Enhancing QuickBundles with different metrics and features": [[113, "enhancing-quickbundles-with-different-metrics-and-features"]], "Clustering framework": [[113, "clustering-framework"]], "Extending Feature": [[113, "extending-feature"]], "Extending Metric": [[113, "extending-metric"]], "Tractography Clustering with QuickBundles": [[114, "tractography-clustering-with-quickbundles"]], "Tissue Classification of a T1-weighted Structural Image": [[116, "tissue-classification-of-a-t1-weighted-structural-image"]], "DKI MultiTensor Simulation": [[121, "dki-multitensor-simulation"]], "MultiTensor Simulation": [[122, "multitensor-simulation"]], "Extracting AFQ tract profiles from segmented bundles": [[123, "extracting-afq-tract-profiles-from-segmented-bundles"]], "BUAN Bundle Assignment Maps Creation": [[124, "buan-bundle-assignment-maps-creation"]], "BUAN Bundle Shape Similarity Score": [[125, "buan-bundle-shape-similarity-score"]], "Calculation of Outliers with Cluster Confidence Index": [[126, "calculation-of-outliers-with-cluster-confidence-index"]], "Calculate Path Length Map": [[128, "calculate-path-length-map"]], "Streamline length and size reduction": [[130, "streamline-length-and-size-reduction"]], "Connectivity Matrices, ROI Intersections and Density Maps": [[131, "connectivity-matrices-roi-intersections-and-density-maps"]], "Advanced interactive visualization": [[134, "advanced-interactive-visualization"]], "Visualize bundles and metrics on bundles": [[135, "visualize-bundles-and-metrics-on-bundles"]], "Show every streamline with an orientation color": [[135, "show-every-streamline-with-an-orientation-color"]], "Show every point with a value from a volume with default colormap": [[135, "show-every-point-with-a-value-from-a-volume-with-default-colormap"]], "Show every point with a value from a volume with your colormap": [[135, "show-every-point-with-a-value-from-a-volume-with-your-colormap"]], "Show every bundle with a specific color": [[135, "show-every-bundle-with-a-specific-color"]], "Show every streamline of a bundle with a different color": [[135, "show-every-streamline-of-a-bundle-with-a-different-color"]], "Show every point of every streamline with a different color": [[135, "show-every-point-of-every-streamline-with-a-different-color"]], "Visualization of ROI Surface Rendered with Streamlines": [[136, "visualization-of-roi-surface-rendered-with-streamlines"]], "Simple volume slicing": [[137, "simple-volume-slicing"]], "Render slices from T1 with a specific value range": [[137, "render-slices-from-t1-with-a-specific-value-range"]], "Render slices from FA with your colormap": [[137, "render-slices-from-fa-with-your-colormap"]], "Create a mosaic": [[137, "create-a-mosaic"]], "Creating a new combined workflow": [[138, "creating-a-new-combined-workflow"]], "Creating a new workflow.": [[141, "creating-a-new-workflow"]], "Frequently Asked Questions": [[142, "frequently-asked-questions"]], "Theoretical": [[142, "theoretical"]], "Practical": [[142, "practical"]], "Gimbal lock": [[143, "gimbal-lock"]], "Mathematics of gimbal lock": [[143, "mathematics-of-gimbal-lock"]], "Glossary": [[144, "glossary"]], "Diffusion Imaging In Python - Documentation": [[145, "diffusion-imaging-in-python-documentation"]], "Quick links": [[145, "quick-links"]], "Highlights": [[145, "highlights"]], "Announcements": [[145, "announcements"]], "Introduction to command line interfaces": [[146, "introduction-to-command-line-interfaces"]], "BUndle ANalytics (BUAN) framework": [[147, "bundle-analytics-buan-framework"]], "Group Comparison of Bundle Profiles": [[147, "group-comparison-of-bundle-profiles"]], "Shape similarity of specific bundles across the populations": [[147, "shape-similarity-of-specific-bundles-across-the-populations"]], "Reproducing results on larger dataset:": [[147, "reproducing-results-on-larger-dataset"]], "White Matter Bundle Segmentation with RecoBundles": [[148, "white-matter-bundle-segmentation-with-recobundles"]], "Streamline-Based Linear Registration": [[148, "streamline-based-linear-registration"]], "RecoBundles": [[148, "recobundles"], [171, "recobundles"]], "Nonrigid White Matter Bundle Registration with BundleWarp": [[149, "nonrigid-white-matter-bundle-registration-with-bundlewarp"]], "Partially Deformable BundleWarp Registration": [[149, "partially-deformable-bundlewarp-registration"]], "Fully Deformable BundleWarp Registration": [[149, "fully-deformable-bundlewarp-registration"]], "Downloading DIPY datasets": [[150, "downloading-dipy-datasets"]], "Denoising": [[151, "denoising"]], "Denoising using Overcomplete Local PCA": [[151, "denoising-using-overcomplete-local-pca"]], "Denoising using Marcenko-Pastur PCA": [[151, "denoising-using-marcenko-pastur-pca"]], "Denoising using NLMEANS": [[151, "denoising-using-nlmeans"]], "Overview of Denoising Methods": [[151, "overview-of-denoising-methods"]], "Diffusion": [[151, "diffusion"]], "Structural": [[151, "structural"]], "Gibbs Unringing": [[152, "gibbs-unringing"]], "Suppress Gibbs Oscillations": [[152, "suppress-gibbs-oscillations"]], "DIPY Workflows Interfaces": [[153, "dipy-workflows-interfaces"]], "Between-Volumes Motion Correction": [[154, "between-volumes-motion-correction"]], "Motion Correction": [[154, "motion-correction"]], "Constrained Spherical Deconvolution (CSD)": [[155, "constrained-spherical-deconvolution-csd"]], "Mean Apparent Propagator (MAP)-MRI": [[155, "mean-apparent-propagator-map-mri"]], "Diffusion Tensor Imaging (DTI)": [[155, "diffusion-tensor-imaging-dti"]], "Diffusion Kurtosis Imaging (DKI)": [[155, "diffusion-kurtosis-imaging-dki"]], "Constant Solid Angle (CSA)": [[155, "constant-solid-angle-csa"]], "Intravoxel Incoherent Motion (IVIM)": [[155, "intravoxel-incoherent-motion-ivim"]], "Image Registration": [[156, "image-registration"]], "Symmetric Diffeomorphic Registration": [[156, "symmetric-diffeomorphic-registration"]], "Apply a Transformation": [[156, "apply-a-transformation"]], "Streamline-based Registration": [[156, "streamline-based-registration"]], "Tracking": [[157, "tracking"]], "Local Fiber Tracking": [[157, "local-fiber-tracking"]], "EuDX Tracking": [[157, "eudx-tracking"]], "Deterministic Tracking": [[157, "deterministic-tracking"]], "Probabilistic Tracking": [[157, "probabilistic-tracking"]], "Closest Peaks Tracking": [[157, "closest-peaks-tracking"]], "Particle Filtering Tracking (PFT)": [[157, "particle-filtering-tracking-pft"]], "Overview of Fiber Tracking Methods": [[157, "overview-of-fiber-tracking-methods"]], "Older Highlights": [[158, "older-highlights"]], "Past Announcements": [[159, "past-announcements"]], "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-mortar-board\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.693 1.066a.75.75 0 01.614 0l7.25 3.25a.75.75 0 010 1.368L13 6.831v2.794c0 1.024-.81 1.749-1.66 2.173-.893.447-2.075.702-3.34.702-.278 0-.55-.012-.816-.036a.75.75 0 01.133-1.494c.22.02.45.03.683.03 1.082 0 2.025-.221 2.67-.543.69-.345.83-.682.83-.832V7.503L8.307 8.934a.75.75 0 01-.614 0L4 7.28v1.663c.296.105.575.275.812.512.438.438.688 1.059.688 1.796v3a.75.75 0 01-.75.75h-3a.75.75 0 01-.75-.75v-3c0-.737.25-1.358.688-1.796.237-.237.516-.407.812-.512V6.606L.443 5.684a.75.75 0 010-1.368l7.25-3.25zM2.583 5L8 7.428 13.416 5 8 2.572 2.583 5zM2.5 11.25c0-.388.125-.611.25-.735a.704.704 0 01.5-.203c.19 0 .37.071.5.203.125.124.25.347.25.735v2.25H2.5v-2.25z\"></path></svg> Recipes": [[160, "svg-version-1-1-width-1-0em-height-1-0em-class-sd-octicon-sd-octicon-mortar-board-viewbox-0-0-16-16-aria-hidden-true-path-fill-rule-evenodd-d-m7-693-1-066a-75-75-0-01-614-0l7-25-3-25a-75-75-0-010-1-368l13-6-831v2-794c0-1-024-81-1-749-1-66-2-173-893-447-2-075-702-3-34-702-278-0-55-012-816-036a-75-75-0-01-133-1-494c-22-02-45-03-683-03-1-082-0-2-025-221-2-67-543-69-345-83-682-83-832v7-503l8-307-8-934a-75-75-0-01-614-0l4-7-28v1-663c-296-105-575-275-812-512-438-438-688-1-059-688-1-796v3a-75-75-0-01-75-75h-3a-75-75-0-01-75-75v-3c0-737-25-1-358-688-1-796-237-237-516-407-812-512v6-606l-443-5-684a-75-75-0-010-1-368l7-25-3-25zm2-583-5l8-7-428-13-416-5-8-2-572-2-583-5zm2-5-11-25c0-388-125-611-25-735a-704-704-0-01-5-203c-19-0-37-071-5-203-125-124-25-347-25-735v2-25h2-5v-2-25z-path-svg-recipes"]], "dipy": [[162, "module-dipy"]], "Diffusion Imaging in Python": [[162, "diffusion-imaging-in-python"]], "Subpackages": [[162, "subpackages"]], "Utilities": [[162, "utilities"]], "get_info": [[162, "get-info"]], "align": [[163, "module-dipy.align"]], "Module: align._public": [[163, "module-dipy.align._public"]], "Module: align.bundlemin": [[163, "module-dipy.align.bundlemin"]], "Module: align.cpd": [[163, "module-dipy.align.cpd"]], "Note": [[163, "note"]], "Module: align.crosscorr": [[163, "module-dipy.align.crosscorr"]], "Module: align.expectmax": [[163, "module-dipy.align.expectmax"]], "Module: align.imaffine": [[163, "module-dipy.align.imaffine"]], "Module: align.imwarp": [[163, "module-dipy.align.imwarp"]], "Module: align.metrics": [[163, "module-dipy.align.metrics"]], "Module: align.parzenhist": [[163, "module-dipy.align.parzenhist"]], "Module: align.reslice": [[163, "module-dipy.align.reslice"]], "Module: align.scalespace": [[163, "module-dipy.align.scalespace"]], "Module: align.streamlinear": [[163, "module-dipy.align.streamlinear"]], "Module: align.streamwarp": [[163, "module-dipy.align.streamwarp"]], "Module: align.sumsqdiff": [[163, "module-dipy.align.sumsqdiff"]], "Module: align.transforms": [[163, "module-dipy.align.transforms"]], "Module: align.vector_fields": [[163, "module-dipy.align.vector_fields"]], "Bunch": [[163, "bunch"]], "VerbosityLevels": [[163, "verbositylevels"]], "syn_registration": [[163, "syn-registration"]], "Parameters": [[163, "parameters"], [163, "id5"], [163, "id7"], [163, "id9"], [163, "id12"], [163, "id14"], [163, "id19"], [163, "id21"], [163, "id23"], [163, "id25"], [163, "id27"], [163, "id28"], [163, "id31"], [163, "id33"], [163, "id35"], [163, "id37"], [163, "id40"], [163, "id45"], [163, "id52"], [163, "id58"], [163, "id63"], [163, "id69"], [163, "id72"], [163, "id74"], [163, "id76"], [163, "id78"], [163, "id80"], [163, "id82"], [163, "id83"], [163, "id85"], [163, "id87"], [163, "id89"], [163, "id91"], [163, "id93"], [163, "id95"], [163, "id96"], [163, "id100"], [163, "id102"], [163, "id104"], [163, "id106"], [163, "id109"], [163, "id110"], [163, "id114"], [163, "id117"], [163, "id120"], [163, "id121"], [163, "id122"], [163, "id125"], [163, "id126"], [163, "id127"], [163, "id128"], [163, "id130"], [163, "id132"], [163, "id134"], [163, "id136"], [163, "id137"], [163, "id138"], [163, "id139"], [163, "id140"], [163, "id141"], [163, "id142"], [163, "id143"], [163, "id144"], [163, "id145"], [163, "id147"], [163, "id150"], [163, "id151"], [163, "id152"], [163, "id153"], [163, "id156"], [163, "id158"], [163, "id161"], [163, "id163"], [163, "id166"], [163, "id168"], [163, "id170"], [163, "id172"], [163, "id173"], [163, "id174"], [163, "id175"], [163, "id176"], [163, "id177"], [163, "id178"], [163, "id179"], [163, "id180"], [163, "id182"], [163, "id185"], [163, "id187"], [163, "id189"], [163, "id191"], [163, "id193"], [163, "id195"], [163, "id197"], [163, "id199"], [163, "id201"], [163, "id202"], [163, "id204"], [163, "id206"], [163, "id207"], [163, "id208"], [163, "id212"], [163, "id213"], [163, "id214"], [163, "id216"], [163, "id217"], [163, "id220"], [163, "id221"], [163, "id224"], [163, "id225"], [163, "id226"], [163, "id229"], [163, "id232"], [163, "id234"], [163, "id235"], [163, "id238"], [163, "id239"], [163, "id242"], [163, "id244"], [163, "id246"], [163, "id249"], [163, "id252"], [163, "id255"], [163, "id261"], [163, "id265"], [163, "id266"], [163, "id268"], [163, "id270"], [163, "id272"], [163, "id274"], [163, "id277"], [163, "id279"], [163, "id281"], [163, "id284"], [163, "id287"], [163, "id290"], [163, "id293"], [163, "id296"], [163, "id300"], [163, "id302"], [163, "id304"], [163, "id306"], [163, "id309"], [163, "id311"], [163, "id313"], [163, "id315"], [163, "id317"], [163, "id319"], [163, "id321"], [163, "id323"], [163, "id325"], [163, "id327"], [163, "id329"], [163, "id331"], [163, "id334"], [163, "id337"], [163, "id338"], [163, "id339"], [163, "id341"], [163, "id343"], [163, "id346"], [163, "id349"], [163, "id351"], [163, "id354"], [163, "id357"], [163, "id360"], [163, "id363"], [163, "id366"], [163, "id369"], [163, "id372"], [163, "id375"], [163, "id376"], [164, "parameters"], [164, "id6"], [164, "id8"], [164, "id11"], [164, "id14"], [164, "id19"], [164, "id22"], [164, "id26"], [164, "id29"], [164, "id32"], [164, "id35"], [164, "id38"], [164, "id40"], [164, "id43"], [164, "id45"], [164, "id48"], [164, "id50"], [164, "id53"], [164, "id56"], [164, "id58"], [164, "id60"], [164, "id62"], [164, "id67"], [164, "id71"], [164, "id75"], [164, "id80"], [164, "id83"], [164, "id85"], [164, "id87"], [164, "id89"], [164, "id93"], [164, "id99"], [164, "id101"], [164, "id104"], [164, "id106"], [164, "id108"], [164, "id110"], [164, "id112"], [164, "id114"], [164, "id116"], [164, "id119"], [164, "id121"], [164, "id124"], [164, "id125"], [164, "id127"], [164, "id129"], [164, "id131"], [164, "id133"], [164, "id135"], [164, "id137"], [164, "id141"], [164, "id142"], [164, "id145"], [164, "id148"], [164, "id151"], [164, "id152"], [164, "id154"], [164, "id156"], [164, "id158"], [164, "id160"], [164, "id162"], [164, "id164"], [164, "id166"], [164, "id169"], [164, "id171"], [164, "id173"], [164, "id178"], [164, "id183"], [164, "id188"], [164, "id193"], [164, "id194"], [164, "id195"], [164, "id197"], [164, "id200"], [164, "id203"], [164, "id205"], [164, "id207"], [164, "id209"], [164, "id211"], [164, "id213"], [164, "id215"], [164, "id217"], [165, "parameters"], [165, "id5"], [165, "id8"], [165, "id11"], [165, "id12"], [165, "id17"], [165, "id21"], [165, "id22"], [165, "id26"], [165, "id38"], [165, "id40"], [165, "id47"], [165, "id49"], [165, "id62"], [165, "id65"], [165, "id69"], [166, "parameters"], [166, "id3"], [166, "id4"], [166, "id6"], [166, "id8"], [166, "id10"], [166, "id11"], [166, "id13"], [166, "id14"], [166, "id16"], [166, "id18"], [166, "id20"], [166, "id22"], [166, "id27"], [166, "id29"], [166, "id31"], [166, "id33"], [166, "id35"], [166, "id44"], [166, "id55"], [166, "id61"], [166, "id64"], [166, "id65"], [166, "id68"], [166, "id69"], [166, "id75"], [166, "id83"], [166, "id87"], [166, "id90"], [166, "id100"], [166, "id103"], [166, "id106"], [166, "id107"], [166, "id114"], [167, "parameters"], [167, "id1"], [167, "id2"], [167, "id4"], [167, "id6"], [167, "id7"], [167, "id10"], [167, "id13"], [167, "id16"], [167, "id19"], [167, "id25"], [167, "id27"], [167, "id29"], [167, "id30"], [168, "parameters"], [168, "id3"], [168, "id4"], [168, "id6"], [168, "id9"], [168, "id11"], [168, "id12"], [168, "id14"], [168, "id15"], [168, "id18"], [168, "id21"], [168, "id24"], [168, "id26"], [168, "id28"], [168, "id29"], [168, "id31"], [168, "id33"], [168, "id35"], [168, "id37"], [168, "id39"], [168, "id41"], [168, "id43"], [168, "id45"], [168, "id47"], [168, "id49"], [168, "id51"], [168, "id53"], [168, "id55"], [168, "id57"], [168, "id59"], [168, "id61"], [168, "id63"], [168, "id65"], [168, "id67"], [168, "id69"], [168, "id71"], [168, "id74"], [168, "id77"], [168, "id79"], [168, "id81"], [168, "id83"], [168, "id85"], [168, "id86"], [168, "id88"], [168, "id90"], [168, "id91"], [168, "id92"], [169, "parameters"], [169, "id1"], [169, "id2"], [169, "id3"], [169, "id5"], [169, "id6"], [169, "id8"], [169, "id10"], [169, "id20"], [169, "id21"], [169, "id22"], [169, "id32"], [169, "id35"], [169, "id36"], [169, "id39"], [169, "id41"], [169, "id43"], [169, "id47"], [169, "id48"], [169, "id51"], [169, "id52"], [169, "id54"], [169, "id56"], [169, "id59"], [169, "id60"], [169, "id62"], [169, "id64"], [169, "id77"], [169, "id81"], [169, "id82"], [169, "id83"], [169, "id87"], [169, "id89"], [169, "id91"], [169, "id92"], [169, "id94"], [169, "id96"], [170, "parameters"], [170, "id87"], [170, "id88"], [170, "id89"], [170, "id93"], [170, "id98"], [170, "id107"], [170, "id111"], [170, "id116"], [170, "id119"], [170, "id124"], [170, "id141"], [170, "id147"], [170, "id152"], [170, "id155"], [170, "id160"], [170, "id161"], [170, "id163"], [170, "id166"], [170, "id168"], [170, "id170"], [170, "id172"], [170, "id174"], [170, "id176"], [170, "id184"], [170, "id185"], [170, "id187"], [170, "id201"], [170, "id207"], [170, "id216"], [170, "id227"], [170, "id232"], [170, "id236"], [170, "id241"], [170, "id247"], [170, "id261"], [170, "id274"], [170, "id285"], [170, "id288"], [170, "id300"], [170, "id304"], [170, "id308"], [170, "id312"], [170, "id316"], [170, "id318"], [170, "id321"], [170, "id328"], [170, "id329"], [170, "id334"], [170, "id368"], [170, "id373"], [170, "id382"], [170, "id386"], [170, "id391"], [170, "id397"], [170, "id400"], [170, "id401"], [170, "id403"], [170, "id405"], [170, "id407"], [170, "id408"], [170, "id409"], [170, "id412"], [170, "id414"], [170, "id420"], [170, "id431"], [170, "id432"], [170, "id458"], [170, "id469"], [170, "id472"], [170, "id475"], [170, "id478"], [170, "id481"], [170, "id484"], [170, "id487"], [170, "id495"], [170, "id501"], [170, "id507"], [170, "id513"], [170, "id518"], [170, "id520"], [170, "id522"], [170, "id529"], [170, "id535"], [170, "id538"], [170, "id543"], [170, "id547"], [170, "id549"], [170, "id554"], [170, "id559"], [170, "id561"], [170, "id563"], [170, "id565"], [170, "id567"], [170, "id576"], [170, "id577"], [170, "id578"], [170, "id579"], [170, "id582"], [170, "id591"], [170, "id593"], [170, "id596"], [170, "id603"], [170, "id608"], [170, "id616"], [170, "id625"], [170, "id626"], [170, "id629"], [170, "id633"], [170, "id635"], [170, "id637"], [170, "id643"], [170, "id648"], [170, "id654"], [170, "id657"], [170, "id659"], [170, "id661"], [170, "id663"], [170, "id665"], [170, "id666"], [170, "id668"], [170, "id670"], [170, "id672"], [170, "id674"], [170, "id698"], [170, "id708"], [170, "id733"], [170, "id761"], [170, "id766"], [170, "id771"], [170, "id776"], [170, "id781"], [170, "id785"], [170, "id789"], [170, "id793"], [170, "id797"], [170, "id801"], [170, "id805"], [170, "id809"], [170, "id813"], [170, "id819"], [170, "id827"], [170, "id833"], [170, "id838"], [170, "id843"], [170, "id847"], [170, "id850"], [170, "id855"], [170, "id860"], [170, "id865"], [170, "id870"], [170, "id875"], [170, "id877"], [170, "id881"], [170, "id886"], [170, "id891"], [170, "id892"], [170, "id893"], [170, "id894"], [170, "id896"], [170, "id898"], [170, "id900"], [170, "id903"], [170, "id906"], [170, "id910"], [170, "id941"], [170, "id949"], [170, "id957"], [170, "id962"], [170, "id964"], [170, "id966"], [170, "id968"], [170, "id971"], [170, "id979"], [170, "id985"], [170, "id991"], [170, "id996"], [170, "id1001"], [170, "id1007"], [170, "id1013"], [170, "id1017"], [170, "id1020"], [170, "id1051"], [170, "id1055"], [170, "id1057"], [170, "id1062"], [170, "id1064"], [170, "id1066"], [170, "id1073"], [170, "id1083"], [170, "id1086"], [170, "id1089"], [170, "id1092"], [170, "id1095"], [170, "id1098"], [170, "id1104"], [170, "id1107"], [170, "id1109"], [170, "id1111"], [170, "id1113"], [170, "id1117"], [170, "id1122"], [170, "id1126"], [170, "id1132"], [170, "id1134"], [170, "id1140"], [170, "id1145"], [170, "id1146"], [170, "id1148"], [170, "id1149"], [170, "id1150"], [170, "id1151"], [170, "id1153"], [170, "id1154"], [170, "id1155"], [170, "id1162"], [170, "id1164"], [170, "id1165"], [170, "id1167"], [170, "id1169"], [170, "id1177"], [170, "id1178"], [170, "id1180"], [170, "id1182"], [170, "id1184"], [170, "id1187"], [170, "id1192"], [170, "id1196"], [170, "id1198"], [170, "id1199"], [170, "id1201"], [170, "id1206"], [170, "id1219"], [170, "id1222"], [170, "id1228"], [170, "id1235"], [170, "id1242"], [170, "id1251"], [170, "id1254"], [170, "id1262"], [170, "id1273"], [170, "id1279"], [170, "id1290"], [170, "id1294"], [170, "id1298"], [170, "id1300"], [170, "id1302"], [170, "id1304"], [170, "id1306"], [170, "id1308"], [171, "parameters"], [171, "id10"], [171, "id11"], [171, "id17"], [171, "id23"], [171, "id26"], [171, "id30"], [171, "id34"], [171, "id39"], [171, "id41"], [171, "id44"], [171, "id46"], [171, "id48"], [171, "id49"], [171, "id53"], [171, "id55"], [171, "id57"], [171, "id60"], [171, "id61"], [171, "id65"], [171, "id67"], [171, "id71"], [171, "id74"], [171, "id80"], [171, "id82"], [171, "id85"], [171, "id86"], [171, "id89"], [171, "id94"], [171, "id100"], [171, "id102"], [171, "id105"], [171, "id106"], [171, "id112"], [171, "id114"], [171, "id117"], [171, "id120"], [171, "id122"], [171, "id124"], [171, "id128"], [171, "id130"], [171, "id133"], [171, "id137"], [171, "id142"], [171, "id144"], [171, "id146"], [171, "id148"], [171, "id150"], [171, "id152"], [171, "id157"], [171, "id159"], [171, "id162"], [171, "id166"], [171, "id168"], [171, "id172"], [171, "id174"], [171, "id177"], [171, "id180"], [171, "id182"], [171, "id184"], [171, "id190"], [171, "id192"], [171, "id194"], [171, "id196"], [171, "id198"], [171, "id200"], [171, "id202"], [171, "id204"], [171, "id206"], [171, "id208"], [171, "id210"], [171, "id212"], [171, "id214"], [171, "id216"], [172, "parameters"], [172, "id7"], [172, "id10"], [172, "id15"], [172, "id24"], [172, "id29"], [172, "id33"], [172, "id37"], [172, "id42"], [172, "id47"], [172, "id50"], [172, "id56"], [172, "id62"], [172, "id66"], [172, "id70"], [172, "id72"], [172, "id75"], [172, "id79"], [172, "id83"], [172, "id87"], [172, "id91"], [172, "id95"], [173, "parameters"], [173, "id1"], [173, "id2"], [173, "id3"], [173, "id6"], [174, "parameters"], [174, "id8"], [174, "id10"], [174, "id12"], [174, "id15"], [174, "id20"], [174, "id22"], [174, "id26"], [174, "id30"], [174, "id36"], [174, "id40"], [174, "id43"], [174, "id46"], [174, "id49"], [174, "id51"], [174, "id54"], [174, "id57"], [174, "id60"], [174, "id63"], [174, "id64"], [174, "id66"], [174, "id69"], [174, "id83"], [174, "id86"], [174, "id90"], [174, "id93"], [174, "id96"], [174, "id99"], [174, "id104"], [174, "id106"], [174, "id107"], [174, "id109"], [174, "id113"], [174, "id118"], [174, "id121"], [174, "id122"], [174, "id124"], [174, "id125"], [174, "id126"], [174, "id128"], [174, "id132"], [174, "id134"], [174, "id135"], [174, "id138"], [174, "id139"], [174, "id141"], [174, "id143"], [174, "id146"], [174, "id148"], [174, "id150"], [174, "id153"], [174, "id156"], [174, "id159"], [174, "id162"], [174, "id164"], [174, "id167"], [174, "id169"], [174, "id172"], [174, "id174"], [174, "id177"], [174, "id180"], [174, "id182"], [174, "id185"], [174, "id188"], [174, "id191"], [174, "id195"], [174, "id198"], [174, "id201"], [174, "id204"], [174, "id207"], [174, "id210"], [174, "id212"], [174, "id219"], [174, "id223"], [174, "id225"], [174, "id227"], [174, "id229"], [174, "id231"], [174, "id233"], [174, "id236"], [174, "id241"], [174, "id244"], [174, "id247"], [174, "id249"], [174, "id258"], [174, "id266"], [174, "id269"], [174, "id272"], [174, "id275"], [174, "id277"], [174, "id279"], [174, "id283"], [174, "id287"], [174, "id291"], [174, "id295"], [174, "id299"], [174, "id301"], [174, "id304"], [174, "id306"], [174, "id308"], [174, "id310"], [174, "id313"], [174, "id315"], [174, "id318"], [174, "id321"], [174, "id324"], [175, "parameters"], [175, "id2"], [175, "id5"], [175, "id6"], [175, "id9"], [175, "id10"], [175, "id11"], [175, "id12"], [175, "id13"], [175, "id14"], [175, "id16"], [175, "id19"], [175, "id21"], [175, "id23"], [175, "id24"], [175, "id27"], [175, "id29"], [175, "id30"], [175, "id31"], [175, "id32"], [175, "id35"], [175, "id37"], [175, "id39"], [175, "id41"], [175, "id43"], [175, "id45"], [175, "id47"], [175, "id49"], [175, "id50"], [175, "id53"], [175, "id55"], [175, "id57"], [175, "id58"], [175, "id59"], [175, "id60"], [175, "id62"], [175, "id63"], [175, "id64"], [175, "id66"], [175, "id69"], [175, "id70"], [175, "id71"], [175, "id72"], [175, "id73"], [175, "id74"], [176, "parameters"], [176, "id3"], [176, "id5"], [176, "id6"], [176, "id9"], [176, "id10"], [176, "id11"], [176, "id13"], [176, "id14"], [176, "id15"], [176, "id16"], [176, "id18"], [176, "id20"], [176, "id22"], [176, "id29"], [176, "id34"], [176, "id38"], [176, "id40"], [176, "id42"], [176, "id43"], [176, "id44"], [176, "id45"], [176, "id46"], [176, "id47"], [176, "id48"], [176, "id49"], [176, "id51"], [176, "id54"], [176, "id56"], [176, "id58"], [176, "id59"], [176, "id67"], [176, "id68"], [176, "id71"], [176, "id74"], [176, "id80"], [176, "id83"], [176, "id86"], [176, "id87"], [176, "id90"], [176, "id93"], [176, "id94"], [176, "id97"], [176, "id98"], [176, "id99"], [176, "id100"], [176, "id103"], [176, "id106"], [176, "id108"], [176, "id110"]], "Returns": [[163, "returns"], [163, "id6"], [163, "id10"], [163, "id13"], [163, "id15"], [163, "id20"], [163, "id22"], [163, "id24"], [163, "id26"], [163, "id29"], [163, "id30"], [163, "id32"], [163, "id34"], [163, "id36"], [163, "id41"], [163, "id46"], [163, "id53"], [163, "id59"], [163, "id64"], [163, "id70"], [163, "id73"], [163, "id75"], [163, "id77"], [163, "id79"], [163, "id81"], [163, "id84"], [163, "id86"], [163, "id90"], [163, "id92"], [163, "id94"], [163, "id97"], [163, "id101"], [163, "id103"], [163, "id105"], [163, "id107"], [163, "id111"], [163, "id112"], [163, "id113"], [163, "id115"], [163, "id118"], [163, "id123"], [163, "id129"], [163, "id131"], [163, "id133"], [163, "id135"], [163, "id146"], [163, "id148"], [163, "id154"], [163, "id157"], [163, "id159"], [163, "id162"], [163, "id167"], [163, "id169"], [163, "id171"], [163, "id181"], [163, "id183"], [163, "id186"], [163, "id188"], [163, "id190"], [163, "id192"], [163, "id194"], [163, "id196"], [163, "id198"], [163, "id200"], [163, "id233"], [163, "id236"], [163, "id240"], [163, "id243"], [163, "id245"], [163, "id247"], [163, "id250"], [163, "id267"], [163, "id269"], [163, "id271"], [163, "id273"], [163, "id275"], [163, "id278"], [163, "id280"], [163, "id282"], [163, "id285"], [163, "id288"], [163, "id291"], [163, "id294"], [163, "id297"], [163, "id299"], [163, "id301"], [163, "id303"], [163, "id305"], [163, "id307"], [163, "id310"], [163, "id312"], [163, "id314"], [163, "id316"], [163, "id318"], [163, "id320"], [163, "id322"], [163, "id324"], [163, "id326"], [163, "id328"], [163, "id330"], [163, "id332"], [163, "id335"], [163, "id340"], [163, "id342"], [163, "id344"], [163, "id347"], [163, "id350"], [163, "id352"], [163, "id355"], [163, "id358"], [163, "id361"], [163, "id364"], [163, "id367"], [163, "id370"], [163, "id373"], [164, "returns"], [164, "id5"], [164, "id7"], [164, "id9"], [164, "id12"], [164, "id15"], [164, "id20"], [164, "id23"], [164, "id27"], [164, "id30"], [164, "id33"], [164, "id36"], [164, "id39"], [164, "id41"], [164, "id44"], [164, "id46"], [164, "id49"], [164, "id51"], [164, "id57"], [164, "id59"], [164, "id61"], [164, "id65"], [164, "id68"], [164, "id72"], [164, "id76"], [164, "id81"], [164, "id84"], [164, "id86"], [164, "id88"], [164, "id90"], [164, "id94"], [164, "id100"], [164, "id102"], [164, "id105"], [164, "id107"], [164, "id109"], [164, "id111"], [164, "id113"], [164, "id115"], [164, "id117"], [164, "id120"], [164, "id130"], [164, "id134"], [164, "id136"], [164, "id143"], [164, "id146"], [164, "id149"], [164, "id153"], [164, "id155"], [164, "id159"], [164, "id161"], [164, "id163"], [164, "id165"], [164, "id167"], [164, "id170"], [164, "id172"], [164, "id198"], [164, "id201"], [164, "id204"], [164, "id206"], [164, "id208"], [164, "id210"], [164, "id212"], [164, "id214"], [164, "id216"], [164, "id218"], [165, "returns"], [165, "id6"], [165, "id9"], [165, "id14"], [165, "id18"], [165, "id27"], [165, "id31"], [165, "id32"], [165, "id33"], [165, "id34"], [165, "id35"], [165, "id36"], [165, "id37"], [165, "id39"], [165, "id41"], [165, "id50"], [165, "id52"], [165, "id53"], [165, "id54"], [165, "id55"], [165, "id56"], [165, "id57"], [165, "id58"], [165, "id59"], [165, "id60"], [165, "id61"], [165, "id63"], [165, "id66"], [165, "id70"], [166, "returns"], [166, "id5"], [166, "id9"], [166, "id12"], [166, "id15"], [166, "id17"], [166, "id19"], [166, "id21"], [166, "id23"], [166, "id28"], [166, "id30"], [166, "id32"], [166, "id34"], [166, "id38"], [166, "id50"], [166, "id57"], [166, "id62"], [166, "id66"], [166, "id70"], [166, "id76"], [166, "id84"], [166, "id88"], [166, "id93"], [166, "id101"], [166, "id104"], [166, "id109"], [166, "id116"], [167, "returns"], [167, "id3"], [167, "id5"], [167, "id11"], [167, "id14"], [167, "id17"], [167, "id22"], [167, "id26"], [167, "id31"], [168, "returns"], [168, "id5"], [168, "id7"], [168, "id10"], [168, "id13"], [168, "id19"], [168, "id23"], [168, "id25"], [168, "id27"], [168, "id30"], [168, "id32"], [168, "id34"], [168, "id36"], [168, "id38"], [168, "id40"], [168, "id42"], [168, "id44"], [168, "id46"], [168, "id48"], [168, "id50"], [168, "id52"], [168, "id54"], [168, "id56"], [168, "id58"], [168, "id60"], [168, "id62"], [168, "id64"], [168, "id66"], [168, "id68"], [168, "id70"], [168, "id72"], [168, "id75"], [168, "id78"], [168, "id80"], [168, "id82"], [168, "id84"], [168, "id87"], [168, "id89"], [168, "id93"], [169, "returns"], [169, "id4"], [169, "id7"], [169, "id9"], [169, "id11"], [169, "id23"], [169, "id37"], [169, "id40"], [169, "id42"], [169, "id49"], [169, "id53"], [169, "id55"], [169, "id57"], [169, "id58"], [169, "id61"], [169, "id63"], [169, "id65"], [169, "id66"], [169, "id84"], [169, "id88"], [169, "id90"], [169, "id93"], [169, "id95"], [169, "id97"], [170, "returns"], [170, "id108"], [170, "id117"], [170, "id120"], [170, "id125"], [170, "id142"], [170, "id148"], [170, "id153"], [170, "id156"], [170, "id162"], [170, "id165"], [170, "id167"], [170, "id169"], [170, "id171"], [170, "id173"], [170, "id175"], [170, "id189"], [170, "id202"], [170, "id209"], [170, "id218"], [170, "id228"], [170, "id233"], [170, "id237"], [170, "id243"], [170, "id249"], [170, "id263"], [170, "id276"], [170, "id286"], [170, "id290"], [170, "id301"], [170, "id305"], [170, "id309"], [170, "id313"], [170, "id317"], [170, "id319"], [170, "id369"], [170, "id374"], [170, "id383"], [170, "id392"], [170, "id398"], [170, "id402"], [170, "id404"], [170, "id406"], [170, "id410"], [170, "id433"], [170, "id435"], [170, "id440"], [170, "id444"], [170, "id449"], [170, "id451"], [170, "id456"], [170, "id459"], [170, "id470"], [170, "id473"], [170, "id476"], [170, "id479"], [170, "id482"], [170, "id485"], [170, "id488"], [170, "id496"], [170, "id502"], [170, "id508"], [170, "id514"], [170, "id523"], [170, "id530"], [170, "id536"], [170, "id540"], [170, "id548"], [170, "id560"], [170, "id562"], [170, "id564"], [170, "id566"], [170, "id568"], [170, "id580"], [170, "id592"], [170, "id597"], [170, "id604"], [170, "id610"], [170, "id627"], [170, "id634"], [170, "id636"], [170, "id638"], [170, "id644"], [170, "id649"], [170, "id655"], [170, "id658"], [170, "id660"], [170, "id662"], [170, "id664"], [170, "id667"], [170, "id669"], [170, "id671"], [170, "id673"], [170, "id762"], [170, "id767"], [170, "id772"], [170, "id777"], [170, "id820"], [170, "id828"], [170, "id834"], [170, "id839"], [170, "id844"], [170, "id848"], [170, "id851"], [170, "id856"], [170, "id861"], [170, "id866"], [170, "id871"], [170, "id878"], [170, "id895"], [170, "id897"], [170, "id899"], [170, "id901"], [170, "id904"], [170, "id907"], [170, "id911"], [170, "id914"], [170, "id919"], [170, "id927"], [170, "id935"], [170, "id942"], [170, "id950"], [170, "id958"], [170, "id963"], [170, "id967"], [170, "id1052"], [170, "id1063"], [170, "id1065"], [170, "id1067"], [170, "id1068"], [170, "id1069"], [170, "id1071"], [170, "id1074"], [170, "id1075"], [170, "id1077"], [170, "id1079"], [170, "id1081"], [170, "id1084"], [170, "id1087"], [170, "id1090"], [170, "id1093"], [170, "id1096"], [170, "id1099"], [170, "id1105"], [170, "id1108"], [170, "id1110"], [170, "id1112"], [170, "id1114"], [170, "id1118"], [170, "id1127"], [170, "id1128"], [170, "id1129"], [170, "id1130"], [170, "id1131"], [170, "id1133"], [170, "id1135"], [170, "id1141"], [170, "id1147"], [170, "id1152"], [170, "id1161"], [170, "id1163"], [170, "id1166"], [170, "id1168"], [170, "id1170"], [170, "id1179"], [170, "id1183"], [170, "id1200"], [170, "id1202"], [170, "id1208"], [170, "id1220"], [170, "id1223"], [170, "id1230"], [170, "id1237"], [170, "id1244"], [170, "id1252"], [170, "id1256"], [170, "id1264"], [170, "id1274"], [170, "id1299"], [170, "id1301"], [170, "id1303"], [170, "id1305"], [170, "id1309"], [171, "returns"], [171, "id14"], [171, "id20"], [171, "id24"], [171, "id27"], [171, "id31"], [171, "id35"], [171, "id47"], [171, "id52"], [171, "id54"], [171, "id56"], [171, "id62"], [171, "id66"], [171, "id72"], [171, "id75"], [171, "id83"], [171, "id87"], [171, "id90"], [171, "id95"], [171, "id103"], [171, "id115"], [171, "id118"], [171, "id123"], [171, "id125"], [171, "id129"], [171, "id131"], [171, "id138"], [171, "id143"], [171, "id145"], [171, "id147"], [171, "id149"], [171, "id151"], [171, "id153"], [171, "id158"], [171, "id160"], [171, "id163"], [171, "id167"], [171, "id169"], [171, "id175"], [171, "id178"], [171, "id183"], [171, "id185"], [171, "id191"], [171, "id193"], [171, "id195"], [171, "id197"], [171, "id199"], [171, "id201"], [171, "id203"], [171, "id205"], [171, "id207"], [171, "id209"], [171, "id211"], [171, "id213"], [171, "id215"], [171, "id217"], [172, "returns"], [172, "id8"], [172, "id16"], [172, "id25"], [172, "id30"], [172, "id34"], [172, "id38"], [172, "id43"], [172, "id48"], [172, "id51"], [172, "id57"], [172, "id63"], [172, "id67"], [172, "id71"], [172, "id73"], [172, "id76"], [172, "id80"], [172, "id84"], [172, "id88"], [172, "id92"], [172, "id96"], [173, "returns"], [173, "id4"], [173, "id7"], [174, "returns"], [174, "id9"], [174, "id11"], [174, "id13"], [174, "id16"], [174, "id21"], [174, "id23"], [174, "id27"], [174, "id31"], [174, "id37"], [174, "id41"], [174, "id44"], [174, "id47"], [174, "id50"], [174, "id52"], [174, "id55"], [174, "id58"], [174, "id61"], [174, "id65"], [174, "id70"], [174, "id84"], [174, "id87"], [174, "id91"], [174, "id94"], [174, "id97"], [174, "id105"], [174, "id108"], [174, "id110"], [174, "id114"], [174, "id123"], [174, "id127"], [174, "id129"], [174, "id133"], [174, "id136"], [174, "id140"], [174, "id147"], [174, "id149"], [174, "id151"], [174, "id154"], [174, "id157"], [174, "id160"], [174, "id163"], [174, "id165"], [174, "id168"], [174, "id170"], [174, "id173"], [174, "id175"], [174, "id178"], [174, "id181"], [174, "id183"], [174, "id186"], [174, "id189"], [174, "id192"], [174, "id196"], [174, "id199"], [174, "id202"], [174, "id205"], [174, "id208"], [174, "id211"], [174, "id213"], [174, "id224"], [174, "id226"], [174, "id228"], [174, "id230"], [174, "id232"], [174, "id234"], [174, "id238"], [174, "id242"], [174, "id245"], [174, "id248"], [174, "id250"], [174, "id260"], [174, "id267"], [174, "id270"], [174, "id273"], [174, "id276"], [174, "id280"], [174, "id292"], [174, "id296"], [174, "id300"], [174, "id302"], [174, "id305"], [174, "id307"], [174, "id309"], [174, "id311"], [174, "id314"], [174, "id316"], [174, "id319"], [174, "id322"], [174, "id325"], [175, "returns"], [175, "id15"], [175, "id17"], [175, "id34"], [175, "id36"], [175, "id38"], [175, "id40"], [175, "id42"], [175, "id44"], [175, "id46"], [175, "id48"], [175, "id51"], [175, "id54"], [175, "id56"], [175, "id61"], [175, "id65"], [175, "id67"], [176, "returns"], [176, "id17"], [176, "id39"], [176, "id41"], [176, "id50"], [176, "id52"], [176, "id55"]], "register_dwi_to_template": [[163, "register-dwi-to-template"]], "write_mapping": [[163, "write-mapping"]], "read_mapping": [[163, "read-mapping"]], "resample": [[163, "resample"]], "affine_registration": [[163, "affine-registration"]], "center_of_mass": [[163, "center-of-mass"], [174, "center-of-mass"]], "translation": [[163, "translation"]], "rigid": [[163, "rigid"]], "rigid_isoscaling": [[163, "rigid-isoscaling"]], "rigid_scaling": [[163, "rigid-scaling"]], "affine": [[163, "affine"]], "_METHOD_DICT": [[163, "method-dict"]], "register_series": [[163, "register-series"]], "register_dwi_series": [[163, "register-dwi-series"]], "motion_correction": [[163, "motion-correction"]], "streamline_registration": [[163, "streamline-registration"]], "determine_num_threads": [[163, "determine-num-threads"], [166, "determine-num-threads"], [166, "id105"], [174, "determine-num-threads"]], "distance_matrix_mdf": [[163, "distance-matrix-mdf"]], "DeformableRegistration": [[163, "deformableregistration"]], "Attributes": [[163, "attributes"], [164, "attributes"], [164, "id138"], [164, "id174"], [164, "id179"], [164, "id184"], [164, "id189"], [170, "attributes"], [170, "id550"], [170, "id555"], [172, "attributes"], [174, "attributes"], [174, "id100"], [175, "attributes"], [175, "id26"]], "gaussian_kernel": [[163, "gaussian-kernel"]], "low_rank_eigen": [[163, "low-rank-eigen"]], "initialize_sigma2": [[163, "initialize-sigma2"]], "lowrankQS": [[163, "lowrankqs"]], "compute_cc_backward_step_2d": [[163, "compute-cc-backward-step-2d"]], "compute_cc_backward_step_3d": [[163, "compute-cc-backward-step-3d"]], "compute_cc_forward_step_2d": [[163, "compute-cc-forward-step-2d"]], "compute_cc_forward_step_3d": [[163, "compute-cc-forward-step-3d"]], "precompute_cc_factors_2d": [[163, "precompute-cc-factors-2d"]], "precompute_cc_factors_2d_test": [[163, "precompute-cc-factors-2d-test"]], "precompute_cc_factors_3d": [[163, "precompute-cc-factors-3d"]], "precompute_cc_factors_3d_test": [[163, "precompute-cc-factors-3d-test"]], "compute_em_demons_step_2d": [[163, "compute-em-demons-step-2d"]], "compute_em_demons_step_3d": [[163, "compute-em-demons-step-3d"]], "compute_masked_class_stats_2d": [[163, "compute-masked-class-stats-2d"]], "compute_masked_class_stats_3d": [[163, "compute-masked-class-stats-3d"]], "quantize_positive_2d": [[163, "quantize-positive-2d"]], "quantize_positive_3d": [[163, "quantize-positive-3d"]], "AffineInversionError": [[163, "affineinversionerror"]], "AffineInvalidValuesError": [[163, "affineinvalidvalueserror"]], "AffineMap": [[163, "affinemap"]], "MutualInformationMetric": [[163, "mutualinformationmetric"]], "AffineRegistration": [[163, "affineregistration"]], "_transform_method": [[163, "transform-method"]], "transform_centers_of_mass": [[163, "transform-centers-of-mass"]], "transform_geometric_centers": [[163, "transform-geometric-centers"]], "transform_origins": [[163, "transform-origins"]], "DiffeomorphicMap": [[163, "diffeomorphicmap"]], "DiffeomorphicRegistration": [[163, "diffeomorphicregistration"]], "SymmetricDiffeomorphicRegistration": [[163, "symmetricdiffeomorphicregistration"]], "RegistrationStages": [[163, "registrationstages"]], "logger": [[163, "logger"], [163, "id203"], [163, "id241"], [164, "logger"], [168, "logger"], [169, "logger"], [169, "id38"], [169, "id50"], [169, "id85"], [170, "logger"], [171, "logger"], [171, "id73"]], "mult_aff": [[163, "mult-aff"]], "get_direction_and_spacings": [[163, "get-direction-and-spacings"]], "SimilarityMetric": [[163, "similaritymetric"]], "CCMetric": [[163, "ccmetric"]], "EMMetric": [[163, "emmetric"]], "SSDMetric": [[163, "ssdmetric"]], "v_cycle_2d": [[163, "v-cycle-2d"]], "v_cycle_3d": [[163, "v-cycle-3d"]], "ParzenJointHistogram": [[163, "parzenjointhistogram"]], "compute_parzen_mi": [[163, "compute-parzen-mi"]], "cubic_spline": [[163, "cubic-spline"]], "cubic_spline_derivative": [[163, "cubic-spline-derivative"]], "sample_domain_regular": [[163, "sample-domain-regular"]], "reslice": [[163, "reslice"]], "ScaleSpace": [[163, "scalespace"]], "IsotropicScaleSpace": [[163, "isotropicscalespace"]], "StreamlineDistanceMetric": [[163, "streamlinedistancemetric"]], "BundleMinDistanceMetric": [[163, "bundlemindistancemetric"]], "Methods": [[163, "methods"], [163, "id210"], [163, "id218"], [163, "id222"], [174, "methods"]], "BundleMinDistanceMatrixMetric": [[163, "bundlemindistancematrixmetric"]], "BundleMinDistanceAsymmetricMetric": [[163, "bundlemindistanceasymmetricmetric"]], "BundleSumDistanceMatrixMetric": [[163, "bundlesumdistancematrixmetric"]], "JointBundleMinDistanceMetric": [[163, "jointbundlemindistancemetric"]], "StreamlineLinearRegistration": [[163, "streamlinelinearregistration"]], "StreamlineRegistrationMap": [[163, "streamlineregistrationmap"]], "JointStreamlineRegistrationMap": [[163, "jointstreamlineregistrationmap"]], "bundle_sum_distance": [[163, "bundle-sum-distance"]], "bundle_min_distance": [[163, "bundle-min-distance"]], "bundle_min_distance_fast": [[163, "bundle-min-distance-fast"]], "bundle_min_distance_asymmetric_fast": [[163, "bundle-min-distance-asymmetric-fast"]], "remove_clusters_by_size": [[163, "remove-clusters-by-size"]], "progressive_slr": [[163, "progressive-slr"]], "slr_with_qbx": [[163, "slr-with-qbx"]], "groupwise_slr": [[163, "groupwise-slr"]], "get_unique_pairs": [[163, "get-unique-pairs"]], "compose_matrix44": [[163, "compose-matrix44"]], "decompose_matrix44": [[163, "decompose-matrix44"]], "average_bundle_length": [[163, "average-bundle-length"]], "find_missing": [[163, "find-missing"]], "bundlewarp": [[163, "bundlewarp"]], "bundlewarp_vector_filed": [[163, "bundlewarp-vector-filed"]], "bundlewarp_shape_analysis": [[163, "bundlewarp-shape-analysis"]], "compute_energy_ssd_2d": [[163, "compute-energy-ssd-2d"]], "compute_energy_ssd_3d": [[163, "compute-energy-ssd-3d"]], "compute_residual_displacement_field_ssd_2d": [[163, "compute-residual-displacement-field-ssd-2d"]], "compute_residual_displacement_field_ssd_3d": [[163, "compute-residual-displacement-field-ssd-3d"]], "compute_ssd_demons_step_2d": [[163, "compute-ssd-demons-step-2d"]], "compute_ssd_demons_step_3d": [[163, "compute-ssd-demons-step-3d"]], "iterate_residual_displacement_field_ssd_2d": [[163, "iterate-residual-displacement-field-ssd-2d"]], "iterate_residual_displacement_field_ssd_3d": [[163, "iterate-residual-displacement-field-ssd-3d"]], "solve_2d_symmetric_positive_definite": [[163, "solve-2d-symmetric-positive-definite"]], "solve_3d_symmetric_positive_definite": [[163, "solve-3d-symmetric-positive-definite"]], "AffineTransform2D": [[163, "affinetransform2d"]], "AffineTransform3D": [[163, "affinetransform3d"]], "RigidIsoScalingTransform2D": [[163, "rigidisoscalingtransform2d"]], "RigidIsoScalingTransform3D": [[163, "rigidisoscalingtransform3d"]], "RigidScalingTransform2D": [[163, "rigidscalingtransform2d"]], "RigidScalingTransform3D": [[163, "rigidscalingtransform3d"]], "RigidTransform2D": [[163, "rigidtransform2d"]], "RigidTransform3D": [[163, "rigidtransform3d"]], "RotationTransform2D": [[163, "rotationtransform2d"]], "RotationTransform3D": [[163, "rotationtransform3d"]], "ScalingTransform2D": [[163, "scalingtransform2d"]], "ScalingTransform3D": [[163, "scalingtransform3d"]], "Transform": [[163, "transform"]], "TranslationTransform2D": [[163, "translationtransform2d"]], "TranslationTransform3D": [[163, "translationtransform3d"]], "compose_vector_fields_2d": [[163, "compose-vector-fields-2d"]], "compose_vector_fields_3d": [[163, "compose-vector-fields-3d"]], "create_circle": [[163, "create-circle"]], "create_harmonic_fields_2d": [[163, "create-harmonic-fields-2d"]], "create_harmonic_fields_3d": [[163, "create-harmonic-fields-3d"]], "create_random_displacement_2d": [[163, "create-random-displacement-2d"]], "create_random_displacement_3d": [[163, "create-random-displacement-3d"]], "create_sphere": [[163, "create-sphere"]], "downsample_displacement_field_2d": [[163, "downsample-displacement-field-2d"]], "downsample_displacement_field_3d": [[163, "downsample-displacement-field-3d"]], "downsample_scalar_field_2d": [[163, "downsample-scalar-field-2d"]], "downsample_scalar_field_3d": [[163, "downsample-scalar-field-3d"]], "gradient": [[163, "gradient"], [174, "gradient"]], "invert_vector_field_fixed_point_2d": [[163, "invert-vector-field-fixed-point-2d"]], "invert_vector_field_fixed_point_3d": [[163, "invert-vector-field-fixed-point-3d"]], "is_valid_affine": [[163, "is-valid-affine"]], "reorient_vector_field_2d": [[163, "reorient-vector-field-2d"]], "reorient_vector_field_3d": [[163, "reorient-vector-field-3d"]], "resample_displacement_field_2d": [[163, "resample-displacement-field-2d"]], "resample_displacement_field_3d": [[163, "resample-displacement-field-3d"]], "simplify_warp_function_2d": [[163, "simplify-warp-function-2d"]], "simplify_warp_function_3d": [[163, "simplify-warp-function-3d"]], "sparse_gradient": [[163, "sparse-gradient"]], "transform_2d_affine": [[163, "transform-2d-affine"]], "transform_2d_affine_nn": [[163, "transform-2d-affine-nn"]], "transform_3d_affine": [[163, "transform-3d-affine"]], "transform_3d_affine_nn": [[163, "transform-3d-affine-nn"]], "warp_2d": [[163, "warp-2d"]], "warp_2d_nn": [[163, "warp-2d-nn"]], "warp_3d": [[163, "warp-3d"]], "warp_3d_nn": [[163, "warp-3d-nn"]], "warp_coordinates_2d": [[163, "warp-coordinates-2d"]], "warp_coordinates_3d": [[163, "warp-coordinates-3d"]], "core": [[164, "module-dipy.core"]], "Module: core.geometry": [[164, "module-dipy.core.geometry"]], "Module: core.gradients": [[164, "module-dipy.core.gradients"]], "Module: core.graph": [[164, "module-dipy.core.graph"]], "Module: core.histeq": [[164, "module-dipy.core.histeq"]], "Module: core.interpolation": [[164, "module-dipy.core.interpolation"]], "Module: core.ndindex": [[164, "module-dipy.core.ndindex"]], "Module: core.onetime": [[164, "module-dipy.core.onetime"]], "Module: core.optimize": [[164, "module-dipy.core.optimize"]], "Module: core.profile": [[164, "module-dipy.core.profile"]], "Module: core.rng": [[164, "module-dipy.core.rng"]], "Module: core.sphere": [[164, "module-dipy.core.sphere"]], "Module: core.sphere_stats": [[164, "module-dipy.core.sphere_stats"]], "Module: core.subdivide_octahedron": [[164, "module-dipy.core.subdivide_octahedron"]], "Module: core.wavelet": [[164, "module-dipy.core.wavelet"]], "_TUPLE2AXES": [[164, "tuple2axes"]], "sphere2cart": [[164, "sphere2cart"]], "cart2sphere": [[164, "cart2sphere"]], "sph2latlon": [[164, "sph2latlon"]], "normalized_vector": [[164, "normalized-vector"]], "vector_norm": [[164, "vector-norm"]], "rodrigues_axis_rotation": [[164, "rodrigues-axis-rotation"]], "nearest_pos_semi_def": [[164, "nearest-pos-semi-def"]], "sphere_distance": [[164, "sphere-distance"]], "See Also": [[164, "see-also"], [164, "id24"], [164, "id54"], [164, "id66"], [164, "id103"], [164, "id128"], [164, "id157"], [164, "id175"], [164, "id180"], [164, "id185"], [164, "id190"], [164, "id196"], [165, "see-also"], [165, "id13"], [166, "see-also"], [167, "see-also"], [167, "id8"], [167, "id28"], [168, "see-also"], [168, "id8"], [168, "id17"], [170, "see-also"], [170, "id524"], [170, "id531"], [170, "id544"], [170, "id551"], [170, "id556"], [170, "id624"], [170, "id1116"], [170, "id1181"], [170, "id1188"], [170, "id1193"], [170, "id1197"], [170, "id1203"], [170, "id1207"], [170, "id1221"], [172, "see-also"], [172, "id11"], [174, "see-also"], [174, "id14"], [174, "id101"], [174, "id117"], [174, "id152"], [174, "id155"], [174, "id158"], [174, "id161"], [174, "id194"], [174, "id284"], [174, "id288"], [174, "id294"], [174, "id298"]], "cart_distance": [[164, "cart-distance"]], "vector_cosine": [[164, "vector-cosine"]], "lambert_equal_area_projection_polar": [[164, "lambert-equal-area-projection-polar"]], "lambert_equal_area_projection_cart": [[164, "lambert-equal-area-projection-cart"]], "euler_matrix": [[164, "euler-matrix"]], "compose_matrix": [[164, "compose-matrix"]], "decompose_matrix": [[164, "decompose-matrix"]], "Raises": [[164, "raises"], [165, "raises"], [170, "raises"], [174, "raises"], [174, "id285"], [174, "id289"], [174, "id293"]], "circumradius": [[164, "circumradius"]], "vec2vec_rotmat": [[164, "vec2vec-rotmat"]], "compose_transformations": [[164, "compose-transformations"]], "perpendicular_directions": [[164, "perpendicular-directions"]], "dist_to_corner": [[164, "dist-to-corner"]], "is_hemispherical": [[164, "is-hemispherical"]], "GradientTable": [[164, "gradienttable"]], "unique_bvals": [[164, "unique-bvals"]], "b0_threshold_empty_gradient_message": [[164, "b0-threshold-empty-gradient-message"]], "b0_threshold_update_slicing_message": [[164, "b0-threshold-update-slicing-message"]], "mask_non_weighted_bvals": [[164, "mask-non-weighted-bvals"]], "gradient_table_from_bvals_bvecs": [[164, "gradient-table-from-bvals-bvecs"]], "Other Parameters": [[164, "other-parameters"]], "gradient_table_from_qvals_bvecs": [[164, "gradient-table-from-qvals-bvecs"]], "gradient_table_from_gradient_strength_bvecs": [[164, "gradient-table-from-gradient-strength-bvecs"]], "gradient_table": [[164, "gradient-table"]], "reorient_bvecs": [[164, "reorient-bvecs"]], "generate_bvecs": [[164, "generate-bvecs"]], "round_bvals": [[164, "round-bvals"]], "unique_bvals_tolerance": [[164, "unique-bvals-tolerance"]], "get_bval_indices": [[164, "get-bval-indices"]], "unique_bvals_magnitude": [[164, "unique-bvals-magnitude"]], "check_multi_b": [[164, "check-multi-b"]], "btens_to_params": [[164, "btens-to-params"]], "params_to_btens": [[164, "params-to-btens"]], "ornt_mapping": [[164, "ornt-mapping"]], "reorient_vectors": [[164, "reorient-vectors"]], "reorient_on_axis": [[164, "reorient-on-axis"]], "orientation_from_string": [[164, "orientation-from-string"]], "orientation_to_string": [[164, "orientation-to-string"]], "Graph": [[164, "graph"]], "histeq": [[164, "histeq"]], "Interpolator": [[164, "interpolator"]], "NearestNeighborInterpolator": [[164, "nearestneighborinterpolator"]], "OutsideImage": [[164, "outsideimage"]], "TriLinearInterpolator": [[164, "trilinearinterpolator"]], "interp_rbf": [[164, "interp-rbf"]], "interpolate_scalar_2d": [[164, "interpolate-scalar-2d"]], "interpolate_scalar_3d": [[164, "interpolate-scalar-3d"]], "interpolate_scalar_nn_2d": [[164, "interpolate-scalar-nn-2d"]], "interpolate_scalar_nn_3d": [[164, "interpolate-scalar-nn-3d"]], "interpolate_vector_2d": [[164, "interpolate-vector-2d"]], "interpolate_vector_3d": [[164, "interpolate-vector-3d"]], "map_coordinates_trilinear_iso": [[164, "map-coordinates-trilinear-iso"]], "nearestneighbor_interpolate": [[164, "nearestneighbor-interpolate"]], "trilinear_interp": [[164, "trilinear-interp"]], "trilinear_interpolate4d": [[164, "trilinear-interpolate4d"]], "ndindex": [[164, "ndindex"]], "ResetMixin": [[164, "resetmixin"]], "OneTimeProperty": [[164, "onetimeproperty"]], "auto_attr": [[164, "auto-attr"]], "Optimizer": [[164, "optimizer"]], "SKLearnLinearSolver": [[164, "sklearnlinearsolver"]], "NonNegativeLeastSquares": [[164, "nonnegativeleastsquares"]], "PositiveDefiniteLeastSquares": [[164, "positivedefiniteleastsquares"]], "spdot": [[164, "spdot"]], "sparse_nnls": [[164, "sparse-nnls"]], "Profiler": [[164, "profiler"]], "WichmannHill2006": [[164, "wichmannhill2006"]], "WichmannHill1982": [[164, "wichmannhill1982"]], "LEcuyer": [[164, "lecuyer"]], "Sphere": [[164, "sphere"], [166, "sphere"]], "HemiSphere": [[164, "hemisphere"], [166, "hemisphere"]], "faces_from_sphere_vertices": [[164, "faces-from-sphere-vertices"]], "unique_edges": [[164, "unique-edges"]], "unique_sets": [[164, "unique-sets"]], "disperse_charges": [[164, "disperse-charges"], [166, "disperse-charges"]], "fibonacci_sphere": [[164, "fibonacci-sphere"]], "disperse_charges_alt": [[164, "disperse-charges-alt"]], "euler_characteristic_check": [[164, "euler-characteristic-check"]], "octahedron_vertices": [[164, "octahedron-vertices"]], "octahedron_faces": [[164, "octahedron-faces"]], "icosahedron_vertices": [[164, "icosahedron-vertices"]], "icosahedron_faces": [[164, "icosahedron-faces"]], "unit_octahedron": [[164, "unit-octahedron"]], "unit_icosahedron": [[164, "unit-icosahedron"]], "hemi_icosahedron": [[164, "hemi-icosahedron"]], "random_uniform_on_sphere": [[164, "random-uniform-on-sphere"]], "eigenstats": [[164, "eigenstats"]], "compare_orientation_sets": [[164, "compare-orientation-sets"]], "angular_similarity": [[164, "angular-similarity"]], "create_unit_sphere": [[164, "create-unit-sphere"]], "create_unit_hemisphere": [[164, "create-unit-hemisphere"]], "cshift3D": [[164, "cshift3d"]], "permutationinverse": [[164, "permutationinverse"]], "afb3D_A": [[164, "afb3d-a"]], "sfb3D_A": [[164, "sfb3d-a"]], "sfb3D": [[164, "sfb3d"]], "afb3D": [[164, "afb3d"]], "dwt3D": [[164, "dwt3d"]], "idwt3D": [[164, "idwt3d"]], "data": [[165, "module-dipy.data"]], "Module: data.fetcher": [[165, "module-dipy.data.fetcher"]], "DataError": [[165, "dataerror"]], "loads_compat": [[165, "loads-compat"]], "DATA_DIR": [[165, "data-dir"]], "get_sim_voxels": [[165, "get-sim-voxels"]], "get_skeleton": [[165, "get-skeleton"]], "get_sphere": [[165, "get-sphere"], [166, "get-sphere"]], "default_sphere": [[165, "default-sphere"]], "small_sphere": [[165, "small-sphere"]], "get_3shell_gtab": [[165, "get-3shell-gtab"]], "get_isbi2013_2shell_gtab": [[165, "get-isbi2013-2shell-gtab"]], "get_gtab_taiwan_dsi": [[165, "get-gtab-taiwan-dsi"]], "dsi_voxels": [[165, "dsi-voxels"]], "dsi_deconv_voxels": [[165, "dsi-deconv-voxels"]], "mrtrix_spherical_functions": [[165, "mrtrix-spherical-functions"]], "get_cmap": [[165, "get-cmap"]], "two_cingulum_bundles": [[165, "two-cingulum-bundles"]], "matlab_life_results": [[165, "matlab-life-results"]], "load_sdp_constraints": [[165, "load-sdp-constraints"]], "copyfileobj_withprogress": [[165, "copyfileobj-withprogress"]], "check_md5": [[165, "check-md5"]], "fetch_data": [[165, "fetch-data"]], "fetch_isbi2013_2shell": [[165, "fetch-isbi2013-2shell"]], "fetch_stanford_labels": [[165, "fetch-stanford-labels"]], "fetch_sherbrooke_3shell": [[165, "fetch-sherbrooke-3shell"]], "fetch_stanford_hardi": [[165, "fetch-stanford-hardi"]], "fetch_resdnn_weights": [[165, "fetch-resdnn-weights"]], "fetch_synb0_weights": [[165, "fetch-synb0-weights"]], "fetch_synb0_test": [[165, "fetch-synb0-test"]], "fetch_deepn4_weights": [[165, "fetch-deepn4-weights"]], "fetch_deepn4_test": [[165, "fetch-deepn4-test"]], "fetch_evac_weights": [[165, "fetch-evac-weights"]], "fetch_evac_test": [[165, "fetch-evac-test"]], "fetch_stanford_t1": [[165, "fetch-stanford-t1"]], "fetch_stanford_pve_maps": [[165, "fetch-stanford-pve-maps"]], "fetch_stanford_tracks": [[165, "fetch-stanford-tracks"]], "fetch_taiwan_ntu_dsi": [[165, "fetch-taiwan-ntu-dsi"]], "fetch_syn_data": [[165, "fetch-syn-data"]], "fetch_mni_template": [[165, "fetch-mni-template"]], "fetch_scil_b0": [[165, "fetch-scil-b0"]], "fetch_bundles_2_subjects": [[165, "fetch-bundles-2-subjects"]], "fetch_ivim": [[165, "fetch-ivim"]], "fetch_cfin_multib": [[165, "fetch-cfin-multib"]], "fetch_file_formats": [[165, "fetch-file-formats"]], "fetch_bundle_atlas_hcp842": [[165, "fetch-bundle-atlas-hcp842"]], "fetch_target_tractogram_hcp": [[165, "fetch-target-tractogram-hcp"]], "fetch_bundle_fa_hcp": [[165, "fetch-bundle-fa-hcp"]], "fetch_qtdMRI_test_retest_2subjects": [[165, "fetch-qtdmri-test-retest-2subjects"]], "fetch_gold_standard_io": [[165, "fetch-gold-standard-io"]], "fetch_qte_lte_pte": [[165, "fetch-qte-lte-pte"]], "fetch_cti_rat1": [[165, "fetch-cti-rat1"]], "fetch_fury_surface": [[165, "fetch-fury-surface"]], "fetch_DiB_70_lte_pte_ste": [[165, "fetch-dib-70-lte-pte-ste"]], "fetch_DiB_217_lte_pte_ste": [[165, "fetch-dib-217-lte-pte-ste"]], "fetch_ptt_minimal_dataset": [[165, "fetch-ptt-minimal-dataset"]], "fetch_bundle_warp_dataset": [[165, "fetch-bundle-warp-dataset"]], "get_fnames": [[165, "get-fnames"]], "read_qtdMRI_test_retest_2subjects": [[165, "read-qtdmri-test-retest-2subjects"]], "read_scil_b0": [[165, "read-scil-b0"]], "read_siemens_scil_b0": [[165, "read-siemens-scil-b0"]], "read_isbi2013_2shell": [[165, "read-isbi2013-2shell"]], "read_sherbrooke_3shell": [[165, "read-sherbrooke-3shell"]], "read_stanford_labels": [[165, "read-stanford-labels"]], "read_stanford_hardi": [[165, "read-stanford-hardi"]], "read_stanford_t1": [[165, "read-stanford-t1"]], "read_stanford_pve_maps": [[165, "read-stanford-pve-maps"]], "read_taiwan_ntu_dsi": [[165, "read-taiwan-ntu-dsi"]], "read_syn_data": [[165, "read-syn-data"]], "fetch_tissue_data": [[165, "fetch-tissue-data"]], "read_tissue_data": [[165, "read-tissue-data"]], "read_mni_template": [[165, "read-mni-template"]], "fetch_cenir_multib": [[165, "fetch-cenir-multib"]], "read_cenir_multib": [[165, "read-cenir-multib"]], "read_bundles_2_subjects": [[165, "read-bundles-2-subjects"]], "read_ivim": [[165, "read-ivim"]], "read_cfin_dwi": [[165, "read-cfin-dwi"]], "read_cfin_t1": [[165, "read-cfin-t1"]], "get_file_formats": [[165, "get-file-formats"]], "get_bundle_atlas_hcp842": [[165, "get-bundle-atlas-hcp842"]], "get_two_hcp842_bundles": [[165, "get-two-hcp842-bundles"]], "get_target_tractogram_hcp": [[165, "get-target-tractogram-hcp"]], "read_qte_lte_pte": [[165, "read-qte-lte-pte"]], "read_DiB_70_lte_pte_ste": [[165, "read-dib-70-lte-pte-ste"]], "read_DiB_217_lte_pte_ste": [[165, "read-dib-217-lte-pte-ste"]], "extract_example_tracts": [[165, "extract-example-tracts"]], "read_five_af_bundles": [[165, "read-five-af-bundles"]], "to_bids_description": [[165, "to-bids-description"]], "fetch_hcp": [[165, "fetch-hcp"]], "fetch_hbn": [[165, "fetch-hbn"]], "denoise": [[166, "module-dipy.denoise"]], "Module: denoise.adaptive_soft_matching": [[166, "module-dipy.denoise.adaptive_soft_matching"]], "Module: denoise.denspeed": [[166, "module-dipy.denoise.denspeed"]], "Module: denoise.enhancement_kernel": [[166, "module-dipy.denoise.enhancement_kernel"]], "Module: denoise.gibbs": [[166, "module-dipy.denoise.gibbs"]], "Module: denoise.localpca": [[166, "module-dipy.denoise.localpca"]], "Module: denoise.nlmeans": [[166, "module-dipy.denoise.nlmeans"]], "Module: denoise.nlmeans_block": [[166, "module-dipy.denoise.nlmeans_block"]], "Module: denoise.noise_estimate": [[166, "module-dipy.denoise.noise_estimate"]], "Module: denoise.non_local_means": [[166, "module-dipy.denoise.non_local_means"]], "Module: denoise.patch2self": [[166, "module-dipy.denoise.patch2self"]], "Module: denoise.pca_noise_estimate": [[166, "module-dipy.denoise.pca_noise_estimate"]], "PCA Based Local Noise Estimation": [[166, "pca-based-local-noise-estimation"]], "Module: denoise.shift_twist_convolution": [[166, "module-dipy.denoise.shift_twist_convolution"]], "adaptive_soft_matching": [[166, "adaptive-soft-matching"]], "add_padding_reflection": [[166, "add-padding-reflection"]], "correspond_indices": [[166, "correspond-indices"]], "nlmeans_3d": [[166, "nlmeans-3d"]], "remove_padding": [[166, "remove-padding"]], "EnhancementKernel": [[166, "enhancementkernel"]], "ceil": [[166, "ceil"]], "gettempdir": [[166, "gettempdir"]], "gibbs_removal": [[166, "gibbs-removal"]], "dimensionality_problem_message": [[166, "dimensionality-problem-message"]], "create_patch_radius_arr": [[166, "create-patch-radius-arr"]], "compute_patch_size": [[166, "compute-patch-size"]], "compute_num_samples": [[166, "compute-num-samples"]], "compute_suggested_patch_radius": [[166, "compute-suggested-patch-radius"]], "genpca": [[166, "genpca"]], "localpca": [[166, "localpca"]], "mppca": [[166, "mppca"]], "nlmeans": [[166, "nlmeans"]], "firdn": [[166, "firdn"]], "nlmeans_block": [[166, "nlmeans-block"]], "upfir": [[166, "upfir"]], "piesno": [[166, "piesno"]], "estimate_sigma": [[166, "estimate-sigma"]], "non_local_means": [[166, "non-local-means"]], "patch2self": [[166, "patch2self"]], "pca_noise_estimate": [[166, "pca-noise-estimate"]], "warn": [[166, "warn"], [174, "warn"]], "convolve": [[166, "convolve"]], "convolve_sf": [[166, "convolve-sf"]], "sf_to_sh": [[166, "sf-to-sh"], [170, "sf-to-sh"]], "sh_to_sf": [[166, "sh-to-sf"], [170, "sh-to-sf"]], "direction": [[167, "module-dipy.direction"]], "Module: direction.bootstrap_direction_getter": [[167, "module-dipy.direction.bootstrap_direction_getter"]], "Module: direction.closest_peak_direction_getter": [[167, "module-dipy.direction.closest_peak_direction_getter"]], "Module: direction.peaks": [[167, "module-dipy.direction.peaks"]], "Module: direction.pmf": [[167, "module-dipy.direction.pmf"]], "Module: direction.probabilistic_direction_getter": [[167, "module-dipy.direction.probabilistic_direction_getter"]], "Module: direction.ptt_direction_getter": [[167, "module-dipy.direction.ptt_direction_getter"]], "BootDirectionGetter": [[167, "bootdirectiongetter"]], "peak_directions": [[167, "peak-directions"], [167, "id9"], [167, "id15"]], "BaseDirectionGetter": [[167, "basedirectiongetter"]], "BasePmfDirectionGetter": [[167, "basepmfdirectiongetter"]], "ClosestPeakDirectionGetter": [[167, "closestpeakdirectiongetter"]], "PmfGenDirectionGetter": [[167, "pmfgendirectiongetter"]], "PeaksAndMetrics": [[167, "peaksandmetrics"]], "peak_directions_nl": [[167, "peak-directions-nl"]], "peaks_from_model": [[167, "peaks-from-model"]], "reshape_peaks_for_visualization": [[167, "reshape-peaks-for-visualization"]], "PmfGen": [[167, "pmfgen"]], "SHCoeffPmfGen": [[167, "shcoeffpmfgen"]], "SimplePmfGen": [[167, "simplepmfgen"]], "DeterministicMaximumDirectionGetter": [[167, "deterministicmaximumdirectiongetter"]], "ProbabilisticDirectionGetter": [[167, "probabilisticdirectiongetter"]], "random": [[167, "random"], [174, "random"]], "PTTDirectionGetter": [[167, "pttdirectiongetter"]], "min_radius_curvature_from_angle": [[167, "min-radius-curvature-from-angle"], [174, "min-radius-curvature-from-angle"]], "io": [[168, "module-dipy.io"]], "Module: io.dpy": [[168, "module-dipy.io.dpy"]], "Module: io.gradients": [[168, "module-dipy.io.gradients"]], "Module: io.image": [[168, "module-dipy.io.image"]], "Module: io.peaks": [[168, "module-dipy.io.peaks"]], "Module: io.pickles": [[168, "module-dipy.io.pickles"]], "Module: io.stateful_tractogram": [[168, "module-dipy.io.stateful_tractogram"]], "Module: io.streamline": [[168, "module-dipy.io.streamline"]], "Module: io.surface": [[168, "module-dipy.io.surface"]], "Module: io.utils": [[168, "module-dipy.io.utils"]], "Module: io.vtk": [[168, "module-dipy.io.vtk"]], "Dpy": [[168, "dpy"]], "read_bvals_bvecs": [[168, "read-bvals-bvecs"]], "load_nifti_data": [[168, "load-nifti-data"]], "load_nifti": [[168, "load-nifti"]], "save_nifti": [[168, "save-nifti"]], "save_qa_metric": [[168, "save-qa-metric"]], "load_peaks": [[168, "load-peaks"]], "save_peaks": [[168, "save-peaks"]], "peaks_to_niftis": [[168, "peaks-to-niftis"]], "save_pickle": [[168, "save-pickle"]], "load_pickle": [[168, "load-pickle"]], "Space": [[168, "space"]], "Origin": [[168, "origin"]], "StatefulTractogram": [[168, "statefultractogram"]], "set_sft_logger_level": [[168, "set-sft-logger-level"]], "save_tractogram": [[168, "save-tractogram"]], "load_tractogram": [[168, "load-tractogram"]], "load_generator": [[168, "load-generator"]], "save_generator": [[168, "save-generator"]], "load_trk": [[168, "load-trk"]], "load_tck": [[168, "load-tck"]], "load_trx": [[168, "load-trx"]], "load_vtk": [[168, "load-vtk"]], "load_vtp": [[168, "load-vtp"]], "load_fib": [[168, "load-fib"]], "load_dpy": [[168, "load-dpy"]], "save_trk": [[168, "save-trk"]], "save_tck": [[168, "save-tck"]], "save_trx": [[168, "save-trx"]], "save_vtk": [[168, "save-vtk"]], "save_vtp": [[168, "save-vtp"]], "save_fib": [[168, "save-fib"]], "save_dpy": [[168, "save-dpy"]], "load_pial": [[168, "load-pial"]], "load_gifti": [[168, "load-gifti"]], "nifti1_symmat": [[168, "nifti1-symmat"]], "make5d": [[168, "make5d"]], "decfa": [[168, "decfa"]], "decfa_to_float": [[168, "decfa-to-float"]], "is_reference_info_valid": [[168, "is-reference-info-valid"]], "split_name_with_gz": [[168, "split-name-with-gz"]], "get_reference_info": [[168, "get-reference-info"]], "is_header_compatible": [[168, "is-header-compatible"]], "create_tractogram_header": [[168, "create-tractogram-header"]], "create_nifti_header": [[168, "create-nifti-header"]], "save_buan_profiles_hdf5": [[168, "save-buan-profiles-hdf5"]], "read_img_arr_or_path": [[168, "read-img-arr-or-path"]], "load_polydata": [[168, "load-polydata"]], "save_polydata": [[168, "save-polydata"]], "save_vtk_streamlines": [[168, "save-vtk-streamlines"]], "load_vtk_streamlines": [[168, "load-vtk-streamlines"]], "nn": [[169, "module-dipy.nn"]], "Module: nn.cnn_1d_denoising": [[169, "module-dipy.nn.cnn_1d_denoising"]], "Title : Denoising diffusion weighted imaging data using CNN": [[169, "title-denoising-diffusion-weighted-imaging-data-using-cnn"]], "Reference": [[169, "reference"]], "Module: nn.deepn4": [[169, "module-dipy.nn.deepn4"]], "Module: nn.evac": [[169, "module-dipy.nn.evac"]], "Module: nn.histo_resdnn": [[169, "module-dipy.nn.histo_resdnn"]], "Module: nn.model": [[169, "module-dipy.nn.model"]], "Module: nn.synb0": [[169, "module-dipy.nn.synb0"]], "Module: nn.utils": [[169, "module-dipy.nn.utils"]], "Cnn1DDenoiser": [[169, "cnn1ddenoiser"]], "EncoderBlock": [[169, "encoderblock"], [169, "id67"]], "DecoderBlock": [[169, "decoderblock"], [169, "id72"]], "DeepN4": [[169, "deepn4"]], "UNet3D": [[169, "unet3d"], [169, "id86"]], "Block": [[169, "block"]], "ChannelSum": [[169, "channelsum"]], "EVACPlus": [[169, "evacplus"]], "prepare_img": [[169, "prepare-img"]], "init_model": [[169, "init-model"]], "HistoResDNN": [[169, "historesdnn"]], "SingleLayerPerceptron": [[169, "singlelayerperceptron"]], "MultipleLayerPercepton": [[169, "multiplelayerpercepton"]], "Synb0": [[169, "synb0"]], "normalize": [[169, "normalize"]], "unnormalize": [[169, "unnormalize"]], "set_logger_level": [[169, "set-logger-level"]], "transform_img": [[169, "transform-img"]], "recover_img": [[169, "recover-img"]], "correct_minor_errors": [[169, "correct-minor-errors"]], "reconst": [[170, "module-dipy.reconst"]], "Module: reconst.base": [[170, "module-dipy.reconst.base"]], "Module: reconst.cache": [[170, "module-dipy.reconst.cache"]], "Module: reconst.cross_validation": [[170, "module-dipy.reconst.cross_validation"]], "Module: reconst.csdeconv": [[170, "module-dipy.reconst.csdeconv"]], "Module: reconst.cti": [[170, "module-dipy.reconst.cti"]], "Module: reconst.dki": [[170, "module-dipy.reconst.dki"]], "Module: reconst.dki_micro": [[170, "module-dipy.reconst.dki_micro"]], "Module: reconst.dsi": [[170, "module-dipy.reconst.dsi"]], "Module: reconst.dti": [[170, "module-dipy.reconst.dti"]], "Module: reconst.eudx_direction_getter": [[170, "module-dipy.reconst.eudx_direction_getter"]], "Module: reconst.forecast": [[170, "module-dipy.reconst.forecast"]], "Module: reconst.fwdti": [[170, "module-dipy.reconst.fwdti"]], "Module: reconst.gqi": [[170, "module-dipy.reconst.gqi"]], "Module: reconst.ivim": [[170, "module-dipy.reconst.ivim"]], "Module: reconst.mapmri": [[170, "module-dipy.reconst.mapmri"]], "Module: reconst.mcsd": [[170, "module-dipy.reconst.mcsd"]], "Module: reconst.msdki": [[170, "module-dipy.reconst.msdki"]], "Module: reconst.multi_voxel": [[170, "module-dipy.reconst.multi_voxel"]], "Module: reconst.odf": [[170, "module-dipy.reconst.odf"]], "Module: reconst.qtdmri": [[170, "module-dipy.reconst.qtdmri"]], "Module: reconst.qti": [[170, "module-dipy.reconst.qti"]], "Module: reconst.quick_squash": [[170, "module-dipy.reconst.quick_squash"]], "Module: reconst.recspeed": [[170, "module-dipy.reconst.recspeed"]], "Module: reconst.rumba": [[170, "module-dipy.reconst.rumba"]], "Module: reconst.sfm": [[170, "module-dipy.reconst.sfm"]], "Module: reconst.shm": [[170, "module-dipy.reconst.shm"]], "Module: reconst.shore": [[170, "module-dipy.reconst.shore"]], "Module: reconst.utils": [[170, "module-dipy.reconst.utils"]], "Module: reconst.vec_val_sum": [[170, "module-dipy.reconst.vec_val_sum"]], "ReconstModel": [[170, "reconstmodel"]], "ReconstFit": [[170, "reconstfit"]], "Cache": [[170, "cache"]], "coeff_of_determination": [[170, "coeff-of-determination"]], "kfold_xval": [[170, "kfold-xval"]], "AxSymShResponse": [[170, "axsymshresponse"]], "ConstrainedSphericalDeconvModel": [[170, "constrainedsphericaldeconvmodel"]], "ConstrainedSDTModel": [[170, "constrainedsdtmodel"]], "auto_response": [[170, "auto-response"]], "response_from_mask": [[170, "response-from-mask"]], "estimate_response": [[170, "estimate-response"]], "forward_sdt_deconv_mat": [[170, "forward-sdt-deconv-mat"]], "csdeconv": [[170, "csdeconv"]], "odf_deconv": [[170, "odf-deconv"]], "odf_sh_to_sharp": [[170, "odf-sh-to-sharp"]], "mask_for_response_ssst": [[170, "mask-for-response-ssst"]], "response_from_mask_ssst": [[170, "response-from-mask-ssst"]], "auto_response_ssst": [[170, "auto-response-ssst"]], "recursive_response": [[170, "recursive-response"]], "fa_trace_to_lambdas": [[170, "fa-trace-to-lambdas"]], "CorrelationTensorModel": [[170, "correlationtensormodel"]], "CorrelationTensorFit": [[170, "correlationtensorfit"]], "Parameters:": [[170, "id164"]], "from_qte_to_cti": [[170, "from-qte-to-cti"]], "multi_gaussian_k_from_c": [[170, "multi-gaussian-k-from-c"]], "split_cti_params": [[170, "split-cti-params"]], "cti_prediction": [[170, "cti-prediction"]], "params_to_cti_params": [[170, "params-to-cti-params"]], "ls_fit_cti": [[170, "ls-fit-cti"]], "DiffusionKurtosisModel": [[170, "diffusionkurtosismodel"]], "DiffusionKurtosisFit": [[170, "diffusionkurtosisfit"]], "carlson_rf": [[170, "carlson-rf"]], "carlson_rd": [[170, "carlson-rd"]], "directional_diffusion": [[170, "directional-diffusion"]], "directional_diffusion_variance": [[170, "directional-diffusion-variance"]], "directional_kurtosis": [[170, "directional-kurtosis"]], "apparent_kurtosis_coef": [[170, "apparent-kurtosis-coef"]], "mean_kurtosis": [[170, "mean-kurtosis"]], "radial_kurtosis": [[170, "radial-kurtosis"]], "axial_kurtosis": [[170, "axial-kurtosis"]], "kurtosis_maximum": [[170, "kurtosis-maximum"]], "mean_kurtosis_tensor": [[170, "mean-kurtosis-tensor"]], "kurtosis_fractional_anisotropy": [[170, "kurtosis-fractional-anisotropy"]], "dki_prediction": [[170, "dki-prediction"]], "params_to_dki_params": [[170, "params-to-dki-params"]], "ls_fit_dki": [[170, "ls-fit-dki"]], "cls_fit_dki": [[170, "cls-fit-dki"]], "Wrotate": [[170, "wrotate"]], "Wrotate_element": [[170, "wrotate-element"]], "Wcons": [[170, "wcons"]], "split_dki_param": [[170, "split-dki-param"]], "KurtosisMicrostructureModel": [[170, "kurtosismicrostructuremodel"]], "KurtosisMicrostructuralFit": [[170, "kurtosismicrostructuralfit"]], "axonal_water_fraction": [[170, "axonal-water-fraction"]], "diffusion_components": [[170, "diffusion-components"]], "dkimicro_prediction": [[170, "dkimicro-prediction"]], "tortuosity": [[170, "tortuosity"]], "DiffusionSpectrumModel": [[170, "diffusionspectrummodel"]], "DiffusionSpectrumFit": [[170, "diffusionspectrumfit"]], "DiffusionSpectrumDeconvModel": [[170, "diffusionspectrumdeconvmodel"]], "DiffusionSpectrumDeconvFit": [[170, "diffusionspectrumdeconvfit"]], "create_qspace": [[170, "create-qspace"]], "create_qtable": [[170, "create-qtable"]], "hanning_filter": [[170, "hanning-filter"]], "pdf_interp_coords": [[170, "pdf-interp-coords"]], "pdf_odf": [[170, "pdf-odf"]], "half_to_full_qspace": [[170, "half-to-full-qspace"]], "project_hemisph_bvecs": [[170, "project-hemisph-bvecs"]], "threshold_propagator": [[170, "threshold-propagator"]], "gen_PSF": [[170, "gen-psf"]], "LR_deconv": [[170, "lr-deconv"]], "TensorModel": [[170, "tensormodel"]], "TensorFit": [[170, "tensorfit"]], "fractional_anisotropy": [[170, "fractional-anisotropy"]], "geodesic_anisotropy": [[170, "geodesic-anisotropy"]], "mean_diffusivity": [[170, "mean-diffusivity"]], "axial_diffusivity": [[170, "axial-diffusivity"]], "radial_diffusivity": [[170, "radial-diffusivity"]], "trace": [[170, "trace"]], "color_fa": [[170, "color-fa"]], "determinant": [[170, "determinant"]], "isotropic": [[170, "isotropic"]], "deviatoric": [[170, "deviatoric"]], "norm": [[170, "norm"]], "mode": [[170, "mode"]], "linearity": [[170, "linearity"]], "planarity": [[170, "planarity"]], "sphericity": [[170, "sphericity"]], "apparent_diffusion_coef": [[170, "apparent-diffusion-coef"]], "tensor_prediction": [[170, "tensor-prediction"]], "iter_fit_tensor": [[170, "iter-fit-tensor"]], "wls_fit_tensor": [[170, "wls-fit-tensor"], [170, "id599"]], "ols_fit_tensor": [[170, "ols-fit-tensor"]], "nlls_fit_tensor": [[170, "nlls-fit-tensor"]], "restore_fit_tensor": [[170, "restore-fit-tensor"]], "_lt_indices": [[170, "lt-indices"]], "from_lower_triangular": [[170, "from-lower-triangular"]], "_lt_rows": [[170, "lt-rows"]], "_lt_cols": [[170, "lt-cols"]], "lower_triangular": [[170, "lower-triangular"]], "decompose_tensor": [[170, "decompose-tensor"]], "design_matrix": [[170, "design-matrix"], [170, "id961"], [170, "id1103"]], "quantize_evecs": [[170, "quantize-evecs"]], "eig_from_lo_tri": [[170, "eig-from-lo-tri"]], "EuDXDirectionGetter": [[170, "eudxdirectiongetter"]], "ForecastModel": [[170, "forecastmodel"]], "ForecastFit": [[170, "forecastfit"]], "find_signal_means": [[170, "find-signal-means"]], "forecast_error_func": [[170, "forecast-error-func"]], "psi_l": [[170, "psi-l"]], "forecast_matrix": [[170, "forecast-matrix"]], "rho_matrix": [[170, "rho-matrix"]], "lb_forecast": [[170, "lb-forecast"]], "FreeWaterTensorModel": [[170, "freewatertensormodel"]], "FreeWaterTensorFit": [[170, "freewatertensorfit"]], "fwdti_prediction": [[170, "fwdti-prediction"]], "wls_iter": [[170, "wls-iter"]], "nls_iter": [[170, "nls-iter"]], "nls_fit_tensor": [[170, "nls-fit-tensor"]], "lower_triangular_to_cholesky": [[170, "lower-triangular-to-cholesky"]], "cholesky_to_lower_triangular": [[170, "cholesky-to-lower-triangular"]], "GeneralizedQSamplingModel": [[170, "generalizedqsamplingmodel"]], "GeneralizedQSamplingFit": [[170, "generalizedqsamplingfit"]], "normalize_qa": [[170, "normalize-qa"]], "squared_radial_component": [[170, "squared-radial-component"]], "npa": [[170, "npa"]], "equatorial_zone_vertices": [[170, "equatorial-zone-vertices"]], "polar_zone_vertices": [[170, "polar-zone-vertices"]], "upper_hemi_map": [[170, "upper-hemi-map"]], "equatorial_maximum": [[170, "equatorial-maximum"]], "patch_vertices": [[170, "patch-vertices"]], "patch_maximum": [[170, "patch-maximum"]], "odf_sum": [[170, "odf-sum"]], "patch_sum": [[170, "patch-sum"]], "triple_odf_maxima": [[170, "triple-odf-maxima"]], "IvimModelTRR": [[170, "ivimmodeltrr"]], "IvimModelVP": [[170, "ivimmodelvp"]], "IvimFit": [[170, "ivimfit"]], "ivim_prediction": [[170, "ivim-prediction"]], "f_D_star_prediction": [[170, "f-d-star-prediction"]], "f_D_star_error": [[170, "f-d-star-error"]], "ivim_model_selector": [[170, "ivim-model-selector"]], "MapmriModel": [[170, "mapmrimodel"]], "MapmriFit": [[170, "mapmrifit"]], "isotropic_scale_factor": [[170, "isotropic-scale-factor"]], "mapmri_index_matrix": [[170, "mapmri-index-matrix"]], "b_mat": [[170, "b-mat"]], "b_mat_isotropic": [[170, "b-mat-isotropic"]], "mapmri_phi_1d": [[170, "mapmri-phi-1d"]], "mapmri_phi_matrix": [[170, "mapmri-phi-matrix"]], "mapmri_psi_1d": [[170, "mapmri-psi-1d"]], "mapmri_psi_matrix": [[170, "mapmri-psi-matrix"]], "mapmri_odf_matrix": [[170, "mapmri-odf-matrix"]], "mapmri_isotropic_phi_matrix": [[170, "mapmri-isotropic-phi-matrix"]], "mapmri_isotropic_radial_signal_basis": [[170, "mapmri-isotropic-radial-signal-basis"]], "mapmri_isotropic_M_mu_independent": [[170, "mapmri-isotropic-m-mu-independent"]], "mapmri_isotropic_M_mu_dependent": [[170, "mapmri-isotropic-m-mu-dependent"]], "mapmri_isotropic_psi_matrix": [[170, "mapmri-isotropic-psi-matrix"]], "mapmri_isotropic_radial_pdf_basis": [[170, "mapmri-isotropic-radial-pdf-basis"]], "mapmri_isotropic_K_mu_independent": [[170, "mapmri-isotropic-k-mu-independent"]], "mapmri_isotropic_K_mu_dependent": [[170, "mapmri-isotropic-k-mu-dependent"]], "binomialfloat": [[170, "binomialfloat"]], "mapmri_isotropic_odf_matrix": [[170, "mapmri-isotropic-odf-matrix"]], "mapmri_isotropic_odf_sh_matrix": [[170, "mapmri-isotropic-odf-sh-matrix"]], "mapmri_isotropic_laplacian_reg_matrix": [[170, "mapmri-isotropic-laplacian-reg-matrix"]], "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix": [[170, "mapmri-isotropic-laplacian-reg-matrix-from-index-matrix"]], "mapmri_isotropic_index_matrix": [[170, "mapmri-isotropic-index-matrix"]], "create_rspace": [[170, "create-rspace"], [170, "id1297"]], "delta": [[170, "delta"]], "map_laplace_u": [[170, "map-laplace-u"]], "map_laplace_t": [[170, "map-laplace-t"]], "map_laplace_s": [[170, "map-laplace-s"]], "mapmri_STU_reg_matrices": [[170, "mapmri-stu-reg-matrices"]], "mapmri_laplacian_reg_matrix": [[170, "mapmri-laplacian-reg-matrix"]], "generalized_crossvalidation_array": [[170, "generalized-crossvalidation-array"]], "generalized_crossvalidation": [[170, "generalized-crossvalidation"], [170, "id1045"]], "gcv_cost_function": [[170, "gcv-cost-function"]], "MultiShellResponse": [[170, "multishellresponse"]], "MultiShellDeconvModel": [[170, "multishelldeconvmodel"]], "MSDeconvFit": [[170, "msdeconvfit"]], "QpFitter": [[170, "qpfitter"]], "multi_tissue_basis": [[170, "multi-tissue-basis"]], "solve_qp": [[170, "solve-qp"]], "multi_shell_fiber_response": [[170, "multi-shell-fiber-response"]], "mask_for_response_msmt": [[170, "mask-for-response-msmt"]], "response_from_mask_msmt": [[170, "response-from-mask-msmt"]], "auto_response_msmt": [[170, "auto-response-msmt"]], "MeanDiffusionKurtosisModel": [[170, "meandiffusionkurtosismodel"]], "MeanDiffusionKurtosisFit": [[170, "meandiffusionkurtosisfit"]], "mean_signal_bvalue": [[170, "mean-signal-bvalue"]], "msk_from_awf": [[170, "msk-from-awf"]], "awf_from_msk": [[170, "awf-from-msk"]], "msdki_prediction": [[170, "msdki-prediction"]], "wls_fit_msdki": [[170, "wls-fit-msdki"]], "MultiVoxelFit": [[170, "multivoxelfit"]], "CallableArray": [[170, "callablearray"]], "multi_voxel_fit": [[170, "multi-voxel-fit"]], "OdfModel": [[170, "odfmodel"]], "OdfFit": [[170, "odffit"]], "gfa": [[170, "gfa"]], "minmax_normalize": [[170, "minmax-normalize"]], "QtdmriModel": [[170, "qtdmrimodel"]], "QtdmriFit": [[170, "qtdmrifit"]], "qtdmri_to_mapmri_matrix": [[170, "qtdmri-to-mapmri-matrix"]], "qtdmri_isotropic_to_mapmri_matrix": [[170, "qtdmri-isotropic-to-mapmri-matrix"]], "qtdmri_temporal_normalization": [[170, "qtdmri-temporal-normalization"]], "qtdmri_mapmri_normalization": [[170, "qtdmri-mapmri-normalization"]], "qtdmri_mapmri_isotropic_normalization": [[170, "qtdmri-mapmri-isotropic-normalization"]], "qtdmri_signal_matrix_": [[170, "qtdmri-signal-matrix"]], "qtdmri_signal_matrix": [[170, "id1023"]], "qtdmri_eap_matrix": [[170, "qtdmri-eap-matrix"]], "qtdmri_isotropic_signal_matrix_": [[170, "qtdmri-isotropic-signal-matrix"]], "qtdmri_isotropic_signal_matrix": [[170, "id1024"]], "qtdmri_eap_matrix_": [[170, "id1025"]], "qtdmri_isotropic_eap_matrix_": [[170, "qtdmri-isotropic-eap-matrix"]], "qtdmri_isotropic_eap_matrix": [[170, "id1026"]], "radial_basis_opt": [[170, "radial-basis-opt"]], "angular_basis_opt": [[170, "angular-basis-opt"]], "radial_basis_EAP_opt": [[170, "radial-basis-eap-opt"]], "angular_basis_EAP_opt": [[170, "angular-basis-eap-opt"]], "temporal_basis": [[170, "temporal-basis"]], "qtdmri_index_matrix": [[170, "qtdmri-index-matrix"]], "qtdmri_isotropic_index_matrix": [[170, "qtdmri-isotropic-index-matrix"]], "qtdmri_laplacian_reg_matrix": [[170, "qtdmri-laplacian-reg-matrix"]], "qtdmri_isotropic_laplacian_reg_matrix": [[170, "qtdmri-isotropic-laplacian-reg-matrix"]], "part23_reg_matrix_q": [[170, "part23-reg-matrix-q"]], "part23_iso_reg_matrix_q": [[170, "part23-iso-reg-matrix-q"]], "part4_reg_matrix_q": [[170, "part4-reg-matrix-q"]], "part4_iso_reg_matrix_q": [[170, "part4-iso-reg-matrix-q"]], "part1_reg_matrix_tau": [[170, "part1-reg-matrix-tau"]], "part23_reg_matrix_tau": [[170, "part23-reg-matrix-tau"]], "part4_reg_matrix_tau": [[170, "part4-reg-matrix-tau"]], "H": [[170, "h"]], "GCV_cost_function": [[170, "id1048"]], "qtdmri_isotropic_scaling": [[170, "qtdmri-isotropic-scaling"]], "qtdmri_anisotropic_scaling": [[170, "qtdmri-anisotropic-scaling"]], "design_matrix_spatial": [[170, "design-matrix-spatial"]], "create_rt_space_grid": [[170, "create-rt-space-grid"]], "qtdmri_number_of_coefficients": [[170, "qtdmri-number-of-coefficients"]], "l1_crossvalidation": [[170, "l1-crossvalidation"]], "elastic_crossvalidation": [[170, "elastic-crossvalidation"]], "visualise_gradient_table_G_Delta_rainbow": [[170, "visualise-gradient-table-g-delta-rainbow"]], "QtiModel": [[170, "qtimodel"]], "QtiFit": [[170, "qtifit"]], "from_3x3_to_6x1": [[170, "from-3x3-to-6x1"]], "from_6x1_to_3x3": [[170, "from-6x1-to-3x3"]], "from_6x6_to_21x1": [[170, "from-6x6-to-21x1"]], "from_21x1_to_6x6": [[170, "from-21x1-to-6x6"]], "cvxpy_1x6_to_3x3": [[170, "cvxpy-1x6-to-3x3"]], "cvxpy_1x21_to_6x6": [[170, "cvxpy-1x21-to-6x6"]], "dtd_covariance": [[170, "dtd-covariance"]], "qti_signal": [[170, "qti-signal"]], "quick_squash": [[170, "quick-squash"]], "reduce": [[170, "reduce"]], "adj_to_countarrs": [[170, "adj-to-countarrs"]], "argmax_from_adj": [[170, "argmax-from-adj"]], "argmax_from_countarrs": [[170, "argmax-from-countarrs"]], "le_to_odf": [[170, "le-to-odf"]], "local_maxima": [[170, "local-maxima"]], "proc_reco_args": [[170, "proc-reco-args"]], "remove_similar_vertices": [[170, "remove-similar-vertices"]], "search_descending": [[170, "search-descending"]], "sum_on_blocks_1d": [[170, "sum-on-blocks-1d"]], "RumbaSDModel": [[170, "rumbasdmodel"]], "RumbaFit": [[170, "rumbafit"]], "rumba_deconv": [[170, "rumba-deconv"]], "mbessel_ratio": [[170, "mbessel-ratio"]], "generate_kernel": [[170, "generate-kernel"]], "rumba_deconv_global": [[170, "rumba-deconv-global"]], "IsotropicModel": [[170, "isotropicmodel"]], "IsotropicFit": [[170, "isotropicfit"]], "ExponentialIsotropicModel": [[170, "exponentialisotropicmodel"]], "ExponentialIsotropicFit": [[170, "exponentialisotropicfit"]], "SparseFascicleModel": [[170, "sparsefasciclemodel"]], "SparseFascicleFit": [[170, "sparsefasciclefit"]], "sfm_design_matrix": [[170, "sfm-design-matrix"]], "SphHarmModel": [[170, "sphharmmodel"]], "QballBaseModel": [[170, "qballbasemodel"]], "SphHarmFit": [[170, "sphharmfit"]], "CsaOdfModel": [[170, "csaodfmodel"]], "OpdtModel": [[170, "opdtmodel"]], "QballModel": [[170, "qballmodel"]], "ResidualBootstrapWrapper": [[170, "residualbootstrapwrapper"]], "forward_sdeconv_mat": [[170, "forward-sdeconv-mat"]], "sh_to_rh": [[170, "sh-to-rh"]], "gen_dirac": [[170, "gen-dirac"]], "spherical_harmonics": [[170, "spherical-harmonics"]], "real_sph_harm": [[170, "real-sph-harm"]], "real_sh_tournier_from_index": [[170, "real-sh-tournier-from-index"]], "real_sh_descoteaux_from_index": [[170, "real-sh-descoteaux-from-index"]], "real_sh_tournier": [[170, "real-sh-tournier"]], "real_sh_descoteaux": [[170, "real-sh-descoteaux"]], "real_sym_sh_mrtrix": [[170, "real-sym-sh-mrtrix"]], "real_sym_sh_basis": [[170, "real-sym-sh-basis"]], "sph_harm_ind_list": [[170, "sph-harm-ind-list"]], "order_from_ncoef": [[170, "order-from-ncoef"]], "smooth_pinv": [[170, "smooth-pinv"]], "lazy_index": [[170, "lazy-index"]], "normalize_data": [[170, "normalize-data"]], "hat": [[170, "hat"]], "lcr_matrix": [[170, "lcr-matrix"]], "bootstrap_data_array": [[170, "bootstrap-data-array"]], "bootstrap_data_voxel": [[170, "bootstrap-data-voxel"]], "sh_to_sf_matrix": [[170, "sh-to-sf-matrix"]], "calculate_max_order": [[170, "calculate-max-order"]], "anisotropic_power": [[170, "anisotropic-power"]], "convert_sh_to_full_basis": [[170, "convert-sh-to-full-basis"]], "convert_sh_from_legacy": [[170, "convert-sh-from-legacy"]], "convert_sh_to_legacy": [[170, "convert-sh-to-legacy"]], "convert_sh_descoteaux_tournier": [[170, "convert-sh-descoteaux-tournier"]], "ShoreModel": [[170, "shoremodel"]], "ShoreFit": [[170, "shorefit"]], "shore_matrix": [[170, "shore-matrix"]], "shore_matrix_pdf": [[170, "shore-matrix-pdf"]], "shore_matrix_odf": [[170, "shore-matrix-odf"]], "l_shore": [[170, "l-shore"]], "n_shore": [[170, "n-shore"]], "shore_indices": [[170, "shore-indices"]], "shore_order": [[170, "shore-order"]], "dki_design_matrix": [[170, "dki-design-matrix"]], "cti_design_matrix": [[170, "cti-design-matrix"]], "convert_tensors": [[170, "convert-tensors"]], "vec_val_vect": [[170, "vec-val-vect"]], "segment": [[171, "module-dipy.segment"]], "Module: segment.bundles": [[171, "module-dipy.segment.bundles"]], "Module: segment.clustering": [[171, "module-dipy.segment.clustering"]], "Module: segment.clustering_algorithms": [[171, "module-dipy.segment.clustering_algorithms"]], "Module: segment.clusteringspeed": [[171, "module-dipy.segment.clusteringspeed"]], "Module: segment.cythonutils": [[171, "module-dipy.segment.cythonutils"]], "Module: segment.featurespeed": [[171, "module-dipy.segment.featurespeed"]], "Module: segment.fss": [[171, "module-dipy.segment.fss"]], "Module: segment.mask": [[171, "module-dipy.segment.mask"]], "Module: segment.metric": [[171, "module-dipy.segment.metric"]], "Module: segment.metricspeed": [[171, "module-dipy.segment.metricspeed"]], "Module: segment.mrf": [[171, "module-dipy.segment.mrf"]], "Module: segment.threshold": [[171, "module-dipy.segment.threshold"]], "Module: segment.tissue": [[171, "module-dipy.segment.tissue"]], "check_range": [[171, "check-range"]], "bundle_adjacency": [[171, "bundle-adjacency"]], "ba_analysis": [[171, "ba-analysis"]], "cluster_bundle": [[171, "cluster-bundle"]], "bundle_shape_similarity": [[171, "bundle-shape-similarity"]], "Identity": [[171, "identity"]], "Cluster": [[171, "cluster"]], "ClusterCentroid": [[171, "clustercentroid"], [171, "id79"], [171, "id99"]], "ClusterMap": [[171, "clustermap"]], "ClusterMapCentroid": [[171, "clustermapcentroid"], [171, "id84"], [171, "id104"]], "Clustering": [[171, "clustering"]], "QuickBundles": [[171, "quickbundles"], [171, "id108"]], "QuickBundlesX": [[171, "quickbundlesx"], [171, "id109"]], "TreeCluster": [[171, "treecluster"], [171, "id110"]], "TreeClusterMap": [[171, "treeclustermap"], [171, "id111"]], "qbx_and_merge": [[171, "qbx-and-merge"]], "DTYPE": [[171, "dtype"], [171, "id107"]], "clusters_centroid2clustermap_centroid": [[171, "clusters-centroid2clustermap-centroid"]], "peek": [[171, "peek"]], "quickbundles": [[171, "id88"]], "quickbundlesx": [[171, "id93"]], "Clusters": [[171, "clusters"]], "ClustersCentroid": [[171, "clusterscentroid"]], "evaluate_aabb_checks": [[171, "evaluate-aabb-checks"]], "ArcLengthFeature": [[171, "arclengthfeature"]], "CenterOfMassFeature": [[171, "centerofmassfeature"]], "CythonFeature": [[171, "cythonfeature"]], "Feature": [[171, "feature"]], "IdentityFeature": [[171, "identityfeature"]], "MidpointFeature": [[171, "midpointfeature"]], "ResampleFeature": [[171, "resamplefeature"]], "VectorOfEndpointsFeature": [[171, "vectorofendpointsfeature"]], "extract": [[171, "extract"]], "infer_shape": [[171, "infer-shape"]], "FastStreamlineSearch": [[171, "faststreamlinesearch"]], "nearest_from_matrix_row": [[171, "nearest-from-matrix-row"]], "nearest_from_matrix_col": [[171, "nearest-from-matrix-col"]], "multi_median": [[171, "multi-median"]], "applymask": [[171, "applymask"]], "bounding_box": [[171, "bounding-box"]], "crop": [[171, "crop"]], "median_otsu": [[171, "median-otsu"]], "segment_from_cfa": [[171, "segment-from-cfa"]], "clean_cc_mask": [[171, "clean-cc-mask"]], "mdf": [[171, "mdf"]], "mean_manhattan_distance": [[171, "mean-manhattan-distance"]], "mean_euclidean_distance": [[171, "mean-euclidean-distance"]], "AveragePointwiseEuclideanMetric": [[171, "averagepointwiseeuclideanmetric"]], "CosineMetric": [[171, "cosinemetric"]], "CythonMetric": [[171, "cythonmetric"]], "Metric": [[171, "metric"]], "MinimumAverageDirectFlipMetric": [[171, "minimumaveragedirectflipmetric"]], "SumPointwiseEuclideanMetric": [[171, "sumpointwiseeuclideanmetric"]], "dist": [[171, "dist"]], "distance_matrix": [[171, "distance-matrix"]], "ConstantObservationModel": [[171, "constantobservationmodel"]], "IteratedConditionalModes": [[171, "iteratedconditionalmodes"]], "otsu": [[171, "otsu"]], "upper_bound_by_rate": [[171, "upper-bound-by-rate"]], "upper_bound_by_percent": [[171, "upper-bound-by-percent"]], "TissueClassifierHMRF": [[171, "tissueclassifierhmrf"]], "sims": [[172, "module-dipy.sims"]], "Module: sims.phantom": [[172, "module-dipy.sims.phantom"]], "Module: sims.voxel": [[172, "module-dipy.sims.voxel"]], "add_noise": [[172, "add-noise"], [172, "id14"]], "diff2eigenvectors": [[172, "diff2eigenvectors"]], "orbital_phantom": [[172, "orbital-phantom"]], "diffusion_evals": [[172, "diffusion-evals"]], "sticks_and_ball": [[172, "sticks-and-ball"]], "callaghan_perpendicular": [[172, "callaghan-perpendicular"]], "gaussian_parallel": [[172, "gaussian-parallel"]], "cylinders_and_ball_soderman": [[172, "cylinders-and-ball-soderman"]], "single_tensor": [[172, "single-tensor"]], "multi_tensor": [[172, "multi-tensor"]], "multi_tensor_dki": [[172, "multi-tensor-dki"]], "kurtosis_element": [[172, "kurtosis-element"]], "dki_signal": [[172, "dki-signal"]], "single_tensor_odf": [[172, "single-tensor-odf"]], "all_tensor_evecs": [[172, "all-tensor-evecs"]], "multi_tensor_odf": [[172, "multi-tensor-odf"]], "single_tensor_rtop": [[172, "single-tensor-rtop"]], "multi_tensor_rtop": [[172, "multi-tensor-rtop"]], "single_tensor_pdf": [[172, "single-tensor-pdf"]], "multi_tensor_pdf": [[172, "multi-tensor-pdf"]], "single_tensor_msd": [[172, "single-tensor-msd"]], "multi_tensor_msd": [[172, "multi-tensor-msd"]], "stats": [[173, "module-dipy.stats"]], "Module: stats.analysis": [[173, "module-dipy.stats.analysis"]], "peak_values": [[173, "peak-values"]], "anatomical_measures": [[173, "anatomical-measures"]], "assignment_map": [[173, "assignment-map"]], "gaussian_weights": [[173, "gaussian-weights"]], "afq_profile": [[173, "afq-profile"]], "tracking": [[174, "module-dipy.tracking"]], "Module: tracking._utils": [[174, "module-dipy.tracking._utils"]], "Module: tracking.direction_getter": [[174, "module-dipy.tracking.direction_getter"]], "Module: tracking.distances": [[174, "module-dipy.tracking.distances"]], "Module: tracking.fbcmeasures": [[174, "module-dipy.tracking.fbcmeasures"]], "Module: tracking.learning": [[174, "module-dipy.tracking.learning"]], "Module: tracking.life": [[174, "module-dipy.tracking.life"]], "Module: tracking.local_tracking": [[174, "module-dipy.tracking.local_tracking"]], "Module: tracking.localtrack": [[174, "module-dipy.tracking.localtrack"]], "Module: tracking.mesh": [[174, "module-dipy.tracking.mesh"]], "Module: tracking.metrics": [[174, "module-dipy.tracking.metrics"]], "Module: tracking.propspeed": [[174, "module-dipy.tracking.propspeed"]], "Module: tracking.stopping_criterion": [[174, "module-dipy.tracking.stopping_criterion"]], "Module: tracking.streamline": [[174, "module-dipy.tracking.streamline"]], "Module: tracking.streamlinespeed": [[174, "module-dipy.tracking.streamlinespeed"]], "Module: tracking.utils": [[174, "module-dipy.tracking.utils"]], "Important Notes": [[174, "important-notes"]], "Module: tracking.vox2track": [[174, "module-dipy.tracking.vox2track"]], "DirectionGetter": [[174, "directiongetter"]], "add_3vecs": [[174, "add-3vecs"]], "approx_polygon_track": [[174, "approx-polygon-track"]], "approximate_mdl_trajectory": [[174, "approximate-mdl-trajectory"]], "bundles_distances_mam": [[174, "bundles-distances-mam"]], "bundles_distances_mdf": [[174, "bundles-distances-mdf"]], "cut_plane": [[174, "cut-plane"]], "inner_3vecs": [[174, "inner-3vecs"]], "intersect_segment_cylinder": [[174, "intersect-segment-cylinder"]], "larch_3merge": [[174, "larch-3merge"]], "larch_3split": [[174, "larch-3split"]], "lee_angle_distance": [[174, "lee-angle-distance"]], "lee_perpendicular_distance": [[174, "lee-perpendicular-distance"]], "local_skeleton_clustering": [[174, "local-skeleton-clustering"]], "local_skeleton_clustering_3pts": [[174, "local-skeleton-clustering-3pts"]], "mam_distances": [[174, "mam-distances"]], "minimum_closest_distance": [[174, "minimum-closest-distance"]], "most_similar_track_mam": [[174, "most-similar-track-mam"]], "mul_3vec": [[174, "mul-3vec"]], "mul_3vecs": [[174, "mul-3vecs"]], "norm_3vec": [[174, "norm-3vec"]], "normalized_3vec": [[174, "normalized-3vec"]], "point_segment_sq_distance": [[174, "point-segment-sq-distance"]], "point_track_sq_distance_check": [[174, "point-track-sq-distance-check"]], "sub_3vecs": [[174, "sub-3vecs"]], "track_dist_3pts": [[174, "track-dist-3pts"]], "track_roi_intersection_check": [[174, "track-roi-intersection-check"]], "FBCMeasures": [[174, "fbcmeasures"]], "KDTree": [[174, "kdtree"]], "interp1d": [[174, "interp1d"]], "compute_rfbc": [[174, "compute-rfbc"]], "min_moving_average": [[174, "min-moving-average"]], "detect_corresponding_tracks": [[174, "detect-corresponding-tracks"]], "detect_corresponding_tracks_plus": [[174, "detect-corresponding-tracks-plus"]], "LifeSignalMaker": [[174, "lifesignalmaker"]], "FiberModel": [[174, "fibermodel"]], "FiberFit": [[174, "fiberfit"]], "streamline_gradients": [[174, "streamline-gradients"]], "grad_tensor": [[174, "grad-tensor"]], "streamline_tensors": [[174, "streamline-tensors"]], "streamline_signal": [[174, "streamline-signal"]], "voxel2streamline": [[174, "voxel2streamline"]], "LocalTracking": [[174, "localtracking"]], "ParticleFilteringTracking": [[174, "particlefilteringtracking"]], "local_tracker": [[174, "local-tracker"]], "pft_tracker": [[174, "pft-tracker"]], "random_coordinates_from_surface": [[174, "random-coordinates-from-surface"]], "seeds_from_surface_coordinates": [[174, "seeds-from-surface-coordinates"]], "triangles_area": [[174, "triangles-area"]], "vertices_to_triangles_values": [[174, "vertices-to-triangles-values"]], "winding": [[174, "winding"]], "length": [[174, "length"], [174, "id265"], [174, "id303"]], "bytes": [[174, "bytes"]], "midpoint": [[174, "midpoint"]], "downsample": [[174, "downsample"]], "magn": [[174, "magn"]], "frenet_serret": [[174, "frenet-serret"]], "mean_curvature": [[174, "mean-curvature"]], "mean_orientation": [[174, "mean-orientation"]], "generate_combinations": [[174, "generate-combinations"]], "longest_track_bundle": [[174, "longest-track-bundle"]], "intersect_sphere": [[174, "intersect-sphere"]], "inside_sphere": [[174, "inside-sphere"]], "inside_sphere_points": [[174, "inside-sphere-points"]], "spline": [[174, "spline"]], "startpoint": [[174, "startpoint"]], "endpoint": [[174, "endpoint"]], "arbitrarypoint": [[174, "arbitrarypoint"]], "principal_components": [[174, "principal-components"]], "midpoint2point": [[174, "midpoint2point"]], "eudx_both_directions": [[174, "eudx-both-directions"]], "ndarray_offset": [[174, "ndarray-offset"]], "ActStoppingCriterion": [[174, "actstoppingcriterion"]], "AnatomicalStoppingCriterion": [[174, "anatomicalstoppingcriterion"]], "BinaryStoppingCriterion": [[174, "binarystoppingcriterion"]], "CmcStoppingCriterion": [[174, "cmcstoppingcriterion"]], "StoppingCriterion": [[174, "stoppingcriterion"]], "StreamlineStatus": [[174, "streamlinestatus"]], "ThresholdStoppingCriterion": [[174, "thresholdstoppingcriterion"]], "unlist_streamlines": [[174, "unlist-streamlines"]], "relist_streamlines": [[174, "relist-streamlines"]], "center_streamlines": [[174, "center-streamlines"]], "deform_streamlines": [[174, "deform-streamlines"]], "transform_streamlines": [[174, "transform-streamlines"]], "select_random_set_of_streamlines": [[174, "select-random-set-of-streamlines"]], "select_by_rois": [[174, "select-by-rois"]], "See also": [[174, "id239"]], "cluster_confidence": [[174, "cluster-confidence"]], "orient_by_rois": [[174, "orient-by-rois"]], "orient_by_streamline": [[174, "orient-by-streamline"]], "values_from_volume": [[174, "values-from-volume"]], "nbytes": [[174, "nbytes"]], "Streamlines": [[174, "streamlines"]], "compress_streamlines": [[174, "compress-streamlines"]], "set_number_of_points": [[174, "set-number-of-points"]], "density_map": [[174, "density-map"]], "connectivity_matrix": [[174, "connectivity-matrix"]], "ndbincount": [[174, "ndbincount"]], "reduce_labels": [[174, "reduce-labels"]], "subsegment": [[174, "subsegment"]], "seeds_from_mask": [[174, "seeds-from-mask"]], "random_seeds_from_mask": [[174, "random-seeds-from-mask"]], "target": [[174, "target"]], "target_line_based": [[174, "target-line-based"]], "streamline_near_roi": [[174, "streamline-near-roi"]], "near_roi": [[174, "near-roi"]], "unique_rows": [[174, "unique-rows"]], "transform_tracking_output": [[174, "transform-tracking-output"]], "reduce_rois": [[174, "reduce-rois"]], "path_length": [[174, "path-length"]], "max_angle_from_curvature": [[174, "max-angle-from-curvature"]], "streamline_mapping": [[174, "streamline-mapping"]], "track_counts": [[174, "track-counts"]], "viz": [[175, "module-dipy.viz"]], "Module: viz.gmem": [[175, "module-dipy.viz.gmem"]], "Module: viz.horizon": [[175, "module-dipy.viz.horizon"]], "Module: viz.horizon.app": [[175, "module-dipy.viz.horizon.app"]], "Module: viz.horizon.tab": [[175, "module-dipy.viz.horizon.tab"]], "Module: viz.horizon.tab.base": [[175, "module-dipy.viz.horizon.tab.base"]], "Module: viz.horizon.tab.cluster": [[175, "module-dipy.viz.horizon.tab.cluster"]], "Module: viz.horizon.tab.peak": [[175, "module-dipy.viz.horizon.tab.peak"]], "Module: viz.horizon.tab.roi": [[175, "module-dipy.viz.horizon.tab.roi"]], "Module: viz.horizon.tab.slice": [[175, "module-dipy.viz.horizon.tab.slice"]], "Module: viz.horizon.tab.surface": [[175, "module-dipy.viz.horizon.tab.surface"]], "Module: viz.horizon.util": [[175, "module-dipy.viz.horizon.util"]], "Module: viz.horizon.visualizer": [[175, "module-dipy.viz.horizon.visualizer"]], "Module: viz.horizon.visualizer.cluster": [[175, "module-dipy.viz.horizon.visualizer.cluster"]], "Module: viz.horizon.visualizer.peak": [[175, "module-dipy.viz.horizon.visualizer.peak"]], "Module: viz.horizon.visualizer.slice": [[175, "module-dipy.viz.horizon.visualizer.slice"]], "Module: viz.horizon.visualizer.surface": [[175, "module-dipy.viz.horizon.visualizer.surface"]], "Module: viz.panel": [[175, "module-dipy.viz.panel"]], "Module: viz.plotting": [[175, "module-dipy.viz.plotting"]], "Module: viz.projections": [[175, "module-dipy.viz.projections"]], "Module: viz.regtools": [[175, "module-dipy.viz.regtools"]], "Module: viz.streamline": [[175, "module-dipy.viz.streamline"]], "GlobalHorizon": [[175, "globalhorizon"]], "Horizon": [[175, "horizon"]], "horizon": [[175, "id1"]], "HorizonUIElement": [[175, "horizonuielement"]], "HorizonTab": [[175, "horizontab"]], "TabManager": [[175, "tabmanager"]], "build_label": [[175, "build-label"], [175, "id52"]], "build_slider": [[175, "build-slider"]], "Return": [[175, "return"]], "build_checkbox": [[175, "build-checkbox"]], "build_switcher": [[175, "build-switcher"]], "color_single_slider": [[175, "color-single-slider"]], "color_double_slider": [[175, "color-double-slider"]], "ClustersTab": [[175, "clusterstab"]], "PeaksTab": [[175, "peakstab"]], "ROIsTab": [[175, "roistab"]], "SlicesTab": [[175, "slicestab"]], "SurfaceTab": [[175, "surfacetab"]], "check_img_shapes": [[175, "check-img-shapes"]], "check_img_dtype": [[175, "check-img-dtype"]], "show_ellipsis": [[175, "show-ellipsis"]], "unpack_image": [[175, "unpack-image"]], "unpack_surface": [[175, "unpack-surface"]], "is_binary_image": [[175, "is-binary-image"]], "check_peak_size": [[175, "check-peak-size"]], "ClustersVisualizer": [[175, "clustersvisualizer"]], "PeakActor": [[175, "peakactor"]], "PeaksVisualizer": [[175, "peaksvisualizer"]], "peak": [[175, "peak"]], "SlicesVisualizer": [[175, "slicesvisualizer"]], "SurfaceVisualizer": [[175, "surfacevisualizer"]], "slicer_panel": [[175, "slicer-panel"]], "compare_maps": [[175, "compare-maps"]], "compare_qti_maps": [[175, "compare-qti-maps"]], "bundle_shape_profile": [[175, "bundle-shape-profile"]], "sph_project": [[175, "sph-project"]], "simple_plot": [[175, "simple-plot"]], "overlay_images": [[175, "overlay-images"]], "draw_lattice_2d": [[175, "draw-lattice-2d"]], "plot_2d_diffeomorphic_map": [[175, "plot-2d-diffeomorphic-map"]], "plot_slices": [[175, "plot-slices"]], "overlay_slices": [[175, "overlay-slices"]], "show_bundles": [[175, "show-bundles"]], "viz_two_bundles": [[175, "viz-two-bundles"]], "viz_vector_field": [[175, "viz-vector-field"]], "viz_displacement_mag": [[175, "viz-displacement-mag"]], "workflows": [[176, "module-dipy.workflows"]], "Module: workflows.align": [[176, "module-dipy.workflows.align"]], "Module: workflows.base": [[176, "module-dipy.workflows.base"]], "Module: workflows.cli": [[176, "module-dipy.workflows.cli"]], "Module: workflows.combined_workflow": [[176, "module-dipy.workflows.combined_workflow"]], "Module: workflows.denoise": [[176, "module-dipy.workflows.denoise"]], "Module: workflows.docstring_parser": [[176, "module-dipy.workflows.docstring_parser"]], "Module: workflows.flow_runner": [[176, "module-dipy.workflows.flow_runner"]], "Module: workflows.io": [[176, "module-dipy.workflows.io"]], "Module: workflows.mask": [[176, "module-dipy.workflows.mask"]], "Module: workflows.multi_io": [[176, "module-dipy.workflows.multi_io"]], "Module: workflows.nn": [[176, "module-dipy.workflows.nn"]], "Module: workflows.reconst": [[176, "module-dipy.workflows.reconst"]], "Module: workflows.segment": [[176, "module-dipy.workflows.segment"]], "Module: workflows.stats": [[176, "module-dipy.workflows.stats"]], "Module: workflows.tracking": [[176, "module-dipy.workflows.tracking"]], "Module: workflows.viz": [[176, "module-dipy.workflows.viz"]], "Module: workflows.workflow": [[176, "module-dipy.workflows.workflow"]], "ResliceFlow": [[176, "resliceflow"]], "SlrWithQbxFlow": [[176, "slrwithqbxflow"]], "ImageRegistrationFlow": [[176, "imageregistrationflow"]], "ApplyTransformFlow": [[176, "applytransformflow"]], "SynRegistrationFlow": [[176, "synregistrationflow"]], "MotionCorrectionFlow": [[176, "motioncorrectionflow"]], "BundleWarpFlow": [[176, "bundlewarpflow"]], "check_dimensions": [[176, "check-dimensions"]], "IntrospectiveArgumentParser": [[176, "introspectiveargumentparser"]], "get_args_default": [[176, "get-args-default"]], "none_or_dtype": [[176, "none-or-dtype"]], "run": [[176, "run"]], "CombinedWorkflow": [[176, "combinedworkflow"]], "Patch2SelfFlow": [[176, "patch2selfflow"]], "NLMeansFlow": [[176, "nlmeansflow"]], "LPCAFlow": [[176, "lpcaflow"]], "MPPCAFlow": [[176, "mppcaflow"]], "GibbsRingingFlow": [[176, "gibbsringingflow"]], "Reader": [[176, "reader"]], "NumpyDocString": [[176, "numpydocstring"]], "dedent_lines": [[176, "dedent-lines"]], "get_level": [[176, "get-level"]], "run_flow": [[176, "run-flow"]], "IoInfoFlow": [[176, "ioinfoflow"]], "FetchFlow": [[176, "fetchflow"]], "SplitFlow": [[176, "splitflow"]], "ConcatenateTractogramFlow": [[176, "concatenatetractogramflow"]], "ConvertSHFlow": [[176, "convertshflow"]], "ConvertTensorsFlow": [[176, "converttensorsflow"]], "ConvertTractogramFlow": [[176, "converttractogramflow"]], "MaskFlow": [[176, "maskflow"]], "IOIterator": [[176, "ioiterator"]], "common_start": [[176, "common-start"]], "slash_to_under": [[176, "slash-to-under"]], "connect_output_paths": [[176, "connect-output-paths"]], "concatenate_inputs": [[176, "concatenate-inputs"]], "basename_without_extension": [[176, "basename-without-extension"]], "io_iterator": [[176, "io-iterator"]], "io_iterator_": [[176, "id53"]], "EVACPlusFlow": [[176, "evacplusflow"]], "ReconstMAPMRIFlow": [[176, "reconstmapmriflow"]], "ReconstDtiFlow": [[176, "reconstdtiflow"]], "ReconstDsiFlow": [[176, "reconstdsiflow"]], "ReconstCSDFlow": [[176, "reconstcsdflow"]], "ReconstCSAFlow": [[176, "reconstcsaflow"]], "ReconstDkiFlow": [[176, "reconstdkiflow"]], "ReconstIvimFlow": [[176, "reconstivimflow"]], "ReconstRUMBAFlow": [[176, "reconstrumbaflow"]], "MedianOtsuFlow": [[176, "medianotsuflow"]], "RecoBundlesFlow": [[176, "recobundlesflow"]], "LabelsBundlesFlow": [[176, "labelsbundlesflow"]], "SNRinCCFlow": [[176, "snrinccflow"]], "BundleAnalysisTractometryFlow": [[176, "bundleanalysistractometryflow"]], "LinearMixedModelsFlow": [[176, "linearmixedmodelsflow"]], "BundleShapeAnalysis": [[176, "bundleshapeanalysis"]], "buan_bundle_profiles": [[176, "buan-bundle-profiles"]], "LocalFiberTrackingPAMFlow": [[176, "localfibertrackingpamflow"]], "PFTrackingPAMFlow": [[176, "pftrackingpamflow"]], "HorizonFlow": [[176, "horizonflow"]], "Workflow": [[176, "workflow"]], "API Reference": [[177, "api-reference"]], "dipy_align_affine": [[178, "dipy-align-affine"]], "Usage": [[178, "usage"], [179, "usage"], [180, "usage"], [181, "usage"], [182, "usage"], [183, "usage"], [184, "usage"], [185, "usage"], [186, "usage"], [187, "usage"], [188, "usage"], [189, "usage"], [190, "usage"], [191, "usage"], [192, "usage"], [193, "usage"], [194, "usage"], [195, "usage"], [196, "usage"], [197, "usage"], [198, "usage"], [199, "usage"], [200, "usage"], [201, "usage"], [202, "usage"], [203, "usage"], [204, "usage"], [205, "usage"], [206, "usage"], [207, "usage"], [208, "usage"], [209, "usage"], [210, "usage"], [211, "usage"], [212, "usage"], [213, "usage"], [214, "usage"], [215, "usage"]], "Positional Arguments": [[178, "positional-arguments"], [179, "positional-arguments"], [180, "positional-arguments"], [181, "positional-arguments"], [182, "positional-arguments"], [183, "positional-arguments"], [184, "positional-arguments"], [185, "positional-arguments"], [186, "positional-arguments"], [187, "positional-arguments"], [188, "positional-arguments"], [189, "positional-arguments"], [190, "positional-arguments"], [191, "positional-arguments"], [192, "positional-arguments"], [193, "positional-arguments"], [194, "positional-arguments"], [195, "positional-arguments"], [196, "positional-arguments"], [197, "positional-arguments"], [198, "positional-arguments"], [199, "positional-arguments"], [200, "positional-arguments"], [201, "positional-arguments"], [202, "positional-arguments"], [203, "positional-arguments"], [204, "positional-arguments"], [205, "positional-arguments"], [206, "positional-arguments"], [207, "positional-arguments"], [208, "positional-arguments"], [209, "positional-arguments"], [210, "positional-arguments"], [211, "positional-arguments"], [212, "positional-arguments"], [213, "positional-arguments"], [214, "positional-arguments"], [215, "positional-arguments"]], "Output Arguments(Optional)": [[178, "output-arguments-optional"], [179, "output-arguments-optional"], [180, "output-arguments-optional"], [181, "output-arguments-optional"], [182, "output-arguments-optional"], [183, "output-arguments-optional"], [184, "output-arguments-optional"], [185, "output-arguments-optional"], [186, "output-arguments-optional"], [187, "output-arguments-optional"], [188, "output-arguments-optional"], [189, "output-arguments-optional"], [190, "output-arguments-optional"], [191, "output-arguments-optional"], [192, "output-arguments-optional"], [193, "output-arguments-optional"], [194, "output-arguments-optional"], [195, "output-arguments-optional"], [196, "output-arguments-optional"], [197, "output-arguments-optional"], [198, "output-arguments-optional"], [199, "output-arguments-optional"], [200, "output-arguments-optional"], [201, "output-arguments-optional"], [202, "output-arguments-optional"], [203, "output-arguments-optional"], [205, "output-arguments-optional"], [206, "output-arguments-optional"], [207, "output-arguments-optional"], [208, "output-arguments-optional"], [209, "output-arguments-optional"], [210, "output-arguments-optional"], [211, "output-arguments-optional"], [212, "output-arguments-optional"], [213, "output-arguments-optional"], [214, "output-arguments-optional"], [215, "output-arguments-optional"]], "dipy_align_syn": [[179, "dipy-align-syn"]], "dipy_apply_transform": [[180, "dipy-apply-transform"]], "dipy_buan_lmm": [[181, "dipy-buan-lmm"]], "dipy_buan_profiles": [[182, "dipy-buan-profiles"]], "dipy_buan_shapes": [[183, "dipy-buan-shapes"]], "dipy_bundlewarp": [[184, "dipy-bundlewarp"]], "dipy_concatenate_tractograms": [[185, "dipy-concatenate-tractograms"]], "dipy_convert_tensors": [[186, "dipy-convert-tensors"]], "dipy_convert_tractogram": [[187, "dipy-convert-tractogram"]], "dipy_correct_motion": [[188, "dipy-correct-motion"]], "dipy_denoise_lpca": [[189, "dipy-denoise-lpca"]], "dipy_denoise_mppca": [[190, "dipy-denoise-mppca"]], "dipy_denoise_nlmeans": [[191, "dipy-denoise-nlmeans"]], "dipy_denoise_patch2self": [[192, "dipy-denoise-patch2self"]], "dipy_evac_plus": [[193, "dipy-evac-plus"]], "dipy_fetch": [[194, "dipy-fetch"]], "dipy_fit_csa": [[195, "dipy-fit-csa"]], "dipy_fit_csd": [[196, "dipy-fit-csd"]], "dipy_fit_dki": [[197, "dipy-fit-dki"]], "dipy_fit_dsi": [[198, "dipy-fit-dsi"]], "dipy_fit_dti": [[199, "dipy-fit-dti"]], "dipy_fit_ivim": [[200, "dipy-fit-ivim"]], "dipy_fit_mapmri": [[201, "dipy-fit-mapmri"]], "dipy_gibbs_ringing": [[202, "dipy-gibbs-ringing"]], "dipy_horizon": [[203, "dipy-horizon"]], "dipy_info": [[204, "dipy-info"]], "dipy_labelsbundles": [[205, "dipy-labelsbundles"]], "dipy_mask": [[206, "dipy-mask"]], "dipy_median_otsu": [[207, "dipy-median-otsu"]], "dipy_recobundles": [[208, "dipy-recobundles"]], "dipy_reslice": [[209, "dipy-reslice"]], "dipy_sh_convert_mrtrix": [[210, "dipy-sh-convert-mrtrix"]], "dipy_slr": [[211, "dipy-slr"]], "dipy_snr_in_cc": [[212, "dipy-snr-in-cc"]], "dipy_split": [[213, "dipy-split"]], "dipy_track": [[214, "dipy-track"]], "dipy_track_pft": [[215, "dipy-track-pft"]], "Command Line Utilities Reference": [[216, "command-line-utilities-reference"]], "Release notes for DIPY version 0.10": [[217, "release-notes-for-dipy-version-0-10"]], "Release notes for DIPY version 0.11": [[218, "release-notes-for-dipy-version-0-11"]], "Release notes for DIPY version 0.12": [[219, "release-notes-for-dipy-version-0-12"]], "Release notes for DIPY version 0.13": [[220, "release-notes-for-dipy-version-0-13"]], "Release notes for DIPY version 0.14": [[221, "release-notes-for-dipy-version-0-14"]], "Release notes for DIPY version 0.15": [[222, "release-notes-for-dipy-version-0-15"]], "Release notes for DIPY version 0.16": [[223, "release-notes-for-dipy-version-0-16"]], "Release notes for DIPY version 0.6": [[224, "release-notes-for-dipy-version-0-6"]], "Release notes for DIPY version 0.7": [[225, "release-notes-for-dipy-version-0-7"]], "Release notes for DIPY version 0.8": [[226, "release-notes-for-dipy-version-0-8"]], "Release notes for DIPY version 0.9": [[227, "release-notes-for-dipy-version-0-9"]], "Release notes for DIPY version 1.0": [[228, "release-notes-for-dipy-version-1-0"]], "Release notes for DIPY version 1.1": [[229, "release-notes-for-dipy-version-1-1"]], "Release notes for DIPY version 1.2": [[230, "release-notes-for-dipy-version-1-2"]], "Release notes for DIPY version 1.3": [[231, "release-notes-for-dipy-version-1-3"]], "Release notes for DIPY version 1.4": [[232, "release-notes-for-dipy-version-1-4"]], "Release notes for DIPY version 1.4.1": [[233, "release-notes-for-dipy-version-1-4-1"]], "Release notes for DIPY version 1.5": [[234, "release-notes-for-dipy-version-1-5"]], "Release notes for DIPY version 1.6": [[235, "release-notes-for-dipy-version-1-6"]], "Release notes for DIPY version 1.7": [[236, "release-notes-for-dipy-version-1-7"]], "Release notes for DIPY version 1.8": [[237, "release-notes-for-dipy-version-1-8"]], "A quick overview of features": [[239, "a-quick-overview-of-features"]], "Systems supported": [[239, "systems-supported"]], "Subscribe": [[240, "subscribe"]], "DIY Stuff about b and q": [[241, "diy-stuff-about-b-and-q"]], "The B matrix and Siemens DICOM": [[241, "the-b-matrix-and-siemens-dicom"], [242, "the-b-matrix-and-siemens-dicom"]], "\u2026 and what about \u2018q\u2019?": [[241, "and-what-about-q"]], "Generalised Q-Sampling Imaging": [[243, "generalised-q-sampling-imaging"]], "Theory and concepts": [[244, "theory-and-concepts"]], "Spherical Harmonic bases": [[245, "spherical-harmonic-bases"]], "Spherical coordinates": [[246, "spherical-coordinates"]], "Terms": [[246, "terms"]], "The physics convention": [[246, "the-physics-convention"]], "The mathematics convention": [[246, "the-mathematics-convention"]], "Matlab convention": [[246, "matlab-convention"]], "Data": [[247, "data"]], "How to get data": [[247, "how-to-get-data"]], "Datasets List": [[247, "datasets-list"]], "Datasets available in DIPY": [[247, "id2"], [248, "id1"]], "Python versions and dependencies": [[249, "python-versions-and-dependencies"]], "Dependencies": [[249, "id1"]], "Getting Started": [[250, "getting-started"]], "Next Steps": [[250, "next-steps"]], "DIPY User Guide": [[251, "dipy-user-guide"]], "Installing a release": [[252, "installing-a-release"]], "Using pip:": [[252, "using-pip"]], "Using Anaconda:": [[252, "using-anaconda"]], "Using packages:": [[252, "using-packages"]], "OSX": [[252, "osx"]], "Linux": [[252, "linux"]], "Support": [[252, "support"]], "Contact us:": [[252, "contact-us"]], "Common problems:": [[252, "common-problems"]], "Multiple installations": [[252, "multiple-installations"]], "Alternatives to Anaconda": [[252, "alternatives-to-anaconda"]], "Memory issues": [[252, "memory-issues"]], "Note on python versions": [[252, "note-on-python-versions"]], "What is DIPY?": [[253, "what-is-dipy"]], "Mission statement": [[254, "mission-statement"]]}, "indexentries": {"affine matrix": [[144, "term-Affine-matrix"]], "affine transformation": [[144, "term-Affine-transformation"]], "axis angle": [[144, "term-Axis-angle"]], "euclidean norm": [[144, "term-Euclidean-norm"]], "euler angles": [[144, "term-Euler-angles"]], "gimbal lock": [[144, "term-Gimbal-lock"]], "homogeneous coordinates": [[144, "term-Homogeneous-coordinates"]], "linear transformation": [[144, "term-Linear-transformation"]], "quaternion": [[144, "term-Quaternion"]], "reflection": [[144, "term-Reflection"]], "rotation matrix": [[144, "term-Rotation-matrix"]], "rotation vector": [[144, "term-Rotation-vector"]], "shear matrix": [[144, "term-Shear-matrix"]], "unit vector": [[144, "term-Unit-vector"]], "dipy": [[162, "module-dipy"]], "get_info() (in module dipy)": [[162, "dipy.get_info"]], "module": [[162, "module-dipy"], [163, "module-dipy.align"], [163, "module-dipy.align._public"], [163, "module-dipy.align.bundlemin"], [163, "module-dipy.align.cpd"], [163, "module-dipy.align.crosscorr"], [163, "module-dipy.align.expectmax"], [163, "module-dipy.align.imaffine"], [163, "module-dipy.align.imwarp"], [163, "module-dipy.align.metrics"], [163, "module-dipy.align.parzenhist"], [163, "module-dipy.align.reslice"], [163, "module-dipy.align.scalespace"], [163, "module-dipy.align.streamlinear"], [163, "module-dipy.align.streamwarp"], [163, "module-dipy.align.sumsqdiff"], [163, "module-dipy.align.transforms"], [163, "module-dipy.align.vector_fields"], [164, "module-dipy.core"], [164, "module-dipy.core.geometry"], [164, "module-dipy.core.gradients"], [164, "module-dipy.core.graph"], [164, "module-dipy.core.histeq"], [164, "module-dipy.core.interpolation"], [164, "module-dipy.core.ndindex"], [164, "module-dipy.core.onetime"], [164, "module-dipy.core.optimize"], [164, "module-dipy.core.profile"], [164, "module-dipy.core.rng"], [164, "module-dipy.core.sphere"], [164, "module-dipy.core.sphere_stats"], [164, "module-dipy.core.subdivide_octahedron"], [164, "module-dipy.core.wavelet"], [165, "module-dipy.data"], [165, "module-dipy.data.fetcher"], [166, "module-dipy.denoise"], [166, "module-dipy.denoise.adaptive_soft_matching"], [166, "module-dipy.denoise.denspeed"], [166, "module-dipy.denoise.enhancement_kernel"], [166, "module-dipy.denoise.gibbs"], [166, "module-dipy.denoise.localpca"], [166, "module-dipy.denoise.nlmeans"], [166, "module-dipy.denoise.nlmeans_block"], [166, "module-dipy.denoise.noise_estimate"], [166, "module-dipy.denoise.non_local_means"], [166, "module-dipy.denoise.patch2self"], [166, "module-dipy.denoise.pca_noise_estimate"], [166, "module-dipy.denoise.shift_twist_convolution"], [167, "module-dipy.direction"], [167, "module-dipy.direction.bootstrap_direction_getter"], [167, "module-dipy.direction.closest_peak_direction_getter"], [167, "module-dipy.direction.peaks"], [167, "module-dipy.direction.pmf"], [167, "module-dipy.direction.probabilistic_direction_getter"], [167, "module-dipy.direction.ptt_direction_getter"], [168, "module-dipy.io"], [168, "module-dipy.io.dpy"], [168, "module-dipy.io.gradients"], [168, "module-dipy.io.image"], [168, "module-dipy.io.peaks"], [168, "module-dipy.io.pickles"], [168, "module-dipy.io.stateful_tractogram"], [168, "module-dipy.io.streamline"], [168, "module-dipy.io.surface"], [168, "module-dipy.io.utils"], [168, "module-dipy.io.vtk"], [169, "module-dipy.nn"], [169, "module-dipy.nn.cnn_1d_denoising"], [169, "module-dipy.nn.deepn4"], [169, "module-dipy.nn.evac"], [169, "module-dipy.nn.histo_resdnn"], [169, "module-dipy.nn.model"], [169, "module-dipy.nn.synb0"], [169, "module-dipy.nn.utils"], [170, "module-dipy.reconst"], [170, "module-dipy.reconst.base"], [170, "module-dipy.reconst.cache"], [170, "module-dipy.reconst.cross_validation"], [170, "module-dipy.reconst.csdeconv"], [170, "module-dipy.reconst.cti"], [170, "module-dipy.reconst.dki"], [170, "module-dipy.reconst.dki_micro"], [170, "module-dipy.reconst.dsi"], [170, "module-dipy.reconst.dti"], [170, "module-dipy.reconst.eudx_direction_getter"], [170, "module-dipy.reconst.forecast"], [170, "module-dipy.reconst.fwdti"], [170, "module-dipy.reconst.gqi"], [170, "module-dipy.reconst.ivim"], [170, "module-dipy.reconst.mapmri"], [170, "module-dipy.reconst.mcsd"], [170, "module-dipy.reconst.msdki"], [170, "module-dipy.reconst.multi_voxel"], [170, "module-dipy.reconst.odf"], [170, "module-dipy.reconst.qtdmri"], [170, "module-dipy.reconst.qti"], [170, "module-dipy.reconst.quick_squash"], [170, "module-dipy.reconst.recspeed"], [170, "module-dipy.reconst.rumba"], [170, "module-dipy.reconst.sfm"], [170, "module-dipy.reconst.shm"], [170, "module-dipy.reconst.shore"], [170, "module-dipy.reconst.utils"], [170, "module-dipy.reconst.vec_val_sum"], [171, "module-dipy.segment"], [171, "module-dipy.segment.bundles"], [171, "module-dipy.segment.clustering"], [171, "module-dipy.segment.clustering_algorithms"], [171, "module-dipy.segment.clusteringspeed"], [171, "module-dipy.segment.cythonutils"], [171, "module-dipy.segment.featurespeed"], [171, "module-dipy.segment.fss"], [171, "module-dipy.segment.mask"], [171, "module-dipy.segment.metric"], [171, "module-dipy.segment.metricspeed"], [171, "module-dipy.segment.mrf"], [171, "module-dipy.segment.threshold"], [171, "module-dipy.segment.tissue"], [172, "module-dipy.sims"], [172, "module-dipy.sims.phantom"], [172, "module-dipy.sims.voxel"], [173, "module-dipy.stats"], [173, "module-dipy.stats.analysis"], [174, "module-dipy.tracking"], [174, "module-dipy.tracking._utils"], [174, "module-dipy.tracking.direction_getter"], [174, "module-dipy.tracking.distances"], [174, "module-dipy.tracking.fbcmeasures"], [174, "module-dipy.tracking.learning"], [174, "module-dipy.tracking.life"], [174, "module-dipy.tracking.local_tracking"], [174, "module-dipy.tracking.localtrack"], [174, "module-dipy.tracking.mesh"], [174, "module-dipy.tracking.metrics"], [174, "module-dipy.tracking.propspeed"], [174, "module-dipy.tracking.stopping_criterion"], [174, "module-dipy.tracking.streamline"], [174, "module-dipy.tracking.streamlinespeed"], [174, "module-dipy.tracking.utils"], [174, "module-dipy.tracking.vox2track"], [175, "module-dipy.viz"], [175, "module-dipy.viz.gmem"], [175, "module-dipy.viz.horizon"], [175, "module-dipy.viz.horizon.app"], [175, "module-dipy.viz.horizon.tab"], [175, "module-dipy.viz.horizon.tab.base"], [175, "module-dipy.viz.horizon.tab.cluster"], [175, "module-dipy.viz.horizon.tab.peak"], [175, "module-dipy.viz.horizon.tab.roi"], [175, "module-dipy.viz.horizon.tab.slice"], [175, "module-dipy.viz.horizon.tab.surface"], [175, "module-dipy.viz.horizon.util"], [175, "module-dipy.viz.horizon.visualizer"], [175, "module-dipy.viz.horizon.visualizer.cluster"], [175, "module-dipy.viz.horizon.visualizer.peak"], [175, "module-dipy.viz.horizon.visualizer.slice"], [175, "module-dipy.viz.horizon.visualizer.surface"], [175, "module-dipy.viz.panel"], [175, "module-dipy.viz.plotting"], [175, "module-dipy.viz.projections"], [175, "module-dipy.viz.regtools"], [175, "module-dipy.viz.streamline"], [176, "module-dipy.workflows"], [176, "module-dipy.workflows.align"], [176, "module-dipy.workflows.base"], [176, "module-dipy.workflows.cli"], [176, "module-dipy.workflows.combined_workflow"], [176, "module-dipy.workflows.denoise"], [176, "module-dipy.workflows.docstring_parser"], [176, "module-dipy.workflows.flow_runner"], [176, "module-dipy.workflows.io"], [176, "module-dipy.workflows.mask"], [176, "module-dipy.workflows.multi_io"], [176, "module-dipy.workflows.nn"], [176, "module-dipy.workflows.reconst"], [176, "module-dipy.workflows.segment"], [176, "module-dipy.workflows.stats"], [176, "module-dipy.workflows.tracking"], [176, "module-dipy.workflows.viz"], [176, "module-dipy.workflows.workflow"]], "affineinvalidvalueserror (class in dipy.align.imaffine)": [[163, "dipy.align.imaffine.AffineInvalidValuesError"]], "affineinversionerror (class in dipy.align.imaffine)": [[163, "dipy.align.imaffine.AffineInversionError"]], "affinemap (class in dipy.align.imaffine)": [[163, "dipy.align.imaffine.AffineMap"]], "affineregistration (class in dipy.align.imaffine)": [[163, "dipy.align.imaffine.AffineRegistration"]], "affinetransform2d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.AffineTransform2D"]], "affinetransform3d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.AffineTransform3D"]], "bunch (class in dipy.align)": [[163, "dipy.align.Bunch"]], "bundlemindistanceasymmetricmetric (class in dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric"]], "bundlemindistancematrixmetric (class in dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric"]], "bundlemindistancemetric (class in dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.BundleMinDistanceMetric"]], "bundlesumdistancematrixmetric (class in dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.BundleSumDistanceMatrixMetric"]], "ccmetric (class in dipy.align.metrics)": [[163, "dipy.align.metrics.CCMetric"]], "deformableregistration (class in dipy.align.cpd)": [[163, "dipy.align.cpd.DeformableRegistration"]], "diffeomorphicmap (class in dipy.align.imwarp)": [[163, "dipy.align.imwarp.DiffeomorphicMap"]], "diffeomorphicregistration (class in dipy.align.imwarp)": [[163, "dipy.align.imwarp.DiffeomorphicRegistration"]], "emmetric (class in dipy.align.metrics)": [[163, "dipy.align.metrics.EMMetric"]], "isotropicscalespace (class in dipy.align.scalespace)": [[163, "dipy.align.scalespace.IsotropicScaleSpace"]], "jointbundlemindistancemetric (class in dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.JointBundleMinDistanceMetric"]], "jointstreamlineregistrationmap (class in dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.JointStreamlineRegistrationMap"]], "mutualinformationmetric (class in dipy.align.imaffine)": [[163, "dipy.align.imaffine.MutualInformationMetric"]], "parzenjointhistogram (class in dipy.align.parzenhist)": [[163, "dipy.align.parzenhist.ParzenJointHistogram"]], "registrationstages() (in module dipy.align.imwarp)": [[163, "dipy.align.imwarp.RegistrationStages"]], "rigidisoscalingtransform2d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.RigidIsoScalingTransform2D"]], "rigidisoscalingtransform3d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.RigidIsoScalingTransform3D"]], "rigidscalingtransform2d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.RigidScalingTransform2D"]], "rigidscalingtransform3d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.RigidScalingTransform3D"]], "rigidtransform2d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.RigidTransform2D"]], "rigidtransform3d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.RigidTransform3D"]], "rotationtransform2d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.RotationTransform2D"]], "rotationtransform3d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.RotationTransform3D"]], "ssdmetric (class in dipy.align.metrics)": [[163, "dipy.align.metrics.SSDMetric"]], "scalespace (class in dipy.align.scalespace)": [[163, "dipy.align.scalespace.ScaleSpace"]], "scalingtransform2d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.ScalingTransform2D"]], "scalingtransform3d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.ScalingTransform3D"]], "similaritymetric (class in dipy.align.metrics)": [[163, "dipy.align.metrics.SimilarityMetric"]], "streamlinedistancemetric (class in dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.StreamlineDistanceMetric"]], "streamlinelinearregistration (class in dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.StreamlineLinearRegistration"]], "streamlineregistrationmap (class in dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.StreamlineRegistrationMap"]], "symmetricdiffeomorphicregistration (class in dipy.align.imwarp)": [[163, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration"]], "transform (class in dipy.align.transforms)": [[163, "dipy.align.transforms.Transform"]], "translationtransform2d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.TranslationTransform2D"]], "translationtransform3d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.TranslationTransform3D"]], "verbositylevels() (in module dipy.align)": [[163, "dipy.align.VerbosityLevels"]], "_method_dict() (in module dipy.align._public)": [[163, "dipy.align._public._METHOD_DICT"]], "__init__() (dipy.align.bunch method)": [[163, "dipy.align.Bunch.__init__"]], "__init__() (dipy.align.cpd.deformableregistration method)": [[163, "dipy.align.cpd.DeformableRegistration.__init__"]], "__init__() (dipy.align.imaffine.affineinvalidvalueserror method)": [[163, "dipy.align.imaffine.AffineInvalidValuesError.__init__"]], "__init__() (dipy.align.imaffine.affineinversionerror method)": [[163, "dipy.align.imaffine.AffineInversionError.__init__"]], "__init__() (dipy.align.imaffine.affinemap method)": [[163, "dipy.align.imaffine.AffineMap.__init__"]], "__init__() (dipy.align.imaffine.affineregistration method)": [[163, "dipy.align.imaffine.AffineRegistration.__init__"]], "__init__() (dipy.align.imaffine.mutualinformationmetric method)": [[163, "dipy.align.imaffine.MutualInformationMetric.__init__"]], "__init__() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.__init__"]], "__init__() (dipy.align.imwarp.diffeomorphicregistration method)": [[163, "dipy.align.imwarp.DiffeomorphicRegistration.__init__"]], "__init__() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[163, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.__init__"]], "__init__() (dipy.align.metrics.ccmetric method)": [[163, "dipy.align.metrics.CCMetric.__init__"]], "__init__() (dipy.align.metrics.emmetric method)": [[163, "dipy.align.metrics.EMMetric.__init__"]], "__init__() (dipy.align.metrics.ssdmetric method)": [[163, "dipy.align.metrics.SSDMetric.__init__"]], "__init__() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.__init__"]], "__init__() (dipy.align.parzenhist.parzenjointhistogram method)": [[163, "dipy.align.parzenhist.ParzenJointHistogram.__init__"]], "__init__() (dipy.align.scalespace.isotropicscalespace method)": [[163, "dipy.align.scalespace.IsotropicScaleSpace.__init__"]], "__init__() (dipy.align.scalespace.scalespace method)": [[163, "dipy.align.scalespace.ScaleSpace.__init__"]], "__init__() (dipy.align.streamlinear.bundlemindistanceasymmetricmetric method)": [[163, "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric.__init__"]], "__init__() (dipy.align.streamlinear.bundlemindistancematrixmetric method)": [[163, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric.__init__"]], "__init__() (dipy.align.streamlinear.bundlemindistancemetric method)": [[163, "dipy.align.streamlinear.BundleMinDistanceMetric.__init__"]], "__init__() (dipy.align.streamlinear.bundlesumdistancematrixmetric method)": [[163, "dipy.align.streamlinear.BundleSumDistanceMatrixMetric.__init__"]], "__init__() (dipy.align.streamlinear.jointbundlemindistancemetric method)": [[163, "dipy.align.streamlinear.JointBundleMinDistanceMetric.__init__"]], "__init__() (dipy.align.streamlinear.jointstreamlineregistrationmap method)": [[163, "dipy.align.streamlinear.JointStreamlineRegistrationMap.__init__"]], "__init__() (dipy.align.streamlinear.streamlinedistancemetric method)": [[163, "dipy.align.streamlinear.StreamlineDistanceMetric.__init__"]], "__init__() (dipy.align.streamlinear.streamlinelinearregistration method)": [[163, "dipy.align.streamlinear.StreamlineLinearRegistration.__init__"]], "__init__() (dipy.align.streamlinear.streamlineregistrationmap method)": [[163, "dipy.align.streamlinear.StreamlineRegistrationMap.__init__"]], "__init__() (dipy.align.transforms.affinetransform2d method)": [[163, "dipy.align.transforms.AffineTransform2D.__init__"]], "__init__() (dipy.align.transforms.affinetransform3d method)": [[163, "dipy.align.transforms.AffineTransform3D.__init__"]], "__init__() (dipy.align.transforms.rigidisoscalingtransform2d method)": [[163, "dipy.align.transforms.RigidIsoScalingTransform2D.__init__"]], "__init__() (dipy.align.transforms.rigidisoscalingtransform3d method)": [[163, "dipy.align.transforms.RigidIsoScalingTransform3D.__init__"]], "__init__() (dipy.align.transforms.rigidscalingtransform2d method)": [[163, "dipy.align.transforms.RigidScalingTransform2D.__init__"]], "__init__() (dipy.align.transforms.rigidscalingtransform3d method)": [[163, "dipy.align.transforms.RigidScalingTransform3D.__init__"]], "__init__() (dipy.align.transforms.rigidtransform2d method)": [[163, "dipy.align.transforms.RigidTransform2D.__init__"]], "__init__() (dipy.align.transforms.rigidtransform3d method)": [[163, "dipy.align.transforms.RigidTransform3D.__init__"]], "__init__() (dipy.align.transforms.rotationtransform2d method)": [[163, "dipy.align.transforms.RotationTransform2D.__init__"]], "__init__() (dipy.align.transforms.rotationtransform3d method)": [[163, "dipy.align.transforms.RotationTransform3D.__init__"]], "__init__() (dipy.align.transforms.scalingtransform2d method)": [[163, "dipy.align.transforms.ScalingTransform2D.__init__"]], "__init__() (dipy.align.transforms.scalingtransform3d method)": [[163, "dipy.align.transforms.ScalingTransform3D.__init__"]], "__init__() (dipy.align.transforms.transform method)": [[163, "dipy.align.transforms.Transform.__init__"]], "__init__() (dipy.align.transforms.translationtransform2d method)": [[163, "dipy.align.transforms.TranslationTransform2D.__init__"]], "__init__() (dipy.align.transforms.translationtransform3d method)": [[163, "dipy.align.transforms.TranslationTransform3D.__init__"]], "_transform_method() (in module dipy.align.imaffine)": [[163, "dipy.align.imaffine._transform_method"]], "affine() (in module dipy.align._public)": [[163, "dipy.align._public.affine"]], "affine_registration() (in module dipy.align._public)": [[163, "dipy.align._public.affine_registration"]], "allocate() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.allocate"]], "average_bundle_length() (in module dipy.align.streamwarp)": [[163, "dipy.align.streamwarp.average_bundle_length"]], "bin_index() (dipy.align.parzenhist.parzenjointhistogram method)": [[163, "dipy.align.parzenhist.ParzenJointHistogram.bin_index"]], "bin_normalize_moving() (dipy.align.parzenhist.parzenjointhistogram method)": [[163, "dipy.align.parzenhist.ParzenJointHistogram.bin_normalize_moving"]], "bin_normalize_static() (dipy.align.parzenhist.parzenjointhistogram method)": [[163, "dipy.align.parzenhist.ParzenJointHistogram.bin_normalize_static"]], "bundle_min_distance() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.bundle_min_distance"]], "bundle_min_distance_asymmetric_fast() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.bundle_min_distance_asymmetric_fast"]], "bundle_min_distance_fast() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.bundle_min_distance_fast"]], "bundle_sum_distance() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.bundle_sum_distance"]], "bundlewarp() (in module dipy.align.streamwarp)": [[163, "dipy.align.streamwarp.bundlewarp"]], "bundlewarp_shape_analysis() (in module dipy.align.streamwarp)": [[163, "dipy.align.streamwarp.bundlewarp_shape_analysis"]], "bundlewarp_vector_filed() (in module dipy.align.streamwarp)": [[163, "dipy.align.streamwarp.bundlewarp_vector_filed"]], "center_of_mass() (in module dipy.align._public)": [[163, "dipy.align._public.center_of_mass"]], "compose_matrix44() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.compose_matrix44"]], "compose_vector_fields_2d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.compose_vector_fields_2d"]], "compose_vector_fields_3d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.compose_vector_fields_3d"]], "compute_backward() (dipy.align.metrics.ccmetric method)": [[163, "dipy.align.metrics.CCMetric.compute_backward"]], "compute_backward() (dipy.align.metrics.emmetric method)": [[163, "dipy.align.metrics.EMMetric.compute_backward"]], "compute_backward() (dipy.align.metrics.ssdmetric method)": [[163, "dipy.align.metrics.SSDMetric.compute_backward"]], "compute_backward() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.compute_backward"]], "compute_cc_backward_step_2d() (in module dipy.align.crosscorr)": [[163, "dipy.align.crosscorr.compute_cc_backward_step_2d"]], "compute_cc_backward_step_3d() (in module dipy.align.crosscorr)": [[163, "dipy.align.crosscorr.compute_cc_backward_step_3d"]], "compute_cc_forward_step_2d() (in module dipy.align.crosscorr)": [[163, "dipy.align.crosscorr.compute_cc_forward_step_2d"]], "compute_cc_forward_step_3d() (in module dipy.align.crosscorr)": [[163, "dipy.align.crosscorr.compute_cc_forward_step_3d"]], "compute_demons_step() (dipy.align.metrics.emmetric method)": [[163, "dipy.align.metrics.EMMetric.compute_demons_step"]], "compute_demons_step() (dipy.align.metrics.ssdmetric method)": [[163, "dipy.align.metrics.SSDMetric.compute_demons_step"]], "compute_em_demons_step_2d() (in module dipy.align.expectmax)": [[163, "dipy.align.expectmax.compute_em_demons_step_2d"]], "compute_em_demons_step_3d() (in module dipy.align.expectmax)": [[163, "dipy.align.expectmax.compute_em_demons_step_3d"]], "compute_energy_ssd_2d() (in module dipy.align.sumsqdiff)": [[163, "dipy.align.sumsqdiff.compute_energy_ssd_2d"]], "compute_energy_ssd_3d() (in module dipy.align.sumsqdiff)": [[163, "dipy.align.sumsqdiff.compute_energy_ssd_3d"]], "compute_forward() (dipy.align.metrics.ccmetric method)": [[163, "dipy.align.metrics.CCMetric.compute_forward"]], "compute_forward() (dipy.align.metrics.emmetric method)": [[163, "dipy.align.metrics.EMMetric.compute_forward"]], "compute_forward() (dipy.align.metrics.ssdmetric method)": [[163, "dipy.align.metrics.SSDMetric.compute_forward"]], "compute_forward() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.compute_forward"]], "compute_gauss_newton_step() (dipy.align.metrics.emmetric method)": [[163, "dipy.align.metrics.EMMetric.compute_gauss_newton_step"]], "compute_gauss_newton_step() (dipy.align.metrics.ssdmetric method)": [[163, "dipy.align.metrics.SSDMetric.compute_gauss_newton_step"]], "compute_inversion_error() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.compute_inversion_error"]], "compute_masked_class_stats_2d() (in module dipy.align.expectmax)": [[163, "dipy.align.expectmax.compute_masked_class_stats_2d"]], "compute_masked_class_stats_3d() (in module dipy.align.expectmax)": [[163, "dipy.align.expectmax.compute_masked_class_stats_3d"]], "compute_parzen_mi() (in module dipy.align.parzenhist)": [[163, "dipy.align.parzenhist.compute_parzen_mi"]], "compute_residual_displacement_field_ssd_2d() (in module dipy.align.sumsqdiff)": [[163, "dipy.align.sumsqdiff.compute_residual_displacement_field_ssd_2d"]], "compute_residual_displacement_field_ssd_3d() (in module dipy.align.sumsqdiff)": [[163, "dipy.align.sumsqdiff.compute_residual_displacement_field_ssd_3d"]], "compute_ssd_demons_step_2d() (in module dipy.align.sumsqdiff)": [[163, "dipy.align.sumsqdiff.compute_ssd_demons_step_2d"]], "compute_ssd_demons_step_3d() (in module dipy.align.sumsqdiff)": [[163, "dipy.align.sumsqdiff.compute_ssd_demons_step_3d"]], "create_circle() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.create_circle"]], "create_harmonic_fields_2d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.create_harmonic_fields_2d"]], "create_harmonic_fields_3d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.create_harmonic_fields_3d"]], "create_random_displacement_2d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.create_random_displacement_2d"]], "create_random_displacement_3d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.create_random_displacement_3d"]], "create_sphere() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.create_sphere"]], "cubic_spline() (in module dipy.align.parzenhist)": [[163, "dipy.align.parzenhist.cubic_spline"]], "cubic_spline_derivative() (in module dipy.align.parzenhist)": [[163, "dipy.align.parzenhist.cubic_spline_derivative"]], "decompose_matrix44() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.decompose_matrix44"]], "determine_num_threads() (in module dipy.align.bundlemin)": [[163, "dipy.align.bundlemin.determine_num_threads"]], "dipy.align": [[163, "module-dipy.align"]], "dipy.align._public": [[163, "module-dipy.align._public"]], "dipy.align.bundlemin": [[163, "module-dipy.align.bundlemin"]], "dipy.align.cpd": [[163, "module-dipy.align.cpd"]], "dipy.align.crosscorr": [[163, "module-dipy.align.crosscorr"]], "dipy.align.expectmax": [[163, "module-dipy.align.expectmax"]], "dipy.align.imaffine": [[163, "module-dipy.align.imaffine"]], "dipy.align.imwarp": [[163, "module-dipy.align.imwarp"]], "dipy.align.metrics": [[163, "module-dipy.align.metrics"]], "dipy.align.parzenhist": [[163, "module-dipy.align.parzenhist"]], "dipy.align.reslice": [[163, "module-dipy.align.reslice"]], "dipy.align.scalespace": [[163, "module-dipy.align.scalespace"]], "dipy.align.streamlinear": [[163, "module-dipy.align.streamlinear"]], "dipy.align.streamwarp": [[163, "module-dipy.align.streamwarp"]], "dipy.align.sumsqdiff": [[163, "module-dipy.align.sumsqdiff"]], "dipy.align.transforms": [[163, "module-dipy.align.transforms"]], "dipy.align.vector_fields": [[163, "module-dipy.align.vector_fields"]], "distance() (dipy.align.imaffine.mutualinformationmetric method)": [[163, "dipy.align.imaffine.MutualInformationMetric.distance"]], "distance() (dipy.align.streamlinear.bundlemindistanceasymmetricmetric method)": [[163, "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric.distance"]], "distance() (dipy.align.streamlinear.bundlemindistancematrixmetric method)": [[163, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric.distance"]], "distance() (dipy.align.streamlinear.bundlemindistancemetric method)": [[163, "dipy.align.streamlinear.BundleMinDistanceMetric.distance"]], "distance() (dipy.align.streamlinear.bundlesumdistancematrixmetric method)": [[163, "dipy.align.streamlinear.BundleSumDistanceMatrixMetric.distance"]], "distance() (dipy.align.streamlinear.jointbundlemindistancemetric method)": [[163, "dipy.align.streamlinear.JointBundleMinDistanceMetric.distance"]], "distance() (dipy.align.streamlinear.streamlinedistancemetric method)": [[163, "dipy.align.streamlinear.StreamlineDistanceMetric.distance"]], "distance_and_gradient() (dipy.align.imaffine.mutualinformationmetric method)": [[163, "dipy.align.imaffine.MutualInformationMetric.distance_and_gradient"]], "distance_matrix_mdf() (in module dipy.align.bundlemin)": [[163, "dipy.align.bundlemin.distance_matrix_mdf"]], "docstring_addendum (dipy.align.imaffine.affineregistration attribute)": [[163, "dipy.align.imaffine.AffineRegistration.docstring_addendum"]], "downsample_displacement_field_2d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.downsample_displacement_field_2d"]], "downsample_displacement_field_3d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.downsample_displacement_field_3d"]], "downsample_scalar_field_2d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.downsample_scalar_field_2d"]], "downsample_scalar_field_3d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.downsample_scalar_field_3d"]], "expand_fields() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.expand_fields"]], "expectation() (dipy.align.cpd.deformableregistration method)": [[163, "dipy.align.cpd.DeformableRegistration.expectation"]], "find_missing() (in module dipy.align.streamwarp)": [[163, "dipy.align.streamwarp.find_missing"]], "free_iteration() (dipy.align.metrics.ccmetric method)": [[163, "dipy.align.metrics.CCMetric.free_iteration"]], "free_iteration() (dipy.align.metrics.emmetric method)": [[163, "dipy.align.metrics.EMMetric.free_iteration"]], "free_iteration() (dipy.align.metrics.ssdmetric method)": [[163, "dipy.align.metrics.SSDMetric.free_iteration"]], "free_iteration() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.free_iteration"]], "gaussian_kernel() (in module dipy.align.cpd)": [[163, "dipy.align.cpd.gaussian_kernel"]], "get_affine() (dipy.align.imaffine.affinemap method)": [[163, "dipy.align.imaffine.AffineMap.get_affine"]], "get_affine() (dipy.align.scalespace.scalespace method)": [[163, "dipy.align.scalespace.ScaleSpace.get_affine"]], "get_affine_inv() (dipy.align.scalespace.scalespace method)": [[163, "dipy.align.scalespace.ScaleSpace.get_affine_inv"]], "get_backward_field() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.get_backward_field"]], "get_dim() (dipy.align.transforms.transform method)": [[163, "dipy.align.transforms.Transform.get_dim"]], "get_direction_and_spacings() (in module dipy.align.imwarp)": [[163, "dipy.align.imwarp.get_direction_and_spacings"]], "get_domain_shape() (dipy.align.scalespace.scalespace method)": [[163, "dipy.align.scalespace.ScaleSpace.get_domain_shape"]], "get_energy() (dipy.align.metrics.ccmetric method)": [[163, "dipy.align.metrics.CCMetric.get_energy"]], "get_energy() (dipy.align.metrics.emmetric method)": [[163, "dipy.align.metrics.EMMetric.get_energy"]], "get_energy() (dipy.align.metrics.ssdmetric method)": [[163, "dipy.align.metrics.SSDMetric.get_energy"]], "get_energy() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.get_energy"]], "get_expand_factors() (dipy.align.scalespace.scalespace method)": [[163, "dipy.align.scalespace.ScaleSpace.get_expand_factors"]], "get_forward_field() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.get_forward_field"]], "get_identity_parameters() (dipy.align.transforms.transform method)": [[163, "dipy.align.transforms.Transform.get_identity_parameters"]], "get_image() (dipy.align.scalespace.scalespace method)": [[163, "dipy.align.scalespace.ScaleSpace.get_image"]], "get_map() (dipy.align.imwarp.diffeomorphicregistration method)": [[163, "dipy.align.imwarp.DiffeomorphicRegistration.get_map"]], "get_map() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[163, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.get_map"]], "get_number_of_parameters() (dipy.align.transforms.transform method)": [[163, "dipy.align.transforms.Transform.get_number_of_parameters"]], "get_registration_parameters() (dipy.align.cpd.deformableregistration method)": [[163, "dipy.align.cpd.DeformableRegistration.get_registration_parameters"]], "get_scaling() (dipy.align.scalespace.scalespace method)": [[163, "dipy.align.scalespace.ScaleSpace.get_scaling"]], "get_sigmas() (dipy.align.scalespace.scalespace method)": [[163, "dipy.align.scalespace.ScaleSpace.get_sigmas"]], "get_simplified_transform() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.get_simplified_transform"]], "get_spacing() (dipy.align.scalespace.scalespace method)": [[163, "dipy.align.scalespace.ScaleSpace.get_spacing"]], "get_unique_pairs() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.get_unique_pairs"]], "gradient() (dipy.align.imaffine.mutualinformationmetric method)": [[163, "dipy.align.imaffine.MutualInformationMetric.gradient"]], "gradient() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.gradient"]], "groupwise_slr() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.groupwise_slr"]], "initialize_iteration() (dipy.align.metrics.ccmetric method)": [[163, "dipy.align.metrics.CCMetric.initialize_iteration"]], "initialize_iteration() (dipy.align.metrics.emmetric method)": [[163, "dipy.align.metrics.EMMetric.initialize_iteration"]], "initialize_iteration() (dipy.align.metrics.ssdmetric method)": [[163, "dipy.align.metrics.SSDMetric.initialize_iteration"]], "initialize_iteration() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.initialize_iteration"]], "initialize_sigma2() (in module dipy.align.cpd)": [[163, "dipy.align.cpd.initialize_sigma2"]], "interpret_matrix() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.interpret_matrix"]], "inverse() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.inverse"]], "invert_vector_field_fixed_point_2d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.invert_vector_field_fixed_point_2d"]], "invert_vector_field_fixed_point_3d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.invert_vector_field_fixed_point_3d"]], "is_valid_affine() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.is_valid_affine"]], "iterate() (dipy.align.cpd.deformableregistration method)": [[163, "dipy.align.cpd.DeformableRegistration.iterate"]], "iterate_residual_displacement_field_ssd_2d() (in module dipy.align.sumsqdiff)": [[163, "dipy.align.sumsqdiff.iterate_residual_displacement_field_ssd_2d"]], "iterate_residual_displacement_field_ssd_3d() (in module dipy.align.sumsqdiff)": [[163, "dipy.align.sumsqdiff.iterate_residual_displacement_field_ssd_3d"]], "jacobian() (dipy.align.transforms.transform method)": [[163, "dipy.align.transforms.Transform.jacobian"]], "logger() (in module dipy.align.imwarp)": [[163, "dipy.align.imwarp.logger"]], "logger() (in module dipy.align.scalespace)": [[163, "dipy.align.scalespace.logger"]], "logger() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.logger"]], "low_rank_eigen() (in module dipy.align.cpd)": [[163, "dipy.align.cpd.low_rank_eigen"]], "lowrankqs() (in module dipy.align.cpd)": [[163, "dipy.align.cpd.lowrankQS"]], "maximization() (dipy.align.cpd.deformableregistration method)": [[163, "dipy.align.cpd.DeformableRegistration.maximization"]], "motion_correction() (in module dipy.align._public)": [[163, "dipy.align._public.motion_correction"]], "mult_aff() (in module dipy.align.imwarp)": [[163, "dipy.align.imwarp.mult_aff"]], "optimize() (dipy.align.imaffine.affineregistration method)": [[163, "dipy.align.imaffine.AffineRegistration.optimize"]], "optimize() (dipy.align.imwarp.diffeomorphicregistration method)": [[163, "dipy.align.imwarp.DiffeomorphicRegistration.optimize"]], "optimize() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[163, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.optimize"]], "optimize() (dipy.align.streamlinear.streamlinelinearregistration method)": [[163, "dipy.align.streamlinear.StreamlineLinearRegistration.optimize"]], "param_to_matrix() (dipy.align.transforms.transform method)": [[163, "dipy.align.transforms.Transform.param_to_matrix"]], "precompute_cc_factors_2d() (in module dipy.align.crosscorr)": [[163, "dipy.align.crosscorr.precompute_cc_factors_2d"]], "precompute_cc_factors_2d_test() (in module dipy.align.crosscorr)": [[163, "dipy.align.crosscorr.precompute_cc_factors_2d_test"]], "precompute_cc_factors_3d() (in module dipy.align.crosscorr)": [[163, "dipy.align.crosscorr.precompute_cc_factors_3d"]], "precompute_cc_factors_3d_test() (in module dipy.align.crosscorr)": [[163, "dipy.align.crosscorr.precompute_cc_factors_3d_test"]], "print_level() (dipy.align.scalespace.scalespace method)": [[163, "dipy.align.scalespace.ScaleSpace.print_level"]], "progressive_slr() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.progressive_slr"]], "quantize_positive_2d() (in module dipy.align.expectmax)": [[163, "dipy.align.expectmax.quantize_positive_2d"]], "quantize_positive_3d() (in module dipy.align.expectmax)": [[163, "dipy.align.expectmax.quantize_positive_3d"]], "read_mapping() (in module dipy.align._public)": [[163, "dipy.align._public.read_mapping"]], "register() (dipy.align.cpd.deformableregistration method)": [[163, "dipy.align.cpd.DeformableRegistration.register"]], "register_dwi_series() (in module dipy.align._public)": [[163, "dipy.align._public.register_dwi_series"]], "register_dwi_to_template() (in module dipy.align._public)": [[163, "dipy.align._public.register_dwi_to_template"]], "register_series() (in module dipy.align._public)": [[163, "dipy.align._public.register_series"]], "remove_clusters_by_size() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.remove_clusters_by_size"]], "reorient_vector_field_2d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.reorient_vector_field_2d"]], "reorient_vector_field_3d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.reorient_vector_field_3d"]], "resample() (in module dipy.align._public)": [[163, "dipy.align._public.resample"]], "resample_displacement_field_2d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.resample_displacement_field_2d"]], "resample_displacement_field_3d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.resample_displacement_field_3d"]], "reslice() (in module dipy.align.reslice)": [[163, "dipy.align.reslice.reslice"]], "rigid() (in module dipy.align._public)": [[163, "dipy.align._public.rigid"]], "rigid_isoscaling() (in module dipy.align._public)": [[163, "dipy.align._public.rigid_isoscaling"]], "rigid_scaling() (in module dipy.align._public)": [[163, "dipy.align._public.rigid_scaling"]], "sample_domain_regular() (in module dipy.align.parzenhist)": [[163, "dipy.align.parzenhist.sample_domain_regular"]], "set_affine() (dipy.align.imaffine.affinemap method)": [[163, "dipy.align.imaffine.AffineMap.set_affine"]], "set_level_iters() (dipy.align.imwarp.diffeomorphicregistration method)": [[163, "dipy.align.imwarp.DiffeomorphicRegistration.set_level_iters"]], "set_levels_above() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.set_levels_above"]], "set_levels_below() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.set_levels_below"]], "set_moving_image() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.set_moving_image"]], "set_static_image() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.set_static_image"]], "setup() (dipy.align.imaffine.mutualinformationmetric method)": [[163, "dipy.align.imaffine.MutualInformationMetric.setup"]], "setup() (dipy.align.parzenhist.parzenjointhistogram method)": [[163, "dipy.align.parzenhist.ParzenJointHistogram.setup"]], "setup() (dipy.align.streamlinear.bundlemindistancematrixmetric method)": [[163, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric.setup"]], "setup() (dipy.align.streamlinear.bundlemindistancemetric method)": [[163, "dipy.align.streamlinear.BundleMinDistanceMetric.setup"]], "setup() (dipy.align.streamlinear.jointbundlemindistancemetric method)": [[163, "dipy.align.streamlinear.JointBundleMinDistanceMetric.setup"]], "setup() (dipy.align.streamlinear.streamlinedistancemetric method)": [[163, "dipy.align.streamlinear.StreamlineDistanceMetric.setup"]], "shallow_copy() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.shallow_copy"]], "simplify_warp_function_2d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.simplify_warp_function_2d"]], "simplify_warp_function_3d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.simplify_warp_function_3d"]], "slr_with_qbx() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.slr_with_qbx"]], "solve_2d_symmetric_positive_definite() (in module dipy.align.sumsqdiff)": [[163, "dipy.align.sumsqdiff.solve_2d_symmetric_positive_definite"]], "solve_3d_symmetric_positive_definite() (in module dipy.align.sumsqdiff)": [[163, "dipy.align.sumsqdiff.solve_3d_symmetric_positive_definite"]], "sparse_gradient() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.sparse_gradient"]], "streamline_registration() (in module dipy.align._public)": [[163, "dipy.align._public.streamline_registration"]], "syn_registration() (in module dipy.align._public)": [[163, "dipy.align._public.syn_registration"]], "transform() (dipy.align.imaffine.affinemap method)": [[163, "dipy.align.imaffine.AffineMap.transform"]], "transform() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.transform"]], "transform() (dipy.align.streamlinear.jointstreamlineregistrationmap method)": [[163, "dipy.align.streamlinear.JointStreamlineRegistrationMap.transform"]], "transform() (dipy.align.streamlinear.streamlineregistrationmap method)": [[163, "dipy.align.streamlinear.StreamlineRegistrationMap.transform"]], "transform_2d_affine() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.transform_2d_affine"]], "transform_2d_affine_nn() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.transform_2d_affine_nn"]], "transform_3d_affine() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.transform_3d_affine"]], "transform_3d_affine_nn() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.transform_3d_affine_nn"]], "transform_centers_of_mass() (in module dipy.align.imaffine)": [[163, "dipy.align.imaffine.transform_centers_of_mass"]], "transform_geometric_centers() (in module dipy.align.imaffine)": [[163, "dipy.align.imaffine.transform_geometric_centers"]], "transform_inverse() (dipy.align.imaffine.affinemap method)": [[163, "dipy.align.imaffine.AffineMap.transform_inverse"]], "transform_inverse() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.transform_inverse"]], "transform_origins() (in module dipy.align.imaffine)": [[163, "dipy.align.imaffine.transform_origins"]], "transform_point_cloud() (dipy.align.cpd.deformableregistration method)": [[163, "dipy.align.cpd.DeformableRegistration.transform_point_cloud"]], "transform_points() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.transform_points"]], "transform_points_inverse() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.transform_points_inverse"]], "translation() (in module dipy.align._public)": [[163, "dipy.align._public.translation"]], "update() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[163, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.update"]], "update_gradient_dense() (dipy.align.parzenhist.parzenjointhistogram method)": [[163, "dipy.align.parzenhist.ParzenJointHistogram.update_gradient_dense"]], "update_gradient_sparse() (dipy.align.parzenhist.parzenjointhistogram method)": [[163, "dipy.align.parzenhist.ParzenJointHistogram.update_gradient_sparse"]], "update_pdfs_dense() (dipy.align.parzenhist.parzenjointhistogram method)": [[163, "dipy.align.parzenhist.ParzenJointHistogram.update_pdfs_dense"]], "update_pdfs_sparse() (dipy.align.parzenhist.parzenjointhistogram method)": [[163, "dipy.align.parzenhist.ParzenJointHistogram.update_pdfs_sparse"]], "update_transform() (dipy.align.cpd.deformableregistration method)": [[163, "dipy.align.cpd.DeformableRegistration.update_transform"]], "update_variance() (dipy.align.cpd.deformableregistration method)": [[163, "dipy.align.cpd.DeformableRegistration.update_variance"]], "use_moving_image_dynamics() (dipy.align.metrics.emmetric method)": [[163, "dipy.align.metrics.EMMetric.use_moving_image_dynamics"]], "use_moving_image_dynamics() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.use_moving_image_dynamics"]], "use_static_image_dynamics() (dipy.align.metrics.emmetric method)": [[163, "dipy.align.metrics.EMMetric.use_static_image_dynamics"]], "use_static_image_dynamics() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.use_static_image_dynamics"]], "v_cycle_2d() (in module dipy.align.metrics)": [[163, "dipy.align.metrics.v_cycle_2d"]], "v_cycle_3d() (in module dipy.align.metrics)": [[163, "dipy.align.metrics.v_cycle_3d"]], "warp_2d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.warp_2d"]], "warp_2d_nn() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.warp_2d_nn"]], "warp_3d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.warp_3d"]], "warp_3d_nn() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.warp_3d_nn"]], "warp_coordinates_2d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.warp_coordinates_2d"]], "warp_coordinates_3d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.warp_coordinates_3d"]], "warp_endomorphism() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.warp_endomorphism"]], "write_mapping() (in module dipy.align._public)": [[163, "dipy.align._public.write_mapping"]], "gradienttable (class in dipy.core.gradients)": [[164, "dipy.core.gradients.GradientTable"]], "graph (class in dipy.core.graph)": [[164, "dipy.core.graph.Graph"]], "hemisphere (class in dipy.core.sphere)": [[164, "dipy.core.sphere.HemiSphere"]], "interpolator (class in dipy.core.interpolation)": [[164, "dipy.core.interpolation.Interpolator"]], "lecuyer() (in module dipy.core.rng)": [[164, "dipy.core.rng.LEcuyer"]], "nearestneighborinterpolator (class in dipy.core.interpolation)": [[164, "dipy.core.interpolation.NearestNeighborInterpolator"]], "nonnegativeleastsquares (class in dipy.core.optimize)": [[164, "dipy.core.optimize.NonNegativeLeastSquares"]], "onetimeproperty (class in dipy.core.onetime)": [[164, "dipy.core.onetime.OneTimeProperty"]], "optimizer (class in dipy.core.optimize)": [[164, "dipy.core.optimize.Optimizer"]], "outsideimage (class in dipy.core.interpolation)": [[164, "dipy.core.interpolation.OutsideImage"]], "positivedefiniteleastsquares (class in dipy.core.optimize)": [[164, "dipy.core.optimize.PositiveDefiniteLeastSquares"]], "profiler (class in dipy.core.profile)": [[164, "dipy.core.profile.Profiler"]], "resetmixin (class in dipy.core.onetime)": [[164, "dipy.core.onetime.ResetMixin"]], "sklearnlinearsolver (class in dipy.core.optimize)": [[164, "dipy.core.optimize.SKLearnLinearSolver"]], "sphere (class in dipy.core.sphere)": [[164, "dipy.core.sphere.Sphere"]], "trilinearinterpolator (class in dipy.core.interpolation)": [[164, "dipy.core.interpolation.TriLinearInterpolator"]], "wichmannhill1982() (in module dipy.core.rng)": [[164, "dipy.core.rng.WichmannHill1982"]], "wichmannhill2006() (in module dipy.core.rng)": [[164, "dipy.core.rng.WichmannHill2006"]], "_tuple2axes() (in module dipy.core.geometry)": [[164, "dipy.core.geometry._TUPLE2AXES"]], "__init__() (dipy.core.gradients.gradienttable method)": [[164, "dipy.core.gradients.GradientTable.__init__"]], "__init__() (dipy.core.graph.graph method)": [[164, "dipy.core.graph.Graph.__init__"]], "__init__() (dipy.core.interpolation.interpolator method)": [[164, "dipy.core.interpolation.Interpolator.__init__"]], "__init__() (dipy.core.interpolation.nearestneighborinterpolator method)": [[164, "dipy.core.interpolation.NearestNeighborInterpolator.__init__"]], "__init__() (dipy.core.interpolation.outsideimage method)": [[164, "dipy.core.interpolation.OutsideImage.__init__"]], "__init__() (dipy.core.interpolation.trilinearinterpolator method)": [[164, "dipy.core.interpolation.TriLinearInterpolator.__init__"]], "__init__() (dipy.core.onetime.onetimeproperty method)": [[164, "dipy.core.onetime.OneTimeProperty.__init__"]], "__init__() (dipy.core.onetime.resetmixin method)": [[164, "dipy.core.onetime.ResetMixin.__init__"]], "__init__() (dipy.core.optimize.nonnegativeleastsquares method)": [[164, "dipy.core.optimize.NonNegativeLeastSquares.__init__"]], "__init__() (dipy.core.optimize.optimizer method)": [[164, "dipy.core.optimize.Optimizer.__init__"]], "__init__() (dipy.core.optimize.positivedefiniteleastsquares method)": [[164, "dipy.core.optimize.PositiveDefiniteLeastSquares.__init__"]], "__init__() (dipy.core.optimize.sklearnlinearsolver method)": [[164, "dipy.core.optimize.SKLearnLinearSolver.__init__"]], "__init__() (dipy.core.profile.profiler method)": [[164, "dipy.core.profile.Profiler.__init__"]], "__init__() (dipy.core.sphere.hemisphere method)": [[164, "dipy.core.sphere.HemiSphere.__init__"]], "__init__() (dipy.core.sphere.sphere method)": [[164, "dipy.core.sphere.Sphere.__init__"]], "add_edge() (dipy.core.graph.graph method)": [[164, "dipy.core.graph.Graph.add_edge"]], "add_node() (dipy.core.graph.graph method)": [[164, "dipy.core.graph.Graph.add_node"]], "afb3d() (in module dipy.core.wavelet)": [[164, "dipy.core.wavelet.afb3D"]], "afb3d_a() (in module dipy.core.wavelet)": [[164, "dipy.core.wavelet.afb3D_A"]], "all_paths() (dipy.core.graph.graph method)": [[164, "dipy.core.graph.Graph.all_paths"]], "angular_similarity() (in module dipy.core.sphere_stats)": [[164, "dipy.core.sphere_stats.angular_similarity"]], "auto_attr() (in module dipy.core.onetime)": [[164, "dipy.core.onetime.auto_attr"]], "b0_threshold_empty_gradient_message() (in module dipy.core.gradients)": [[164, "dipy.core.gradients.b0_threshold_empty_gradient_message"]], "b0_threshold_update_slicing_message() (in module dipy.core.gradients)": [[164, "dipy.core.gradients.b0_threshold_update_slicing_message"]], "b0s_mask() (dipy.core.gradients.gradienttable method)": [[164, "dipy.core.gradients.GradientTable.b0s_mask"]], "btens_to_params() (in module dipy.core.gradients)": [[164, "dipy.core.gradients.btens_to_params"]], "bvals() (dipy.core.gradients.gradienttable method)": [[164, "dipy.core.gradients.GradientTable.bvals"]], "bvecs() (dipy.core.gradients.gradienttable method)": [[164, "dipy.core.gradients.GradientTable.bvecs"]], "cart2sphere() (in module dipy.core.geometry)": [[164, "dipy.core.geometry.cart2sphere"]], "cart_distance() (in module dipy.core.geometry)": [[164, "dipy.core.geometry.cart_distance"]], "check_multi_b() (in module dipy.core.gradients)": [[164, "dipy.core.gradients.check_multi_b"]], "children() (dipy.core.graph.graph method)": [[164, "dipy.core.graph.Graph.children"]], "circumradius() (in module dipy.core.geometry)": [[164, "dipy.core.geometry.circumradius"]], "compare_orientation_sets() (in module dipy.core.sphere_stats)": [[164, "dipy.core.sphere_stats.compare_orientation_sets"]], "compose_matrix() (in module dipy.core.geometry)": [[164, "dipy.core.geometry.compose_matrix"]], "compose_transformations() (in module dipy.core.geometry)": [[164, "dipy.core.geometry.compose_transformations"]], "create_unit_hemisphere() (in module dipy.core.subdivide_octahedron)": [[164, "dipy.core.subdivide_octahedron.create_unit_hemisphere"]], "create_unit_sphere() (in module dipy.core.subdivide_octahedron)": [[164, "dipy.core.subdivide_octahedron.create_unit_sphere"]], "cshift3d() (in module dipy.core.wavelet)": [[164, "dipy.core.wavelet.cshift3D"]], "decompose_matrix() (in module dipy.core.geometry)": [[164, "dipy.core.geometry.decompose_matrix"]], "del_node() (dipy.core.graph.graph method)": [[164, "dipy.core.graph.Graph.del_node"]], "del_node_and_edges() (dipy.core.graph.graph method)": [[164, "dipy.core.graph.Graph.del_node_and_edges"]], "dipy.core": [[164, "module-dipy.core"]], "dipy.core.geometry": [[164, "module-dipy.core.geometry"]], "dipy.core.gradients": [[164, "module-dipy.core.gradients"]], "dipy.core.graph": [[164, "module-dipy.core.graph"]], "dipy.core.histeq": [[164, "module-dipy.core.histeq"]], "dipy.core.interpolation": [[164, "module-dipy.core.interpolation"]], "dipy.core.ndindex": [[164, "module-dipy.core.ndindex"]], "dipy.core.onetime": [[164, "module-dipy.core.onetime"]], "dipy.core.optimize": [[164, "module-dipy.core.optimize"]], "dipy.core.profile": [[164, "module-dipy.core.profile"]], "dipy.core.rng": [[164, "module-dipy.core.rng"]], "dipy.core.sphere": [[164, "module-dipy.core.sphere"]], "dipy.core.sphere_stats": [[164, "module-dipy.core.sphere_stats"]], "dipy.core.subdivide_octahedron": [[164, "module-dipy.core.subdivide_octahedron"]], "dipy.core.wavelet": [[164, "module-dipy.core.wavelet"]], "disperse_charges() (in module dipy.core.sphere)": [[164, "dipy.core.sphere.disperse_charges"]], "disperse_charges_alt() (in module dipy.core.sphere)": [[164, "dipy.core.sphere.disperse_charges_alt"]], "dist_to_corner() (in module dipy.core.geometry)": [[164, "dipy.core.geometry.dist_to_corner"]], "down() (dipy.core.graph.graph method)": [[164, "dipy.core.graph.Graph.down"]], "down_short() (dipy.core.graph.graph method)": [[164, "dipy.core.graph.Graph.down_short"]], "dwt3d() (in module dipy.core.wavelet)": [[164, "dipy.core.wavelet.dwt3D"]], "edges() (dipy.core.sphere.sphere method)": [[164, "dipy.core.sphere.Sphere.edges"]], "eigenstats() (in module dipy.core.sphere_stats)": [[164, "dipy.core.sphere_stats.eigenstats"]], "euler_characteristic_check() (in module dipy.core.sphere)": [[164, "dipy.core.sphere.euler_characteristic_check"]], "euler_matrix() (in module dipy.core.geometry)": [[164, "dipy.core.geometry.euler_matrix"]], "evolution (dipy.core.optimize.optimizer property)": [[164, "dipy.core.optimize.Optimizer.evolution"]], "faces() (dipy.core.sphere.hemisphere method)": [[164, "dipy.core.sphere.HemiSphere.faces"]], "faces() (dipy.core.sphere.sphere method)": [[164, "dipy.core.sphere.Sphere.faces"]], "faces_from_sphere_vertices() (in module dipy.core.sphere)": [[164, "dipy.core.sphere.faces_from_sphere_vertices"]], "fibonacci_sphere() (in module dipy.core.sphere)": [[164, "dipy.core.sphere.fibonacci_sphere"]], "find_closest() (dipy.core.sphere.hemisphere method)": [[164, "dipy.core.sphere.HemiSphere.find_closest"]], "find_closest() (dipy.core.sphere.sphere method)": [[164, "dipy.core.sphere.Sphere.find_closest"]], "fit() (dipy.core.optimize.nonnegativeleastsquares method)": [[164, "dipy.core.optimize.NonNegativeLeastSquares.fit"]], "fit() (dipy.core.optimize.sklearnlinearsolver method)": [[164, "dipy.core.optimize.SKLearnLinearSolver.fit"]], "fopt (dipy.core.optimize.optimizer property)": [[164, "dipy.core.optimize.Optimizer.fopt"]], "from_sphere() (dipy.core.sphere.hemisphere class method)": [[164, "dipy.core.sphere.HemiSphere.from_sphere"]], "generate_bvecs() (in module dipy.core.gradients)": [[164, "dipy.core.gradients.generate_bvecs"]], "get_bval_indices() (in module dipy.core.gradients)": [[164, "dipy.core.gradients.get_bval_indices"]], "gradient_strength() (dipy.core.gradients.gradienttable method)": [[164, "dipy.core.gradients.GradientTable.gradient_strength"]], "gradient_table() (in module dipy.core.gradients)": [[164, "dipy.core.gradients.gradient_table"]], "gradient_table_from_bvals_bvecs() (in module dipy.core.gradients)": [[164, "dipy.core.gradients.gradient_table_from_bvals_bvecs"]], "gradient_table_from_gradient_strength_bvecs() (in module dipy.core.gradients)": [[164, "dipy.core.gradients.gradient_table_from_gradient_strength_bvecs"]], "gradient_table_from_qvals_bvecs() (in module dipy.core.gradients)": [[164, "dipy.core.gradients.gradient_table_from_qvals_bvecs"]], "hemi_icosahedron() (in module dipy.core.sphere)": [[164, "dipy.core.sphere.hemi_icosahedron"]], "histeq() (in module dipy.core.histeq)": [[164, "dipy.core.histeq.histeq"]], "icosahedron_faces() (in module dipy.core.sphere)": [[164, "dipy.core.sphere.icosahedron_faces"]], "icosahedron_vertices() (in module dipy.core.sphere)": [[164, "dipy.core.sphere.icosahedron_vertices"]], "idwt3d() (in module dipy.core.wavelet)": [[164, "dipy.core.wavelet.idwt3D"]], "info (dipy.core.gradients.gradienttable property)": [[164, "dipy.core.gradients.GradientTable.info"]], "interp_rbf() (in module dipy.core.interpolation)": [[164, "dipy.core.interpolation.interp_rbf"]], "interpolate_scalar_2d() (in module dipy.core.interpolation)": [[164, "dipy.core.interpolation.interpolate_scalar_2d"]], "interpolate_scalar_3d() (in module dipy.core.interpolation)": [[164, "dipy.core.interpolation.interpolate_scalar_3d"]], "interpolate_scalar_nn_2d() (in module dipy.core.interpolation)": [[164, "dipy.core.interpolation.interpolate_scalar_nn_2d"]], "interpolate_scalar_nn_3d() (in module dipy.core.interpolation)": [[164, "dipy.core.interpolation.interpolate_scalar_nn_3d"]], "interpolate_vector_2d() (in module dipy.core.interpolation)": [[164, "dipy.core.interpolation.interpolate_vector_2d"]], "interpolate_vector_3d() (in module dipy.core.interpolation)": [[164, "dipy.core.interpolation.interpolate_vector_3d"]], "is_hemispherical() (in module dipy.core.geometry)": [[164, "dipy.core.geometry.is_hemispherical"]], "lambert_equal_area_projection_cart() (in module dipy.core.geometry)": [[164, "dipy.core.geometry.lambert_equal_area_projection_cart"]], "lambert_equal_area_projection_polar() (in module dipy.core.geometry)": [[164, "dipy.core.geometry.lambert_equal_area_projection_polar"]], "logger() (in module dipy.core.gradients)": [[164, "dipy.core.gradients.logger"]], "map_coordinates_trilinear_iso() (in module dipy.core.interpolation)": [[164, "dipy.core.interpolation.map_coordinates_trilinear_iso"]], "mask_non_weighted_bvals() (in module dipy.core.gradients)": [[164, "dipy.core.gradients.mask_non_weighted_bvals"]], "message (dipy.core.optimize.optimizer property)": [[164, "dipy.core.optimize.Optimizer.message"]], "mirror() (dipy.core.sphere.hemisphere method)": [[164, "dipy.core.sphere.HemiSphere.mirror"]], "ndindex() (in module dipy.core.ndindex)": [[164, "dipy.core.ndindex.ndindex"]], "nearest_pos_semi_def() (in module dipy.core.geometry)": [[164, "dipy.core.geometry.nearest_pos_semi_def"]], "nearestneighbor_interpolate() (in module dipy.core.interpolation)": [[164, "dipy.core.interpolation.nearestneighbor_interpolate"]], "nfev (dipy.core.optimize.optimizer property)": [[164, "dipy.core.optimize.Optimizer.nfev"]], "nit (dipy.core.optimize.optimizer property)": [[164, "dipy.core.optimize.Optimizer.nit"]], "normalized_vector() (in module dipy.core.geometry)": [[164, "dipy.core.geometry.normalized_vector"]], "octahedron_faces() (in module dipy.core.sphere)": [[164, "dipy.core.sphere.octahedron_faces"]], "octahedron_vertices() (in module dipy.core.sphere)": [[164, "dipy.core.sphere.octahedron_vertices"]], "orientation_from_string() (in module dipy.core.gradients)": [[164, "dipy.core.gradients.orientation_from_string"]], "orientation_to_string() (in module dipy.core.gradients)": [[164, "dipy.core.gradients.orientation_to_string"]], "ornt_mapping() (in module dipy.core.gradients)": [[164, "dipy.core.gradients.ornt_mapping"]], "params_to_btens() (in module dipy.core.gradients)": [[164, "dipy.core.gradients.params_to_btens"]], "parents() (dipy.core.graph.graph method)": [[164, "dipy.core.graph.Graph.parents"]], "permutationinverse() (in module dipy.core.wavelet)": [[164, "dipy.core.wavelet.permutationinverse"]], "perpendicular_directions() (in module dipy.core.geometry)": [[164, "dipy.core.geometry.perpendicular_directions"]], "predict() (dipy.core.optimize.sklearnlinearsolver method)": [[164, "dipy.core.optimize.SKLearnLinearSolver.predict"]], "print_stats() (dipy.core.profile.profiler method)": [[164, "dipy.core.profile.Profiler.print_stats"]], "print_summary() (dipy.core.optimize.optimizer method)": [[164, "dipy.core.optimize.Optimizer.print_summary"]], "qvals() (dipy.core.gradients.gradienttable method)": [[164, "dipy.core.gradients.GradientTable.qvals"]], "random_uniform_on_sphere() (in module dipy.core.sphere_stats)": [[164, "dipy.core.sphere_stats.random_uniform_on_sphere"]], "reorient_bvecs() (in module dipy.core.gradients)": [[164, "dipy.core.gradients.reorient_bvecs"]], "reorient_on_axis() (in module dipy.core.gradients)": [[164, "dipy.core.gradients.reorient_on_axis"]], "reorient_vectors() (in module dipy.core.gradients)": [[164, "dipy.core.gradients.reorient_vectors"]], "reset() (dipy.core.onetime.resetmixin method)": [[164, "dipy.core.onetime.ResetMixin.reset"]], "rodrigues_axis_rotation() (in module dipy.core.geometry)": [[164, "dipy.core.geometry.rodrigues_axis_rotation"]], "round_bvals() (in module dipy.core.gradients)": [[164, "dipy.core.gradients.round_bvals"]], "sfb3d() (in module dipy.core.wavelet)": [[164, "dipy.core.wavelet.sfb3D"]], "sfb3d_a() (in module dipy.core.wavelet)": [[164, "dipy.core.wavelet.sfb3D_A"]], "shortest_path() (dipy.core.graph.graph method)": [[164, "dipy.core.graph.Graph.shortest_path"]], "solve() (dipy.core.optimize.positivedefiniteleastsquares method)": [[164, "dipy.core.optimize.PositiveDefiniteLeastSquares.solve"]], "sparse_nnls() (in module dipy.core.optimize)": [[164, "dipy.core.optimize.sparse_nnls"]], "spdot() (in module dipy.core.optimize)": [[164, "dipy.core.optimize.spdot"]], "sph2latlon() (in module dipy.core.geometry)": [[164, "dipy.core.geometry.sph2latlon"]], "sphere2cart() (in module dipy.core.geometry)": [[164, "dipy.core.geometry.sphere2cart"]], "sphere_distance() (in module dipy.core.geometry)": [[164, "dipy.core.geometry.sphere_distance"]], "subdivide() (dipy.core.sphere.hemisphere method)": [[164, "dipy.core.sphere.HemiSphere.subdivide"]], "subdivide() (dipy.core.sphere.sphere method)": [[164, "dipy.core.sphere.Sphere.subdivide"]], "tau() (dipy.core.gradients.gradienttable method)": [[164, "dipy.core.gradients.GradientTable.tau"]], "trilinear_interp() (in module dipy.core.interpolation)": [[164, "dipy.core.interpolation.trilinear_interp"]], "trilinear_interpolate4d() (in module dipy.core.interpolation)": [[164, "dipy.core.interpolation.trilinear_interpolate4d"]], "unique_bvals() (in module dipy.core.gradients)": [[164, "dipy.core.gradients.unique_bvals"]], "unique_bvals_magnitude() (in module dipy.core.gradients)": [[164, "dipy.core.gradients.unique_bvals_magnitude"]], "unique_bvals_tolerance() (in module dipy.core.gradients)": [[164, "dipy.core.gradients.unique_bvals_tolerance"]], "unique_edges() (in module dipy.core.sphere)": [[164, "dipy.core.sphere.unique_edges"]], "unique_sets() (in module dipy.core.sphere)": [[164, "dipy.core.sphere.unique_sets"]], "unit_icosahedron() (in module dipy.core.sphere)": [[164, "dipy.core.sphere.unit_icosahedron"]], "unit_octahedron() (in module dipy.core.sphere)": [[164, "dipy.core.sphere.unit_octahedron"]], "up() (dipy.core.graph.graph method)": [[164, "dipy.core.graph.Graph.up"]], "up_short() (dipy.core.graph.graph method)": [[164, "dipy.core.graph.Graph.up_short"]], "vec2vec_rotmat() (in module dipy.core.geometry)": [[164, "dipy.core.geometry.vec2vec_rotmat"]], "vector_cosine() (in module dipy.core.geometry)": [[164, "dipy.core.geometry.vector_cosine"]], "vector_norm() (in module dipy.core.geometry)": [[164, "dipy.core.geometry.vector_norm"]], "vertices() (dipy.core.sphere.sphere method)": [[164, "dipy.core.sphere.Sphere.vertices"]], "x (dipy.core.sphere.sphere property)": [[164, "dipy.core.sphere.Sphere.x"]], "xopt (dipy.core.optimize.optimizer property)": [[164, "dipy.core.optimize.Optimizer.xopt"]], "y (dipy.core.sphere.sphere property)": [[164, "dipy.core.sphere.Sphere.y"]], "z (dipy.core.sphere.sphere property)": [[164, "dipy.core.sphere.Sphere.z"]], "data_dir() (in module dipy.data)": [[165, "dipy.data.DATA_DIR"]], "dataerror (class in dipy.data)": [[165, "dipy.data.DataError"]], "__init__() (dipy.data.dataerror method)": [[165, "dipy.data.DataError.__init__"]], "check_md5() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.check_md5"]], "copyfileobj_withprogress() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.copyfileobj_withprogress"]], "default_sphere() (in module dipy.data)": [[165, "dipy.data.default_sphere"]], "dipy.data": [[165, "module-dipy.data"]], "dipy.data.fetcher": [[165, "module-dipy.data.fetcher"]], "dsi_deconv_voxels() (in module dipy.data)": [[165, "dipy.data.dsi_deconv_voxels"]], "dsi_voxels() (in module dipy.data)": [[165, "dipy.data.dsi_voxels"]], "extract_example_tracts() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.extract_example_tracts"]], "fetch_dib_217_lte_pte_ste() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_DiB_217_lte_pte_ste"]], "fetch_dib_70_lte_pte_ste() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_DiB_70_lte_pte_ste"]], "fetch_bundle_atlas_hcp842() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_bundle_atlas_hcp842"]], "fetch_bundle_fa_hcp() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_bundle_fa_hcp"]], "fetch_bundle_warp_dataset() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_bundle_warp_dataset"]], "fetch_bundles_2_subjects() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_bundles_2_subjects"]], "fetch_cenir_multib() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_cenir_multib"]], "fetch_cfin_multib() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_cfin_multib"]], "fetch_cti_rat1() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_cti_rat1"]], "fetch_data() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_data"]], "fetch_deepn4_test() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_deepn4_test"]], "fetch_deepn4_weights() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_deepn4_weights"]], "fetch_evac_test() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_evac_test"]], "fetch_evac_weights() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_evac_weights"]], "fetch_file_formats() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_file_formats"]], "fetch_fury_surface() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_fury_surface"]], "fetch_gold_standard_io() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_gold_standard_io"]], "fetch_hbn() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_hbn"]], "fetch_hcp() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_hcp"]], "fetch_isbi2013_2shell() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_isbi2013_2shell"]], "fetch_ivim() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_ivim"]], "fetch_mni_template() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_mni_template"]], "fetch_ptt_minimal_dataset() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_ptt_minimal_dataset"]], "fetch_qtdmri_test_retest_2subjects() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_qtdMRI_test_retest_2subjects"]], "fetch_qte_lte_pte() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_qte_lte_pte"]], "fetch_resdnn_weights() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_resdnn_weights"]], "fetch_scil_b0() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_scil_b0"]], "fetch_sherbrooke_3shell() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_sherbrooke_3shell"]], "fetch_stanford_hardi() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_stanford_hardi"]], "fetch_stanford_labels() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_stanford_labels"]], "fetch_stanford_pve_maps() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_stanford_pve_maps"]], "fetch_stanford_t1() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_stanford_t1"]], "fetch_stanford_tracks() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_stanford_tracks"]], "fetch_syn_data() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_syn_data"]], "fetch_synb0_test() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_synb0_test"]], "fetch_synb0_weights() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_synb0_weights"]], "fetch_taiwan_ntu_dsi() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_taiwan_ntu_dsi"]], "fetch_target_tractogram_hcp() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_target_tractogram_hcp"]], "fetch_tissue_data() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.fetch_tissue_data"]], "get_3shell_gtab() (in module dipy.data)": [[165, "dipy.data.get_3shell_gtab"]], "get_bundle_atlas_hcp842() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.get_bundle_atlas_hcp842"]], "get_cmap() (in module dipy.data)": [[165, "dipy.data.get_cmap"]], "get_file_formats() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.get_file_formats"]], "get_fnames() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.get_fnames"]], "get_gtab_taiwan_dsi() (in module dipy.data)": [[165, "dipy.data.get_gtab_taiwan_dsi"]], "get_isbi2013_2shell_gtab() (in module dipy.data)": [[165, "dipy.data.get_isbi2013_2shell_gtab"]], "get_sim_voxels() (in module dipy.data)": [[165, "dipy.data.get_sim_voxels"]], "get_skeleton() (in module dipy.data)": [[165, "dipy.data.get_skeleton"]], "get_sphere() (in module dipy.data)": [[165, "dipy.data.get_sphere"]], "get_target_tractogram_hcp() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.get_target_tractogram_hcp"]], "get_two_hcp842_bundles() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.get_two_hcp842_bundles"]], "load_sdp_constraints() (in module dipy.data)": [[165, "dipy.data.load_sdp_constraints"]], "loads_compat() (in module dipy.data)": [[165, "dipy.data.loads_compat"]], "matlab_life_results() (in module dipy.data)": [[165, "dipy.data.matlab_life_results"]], "mrtrix_spherical_functions() (in module dipy.data)": [[165, "dipy.data.mrtrix_spherical_functions"]], "read_dib_217_lte_pte_ste() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.read_DiB_217_lte_pte_ste"]], "read_dib_70_lte_pte_ste() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.read_DiB_70_lte_pte_ste"]], "read_bundles_2_subjects() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.read_bundles_2_subjects"]], "read_cenir_multib() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.read_cenir_multib"]], "read_cfin_dwi() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.read_cfin_dwi"]], "read_cfin_t1() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.read_cfin_t1"]], "read_five_af_bundles() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.read_five_af_bundles"]], "read_isbi2013_2shell() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.read_isbi2013_2shell"]], "read_ivim() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.read_ivim"]], "read_mni_template() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.read_mni_template"]], "read_qtdmri_test_retest_2subjects() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.read_qtdMRI_test_retest_2subjects"]], "read_qte_lte_pte() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.read_qte_lte_pte"]], "read_scil_b0() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.read_scil_b0"]], "read_sherbrooke_3shell() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.read_sherbrooke_3shell"]], "read_siemens_scil_b0() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.read_siemens_scil_b0"]], "read_stanford_hardi() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.read_stanford_hardi"]], "read_stanford_labels() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.read_stanford_labels"]], "read_stanford_pve_maps() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.read_stanford_pve_maps"]], "read_stanford_t1() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.read_stanford_t1"]], "read_syn_data() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.read_syn_data"]], "read_taiwan_ntu_dsi() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.read_taiwan_ntu_dsi"]], "read_tissue_data() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.read_tissue_data"]], "small_sphere() (in module dipy.data)": [[165, "dipy.data.small_sphere"]], "to_bids_description() (in module dipy.data.fetcher)": [[165, "dipy.data.fetcher.to_bids_description"]], "two_cingulum_bundles() (in module dipy.data)": [[165, "dipy.data.two_cingulum_bundles"]], "enhancementkernel (class in dipy.denoise.enhancement_kernel)": [[166, "dipy.denoise.enhancement_kernel.EnhancementKernel"]], "hemisphere (class in dipy.denoise.enhancement_kernel)": [[166, "dipy.denoise.enhancement_kernel.HemiSphere"]], "sphere (class in dipy.denoise.enhancement_kernel)": [[166, "dipy.denoise.enhancement_kernel.Sphere"]], "__init__() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[166, "dipy.denoise.enhancement_kernel.EnhancementKernel.__init__"]], "__init__() (dipy.denoise.enhancement_kernel.hemisphere method)": [[166, "dipy.denoise.enhancement_kernel.HemiSphere.__init__"]], "__init__() (dipy.denoise.enhancement_kernel.sphere method)": [[166, "dipy.denoise.enhancement_kernel.Sphere.__init__"]], "adaptive_soft_matching() (in module dipy.denoise.adaptive_soft_matching)": [[166, "dipy.denoise.adaptive_soft_matching.adaptive_soft_matching"]], "add_padding_reflection() (in module dipy.denoise.denspeed)": [[166, "dipy.denoise.denspeed.add_padding_reflection"]], "ceil() (in module dipy.denoise.enhancement_kernel)": [[166, "dipy.denoise.enhancement_kernel.ceil"]], "compute_num_samples() (in module dipy.denoise.localpca)": [[166, "dipy.denoise.localpca.compute_num_samples"]], "compute_patch_size() (in module dipy.denoise.localpca)": [[166, "dipy.denoise.localpca.compute_patch_size"]], "compute_suggested_patch_radius() (in module dipy.denoise.localpca)": [[166, "dipy.denoise.localpca.compute_suggested_patch_radius"]], "convolve() (in module dipy.denoise.shift_twist_convolution)": [[166, "dipy.denoise.shift_twist_convolution.convolve"]], "convolve_sf() (in module dipy.denoise.shift_twist_convolution)": [[166, "dipy.denoise.shift_twist_convolution.convolve_sf"]], "correspond_indices() (in module dipy.denoise.denspeed)": [[166, "dipy.denoise.denspeed.correspond_indices"]], "create_patch_radius_arr() (in module dipy.denoise.localpca)": [[166, "dipy.denoise.localpca.create_patch_radius_arr"]], "determine_num_threads() (in module dipy.denoise.denspeed)": [[166, "dipy.denoise.denspeed.determine_num_threads"]], "determine_num_threads() (in module dipy.denoise.shift_twist_convolution)": [[166, "dipy.denoise.shift_twist_convolution.determine_num_threads"]], "dimensionality_problem_message() (in module dipy.denoise.localpca)": [[166, "dipy.denoise.localpca.dimensionality_problem_message"]], "dipy.denoise": [[166, "module-dipy.denoise"]], "dipy.denoise.adaptive_soft_matching": [[166, "module-dipy.denoise.adaptive_soft_matching"]], "dipy.denoise.denspeed": [[166, "module-dipy.denoise.denspeed"]], "dipy.denoise.enhancement_kernel": [[166, "module-dipy.denoise.enhancement_kernel"]], "dipy.denoise.gibbs": [[166, "module-dipy.denoise.gibbs"]], "dipy.denoise.localpca": [[166, "module-dipy.denoise.localpca"]], "dipy.denoise.nlmeans": [[166, "module-dipy.denoise.nlmeans"]], "dipy.denoise.nlmeans_block": [[166, "module-dipy.denoise.nlmeans_block"]], "dipy.denoise.noise_estimate": [[166, "module-dipy.denoise.noise_estimate"]], "dipy.denoise.non_local_means": [[166, "module-dipy.denoise.non_local_means"]], "dipy.denoise.patch2self": [[166, "module-dipy.denoise.patch2self"]], "dipy.denoise.pca_noise_estimate": [[166, "module-dipy.denoise.pca_noise_estimate"]], "dipy.denoise.shift_twist_convolution": [[166, "module-dipy.denoise.shift_twist_convolution"]], "disperse_charges() (in module dipy.denoise.enhancement_kernel)": [[166, "dipy.denoise.enhancement_kernel.disperse_charges"]], "edges() (dipy.denoise.enhancement_kernel.sphere method)": [[166, "dipy.denoise.enhancement_kernel.Sphere.edges"]], "estimate_sigma() (in module dipy.denoise.noise_estimate)": [[166, "dipy.denoise.noise_estimate.estimate_sigma"]], "evaluate_kernel() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[166, "dipy.denoise.enhancement_kernel.EnhancementKernel.evaluate_kernel"]], "faces() (dipy.denoise.enhancement_kernel.hemisphere method)": [[166, "dipy.denoise.enhancement_kernel.HemiSphere.faces"]], "faces() (dipy.denoise.enhancement_kernel.sphere method)": [[166, "dipy.denoise.enhancement_kernel.Sphere.faces"]], "find_closest() (dipy.denoise.enhancement_kernel.hemisphere method)": [[166, "dipy.denoise.enhancement_kernel.HemiSphere.find_closest"]], "find_closest() (dipy.denoise.enhancement_kernel.sphere method)": [[166, "dipy.denoise.enhancement_kernel.Sphere.find_closest"]], "firdn() (in module dipy.denoise.nlmeans_block)": [[166, "dipy.denoise.nlmeans_block.firdn"]], "from_sphere() (dipy.denoise.enhancement_kernel.hemisphere class method)": [[166, "dipy.denoise.enhancement_kernel.HemiSphere.from_sphere"]], "genpca() (in module dipy.denoise.localpca)": [[166, "dipy.denoise.localpca.genpca"]], "get_lookup_table() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[166, "dipy.denoise.enhancement_kernel.EnhancementKernel.get_lookup_table"]], "get_orientations() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[166, "dipy.denoise.enhancement_kernel.EnhancementKernel.get_orientations"]], "get_sphere() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[166, "dipy.denoise.enhancement_kernel.EnhancementKernel.get_sphere"]], "get_sphere() (in module dipy.denoise.enhancement_kernel)": [[166, "dipy.denoise.enhancement_kernel.get_sphere"]], "gettempdir() (in module dipy.denoise.enhancement_kernel)": [[166, "dipy.denoise.enhancement_kernel.gettempdir"]], "gibbs_removal() (in module dipy.denoise.gibbs)": [[166, "dipy.denoise.gibbs.gibbs_removal"]], "localpca() (in module dipy.denoise.localpca)": [[166, "dipy.denoise.localpca.localpca"]], "mirror() (dipy.denoise.enhancement_kernel.hemisphere method)": [[166, "dipy.denoise.enhancement_kernel.HemiSphere.mirror"]], "mppca() (in module dipy.denoise.localpca)": [[166, "dipy.denoise.localpca.mppca"]], "nlmeans() (in module dipy.denoise.nlmeans)": [[166, "dipy.denoise.nlmeans.nlmeans"]], "nlmeans_3d() (in module dipy.denoise.denspeed)": [[166, "dipy.denoise.denspeed.nlmeans_3d"]], "nlmeans_block() (in module dipy.denoise.nlmeans_block)": [[166, "dipy.denoise.nlmeans_block.nlmeans_block"]], "non_local_means() (in module dipy.denoise.non_local_means)": [[166, "dipy.denoise.non_local_means.non_local_means"]], "patch2self() (in module dipy.denoise.patch2self)": [[166, "dipy.denoise.patch2self.patch2self"]], "pca_noise_estimate() (in module dipy.denoise.pca_noise_estimate)": [[166, "dipy.denoise.pca_noise_estimate.pca_noise_estimate"]], "piesno() (in module dipy.denoise.noise_estimate)": [[166, "dipy.denoise.noise_estimate.piesno"]], "remove_padding() (in module dipy.denoise.denspeed)": [[166, "dipy.denoise.denspeed.remove_padding"]], "sf_to_sh() (in module dipy.denoise.shift_twist_convolution)": [[166, "dipy.denoise.shift_twist_convolution.sf_to_sh"]], "sh_to_sf() (in module dipy.denoise.shift_twist_convolution)": [[166, "dipy.denoise.shift_twist_convolution.sh_to_sf"]], "subdivide() (dipy.denoise.enhancement_kernel.hemisphere method)": [[166, "dipy.denoise.enhancement_kernel.HemiSphere.subdivide"]], "subdivide() (dipy.denoise.enhancement_kernel.sphere method)": [[166, "dipy.denoise.enhancement_kernel.Sphere.subdivide"]], "upfir() (in module dipy.denoise.nlmeans_block)": [[166, "dipy.denoise.nlmeans_block.upfir"]], "vertices() (dipy.denoise.enhancement_kernel.sphere method)": [[166, "dipy.denoise.enhancement_kernel.Sphere.vertices"]], "warn() (in module dipy.denoise.pca_noise_estimate)": [[166, "dipy.denoise.pca_noise_estimate.warn"]], "x (dipy.denoise.enhancement_kernel.sphere property)": [[166, "dipy.denoise.enhancement_kernel.Sphere.x"]], "y (dipy.denoise.enhancement_kernel.sphere property)": [[166, "dipy.denoise.enhancement_kernel.Sphere.y"]], "z (dipy.denoise.enhancement_kernel.sphere property)": [[166, "dipy.denoise.enhancement_kernel.Sphere.z"]], "basedirectiongetter (class in dipy.direction.closest_peak_direction_getter)": [[167, "dipy.direction.closest_peak_direction_getter.BaseDirectionGetter"]], "basepmfdirectiongetter (class in dipy.direction.closest_peak_direction_getter)": [[167, "dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter"]], "bootdirectiongetter (class in dipy.direction.bootstrap_direction_getter)": [[167, "dipy.direction.bootstrap_direction_getter.BootDirectionGetter"]], "closestpeakdirectiongetter (class in dipy.direction.closest_peak_direction_getter)": [[167, "dipy.direction.closest_peak_direction_getter.ClosestPeakDirectionGetter"]], "deterministicmaximumdirectiongetter (class in dipy.direction.probabilistic_direction_getter)": [[167, "dipy.direction.probabilistic_direction_getter.DeterministicMaximumDirectionGetter"]], "pttdirectiongetter (class in dipy.direction.ptt_direction_getter)": [[167, "dipy.direction.ptt_direction_getter.PTTDirectionGetter"]], "peaksandmetrics (class in dipy.direction.peaks)": [[167, "dipy.direction.peaks.PeaksAndMetrics"]], "pmfgen (class in dipy.direction.pmf)": [[167, "dipy.direction.pmf.PmfGen"]], "pmfgendirectiongetter (class in dipy.direction.closest_peak_direction_getter)": [[167, "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter"]], "probabilisticdirectiongetter (class in dipy.direction.probabilistic_direction_getter)": [[167, "dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter"]], "shcoeffpmfgen (class in dipy.direction.pmf)": [[167, "dipy.direction.pmf.SHCoeffPmfGen"]], "simplepmfgen (class in dipy.direction.pmf)": [[167, "dipy.direction.pmf.SimplePmfGen"]], "__init__() (dipy.direction.bootstrap_direction_getter.bootdirectiongetter method)": [[167, "dipy.direction.bootstrap_direction_getter.BootDirectionGetter.__init__"]], "__init__() (dipy.direction.closest_peak_direction_getter.basedirectiongetter method)": [[167, "dipy.direction.closest_peak_direction_getter.BaseDirectionGetter.__init__"]], "__init__() (dipy.direction.closest_peak_direction_getter.basepmfdirectiongetter method)": [[167, "dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter.__init__"]], "__init__() (dipy.direction.closest_peak_direction_getter.closestpeakdirectiongetter method)": [[167, "dipy.direction.closest_peak_direction_getter.ClosestPeakDirectionGetter.__init__"]], "__init__() (dipy.direction.closest_peak_direction_getter.pmfgendirectiongetter method)": [[167, "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.__init__"]], "__init__() (dipy.direction.peaks.peaksandmetrics method)": [[167, "dipy.direction.peaks.PeaksAndMetrics.__init__"]], "__init__() (dipy.direction.pmf.pmfgen method)": [[167, "dipy.direction.pmf.PmfGen.__init__"]], "__init__() (dipy.direction.pmf.shcoeffpmfgen method)": [[167, "dipy.direction.pmf.SHCoeffPmfGen.__init__"]], "__init__() (dipy.direction.pmf.simplepmfgen method)": [[167, "dipy.direction.pmf.SimplePmfGen.__init__"]], "__init__() (dipy.direction.probabilistic_direction_getter.deterministicmaximumdirectiongetter method)": [[167, "dipy.direction.probabilistic_direction_getter.DeterministicMaximumDirectionGetter.__init__"]], "__init__() (dipy.direction.probabilistic_direction_getter.probabilisticdirectiongetter method)": [[167, "dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter.__init__"]], "__init__() (dipy.direction.ptt_direction_getter.pttdirectiongetter method)": [[167, "dipy.direction.ptt_direction_getter.PTTDirectionGetter.__init__"]], "dipy.direction": [[167, "module-dipy.direction"]], "dipy.direction.bootstrap_direction_getter": [[167, "module-dipy.direction.bootstrap_direction_getter"]], "dipy.direction.closest_peak_direction_getter": [[167, "module-dipy.direction.closest_peak_direction_getter"]], "dipy.direction.peaks": [[167, "module-dipy.direction.peaks"]], "dipy.direction.pmf": [[167, "module-dipy.direction.pmf"]], "dipy.direction.probabilistic_direction_getter": [[167, "module-dipy.direction.probabilistic_direction_getter"]], "dipy.direction.ptt_direction_getter": [[167, "module-dipy.direction.ptt_direction_getter"]], "from_data() (dipy.direction.bootstrap_direction_getter.bootdirectiongetter class method)": [[167, "dipy.direction.bootstrap_direction_getter.BootDirectionGetter.from_data"]], "from_pmf() (dipy.direction.closest_peak_direction_getter.pmfgendirectiongetter class method)": [[167, "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.from_pmf"]], "from_shcoeff() (dipy.direction.closest_peak_direction_getter.pmfgendirectiongetter class method)": [[167, "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.from_shcoeff"]], "generate_streamline() (dipy.direction.ptt_direction_getter.pttdirectiongetter method)": [[167, "dipy.direction.ptt_direction_getter.PTTDirectionGetter.generate_streamline"]], "get_pmf() (dipy.direction.bootstrap_direction_getter.bootdirectiongetter method)": [[167, "dipy.direction.bootstrap_direction_getter.BootDirectionGetter.get_pmf"]], "get_pmf() (dipy.direction.pmf.pmfgen method)": [[167, "dipy.direction.pmf.PmfGen.get_pmf"]], "get_pmf_no_boot() (dipy.direction.bootstrap_direction_getter.bootdirectiongetter method)": [[167, "dipy.direction.bootstrap_direction_getter.BootDirectionGetter.get_pmf_no_boot"]], "get_pmf_value() (dipy.direction.pmf.pmfgen method)": [[167, "dipy.direction.pmf.PmfGen.get_pmf_value"]], "initial_direction() (dipy.direction.bootstrap_direction_getter.bootdirectiongetter method)": [[167, "dipy.direction.bootstrap_direction_getter.BootDirectionGetter.initial_direction"]], "initial_direction() (dipy.direction.closest_peak_direction_getter.basepmfdirectiongetter method)": [[167, "dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter.initial_direction"]], "min_radius_curvature_from_angle() (in module dipy.direction.ptt_direction_getter)": [[167, "dipy.direction.ptt_direction_getter.min_radius_curvature_from_angle"]], "peak_directions() (in module dipy.direction.bootstrap_direction_getter)": [[167, "dipy.direction.bootstrap_direction_getter.peak_directions"]], "peak_directions() (in module dipy.direction.closest_peak_direction_getter)": [[167, "dipy.direction.closest_peak_direction_getter.peak_directions"]], "peak_directions() (in module dipy.direction.peaks)": [[167, "dipy.direction.peaks.peak_directions"]], "peak_directions_nl() (in module dipy.direction.peaks)": [[167, "dipy.direction.peaks.peak_directions_nl"]], "peaks_from_model() (in module dipy.direction.peaks)": [[167, "dipy.direction.peaks.peaks_from_model"]], "random() (in module dipy.direction.probabilistic_direction_getter)": [[167, "dipy.direction.probabilistic_direction_getter.random"]], "reshape_peaks_for_visualization() (in module dipy.direction.peaks)": [[167, "dipy.direction.peaks.reshape_peaks_for_visualization"]], "dpy (class in dipy.io.dpy)": [[168, "dipy.io.dpy.Dpy"]], "nifti (dipy.io.stateful_tractogram.origin attribute)": [[168, "dipy.io.stateful_tractogram.Origin.NIFTI"]], "origin (class in dipy.io.stateful_tractogram)": [[168, "dipy.io.stateful_tractogram.Origin"]], "rasmm (dipy.io.stateful_tractogram.space attribute)": [[168, "dipy.io.stateful_tractogram.Space.RASMM"]], "space (class in dipy.io.stateful_tractogram)": [[168, "dipy.io.stateful_tractogram.Space"]], "statefultractogram (class in dipy.io.stateful_tractogram)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram"]], "trackvis (dipy.io.stateful_tractogram.origin attribute)": [[168, "dipy.io.stateful_tractogram.Origin.TRACKVIS"]], "vox (dipy.io.stateful_tractogram.space attribute)": [[168, "dipy.io.stateful_tractogram.Space.VOX"]], "voxmm (dipy.io.stateful_tractogram.space attribute)": [[168, "dipy.io.stateful_tractogram.Space.VOXMM"]], "__init__() (dipy.io.dpy.dpy method)": [[168, "dipy.io.dpy.Dpy.__init__"]], "__init__() (dipy.io.stateful_tractogram.origin method)": [[168, "dipy.io.stateful_tractogram.Origin.__init__"]], "__init__() (dipy.io.stateful_tractogram.space method)": [[168, "dipy.io.stateful_tractogram.Space.__init__"]], "__init__() (dipy.io.stateful_tractogram.statefultractogram method)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.__init__"]], "affine (dipy.io.stateful_tractogram.statefultractogram property)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.affine"]], "are_compatible() (dipy.io.stateful_tractogram.statefultractogram static method)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.are_compatible"]], "close() (dipy.io.dpy.dpy method)": [[168, "dipy.io.dpy.Dpy.close"]], "compute_bounding_box() (dipy.io.stateful_tractogram.statefultractogram method)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.compute_bounding_box"]], "create_nifti_header() (in module dipy.io.utils)": [[168, "dipy.io.utils.create_nifti_header"]], "create_tractogram_header() (in module dipy.io.utils)": [[168, "dipy.io.utils.create_tractogram_header"]], "data_per_point (dipy.io.stateful_tractogram.statefultractogram property)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.data_per_point"]], "data_per_streamline (dipy.io.stateful_tractogram.statefultractogram property)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.data_per_streamline"]], "decfa() (in module dipy.io.utils)": [[168, "dipy.io.utils.decfa"]], "decfa_to_float() (in module dipy.io.utils)": [[168, "dipy.io.utils.decfa_to_float"]], "dimensions (dipy.io.stateful_tractogram.statefultractogram property)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.dimensions"]], "dipy.io": [[168, "module-dipy.io"]], "dipy.io.dpy": [[168, "module-dipy.io.dpy"]], "dipy.io.gradients": [[168, "module-dipy.io.gradients"]], "dipy.io.image": [[168, "module-dipy.io.image"]], "dipy.io.peaks": [[168, "module-dipy.io.peaks"]], "dipy.io.pickles": [[168, "module-dipy.io.pickles"]], "dipy.io.stateful_tractogram": [[168, "module-dipy.io.stateful_tractogram"]], "dipy.io.streamline": [[168, "module-dipy.io.streamline"]], "dipy.io.surface": [[168, "module-dipy.io.surface"]], "dipy.io.utils": [[168, "module-dipy.io.utils"]], "dipy.io.vtk": [[168, "module-dipy.io.vtk"]], "dtype_dict (dipy.io.stateful_tractogram.statefultractogram property)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.dtype_dict"]], "from_sft() (dipy.io.stateful_tractogram.statefultractogram static method)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.from_sft"]], "get_data_per_point_keys() (dipy.io.stateful_tractogram.statefultractogram method)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.get_data_per_point_keys"]], "get_data_per_streamline_keys() (dipy.io.stateful_tractogram.statefultractogram method)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.get_data_per_streamline_keys"]], "get_reference_info() (in module dipy.io.utils)": [[168, "dipy.io.utils.get_reference_info"]], "get_streamlines_copy() (dipy.io.stateful_tractogram.statefultractogram method)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.get_streamlines_copy"]], "is_bbox_in_vox_valid() (dipy.io.stateful_tractogram.statefultractogram method)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.is_bbox_in_vox_valid"]], "is_header_compatible() (in module dipy.io.utils)": [[168, "dipy.io.utils.is_header_compatible"]], "is_reference_info_valid() (in module dipy.io.utils)": [[168, "dipy.io.utils.is_reference_info_valid"]], "load_dpy() (in module dipy.io.streamline)": [[168, "dipy.io.streamline.load_dpy"]], "load_fib() (in module dipy.io.streamline)": [[168, "dipy.io.streamline.load_fib"]], "load_generator() (in module dipy.io.streamline)": [[168, "dipy.io.streamline.load_generator"]], "load_gifti() (in module dipy.io.surface)": [[168, "dipy.io.surface.load_gifti"]], "load_nifti() (in module dipy.io.image)": [[168, "dipy.io.image.load_nifti"]], "load_nifti_data() (in module dipy.io.image)": [[168, "dipy.io.image.load_nifti_data"]], "load_peaks() (in module dipy.io.peaks)": [[168, "dipy.io.peaks.load_peaks"]], "load_pial() (in module dipy.io.surface)": [[168, "dipy.io.surface.load_pial"]], "load_pickle() (in module dipy.io.pickles)": [[168, "dipy.io.pickles.load_pickle"]], "load_polydata() (in module dipy.io.vtk)": [[168, "dipy.io.vtk.load_polydata"]], "load_tck() (in module dipy.io.streamline)": [[168, "dipy.io.streamline.load_tck"]], "load_tractogram() (in module dipy.io.streamline)": [[168, "dipy.io.streamline.load_tractogram"]], "load_trk() (in module dipy.io.streamline)": [[168, "dipy.io.streamline.load_trk"]], "load_trx() (in module dipy.io.streamline)": [[168, "dipy.io.streamline.load_trx"]], "load_vtk() (in module dipy.io.streamline)": [[168, "dipy.io.streamline.load_vtk"]], "load_vtk_streamlines() (in module dipy.io.vtk)": [[168, "dipy.io.vtk.load_vtk_streamlines"]], "load_vtp() (in module dipy.io.streamline)": [[168, "dipy.io.streamline.load_vtp"]], "logger() (in module dipy.io.stateful_tractogram)": [[168, "dipy.io.stateful_tractogram.logger"]], "make5d() (in module dipy.io.utils)": [[168, "dipy.io.utils.make5d"]], "nifti1_symmat() (in module dipy.io.utils)": [[168, "dipy.io.utils.nifti1_symmat"]], "origin (dipy.io.stateful_tractogram.statefultractogram property)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.origin"]], "peaks_to_niftis() (in module dipy.io.peaks)": [[168, "dipy.io.peaks.peaks_to_niftis"]], "read_bvals_bvecs() (in module dipy.io.gradients)": [[168, "dipy.io.gradients.read_bvals_bvecs"]], "read_img_arr_or_path() (in module dipy.io.utils)": [[168, "dipy.io.utils.read_img_arr_or_path"]], "read_track() (dipy.io.dpy.dpy method)": [[168, "dipy.io.dpy.Dpy.read_track"]], "read_tracks() (dipy.io.dpy.dpy method)": [[168, "dipy.io.dpy.Dpy.read_tracks"]], "read_tracksi() (dipy.io.dpy.dpy method)": [[168, "dipy.io.dpy.Dpy.read_tracksi"]], "remove_invalid_streamlines() (dipy.io.stateful_tractogram.statefultractogram method)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.remove_invalid_streamlines"]], "save_buan_profiles_hdf5() (in module dipy.io.utils)": [[168, "dipy.io.utils.save_buan_profiles_hdf5"]], "save_dpy() (in module dipy.io.streamline)": [[168, "dipy.io.streamline.save_dpy"]], "save_fib() (in module dipy.io.streamline)": [[168, "dipy.io.streamline.save_fib"]], "save_generator() (in module dipy.io.streamline)": [[168, "dipy.io.streamline.save_generator"]], "save_nifti() (in module dipy.io.image)": [[168, "dipy.io.image.save_nifti"]], "save_peaks() (in module dipy.io.peaks)": [[168, "dipy.io.peaks.save_peaks"]], "save_pickle() (in module dipy.io.pickles)": [[168, "dipy.io.pickles.save_pickle"]], "save_polydata() (in module dipy.io.vtk)": [[168, "dipy.io.vtk.save_polydata"]], "save_qa_metric() (in module dipy.io.image)": [[168, "dipy.io.image.save_qa_metric"]], "save_tck() (in module dipy.io.streamline)": [[168, "dipy.io.streamline.save_tck"]], "save_tractogram() (in module dipy.io.streamline)": [[168, "dipy.io.streamline.save_tractogram"]], "save_trk() (in module dipy.io.streamline)": [[168, "dipy.io.streamline.save_trk"]], "save_trx() (in module dipy.io.streamline)": [[168, "dipy.io.streamline.save_trx"]], "save_vtk() (in module dipy.io.streamline)": [[168, "dipy.io.streamline.save_vtk"]], "save_vtk_streamlines() (in module dipy.io.vtk)": [[168, "dipy.io.vtk.save_vtk_streamlines"]], "save_vtp() (in module dipy.io.streamline)": [[168, "dipy.io.streamline.save_vtp"]], "set_sft_logger_level() (in module dipy.io.stateful_tractogram)": [[168, "dipy.io.stateful_tractogram.set_sft_logger_level"]], "space (dipy.io.stateful_tractogram.statefultractogram property)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.space"]], "space_attributes (dipy.io.stateful_tractogram.statefultractogram property)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.space_attributes"]], "split_name_with_gz() (in module dipy.io.utils)": [[168, "dipy.io.utils.split_name_with_gz"]], "streamlines (dipy.io.stateful_tractogram.statefultractogram property)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.streamlines"]], "to_center() (dipy.io.stateful_tractogram.statefultractogram method)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.to_center"]], "to_corner() (dipy.io.stateful_tractogram.statefultractogram method)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.to_corner"]], "to_origin() (dipy.io.stateful_tractogram.statefultractogram method)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.to_origin"]], "to_rasmm() (dipy.io.stateful_tractogram.statefultractogram method)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.to_rasmm"]], "to_space() (dipy.io.stateful_tractogram.statefultractogram method)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.to_space"]], "to_vox() (dipy.io.stateful_tractogram.statefultractogram method)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.to_vox"]], "to_voxmm() (dipy.io.stateful_tractogram.statefultractogram method)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.to_voxmm"]], "version() (dipy.io.dpy.dpy method)": [[168, "dipy.io.dpy.Dpy.version"]], "voxel_order (dipy.io.stateful_tractogram.statefultractogram property)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.voxel_order"]], "voxel_sizes (dipy.io.stateful_tractogram.statefultractogram property)": [[168, "dipy.io.stateful_tractogram.StatefulTractogram.voxel_sizes"]], "write_track() (dipy.io.dpy.dpy method)": [[168, "dipy.io.dpy.Dpy.write_track"]], "write_tracks() (dipy.io.dpy.dpy method)": [[168, "dipy.io.dpy.Dpy.write_tracks"]], "block (class in dipy.nn.evac)": [[169, "dipy.nn.evac.Block"]], "channelsum (class in dipy.nn.evac)": [[169, "dipy.nn.evac.ChannelSum"]], "cnn1ddenoiser (class in dipy.nn.cnn_1d_denoising)": [[169, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser"]], "decoderblock (class in dipy.nn.deepn4)": [[169, "dipy.nn.deepn4.DecoderBlock"]], "decoderblock (class in dipy.nn.synb0)": [[169, "dipy.nn.synb0.DecoderBlock"]], "deepn4 (class in dipy.nn.deepn4)": [[169, "dipy.nn.deepn4.DeepN4"]], "evacplus (class in dipy.nn.evac)": [[169, "dipy.nn.evac.EVACPlus"]], "encoderblock (class in dipy.nn.deepn4)": [[169, "dipy.nn.deepn4.EncoderBlock"]], "encoderblock (class in dipy.nn.synb0)": [[169, "dipy.nn.synb0.EncoderBlock"]], "historesdnn (class in dipy.nn.histo_resdnn)": [[169, "dipy.nn.histo_resdnn.HistoResDNN"]], "multiplelayerpercepton (class in dipy.nn.model)": [[169, "dipy.nn.model.MultipleLayerPercepton"]], "singlelayerperceptron (class in dipy.nn.model)": [[169, "dipy.nn.model.SingleLayerPerceptron"]], "synb0 (class in dipy.nn.synb0)": [[169, "dipy.nn.synb0.Synb0"]], "unet3d() (in module dipy.nn.deepn4)": [[169, "dipy.nn.deepn4.UNet3D"]], "unet3d() (in module dipy.nn.synb0)": [[169, "dipy.nn.synb0.UNet3D"]], "__init__() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[169, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.__init__"]], "__init__() (dipy.nn.deepn4.decoderblock method)": [[169, "dipy.nn.deepn4.DecoderBlock.__init__"]], "__init__() (dipy.nn.deepn4.deepn4 method)": [[169, "dipy.nn.deepn4.DeepN4.__init__"]], "__init__() (dipy.nn.deepn4.encoderblock method)": [[169, "dipy.nn.deepn4.EncoderBlock.__init__"]], "__init__() (dipy.nn.evac.block method)": [[169, "dipy.nn.evac.Block.__init__"]], "__init__() (dipy.nn.evac.channelsum method)": [[169, "dipy.nn.evac.ChannelSum.__init__"]], "__init__() (dipy.nn.evac.evacplus method)": [[169, "dipy.nn.evac.EVACPlus.__init__"]], "__init__() (dipy.nn.histo_resdnn.historesdnn method)": [[169, "dipy.nn.histo_resdnn.HistoResDNN.__init__"]], "__init__() (dipy.nn.model.multiplelayerpercepton method)": [[169, "dipy.nn.model.MultipleLayerPercepton.__init__"]], "__init__() (dipy.nn.model.singlelayerperceptron method)": [[169, "dipy.nn.model.SingleLayerPerceptron.__init__"]], "__init__() (dipy.nn.synb0.decoderblock method)": [[169, "dipy.nn.synb0.DecoderBlock.__init__"]], "__init__() (dipy.nn.synb0.encoderblock method)": [[169, "dipy.nn.synb0.EncoderBlock.__init__"]], "__init__() (dipy.nn.synb0.synb0 method)": [[169, "dipy.nn.synb0.Synb0.__init__"]], "call() (dipy.nn.deepn4.decoderblock method)": [[169, "dipy.nn.deepn4.DecoderBlock.call"]], "call() (dipy.nn.deepn4.encoderblock method)": [[169, "dipy.nn.deepn4.EncoderBlock.call"]], "call() (dipy.nn.evac.block method)": [[169, "dipy.nn.evac.Block.call"]], "call() (dipy.nn.evac.channelsum method)": [[169, "dipy.nn.evac.ChannelSum.call"]], "call() (dipy.nn.synb0.decoderblock method)": [[169, "dipy.nn.synb0.DecoderBlock.call"]], "call() (dipy.nn.synb0.encoderblock method)": [[169, "dipy.nn.synb0.EncoderBlock.call"]], "compile() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[169, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.compile"]], "correct_minor_errors() (in module dipy.nn.utils)": [[169, "dipy.nn.utils.correct_minor_errors"]], "dipy.nn": [[169, "module-dipy.nn"]], "dipy.nn.cnn_1d_denoising": [[169, "module-dipy.nn.cnn_1d_denoising"]], "dipy.nn.deepn4": [[169, "module-dipy.nn.deepn4"]], "dipy.nn.evac": [[169, "module-dipy.nn.evac"]], "dipy.nn.histo_resdnn": [[169, "module-dipy.nn.histo_resdnn"]], "dipy.nn.model": [[169, "module-dipy.nn.model"]], "dipy.nn.synb0": [[169, "module-dipy.nn.synb0"]], "dipy.nn.utils": [[169, "module-dipy.nn.utils"]], "evaluate() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[169, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.evaluate"]], "evaluate() (dipy.nn.model.multiplelayerpercepton method)": [[169, "dipy.nn.model.MultipleLayerPercepton.evaluate"]], "evaluate() (dipy.nn.model.singlelayerperceptron method)": [[169, "dipy.nn.model.SingleLayerPerceptron.evaluate"]], "fetch_default_weights() (dipy.nn.deepn4.deepn4 method)": [[169, "dipy.nn.deepn4.DeepN4.fetch_default_weights"]], "fetch_default_weights() (dipy.nn.evac.evacplus method)": [[169, "dipy.nn.evac.EVACPlus.fetch_default_weights"]], "fetch_default_weights() (dipy.nn.histo_resdnn.historesdnn method)": [[169, "dipy.nn.histo_resdnn.HistoResDNN.fetch_default_weights"]], "fetch_default_weights() (dipy.nn.synb0.synb0 method)": [[169, "dipy.nn.synb0.Synb0.fetch_default_weights"]], "fit() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[169, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.fit"]], "fit() (dipy.nn.model.multiplelayerpercepton method)": [[169, "dipy.nn.model.MultipleLayerPercepton.fit"]], "fit() (dipy.nn.model.singlelayerperceptron method)": [[169, "dipy.nn.model.SingleLayerPerceptron.fit"]], "init_model() (in module dipy.nn.evac)": [[169, "dipy.nn.evac.init_model"]], "load_model_weights() (dipy.nn.deepn4.deepn4 method)": [[169, "dipy.nn.deepn4.DeepN4.load_model_weights"]], "load_model_weights() (dipy.nn.evac.evacplus method)": [[169, "dipy.nn.evac.EVACPlus.load_model_weights"]], "load_model_weights() (dipy.nn.histo_resdnn.historesdnn method)": [[169, "dipy.nn.histo_resdnn.HistoResDNN.load_model_weights"]], "load_model_weights() (dipy.nn.synb0.synb0 method)": [[169, "dipy.nn.synb0.Synb0.load_model_weights"]], "load_resample() (dipy.nn.deepn4.deepn4 method)": [[169, "dipy.nn.deepn4.DeepN4.load_resample"]], "load_weights() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[169, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.load_weights"]], "logger() (in module dipy.nn.deepn4)": [[169, "dipy.nn.deepn4.logger"]], "logger() (in module dipy.nn.evac)": [[169, "dipy.nn.evac.logger"]], "logger() (in module dipy.nn.histo_resdnn)": [[169, "dipy.nn.histo_resdnn.logger"]], "logger() (in module dipy.nn.synb0)": [[169, "dipy.nn.synb0.logger"]], "normalize() (in module dipy.nn.utils)": [[169, "dipy.nn.utils.normalize"]], "pad() (dipy.nn.deepn4.deepn4 method)": [[169, "dipy.nn.deepn4.DeepN4.pad"]], "predict() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[169, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.predict"]], "predict() (dipy.nn.deepn4.deepn4 method)": [[169, "dipy.nn.deepn4.DeepN4.predict"]], "predict() (dipy.nn.evac.evacplus method)": [[169, "dipy.nn.evac.EVACPlus.predict"]], "predict() (dipy.nn.histo_resdnn.historesdnn method)": [[169, "dipy.nn.histo_resdnn.HistoResDNN.predict"]], "predict() (dipy.nn.model.multiplelayerpercepton method)": [[169, "dipy.nn.model.MultipleLayerPercepton.predict"]], "predict() (dipy.nn.model.singlelayerperceptron method)": [[169, "dipy.nn.model.SingleLayerPerceptron.predict"]], "predict() (dipy.nn.synb0.synb0 method)": [[169, "dipy.nn.synb0.Synb0.predict"]], "prepare_img() (in module dipy.nn.evac)": [[169, "dipy.nn.evac.prepare_img"]], "recover_img() (in module dipy.nn.utils)": [[169, "dipy.nn.utils.recover_img"]], "save_weights() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[169, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.save_weights"]], "set_logger_level() (in module dipy.nn.utils)": [[169, "dipy.nn.utils.set_logger_level"]], "summary() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[169, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.summary"]], "summary() (dipy.nn.model.multiplelayerpercepton method)": [[169, "dipy.nn.model.MultipleLayerPercepton.summary"]], "summary() (dipy.nn.model.singlelayerperceptron method)": [[169, "dipy.nn.model.SingleLayerPerceptron.summary"]], "train_test_split() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[169, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.train_test_split"]], "transform_img() (in module dipy.nn.utils)": [[169, "dipy.nn.utils.transform_img"]], "unnormalize() (in module dipy.nn.utils)": [[169, "dipy.nn.utils.unnormalize"]], "axsymshresponse (class in dipy.reconst.csdeconv)": [[170, "dipy.reconst.csdeconv.AxSymShResponse"]], "cache (class in dipy.reconst.cache)": [[170, "dipy.reconst.cache.Cache"]], "callablearray (class in dipy.reconst.multi_voxel)": [[170, "dipy.reconst.multi_voxel.CallableArray"]], "constrainedsdtmodel (class in dipy.reconst.csdeconv)": [[170, "dipy.reconst.csdeconv.ConstrainedSDTModel"]], "constrainedsphericaldeconvmodel (class in dipy.reconst.csdeconv)": [[170, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel"]], "correlationtensorfit (class in dipy.reconst.cti)": [[170, "dipy.reconst.cti.CorrelationTensorFit"]], "correlationtensormodel (class in dipy.reconst.cti)": [[170, "dipy.reconst.cti.CorrelationTensorModel"]], "csaodfmodel (class in dipy.reconst.shm)": [[170, "dipy.reconst.shm.CsaOdfModel"]], "d (dipy.reconst.ivim.ivimfit property)": [[170, "dipy.reconst.ivim.IvimFit.D"]], "d_star (dipy.reconst.ivim.ivimfit property)": [[170, "dipy.reconst.ivim.IvimFit.D_star"]], "diffusionkurtosisfit (class in dipy.reconst.dki)": [[170, "dipy.reconst.dki.DiffusionKurtosisFit"]], "diffusionkurtosismodel (class in dipy.reconst.dki)": [[170, "dipy.reconst.dki.DiffusionKurtosisModel"]], "diffusionspectrumdeconvfit (class in dipy.reconst.dsi)": [[170, "dipy.reconst.dsi.DiffusionSpectrumDeconvFit"]], "diffusionspectrumdeconvmodel (class in dipy.reconst.dsi)": [[170, "dipy.reconst.dsi.DiffusionSpectrumDeconvModel"]], "diffusionspectrumfit (class in dipy.reconst.dsi)": [[170, "dipy.reconst.dsi.DiffusionSpectrumFit"]], "diffusionspectrummodel (class in dipy.reconst.dsi)": [[170, "dipy.reconst.dsi.DiffusionSpectrumModel"]], "eudxdirectiongetter (class in dipy.reconst.eudx_direction_getter)": [[170, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter"]], "exponentialisotropicfit (class in dipy.reconst.sfm)": [[170, "dipy.reconst.sfm.ExponentialIsotropicFit"]], "exponentialisotropicmodel (class in dipy.reconst.sfm)": [[170, "dipy.reconst.sfm.ExponentialIsotropicModel"]], "forecastfit (class in dipy.reconst.forecast)": [[170, "dipy.reconst.forecast.ForecastFit"]], "forecastmodel (class in dipy.reconst.forecast)": [[170, "dipy.reconst.forecast.ForecastModel"]], "freewatertensorfit (class in dipy.reconst.fwdti)": [[170, "dipy.reconst.fwdti.FreeWaterTensorFit"]], "freewatertensormodel (class in dipy.reconst.fwdti)": [[170, "dipy.reconst.fwdti.FreeWaterTensorModel"]], "gcv_cost_function() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.GCV_cost_function"]], "generalizedqsamplingfit (class in dipy.reconst.gqi)": [[170, "dipy.reconst.gqi.GeneralizedQSamplingFit"]], "generalizedqsamplingmodel (class in dipy.reconst.gqi)": [[170, "dipy.reconst.gqi.GeneralizedQSamplingModel"]], "h() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.H"]], "isotropicfit (class in dipy.reconst.sfm)": [[170, "dipy.reconst.sfm.IsotropicFit"]], "isotropicmodel (class in dipy.reconst.sfm)": [[170, "dipy.reconst.sfm.IsotropicModel"]], "ivimfit (class in dipy.reconst.ivim)": [[170, "dipy.reconst.ivim.IvimFit"]], "ivimmodeltrr (class in dipy.reconst.ivim)": [[170, "dipy.reconst.ivim.IvimModelTRR"]], "ivimmodelvp (class in dipy.reconst.ivim)": [[170, "dipy.reconst.ivim.IvimModelVP"]], "k_aniso (dipy.reconst.cti.correlationtensorfit property)": [[170, "dipy.reconst.cti.CorrelationTensorFit.K_aniso"]], "k_iso (dipy.reconst.cti.correlationtensorfit property)": [[170, "dipy.reconst.cti.CorrelationTensorFit.K_iso"]], "k_micro (dipy.reconst.cti.correlationtensorfit property)": [[170, "dipy.reconst.cti.CorrelationTensorFit.K_micro"]], "k_total() (dipy.reconst.cti.correlationtensorfit method)": [[170, "dipy.reconst.cti.CorrelationTensorFit.K_total"]], "kurtosismicrostructuralfit (class in dipy.reconst.dki_micro)": [[170, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit"]], "kurtosismicrostructuremodel (class in dipy.reconst.dki_micro)": [[170, "dipy.reconst.dki_micro.KurtosisMicrostructureModel"]], "lr_deconv() (in module dipy.reconst.dsi)": [[170, "dipy.reconst.dsi.LR_deconv"]], "msdeconvfit (class in dipy.reconst.mcsd)": [[170, "dipy.reconst.mcsd.MSDeconvFit"]], "mapmrifit (class in dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.MapmriFit"]], "mapmrimodel (class in dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.MapmriModel"]], "meandiffusionkurtosisfit (class in dipy.reconst.msdki)": [[170, "dipy.reconst.msdki.MeanDiffusionKurtosisFit"]], "meandiffusionkurtosismodel (class in dipy.reconst.msdki)": [[170, "dipy.reconst.msdki.MeanDiffusionKurtosisModel"]], "multishelldeconvmodel (class in dipy.reconst.mcsd)": [[170, "dipy.reconst.mcsd.MultiShellDeconvModel"]], "multishellresponse (class in dipy.reconst.mcsd)": [[170, "dipy.reconst.mcsd.MultiShellResponse"]], "multivoxelfit (class in dipy.reconst.multi_voxel)": [[170, "dipy.reconst.multi_voxel.MultiVoxelFit"]], "odffit (class in dipy.reconst.odf)": [[170, "dipy.reconst.odf.OdfFit"]], "odfmodel (class in dipy.reconst.odf)": [[170, "dipy.reconst.odf.OdfModel"]], "opdtmodel (class in dipy.reconst.shm)": [[170, "dipy.reconst.shm.OpdtModel"]], "qballbasemodel (class in dipy.reconst.shm)": [[170, "dipy.reconst.shm.QballBaseModel"]], "qballmodel (class in dipy.reconst.shm)": [[170, "dipy.reconst.shm.QballModel"]], "qpfitter (class in dipy.reconst.mcsd)": [[170, "dipy.reconst.mcsd.QpFitter"]], "qtdmrifit (class in dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.QtdmriFit"]], "qtdmrimodel (class in dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.QtdmriModel"]], "qtifit (class in dipy.reconst.qti)": [[170, "dipy.reconst.qti.QtiFit"]], "qtimodel (class in dipy.reconst.qti)": [[170, "dipy.reconst.qti.QtiModel"]], "reconstfit (class in dipy.reconst.base)": [[170, "dipy.reconst.base.ReconstFit"]], "reconstmodel (class in dipy.reconst.base)": [[170, "dipy.reconst.base.ReconstModel"]], "residualbootstrapwrapper (class in dipy.reconst.shm)": [[170, "dipy.reconst.shm.ResidualBootstrapWrapper"]], "rumbafit (class in dipy.reconst.rumba)": [[170, "dipy.reconst.rumba.RumbaFit"]], "rumbasdmodel (class in dipy.reconst.rumba)": [[170, "dipy.reconst.rumba.RumbaSDModel"]], "s0_hat (dipy.reconst.dti.tensorfit property)": [[170, "dipy.reconst.dti.TensorFit.S0_hat"]], "s0_hat (dipy.reconst.msdki.meandiffusionkurtosisfit property)": [[170, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.S0_hat"]], "s0_hat() (dipy.reconst.qti.qtifit method)": [[170, "dipy.reconst.qti.QtiFit.S0_hat"]], "s0_predicted (dipy.reconst.ivim.ivimfit property)": [[170, "dipy.reconst.ivim.IvimFit.S0_predicted"]], "shorefit (class in dipy.reconst.shore)": [[170, "dipy.reconst.shore.ShoreFit"]], "shoremodel (class in dipy.reconst.shore)": [[170, "dipy.reconst.shore.ShoreModel"]], "sparsefasciclefit (class in dipy.reconst.sfm)": [[170, "dipy.reconst.sfm.SparseFascicleFit"]], "sparsefasciclemodel (class in dipy.reconst.sfm)": [[170, "dipy.reconst.sfm.SparseFascicleModel"]], "sphharmfit (class in dipy.reconst.shm)": [[170, "dipy.reconst.shm.SphHarmFit"]], "sphharmmodel (class in dipy.reconst.shm)": [[170, "dipy.reconst.shm.SphHarmModel"]], "tensorfit (class in dipy.reconst.dti)": [[170, "dipy.reconst.dti.TensorFit"]], "tensormodel (class in dipy.reconst.dti)": [[170, "dipy.reconst.dti.TensorModel"]], "wcons() (in module dipy.reconst.dki)": [[170, "dipy.reconst.dki.Wcons"]], "wrotate() (in module dipy.reconst.dki)": [[170, "dipy.reconst.dki.Wrotate"]], "wrotate_element() (in module dipy.reconst.dki)": [[170, "dipy.reconst.dki.Wrotate_element"]], "__init__() (dipy.reconst.base.reconstfit method)": [[170, "dipy.reconst.base.ReconstFit.__init__"]], "__init__() (dipy.reconst.base.reconstmodel method)": [[170, "dipy.reconst.base.ReconstModel.__init__"]], "__init__() (dipy.reconst.cache.cache method)": [[170, "dipy.reconst.cache.Cache.__init__"]], "__init__() (dipy.reconst.csdeconv.axsymshresponse method)": [[170, "dipy.reconst.csdeconv.AxSymShResponse.__init__"]], "__init__() (dipy.reconst.csdeconv.constrainedsdtmodel method)": [[170, "dipy.reconst.csdeconv.ConstrainedSDTModel.__init__"]], "__init__() (dipy.reconst.csdeconv.constrainedsphericaldeconvmodel method)": [[170, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.__init__"]], "__init__() (dipy.reconst.cti.correlationtensorfit method)": [[170, "dipy.reconst.cti.CorrelationTensorFit.__init__"]], "__init__() (dipy.reconst.cti.correlationtensormodel method)": [[170, "dipy.reconst.cti.CorrelationTensorModel.__init__"]], "__init__() (dipy.reconst.dki.diffusionkurtosisfit method)": [[170, "dipy.reconst.dki.DiffusionKurtosisFit.__init__"]], "__init__() (dipy.reconst.dki.diffusionkurtosismodel method)": [[170, "dipy.reconst.dki.DiffusionKurtosisModel.__init__"]], "__init__() (dipy.reconst.dki_micro.kurtosismicrostructuralfit method)": [[170, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.__init__"]], "__init__() (dipy.reconst.dki_micro.kurtosismicrostructuremodel method)": [[170, "dipy.reconst.dki_micro.KurtosisMicrostructureModel.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrumdeconvfit method)": [[170, "dipy.reconst.dsi.DiffusionSpectrumDeconvFit.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrumdeconvmodel method)": [[170, "dipy.reconst.dsi.DiffusionSpectrumDeconvModel.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrumfit method)": [[170, "dipy.reconst.dsi.DiffusionSpectrumFit.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrummodel method)": [[170, "dipy.reconst.dsi.DiffusionSpectrumModel.__init__"]], "__init__() (dipy.reconst.dti.tensorfit method)": [[170, "dipy.reconst.dti.TensorFit.__init__"]], "__init__() (dipy.reconst.dti.tensormodel method)": [[170, "dipy.reconst.dti.TensorModel.__init__"]], "__init__() (dipy.reconst.eudx_direction_getter.eudxdirectiongetter method)": [[170, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.__init__"]], "__init__() (dipy.reconst.forecast.forecastfit method)": [[170, "dipy.reconst.forecast.ForecastFit.__init__"]], "__init__() (dipy.reconst.forecast.forecastmodel method)": [[170, "dipy.reconst.forecast.ForecastModel.__init__"]], "__init__() (dipy.reconst.fwdti.freewatertensorfit method)": [[170, "dipy.reconst.fwdti.FreeWaterTensorFit.__init__"]], "__init__() (dipy.reconst.fwdti.freewatertensormodel method)": [[170, "dipy.reconst.fwdti.FreeWaterTensorModel.__init__"]], "__init__() (dipy.reconst.gqi.generalizedqsamplingfit method)": [[170, "dipy.reconst.gqi.GeneralizedQSamplingFit.__init__"]], "__init__() (dipy.reconst.gqi.generalizedqsamplingmodel method)": [[170, "dipy.reconst.gqi.GeneralizedQSamplingModel.__init__"]], "__init__() (dipy.reconst.ivim.ivimfit method)": [[170, "dipy.reconst.ivim.IvimFit.__init__"]], "__init__() (dipy.reconst.ivim.ivimmodeltrr method)": [[170, "dipy.reconst.ivim.IvimModelTRR.__init__"]], "__init__() (dipy.reconst.ivim.ivimmodelvp method)": [[170, "dipy.reconst.ivim.IvimModelVP.__init__"]], "__init__() (dipy.reconst.mapmri.mapmrifit method)": [[170, "dipy.reconst.mapmri.MapmriFit.__init__"]], "__init__() (dipy.reconst.mapmri.mapmrimodel method)": [[170, "dipy.reconst.mapmri.MapmriModel.__init__"]], "__init__() (dipy.reconst.mcsd.msdeconvfit method)": [[170, "dipy.reconst.mcsd.MSDeconvFit.__init__"]], "__init__() (dipy.reconst.mcsd.multishelldeconvmodel method)": [[170, "dipy.reconst.mcsd.MultiShellDeconvModel.__init__"]], "__init__() (dipy.reconst.mcsd.multishellresponse method)": [[170, "dipy.reconst.mcsd.MultiShellResponse.__init__"]], "__init__() (dipy.reconst.mcsd.qpfitter method)": [[170, "dipy.reconst.mcsd.QpFitter.__init__"]], "__init__() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[170, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.__init__"]], "__init__() (dipy.reconst.msdki.meandiffusionkurtosismodel method)": [[170, "dipy.reconst.msdki.MeanDiffusionKurtosisModel.__init__"]], "__init__() (dipy.reconst.multi_voxel.callablearray method)": [[170, "dipy.reconst.multi_voxel.CallableArray.__init__"]], "__init__() (dipy.reconst.multi_voxel.multivoxelfit method)": [[170, "dipy.reconst.multi_voxel.MultiVoxelFit.__init__"]], "__init__() (dipy.reconst.odf.odffit method)": [[170, "dipy.reconst.odf.OdfFit.__init__"]], "__init__() (dipy.reconst.odf.odfmodel method)": [[170, "dipy.reconst.odf.OdfModel.__init__"]], "__init__() (dipy.reconst.qtdmri.qtdmrifit method)": [[170, "dipy.reconst.qtdmri.QtdmriFit.__init__"]], "__init__() (dipy.reconst.qtdmri.qtdmrimodel method)": [[170, "dipy.reconst.qtdmri.QtdmriModel.__init__"]], "__init__() (dipy.reconst.qti.qtifit method)": [[170, "dipy.reconst.qti.QtiFit.__init__"]], "__init__() (dipy.reconst.qti.qtimodel method)": [[170, "dipy.reconst.qti.QtiModel.__init__"]], "__init__() (dipy.reconst.rumba.rumbafit method)": [[170, "dipy.reconst.rumba.RumbaFit.__init__"]], "__init__() (dipy.reconst.rumba.rumbasdmodel method)": [[170, "dipy.reconst.rumba.RumbaSDModel.__init__"]], "__init__() (dipy.reconst.sfm.exponentialisotropicfit method)": [[170, "dipy.reconst.sfm.ExponentialIsotropicFit.__init__"]], "__init__() (dipy.reconst.sfm.exponentialisotropicmodel method)": [[170, "dipy.reconst.sfm.ExponentialIsotropicModel.__init__"]], "__init__() (dipy.reconst.sfm.isotropicfit method)": [[170, "dipy.reconst.sfm.IsotropicFit.__init__"]], "__init__() (dipy.reconst.sfm.isotropicmodel method)": [[170, "dipy.reconst.sfm.IsotropicModel.__init__"]], "__init__() (dipy.reconst.sfm.sparsefasciclefit method)": [[170, "dipy.reconst.sfm.SparseFascicleFit.__init__"]], "__init__() (dipy.reconst.sfm.sparsefasciclemodel method)": [[170, "dipy.reconst.sfm.SparseFascicleModel.__init__"]], "__init__() (dipy.reconst.shm.csaodfmodel method)": [[170, "dipy.reconst.shm.CsaOdfModel.__init__"]], "__init__() (dipy.reconst.shm.opdtmodel method)": [[170, "dipy.reconst.shm.OpdtModel.__init__"]], "__init__() (dipy.reconst.shm.qballbasemodel method)": [[170, "dipy.reconst.shm.QballBaseModel.__init__"]], "__init__() (dipy.reconst.shm.qballmodel method)": [[170, "dipy.reconst.shm.QballModel.__init__"]], "__init__() (dipy.reconst.shm.residualbootstrapwrapper method)": [[170, "dipy.reconst.shm.ResidualBootstrapWrapper.__init__"]], "__init__() (dipy.reconst.shm.sphharmfit method)": [[170, "dipy.reconst.shm.SphHarmFit.__init__"]], "__init__() (dipy.reconst.shm.sphharmmodel method)": [[170, "dipy.reconst.shm.SphHarmModel.__init__"]], "__init__() (dipy.reconst.shore.shorefit method)": [[170, "dipy.reconst.shore.ShoreFit.__init__"]], "__init__() (dipy.reconst.shore.shoremodel method)": [[170, "dipy.reconst.shore.ShoreModel.__init__"]], "_lt_cols() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti._lt_cols"]], "_lt_indices() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti._lt_indices"]], "_lt_rows() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti._lt_rows"]], "ad() (dipy.reconst.dti.tensorfit method)": [[170, "dipy.reconst.dti.TensorFit.ad"]], "adc() (dipy.reconst.dti.tensorfit method)": [[170, "dipy.reconst.dti.TensorFit.adc"]], "adj_to_countarrs() (in module dipy.reconst.recspeed)": [[170, "dipy.reconst.recspeed.adj_to_countarrs"]], "ak() (dipy.reconst.dki.diffusionkurtosisfit method)": [[170, "dipy.reconst.dki.DiffusionKurtosisFit.ak"]], "akc() (dipy.reconst.dki.diffusionkurtosisfit method)": [[170, "dipy.reconst.dki.DiffusionKurtosisFit.akc"]], "all_shm_coeff (dipy.reconst.mcsd.msdeconvfit property)": [[170, "dipy.reconst.mcsd.MSDeconvFit.all_shm_coeff"]], "ang_thr (dipy.reconst.eudx_direction_getter.eudxdirectiongetter attribute)": [[170, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.ang_thr"]], "angular_basis_eap_opt() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.angular_basis_EAP_opt"]], "angular_basis_opt() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.angular_basis_opt"]], "anisotropic_power() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.anisotropic_power"]], "apparent_diffusion_coef() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.apparent_diffusion_coef"]], "apparent_kurtosis_coef() (in module dipy.reconst.dki)": [[170, "dipy.reconst.dki.apparent_kurtosis_coef"]], "argmax_from_adj() (in module dipy.reconst.recspeed)": [[170, "dipy.reconst.recspeed.argmax_from_adj"]], "argmax_from_countarrs() (in module dipy.reconst.recspeed)": [[170, "dipy.reconst.recspeed.argmax_from_countarrs"]], "auto_response() (in module dipy.reconst.csdeconv)": [[170, "dipy.reconst.csdeconv.auto_response"]], "auto_response_msmt() (in module dipy.reconst.mcsd)": [[170, "dipy.reconst.mcsd.auto_response_msmt"]], "auto_response_ssst() (in module dipy.reconst.csdeconv)": [[170, "dipy.reconst.csdeconv.auto_response_ssst"]], "awf (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[170, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.awf"]], "awf_from_msk() (in module dipy.reconst.msdki)": [[170, "dipy.reconst.msdki.awf_from_msk"]], "axial_diffusivity() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.axial_diffusivity"]], "axial_kurtosis() (in module dipy.reconst.dki)": [[170, "dipy.reconst.dki.axial_kurtosis"]], "axonal_diffusivity (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[170, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.axonal_diffusivity"]], "axonal_water_fraction() (in module dipy.reconst.dki_micro)": [[170, "dipy.reconst.dki_micro.axonal_water_fraction"]], "b_mat() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.b_mat"]], "b_mat_isotropic() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.b_mat_isotropic"]], "basis() (dipy.reconst.csdeconv.axsymshresponse method)": [[170, "dipy.reconst.csdeconv.AxSymShResponse.basis"]], "binomialfloat() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.binomialfloat"]], "bootstrap_data_array() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.bootstrap_data_array"]], "bootstrap_data_voxel() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.bootstrap_data_voxel"]], "c_c() (dipy.reconst.qti.qtifit method)": [[170, "dipy.reconst.qti.QtiFit.c_c"]], "c_m() (dipy.reconst.qti.qtifit method)": [[170, "dipy.reconst.qti.QtiFit.c_m"]], "c_md() (dipy.reconst.qti.qtifit method)": [[170, "dipy.reconst.qti.QtiFit.c_md"]], "c_mu() (dipy.reconst.qti.qtifit method)": [[170, "dipy.reconst.qti.QtiFit.c_mu"]], "cache_clear() (dipy.reconst.cache.cache method)": [[170, "dipy.reconst.cache.Cache.cache_clear"]], "cache_get() (dipy.reconst.cache.cache method)": [[170, "dipy.reconst.cache.Cache.cache_get"]], "cache_set() (dipy.reconst.cache.cache method)": [[170, "dipy.reconst.cache.Cache.cache_set"]], "calculate_max_order() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.calculate_max_order"]], "carlson_rd() (in module dipy.reconst.dki)": [[170, "dipy.reconst.dki.carlson_rd"]], "carlson_rf() (in module dipy.reconst.dki)": [[170, "dipy.reconst.dki.carlson_rf"]], "cholesky_to_lower_triangular() (in module dipy.reconst.fwdti)": [[170, "dipy.reconst.fwdti.cholesky_to_lower_triangular"]], "cls_fit_dki() (in module dipy.reconst.dki)": [[170, "dipy.reconst.dki.cls_fit_dki"]], "coeff_of_determination() (in module dipy.reconst.cross_validation)": [[170, "dipy.reconst.cross_validation.coeff_of_determination"]], "color_fa() (dipy.reconst.dti.tensorfit method)": [[170, "dipy.reconst.dti.TensorFit.color_fa"]], "color_fa() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.color_fa"]], "combined_odf_iso() (dipy.reconst.rumba.rumbafit method)": [[170, "dipy.reconst.rumba.RumbaFit.combined_odf_iso"]], "convert_sh_descoteaux_tournier() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.convert_sh_descoteaux_tournier"]], "convert_sh_from_legacy() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.convert_sh_from_legacy"]], "convert_sh_to_full_basis() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.convert_sh_to_full_basis"]], "convert_sh_to_legacy() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.convert_sh_to_legacy"]], "convert_tensors() (in module dipy.reconst.utils)": [[170, "dipy.reconst.utils.convert_tensors"]], "create_qspace() (in module dipy.reconst.dsi)": [[170, "dipy.reconst.dsi.create_qspace"]], "create_qtable() (in module dipy.reconst.dsi)": [[170, "dipy.reconst.dsi.create_qtable"]], "create_rspace() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.create_rspace"]], "create_rspace() (in module dipy.reconst.shore)": [[170, "dipy.reconst.shore.create_rspace"]], "create_rt_space_grid() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.create_rt_space_grid"]], "csdeconv() (in module dipy.reconst.csdeconv)": [[170, "dipy.reconst.csdeconv.csdeconv"]], "ct (dipy.reconst.cti.correlationtensorfit property)": [[170, "dipy.reconst.cti.CorrelationTensorFit.ct"]], "cti_design_matrix() (in module dipy.reconst.utils)": [[170, "dipy.reconst.utils.cti_design_matrix"]], "cti_prediction() (in module dipy.reconst.cti)": [[170, "dipy.reconst.cti.cti_prediction"]], "cvx_fit() (dipy.reconst.ivim.ivimmodelvp method)": [[170, "dipy.reconst.ivim.IvimModelVP.cvx_fit"]], "cvxpy_1x21_to_6x6() (in module dipy.reconst.qti)": [[170, "dipy.reconst.qti.cvxpy_1x21_to_6x6"]], "cvxpy_1x6_to_3x3() (in module dipy.reconst.qti)": [[170, "dipy.reconst.qti.cvxpy_1x6_to_3x3"]], "d_sq() (dipy.reconst.qti.qtifit method)": [[170, "dipy.reconst.qti.QtiFit.d_sq"]], "decompose_tensor() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.decompose_tensor"]], "delta() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.delta"]], "design_matrix() (dipy.reconst.sfm.sparsefasciclemodel method)": [[170, "dipy.reconst.sfm.SparseFascicleModel.design_matrix"]], "design_matrix() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.design_matrix"]], "design_matrix() (in module dipy.reconst.msdki)": [[170, "dipy.reconst.msdki.design_matrix"]], "design_matrix() (in module dipy.reconst.qti)": [[170, "dipy.reconst.qti.design_matrix"]], "design_matrix_spatial() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.design_matrix_spatial"]], "determinant() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.determinant"]], "deviatoric() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.deviatoric"]], "diffusion_components() (in module dipy.reconst.dki_micro)": [[170, "dipy.reconst.dki_micro.diffusion_components"]], "dipy.reconst": [[170, "module-dipy.reconst"]], "dipy.reconst.base": [[170, "module-dipy.reconst.base"]], "dipy.reconst.cache": [[170, "module-dipy.reconst.cache"]], "dipy.reconst.cross_validation": [[170, "module-dipy.reconst.cross_validation"]], "dipy.reconst.csdeconv": [[170, "module-dipy.reconst.csdeconv"]], "dipy.reconst.cti": [[170, "module-dipy.reconst.cti"]], "dipy.reconst.dki": [[170, "module-dipy.reconst.dki"]], "dipy.reconst.dki_micro": [[170, "module-dipy.reconst.dki_micro"]], "dipy.reconst.dsi": [[170, "module-dipy.reconst.dsi"]], "dipy.reconst.dti": [[170, "module-dipy.reconst.dti"]], "dipy.reconst.eudx_direction_getter": [[170, "module-dipy.reconst.eudx_direction_getter"]], "dipy.reconst.forecast": [[170, "module-dipy.reconst.forecast"]], "dipy.reconst.fwdti": [[170, "module-dipy.reconst.fwdti"]], "dipy.reconst.gqi": [[170, "module-dipy.reconst.gqi"]], "dipy.reconst.ivim": [[170, "module-dipy.reconst.ivim"]], "dipy.reconst.mapmri": [[170, "module-dipy.reconst.mapmri"]], "dipy.reconst.mcsd": [[170, "module-dipy.reconst.mcsd"]], "dipy.reconst.msdki": [[170, "module-dipy.reconst.msdki"]], "dipy.reconst.multi_voxel": [[170, "module-dipy.reconst.multi_voxel"]], "dipy.reconst.odf": [[170, "module-dipy.reconst.odf"]], "dipy.reconst.qtdmri": [[170, "module-dipy.reconst.qtdmri"]], "dipy.reconst.qti": [[170, "module-dipy.reconst.qti"]], "dipy.reconst.quick_squash": [[170, "module-dipy.reconst.quick_squash"]], "dipy.reconst.recspeed": [[170, "module-dipy.reconst.recspeed"]], "dipy.reconst.rumba": [[170, "module-dipy.reconst.rumba"]], "dipy.reconst.sfm": [[170, "module-dipy.reconst.sfm"]], "dipy.reconst.shm": [[170, "module-dipy.reconst.shm"]], "dipy.reconst.shore": [[170, "module-dipy.reconst.shore"]], "dipy.reconst.utils": [[170, "module-dipy.reconst.utils"]], "dipy.reconst.vec_val_sum": [[170, "module-dipy.reconst.vec_val_sum"]], "directional_diffusion() (in module dipy.reconst.dki)": [[170, "dipy.reconst.dki.directional_diffusion"]], "directional_diffusion_variance() (in module dipy.reconst.dki)": [[170, "dipy.reconst.dki.directional_diffusion_variance"]], "directional_kurtosis() (in module dipy.reconst.dki)": [[170, "dipy.reconst.dki.directional_kurtosis"]], "directions (dipy.reconst.dti.tensorfit property)": [[170, "dipy.reconst.dti.TensorFit.directions"]], "dki_design_matrix() (in module dipy.reconst.utils)": [[170, "dipy.reconst.utils.dki_design_matrix"]], "dki_prediction() (in module dipy.reconst.dki)": [[170, "dipy.reconst.dki.dki_prediction"]], "dkimicro_prediction() (in module dipy.reconst.dki_micro)": [[170, "dipy.reconst.dki_micro.dkimicro_prediction"]], "dpar (dipy.reconst.forecast.forecastfit property)": [[170, "dipy.reconst.forecast.ForecastFit.dpar"]], "dperp (dipy.reconst.forecast.forecastfit property)": [[170, "dipy.reconst.forecast.ForecastFit.dperp"]], "dtd_covariance() (in module dipy.reconst.qti)": [[170, "dipy.reconst.qti.dtd_covariance"]], "eig_from_lo_tri() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.eig_from_lo_tri"]], "elastic_crossvalidation() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.elastic_crossvalidation"]], "equatorial_maximum() (in module dipy.reconst.gqi)": [[170, "dipy.reconst.gqi.equatorial_maximum"]], "equatorial_zone_vertices() (in module dipy.reconst.gqi)": [[170, "dipy.reconst.gqi.equatorial_zone_vertices"]], "estimate_f_d_star() (dipy.reconst.ivim.ivimmodeltrr method)": [[170, "dipy.reconst.ivim.IvimModelTRR.estimate_f_D_star"]], "estimate_linear_fit() (dipy.reconst.ivim.ivimmodeltrr method)": [[170, "dipy.reconst.ivim.IvimModelTRR.estimate_linear_fit"]], "estimate_response() (in module dipy.reconst.csdeconv)": [[170, "dipy.reconst.csdeconv.estimate_response"]], "evals (dipy.reconst.dti.tensorfit property)": [[170, "dipy.reconst.dti.TensorFit.evals"]], "evecs (dipy.reconst.dti.tensorfit property)": [[170, "dipy.reconst.dti.TensorFit.evecs"]], "f (dipy.reconst.fwdti.freewatertensorfit property)": [[170, "dipy.reconst.fwdti.FreeWaterTensorFit.f"]], "f_d_star_error() (in module dipy.reconst.ivim)": [[170, "dipy.reconst.ivim.f_D_star_error"]], "f_d_star_prediction() (in module dipy.reconst.ivim)": [[170, "dipy.reconst.ivim.f_D_star_prediction"]], "f_csf() (dipy.reconst.rumba.rumbafit method)": [[170, "dipy.reconst.rumba.RumbaFit.f_csf"]], "f_gm() (dipy.reconst.rumba.rumbafit method)": [[170, "dipy.reconst.rumba.RumbaFit.f_gm"]], "f_iso() (dipy.reconst.rumba.rumbafit method)": [[170, "dipy.reconst.rumba.RumbaFit.f_iso"]], "f_wm() (dipy.reconst.rumba.rumbafit method)": [[170, "dipy.reconst.rumba.RumbaFit.f_wm"]], "fa() (dipy.reconst.dti.tensorfit method)": [[170, "dipy.reconst.dti.TensorFit.fa"]], "fa() (dipy.reconst.qti.qtifit method)": [[170, "dipy.reconst.qti.QtiFit.fa"]], "fa_trace_to_lambdas() (in module dipy.reconst.csdeconv)": [[170, "dipy.reconst.csdeconv.fa_trace_to_lambdas"]], "find_signal_means() (in module dipy.reconst.forecast)": [[170, "dipy.reconst.forecast.find_signal_means"]], "fit() (dipy.reconst.base.reconstmodel method)": [[170, "dipy.reconst.base.ReconstModel.fit"]], "fit() (dipy.reconst.csdeconv.constrainedsdtmodel method)": [[170, "dipy.reconst.csdeconv.ConstrainedSDTModel.fit"]], "fit() (dipy.reconst.csdeconv.constrainedsphericaldeconvmodel method)": [[170, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.fit"]], "fit() (dipy.reconst.cti.correlationtensormodel method)": [[170, "dipy.reconst.cti.CorrelationTensorModel.fit"]], "fit() (dipy.reconst.dki.diffusionkurtosismodel method)": [[170, "dipy.reconst.dki.DiffusionKurtosisModel.fit"]], "fit() (dipy.reconst.dki_micro.kurtosismicrostructuremodel method)": [[170, "dipy.reconst.dki_micro.KurtosisMicrostructureModel.fit"]], "fit() (dipy.reconst.dsi.diffusionspectrumdeconvmodel method)": [[170, "dipy.reconst.dsi.DiffusionSpectrumDeconvModel.fit"]], "fit() (dipy.reconst.dsi.diffusionspectrummodel method)": [[170, "dipy.reconst.dsi.DiffusionSpectrumModel.fit"]], "fit() (dipy.reconst.dti.tensormodel method)": [[170, "dipy.reconst.dti.TensorModel.fit"]], "fit() (dipy.reconst.forecast.forecastmodel method)": [[170, "dipy.reconst.forecast.ForecastModel.fit"]], "fit() (dipy.reconst.fwdti.freewatertensormodel method)": [[170, "dipy.reconst.fwdti.FreeWaterTensorModel.fit"]], "fit() (dipy.reconst.gqi.generalizedqsamplingmodel method)": [[170, "dipy.reconst.gqi.GeneralizedQSamplingModel.fit"]], "fit() (dipy.reconst.ivim.ivimmodeltrr method)": [[170, "dipy.reconst.ivim.IvimModelTRR.fit"]], "fit() (dipy.reconst.ivim.ivimmodelvp method)": [[170, "dipy.reconst.ivim.IvimModelVP.fit"]], "fit() (dipy.reconst.mapmri.mapmrimodel method)": [[170, "dipy.reconst.mapmri.MapmriModel.fit"]], "fit() (dipy.reconst.mcsd.multishelldeconvmodel method)": [[170, "dipy.reconst.mcsd.MultiShellDeconvModel.fit"]], "fit() (dipy.reconst.msdki.meandiffusionkurtosismodel method)": [[170, "dipy.reconst.msdki.MeanDiffusionKurtosisModel.fit"]], "fit() (dipy.reconst.odf.odfmodel method)": [[170, "dipy.reconst.odf.OdfModel.fit"]], "fit() (dipy.reconst.qtdmri.qtdmrimodel method)": [[170, "dipy.reconst.qtdmri.QtdmriModel.fit"]], "fit() (dipy.reconst.qti.qtimodel method)": [[170, "dipy.reconst.qti.QtiModel.fit"]], "fit() (dipy.reconst.sfm.exponentialisotropicmodel method)": [[170, "dipy.reconst.sfm.ExponentialIsotropicModel.fit"]], "fit() (dipy.reconst.sfm.isotropicmodel method)": [[170, "dipy.reconst.sfm.IsotropicModel.fit"]], "fit() (dipy.reconst.sfm.sparsefasciclemodel method)": [[170, "dipy.reconst.sfm.SparseFascicleModel.fit"]], "fit() (dipy.reconst.shm.qballbasemodel method)": [[170, "dipy.reconst.shm.QballBaseModel.fit"]], "fit() (dipy.reconst.shore.shoremodel method)": [[170, "dipy.reconst.shore.ShoreModel.fit"]], "fitted_signal() (dipy.reconst.mapmri.mapmrifit method)": [[170, "dipy.reconst.mapmri.MapmriFit.fitted_signal"]], "fitted_signal() (dipy.reconst.qtdmri.qtdmrifit method)": [[170, "dipy.reconst.qtdmri.QtdmriFit.fitted_signal"]], "fitted_signal() (dipy.reconst.shore.shorefit method)": [[170, "dipy.reconst.shore.ShoreFit.fitted_signal"]], "forecast_error_func() (in module dipy.reconst.forecast)": [[170, "dipy.reconst.forecast.forecast_error_func"]], "forecast_matrix() (in module dipy.reconst.forecast)": [[170, "dipy.reconst.forecast.forecast_matrix"]], "forward_sdeconv_mat() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.forward_sdeconv_mat"]], "forward_sdt_deconv_mat() (in module dipy.reconst.csdeconv)": [[170, "dipy.reconst.csdeconv.forward_sdt_deconv_mat"]], "fractional_anisotropy() (dipy.reconst.forecast.forecastfit method)": [[170, "dipy.reconst.forecast.ForecastFit.fractional_anisotropy"]], "fractional_anisotropy() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.fractional_anisotropy"]], "from_21x1_to_6x6() (in module dipy.reconst.qti)": [[170, "dipy.reconst.qti.from_21x1_to_6x6"]], "from_3x3_to_6x1() (in module dipy.reconst.qti)": [[170, "dipy.reconst.qti.from_3x3_to_6x1"]], "from_6x1_to_3x3() (in module dipy.reconst.qti)": [[170, "dipy.reconst.qti.from_6x1_to_3x3"]], "from_6x6_to_21x1() (in module dipy.reconst.qti)": [[170, "dipy.reconst.qti.from_6x6_to_21x1"]], "from_lower_triangular() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.from_lower_triangular"]], "from_qte_to_cti() (in module dipy.reconst.cti)": [[170, "dipy.reconst.cti.from_qte_to_cti"]], "fwdti_prediction() (in module dipy.reconst.fwdti)": [[170, "dipy.reconst.fwdti.fwdti_prediction"]], "ga() (dipy.reconst.dti.tensorfit method)": [[170, "dipy.reconst.dti.TensorFit.ga"]], "gcv_cost_function() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.gcv_cost_function"]], "gen_psf() (in module dipy.reconst.dsi)": [[170, "dipy.reconst.dsi.gen_PSF"]], "gen_dirac() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.gen_dirac"]], "generalized_crossvalidation() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.generalized_crossvalidation"]], "generalized_crossvalidation() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.generalized_crossvalidation"]], "generalized_crossvalidation_array() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.generalized_crossvalidation_array"]], "generate_kernel() (in module dipy.reconst.rumba)": [[170, "dipy.reconst.rumba.generate_kernel"]], "geodesic_anisotropy() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.geodesic_anisotropy"]], "gfa() (dipy.reconst.shm.sphharmfit method)": [[170, "dipy.reconst.shm.SphHarmFit.gfa"]], "gfa() (in module dipy.reconst.odf)": [[170, "dipy.reconst.odf.gfa"]], "half_to_full_qspace() (in module dipy.reconst.dsi)": [[170, "dipy.reconst.dsi.half_to_full_qspace"]], "hanning_filter() (in module dipy.reconst.dsi)": [[170, "dipy.reconst.dsi.hanning_filter"]], "hat() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.hat"]], "hindered_ad (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[170, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_ad"]], "hindered_evals (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[170, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_evals"]], "hindered_rd (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[170, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_rd"]], "initial_direction() (dipy.reconst.eudx_direction_getter.eudxdirectiongetter method)": [[170, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.initial_direction"]], "iso (dipy.reconst.mcsd.multishellresponse property)": [[170, "dipy.reconst.mcsd.MultiShellResponse.iso"]], "isotropic() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.isotropic"]], "isotropic_scale_factor() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.isotropic_scale_factor"]], "iter_fit_tensor() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.iter_fit_tensor"]], "ivim_mix_cost_one() (dipy.reconst.ivim.ivimmodelvp method)": [[170, "dipy.reconst.ivim.IvimModelVP.ivim_mix_cost_one"]], "ivim_model_selector() (in module dipy.reconst.ivim)": [[170, "dipy.reconst.ivim.ivim_model_selector"]], "ivim_prediction() (in module dipy.reconst.ivim)": [[170, "dipy.reconst.ivim.ivim_prediction"]], "k_bulk() (dipy.reconst.qti.qtifit method)": [[170, "dipy.reconst.qti.QtiFit.k_bulk"]], "k_mu() (dipy.reconst.qti.qtifit method)": [[170, "dipy.reconst.qti.QtiFit.k_mu"]], "k_shear() (dipy.reconst.qti.qtifit method)": [[170, "dipy.reconst.qti.QtiFit.k_shear"]], "kfa (dipy.reconst.dki.diffusionkurtosisfit property)": [[170, "dipy.reconst.dki.DiffusionKurtosisFit.kfa"]], "kfold_xval() (in module dipy.reconst.cross_validation)": [[170, "dipy.reconst.cross_validation.kfold_xval"]], "kmax() (dipy.reconst.dki.diffusionkurtosisfit method)": [[170, "dipy.reconst.dki.DiffusionKurtosisFit.kmax"]], "kt (dipy.reconst.dki.diffusionkurtosisfit property)": [[170, "dipy.reconst.dki.DiffusionKurtosisFit.kt"]], "kurtosis_fractional_anisotropy() (in module dipy.reconst.dki)": [[170, "dipy.reconst.dki.kurtosis_fractional_anisotropy"]], "kurtosis_maximum() (in module dipy.reconst.dki)": [[170, "dipy.reconst.dki.kurtosis_maximum"]], "l1_crossvalidation() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.l1_crossvalidation"]], "l_shore() (in module dipy.reconst.shore)": [[170, "dipy.reconst.shore.l_shore"]], "lazy_index() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.lazy_index"]], "lb_forecast() (in module dipy.reconst.forecast)": [[170, "dipy.reconst.forecast.lb_forecast"]], "lcr_matrix() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.lcr_matrix"]], "le_to_odf() (in module dipy.reconst.recspeed)": [[170, "dipy.reconst.recspeed.le_to_odf"]], "linearity() (dipy.reconst.dti.tensorfit method)": [[170, "dipy.reconst.dti.TensorFit.linearity"]], "linearity() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.linearity"]], "local_maxima() (in module dipy.reconst.recspeed)": [[170, "dipy.reconst.recspeed.local_maxima"]], "logger() (in module dipy.reconst.rumba)": [[170, "dipy.reconst.rumba.logger"]], "lower_triangular() (dipy.reconst.dti.tensorfit method)": [[170, "dipy.reconst.dti.TensorFit.lower_triangular"]], "lower_triangular() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.lower_triangular"]], "lower_triangular_to_cholesky() (in module dipy.reconst.fwdti)": [[170, "dipy.reconst.fwdti.lower_triangular_to_cholesky"]], "ls_fit_cti() (in module dipy.reconst.cti)": [[170, "dipy.reconst.cti.ls_fit_cti"]], "ls_fit_dki() (in module dipy.reconst.dki)": [[170, "dipy.reconst.dki.ls_fit_dki"]], "map_laplace_s() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.map_laplace_s"]], "map_laplace_t() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.map_laplace_t"]], "map_laplace_u() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.map_laplace_u"]], "mapmri_r (dipy.reconst.mapmri.mapmrifit property)": [[170, "dipy.reconst.mapmri.MapmriFit.mapmri_R"]], "mapmri_stu_reg_matrices() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.mapmri_STU_reg_matrices"]], "mapmri_coeff (dipy.reconst.mapmri.mapmrifit property)": [[170, "dipy.reconst.mapmri.MapmriFit.mapmri_coeff"]], "mapmri_index_matrix() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.mapmri_index_matrix"]], "mapmri_isotropic_k_mu_dependent() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.mapmri_isotropic_K_mu_dependent"]], "mapmri_isotropic_k_mu_independent() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.mapmri_isotropic_K_mu_independent"]], "mapmri_isotropic_m_mu_dependent() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.mapmri_isotropic_M_mu_dependent"]], "mapmri_isotropic_m_mu_independent() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.mapmri_isotropic_M_mu_independent"]], "mapmri_isotropic_index_matrix() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.mapmri_isotropic_index_matrix"]], "mapmri_isotropic_laplacian_reg_matrix() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.mapmri_isotropic_laplacian_reg_matrix"]], "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.mapmri_isotropic_laplacian_reg_matrix_from_index_matrix"]], "mapmri_isotropic_odf_matrix() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.mapmri_isotropic_odf_matrix"]], "mapmri_isotropic_odf_sh_matrix() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.mapmri_isotropic_odf_sh_matrix"]], "mapmri_isotropic_phi_matrix() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.mapmri_isotropic_phi_matrix"]], "mapmri_isotropic_psi_matrix() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.mapmri_isotropic_psi_matrix"]], "mapmri_isotropic_radial_pdf_basis() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.mapmri_isotropic_radial_pdf_basis"]], "mapmri_isotropic_radial_signal_basis() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.mapmri_isotropic_radial_signal_basis"]], "mapmri_laplacian_reg_matrix() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.mapmri_laplacian_reg_matrix"]], "mapmri_mu (dipy.reconst.mapmri.mapmrifit property)": [[170, "dipy.reconst.mapmri.MapmriFit.mapmri_mu"]], "mapmri_odf_matrix() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.mapmri_odf_matrix"]], "mapmri_phi_1d() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.mapmri_phi_1d"]], "mapmri_phi_matrix() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.mapmri_phi_matrix"]], "mapmri_psi_1d() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.mapmri_psi_1d"]], "mapmri_psi_matrix() (in module dipy.reconst.mapmri)": [[170, "dipy.reconst.mapmri.mapmri_psi_matrix"]], "mask_for_response_msmt() (in module dipy.reconst.mcsd)": [[170, "dipy.reconst.mcsd.mask_for_response_msmt"]], "mask_for_response_ssst() (in module dipy.reconst.csdeconv)": [[170, "dipy.reconst.csdeconv.mask_for_response_ssst"]], "max (dipy.reconst.shm.csaodfmodel attribute)": [[170, "dipy.reconst.shm.CsaOdfModel.max"]], "mbessel_ratio() (in module dipy.reconst.rumba)": [[170, "dipy.reconst.rumba.mbessel_ratio"]], "md() (dipy.reconst.dti.tensorfit method)": [[170, "dipy.reconst.dti.TensorFit.md"]], "md() (dipy.reconst.qti.qtifit method)": [[170, "dipy.reconst.qti.QtiFit.md"]], "mean_d_sq() (dipy.reconst.qti.qtifit method)": [[170, "dipy.reconst.qti.QtiFit.mean_d_sq"]], "mean_diffusivity() (dipy.reconst.forecast.forecastfit method)": [[170, "dipy.reconst.forecast.ForecastFit.mean_diffusivity"]], "mean_diffusivity() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.mean_diffusivity"]], "mean_kurtosis() (in module dipy.reconst.dki)": [[170, "dipy.reconst.dki.mean_kurtosis"]], "mean_kurtosis_tensor() (in module dipy.reconst.dki)": [[170, "dipy.reconst.dki.mean_kurtosis_tensor"]], "mean_signal_bvalue() (in module dipy.reconst.msdki)": [[170, "dipy.reconst.msdki.mean_signal_bvalue"]], "min (dipy.reconst.shm.csaodfmodel attribute)": [[170, "dipy.reconst.shm.CsaOdfModel.min"]], "minmax_normalize() (in module dipy.reconst.odf)": [[170, "dipy.reconst.odf.minmax_normalize"]], "mk() (dipy.reconst.dki.diffusionkurtosisfit method)": [[170, "dipy.reconst.dki.DiffusionKurtosisFit.mk"]], "mk() (dipy.reconst.qti.qtifit method)": [[170, "dipy.reconst.qti.QtiFit.mk"]], "mkt() (dipy.reconst.dki.diffusionkurtosisfit method)": [[170, "dipy.reconst.dki.DiffusionKurtosisFit.mkt"]], "mode() (dipy.reconst.dti.tensorfit method)": [[170, "dipy.reconst.dti.TensorFit.mode"]], "mode() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.mode"]], "msd() (dipy.reconst.mapmri.mapmrifit method)": [[170, "dipy.reconst.mapmri.MapmriFit.msd"]], "msd() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[170, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.msd"]], "msd() (dipy.reconst.qtdmri.qtdmrifit method)": [[170, "dipy.reconst.qtdmri.QtdmriFit.msd"]], "msd() (dipy.reconst.shore.shorefit method)": [[170, "dipy.reconst.shore.ShoreFit.msd"]], "msd_discrete() (dipy.reconst.dsi.diffusionspectrumfit method)": [[170, "dipy.reconst.dsi.DiffusionSpectrumFit.msd_discrete"]], "msdki_prediction() (in module dipy.reconst.msdki)": [[170, "dipy.reconst.msdki.msdki_prediction"]], "msk() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[170, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.msk"]], "msk_from_awf() (in module dipy.reconst.msdki)": [[170, "dipy.reconst.msdki.msk_from_awf"]], "multi_fit() (dipy.reconst.dki.diffusionkurtosismodel method)": [[170, "dipy.reconst.dki.DiffusionKurtosisModel.multi_fit"]], "multi_gaussian_k_from_c() (in module dipy.reconst.cti)": [[170, "dipy.reconst.cti.multi_gaussian_k_from_c"]], "multi_shell_fiber_response() (in module dipy.reconst.mcsd)": [[170, "dipy.reconst.mcsd.multi_shell_fiber_response"]], "multi_tissue_basis() (in module dipy.reconst.mcsd)": [[170, "dipy.reconst.mcsd.multi_tissue_basis"]], "multi_voxel_fit() (in module dipy.reconst.multi_voxel)": [[170, "dipy.reconst.multi_voxel.multi_voxel_fit"]], "n_shore() (in module dipy.reconst.shore)": [[170, "dipy.reconst.shore.n_shore"]], "ng() (dipy.reconst.mapmri.mapmrifit method)": [[170, "dipy.reconst.mapmri.MapmriFit.ng"]], "ng_parallel() (dipy.reconst.mapmri.mapmrifit method)": [[170, "dipy.reconst.mapmri.MapmriFit.ng_parallel"]], "ng_perpendicular() (dipy.reconst.mapmri.mapmrifit method)": [[170, "dipy.reconst.mapmri.MapmriFit.ng_perpendicular"]], "nlls_cost() (dipy.reconst.ivim.ivimmodelvp method)": [[170, "dipy.reconst.ivim.IvimModelVP.nlls_cost"]], "nlls_fit_tensor() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.nlls_fit_tensor"]], "nls_fit_tensor() (in module dipy.reconst.fwdti)": [[170, "dipy.reconst.fwdti.nls_fit_tensor"]], "nls_iter() (in module dipy.reconst.fwdti)": [[170, "dipy.reconst.fwdti.nls_iter"]], "norm() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.norm"]], "norm_of_laplacian_signal() (dipy.reconst.mapmri.mapmrifit method)": [[170, "dipy.reconst.mapmri.MapmriFit.norm_of_laplacian_signal"]], "norm_of_laplacian_signal() (dipy.reconst.qtdmri.qtdmrifit method)": [[170, "dipy.reconst.qtdmri.QtdmriFit.norm_of_laplacian_signal"]], "normalize_data() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.normalize_data"]], "normalize_qa() (in module dipy.reconst.gqi)": [[170, "dipy.reconst.gqi.normalize_qa"]], "npa() (in module dipy.reconst.gqi)": [[170, "dipy.reconst.gqi.npa"]], "odf() (dipy.reconst.dsi.diffusionspectrumfit method)": [[170, "dipy.reconst.dsi.DiffusionSpectrumFit.odf"]], "odf() (dipy.reconst.dti.tensorfit method)": [[170, "dipy.reconst.dti.TensorFit.odf"]], "odf() (dipy.reconst.forecast.forecastfit method)": [[170, "dipy.reconst.forecast.ForecastFit.odf"]], "odf() (dipy.reconst.gqi.generalizedqsamplingfit method)": [[170, "dipy.reconst.gqi.GeneralizedQSamplingFit.odf"]], "odf() (dipy.reconst.mapmri.mapmrifit method)": [[170, "dipy.reconst.mapmri.MapmriFit.odf"]], "odf() (dipy.reconst.odf.odffit method)": [[170, "dipy.reconst.odf.OdfFit.odf"]], "odf() (dipy.reconst.qtdmri.qtdmrifit method)": [[170, "dipy.reconst.qtdmri.QtdmriFit.odf"]], "odf() (dipy.reconst.rumba.rumbafit method)": [[170, "dipy.reconst.rumba.RumbaFit.odf"]], "odf() (dipy.reconst.sfm.sparsefasciclefit method)": [[170, "dipy.reconst.sfm.SparseFascicleFit.odf"]], "odf() (dipy.reconst.shm.sphharmfit method)": [[170, "dipy.reconst.shm.SphHarmFit.odf"]], "odf() (dipy.reconst.shore.shorefit method)": [[170, "dipy.reconst.shore.ShoreFit.odf"]], "odf_deconv() (in module dipy.reconst.csdeconv)": [[170, "dipy.reconst.csdeconv.odf_deconv"]], "odf_sh() (dipy.reconst.mapmri.mapmrifit method)": [[170, "dipy.reconst.mapmri.MapmriFit.odf_sh"]], "odf_sh() (dipy.reconst.qtdmri.qtdmrifit method)": [[170, "dipy.reconst.qtdmri.QtdmriFit.odf_sh"]], "odf_sh() (dipy.reconst.shore.shorefit method)": [[170, "dipy.reconst.shore.ShoreFit.odf_sh"]], "odf_sh_to_sharp() (in module dipy.reconst.csdeconv)": [[170, "dipy.reconst.csdeconv.odf_sh_to_sharp"]], "odf_sum() (in module dipy.reconst.gqi)": [[170, "dipy.reconst.gqi.odf_sum"]], "ols_fit_tensor() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.ols_fit_tensor"]], "on_sphere() (dipy.reconst.csdeconv.axsymshresponse method)": [[170, "dipy.reconst.csdeconv.AxSymShResponse.on_sphere"]], "order_from_ncoef() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.order_from_ncoef"]], "params_to_cti_params() (in module dipy.reconst.cti)": [[170, "dipy.reconst.cti.params_to_cti_params"]], "params_to_dki_params() (in module dipy.reconst.dki)": [[170, "dipy.reconst.dki.params_to_dki_params"]], "part1_reg_matrix_tau() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.part1_reg_matrix_tau"]], "part23_iso_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.part23_iso_reg_matrix_q"]], "part23_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.part23_reg_matrix_q"]], "part23_reg_matrix_tau() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.part23_reg_matrix_tau"]], "part4_iso_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.part4_iso_reg_matrix_q"]], "part4_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.part4_reg_matrix_q"]], "part4_reg_matrix_tau() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.part4_reg_matrix_tau"]], "patch_maximum() (in module dipy.reconst.gqi)": [[170, "dipy.reconst.gqi.patch_maximum"]], "patch_sum() (in module dipy.reconst.gqi)": [[170, "dipy.reconst.gqi.patch_sum"]], "patch_vertices() (in module dipy.reconst.gqi)": [[170, "dipy.reconst.gqi.patch_vertices"]], "pdf() (dipy.reconst.dsi.diffusionspectrumdeconvfit method)": [[170, "dipy.reconst.dsi.DiffusionSpectrumDeconvFit.pdf"]], "pdf() (dipy.reconst.dsi.diffusionspectrumfit method)": [[170, "dipy.reconst.dsi.DiffusionSpectrumFit.pdf"]], "pdf() (dipy.reconst.mapmri.mapmrifit method)": [[170, "dipy.reconst.mapmri.MapmriFit.pdf"]], "pdf() (dipy.reconst.qtdmri.qtdmrifit method)": [[170, "dipy.reconst.qtdmri.QtdmriFit.pdf"]], "pdf() (dipy.reconst.shore.shorefit method)": [[170, "dipy.reconst.shore.ShoreFit.pdf"]], "pdf_grid() (dipy.reconst.shore.shorefit method)": [[170, "dipy.reconst.shore.ShoreFit.pdf_grid"]], "pdf_interp_coords() (in module dipy.reconst.dsi)": [[170, "dipy.reconst.dsi.pdf_interp_coords"]], "pdf_odf() (in module dipy.reconst.dsi)": [[170, "dipy.reconst.dsi.pdf_odf"]], "perfusion_fraction (dipy.reconst.ivim.ivimfit property)": [[170, "dipy.reconst.ivim.IvimFit.perfusion_fraction"]], "phi() (dipy.reconst.ivim.ivimmodelvp method)": [[170, "dipy.reconst.ivim.IvimModelVP.phi"]], "planarity() (dipy.reconst.dti.tensorfit method)": [[170, "dipy.reconst.dti.TensorFit.planarity"]], "planarity() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.planarity"]], "polar_zone_vertices() (in module dipy.reconst.gqi)": [[170, "dipy.reconst.gqi.polar_zone_vertices"]], "predict() (dipy.reconst.csdeconv.constrainedsphericaldeconvmodel method)": [[170, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.predict"]], "predict() (dipy.reconst.cti.correlationtensorfit method)": [[170, "dipy.reconst.cti.CorrelationTensorFit.predict"]], "predict() (dipy.reconst.cti.correlationtensormodel method)": [[170, "dipy.reconst.cti.CorrelationTensorModel.predict"]], "predict() (dipy.reconst.dki.diffusionkurtosisfit method)": [[170, "dipy.reconst.dki.DiffusionKurtosisFit.predict"]], "predict() (dipy.reconst.dki.diffusionkurtosismodel method)": [[170, "dipy.reconst.dki.DiffusionKurtosisModel.predict"]], "predict() (dipy.reconst.dki_micro.kurtosismicrostructuralfit method)": [[170, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.predict"]], "predict() (dipy.reconst.dki_micro.kurtosismicrostructuremodel method)": [[170, "dipy.reconst.dki_micro.KurtosisMicrostructureModel.predict"]], "predict() (dipy.reconst.dti.tensorfit method)": [[170, "dipy.reconst.dti.TensorFit.predict"]], "predict() (dipy.reconst.dti.tensormodel method)": [[170, "dipy.reconst.dti.TensorModel.predict"]], "predict() (dipy.reconst.forecast.forecastfit method)": [[170, "dipy.reconst.forecast.ForecastFit.predict"]], "predict() (dipy.reconst.fwdti.freewatertensorfit method)": [[170, "dipy.reconst.fwdti.FreeWaterTensorFit.predict"]], "predict() (dipy.reconst.fwdti.freewatertensormodel method)": [[170, "dipy.reconst.fwdti.FreeWaterTensorModel.predict"]], "predict() (dipy.reconst.ivim.ivimfit method)": [[170, "dipy.reconst.ivim.IvimFit.predict"]], "predict() (dipy.reconst.ivim.ivimmodeltrr method)": [[170, "dipy.reconst.ivim.IvimModelTRR.predict"]], "predict() (dipy.reconst.mapmri.mapmrifit method)": [[170, "dipy.reconst.mapmri.MapmriFit.predict"]], "predict() (dipy.reconst.mcsd.multishelldeconvmodel method)": [[170, "dipy.reconst.mcsd.MultiShellDeconvModel.predict"]], "predict() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[170, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.predict"]], "predict() (dipy.reconst.msdki.meandiffusionkurtosismodel method)": [[170, "dipy.reconst.msdki.MeanDiffusionKurtosisModel.predict"]], "predict() (dipy.reconst.multi_voxel.multivoxelfit method)": [[170, "dipy.reconst.multi_voxel.MultiVoxelFit.predict"]], "predict() (dipy.reconst.qtdmri.qtdmrifit method)": [[170, "dipy.reconst.qtdmri.QtdmriFit.predict"]], "predict() (dipy.reconst.qti.qtifit method)": [[170, "dipy.reconst.qti.QtiFit.predict"]], "predict() (dipy.reconst.qti.qtimodel method)": [[170, "dipy.reconst.qti.QtiModel.predict"]], "predict() (dipy.reconst.rumba.rumbafit method)": [[170, "dipy.reconst.rumba.RumbaFit.predict"]], "predict() (dipy.reconst.sfm.exponentialisotropicfit method)": [[170, "dipy.reconst.sfm.ExponentialIsotropicFit.predict"]], "predict() (dipy.reconst.sfm.isotropicfit method)": [[170, "dipy.reconst.sfm.IsotropicFit.predict"]], "predict() (dipy.reconst.sfm.sparsefasciclefit method)": [[170, "dipy.reconst.sfm.SparseFascicleFit.predict"]], "predict() (dipy.reconst.shm.sphharmfit method)": [[170, "dipy.reconst.shm.SphHarmFit.predict"]], "proc_reco_args() (in module dipy.reconst.recspeed)": [[170, "dipy.reconst.recspeed.proc_reco_args"]], "project_hemisph_bvecs() (in module dipy.reconst.dsi)": [[170, "dipy.reconst.dsi.project_hemisph_bvecs"]], "psi_l() (in module dipy.reconst.forecast)": [[170, "dipy.reconst.forecast.psi_l"]], "qa_thr (dipy.reconst.eudx_direction_getter.eudxdirectiongetter attribute)": [[170, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.qa_thr"]], "qiv() (dipy.reconst.mapmri.mapmrifit method)": [[170, "dipy.reconst.mapmri.MapmriFit.qiv"]], "qiv() (dipy.reconst.qtdmri.qtdmrifit method)": [[170, "dipy.reconst.qtdmri.QtdmriFit.qiv"]], "qtdmri_anisotropic_scaling() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.qtdmri_anisotropic_scaling"]], "qtdmri_eap_matrix() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.qtdmri_eap_matrix"]], "qtdmri_eap_matrix_() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.qtdmri_eap_matrix_"]], "qtdmri_index_matrix() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.qtdmri_index_matrix"]], "qtdmri_isotropic_eap_matrix() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.qtdmri_isotropic_eap_matrix"]], "qtdmri_isotropic_eap_matrix_() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.qtdmri_isotropic_eap_matrix_"]], "qtdmri_isotropic_index_matrix() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.qtdmri_isotropic_index_matrix"]], "qtdmri_isotropic_laplacian_reg_matrix() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.qtdmri_isotropic_laplacian_reg_matrix"]], "qtdmri_isotropic_scaling() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.qtdmri_isotropic_scaling"]], "qtdmri_isotropic_signal_matrix() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.qtdmri_isotropic_signal_matrix"]], "qtdmri_isotropic_signal_matrix_() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.qtdmri_isotropic_signal_matrix_"]], "qtdmri_isotropic_to_mapmri_matrix() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.qtdmri_isotropic_to_mapmri_matrix"]], "qtdmri_laplacian_reg_matrix() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.qtdmri_laplacian_reg_matrix"]], "qtdmri_mapmri_isotropic_normalization() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.qtdmri_mapmri_isotropic_normalization"]], "qtdmri_mapmri_normalization() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.qtdmri_mapmri_normalization"]], "qtdmri_number_of_coefficients() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.qtdmri_number_of_coefficients"]], "qtdmri_signal_matrix() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.qtdmri_signal_matrix"]], "qtdmri_signal_matrix_() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.qtdmri_signal_matrix_"]], "qtdmri_temporal_normalization() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.qtdmri_temporal_normalization"]], "qtdmri_to_mapmri_coef() (dipy.reconst.qtdmri.qtdmrifit method)": [[170, "dipy.reconst.qtdmri.QtdmriFit.qtdmri_to_mapmri_coef"]], "qtdmri_to_mapmri_matrix() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.qtdmri_to_mapmri_matrix"]], "qti_signal() (in module dipy.reconst.qti)": [[170, "dipy.reconst.qti.qti_signal"]], "quadratic_form (dipy.reconst.dti.tensorfit property)": [[170, "dipy.reconst.dti.TensorFit.quadratic_form"]], "quantize_evecs() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.quantize_evecs"]], "quick_squash() (in module dipy.reconst.quick_squash)": [[170, "dipy.reconst.quick_squash.quick_squash"]], "radial_basis_eap_opt() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.radial_basis_EAP_opt"]], "radial_basis_opt() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.radial_basis_opt"]], "radial_diffusivity() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.radial_diffusivity"]], "radial_kurtosis() (in module dipy.reconst.dki)": [[170, "dipy.reconst.dki.radial_kurtosis"]], "rd() (dipy.reconst.dti.tensorfit method)": [[170, "dipy.reconst.dti.TensorFit.rd"]], "real_sh_descoteaux() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.real_sh_descoteaux"]], "real_sh_descoteaux_from_index() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.real_sh_descoteaux_from_index"]], "real_sh_tournier() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.real_sh_tournier"]], "real_sh_tournier_from_index() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.real_sh_tournier_from_index"]], "real_sph_harm() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.real_sph_harm"]], "real_sym_sh_basis() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.real_sym_sh_basis"]], "real_sym_sh_mrtrix() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.real_sym_sh_mrtrix"]], "recursive_response() (in module dipy.reconst.csdeconv)": [[170, "dipy.reconst.csdeconv.recursive_response"]], "reduce() (in module dipy.reconst.quick_squash)": [[170, "dipy.reconst.quick_squash.reduce"]], "remove_similar_vertices() (in module dipy.reconst.recspeed)": [[170, "dipy.reconst.recspeed.remove_similar_vertices"]], "response_from_mask() (in module dipy.reconst.csdeconv)": [[170, "dipy.reconst.csdeconv.response_from_mask"]], "response_from_mask_msmt() (in module dipy.reconst.mcsd)": [[170, "dipy.reconst.mcsd.response_from_mask_msmt"]], "response_from_mask_ssst() (in module dipy.reconst.csdeconv)": [[170, "dipy.reconst.csdeconv.response_from_mask_ssst"]], "restore_fit_tensor() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.restore_fit_tensor"]], "restricted_evals (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[170, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.restricted_evals"]], "rho_matrix() (in module dipy.reconst.forecast)": [[170, "dipy.reconst.forecast.rho_matrix"]], "rk() (dipy.reconst.dki.diffusionkurtosisfit method)": [[170, "dipy.reconst.dki.DiffusionKurtosisFit.rk"]], "rtap() (dipy.reconst.mapmri.mapmrifit method)": [[170, "dipy.reconst.mapmri.MapmriFit.rtap"]], "rtap() (dipy.reconst.qtdmri.qtdmrifit method)": [[170, "dipy.reconst.qtdmri.QtdmriFit.rtap"]], "rtop() (dipy.reconst.mapmri.mapmrifit method)": [[170, "dipy.reconst.mapmri.MapmriFit.rtop"]], "rtop() (dipy.reconst.qtdmri.qtdmrifit method)": [[170, "dipy.reconst.qtdmri.QtdmriFit.rtop"]], "rtop_pdf() (dipy.reconst.dsi.diffusionspectrumfit method)": [[170, "dipy.reconst.dsi.DiffusionSpectrumFit.rtop_pdf"]], "rtop_pdf() (dipy.reconst.shore.shorefit method)": [[170, "dipy.reconst.shore.ShoreFit.rtop_pdf"]], "rtop_signal() (dipy.reconst.dsi.diffusionspectrumfit method)": [[170, "dipy.reconst.dsi.DiffusionSpectrumFit.rtop_signal"]], "rtop_signal() (dipy.reconst.shore.shorefit method)": [[170, "dipy.reconst.shore.ShoreFit.rtop_signal"]], "rtpp() (dipy.reconst.mapmri.mapmrifit method)": [[170, "dipy.reconst.mapmri.MapmriFit.rtpp"]], "rtpp() (dipy.reconst.qtdmri.qtdmrifit method)": [[170, "dipy.reconst.qtdmri.QtdmriFit.rtpp"]], "rumba_deconv() (in module dipy.reconst.rumba)": [[170, "dipy.reconst.rumba.rumba_deconv"]], "rumba_deconv_global() (in module dipy.reconst.rumba)": [[170, "dipy.reconst.rumba.rumba_deconv_global"]], "sampling_matrix() (dipy.reconst.shm.sphharmmodel method)": [[170, "dipy.reconst.shm.SphHarmModel.sampling_matrix"]], "search_descending() (in module dipy.reconst.recspeed)": [[170, "dipy.reconst.recspeed.search_descending"]], "sf_to_sh() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.sf_to_sh"]], "sfm_design_matrix() (in module dipy.reconst.sfm)": [[170, "dipy.reconst.sfm.sfm_design_matrix"]], "sh_coeff (dipy.reconst.forecast.forecastfit property)": [[170, "dipy.reconst.forecast.ForecastFit.sh_coeff"]], "sh_to_rh() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.sh_to_rh"]], "sh_to_sf() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.sh_to_sf"]], "sh_to_sf_matrix() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.sh_to_sf_matrix"]], "shape (dipy.reconst.dti.tensorfit property)": [[170, "dipy.reconst.dti.TensorFit.shape"]], "shape (dipy.reconst.ivim.ivimfit property)": [[170, "dipy.reconst.ivim.IvimFit.shape"]], "shape (dipy.reconst.multi_voxel.multivoxelfit property)": [[170, "dipy.reconst.multi_voxel.MultiVoxelFit.shape"]], "shape (dipy.reconst.shm.sphharmfit property)": [[170, "dipy.reconst.shm.SphHarmFit.shape"]], "shm_coeff (dipy.reconst.mcsd.msdeconvfit property)": [[170, "dipy.reconst.mcsd.MSDeconvFit.shm_coeff"]], "shm_coeff (dipy.reconst.shm.sphharmfit property)": [[170, "dipy.reconst.shm.SphHarmFit.shm_coeff"]], "shore_coeff (dipy.reconst.shore.shorefit property)": [[170, "dipy.reconst.shore.ShoreFit.shore_coeff"]], "shore_indices() (in module dipy.reconst.shore)": [[170, "dipy.reconst.shore.shore_indices"]], "shore_matrix() (in module dipy.reconst.shore)": [[170, "dipy.reconst.shore.shore_matrix"]], "shore_matrix_odf() (in module dipy.reconst.shore)": [[170, "dipy.reconst.shore.shore_matrix_odf"]], "shore_matrix_pdf() (in module dipy.reconst.shore)": [[170, "dipy.reconst.shore.shore_matrix_pdf"]], "shore_order() (in module dipy.reconst.shore)": [[170, "dipy.reconst.shore.shore_order"]], "smooth_pinv() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.smooth_pinv"]], "smt2di() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[170, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.smt2di"]], "smt2f() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[170, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.smt2f"]], "smt2ufa() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[170, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.smt2uFA"]], "solve_qp() (in module dipy.reconst.mcsd)": [[170, "dipy.reconst.mcsd.solve_qp"]], "sparsity_abs() (dipy.reconst.qtdmri.qtdmrifit method)": [[170, "dipy.reconst.qtdmri.QtdmriFit.sparsity_abs"]], "sparsity_density() (dipy.reconst.qtdmri.qtdmrifit method)": [[170, "dipy.reconst.qtdmri.QtdmriFit.sparsity_density"]], "sph_harm_ind_list() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.sph_harm_ind_list"]], "spherical_harmonics() (in module dipy.reconst.shm)": [[170, "dipy.reconst.shm.spherical_harmonics"]], "sphericity() (dipy.reconst.dti.tensorfit method)": [[170, "dipy.reconst.dti.TensorFit.sphericity"]], "sphericity() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.sphericity"]], "split_cti_params() (in module dipy.reconst.cti)": [[170, "dipy.reconst.cti.split_cti_params"]], "split_dki_param() (in module dipy.reconst.dki)": [[170, "dipy.reconst.dki.split_dki_param"]], "squared_radial_component() (in module dipy.reconst.gqi)": [[170, "dipy.reconst.gqi.squared_radial_component"]], "stoc_search_cost() (dipy.reconst.ivim.ivimmodelvp method)": [[170, "dipy.reconst.ivim.IvimModelVP.stoc_search_cost"]], "sum_on_blocks_1d() (in module dipy.reconst.recspeed)": [[170, "dipy.reconst.recspeed.sum_on_blocks_1d"]], "temporal_basis() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.temporal_basis"]], "tensor_prediction() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.tensor_prediction"]], "threshold_propagator() (in module dipy.reconst.dsi)": [[170, "dipy.reconst.dsi.threshold_propagator"]], "tortuosity (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[170, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.tortuosity"]], "tortuosity() (in module dipy.reconst.dki_micro)": [[170, "dipy.reconst.dki_micro.tortuosity"]], "total_weight (dipy.reconst.eudx_direction_getter.eudxdirectiongetter attribute)": [[170, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.total_weight"]], "trace() (dipy.reconst.dti.tensorfit method)": [[170, "dipy.reconst.dti.TensorFit.trace"]], "trace() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.trace"]], "triple_odf_maxima() (in module dipy.reconst.gqi)": [[170, "dipy.reconst.gqi.triple_odf_maxima"]], "ufa() (dipy.reconst.qti.qtifit method)": [[170, "dipy.reconst.qti.QtiFit.ufa"]], "upper_hemi_map() (in module dipy.reconst.gqi)": [[170, "dipy.reconst.gqi.upper_hemi_map"]], "v_iso() (dipy.reconst.qti.qtifit method)": [[170, "dipy.reconst.qti.QtiFit.v_iso"]], "v_md() (dipy.reconst.qti.qtifit method)": [[170, "dipy.reconst.qti.QtiFit.v_md"]], "v_shear() (dipy.reconst.qti.qtifit method)": [[170, "dipy.reconst.qti.QtiFit.v_shear"]], "vec_val_vect() (in module dipy.reconst.vec_val_sum)": [[170, "dipy.reconst.vec_val_sum.vec_val_vect"]], "visualise_gradient_table_g_delta_rainbow() (in module dipy.reconst.qtdmri)": [[170, "dipy.reconst.qtdmri.visualise_gradient_table_G_Delta_rainbow"]], "volume_fractions (dipy.reconst.mcsd.msdeconvfit property)": [[170, "dipy.reconst.mcsd.MSDeconvFit.volume_fractions"]], "wls_fit_msdki() (in module dipy.reconst.msdki)": [[170, "dipy.reconst.msdki.wls_fit_msdki"]], "wls_fit_tensor() (in module dipy.reconst.dti)": [[170, "dipy.reconst.dti.wls_fit_tensor"]], "wls_fit_tensor() (in module dipy.reconst.fwdti)": [[170, "dipy.reconst.fwdti.wls_fit_tensor"]], "wls_iter() (in module dipy.reconst.fwdti)": [[170, "dipy.reconst.fwdti.wls_iter"]], "x_and_f_to_x_f() (dipy.reconst.ivim.ivimmodelvp method)": [[170, "dipy.reconst.ivim.IvimModelVP.x_and_f_to_x_f"]], "x_f_to_x_and_f() (dipy.reconst.ivim.ivimmodelvp method)": [[170, "dipy.reconst.ivim.IvimModelVP.x_f_to_x_and_f"]], "arclengthfeature (class in dipy.segment.featurespeed)": [[171, "dipy.segment.featurespeed.ArcLengthFeature"]], "averagepointwiseeuclideanmetric (class in dipy.segment.metricspeed)": [[171, "dipy.segment.metricspeed.AveragePointwiseEuclideanMetric"]], "centerofmassfeature (class in dipy.segment.featurespeed)": [[171, "dipy.segment.featurespeed.CenterOfMassFeature"]], "cluster (class in dipy.segment.clustering)": [[171, "dipy.segment.clustering.Cluster"]], "clustercentroid (class in dipy.segment.clustering)": [[171, "dipy.segment.clustering.ClusterCentroid"]], "clustercentroid (class in dipy.segment.clustering_algorithms)": [[171, "dipy.segment.clustering_algorithms.ClusterCentroid"]], "clustercentroid (class in dipy.segment.clusteringspeed)": [[171, "dipy.segment.clusteringspeed.ClusterCentroid"]], "clustermap (class in dipy.segment.clustering)": [[171, "dipy.segment.clustering.ClusterMap"]], "clustermapcentroid (class in dipy.segment.clustering)": [[171, "dipy.segment.clustering.ClusterMapCentroid"]], "clustermapcentroid (class in dipy.segment.clustering_algorithms)": [[171, "dipy.segment.clustering_algorithms.ClusterMapCentroid"]], "clustermapcentroid (class in dipy.segment.clusteringspeed)": [[171, "dipy.segment.clusteringspeed.ClusterMapCentroid"]], "clustering (class in dipy.segment.clustering)": [[171, "dipy.segment.clustering.Clustering"]], "clusters (class in dipy.segment.clusteringspeed)": [[171, "dipy.segment.clusteringspeed.Clusters"]], "clusterscentroid (class in dipy.segment.clusteringspeed)": [[171, "dipy.segment.clusteringspeed.ClustersCentroid"]], "constantobservationmodel (class in dipy.segment.mrf)": [[171, "dipy.segment.mrf.ConstantObservationModel"]], "cosinemetric (class in dipy.segment.metricspeed)": [[171, "dipy.segment.metricspeed.CosineMetric"]], "cythonfeature (class in dipy.segment.featurespeed)": [[171, "dipy.segment.featurespeed.CythonFeature"]], "cythonmetric (class in dipy.segment.metricspeed)": [[171, "dipy.segment.metricspeed.CythonMetric"]], "dtype (in module dipy.segment.clustering_algorithms)": [[171, "dipy.segment.clustering_algorithms.DTYPE"]], "dtype (in module dipy.segment.clusteringspeed)": [[171, "dipy.segment.clusteringspeed.DTYPE"]], "faststreamlinesearch (class in dipy.segment.fss)": [[171, "dipy.segment.fss.FastStreamlineSearch"]], "feature (class in dipy.segment.featurespeed)": [[171, "dipy.segment.featurespeed.Feature"]], "identity (class in dipy.segment.clustering)": [[171, "dipy.segment.clustering.Identity"]], "identityfeature (class in dipy.segment.featurespeed)": [[171, "dipy.segment.featurespeed.IdentityFeature"]], "iteratedconditionalmodes (class in dipy.segment.mrf)": [[171, "dipy.segment.mrf.IteratedConditionalModes"]], "metric (class in dipy.segment.metricspeed)": [[171, "dipy.segment.metricspeed.Metric"]], "midpointfeature (class in dipy.segment.featurespeed)": [[171, "dipy.segment.featurespeed.MidpointFeature"]], "minimumaveragedirectflipmetric (class in dipy.segment.metricspeed)": [[171, "dipy.segment.metricspeed.MinimumAverageDirectFlipMetric"]], "quickbundles (class in dipy.segment.clustering)": [[171, "dipy.segment.clustering.QuickBundles"]], "quickbundles (class in dipy.segment.clusteringspeed)": [[171, "dipy.segment.clusteringspeed.QuickBundles"]], "quickbundlesx (class in dipy.segment.clustering)": [[171, "dipy.segment.clustering.QuickBundlesX"]], "quickbundlesx (class in dipy.segment.clusteringspeed)": [[171, "dipy.segment.clusteringspeed.QuickBundlesX"]], "recobundles (class in dipy.segment.bundles)": [[171, "dipy.segment.bundles.RecoBundles"]], "resamplefeature (class in dipy.segment.featurespeed)": [[171, "dipy.segment.featurespeed.ResampleFeature"]], "sumpointwiseeuclideanmetric (class in dipy.segment.metricspeed)": [[171, "dipy.segment.metricspeed.SumPointwiseEuclideanMetric"]], "tissueclassifierhmrf (class in dipy.segment.tissue)": [[171, "dipy.segment.tissue.TissueClassifierHMRF"]], "treecluster (class in dipy.segment.clustering)": [[171, "dipy.segment.clustering.TreeCluster"]], "treecluster (class in dipy.segment.clusteringspeed)": [[171, "dipy.segment.clusteringspeed.TreeCluster"]], "treeclustermap (class in dipy.segment.clustering)": [[171, "dipy.segment.clustering.TreeClusterMap"]], "treeclustermap (class in dipy.segment.clusteringspeed)": [[171, "dipy.segment.clusteringspeed.TreeClusterMap"]], "vectorofendpointsfeature (class in dipy.segment.featurespeed)": [[171, "dipy.segment.featurespeed.VectorOfEndpointsFeature"]], "__init__() (dipy.segment.bundles.recobundles method)": [[171, "dipy.segment.bundles.RecoBundles.__init__"]], "__init__() (dipy.segment.clustering.cluster method)": [[171, "dipy.segment.clustering.Cluster.__init__"]], "__init__() (dipy.segment.clustering.clustercentroid method)": [[171, "dipy.segment.clustering.ClusterCentroid.__init__"]], "__init__() (dipy.segment.clustering.clustermap method)": [[171, "dipy.segment.clustering.ClusterMap.__init__"]], "__init__() (dipy.segment.clustering.clustermapcentroid method)": [[171, "dipy.segment.clustering.ClusterMapCentroid.__init__"]], "__init__() (dipy.segment.clustering.clustering method)": [[171, "dipy.segment.clustering.Clustering.__init__"]], "__init__() (dipy.segment.clustering.identity method)": [[171, "dipy.segment.clustering.Identity.__init__"]], "__init__() (dipy.segment.clustering.quickbundles method)": [[171, "dipy.segment.clustering.QuickBundles.__init__"]], "__init__() (dipy.segment.clustering.quickbundlesx method)": [[171, "dipy.segment.clustering.QuickBundlesX.__init__"]], "__init__() (dipy.segment.clustering.treecluster method)": [[171, "dipy.segment.clustering.TreeCluster.__init__"]], "__init__() (dipy.segment.clustering.treeclustermap method)": [[171, "dipy.segment.clustering.TreeClusterMap.__init__"]], "__init__() (dipy.segment.clustering_algorithms.clustercentroid method)": [[171, "dipy.segment.clustering_algorithms.ClusterCentroid.__init__"]], "__init__() (dipy.segment.clustering_algorithms.clustermapcentroid method)": [[171, "dipy.segment.clustering_algorithms.ClusterMapCentroid.__init__"]], "__init__() (dipy.segment.clusteringspeed.clustercentroid method)": [[171, "dipy.segment.clusteringspeed.ClusterCentroid.__init__"]], "__init__() (dipy.segment.clusteringspeed.clustermapcentroid method)": [[171, "dipy.segment.clusteringspeed.ClusterMapCentroid.__init__"]], "__init__() (dipy.segment.clusteringspeed.clusters method)": [[171, "dipy.segment.clusteringspeed.Clusters.__init__"]], "__init__() (dipy.segment.clusteringspeed.clusterscentroid method)": [[171, "dipy.segment.clusteringspeed.ClustersCentroid.__init__"]], "__init__() (dipy.segment.clusteringspeed.quickbundles method)": [[171, "dipy.segment.clusteringspeed.QuickBundles.__init__"]], "__init__() (dipy.segment.clusteringspeed.quickbundlesx method)": [[171, "dipy.segment.clusteringspeed.QuickBundlesX.__init__"]], "__init__() (dipy.segment.clusteringspeed.treecluster method)": [[171, "dipy.segment.clusteringspeed.TreeCluster.__init__"]], "__init__() (dipy.segment.clusteringspeed.treeclustermap method)": [[171, "dipy.segment.clusteringspeed.TreeClusterMap.__init__"]], "__init__() (dipy.segment.featurespeed.arclengthfeature method)": [[171, "dipy.segment.featurespeed.ArcLengthFeature.__init__"]], "__init__() (dipy.segment.featurespeed.centerofmassfeature method)": [[171, "dipy.segment.featurespeed.CenterOfMassFeature.__init__"]], "__init__() (dipy.segment.featurespeed.cythonfeature method)": [[171, "dipy.segment.featurespeed.CythonFeature.__init__"]], "__init__() (dipy.segment.featurespeed.feature method)": [[171, "dipy.segment.featurespeed.Feature.__init__"]], "__init__() (dipy.segment.featurespeed.identityfeature method)": [[171, "dipy.segment.featurespeed.IdentityFeature.__init__"]], "__init__() (dipy.segment.featurespeed.midpointfeature method)": [[171, "dipy.segment.featurespeed.MidpointFeature.__init__"]], "__init__() (dipy.segment.featurespeed.resamplefeature method)": [[171, "dipy.segment.featurespeed.ResampleFeature.__init__"]], "__init__() (dipy.segment.featurespeed.vectorofendpointsfeature method)": [[171, "dipy.segment.featurespeed.VectorOfEndpointsFeature.__init__"]], "__init__() (dipy.segment.fss.faststreamlinesearch method)": [[171, "dipy.segment.fss.FastStreamlineSearch.__init__"]], "__init__() (dipy.segment.metricspeed.averagepointwiseeuclideanmetric method)": [[171, "dipy.segment.metricspeed.AveragePointwiseEuclideanMetric.__init__"]], "__init__() (dipy.segment.metricspeed.cosinemetric method)": [[171, "dipy.segment.metricspeed.CosineMetric.__init__"]], "__init__() (dipy.segment.metricspeed.cythonmetric method)": [[171, "dipy.segment.metricspeed.CythonMetric.__init__"]], "__init__() (dipy.segment.metricspeed.metric method)": [[171, "dipy.segment.metricspeed.Metric.__init__"]], "__init__() (dipy.segment.metricspeed.minimumaveragedirectflipmetric method)": [[171, "dipy.segment.metricspeed.MinimumAverageDirectFlipMetric.__init__"]], "__init__() (dipy.segment.metricspeed.sumpointwiseeuclideanmetric method)": [[171, "dipy.segment.metricspeed.SumPointwiseEuclideanMetric.__init__"]], "__init__() (dipy.segment.mrf.constantobservationmodel method)": [[171, "dipy.segment.mrf.ConstantObservationModel.__init__"]], "__init__() (dipy.segment.mrf.iteratedconditionalmodes method)": [[171, "dipy.segment.mrf.IteratedConditionalModes.__init__"]], "__init__() (dipy.segment.tissue.tissueclassifierhmrf method)": [[171, "dipy.segment.tissue.TissueClassifierHMRF.__init__"]], "add() (dipy.segment.clustering.treecluster method)": [[171, "dipy.segment.clustering.TreeCluster.add"]], "add() (dipy.segment.clusteringspeed.treecluster method)": [[171, "dipy.segment.clusteringspeed.TreeCluster.add"]], "add_cluster() (dipy.segment.clustering.clustermap method)": [[171, "dipy.segment.clustering.ClusterMap.add_cluster"]], "applymask() (in module dipy.segment.mask)": [[171, "dipy.segment.mask.applymask"]], "are_compatible() (dipy.segment.metricspeed.cythonmetric method)": [[171, "dipy.segment.metricspeed.CythonMetric.are_compatible"]], "are_compatible() (dipy.segment.metricspeed.metric method)": [[171, "dipy.segment.metricspeed.Metric.are_compatible"]], "assign() (dipy.segment.clustering.cluster method)": [[171, "dipy.segment.clustering.Cluster.assign"]], "assign() (dipy.segment.clustering.clustercentroid method)": [[171, "dipy.segment.clustering.ClusterCentroid.assign"]], "assign() (dipy.segment.clustering_algorithms.clustercentroid method)": [[171, "dipy.segment.clustering_algorithms.ClusterCentroid.assign"]], "assign() (dipy.segment.clusteringspeed.clustercentroid method)": [[171, "dipy.segment.clusteringspeed.ClusterCentroid.assign"]], "ba_analysis() (in module dipy.segment.bundles)": [[171, "dipy.segment.bundles.ba_analysis"]], "bounding_box() (in module dipy.segment.mask)": [[171, "dipy.segment.mask.bounding_box"]], "bundle_adjacency() (in module dipy.segment.bundles)": [[171, "dipy.segment.bundles.bundle_adjacency"]], "bundle_shape_similarity() (in module dipy.segment.bundles)": [[171, "dipy.segment.bundles.bundle_shape_similarity"]], "centroids (dipy.segment.clustering.clustermapcentroid property)": [[171, "dipy.segment.clustering.ClusterMapCentroid.centroids"]], "centroids (dipy.segment.clustering_algorithms.clustermapcentroid property)": [[171, "dipy.segment.clustering_algorithms.ClusterMapCentroid.centroids"]], "centroids (dipy.segment.clusteringspeed.clustermapcentroid property)": [[171, "dipy.segment.clusteringspeed.ClusterMapCentroid.centroids"]], "check_range() (in module dipy.segment.bundles)": [[171, "dipy.segment.bundles.check_range"]], "classify() (dipy.segment.tissue.tissueclassifierhmrf method)": [[171, "dipy.segment.tissue.TissueClassifierHMRF.classify"]], "clean_cc_mask() (in module dipy.segment.mask)": [[171, "dipy.segment.mask.clean_cc_mask"]], "clear() (dipy.segment.clustering.clustermap method)": [[171, "dipy.segment.clustering.ClusterMap.clear"]], "cluster() (dipy.segment.clustering.clustering method)": [[171, "dipy.segment.clustering.Clustering.cluster"]], "cluster() (dipy.segment.clustering.quickbundles method)": [[171, "dipy.segment.clustering.QuickBundles.cluster"]], "cluster() (dipy.segment.clustering.quickbundlesx method)": [[171, "dipy.segment.clustering.QuickBundlesX.cluster"]], "cluster_bundle() (in module dipy.segment.bundles)": [[171, "dipy.segment.bundles.cluster_bundle"]], "clusters (dipy.segment.clustering.clustermap property)": [[171, "dipy.segment.clustering.ClusterMap.clusters"]], "clusters_centroid2clustermap_centroid() (in module dipy.segment.clustering_algorithms)": [[171, "dipy.segment.clustering_algorithms.clusters_centroid2clustermap_centroid"]], "clusters_sizes() (dipy.segment.clustering.clustermap method)": [[171, "dipy.segment.clustering.ClusterMap.clusters_sizes"]], "crop() (in module dipy.segment.mask)": [[171, "dipy.segment.mask.crop"]], "dipy.segment": [[171, "module-dipy.segment"]], "dipy.segment.bundles": [[171, "module-dipy.segment.bundles"]], "dipy.segment.clustering": [[171, "module-dipy.segment.clustering"]], "dipy.segment.clustering_algorithms": [[171, "module-dipy.segment.clustering_algorithms"]], "dipy.segment.clusteringspeed": [[171, "module-dipy.segment.clusteringspeed"]], "dipy.segment.cythonutils": [[171, "module-dipy.segment.cythonutils"]], "dipy.segment.featurespeed": [[171, "module-dipy.segment.featurespeed"]], "dipy.segment.fss": [[171, "module-dipy.segment.fss"]], "dipy.segment.mask": [[171, "module-dipy.segment.mask"]], "dipy.segment.metric": [[171, "module-dipy.segment.metric"]], "dipy.segment.metricspeed": [[171, "module-dipy.segment.metricspeed"]], "dipy.segment.mrf": [[171, "module-dipy.segment.mrf"]], "dipy.segment.threshold": [[171, "module-dipy.segment.threshold"]], "dipy.segment.tissue": [[171, "module-dipy.segment.tissue"]], "dist() (dipy.segment.metricspeed.cythonmetric method)": [[171, "dipy.segment.metricspeed.CythonMetric.dist"]], "dist() (dipy.segment.metricspeed.metric method)": [[171, "dipy.segment.metricspeed.Metric.dist"]], "dist() (in module dipy.segment.metricspeed)": [[171, "dipy.segment.metricspeed.dist"]], "distance_matrix() (in module dipy.segment.metricspeed)": [[171, "dipy.segment.metricspeed.distance_matrix"]], "evaluate_aabb_checks() (in module dipy.segment.clusteringspeed)": [[171, "dipy.segment.clusteringspeed.evaluate_aabb_checks"]], "evaluate_results() (dipy.segment.bundles.recobundles method)": [[171, "dipy.segment.bundles.RecoBundles.evaluate_results"]], "extract() (dipy.segment.featurespeed.cythonfeature method)": [[171, "dipy.segment.featurespeed.CythonFeature.extract"]], "extract() (dipy.segment.featurespeed.feature method)": [[171, "dipy.segment.featurespeed.Feature.extract"]], "extract() (in module dipy.segment.featurespeed)": [[171, "dipy.segment.featurespeed.extract"]], "feature (dipy.segment.metricspeed.metric attribute)": [[171, "dipy.segment.metricspeed.Metric.feature"]], "get_cluster_map() (dipy.segment.clusteringspeed.quickbundles method)": [[171, "dipy.segment.clusteringspeed.QuickBundles.get_cluster_map"]], "get_clusters() (dipy.segment.clustering.treeclustermap method)": [[171, "dipy.segment.clustering.TreeClusterMap.get_clusters"]], "get_clusters() (dipy.segment.clusteringspeed.treeclustermap method)": [[171, "dipy.segment.clusteringspeed.TreeClusterMap.get_clusters"]], "get_large_clusters() (dipy.segment.clustering.clustermap method)": [[171, "dipy.segment.clustering.ClusterMap.get_large_clusters"]], "get_small_clusters() (dipy.segment.clustering.clustermap method)": [[171, "dipy.segment.clustering.ClusterMap.get_small_clusters"]], "get_stats() (dipy.segment.clusteringspeed.quickbundles method)": [[171, "dipy.segment.clusteringspeed.QuickBundles.get_stats"]], "get_stats() (dipy.segment.clusteringspeed.quickbundlesx method)": [[171, "dipy.segment.clusteringspeed.QuickBundlesX.get_stats"]], "get_tree_cluster_map() (dipy.segment.clusteringspeed.quickbundlesx method)": [[171, "dipy.segment.clusteringspeed.QuickBundlesX.get_tree_cluster_map"]], "icm_ising() (dipy.segment.mrf.iteratedconditionalmodes method)": [[171, "dipy.segment.mrf.IteratedConditionalModes.icm_ising"]], "infer_shape() (dipy.segment.featurespeed.cythonfeature method)": [[171, "dipy.segment.featurespeed.CythonFeature.infer_shape"]], "infer_shape() (dipy.segment.featurespeed.feature method)": [[171, "dipy.segment.featurespeed.Feature.infer_shape"]], "infer_shape() (in module dipy.segment.featurespeed)": [[171, "dipy.segment.featurespeed.infer_shape"]], "initialize_maximum_likelihood() (dipy.segment.mrf.iteratedconditionalmodes method)": [[171, "dipy.segment.mrf.IteratedConditionalModes.initialize_maximum_likelihood"]], "initialize_param_uniform() (dipy.segment.mrf.constantobservationmodel method)": [[171, "dipy.segment.mrf.ConstantObservationModel.initialize_param_uniform"]], "insert() (dipy.segment.clusteringspeed.quickbundlesx method)": [[171, "dipy.segment.clusteringspeed.QuickBundlesX.insert"]], "is_leaf (dipy.segment.clustering.treecluster property)": [[171, "dipy.segment.clustering.TreeCluster.is_leaf"]], "is_leaf (dipy.segment.clusteringspeed.treecluster property)": [[171, "dipy.segment.clusteringspeed.TreeCluster.is_leaf"]], "is_order_invariant (dipy.segment.featurespeed.feature attribute)": [[171, "dipy.segment.featurespeed.Feature.is_order_invariant"]], "is_order_invariant (dipy.segment.metricspeed.metric attribute)": [[171, "dipy.segment.metricspeed.Metric.is_order_invariant"]], "is_order_invariant (dipy.segment.metricspeed.minimumaveragedirectflipmetric attribute)": [[171, "dipy.segment.metricspeed.MinimumAverageDirectFlipMetric.is_order_invariant"]], "iter_preorder() (dipy.segment.clustering.treeclustermap method)": [[171, "dipy.segment.clustering.TreeClusterMap.iter_preorder"]], "iter_preorder() (dipy.segment.clusteringspeed.treeclustermap method)": [[171, "dipy.segment.clusteringspeed.TreeClusterMap.iter_preorder"]], "logger() (in module dipy.segment.bundles)": [[171, "dipy.segment.bundles.logger"]], "logger() (in module dipy.segment.clustering)": [[171, "dipy.segment.clustering.logger"]], "mdf() (in module dipy.segment.metric)": [[171, "dipy.segment.metric.mdf"]], "mean_euclidean_distance() (in module dipy.segment.metric)": [[171, "dipy.segment.metric.mean_euclidean_distance"]], "mean_manhattan_distance() (in module dipy.segment.metric)": [[171, "dipy.segment.metric.mean_manhattan_distance"]], "median_otsu() (in module dipy.segment.mask)": [[171, "dipy.segment.mask.median_otsu"]], "multi_median() (in module dipy.segment.mask)": [[171, "dipy.segment.mask.multi_median"]], "nearest_from_matrix_col() (in module dipy.segment.fss)": [[171, "dipy.segment.fss.nearest_from_matrix_col"]], "nearest_from_matrix_row() (in module dipy.segment.fss)": [[171, "dipy.segment.fss.nearest_from_matrix_row"]], "negloglikelihood() (dipy.segment.mrf.constantobservationmodel method)": [[171, "dipy.segment.mrf.ConstantObservationModel.negloglikelihood"]], "otsu() (in module dipy.segment.threshold)": [[171, "dipy.segment.threshold.otsu"]], "peek() (in module dipy.segment.clustering_algorithms)": [[171, "dipy.segment.clustering_algorithms.peek"]], "prob_image() (dipy.segment.mrf.constantobservationmodel method)": [[171, "dipy.segment.mrf.ConstantObservationModel.prob_image"]], "prob_neighborhood() (dipy.segment.mrf.iteratedconditionalmodes method)": [[171, "dipy.segment.mrf.IteratedConditionalModes.prob_neighborhood"]], "qbx_and_merge() (in module dipy.segment.clustering)": [[171, "dipy.segment.clustering.qbx_and_merge"]], "quickbundles() (in module dipy.segment.clustering_algorithms)": [[171, "dipy.segment.clustering_algorithms.quickbundles"]], "quickbundlesx() (in module dipy.segment.clustering_algorithms)": [[171, "dipy.segment.clustering_algorithms.quickbundlesx"]], "radius_search() (dipy.segment.fss.faststreamlinesearch method)": [[171, "dipy.segment.fss.FastStreamlineSearch.radius_search"]], "recognize() (dipy.segment.bundles.recobundles method)": [[171, "dipy.segment.bundles.RecoBundles.recognize"]], "refdata (dipy.segment.clustering.clustermap property)": [[171, "dipy.segment.clustering.ClusterMap.refdata"]], "refdata (dipy.segment.clustering.treeclustermap property)": [[171, "dipy.segment.clustering.TreeClusterMap.refdata"]], "refdata (dipy.segment.clusteringspeed.treeclustermap property)": [[171, "dipy.segment.clusteringspeed.TreeClusterMap.refdata"]], "refine() (dipy.segment.bundles.recobundles method)": [[171, "dipy.segment.bundles.RecoBundles.refine"]], "remove_cluster() (dipy.segment.clustering.clustermap method)": [[171, "dipy.segment.clustering.ClusterMap.remove_cluster"]], "return_indices() (dipy.segment.clustering.treecluster method)": [[171, "dipy.segment.clustering.TreeCluster.return_indices"]], "return_indices() (dipy.segment.clusteringspeed.treecluster method)": [[171, "dipy.segment.clusteringspeed.TreeCluster.return_indices"]], "seg_stats() (dipy.segment.mrf.constantobservationmodel method)": [[171, "dipy.segment.mrf.ConstantObservationModel.seg_stats"]], "segment_from_cfa() (in module dipy.segment.mask)": [[171, "dipy.segment.mask.segment_from_cfa"]], "size() (dipy.segment.clustering.clustermap method)": [[171, "dipy.segment.clustering.ClusterMap.size"]], "traverse_postorder() (dipy.segment.clustering.treeclustermap method)": [[171, "dipy.segment.clustering.TreeClusterMap.traverse_postorder"]], "traverse_postorder() (dipy.segment.clusteringspeed.treeclustermap method)": [[171, "dipy.segment.clusteringspeed.TreeClusterMap.traverse_postorder"]], "update() (dipy.segment.clustering.clustercentroid method)": [[171, "dipy.segment.clustering.ClusterCentroid.update"]], "update() (dipy.segment.clustering_algorithms.clustercentroid method)": [[171, "dipy.segment.clustering_algorithms.ClusterCentroid.update"]], "update() (dipy.segment.clusteringspeed.clustercentroid method)": [[171, "dipy.segment.clusteringspeed.ClusterCentroid.update"]], "update_param() (dipy.segment.mrf.constantobservationmodel method)": [[171, "dipy.segment.mrf.ConstantObservationModel.update_param"]], "upper_bound_by_percent() (in module dipy.segment.threshold)": [[171, "dipy.segment.threshold.upper_bound_by_percent"]], "upper_bound_by_rate() (in module dipy.segment.threshold)": [[171, "dipy.segment.threshold.upper_bound_by_rate"]], "add_noise() (in module dipy.sims.phantom)": [[172, "dipy.sims.phantom.add_noise"]], "add_noise() (in module dipy.sims.voxel)": [[172, "dipy.sims.voxel.add_noise"]], "all_tensor_evecs() (in module dipy.sims.voxel)": [[172, "dipy.sims.voxel.all_tensor_evecs"]], "callaghan_perpendicular() (in module dipy.sims.voxel)": [[172, "dipy.sims.voxel.callaghan_perpendicular"]], "cylinders_and_ball_soderman() (in module dipy.sims.voxel)": [[172, "dipy.sims.voxel.cylinders_and_ball_soderman"]], "diff2eigenvectors() (in module dipy.sims.phantom)": [[172, "dipy.sims.phantom.diff2eigenvectors"]], "diffusion_evals() (in module dipy.sims.voxel)": [[172, "dipy.sims.voxel.diffusion_evals"]], "dipy.sims": [[172, "module-dipy.sims"]], "dipy.sims.phantom": [[172, "module-dipy.sims.phantom"]], "dipy.sims.voxel": [[172, "module-dipy.sims.voxel"]], "dki_signal() (in module dipy.sims.voxel)": [[172, "dipy.sims.voxel.dki_signal"]], "gaussian_parallel() (in module dipy.sims.voxel)": [[172, "dipy.sims.voxel.gaussian_parallel"]], "kurtosis_element() (in module dipy.sims.voxel)": [[172, "dipy.sims.voxel.kurtosis_element"]], "multi_tensor() (in module dipy.sims.voxel)": [[172, "dipy.sims.voxel.multi_tensor"]], "multi_tensor_dki() (in module dipy.sims.voxel)": [[172, "dipy.sims.voxel.multi_tensor_dki"]], "multi_tensor_msd() (in module dipy.sims.voxel)": [[172, "dipy.sims.voxel.multi_tensor_msd"]], "multi_tensor_odf() (in module dipy.sims.voxel)": [[172, "dipy.sims.voxel.multi_tensor_odf"]], "multi_tensor_pdf() (in module dipy.sims.voxel)": [[172, "dipy.sims.voxel.multi_tensor_pdf"]], "multi_tensor_rtop() (in module dipy.sims.voxel)": [[172, "dipy.sims.voxel.multi_tensor_rtop"]], "orbital_phantom() (in module dipy.sims.phantom)": [[172, "dipy.sims.phantom.orbital_phantom"]], "single_tensor() (in module dipy.sims.voxel)": [[172, "dipy.sims.voxel.single_tensor"]], "single_tensor_msd() (in module dipy.sims.voxel)": [[172, "dipy.sims.voxel.single_tensor_msd"]], "single_tensor_odf() (in module dipy.sims.voxel)": [[172, "dipy.sims.voxel.single_tensor_odf"]], "single_tensor_pdf() (in module dipy.sims.voxel)": [[172, "dipy.sims.voxel.single_tensor_pdf"]], "single_tensor_rtop() (in module dipy.sims.voxel)": [[172, "dipy.sims.voxel.single_tensor_rtop"]], "sticks_and_ball() (in module dipy.sims.voxel)": [[172, "dipy.sims.voxel.sticks_and_ball"]], "afq_profile() (in module dipy.stats.analysis)": [[173, "dipy.stats.analysis.afq_profile"]], "anatomical_measures() (in module dipy.stats.analysis)": [[173, "dipy.stats.analysis.anatomical_measures"]], "assignment_map() (in module dipy.stats.analysis)": [[173, "dipy.stats.analysis.assignment_map"]], "dipy.stats": [[173, "module-dipy.stats"]], "dipy.stats.analysis": [[173, "module-dipy.stats.analysis"]], "gaussian_weights() (in module dipy.stats.analysis)": [[173, "dipy.stats.analysis.gaussian_weights"]], "peak_values() (in module dipy.stats.analysis)": [[173, "dipy.stats.analysis.peak_values"]], "actstoppingcriterion (class in dipy.tracking.stopping_criterion)": [[174, "dipy.tracking.stopping_criterion.ActStoppingCriterion"]], "anatomicalstoppingcriterion (class in dipy.tracking.stopping_criterion)": [[174, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion"]], "binarystoppingcriterion (class in dipy.tracking.stopping_criterion)": [[174, "dipy.tracking.stopping_criterion.BinaryStoppingCriterion"]], "cmcstoppingcriterion (class in dipy.tracking.stopping_criterion)": [[174, "dipy.tracking.stopping_criterion.CmcStoppingCriterion"]], "directiongetter (class in dipy.tracking.direction_getter)": [[174, "dipy.tracking.direction_getter.DirectionGetter"]], "endpoint (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[174, "dipy.tracking.stopping_criterion.StreamlineStatus.ENDPOINT"]], "fbcmeasures (class in dipy.tracking.fbcmeasures)": [[174, "dipy.tracking.fbcmeasures.FBCMeasures"]], "fiberfit (class in dipy.tracking.life)": [[174, "dipy.tracking.life.FiberFit"]], "fibermodel (class in dipy.tracking.life)": [[174, "dipy.tracking.life.FiberModel"]], "invalidpoint (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[174, "dipy.tracking.stopping_criterion.StreamlineStatus.INVALIDPOINT"]], "kdtree (class in dipy.tracking.fbcmeasures)": [[174, "dipy.tracking.fbcmeasures.KDTree"]], "kdtree.innernode (class in dipy.tracking.fbcmeasures)": [[174, "dipy.tracking.fbcmeasures.KDTree.innernode"]], "kdtree.leafnode (class in dipy.tracking.fbcmeasures)": [[174, "dipy.tracking.fbcmeasures.KDTree.leafnode"]], "kdtree.node (class in dipy.tracking.fbcmeasures)": [[174, "dipy.tracking.fbcmeasures.KDTree.node"]], "lifesignalmaker (class in dipy.tracking.life)": [[174, "dipy.tracking.life.LifeSignalMaker"]], "localtracking (class in dipy.tracking.local_tracking)": [[174, "dipy.tracking.local_tracking.LocalTracking"]], "outsideimage (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[174, "dipy.tracking.stopping_criterion.StreamlineStatus.OUTSIDEIMAGE"]], "pyerror (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[174, "dipy.tracking.stopping_criterion.StreamlineStatus.PYERROR"]], "particlefilteringtracking (class in dipy.tracking.local_tracking)": [[174, "dipy.tracking.local_tracking.ParticleFilteringTracking"]], "stoppingcriterion (class in dipy.tracking.stopping_criterion)": [[174, "dipy.tracking.stopping_criterion.StoppingCriterion"]], "streamlinestatus (class in dipy.tracking.stopping_criterion)": [[174, "dipy.tracking.stopping_criterion.StreamlineStatus"]], "streamlines (in module dipy.tracking.streamlinespeed)": [[174, "dipy.tracking.streamlinespeed.Streamlines"]], "trackpoint (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[174, "dipy.tracking.stopping_criterion.StreamlineStatus.TRACKPOINT"]], "thresholdstoppingcriterion (class in dipy.tracking.stopping_criterion)": [[174, "dipy.tracking.stopping_criterion.ThresholdStoppingCriterion"]], "__init__() (dipy.tracking.direction_getter.directiongetter method)": [[174, "dipy.tracking.direction_getter.DirectionGetter.__init__"]], "__init__() (dipy.tracking.fbcmeasures.fbcmeasures method)": [[174, "dipy.tracking.fbcmeasures.FBCMeasures.__init__"]], "__init__() (dipy.tracking.fbcmeasures.kdtree method)": [[174, "dipy.tracking.fbcmeasures.KDTree.__init__"]], "__init__() (dipy.tracking.fbcmeasures.interp1d method)": [[174, "dipy.tracking.fbcmeasures.interp1d.__init__"]], "__init__() (dipy.tracking.life.fiberfit method)": [[174, "dipy.tracking.life.FiberFit.__init__"]], "__init__() (dipy.tracking.life.fibermodel method)": [[174, "dipy.tracking.life.FiberModel.__init__"]], "__init__() (dipy.tracking.life.lifesignalmaker method)": [[174, "dipy.tracking.life.LifeSignalMaker.__init__"]], "__init__() (dipy.tracking.local_tracking.localtracking method)": [[174, "dipy.tracking.local_tracking.LocalTracking.__init__"]], "__init__() (dipy.tracking.local_tracking.particlefilteringtracking method)": [[174, "dipy.tracking.local_tracking.ParticleFilteringTracking.__init__"]], "__init__() (dipy.tracking.stopping_criterion.actstoppingcriterion method)": [[174, "dipy.tracking.stopping_criterion.ActStoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.anatomicalstoppingcriterion method)": [[174, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.binarystoppingcriterion method)": [[174, "dipy.tracking.stopping_criterion.BinaryStoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.cmcstoppingcriterion method)": [[174, "dipy.tracking.stopping_criterion.CmcStoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.stoppingcriterion method)": [[174, "dipy.tracking.stopping_criterion.StoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.streamlinestatus method)": [[174, "dipy.tracking.stopping_criterion.StreamlineStatus.__init__"]], "__init__() (dipy.tracking.stopping_criterion.thresholdstoppingcriterion method)": [[174, "dipy.tracking.stopping_criterion.ThresholdStoppingCriterion.__init__"]], "add_3vecs() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.add_3vecs"]], "approx_polygon_track() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.approx_polygon_track"]], "approximate_mdl_trajectory() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.approximate_mdl_trajectory"]], "arbitrarypoint() (in module dipy.tracking.metrics)": [[174, "dipy.tracking.metrics.arbitrarypoint"]], "bundles_distances_mam() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.bundles_distances_mam"]], "bundles_distances_mdf() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.bundles_distances_mdf"]], "bytes() (in module dipy.tracking.metrics)": [[174, "dipy.tracking.metrics.bytes"]], "calc_signal() (dipy.tracking.life.lifesignalmaker method)": [[174, "dipy.tracking.life.LifeSignalMaker.calc_signal"]], "center_of_mass() (in module dipy.tracking.metrics)": [[174, "dipy.tracking.metrics.center_of_mass"]], "center_streamlines() (in module dipy.tracking.streamline)": [[174, "dipy.tracking.streamline.center_streamlines"]], "check_point() (dipy.tracking.stopping_criterion.stoppingcriterion method)": [[174, "dipy.tracking.stopping_criterion.StoppingCriterion.check_point"]], "children (dipy.tracking.fbcmeasures.kdtree.innernode property)": [[174, "dipy.tracking.fbcmeasures.KDTree.innernode.children"]], "children (dipy.tracking.fbcmeasures.kdtree.leafnode property)": [[174, "dipy.tracking.fbcmeasures.KDTree.leafnode.children"]], "cluster_confidence() (in module dipy.tracking.streamline)": [[174, "dipy.tracking.streamline.cluster_confidence"]], "compress_streamlines() (in module dipy.tracking.streamlinespeed)": [[174, "dipy.tracking.streamlinespeed.compress_streamlines"]], "compute_rfbc() (in module dipy.tracking.fbcmeasures)": [[174, "dipy.tracking.fbcmeasures.compute_rfbc"]], "connectivity_matrix() (in module dipy.tracking.utils)": [[174, "dipy.tracking.utils.connectivity_matrix"]], "count_neighbors() (dipy.tracking.fbcmeasures.kdtree method)": [[174, "dipy.tracking.fbcmeasures.KDTree.count_neighbors"]], "cut_plane() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.cut_plane"]], "deform_streamlines() (in module dipy.tracking.streamline)": [[174, "dipy.tracking.streamline.deform_streamlines"]], "density_map() (in module dipy.tracking.utils)": [[174, "dipy.tracking.utils.density_map"]], "detect_corresponding_tracks() (in module dipy.tracking.learning)": [[174, "dipy.tracking.learning.detect_corresponding_tracks"]], "detect_corresponding_tracks_plus() (in module dipy.tracking.learning)": [[174, "dipy.tracking.learning.detect_corresponding_tracks_plus"]], "determine_num_threads() (in module dipy.tracking.fbcmeasures)": [[174, "dipy.tracking.fbcmeasures.determine_num_threads"]], "dipy.tracking": [[174, "module-dipy.tracking"]], "dipy.tracking._utils": [[174, "module-dipy.tracking._utils"]], "dipy.tracking.direction_getter": [[174, "module-dipy.tracking.direction_getter"]], "dipy.tracking.distances": [[174, "module-dipy.tracking.distances"]], "dipy.tracking.fbcmeasures": [[174, "module-dipy.tracking.fbcmeasures"]], "dipy.tracking.learning": [[174, "module-dipy.tracking.learning"]], "dipy.tracking.life": [[174, "module-dipy.tracking.life"]], "dipy.tracking.local_tracking": [[174, "module-dipy.tracking.local_tracking"]], "dipy.tracking.localtrack": [[174, "module-dipy.tracking.localtrack"]], "dipy.tracking.mesh": [[174, "module-dipy.tracking.mesh"]], "dipy.tracking.metrics": [[174, "module-dipy.tracking.metrics"]], "dipy.tracking.propspeed": [[174, "module-dipy.tracking.propspeed"]], "dipy.tracking.stopping_criterion": [[174, "module-dipy.tracking.stopping_criterion"]], "dipy.tracking.streamline": [[174, "module-dipy.tracking.streamline"]], "dipy.tracking.streamlinespeed": [[174, "module-dipy.tracking.streamlinespeed"]], "dipy.tracking.utils": [[174, "module-dipy.tracking.utils"]], "dipy.tracking.vox2track": [[174, "module-dipy.tracking.vox2track"]], "downsample() (in module dipy.tracking.metrics)": [[174, "dipy.tracking.metrics.downsample"]], "dtype (dipy.tracking.fbcmeasures.interp1d attribute)": [[174, "dipy.tracking.fbcmeasures.interp1d.dtype"]], "endpoint() (in module dipy.tracking.metrics)": [[174, "dipy.tracking.metrics.endpoint"]], "eudx_both_directions() (in module dipy.tracking.propspeed)": [[174, "dipy.tracking.propspeed.eudx_both_directions"]], "fill_value (dipy.tracking.fbcmeasures.interp1d property)": [[174, "dipy.tracking.fbcmeasures.interp1d.fill_value"]], "fit() (dipy.tracking.life.fibermodel method)": [[174, "dipy.tracking.life.FiberModel.fit"]], "frenet_serret() (in module dipy.tracking.metrics)": [[174, "dipy.tracking.metrics.frenet_serret"]], "from_pve() (dipy.tracking.stopping_criterion.anatomicalstoppingcriterion class method)": [[174, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion.from_pve"]], "generate_combinations() (in module dipy.tracking.metrics)": [[174, "dipy.tracking.metrics.generate_combinations"]], "generate_streamline() (dipy.tracking.direction_getter.directiongetter method)": [[174, "dipy.tracking.direction_getter.DirectionGetter.generate_streamline"]], "get_direction() (dipy.tracking.direction_getter.directiongetter method)": [[174, "dipy.tracking.direction_getter.DirectionGetter.get_direction"]], "get_exclude() (dipy.tracking.stopping_criterion.anatomicalstoppingcriterion method)": [[174, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion.get_exclude"]], "get_include() (dipy.tracking.stopping_criterion.anatomicalstoppingcriterion method)": [[174, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion.get_include"]], "get_points_rfbc_thresholded() (dipy.tracking.fbcmeasures.fbcmeasures method)": [[174, "dipy.tracking.fbcmeasures.FBCMeasures.get_points_rfbc_thresholded"]], "grad_tensor() (in module dipy.tracking.life)": [[174, "dipy.tracking.life.grad_tensor"]], "gradient() (in module dipy.tracking.life)": [[174, "dipy.tracking.life.gradient"]], "idx (dipy.tracking.fbcmeasures.kdtree.leafnode property)": [[174, "dipy.tracking.fbcmeasures.KDTree.leafnode.idx"]], "initial_direction() (dipy.tracking.direction_getter.directiongetter method)": [[174, "dipy.tracking.direction_getter.DirectionGetter.initial_direction"]], "inner_3vecs() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.inner_3vecs"]], "inside_sphere() (in module dipy.tracking.metrics)": [[174, "dipy.tracking.metrics.inside_sphere"]], "inside_sphere_points() (in module dipy.tracking.metrics)": [[174, "dipy.tracking.metrics.inside_sphere_points"]], "interp1d (class in dipy.tracking.fbcmeasures)": [[174, "dipy.tracking.fbcmeasures.interp1d"]], "intersect_segment_cylinder() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.intersect_segment_cylinder"]], "intersect_sphere() (in module dipy.tracking.metrics)": [[174, "dipy.tracking.metrics.intersect_sphere"]], "larch_3merge() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.larch_3merge"]], "larch_3split() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.larch_3split"]], "lee_angle_distance() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.lee_angle_distance"]], "lee_perpendicular_distance() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.lee_perpendicular_distance"]], "length() (in module dipy.tracking.metrics)": [[174, "dipy.tracking.metrics.length"]], "length() (in module dipy.tracking.streamlinespeed)": [[174, "dipy.tracking.streamlinespeed.length"]], "length() (in module dipy.tracking.utils)": [[174, "dipy.tracking.utils.length"]], "local_skeleton_clustering() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.local_skeleton_clustering"]], "local_skeleton_clustering_3pts() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.local_skeleton_clustering_3pts"]], "local_tracker() (in module dipy.tracking.localtrack)": [[174, "dipy.tracking.localtrack.local_tracker"]], "longest_track_bundle() (in module dipy.tracking.metrics)": [[174, "dipy.tracking.metrics.longest_track_bundle"]], "magn() (in module dipy.tracking.metrics)": [[174, "dipy.tracking.metrics.magn"]], "mam_distances() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.mam_distances"]], "max_angle_from_curvature() (in module dipy.tracking.utils)": [[174, "dipy.tracking.utils.max_angle_from_curvature"]], "mean_curvature() (in module dipy.tracking.metrics)": [[174, "dipy.tracking.metrics.mean_curvature"]], "mean_orientation() (in module dipy.tracking.metrics)": [[174, "dipy.tracking.metrics.mean_orientation"]], "midpoint() (in module dipy.tracking.metrics)": [[174, "dipy.tracking.metrics.midpoint"]], "midpoint2point() (in module dipy.tracking.metrics)": [[174, "dipy.tracking.metrics.midpoint2point"]], "min_moving_average() (in module dipy.tracking.fbcmeasures)": [[174, "dipy.tracking.fbcmeasures.min_moving_average"]], "min_radius_curvature_from_angle() (in module dipy.tracking.utils)": [[174, "dipy.tracking.utils.min_radius_curvature_from_angle"]], "minimum_closest_distance() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.minimum_closest_distance"]], "most_similar_track_mam() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.most_similar_track_mam"]], "mul_3vec() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.mul_3vec"]], "mul_3vecs() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.mul_3vecs"]], "nbytes() (in module dipy.tracking.streamline)": [[174, "dipy.tracking.streamline.nbytes"]], "ndarray_offset() (in module dipy.tracking.propspeed)": [[174, "dipy.tracking.propspeed.ndarray_offset"]], "ndbincount() (in module dipy.tracking.utils)": [[174, "dipy.tracking.utils.ndbincount"]], "near_roi() (in module dipy.tracking.utils)": [[174, "dipy.tracking.utils.near_roi"]], "norm_3vec() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.norm_3vec"]], "normalized_3vec() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.normalized_3vec"]], "orient_by_rois() (in module dipy.tracking.streamline)": [[174, "dipy.tracking.streamline.orient_by_rois"]], "orient_by_streamline() (in module dipy.tracking.streamline)": [[174, "dipy.tracking.streamline.orient_by_streamline"]], "path_length() (in module dipy.tracking.utils)": [[174, "dipy.tracking.utils.path_length"]], "pft_tracker() (in module dipy.tracking.localtrack)": [[174, "dipy.tracking.localtrack.pft_tracker"]], "point_segment_sq_distance() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.point_segment_sq_distance"]], "point_track_sq_distance_check() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.point_track_sq_distance_check"]], "predict() (dipy.tracking.life.fiberfit method)": [[174, "dipy.tracking.life.FiberFit.predict"]], "principal_components() (in module dipy.tracking.metrics)": [[174, "dipy.tracking.metrics.principal_components"]], "query() (dipy.tracking.fbcmeasures.kdtree method)": [[174, "dipy.tracking.fbcmeasures.KDTree.query"]], "query_ball_point() (dipy.tracking.fbcmeasures.kdtree method)": [[174, "dipy.tracking.fbcmeasures.KDTree.query_ball_point"]], "query_ball_tree() (dipy.tracking.fbcmeasures.kdtree method)": [[174, "dipy.tracking.fbcmeasures.KDTree.query_ball_tree"]], "query_pairs() (dipy.tracking.fbcmeasures.kdtree method)": [[174, "dipy.tracking.fbcmeasures.KDTree.query_pairs"]], "random() (in module dipy.tracking.localtrack)": [[174, "dipy.tracking.localtrack.random"]], "random_coordinates_from_surface() (in module dipy.tracking.mesh)": [[174, "dipy.tracking.mesh.random_coordinates_from_surface"]], "random_seeds_from_mask() (in module dipy.tracking.utils)": [[174, "dipy.tracking.utils.random_seeds_from_mask"]], "reduce_labels() (in module dipy.tracking.utils)": [[174, "dipy.tracking.utils.reduce_labels"]], "reduce_rois() (in module dipy.tracking.utils)": [[174, "dipy.tracking.utils.reduce_rois"]], "relist_streamlines() (in module dipy.tracking.streamline)": [[174, "dipy.tracking.streamline.relist_streamlines"]], "seeds_from_mask() (in module dipy.tracking.utils)": [[174, "dipy.tracking.utils.seeds_from_mask"]], "seeds_from_surface_coordinates() (in module dipy.tracking.mesh)": [[174, "dipy.tracking.mesh.seeds_from_surface_coordinates"]], "select_by_rois() (in module dipy.tracking.streamline)": [[174, "dipy.tracking.streamline.select_by_rois"]], "select_random_set_of_streamlines() (in module dipy.tracking.streamline)": [[174, "dipy.tracking.streamline.select_random_set_of_streamlines"]], "set_number_of_points() (in module dipy.tracking.streamlinespeed)": [[174, "dipy.tracking.streamlinespeed.set_number_of_points"]], "setup() (dipy.tracking.life.fibermodel method)": [[174, "dipy.tracking.life.FiberModel.setup"]], "sparse_distance_matrix() (dipy.tracking.fbcmeasures.kdtree method)": [[174, "dipy.tracking.fbcmeasures.KDTree.sparse_distance_matrix"]], "spline() (in module dipy.tracking.metrics)": [[174, "dipy.tracking.metrics.spline"]], "split (dipy.tracking.fbcmeasures.kdtree.innernode property)": [[174, "dipy.tracking.fbcmeasures.KDTree.innernode.split"]], "split_dim (dipy.tracking.fbcmeasures.kdtree.innernode property)": [[174, "dipy.tracking.fbcmeasures.KDTree.innernode.split_dim"]], "startpoint() (in module dipy.tracking.metrics)": [[174, "dipy.tracking.metrics.startpoint"]], "streamline_gradients() (in module dipy.tracking.life)": [[174, "dipy.tracking.life.streamline_gradients"]], "streamline_mapping() (in module dipy.tracking.vox2track)": [[174, "dipy.tracking.vox2track.streamline_mapping"]], "streamline_near_roi() (in module dipy.tracking.utils)": [[174, "dipy.tracking.utils.streamline_near_roi"]], "streamline_signal() (dipy.tracking.life.lifesignalmaker method)": [[174, "dipy.tracking.life.LifeSignalMaker.streamline_signal"]], "streamline_signal() (in module dipy.tracking.life)": [[174, "dipy.tracking.life.streamline_signal"]], "streamline_tensors() (in module dipy.tracking.life)": [[174, "dipy.tracking.life.streamline_tensors"]], "sub_3vecs() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.sub_3vecs"]], "subsegment() (in module dipy.tracking.utils)": [[174, "dipy.tracking.utils.subsegment"]], "target() (in module dipy.tracking.utils)": [[174, "dipy.tracking.utils.target"]], "target_line_based() (in module dipy.tracking.utils)": [[174, "dipy.tracking.utils.target_line_based"]], "track_counts() (in module dipy.tracking.vox2track)": [[174, "dipy.tracking.vox2track.track_counts"]], "track_dist_3pts() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.track_dist_3pts"]], "track_roi_intersection_check() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.track_roi_intersection_check"]], "transform_streamlines() (in module dipy.tracking.streamline)": [[174, "dipy.tracking.streamline.transform_streamlines"]], "transform_tracking_output() (in module dipy.tracking.utils)": [[174, "dipy.tracking.utils.transform_tracking_output"]], "tree (dipy.tracking.fbcmeasures.kdtree property)": [[174, "dipy.tracking.fbcmeasures.KDTree.tree"]], "triangles_area() (in module dipy.tracking.mesh)": [[174, "dipy.tracking.mesh.triangles_area"]], "unique_rows() (in module dipy.tracking.utils)": [[174, "dipy.tracking.utils.unique_rows"]], "unlist_streamlines() (in module dipy.tracking.streamline)": [[174, "dipy.tracking.streamline.unlist_streamlines"]], "values_from_volume() (in module dipy.tracking.streamline)": [[174, "dipy.tracking.streamline.values_from_volume"]], "vertices_to_triangles_values() (in module dipy.tracking.mesh)": [[174, "dipy.tracking.mesh.vertices_to_triangles_values"]], "voxel2streamline() (in module dipy.tracking.life)": [[174, "dipy.tracking.life.voxel2streamline"]], "warn() (in module dipy.tracking.distances)": [[174, "dipy.tracking.distances.warn"]], "winding() (in module dipy.tracking.metrics)": [[174, "dipy.tracking.metrics.winding"]], "clusterstab (class in dipy.viz.horizon.tab.cluster)": [[175, "dipy.viz.horizon.tab.cluster.ClustersTab"]], "clustersvisualizer (class in dipy.viz.horizon.visualizer.cluster)": [[175, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer"]], "globalhorizon (class in dipy.viz.gmem)": [[175, "dipy.viz.gmem.GlobalHorizon"]], "horizon (class in dipy.viz.horizon.app)": [[175, "dipy.viz.horizon.app.Horizon"]], "horizontab (class in dipy.viz.horizon.tab.base)": [[175, "dipy.viz.horizon.tab.base.HorizonTab"]], "horizonuielement (class in dipy.viz.horizon.tab.base)": [[175, "dipy.viz.horizon.tab.base.HorizonUIElement"]], "peakactor (class in dipy.viz.horizon.visualizer.peak)": [[175, "dipy.viz.horizon.visualizer.peak.PeakActor"]], "peakstab (class in dipy.viz.horizon.tab.peak)": [[175, "dipy.viz.horizon.tab.peak.PeaksTab"]], "peaksvisualizer (class in dipy.viz.horizon.visualizer.peak)": [[175, "dipy.viz.horizon.visualizer.peak.PeaksVisualizer"]], "roistab (class in dipy.viz.horizon.tab.roi)": [[175, "dipy.viz.horizon.tab.roi.ROIsTab"]], "slicestab (class in dipy.viz.horizon.tab.slice)": [[175, "dipy.viz.horizon.tab.slice.SlicesTab"]], "slicesvisualizer (class in dipy.viz.horizon.visualizer.slice)": [[175, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer"]], "surfacetab (class in dipy.viz.horizon.tab.surface)": [[175, "dipy.viz.horizon.tab.surface.SurfaceTab"]], "surfacevisualizer (class in dipy.viz.horizon.visualizer.surface)": [[175, "dipy.viz.horizon.visualizer.surface.SurfaceVisualizer"]], "tabmanager (class in dipy.viz.horizon.tab.base)": [[175, "dipy.viz.horizon.tab.base.TabManager"]], "__init__() (dipy.viz.gmem.globalhorizon method)": [[175, "dipy.viz.gmem.GlobalHorizon.__init__"]], "__init__() (dipy.viz.horizon.app.horizon method)": [[175, "dipy.viz.horizon.app.Horizon.__init__"]], "__init__() (dipy.viz.horizon.tab.base.horizontab method)": [[175, "dipy.viz.horizon.tab.base.HorizonTab.__init__"]], "__init__() (dipy.viz.horizon.tab.base.horizonuielement method)": [[175, "dipy.viz.horizon.tab.base.HorizonUIElement.__init__"]], "__init__() (dipy.viz.horizon.tab.base.tabmanager method)": [[175, "dipy.viz.horizon.tab.base.TabManager.__init__"]], "__init__() (dipy.viz.horizon.tab.cluster.clusterstab method)": [[175, "dipy.viz.horizon.tab.cluster.ClustersTab.__init__"]], "__init__() (dipy.viz.horizon.tab.peak.peakstab method)": [[175, "dipy.viz.horizon.tab.peak.PeaksTab.__init__"]], "__init__() (dipy.viz.horizon.tab.roi.roistab method)": [[175, "dipy.viz.horizon.tab.roi.ROIsTab.__init__"]], "__init__() (dipy.viz.horizon.tab.slice.slicestab method)": [[175, "dipy.viz.horizon.tab.slice.SlicesTab.__init__"]], "__init__() (dipy.viz.horizon.tab.surface.surfacetab method)": [[175, "dipy.viz.horizon.tab.surface.SurfaceTab.__init__"]], "__init__() (dipy.viz.horizon.visualizer.cluster.clustersvisualizer method)": [[175, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.__init__"]], "__init__() (dipy.viz.horizon.visualizer.peak.peakactor method)": [[175, "dipy.viz.horizon.visualizer.peak.PeakActor.__init__"]], "__init__() (dipy.viz.horizon.visualizer.peak.peaksvisualizer method)": [[175, "dipy.viz.horizon.visualizer.peak.PeaksVisualizer.__init__"]], "__init__() (dipy.viz.horizon.visualizer.slice.slicesvisualizer method)": [[175, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.__init__"]], "__init__() (dipy.viz.horizon.visualizer.surface.surfacevisualizer method)": [[175, "dipy.viz.horizon.visualizer.surface.SurfaceVisualizer.__init__"]], "actors (dipy.viz.horizon.tab.peak.peakstab property)": [[175, "dipy.viz.horizon.tab.peak.PeaksTab.actors"]], "actors (dipy.viz.horizon.tab.slice.slicestab property)": [[175, "dipy.viz.horizon.tab.slice.SlicesTab.actors"]], "actors (dipy.viz.horizon.tab.surface.surfacetab property)": [[175, "dipy.viz.horizon.tab.surface.SurfaceTab.actors"]], "actors (dipy.viz.horizon.visualizer.peak.peaksvisualizer property)": [[175, "dipy.viz.horizon.visualizer.peak.PeaksVisualizer.actors"]], "actors (dipy.viz.horizon.visualizer.surface.surfacevisualizer property)": [[175, "dipy.viz.horizon.visualizer.surface.SurfaceVisualizer.actors"]], "add_cluster_actors() (dipy.viz.horizon.visualizer.cluster.clustersvisualizer method)": [[175, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.add_cluster_actors"]], "build() (dipy.viz.horizon.tab.base.horizontab method)": [[175, "dipy.viz.horizon.tab.base.HorizonTab.build"]], "build() (dipy.viz.horizon.tab.cluster.clusterstab method)": [[175, "dipy.viz.horizon.tab.cluster.ClustersTab.build"]], "build() (dipy.viz.horizon.tab.peak.peakstab method)": [[175, "dipy.viz.horizon.tab.peak.PeaksTab.build"]], "build() (dipy.viz.horizon.tab.roi.roistab method)": [[175, "dipy.viz.horizon.tab.roi.ROIsTab.build"]], "build() (dipy.viz.horizon.tab.slice.slicestab method)": [[175, "dipy.viz.horizon.tab.slice.SlicesTab.build"]], "build() (dipy.viz.horizon.tab.surface.surfacetab method)": [[175, "dipy.viz.horizon.tab.surface.SurfaceTab.build"]], "build_checkbox() (in module dipy.viz.horizon.tab.base)": [[175, "dipy.viz.horizon.tab.base.build_checkbox"]], "build_label() (in module dipy.viz.horizon.tab.base)": [[175, "dipy.viz.horizon.tab.base.build_label"]], "build_label() (in module dipy.viz.panel)": [[175, "dipy.viz.panel.build_label"]], "build_scene() (dipy.viz.horizon.app.horizon method)": [[175, "dipy.viz.horizon.app.Horizon.build_scene"]], "build_show() (dipy.viz.horizon.app.horizon method)": [[175, "dipy.viz.horizon.app.Horizon.build_show"]], "build_slider() (in module dipy.viz.horizon.tab.base)": [[175, "dipy.viz.horizon.tab.base.build_slider"]], "build_switcher() (in module dipy.viz.horizon.tab.base)": [[175, "dipy.viz.horizon.tab.base.build_switcher"]], "bundle_shape_profile() (in module dipy.viz.plotting)": [[175, "dipy.viz.plotting.bundle_shape_profile"]], "centroid_actors (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[175, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.centroid_actors"]], "change_volume() (dipy.viz.horizon.visualizer.slice.slicesvisualizer method)": [[175, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.change_volume"]], "check_img_dtype() (in module dipy.viz.horizon.util)": [[175, "dipy.viz.horizon.util.check_img_dtype"]], "check_img_shapes() (in module dipy.viz.horizon.util)": [[175, "dipy.viz.horizon.util.check_img_shapes"]], "check_peak_size() (in module dipy.viz.horizon.util)": [[175, "dipy.viz.horizon.util.check_peak_size"]], "cluster_actors (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[175, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.cluster_actors"]], "color_double_slider() (in module dipy.viz.horizon.tab.base)": [[175, "dipy.viz.horizon.tab.base.color_double_slider"]], "color_single_slider() (in module dipy.viz.horizon.tab.base)": [[175, "dipy.viz.horizon.tab.base.color_single_slider"]], "compare_maps() (in module dipy.viz.plotting)": [[175, "dipy.viz.plotting.compare_maps"]], "compare_qti_maps() (in module dipy.viz.plotting)": [[175, "dipy.viz.plotting.compare_qti_maps"]], "cross_section (dipy.viz.horizon.visualizer.peak.peakactor property)": [[175, "dipy.viz.horizon.visualizer.peak.PeakActor.cross_section"]], "data_shape (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[175, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.data_shape"]], "dipy.viz": [[175, "module-dipy.viz"]], "dipy.viz.gmem": [[175, "module-dipy.viz.gmem"]], "dipy.viz.horizon": [[175, "module-dipy.viz.horizon"]], "dipy.viz.horizon.app": [[175, "module-dipy.viz.horizon.app"]], "dipy.viz.horizon.tab": [[175, "module-dipy.viz.horizon.tab"]], "dipy.viz.horizon.tab.base": [[175, "module-dipy.viz.horizon.tab.base"]], "dipy.viz.horizon.tab.cluster": [[175, "module-dipy.viz.horizon.tab.cluster"]], "dipy.viz.horizon.tab.peak": [[175, "module-dipy.viz.horizon.tab.peak"]], "dipy.viz.horizon.tab.roi": [[175, "module-dipy.viz.horizon.tab.roi"]], "dipy.viz.horizon.tab.slice": [[175, "module-dipy.viz.horizon.tab.slice"]], "dipy.viz.horizon.tab.surface": [[175, "module-dipy.viz.horizon.tab.surface"]], "dipy.viz.horizon.util": [[175, "module-dipy.viz.horizon.util"]], "dipy.viz.horizon.visualizer": [[175, "module-dipy.viz.horizon.visualizer"]], "dipy.viz.horizon.visualizer.cluster": [[175, "module-dipy.viz.horizon.visualizer.cluster"]], "dipy.viz.horizon.visualizer.peak": [[175, "module-dipy.viz.horizon.visualizer.peak"]], "dipy.viz.horizon.visualizer.slice": [[175, "module-dipy.viz.horizon.visualizer.slice"]], "dipy.viz.horizon.visualizer.surface": [[175, "module-dipy.viz.horizon.visualizer.surface"]], "dipy.viz.panel": [[175, "module-dipy.viz.panel"]], "dipy.viz.plotting": [[175, "module-dipy.viz.plotting"]], "dipy.viz.projections": [[175, "module-dipy.viz.projections"]], "dipy.viz.regtools": [[175, "module-dipy.viz.regtools"]], "dipy.viz.streamline": [[175, "module-dipy.viz.streamline"]], "display_cross_section() (dipy.viz.horizon.visualizer.peak.peakactor method)": [[175, "dipy.viz.horizon.visualizer.peak.PeakActor.display_cross_section"]], "display_extent() (dipy.viz.horizon.visualizer.peak.peakactor method)": [[175, "dipy.viz.horizon.visualizer.peak.PeakActor.display_extent"]], "draw_lattice_2d() (in module dipy.viz.regtools)": [[175, "dipy.viz.regtools.draw_lattice_2d"]], "elements (dipy.viz.horizon.tab.base.horizontab property)": [[175, "dipy.viz.horizon.tab.base.HorizonTab.elements"]], "file_name (dipy.viz.horizon.tab.slice.slicestab property)": [[175, "dipy.viz.horizon.tab.slice.SlicesTab.file_name"]], "global_opacity (dipy.viz.horizon.visualizer.peak.peakactor property)": [[175, "dipy.viz.horizon.visualizer.peak.PeakActor.global_opacity"]], "handle_text_overflows() (dipy.viz.horizon.tab.base.tabmanager method)": [[175, "dipy.viz.horizon.tab.base.TabManager.handle_text_overflows"]], "high_ranges (dipy.viz.horizon.visualizer.peak.peakactor property)": [[175, "dipy.viz.horizon.visualizer.peak.PeakActor.high_ranges"]], "horizon() (in module dipy.viz.horizon.app)": [[175, "dipy.viz.horizon.app.horizon"]], "intensities_range (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[175, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.intensities_range"]], "is_binary_image() (in module dipy.viz.horizon.util)": [[175, "dipy.viz.horizon.util.is_binary_image"]], "is_range (dipy.viz.horizon.visualizer.peak.peakactor property)": [[175, "dipy.viz.horizon.visualizer.peak.PeakActor.is_range"]], "lengths (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[175, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.lengths"]], "linewidth (dipy.viz.horizon.visualizer.peak.peakactor property)": [[175, "dipy.viz.horizon.visualizer.peak.PeakActor.linewidth"]], "low_ranges (dipy.viz.horizon.visualizer.peak.peakactor property)": [[175, "dipy.viz.horizon.visualizer.peak.PeakActor.low_ranges"]], "max_centers (dipy.viz.horizon.visualizer.peak.peakactor property)": [[175, "dipy.viz.horizon.visualizer.peak.PeakActor.max_centers"]], "min_centers (dipy.viz.horizon.visualizer.peak.peakactor property)": [[175, "dipy.viz.horizon.visualizer.peak.PeakActor.min_centers"]], "name (dipy.viz.horizon.tab.base.horizontab property)": [[175, "dipy.viz.horizon.tab.base.HorizonTab.name"]], "name (dipy.viz.horizon.tab.cluster.clusterstab property)": [[175, "dipy.viz.horizon.tab.cluster.ClustersTab.name"]], "name (dipy.viz.horizon.tab.peak.peakstab property)": [[175, "dipy.viz.horizon.tab.peak.PeaksTab.name"]], "name (dipy.viz.horizon.tab.roi.roistab property)": [[175, "dipy.viz.horizon.tab.roi.ROIsTab.name"]], "name (dipy.viz.horizon.tab.slice.slicestab property)": [[175, "dipy.viz.horizon.tab.slice.SlicesTab.name"]], "name (dipy.viz.horizon.tab.surface.surfacetab property)": [[175, "dipy.viz.horizon.tab.surface.SurfaceTab.name"]], "obj (dipy.viz.horizon.tab.base.horizonuielement attribute)": [[175, "dipy.viz.horizon.tab.base.HorizonUIElement.obj"]], "on_tab_selected() (dipy.viz.horizon.tab.base.horizontab method)": [[175, "dipy.viz.horizon.tab.base.HorizonTab.on_tab_selected"]], "on_tab_selected() (dipy.viz.horizon.tab.peak.peakstab method)": [[175, "dipy.viz.horizon.tab.peak.PeaksTab.on_tab_selected"]], "on_tab_selected() (dipy.viz.horizon.tab.slice.slicestab method)": [[175, "dipy.viz.horizon.tab.slice.SlicesTab.on_tab_selected"]], "overlay_images() (in module dipy.viz.regtools)": [[175, "dipy.viz.regtools.overlay_images"]], "overlay_slices() (in module dipy.viz.regtools)": [[175, "dipy.viz.regtools.overlay_slices"]], "peak() (in module dipy.viz.horizon.visualizer.peak)": [[175, "dipy.viz.horizon.visualizer.peak.peak"]], "plot_2d_diffeomorphic_map() (in module dipy.viz.regtools)": [[175, "dipy.viz.regtools.plot_2d_diffeomorphic_map"]], "plot_slices() (in module dipy.viz.regtools)": [[175, "dipy.viz.regtools.plot_slices"]], "position (dipy.viz.horizon.tab.base.horizonuielement attribute)": [[175, "dipy.viz.horizon.tab.base.HorizonUIElement.position"]], "recluster_tractograms() (dipy.viz.horizon.visualizer.cluster.clustersvisualizer method)": [[175, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.recluster_tractograms"]], "register_elements() (dipy.viz.horizon.tab.base.horizontab method)": [[175, "dipy.viz.horizon.tab.base.HorizonTab.register_elements"]], "register_picker_callback() (dipy.viz.horizon.visualizer.slice.slicesvisualizer method)": [[175, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.register_picker_callback"]], "reposition() (dipy.viz.horizon.tab.base.tabmanager method)": [[175, "dipy.viz.horizon.tab.base.TabManager.reposition"]], "rgb (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[175, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.rgb"]], "selected_slices (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[175, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.selected_slices"]], "selected_value (dipy.viz.horizon.tab.base.horizonuielement attribute)": [[175, "dipy.viz.horizon.tab.base.HorizonUIElement.selected_value"]], "show_bundles() (in module dipy.viz.streamline)": [[175, "dipy.viz.streamline.show_bundles"]], "show_ellipsis() (in module dipy.viz.horizon.util)": [[175, "dipy.viz.horizon.util.show_ellipsis"]], "simple_plot() (in module dipy.viz.regtools)": [[175, "dipy.viz.regtools.simple_plot"]], "size (dipy.viz.horizon.tab.base.horizonuielement attribute)": [[175, "dipy.viz.horizon.tab.base.HorizonUIElement.size"]], "sizes (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[175, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.sizes"]], "slice_actors (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[175, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.slice_actors"]], "slicer_panel() (in module dipy.viz.panel)": [[175, "dipy.viz.panel.slicer_panel"]], "sph_project() (in module dipy.viz.projections)": [[175, "dipy.viz.projections.sph_project"]], "synchronize_slices() (dipy.viz.horizon.tab.base.tabmanager method)": [[175, "dipy.viz.horizon.tab.base.TabManager.synchronize_slices"]], "synchronize_volumes() (dipy.viz.horizon.tab.base.tabmanager method)": [[175, "dipy.viz.horizon.tab.base.TabManager.synchronize_volumes"]], "tab_id (dipy.viz.horizon.tab.peak.peakstab property)": [[175, "dipy.viz.horizon.tab.peak.PeaksTab.tab_id"]], "tab_id (dipy.viz.horizon.tab.slice.slicestab property)": [[175, "dipy.viz.horizon.tab.slice.SlicesTab.tab_id"]], "tab_id (dipy.viz.horizon.tab.surface.surfacetab property)": [[175, "dipy.viz.horizon.tab.surface.SurfaceTab.tab_id"]], "tab_ui (dipy.viz.horizon.tab.base.tabmanager property)": [[175, "dipy.viz.horizon.tab.base.TabManager.tab_ui"]], "tractogram_clusters (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[175, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.tractogram_clusters"]], "unpack_image() (in module dipy.viz.horizon.util)": [[175, "dipy.viz.horizon.util.unpack_image"]], "unpack_surface() (in module dipy.viz.horizon.util)": [[175, "dipy.viz.horizon.util.unpack_surface"]], "update_slices() (dipy.viz.horizon.tab.peak.peakstab method)": [[175, "dipy.viz.horizon.tab.peak.PeaksTab.update_slices"]], "update_slices() (dipy.viz.horizon.tab.slice.slicestab method)": [[175, "dipy.viz.horizon.tab.slice.SlicesTab.update_slices"]], "update_volume() (dipy.viz.horizon.tab.slice.slicestab method)": [[175, "dipy.viz.horizon.tab.slice.SlicesTab.update_volume"]], "visibility (dipy.viz.horizon.tab.base.horizonuielement attribute)": [[175, "dipy.viz.horizon.tab.base.HorizonUIElement.visibility"]], "viz_displacement_mag() (in module dipy.viz.streamline)": [[175, "dipy.viz.streamline.viz_displacement_mag"]], "viz_two_bundles() (in module dipy.viz.streamline)": [[175, "dipy.viz.streamline.viz_two_bundles"]], "viz_vector_field() (in module dipy.viz.streamline)": [[175, "dipy.viz.streamline.viz_vector_field"]], "volume_max (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[175, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.volume_max"]], "volume_min (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[175, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.volume_min"]], "applytransformflow (class in dipy.workflows.align)": [[176, "dipy.workflows.align.ApplyTransformFlow"]], "bundleanalysistractometryflow (class in dipy.workflows.stats)": [[176, "dipy.workflows.stats.BundleAnalysisTractometryFlow"]], "bundleshapeanalysis (class in dipy.workflows.stats)": [[176, "dipy.workflows.stats.BundleShapeAnalysis"]], "bundlewarpflow (class in dipy.workflows.align)": [[176, "dipy.workflows.align.BundleWarpFlow"]], "combinedworkflow (class in dipy.workflows.combined_workflow)": [[176, "dipy.workflows.combined_workflow.CombinedWorkflow"]], "concatenatetractogramflow (class in dipy.workflows.io)": [[176, "dipy.workflows.io.ConcatenateTractogramFlow"]], "convertshflow (class in dipy.workflows.io)": [[176, "dipy.workflows.io.ConvertSHFlow"]], "converttensorsflow (class in dipy.workflows.io)": [[176, "dipy.workflows.io.ConvertTensorsFlow"]], "converttractogramflow (class in dipy.workflows.io)": [[176, "dipy.workflows.io.ConvertTractogramFlow"]], "evacplusflow (class in dipy.workflows.nn)": [[176, "dipy.workflows.nn.EVACPlusFlow"]], "fetchflow (class in dipy.workflows.io)": [[176, "dipy.workflows.io.FetchFlow"]], "gibbsringingflow (class in dipy.workflows.denoise)": [[176, "dipy.workflows.denoise.GibbsRingingFlow"]], "horizonflow (class in dipy.workflows.viz)": [[176, "dipy.workflows.viz.HorizonFlow"]], "ioiterator (class in dipy.workflows.multi_io)": [[176, "dipy.workflows.multi_io.IOIterator"]], "imageregistrationflow (class in dipy.workflows.align)": [[176, "dipy.workflows.align.ImageRegistrationFlow"]], "introspectiveargumentparser (class in dipy.workflows.base)": [[176, "dipy.workflows.base.IntrospectiveArgumentParser"]], "ioinfoflow (class in dipy.workflows.io)": [[176, "dipy.workflows.io.IoInfoFlow"]], "lpcaflow (class in dipy.workflows.denoise)": [[176, "dipy.workflows.denoise.LPCAFlow"]], "labelsbundlesflow (class in dipy.workflows.segment)": [[176, "dipy.workflows.segment.LabelsBundlesFlow"]], "linearmixedmodelsflow (class in dipy.workflows.stats)": [[176, "dipy.workflows.stats.LinearMixedModelsFlow"]], "localfibertrackingpamflow (class in dipy.workflows.tracking)": [[176, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow"]], "mppcaflow (class in dipy.workflows.denoise)": [[176, "dipy.workflows.denoise.MPPCAFlow"]], "maskflow (class in dipy.workflows.mask)": [[176, "dipy.workflows.mask.MaskFlow"]], "medianotsuflow (class in dipy.workflows.segment)": [[176, "dipy.workflows.segment.MedianOtsuFlow"]], "motioncorrectionflow (class in dipy.workflows.align)": [[176, "dipy.workflows.align.MotionCorrectionFlow"]], "nlmeansflow (class in dipy.workflows.denoise)": [[176, "dipy.workflows.denoise.NLMeansFlow"]], "numpydocstring (class in dipy.workflows.docstring_parser)": [[176, "dipy.workflows.docstring_parser.NumpyDocString"]], "pftrackingpamflow (class in dipy.workflows.tracking)": [[176, "dipy.workflows.tracking.PFTrackingPAMFlow"]], "patch2selfflow (class in dipy.workflows.denoise)": [[176, "dipy.workflows.denoise.Patch2SelfFlow"]], "reader (class in dipy.workflows.docstring_parser)": [[176, "dipy.workflows.docstring_parser.Reader"]], "recobundlesflow (class in dipy.workflows.segment)": [[176, "dipy.workflows.segment.RecoBundlesFlow"]], "reconstcsaflow (class in dipy.workflows.reconst)": [[176, "dipy.workflows.reconst.ReconstCSAFlow"]], "reconstcsdflow (class in dipy.workflows.reconst)": [[176, "dipy.workflows.reconst.ReconstCSDFlow"]], "reconstdkiflow (class in dipy.workflows.reconst)": [[176, "dipy.workflows.reconst.ReconstDkiFlow"]], "reconstdsiflow (class in dipy.workflows.reconst)": [[176, "dipy.workflows.reconst.ReconstDsiFlow"]], "reconstdtiflow (class in dipy.workflows.reconst)": [[176, "dipy.workflows.reconst.ReconstDtiFlow"]], "reconstivimflow (class in dipy.workflows.reconst)": [[176, "dipy.workflows.reconst.ReconstIvimFlow"]], "reconstmapmriflow (class in dipy.workflows.reconst)": [[176, "dipy.workflows.reconst.ReconstMAPMRIFlow"]], "reconstrumbaflow (class in dipy.workflows.reconst)": [[176, "dipy.workflows.reconst.ReconstRUMBAFlow"]], "resliceflow (class in dipy.workflows.align)": [[176, "dipy.workflows.align.ResliceFlow"]], "snrinccflow (class in dipy.workflows.stats)": [[176, "dipy.workflows.stats.SNRinCCFlow"]], "slrwithqbxflow (class in dipy.workflows.align)": [[176, "dipy.workflows.align.SlrWithQbxFlow"]], "splitflow (class in dipy.workflows.io)": [[176, "dipy.workflows.io.SplitFlow"]], "synregistrationflow (class in dipy.workflows.align)": [[176, "dipy.workflows.align.SynRegistrationFlow"]], "workflow (class in dipy.workflows.workflow)": [[176, "dipy.workflows.workflow.Workflow"]], "__init__() (dipy.workflows.align.applytransformflow method)": [[176, "dipy.workflows.align.ApplyTransformFlow.__init__"]], "__init__() (dipy.workflows.align.bundlewarpflow method)": [[176, "dipy.workflows.align.BundleWarpFlow.__init__"]], "__init__() (dipy.workflows.align.imageregistrationflow method)": [[176, "dipy.workflows.align.ImageRegistrationFlow.__init__"]], "__init__() (dipy.workflows.align.motioncorrectionflow method)": [[176, "dipy.workflows.align.MotionCorrectionFlow.__init__"]], "__init__() (dipy.workflows.align.resliceflow method)": [[176, "dipy.workflows.align.ResliceFlow.__init__"]], "__init__() (dipy.workflows.align.slrwithqbxflow method)": [[176, "dipy.workflows.align.SlrWithQbxFlow.__init__"]], "__init__() (dipy.workflows.align.synregistrationflow method)": [[176, "dipy.workflows.align.SynRegistrationFlow.__init__"]], "__init__() (dipy.workflows.base.introspectiveargumentparser method)": [[176, "dipy.workflows.base.IntrospectiveArgumentParser.__init__"]], "__init__() (dipy.workflows.combined_workflow.combinedworkflow method)": [[176, "dipy.workflows.combined_workflow.CombinedWorkflow.__init__"]], "__init__() (dipy.workflows.denoise.gibbsringingflow method)": [[176, "dipy.workflows.denoise.GibbsRingingFlow.__init__"]], "__init__() (dipy.workflows.denoise.lpcaflow method)": [[176, "dipy.workflows.denoise.LPCAFlow.__init__"]], "__init__() (dipy.workflows.denoise.mppcaflow method)": [[176, "dipy.workflows.denoise.MPPCAFlow.__init__"]], "__init__() (dipy.workflows.denoise.nlmeansflow method)": [[176, "dipy.workflows.denoise.NLMeansFlow.__init__"]], "__init__() (dipy.workflows.denoise.patch2selfflow method)": [[176, "dipy.workflows.denoise.Patch2SelfFlow.__init__"]], "__init__() (dipy.workflows.docstring_parser.numpydocstring method)": [[176, "dipy.workflows.docstring_parser.NumpyDocString.__init__"]], "__init__() (dipy.workflows.docstring_parser.reader method)": [[176, "dipy.workflows.docstring_parser.Reader.__init__"]], "__init__() (dipy.workflows.io.concatenatetractogramflow method)": [[176, "dipy.workflows.io.ConcatenateTractogramFlow.__init__"]], "__init__() (dipy.workflows.io.convertshflow method)": [[176, "dipy.workflows.io.ConvertSHFlow.__init__"]], "__init__() (dipy.workflows.io.converttensorsflow method)": [[176, "dipy.workflows.io.ConvertTensorsFlow.__init__"]], "__init__() (dipy.workflows.io.converttractogramflow method)": [[176, "dipy.workflows.io.ConvertTractogramFlow.__init__"]], "__init__() (dipy.workflows.io.fetchflow method)": [[176, "dipy.workflows.io.FetchFlow.__init__"]], "__init__() (dipy.workflows.io.ioinfoflow method)": [[176, "dipy.workflows.io.IoInfoFlow.__init__"]], "__init__() (dipy.workflows.io.splitflow method)": [[176, "dipy.workflows.io.SplitFlow.__init__"]], "__init__() (dipy.workflows.mask.maskflow method)": [[176, "dipy.workflows.mask.MaskFlow.__init__"]], "__init__() (dipy.workflows.multi_io.ioiterator method)": [[176, "dipy.workflows.multi_io.IOIterator.__init__"]], "__init__() (dipy.workflows.nn.evacplusflow method)": [[176, "dipy.workflows.nn.EVACPlusFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstcsaflow method)": [[176, "dipy.workflows.reconst.ReconstCSAFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstcsdflow method)": [[176, "dipy.workflows.reconst.ReconstCSDFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstdkiflow method)": [[176, "dipy.workflows.reconst.ReconstDkiFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstdsiflow method)": [[176, "dipy.workflows.reconst.ReconstDsiFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstdtiflow method)": [[176, "dipy.workflows.reconst.ReconstDtiFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstivimflow method)": [[176, "dipy.workflows.reconst.ReconstIvimFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstmapmriflow method)": [[176, "dipy.workflows.reconst.ReconstMAPMRIFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstrumbaflow method)": [[176, "dipy.workflows.reconst.ReconstRUMBAFlow.__init__"]], "__init__() (dipy.workflows.segment.labelsbundlesflow method)": [[176, "dipy.workflows.segment.LabelsBundlesFlow.__init__"]], "__init__() (dipy.workflows.segment.medianotsuflow method)": [[176, "dipy.workflows.segment.MedianOtsuFlow.__init__"]], "__init__() (dipy.workflows.segment.recobundlesflow method)": [[176, "dipy.workflows.segment.RecoBundlesFlow.__init__"]], "__init__() (dipy.workflows.stats.bundleanalysistractometryflow method)": [[176, "dipy.workflows.stats.BundleAnalysisTractometryFlow.__init__"]], "__init__() (dipy.workflows.stats.bundleshapeanalysis method)": [[176, "dipy.workflows.stats.BundleShapeAnalysis.__init__"]], "__init__() (dipy.workflows.stats.linearmixedmodelsflow method)": [[176, "dipy.workflows.stats.LinearMixedModelsFlow.__init__"]], "__init__() (dipy.workflows.stats.snrinccflow method)": [[176, "dipy.workflows.stats.SNRinCCFlow.__init__"]], "__init__() (dipy.workflows.tracking.localfibertrackingpamflow method)": [[176, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow.__init__"]], "__init__() (dipy.workflows.tracking.pftrackingpamflow method)": [[176, "dipy.workflows.tracking.PFTrackingPAMFlow.__init__"]], "__init__() (dipy.workflows.viz.horizonflow method)": [[176, "dipy.workflows.viz.HorizonFlow.__init__"]], "__init__() (dipy.workflows.workflow.workflow method)": [[176, "dipy.workflows.workflow.Workflow.__init__"]], "add_description() (dipy.workflows.base.introspectiveargumentparser method)": [[176, "dipy.workflows.base.IntrospectiveArgumentParser.add_description"]], "add_epilogue() (dipy.workflows.base.introspectiveargumentparser method)": [[176, "dipy.workflows.base.IntrospectiveArgumentParser.add_epilogue"]], "add_sub_flow_args() (dipy.workflows.base.introspectiveargumentparser method)": [[176, "dipy.workflows.base.IntrospectiveArgumentParser.add_sub_flow_args"]], "add_workflow() (dipy.workflows.base.introspectiveargumentparser method)": [[176, "dipy.workflows.base.IntrospectiveArgumentParser.add_workflow"]], "basename_without_extension() (in module dipy.workflows.multi_io)": [[176, "dipy.workflows.multi_io.basename_without_extension"]], "buan_bundle_profiles() (in module dipy.workflows.stats)": [[176, "dipy.workflows.stats.buan_bundle_profiles"]], "check_dimensions() (in module dipy.workflows.align)": [[176, "dipy.workflows.align.check_dimensions"]], "common_start() (in module dipy.workflows.multi_io)": [[176, "dipy.workflows.multi_io.common_start"]], "concatenate_inputs() (in module dipy.workflows.multi_io)": [[176, "dipy.workflows.multi_io.concatenate_inputs"]], "connect_output_paths() (in module dipy.workflows.multi_io)": [[176, "dipy.workflows.multi_io.connect_output_paths"]], "create_directories() (dipy.workflows.multi_io.ioiterator method)": [[176, "dipy.workflows.multi_io.IOIterator.create_directories"]], "create_outputs() (dipy.workflows.multi_io.ioiterator method)": [[176, "dipy.workflows.multi_io.IOIterator.create_outputs"]], "dedent_lines() (in module dipy.workflows.docstring_parser)": [[176, "dipy.workflows.docstring_parser.dedent_lines"]], "dipy.workflows": [[176, "module-dipy.workflows"]], "dipy.workflows.align": [[176, "module-dipy.workflows.align"]], "dipy.workflows.base": [[176, "module-dipy.workflows.base"]], "dipy.workflows.cli": [[176, "module-dipy.workflows.cli"]], "dipy.workflows.combined_workflow": [[176, "module-dipy.workflows.combined_workflow"]], "dipy.workflows.denoise": [[176, "module-dipy.workflows.denoise"]], "dipy.workflows.docstring_parser": [[176, "module-dipy.workflows.docstring_parser"]], "dipy.workflows.flow_runner": [[176, "module-dipy.workflows.flow_runner"]], "dipy.workflows.io": [[176, "module-dipy.workflows.io"]], "dipy.workflows.mask": [[176, "module-dipy.workflows.mask"]], "dipy.workflows.multi_io": [[176, "module-dipy.workflows.multi_io"]], "dipy.workflows.nn": [[176, "module-dipy.workflows.nn"]], "dipy.workflows.reconst": [[176, "module-dipy.workflows.reconst"]], "dipy.workflows.segment": [[176, "module-dipy.workflows.segment"]], "dipy.workflows.stats": [[176, "module-dipy.workflows.stats"]], "dipy.workflows.tracking": [[176, "module-dipy.workflows.tracking"]], "dipy.workflows.viz": [[176, "module-dipy.workflows.viz"]], "dipy.workflows.workflow": [[176, "module-dipy.workflows.workflow"]], "eof() (dipy.workflows.docstring_parser.reader method)": [[176, "dipy.workflows.docstring_parser.Reader.eof"]], "file_existence_check() (dipy.workflows.multi_io.ioiterator method)": [[176, "dipy.workflows.multi_io.IOIterator.file_existence_check"]], "get_args_default() (in module dipy.workflows.base)": [[176, "dipy.workflows.base.get_args_default"]], "get_fetcher_datanames() (dipy.workflows.io.fetchflow static method)": [[176, "dipy.workflows.io.FetchFlow.get_fetcher_datanames"]], "get_fitted_ivim() (dipy.workflows.reconst.reconstivimflow method)": [[176, "dipy.workflows.reconst.ReconstIvimFlow.get_fitted_ivim"]], "get_fitted_tensor() (dipy.workflows.reconst.reconstdkiflow method)": [[176, "dipy.workflows.reconst.ReconstDkiFlow.get_fitted_tensor"]], "get_fitted_tensor() (dipy.workflows.reconst.reconstdtiflow method)": [[176, "dipy.workflows.reconst.ReconstDtiFlow.get_fitted_tensor"]], "get_flow_args() (dipy.workflows.base.introspectiveargumentparser method)": [[176, "dipy.workflows.base.IntrospectiveArgumentParser.get_flow_args"]], "get_io_iterator() (dipy.workflows.workflow.workflow method)": [[176, "dipy.workflows.workflow.Workflow.get_io_iterator"]], "get_level() (in module dipy.workflows.flow_runner)": [[176, "dipy.workflows.flow_runner.get_level"]], "get_metric_name() (dipy.workflows.stats.linearmixedmodelsflow method)": [[176, "dipy.workflows.stats.LinearMixedModelsFlow.get_metric_name"]], "get_optionals() (dipy.workflows.combined_workflow.combinedworkflow method)": [[176, "dipy.workflows.combined_workflow.CombinedWorkflow.get_optionals"]], "get_short_name() (dipy.workflows.align.bundlewarpflow class method)": [[176, "dipy.workflows.align.BundleWarpFlow.get_short_name"]], "get_short_name() (dipy.workflows.align.resliceflow class method)": [[176, "dipy.workflows.align.ResliceFlow.get_short_name"]], "get_short_name() (dipy.workflows.align.slrwithqbxflow class method)": [[176, "dipy.workflows.align.SlrWithQbxFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.gibbsringingflow class method)": [[176, "dipy.workflows.denoise.GibbsRingingFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.lpcaflow class method)": [[176, "dipy.workflows.denoise.LPCAFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.mppcaflow class method)": [[176, "dipy.workflows.denoise.MPPCAFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.nlmeansflow class method)": [[176, "dipy.workflows.denoise.NLMeansFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.patch2selfflow class method)": [[176, "dipy.workflows.denoise.Patch2SelfFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.concatenatetractogramflow class method)": [[176, "dipy.workflows.io.ConcatenateTractogramFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.convertshflow class method)": [[176, "dipy.workflows.io.ConvertSHFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.converttensorsflow class method)": [[176, "dipy.workflows.io.ConvertTensorsFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.converttractogramflow class method)": [[176, "dipy.workflows.io.ConvertTractogramFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.fetchflow class method)": [[176, "dipy.workflows.io.FetchFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.ioinfoflow class method)": [[176, "dipy.workflows.io.IoInfoFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.splitflow class method)": [[176, "dipy.workflows.io.SplitFlow.get_short_name"]], "get_short_name() (dipy.workflows.mask.maskflow class method)": [[176, "dipy.workflows.mask.MaskFlow.get_short_name"]], "get_short_name() (dipy.workflows.nn.evacplusflow class method)": [[176, "dipy.workflows.nn.EVACPlusFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstcsaflow class method)": [[176, "dipy.workflows.reconst.ReconstCSAFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstcsdflow class method)": [[176, "dipy.workflows.reconst.ReconstCSDFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstdkiflow class method)": [[176, "dipy.workflows.reconst.ReconstDkiFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstdsiflow class method)": [[176, "dipy.workflows.reconst.ReconstDsiFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstdtiflow class method)": [[176, "dipy.workflows.reconst.ReconstDtiFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstivimflow class method)": [[176, "dipy.workflows.reconst.ReconstIvimFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstmapmriflow class method)": [[176, "dipy.workflows.reconst.ReconstMAPMRIFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstrumbaflow class method)": [[176, "dipy.workflows.reconst.ReconstRUMBAFlow.get_short_name"]], "get_short_name() (dipy.workflows.segment.labelsbundlesflow class method)": [[176, "dipy.workflows.segment.LabelsBundlesFlow.get_short_name"]], "get_short_name() (dipy.workflows.segment.medianotsuflow class method)": [[176, "dipy.workflows.segment.MedianOtsuFlow.get_short_name"]], "get_short_name() (dipy.workflows.segment.recobundlesflow class method)": [[176, "dipy.workflows.segment.RecoBundlesFlow.get_short_name"]], "get_short_name() (dipy.workflows.stats.bundleanalysistractometryflow class method)": [[176, "dipy.workflows.stats.BundleAnalysisTractometryFlow.get_short_name"]], "get_short_name() (dipy.workflows.stats.bundleshapeanalysis class method)": [[176, "dipy.workflows.stats.BundleShapeAnalysis.get_short_name"]], "get_short_name() (dipy.workflows.stats.linearmixedmodelsflow class method)": [[176, "dipy.workflows.stats.LinearMixedModelsFlow.get_short_name"]], "get_short_name() (dipy.workflows.stats.snrinccflow class method)": [[176, "dipy.workflows.stats.SNRinCCFlow.get_short_name"]], "get_short_name() (dipy.workflows.tracking.localfibertrackingpamflow class method)": [[176, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow.get_short_name"]], "get_short_name() (dipy.workflows.tracking.pftrackingpamflow class method)": [[176, "dipy.workflows.tracking.PFTrackingPAMFlow.get_short_name"]], "get_short_name() (dipy.workflows.viz.horizonflow class method)": [[176, "dipy.workflows.viz.HorizonFlow.get_short_name"]], "get_short_name() (dipy.workflows.workflow.workflow class method)": [[176, "dipy.workflows.workflow.Workflow.get_short_name"]], "get_sub_runs() (dipy.workflows.combined_workflow.combinedworkflow method)": [[176, "dipy.workflows.combined_workflow.CombinedWorkflow.get_sub_runs"]], "get_sub_runs() (dipy.workflows.workflow.workflow method)": [[176, "dipy.workflows.workflow.Workflow.get_sub_runs"]], "io_iterator() (in module dipy.workflows.multi_io)": [[176, "dipy.workflows.multi_io.io_iterator"]], "io_iterator_() (in module dipy.workflows.multi_io)": [[176, "dipy.workflows.multi_io.io_iterator_"]], "is_empty() (dipy.workflows.docstring_parser.reader method)": [[176, "dipy.workflows.docstring_parser.Reader.is_empty"]], "load_module() (dipy.workflows.io.fetchflow static method)": [[176, "dipy.workflows.io.FetchFlow.load_module"]], "manage_output_overwrite() (dipy.workflows.workflow.workflow method)": [[176, "dipy.workflows.workflow.Workflow.manage_output_overwrite"]], "none_or_dtype() (in module dipy.workflows.base)": [[176, "dipy.workflows.base.none_or_dtype"]], "optional_parameters (dipy.workflows.base.introspectiveargumentparser property)": [[176, "dipy.workflows.base.IntrospectiveArgumentParser.optional_parameters"]], "output_parameters (dipy.workflows.base.introspectiveargumentparser property)": [[176, "dipy.workflows.base.IntrospectiveArgumentParser.output_parameters"]], "peek() (dipy.workflows.docstring_parser.reader method)": [[176, "dipy.workflows.docstring_parser.Reader.peek"]], "positional_parameters (dipy.workflows.base.introspectiveargumentparser property)": [[176, "dipy.workflows.base.IntrospectiveArgumentParser.positional_parameters"]], "read() (dipy.workflows.docstring_parser.reader method)": [[176, "dipy.workflows.docstring_parser.Reader.read"]], "read_to_condition() (dipy.workflows.docstring_parser.reader method)": [[176, "dipy.workflows.docstring_parser.Reader.read_to_condition"]], "read_to_next_empty_line() (dipy.workflows.docstring_parser.reader method)": [[176, "dipy.workflows.docstring_parser.Reader.read_to_next_empty_line"]], "read_to_next_unindented_line() (dipy.workflows.docstring_parser.reader method)": [[176, "dipy.workflows.docstring_parser.Reader.read_to_next_unindented_line"]], "reset() (dipy.workflows.docstring_parser.reader method)": [[176, "dipy.workflows.docstring_parser.Reader.reset"]], "run() (dipy.workflows.align.applytransformflow method)": [[176, "dipy.workflows.align.ApplyTransformFlow.run"]], "run() (dipy.workflows.align.bundlewarpflow method)": [[176, "dipy.workflows.align.BundleWarpFlow.run"]], "run() (dipy.workflows.align.imageregistrationflow method)": [[176, "dipy.workflows.align.ImageRegistrationFlow.run"]], "run() (dipy.workflows.align.motioncorrectionflow method)": [[176, "dipy.workflows.align.MotionCorrectionFlow.run"]], "run() (dipy.workflows.align.resliceflow method)": [[176, "dipy.workflows.align.ResliceFlow.run"]], "run() (dipy.workflows.align.slrwithqbxflow method)": [[176, "dipy.workflows.align.SlrWithQbxFlow.run"]], "run() (dipy.workflows.align.synregistrationflow method)": [[176, "dipy.workflows.align.SynRegistrationFlow.run"]], "run() (dipy.workflows.denoise.gibbsringingflow method)": [[176, "dipy.workflows.denoise.GibbsRingingFlow.run"]], "run() (dipy.workflows.denoise.lpcaflow method)": [[176, "dipy.workflows.denoise.LPCAFlow.run"]], "run() (dipy.workflows.denoise.mppcaflow method)": [[176, "dipy.workflows.denoise.MPPCAFlow.run"]], "run() (dipy.workflows.denoise.nlmeansflow method)": [[176, "dipy.workflows.denoise.NLMeansFlow.run"]], "run() (dipy.workflows.denoise.patch2selfflow method)": [[176, "dipy.workflows.denoise.Patch2SelfFlow.run"]], "run() (dipy.workflows.io.concatenatetractogramflow method)": [[176, "dipy.workflows.io.ConcatenateTractogramFlow.run"]], "run() (dipy.workflows.io.convertshflow method)": [[176, "dipy.workflows.io.ConvertSHFlow.run"]], "run() (dipy.workflows.io.converttensorsflow method)": [[176, "dipy.workflows.io.ConvertTensorsFlow.run"]], "run() (dipy.workflows.io.converttractogramflow method)": [[176, "dipy.workflows.io.ConvertTractogramFlow.run"]], "run() (dipy.workflows.io.fetchflow method)": [[176, "dipy.workflows.io.FetchFlow.run"]], "run() (dipy.workflows.io.ioinfoflow method)": [[176, "dipy.workflows.io.IoInfoFlow.run"]], "run() (dipy.workflows.io.splitflow method)": [[176, "dipy.workflows.io.SplitFlow.run"]], "run() (dipy.workflows.mask.maskflow method)": [[176, "dipy.workflows.mask.MaskFlow.run"]], "run() (dipy.workflows.nn.evacplusflow method)": [[176, "dipy.workflows.nn.EVACPlusFlow.run"]], "run() (dipy.workflows.reconst.reconstcsaflow method)": [[176, "dipy.workflows.reconst.ReconstCSAFlow.run"]], "run() (dipy.workflows.reconst.reconstcsdflow method)": [[176, "dipy.workflows.reconst.ReconstCSDFlow.run"]], "run() (dipy.workflows.reconst.reconstdkiflow method)": [[176, "dipy.workflows.reconst.ReconstDkiFlow.run"]], "run() (dipy.workflows.reconst.reconstdsiflow method)": [[176, "dipy.workflows.reconst.ReconstDsiFlow.run"]], "run() (dipy.workflows.reconst.reconstdtiflow method)": [[176, "dipy.workflows.reconst.ReconstDtiFlow.run"]], "run() (dipy.workflows.reconst.reconstivimflow method)": [[176, "dipy.workflows.reconst.ReconstIvimFlow.run"]], "run() (dipy.workflows.reconst.reconstmapmriflow method)": [[176, "dipy.workflows.reconst.ReconstMAPMRIFlow.run"]], "run() (dipy.workflows.reconst.reconstrumbaflow method)": [[176, "dipy.workflows.reconst.ReconstRUMBAFlow.run"]], "run() (dipy.workflows.segment.labelsbundlesflow method)": [[176, "dipy.workflows.segment.LabelsBundlesFlow.run"]], "run() (dipy.workflows.segment.medianotsuflow method)": [[176, "dipy.workflows.segment.MedianOtsuFlow.run"]], "run() (dipy.workflows.segment.recobundlesflow method)": [[176, "dipy.workflows.segment.RecoBundlesFlow.run"]], "run() (dipy.workflows.stats.bundleanalysistractometryflow method)": [[176, "dipy.workflows.stats.BundleAnalysisTractometryFlow.run"]], "run() (dipy.workflows.stats.bundleshapeanalysis method)": [[176, "dipy.workflows.stats.BundleShapeAnalysis.run"]], "run() (dipy.workflows.stats.linearmixedmodelsflow method)": [[176, "dipy.workflows.stats.LinearMixedModelsFlow.run"]], "run() (dipy.workflows.stats.snrinccflow method)": [[176, "dipy.workflows.stats.SNRinCCFlow.run"]], "run() (dipy.workflows.tracking.localfibertrackingpamflow method)": [[176, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow.run"]], "run() (dipy.workflows.tracking.pftrackingpamflow method)": [[176, "dipy.workflows.tracking.PFTrackingPAMFlow.run"]], "run() (dipy.workflows.viz.horizonflow method)": [[176, "dipy.workflows.viz.HorizonFlow.run"]], "run() (dipy.workflows.workflow.workflow method)": [[176, "dipy.workflows.workflow.Workflow.run"]], "run() (in module dipy.workflows.cli)": [[176, "dipy.workflows.cli.run"]], "run_flow() (in module dipy.workflows.flow_runner)": [[176, "dipy.workflows.flow_runner.run_flow"]], "run_sub_flow() (dipy.workflows.combined_workflow.combinedworkflow method)": [[176, "dipy.workflows.combined_workflow.CombinedWorkflow.run_sub_flow"]], "save_lmm_plot() (dipy.workflows.stats.linearmixedmodelsflow method)": [[176, "dipy.workflows.stats.LinearMixedModelsFlow.save_lmm_plot"]], "seek_next_non_empty_line() (dipy.workflows.docstring_parser.reader method)": [[176, "dipy.workflows.docstring_parser.Reader.seek_next_non_empty_line"]], "set_inputs() (dipy.workflows.multi_io.ioiterator method)": [[176, "dipy.workflows.multi_io.IOIterator.set_inputs"]], "set_out_dir() (dipy.workflows.multi_io.ioiterator method)": [[176, "dipy.workflows.multi_io.IOIterator.set_out_dir"]], "set_out_fnames() (dipy.workflows.multi_io.ioiterator method)": [[176, "dipy.workflows.multi_io.IOIterator.set_out_fnames"]], "set_output_keys() (dipy.workflows.multi_io.ioiterator method)": [[176, "dipy.workflows.multi_io.IOIterator.set_output_keys"]], "set_sub_flows_optionals() (dipy.workflows.combined_workflow.combinedworkflow method)": [[176, "dipy.workflows.combined_workflow.CombinedWorkflow.set_sub_flows_optionals"]], "show_argument() (dipy.workflows.base.introspectiveargumentparser method)": [[176, "dipy.workflows.base.IntrospectiveArgumentParser.show_argument"]], "slash_to_under() (in module dipy.workflows.multi_io)": [[176, "dipy.workflows.multi_io.slash_to_under"]], "update_argument() (dipy.workflows.base.introspectiveargumentparser method)": [[176, "dipy.workflows.base.IntrospectiveArgumentParser.update_argument"]]}})