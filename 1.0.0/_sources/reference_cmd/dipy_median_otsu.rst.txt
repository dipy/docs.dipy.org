
========================
dipy_median_otsu
========================

usage: dipy_median_otsu [-h] [--save_masked] [--median_radius int]
                     [--numpass int] [--autocrop] [--vol_idx [int [int ...]]]
                     [--dilate int] [--out_dir str] [--out_mask str]
                     [--out_masked str]
                     input_files

Workflow wrapping the median_otsu segmentation method.

Applies median_otsu segmentation on each file found by 'globing' ``input_files`` and saves the results in a directory specified by ``out_dir``.

positional arguments:
  input_files           Path to the input volumes. This path may contain wildcards to process multiple inputs at once.

optional arguments:
  -h, --help            show this help message and exit
  --save_masked         Save mask
  --median_radius int   Radius (in voxels) of the applied median filter (default 2)
  --numpass int         Number of pass of the median filter (default 5)
  --autocrop            If True, the masked input_volumes will also be cropped using the bounding box defined by the masked data. For example, if diffusion images are of 1x1x1 (mm^3) or higher resolution auto-cropping could reduce their size in memory and speed up some of the analysis. (default False)
  --vol_idx [int [int ...]]
                        1D array representing indices of ``axis=-1`` of a 4D `input_volume`. From the command line use something like `3 4 5 6`. From script use something like `[3, 4, 5, 6]`. This input is required for 4D volumes.
  --dilate int          number of iterations for binary dilation (default 'None')

output arguments(optional):
  --out_dir str         Output directory (default input file directory)
  --out_mask str        Name of the mask volume to be saved (default 'brain_mask.nii.gz')
  --out_masked str      Name of the masked volume to be saved (default 'dwi_masked.nii.gz')

References: 
Garyfallidis, E., M. Brett, B. Amirbekian, A. Rokem, S. Van Der Walt, M. Descoteaux, and I. Nimmo-Smith. Dipy, a library for the analysis of diffusion MRI data. Frontiers in Neuroinformatics, 1-18, 2014.
