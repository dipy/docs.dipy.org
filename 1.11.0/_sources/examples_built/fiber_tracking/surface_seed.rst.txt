
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples_built\fiber_tracking\surface_seed.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_built_fiber_tracking_surface_seed.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_built_fiber_tracking_surface_seed.py:


========================================
Surface seeding for tractography
========================================

Surface seeding is a way to generate initial position for tractography
from cortical surfaces position :footcite:p:`StOnge2018`.

.. GENERATED FROM PYTHON SOURCE LINES 9-26

.. code-block:: Python


    from fury.io import load_polydata
    from fury.utils import (
        get_actor_from_polydata,
        get_polydata_triangles,
        get_polydata_vertices,
        normals_from_v_f,
    )
    import numpy as np

    from dipy.data import get_fnames
    from dipy.tracking.mesh import (
        random_coordinates_from_surface,
        seeds_from_surface_coordinates,
    )
    from dipy.viz import actor, window








.. GENERATED FROM PYTHON SOURCE LINES 27-28

Fetch and load a surface

.. GENERATED FROM PYTHON SOURCE LINES 28-32

.. code-block:: Python


    brain_lh = get_fnames(name="fury_surface")
    polydata = load_polydata(brain_lh)








.. GENERATED FROM PYTHON SOURCE LINES 33-34

Extract the triangles and vertices

.. GENERATED FROM PYTHON SOURCE LINES 34-38

.. code-block:: Python


    triangles = get_polydata_triangles(polydata)
    vts = get_polydata_vertices(polydata)








.. GENERATED FROM PYTHON SOURCE LINES 39-43

Display the surface
===============================================

First, create an actor from the polydata, to display in the scene

.. GENERATED FROM PYTHON SOURCE LINES 43-54

.. code-block:: Python


    scene = window.Scene()
    surface_actor = get_actor_from_polydata(polydata)

    scene.add(surface_actor)
    scene.set_camera(position=(-500, 0, 0), view_up=(0.0, 0.0, 1))

    # Uncomment the line below to show to display the window
    # window.show(scene, size=(600, 600), reset_camera=False)
    window.record(scene=scene, out_path="surface_seed1.png", size=(600, 600))




.. image-sg:: /examples_built/fiber_tracking/images/sphx_glr_surface_seed_001.png
   :alt: surface seed
   :srcset: /examples_built/fiber_tracking/images/sphx_glr_surface_seed_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 55-64

.. rst-class:: centered small fst-italic fw-semibold

Initial cortical surface


Generate a list of seeding positions
==============================================================

Choose the number of seed

.. GENERATED FROM PYTHON SOURCE LINES 64-68

.. code-block:: Python


    nb_seeds = 100000
    nb_triangles = len(triangles)








.. GENERATED FROM PYTHON SOURCE LINES 69-70

Get a list of triangles indices and trilinear coordinates for each seed

.. GENERATED FROM PYTHON SOURCE LINES 70-73

.. code-block:: Python


    tri_idx, trilin_co = random_coordinates_from_surface(nb_triangles, nb_seeds)








.. GENERATED FROM PYTHON SOURCE LINES 74-76

Get the 3d cartesian position from triangles indices and trilinear
coordinates

.. GENERATED FROM PYTHON SOURCE LINES 76-79

.. code-block:: Python


    seed_pts = seeds_from_surface_coordinates(triangles, vts, tri_idx, trilin_co)








.. GENERATED FROM PYTHON SOURCE LINES 80-81

Compute normal and get the normal direction for each seeds

.. GENERATED FROM PYTHON SOURCE LINES 81-85

.. code-block:: Python


    normals = normals_from_v_f(vts, triangles)
    seed_n = seeds_from_surface_coordinates(triangles, normals, tri_idx, trilin_co)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

Create dot actor for seeds (blue)

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: Python


    seed_actors = actor.dot(seed_pts, colors=(0, 0, 1), dot_size=4.0)








.. GENERATED FROM PYTHON SOURCE LINES 91-92

Create line actors for seeds normals (green outside, red inside)

.. GENERATED FROM PYTHON SOURCE LINES 92-102

.. code-block:: Python


    normal_length = 0.5
    normal_in = np.tile(seed_pts[:, np.newaxis, :], (1, 2, 1))
    normal_out = np.tile(seed_pts[:, np.newaxis, :], (1, 2, 1))
    normal_in[:, 0] -= seed_n * normal_length
    normal_out[:, 1] += seed_n * normal_length

    normal_in_actor = actor.line(normal_in, colors=(1, 0, 0))
    normal_out_actor = actor.line(normal_out, colors=(0, 1, 0))








.. GENERATED FROM PYTHON SOURCE LINES 103-104

Visualise seeds and normals along the surface

.. GENERATED FROM PYTHON SOURCE LINES 104-116

.. code-block:: Python


    scene = window.Scene()
    scene.add(surface_actor)
    scene.add(seed_actors)
    scene.add(normal_in_actor)
    scene.add(normal_out_actor)
    scene.set_camera(position=(-500, 0, 0), view_up=(0.0, 0.0, 1))

    # Uncomment the line below to show to display the window
    # window.show(scene, size=(600, 600), reset_camera=False)
    window.record(scene=scene, out_path="surface_seed2.png", size=(600, 600))




.. image-sg:: /examples_built/fiber_tracking/images/sphx_glr_surface_seed_002.png
   :alt: surface seed
   :srcset: /examples_built/fiber_tracking/images/sphx_glr_surface_seed_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 117-127

.. rst-class:: centered small fst-italic fw-semibold

Surface seeds with normal orientation


References
----------

.. footbibliography::


.. GENERATED FROM PYTHON SOURCE LINES 129-131

.. include:: ../../links_names.inc



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 2.361 seconds)


.. _sphx_glr_download_examples_built_fiber_tracking_surface_seed.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: surface_seed.ipynb <surface_seed.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: surface_seed.py <surface_seed.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
