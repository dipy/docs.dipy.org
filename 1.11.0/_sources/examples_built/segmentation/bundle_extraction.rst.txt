
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples_built\segmentation\bundle_extraction.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_built_segmentation_bundle_extraction.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_built_segmentation_bundle_extraction.py:


==================================================
Automatic Fiber Bundle Extraction with RecoBundles
==================================================

This example explains how we can use RecoBundles :footcite:p:`Garyfallidis2018`
to extract bundles from tractograms.

First import the necessary modules.

.. GENERATED FROM PYTHON SOURCE LINES 11-28

.. code-block:: Python


    import numpy as np

    from dipy.align.streamlinear import whole_brain_slr
    from dipy.data import (
        fetch_bundle_atlas_hcp842,
        fetch_target_tractogram_hcp,
        get_bundle_atlas_hcp842,
        get_target_tractogram_hcp,
        get_two_hcp842_bundles,
    )
    from dipy.io.stateful_tractogram import Space, StatefulTractogram
    from dipy.io.streamline import load_trk, save_trk
    from dipy.io.utils import create_tractogram_header
    from dipy.segment.bundles import RecoBundles
    from dipy.viz import actor, window








.. GENERATED FROM PYTHON SOURCE LINES 29-30

Download and read data for this tutorial

.. GENERATED FROM PYTHON SOURCE LINES 30-45

.. code-block:: Python


    target_file, target_folder = fetch_target_tractogram_hcp()
    atlas_file, atlas_folder = fetch_bundle_atlas_hcp842()

    atlas_file, all_bundles_files = get_bundle_atlas_hcp842()
    target_file = get_target_tractogram_hcp()

    sft_atlas = load_trk(atlas_file, "same", bbox_valid_check=False)
    atlas = sft_atlas.streamlines
    atlas_header = create_tractogram_header(atlas_file, *sft_atlas.space_attributes)

    sft_target = load_trk(target_file, "same", bbox_valid_check=False)
    target = sft_target.streamlines
    target_header = create_tractogram_header(target_file, *sft_target.space_attributes)








.. GENERATED FROM PYTHON SOURCE LINES 46-47

let's visualize atlas tractogram and target tractogram before registration

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python


    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(atlas, colors=(1, 0, 1)))
    scene.add(actor.line(target, colors=(1, 1, 0)))
    window.record(scene=scene, out_path="tractograms_initial.png", size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_001.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. rst-class:: centered small fst-italic fw-semibold

Atlas and target before registration.


We will register target tractogram to model atlas' space using streamlinear
registration (SLR) :footcite:p:`Garyfallidis2015`.

.. GENERATED FROM PYTHON SOURCE LINES 66-77

.. code-block:: Python


    moved, transform, qb_centroids1, qb_centroids2 = whole_brain_slr(
        atlas,
        target,
        x0="affine",
        verbose=True,
        progressive=True,
        rng=np.random.default_rng(1984),
    )









.. GENERATED FROM PYTHON SOURCE LINES 78-80

We save the transform generated in this registration, so that we can use
it in the bundle profiles example

.. GENERATED FROM PYTHON SOURCE LINES 80-83

.. code-block:: Python


    np.save("slr_transform.npy", transform)








.. GENERATED FROM PYTHON SOURCE LINES 84-85

let's visualize atlas tractogram and target tractogram after registration

.. GENERATED FROM PYTHON SOURCE LINES 85-98

.. code-block:: Python


    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(atlas, colors=(1, 0, 1)))
    scene.add(actor.line(moved, colors=(1, 1, 0)))
    window.record(
        scene=scene, out_path="tractograms_after_registration.png", size=(600, 600)
    )
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_002.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 99-145

.. rst-class:: centered small fst-italic fw-semibold

Atlas and target after registration.



Extracting bundles using RecoBundles :footcite:p:`Garyfallidis2018`

RecoBundles requires a model (reference) bundle and tries to extract similar
looking bundle from the input tractogram. There are some key parameters that
users can set as per requirements. Here are the key threshold parameters
measured in millimeters and their function in Recobundles:

- model_clust_thr : It will use QuickBundles to get the centroids of the
  model bundle and work with centroids instead of all streamlines. This
  helps to make RecoBundles faster. The larger the value of the threshold,
  the fewer centroids will be, the and smaller the threshold value, the
  more centroids will be. If you prefer to use all the streamlines of the
  model bundle, you can set this threshold to 0.01 mm.
  Recommended range of the model_clust_thr is 0.01 - 3.0 mm.

- reduction_thr : This threshold will be used to reduce the search space
  for finding the streamlines that match model bundle streamlines in shape.
  Instead of looking at the entire tractogram, now we will be looking at
  neighboring region of a model bundle in the tractogram. Increase the
  threshold to increase the search space.
  Recommended range of the reduction_thr is 15 - 30 mm.

- pruning_thr : This threshold will filter the streamlines for which the
  distance to the model bundle is greater than the pruning_thr.
  This serves to filter the neighborhood area (search space) to get
  streamlines that are like the model bundle.
  Recommended range of the pruning_thr is 8 - 12 mm.

- reduction_distance and pruning_distance : Distance method used
  internally. Minimum Diferect Flip distance (mdf) or Mean Average Minimum
  (mam). Default is set to mdf.

- slr : If slr flag is set to True, local registration of model bundle
  with neighbouring area will be performed. Default and recommended is True.



Read Arcuate Fasciculus Left and Corticospinal Tract Left bundles from
already fetched atlas data to use them as model bundle. Let's visualize the
Arcuate Fasciculus Left model bundle.

.. GENERATED FROM PYTHON SOURCE LINES 145-164

.. code-block:: Python


    model_af_l_file, model_cst_l_file = get_two_hcp842_bundles()
    sft_af_l = load_trk(model_af_l_file, reference="same", bbox_valid_check=False)
    model_af_l = sft_af_l.streamlines

    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(model_af_l))
    scene.set_camera(
        focal_point=(-18.17281532, -19.55606842, 6.92485857),
        position=(-360.11, -30.46, -40.44),
        view_up=(-0.03, 0.028, 0.89),
    )
    window.record(scene=scene, out_path="AF_L_model_bundle.png", size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_003.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 165-168

.. rst-class:: centered small fst-italic fw-semibold

Model Arcuate Fasciculus Left bundle

.. GENERATED FROM PYTHON SOURCE LINES 168-181

.. code-block:: Python


    rb = RecoBundles(moved, verbose=True, rng=np.random.default_rng(2001))

    recognized_af_l, af_l_labels = rb.recognize(
        model_bundle=model_af_l,
        model_clust_thr=0.1,
        reduction_thr=15,
        pruning_thr=7,
        reduction_distance="mdf",
        pruning_distance="mdf",
        slr=True,
    )








.. GENERATED FROM PYTHON SOURCE LINES 182-183

let's visualize extracted Arcuate Fasciculus Left bundle

.. GENERATED FROM PYTHON SOURCE LINES 183-198

.. code-block:: Python


    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(recognized_af_l.copy()))
    scene.set_camera(
        focal_point=(-18.17281532, -19.55606842, 6.92485857),
        position=(-360.11, -30.46, -40.44),
        view_up=(-0.03, 0.028, 0.89),
    )
    window.record(scene=scene, out_path="AF_L_recognized_bundle.png", size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_004.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 199-207

.. rst-class:: centered small fst-italic fw-semibold

Extracted Arcuate Fasciculus Left bundle



Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.

.. GENERATED FROM PYTHON SOURCE LINES 207-211

.. code-block:: Python


    reco_af_l = StatefulTractogram(recognized_af_l, atlas_header, Space.RASMM)
    save_trk(reco_af_l, "AF_L_rec_1.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 212-214

Let's save the recognized bundle in the original space of the subject
anatomy.

.. GENERATED FROM PYTHON SOURCE LINES 214-218

.. code-block:: Python


    reco_af_l = StatefulTractogram(target[af_l_labels], target_header, Space.RASMM)
    save_trk(reco_af_l, "AF_L_org_1.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 219-220

Now, let's increase the reduction_thr and pruning_thr values.

.. GENERATED FROM PYTHON SOURCE LINES 220-231

.. code-block:: Python


    recognized_af_l, af_l_labels = rb.recognize(
        model_bundle=model_af_l,
        model_clust_thr=0.1,
        reduction_thr=20,
        pruning_thr=10,
        reduction_distance="mdf",
        pruning_distance="mdf",
        slr=True,
    )








.. GENERATED FROM PYTHON SOURCE LINES 232-233

let's visualize extracted Arcuate Fasciculus Left bundle.

.. GENERATED FROM PYTHON SOURCE LINES 233-248

.. code-block:: Python


    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(recognized_af_l.copy()))
    scene.set_camera(
        focal_point=(-18.17281532, -19.55606842, 6.92485857),
        position=(-360.11, -30.46, -40.44),
        view_up=(-0.03, 0.028, 0.89),
    )
    window.record(scene=scene, out_path="AF_L_recognized_bundle2.png", size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_005.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 249-256

.. rst-class:: centered small fst-italic fw-semibold

Extracted Arcuate Fasciculus Left bundle


Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.

.. GENERATED FROM PYTHON SOURCE LINES 256-260

.. code-block:: Python


    reco_af_l = StatefulTractogram(recognized_af_l, atlas_header, Space.RASMM)
    save_trk(reco_af_l, "AF_L_rec_2.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 261-263

Let's save the recognized bundle in the original space of the subject
anatomy.

.. GENERATED FROM PYTHON SOURCE LINES 263-267

.. code-block:: Python


    reco_af_l = StatefulTractogram(target[af_l_labels], target_header, Space.RASMM)
    save_trk(reco_af_l, "AF_L_org_2.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 268-269

Now, let's increase the reduction_thr and pruning_thr values further.

.. GENERATED FROM PYTHON SOURCE LINES 269-280

.. code-block:: Python


    recognized_af_l, af_l_labels = rb.recognize(
        model_bundle=model_af_l,
        model_clust_thr=0.1,
        reduction_thr=25,
        pruning_thr=12,
        reduction_distance="mdf",
        pruning_distance="mdf",
        slr=True,
    )








.. GENERATED FROM PYTHON SOURCE LINES 281-282

let's visualize extracted Arcuate Fasciculus Left bundle.

.. GENERATED FROM PYTHON SOURCE LINES 282-297

.. code-block:: Python


    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(recognized_af_l.copy()))
    scene.set_camera(
        focal_point=(-18.17281532, -19.55606842, 6.92485857),
        position=(-360.11, -30.46, -40.44),
        view_up=(-0.03, 0.028, 0.89),
    )
    window.record(scene=scene, out_path="AF_L_recognized_bundle3.png", size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_006.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_006.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 298-305

.. rst-class:: centered small fst-italic fw-semibold

Extracted Arcuate Fasciculus Left bundle


Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.

.. GENERATED FROM PYTHON SOURCE LINES 305-309

.. code-block:: Python


    reco_af_l = StatefulTractogram(recognized_af_l, atlas_header, Space.RASMM)
    save_trk(reco_af_l, "AF_L_rec_3.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 310-312

Let's save the recognized bundle in the original space of the subject
anatomy.

.. GENERATED FROM PYTHON SOURCE LINES 312-317

.. code-block:: Python


    reco_af_l = StatefulTractogram(target[af_l_labels], target_header, Space.RASMM)
    save_trk(reco_af_l, "AF_L_org_3.trk", bbox_valid_check=False)









.. GENERATED FROM PYTHON SOURCE LINES 318-323

Let's apply auto-calibrated RecoBundles on the output of standard
RecoBundles. This step will filter out the outlier streamlines. This time,
the RecoBundles' extracted bundle will serve as a model bundle. As a rule of
thumb, provide larger threshold values in standard RecoBundles function and
smaller values in the auto-calibrated RecoBundles (refinement) step.

.. GENERATED FROM PYTHON SOURCE LINES 323-335

.. code-block:: Python


    r_recognized_af_l, r_af_l_labels = rb.refine(
        model_bundle=model_af_l,
        pruned_streamlines=recognized_af_l,
        model_clust_thr=0.1,
        reduction_thr=15,
        pruning_thr=6,
        reduction_distance="mdf",
        pruning_distance="mdf",
        slr=True,
    )








.. GENERATED FROM PYTHON SOURCE LINES 336-337

let's visualize extracted refined Arcuate Fasciculus Left bundle.

.. GENERATED FROM PYTHON SOURCE LINES 337-354

.. code-block:: Python


    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(r_recognized_af_l.copy()))
    scene.set_camera(
        focal_point=(-18.17281532, -19.55606842, 6.92485857),
        position=(-360.11, -30.46, -40.44),
        view_up=(-0.03, 0.028, 0.89),
    )
    window.record(
        scene=scene, out_path="AF_L_refine_recognized_bundle.png", size=(600, 600)
    )
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_007.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_007.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 355-363

.. rst-class:: centered small fst-italic fw-semibold

Extracted Arcuate Fasciculus Left bundle



Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.

.. GENERATED FROM PYTHON SOURCE LINES 363-367

.. code-block:: Python


    reco_af_l = StatefulTractogram(r_recognized_af_l, atlas_header, Space.RASMM)
    save_trk(reco_af_l, "AF_L_rec_refine.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 368-370

Let's save the recognized bundle in the original space of the subject
anatomy.

.. GENERATED FROM PYTHON SOURCE LINES 370-374

.. code-block:: Python


    reco_af_l = StatefulTractogram(target[r_af_l_labels], target_header, Space.RASMM)
    save_trk(reco_af_l, "AF_L_org_refine.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 375-376

Let's load Corticospinal Tract Left model bundle and visualize it.

.. GENERATED FROM PYTHON SOURCE LINES 376-394

.. code-block:: Python


    sft_cst_l = load_trk(model_cst_l_file, "same", bbox_valid_check=False)
    model_cst_l = sft_cst_l.streamlines

    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(model_cst_l))
    scene.set_camera(
        focal_point=(-18.17281532, -19.55606842, 6.92485857),
        position=(-360.11, -30.46, -40.44),
        view_up=(-0.03, 0.028, 0.89),
    )
    window.record(scene=scene, out_path="CST_L_model_bundle.png", size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_008.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_008.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 395-398

.. rst-class:: centered small fst-italic fw-semibold

The Corticospinal tract model bundle

.. GENERATED FROM PYTHON SOURCE LINES 398-409

.. code-block:: Python


    recognized_cst_l, cst_l_labels = rb.recognize(
        model_bundle=model_cst_l,
        model_clust_thr=0.1,
        reduction_thr=15,
        pruning_thr=7,
        reduction_distance="mdf",
        pruning_distance="mdf",
        slr=True,
    )








.. GENERATED FROM PYTHON SOURCE LINES 410-411

let's visualize extracted Corticospinal tract Left bundle

.. GENERATED FROM PYTHON SOURCE LINES 411-426

.. code-block:: Python


    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(recognized_cst_l.copy()))
    scene.set_camera(
        focal_point=(-18.17281532, -19.55606842, 6.92485857),
        position=(-360.11, -30.46, -40.44),
        view_up=(-0.03, 0.028, 0.89),
    )
    window.record(scene=scene, out_path="CST_L_recognized_bundle.png", size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_009.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_009.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 427-435

.. rst-class:: centered small fst-italic fw-semibold

Extracted Corticospinal tract Left bundle



Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.

.. GENERATED FROM PYTHON SOURCE LINES 435-439

.. code-block:: Python


    reco_cst_l = StatefulTractogram(recognized_cst_l, atlas_header, Space.RASMM)
    save_trk(reco_cst_l, "CST_L_rec_1.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 440-442

Let's save the recognized bundle in the original space of the subject
anatomy.

.. GENERATED FROM PYTHON SOURCE LINES 442-446

.. code-block:: Python


    reco_cst_l = StatefulTractogram(target[cst_l_labels], target_header, Space.RASMM)
    save_trk(reco_cst_l, "CST_L_org_1.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 447-448

Now, let's increase the reduction_thr and pruning_thr values.

.. GENERATED FROM PYTHON SOURCE LINES 448-459

.. code-block:: Python


    recognized_cst_l, cst_l_labels = rb.recognize(
        model_bundle=model_cst_l,
        model_clust_thr=0.1,
        reduction_thr=20,
        pruning_thr=10,
        reduction_distance="mdf",
        pruning_distance="mdf",
        slr=True,
    )








.. GENERATED FROM PYTHON SOURCE LINES 460-461

let's visualize extracted Corticospinal tract Left bundle.

.. GENERATED FROM PYTHON SOURCE LINES 461-476

.. code-block:: Python


    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(recognized_cst_l.copy()))
    scene.set_camera(
        focal_point=(-18.17281532, -19.55606842, 6.92485857),
        position=(-360.11, -30.46, -40.44),
        view_up=(-0.03, 0.028, 0.89),
    )
    window.record(scene=scene, out_path="CST_L_recognized_bundle2.png", size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_010.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_010.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 477-484

.. rst-class:: centered small fst-italic fw-semibold

Extracted Corticospinal tract Left bundle


Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.

.. GENERATED FROM PYTHON SOURCE LINES 484-488

.. code-block:: Python


    reco_cst_l = StatefulTractogram(recognized_cst_l, atlas_header, Space.RASMM)
    save_trk(reco_cst_l, "CST_L_rec_2.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 489-491

Let's save the recognized bundle in the original space of the subject
anatomy.

.. GENERATED FROM PYTHON SOURCE LINES 491-495

.. code-block:: Python


    reco_cst_l = StatefulTractogram(target[cst_l_labels], target_header, Space.RASMM)
    save_trk(reco_cst_l, "CST_L_org_2.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 496-497

Now, let's increase the reduction_thr and pruning_thr values further.

.. GENERATED FROM PYTHON SOURCE LINES 497-508

.. code-block:: Python


    recognized_cst_l, cst_l_labels = rb.recognize(
        model_bundle=model_cst_l,
        model_clust_thr=0.1,
        reduction_thr=25,
        pruning_thr=12,
        reduction_distance="mdf",
        pruning_distance="mdf",
        slr=True,
    )








.. GENERATED FROM PYTHON SOURCE LINES 509-510

let's visualize extracted Corticospinal tract Left bundle.

.. GENERATED FROM PYTHON SOURCE LINES 510-525

.. code-block:: Python


    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(recognized_cst_l.copy()))
    scene.set_camera(
        focal_point=(-18.17281532, -19.55606842, 6.92485857),
        position=(-360.11, -30.46, -40.44),
        view_up=(-0.03, 0.028, 0.89),
    )
    window.record(scene=scene, out_path="CST_L_recognized_bundle3.png", size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_011.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_011.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 526-535

.. rst-class:: centered small fst-italic fw-semibold

Extracted Corticospinal tract Left bundle




Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.

.. GENERATED FROM PYTHON SOURCE LINES 535-539

.. code-block:: Python


    reco_cst_l = StatefulTractogram(recognized_cst_l, atlas_header, Space.RASMM)
    save_trk(reco_cst_l, "CST_L_rec_3.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 540-542

Let's save the recognized bundle in the original space of the subject
anatomy.

.. GENERATED FROM PYTHON SOURCE LINES 542-546

.. code-block:: Python


    reco_cst_l = StatefulTractogram(target[cst_l_labels], target_header, Space.RASMM)
    save_trk(reco_cst_l, "CST_L_org_3.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 547-552

Let's apply auto-calibrated RecoBundles on the output of standard
RecoBundles. This step will filter out the outlier streamlines. This time,
the RecoBundles' extracted bundle will serve as a model bundle. As a rule of
thumb, provide larger threshold values in standard RecoBundles function and
smaller values in the auto-calibrated RecoBundles (refinement) step.

.. GENERATED FROM PYTHON SOURCE LINES 552-564

.. code-block:: Python


    r_recognized_cst_l, r_cst_l_labels = rb.refine(
        model_bundle=model_cst_l,
        pruned_streamlines=recognized_cst_l,
        model_clust_thr=0.1,
        reduction_thr=15,
        pruning_thr=6,
        reduction_distance="mdf",
        pruning_distance="mdf",
        slr=True,
    )








.. GENERATED FROM PYTHON SOURCE LINES 565-566

let's visualize extracted refined Corticospinal tract Left bundle.

.. GENERATED FROM PYTHON SOURCE LINES 566-583

.. code-block:: Python


    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(r_recognized_cst_l.copy()))
    scene.set_camera(
        focal_point=(-18.17281532, -19.55606842, 6.92485857),
        position=(-360.11, -30.46, -40.44),
        view_up=(-0.03, 0.028, 0.89),
    )
    window.record(
        scene=scene, out_path="CST_L_refine_recognized_bundle.png", size=(600, 600)
    )
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_012.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_012.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 584-591

.. rst-class:: centered small fst-italic fw-semibold

Extracted refined Corticospinal tract Left bundle


Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.

.. GENERATED FROM PYTHON SOURCE LINES 591-595

.. code-block:: Python


    reco_cst_l = StatefulTractogram(r_recognized_cst_l, atlas_header, Space.RASMM)
    save_trk(reco_cst_l, "CST_L_rec_refine.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 596-598

Let's save the recognized bundle in the original space of the subject
anatomy.

.. GENERATED FROM PYTHON SOURCE LINES 598-602

.. code-block:: Python


    reco_cst_l = StatefulTractogram(target[r_cst_l_labels], target_header, Space.RASMM)
    save_trk(reco_cst_l, "CST_L_org_refine.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 603-612

This example shows how changing different threshold parameters can change the
output. It is up to the user to decide what is the desired output and select
parameters accordingly.

References
----------

.. footbibliography::


.. GENERATED FROM PYTHON SOURCE LINES 614-616

.. include:: ../../links_names.inc



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (5 minutes 38.358 seconds)


.. _sphx_glr_download_examples_built_segmentation_bundle_extraction.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: bundle_extraction.ipynb <bundle_extraction.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: bundle_extraction.py <bundle_extraction.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
