
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples_built\segmentation\bundle_extraction.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_built_segmentation_bundle_extraction.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_built_segmentation_bundle_extraction.py:


==================================================
Automatic Fiber Bundle Extraction with RecoBundles
==================================================

This example explains how we can use RecoBundles [Garyfallidis17]_ to extract
bundles from tractograms.

First import the necessary modules.

.. GENERATED FROM PYTHON SOURCE LINES 11-26

.. code-block:: Python


    import numpy as np

    from dipy.align.streamlinear import whole_brain_slr
    from dipy.data import get_two_hcp842_bundles
    from dipy.data import (fetch_target_tractogram_hcp,
                           fetch_bundle_atlas_hcp842,
                           get_bundle_atlas_hcp842,
                           get_target_tractogram_hcp)
    from dipy.io.stateful_tractogram import Space, StatefulTractogram
    from dipy.io.streamline import load_trk, save_trk
    from dipy.io.utils import create_tractogram_header
    from dipy.segment.bundles import RecoBundles
    from dipy.viz import actor, window








.. GENERATED FROM PYTHON SOURCE LINES 27-28

Download and read data for this tutorial

.. GENERATED FROM PYTHON SOURCE LINES 28-45

.. code-block:: Python


    target_file, target_folder = fetch_target_tractogram_hcp()
    atlas_file, atlas_folder = fetch_bundle_atlas_hcp842()

    atlas_file, all_bundles_files = get_bundle_atlas_hcp842()
    target_file = get_target_tractogram_hcp()

    sft_atlas = load_trk(atlas_file, "same", bbox_valid_check=False)
    atlas = sft_atlas.streamlines
    atlas_header = create_tractogram_header(atlas_file,
                                            *sft_atlas.space_attributes)

    sft_target = load_trk(target_file, "same", bbox_valid_check=False)
    target = sft_target.streamlines
    target_header = create_tractogram_header(target_file,
                                             *sft_target.space_attributes)








.. GENERATED FROM PYTHON SOURCE LINES 46-47

let's visualize atlas tractogram and target tractogram before registration

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python


    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(atlas, colors=(1, 0, 1)))
    scene.add(actor.line(target, colors=(1, 1, 0)))
    window.record(scene, out_path='tractograms_initial.png', size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_001.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. rst-class:: centered small fst-italic fw-semibold

Atlas and target before registration.


We will register target tractogram to model atlas' space using streamlinear
registration (SLR) [Garyfallidis15]_

.. GENERATED FROM PYTHON SOURCE LINES 66-72

.. code-block:: Python


    moved, transform, qb_centroids1, qb_centroids2 = whole_brain_slr(
        atlas, target, x0='affine', verbose=True, progressive=True,
        rng=np.random.RandomState(1984))









.. GENERATED FROM PYTHON SOURCE LINES 73-75

We save the transform generated in this registration, so that we can use
it in the bundle profiles example

.. GENERATED FROM PYTHON SOURCE LINES 75-78

.. code-block:: Python


    np.save("slr_transform.npy", transform)








.. GENERATED FROM PYTHON SOURCE LINES 79-80

let's visualize atlas tractogram and target tractogram after registration

.. GENERATED FROM PYTHON SOURCE LINES 80-92

.. code-block:: Python


    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(atlas, colors=(1, 0, 1)))
    scene.add(actor.line(moved, colors=(1, 1, 0)))
    window.record(scene, out_path='tractograms_after_registration.png',
                  size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_002.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 93-140

.. rst-class:: centered small fst-italic fw-semibold

Atlas and target after registration.



Extracting bundles using RecoBundles [Garyfallidis17]_

RecoBundles requires a model (reference) bundle and tries to extract similar
looking bundle from the input tractogram. There are some key parameters that
users can set as per requirements. Here are the key threshold parameters
measured in millimeters and their function in Recobundles:

    - model_clust_thr : It will use QuickBundles to get the centroids of the
    model bundle and work with centroids instead of all streamlines. This
    helps to make RecoBundles faster. The larger the value of the threshold,
    the fewer centroids will be, the and smaller the threshold value, the
    more centroids will be. If you prefer to use all the streamlines of the
    model bundle, you can set this threshold to 0.01 mm.
    Recommended range of the model_clust_thr is 0.01 - 3.0 mm.

    - reduction_thr : This threshold will be used to reduce the search space
    for finding the streamlines that match model bundle streamlines in shape.
    Instead of looking at the entire tractogram, now we will be looking at
    neighboring region of a model bundle in the tractogram. Increase the
    threshold to increase the search space.
    Recommended range of the reduction_thr is 15 - 30 mm.

    - pruning_thr : This threshold will filter the streamlines for which the
    distance to the model bundle is greater than the pruning_thr.
    This serves to filter the neighborhood area (search space) to get
    streamlines that are like the model bundle.
    Recommended range of the pruning_thr is 8 - 12 mm.

    - reduction_distance and pruning_distance : Distance method used
    internally. Minimum Diferect Flip distance (mdf) or Mean Average Minimum
    (mam). Default is set to mdf.

    - slr : If slr flag is set to True, local registration of model bundle
    with neighbouring area will be performed. Default and recommended is
    True.



Read Arcuate Fasciculus Left and Corticospinal Tract Left bundles from
already fetched atlas data to use them as model bundle. Let's visualize the
Arcuate Fasciculus Left model bundle.

.. GENERATED FROM PYTHON SOURCE LINES 140-158

.. code-block:: Python


    model_af_l_file, model_cst_l_file = get_two_hcp842_bundles()
    sft_af_l = load_trk(model_af_l_file, "same", bbox_valid_check=False)
    model_af_l = sft_af_l.streamlines

    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(model_af_l))
    scene.set_camera(focal_point=(-18.17281532, -19.55606842, 6.92485857),
                     position=(-360.11, -30.46, -40.44),
                     view_up=(-0.03, 0.028, 0.89))
    window.record(scene, out_path='AF_L_model_bundle.png',
                  size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_003.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 159-162

.. rst-class:: centered small fst-italic fw-semibold

Model Arcuate Fasciculus Left bundle

.. GENERATED FROM PYTHON SOURCE LINES 162-173

.. code-block:: Python


    rb = RecoBundles(moved, verbose=True, rng=np.random.RandomState(2001))

    recognized_af_l, af_l_labels = rb.recognize(model_bundle=model_af_l,
                                                model_clust_thr=0.1,
                                                reduction_thr=15,
                                                pruning_thr=7,
                                                reduction_distance='mdf',
                                                pruning_distance='mdf',
                                                slr=True)








.. GENERATED FROM PYTHON SOURCE LINES 174-175

let's visualize extracted Arcuate Fasciculus Left bundle

.. GENERATED FROM PYTHON SOURCE LINES 175-189

.. code-block:: Python


    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(recognized_af_l.copy()))
    scene.set_camera(focal_point=(-18.17281532, -19.55606842, 6.92485857),
                     position=(-360.11, -30.46, -40.44),
                     view_up=(-0.03, 0.028, 0.89))
    window.record(scene, out_path='AF_L_recognized_bundle.png',
                  size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_004.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 190-198

.. rst-class:: centered small fst-italic fw-semibold

Extracted Arcuate Fasciculus Left bundle



Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.

.. GENERATED FROM PYTHON SOURCE LINES 198-203

.. code-block:: Python


    reco_af_l = StatefulTractogram(recognized_af_l, atlas_header,
                                   Space.RASMM)
    save_trk(reco_af_l, "AF_L_rec_1.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 204-206

Let's save the recognized bundle in the original space of the subject
anatomy.

.. GENERATED FROM PYTHON SOURCE LINES 206-211

.. code-block:: Python


    reco_af_l = StatefulTractogram(target[af_l_labels], target_header,
                                   Space.RASMM)
    save_trk(reco_af_l, "AF_L_org_1.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 212-213

Now, let's increase the reduction_thr and pruning_thr values.

.. GENERATED FROM PYTHON SOURCE LINES 213-222

.. code-block:: Python


    recognized_af_l, af_l_labels = rb.recognize(model_bundle=model_af_l,
                                                model_clust_thr=0.1,
                                                reduction_thr=20,
                                                pruning_thr=10,
                                                reduction_distance='mdf',
                                                pruning_distance='mdf',
                                                slr=True)








.. GENERATED FROM PYTHON SOURCE LINES 223-224

let's visualize extracted Arcuate Fasciculus Left bundle.

.. GENERATED FROM PYTHON SOURCE LINES 224-238

.. code-block:: Python


    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(recognized_af_l.copy()))
    scene.set_camera(focal_point=(-18.17281532, -19.55606842, 6.92485857),
                     position=(-360.11, -30.46, -40.44),
                     view_up=(-0.03, 0.028, 0.89))
    window.record(scene, out_path='AF_L_recognized_bundle2.png',
                  size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_005.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 239-246

.. rst-class:: centered small fst-italic fw-semibold

Extracted Arcuate Fasciculus Left bundle


Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.

.. GENERATED FROM PYTHON SOURCE LINES 246-251

.. code-block:: Python


    reco_af_l = StatefulTractogram(recognized_af_l, atlas_header,
                                   Space.RASMM)
    save_trk(reco_af_l, "AF_L_rec_2.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 252-254

Let's save the recognized bundle in the original space of the subject
anatomy.

.. GENERATED FROM PYTHON SOURCE LINES 254-259

.. code-block:: Python


    reco_af_l = StatefulTractogram(target[af_l_labels], target_header,
                                   Space.RASMM)
    save_trk(reco_af_l, "AF_L_org_2.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 260-261

Now, let's increase the reduction_thr and pruning_thr values further.

.. GENERATED FROM PYTHON SOURCE LINES 261-270

.. code-block:: Python


    recognized_af_l, af_l_labels = rb.recognize(model_bundle=model_af_l,
                                                model_clust_thr=0.1,
                                                reduction_thr=25,
                                                pruning_thr=12,
                                                reduction_distance='mdf',
                                                pruning_distance='mdf',
                                                slr=True)








.. GENERATED FROM PYTHON SOURCE LINES 271-272

let's visualize extracted Arcuate Fasciculus Left bundle.

.. GENERATED FROM PYTHON SOURCE LINES 272-286

.. code-block:: Python


    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(recognized_af_l.copy()))
    scene.set_camera(focal_point=(-18.17281532, -19.55606842, 6.92485857),
                     position=(-360.11, -30.46, -40.44),
                     view_up=(-0.03, 0.028, 0.89))
    window.record(scene, out_path='AF_L_recognized_bundle3.png',
                  size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_006.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_006.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 287-294

.. rst-class:: centered small fst-italic fw-semibold

Extracted Arcuate Fasciculus Left bundle


Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.

.. GENERATED FROM PYTHON SOURCE LINES 294-299

.. code-block:: Python


    reco_af_l = StatefulTractogram(recognized_af_l, atlas_header,
                                   Space.RASMM)
    save_trk(reco_af_l, "AF_L_rec_3.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 300-302

Let's save the recognized bundle in the original space of the subject
anatomy.

.. GENERATED FROM PYTHON SOURCE LINES 302-308

.. code-block:: Python


    reco_af_l = StatefulTractogram(target[af_l_labels], target_header,
                                   Space.RASMM)
    save_trk(reco_af_l, "AF_L_org_3.trk", bbox_valid_check=False)









.. GENERATED FROM PYTHON SOURCE LINES 309-314

Let's apply auto-calibrated RecoBundles on the output of standard
RecoBundles. This step will filter out the outlier streamlines. This time,
the RecoBundles' extracted bundle will serve as a model bundle. As a rule of
thumb, provide larger threshold values in standard RecoBundles function and
smaller values in the auto-calibrated RecoBundles (refinement) step.

.. GENERATED FROM PYTHON SOURCE LINES 314-325

.. code-block:: Python


    r_recognized_af_l, r_af_l_labels = rb.refine(
        model_bundle=model_af_l,
        pruned_streamlines=recognized_af_l,
        model_clust_thr=0.1,
        reduction_thr=15,
        pruning_thr=6,
        reduction_distance='mdf',
        pruning_distance='mdf',
        slr=True)








.. GENERATED FROM PYTHON SOURCE LINES 326-327

let's visualize extracted refined Arcuate Fasciculus Left bundle.

.. GENERATED FROM PYTHON SOURCE LINES 327-341

.. code-block:: Python


    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(r_recognized_af_l.copy()))
    scene.set_camera(focal_point=(-18.17281532, -19.55606842, 6.92485857),
                     position=(-360.11, -30.46, -40.44),
                     view_up=(-0.03, 0.028, 0.89))
    window.record(scene, out_path='AF_L_refine_recognized_bundle.png',
                  size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_007.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_007.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 342-350

.. rst-class:: centered small fst-italic fw-semibold

Extracted Arcuate Fasciculus Left bundle



Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.

.. GENERATED FROM PYTHON SOURCE LINES 350-355

.. code-block:: Python


    reco_af_l = StatefulTractogram(r_recognized_af_l, atlas_header,
                                   Space.RASMM)
    save_trk(reco_af_l, "AF_L_rec_refine.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 356-358

Let's save the recognized bundle in the original space of the subject
anatomy.

.. GENERATED FROM PYTHON SOURCE LINES 358-363

.. code-block:: Python


    reco_af_l = StatefulTractogram(target[r_af_l_labels], target_header,
                                   Space.RASMM)
    save_trk(reco_af_l, "AF_L_org_refine.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 364-365

Let's load Corticospinal Tract Left model bundle and visualize it.

.. GENERATED FROM PYTHON SOURCE LINES 365-382

.. code-block:: Python


    sft_cst_l = load_trk(model_cst_l_file, "same", bbox_valid_check=False)
    model_cst_l = sft_cst_l.streamlines

    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(model_cst_l))
    scene.set_camera(focal_point=(-18.17281532, -19.55606842, 6.92485857),
                     position=(-360.11, -30.46, -40.44),
                     view_up=(-0.03, 0.028, 0.89))
    window.record(scene, out_path='CST_L_model_bundle.png',
                  size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_008.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_008.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 383-386

.. rst-class:: centered small fst-italic fw-semibold

The Corticospinal tract model bundle

.. GENERATED FROM PYTHON SOURCE LINES 386-395

.. code-block:: Python


    recognized_cst_l, cst_l_labels = rb.recognize(model_bundle=model_cst_l,
                                                  model_clust_thr=0.1,
                                                  reduction_thr=15,
                                                  pruning_thr=7,
                                                  reduction_distance='mdf',
                                                  pruning_distance='mdf',
                                                  slr=True)








.. GENERATED FROM PYTHON SOURCE LINES 396-397

let's visualize extracted Corticospinal tract Left bundle

.. GENERATED FROM PYTHON SOURCE LINES 397-411

.. code-block:: Python


    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(recognized_cst_l.copy()))
    scene.set_camera(focal_point=(-18.17281532, -19.55606842, 6.92485857),
                     position=(-360.11, -30.46, -40.44),
                     view_up=(-0.03, 0.028, 0.89))
    window.record(scene, out_path='CST_L_recognized_bundle.png',
                  size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_009.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_009.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 412-420

.. rst-class:: centered small fst-italic fw-semibold

Extracted Corticospinal tract Left bundle



Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.

.. GENERATED FROM PYTHON SOURCE LINES 420-425

.. code-block:: Python


    reco_cst_l = StatefulTractogram(recognized_cst_l, atlas_header,
                                    Space.RASMM)
    save_trk(reco_cst_l, "CST_L_rec_1.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 426-428

Let's save the recognized bundle in the original space of the subject
anatomy.

.. GENERATED FROM PYTHON SOURCE LINES 428-433

.. code-block:: Python


    reco_cst_l = StatefulTractogram(target[cst_l_labels], target_header,
                                    Space.RASMM)
    save_trk(reco_cst_l, "CST_L_org_1.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 434-435

Now, let's increase the reduction_thr and pruning_thr values.

.. GENERATED FROM PYTHON SOURCE LINES 435-444

.. code-block:: Python


    recognized_cst_l, cst_l_labels = rb.recognize(model_bundle=model_cst_l,
                                                  model_clust_thr=0.1,
                                                  reduction_thr=20,
                                                  pruning_thr=10,
                                                  reduction_distance='mdf',
                                                  pruning_distance='mdf',
                                                  slr=True)








.. GENERATED FROM PYTHON SOURCE LINES 445-446

let's visualize extracted Corticospinal tract Left bundle.

.. GENERATED FROM PYTHON SOURCE LINES 446-460

.. code-block:: Python


    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(recognized_cst_l.copy()))
    scene.set_camera(focal_point=(-18.17281532, -19.55606842, 6.92485857),
                     position=(-360.11, -30.46, -40.44),
                     view_up=(-0.03, 0.028, 0.89))
    window.record(scene, out_path='CST_L_recognized_bundle2.png',
                  size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_010.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_010.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 461-468

.. rst-class:: centered small fst-italic fw-semibold

Extracted Corticospinal tract Left bundle


Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.

.. GENERATED FROM PYTHON SOURCE LINES 468-473

.. code-block:: Python


    reco_cst_l = StatefulTractogram(recognized_cst_l, atlas_header,
                                    Space.RASMM)
    save_trk(reco_cst_l, "CST_L_rec_2.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 474-476

Let's save the recognized bundle in the original space of the subject
anatomy.

.. GENERATED FROM PYTHON SOURCE LINES 476-481

.. code-block:: Python


    reco_cst_l = StatefulTractogram(target[cst_l_labels], target_header,
                                    Space.RASMM)
    save_trk(reco_cst_l, "CST_L_org_2.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 482-483

Now, let's increase the reduction_thr and pruning_thr values further.

.. GENERATED FROM PYTHON SOURCE LINES 483-492

.. code-block:: Python


    recognized_cst_l, cst_l_labels = rb.recognize(model_bundle=model_cst_l,
                                                  model_clust_thr=0.1,
                                                  reduction_thr=25,
                                                  pruning_thr=12,
                                                  reduction_distance='mdf',
                                                  pruning_distance='mdf',
                                                  slr=True)








.. GENERATED FROM PYTHON SOURCE LINES 493-494

let's visualize extracted Corticospinal tract Left bundle.

.. GENERATED FROM PYTHON SOURCE LINES 494-508

.. code-block:: Python


    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(recognized_cst_l.copy()))
    scene.set_camera(focal_point=(-18.17281532, -19.55606842, 6.92485857),
                     position=(-360.11, -30.46, -40.44),
                     view_up=(-0.03, 0.028, 0.89))
    window.record(scene, out_path='CST_L_recognized_bundle3.png',
                  size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_011.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_011.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 509-518

.. rst-class:: centered small fst-italic fw-semibold

Extracted Corticospinal tract Left bundle




Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.

.. GENERATED FROM PYTHON SOURCE LINES 518-523

.. code-block:: Python


    reco_cst_l = StatefulTractogram(recognized_cst_l, atlas_header,
                                    Space.RASMM)
    save_trk(reco_cst_l, "CST_L_rec_3.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 524-526

Let's save the recognized bundle in the original space of the subject
anatomy.

.. GENERATED FROM PYTHON SOURCE LINES 526-531

.. code-block:: Python


    reco_cst_l = StatefulTractogram(target[cst_l_labels], target_header,
                                    Space.RASMM)
    save_trk(reco_cst_l, "CST_L_org_3.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 532-537

Let's apply auto-calibrated RecoBundles on the output of standard
RecoBundles. This step will filter out the outlier streamlines. This time,
the RecoBundles' extracted bundle will serve as a model bundle. As a rule of
thumb, provide larger threshold values in standard RecoBundles function and
smaller values in the auto-calibrated RecoBundles (refinement) step.

.. GENERATED FROM PYTHON SOURCE LINES 537-548

.. code-block:: Python


    r_recognized_cst_l, r_cst_l_labels = rb.refine(
                                         model_bundle=model_cst_l,
                                         pruned_streamlines=recognized_cst_l,
                                         model_clust_thr=0.1,
                                         reduction_thr=15,
                                         pruning_thr=6,
                                         reduction_distance='mdf',
                                         pruning_distance='mdf',
                                         slr=True)








.. GENERATED FROM PYTHON SOURCE LINES 549-550

let's visualize extracted refined Corticospinal tract Left bundle.

.. GENERATED FROM PYTHON SOURCE LINES 550-564

.. code-block:: Python


    interactive = False

    scene = window.Scene()
    scene.SetBackground(1, 1, 1)
    scene.add(actor.line(r_recognized_cst_l.copy()))
    scene.set_camera(focal_point=(-18.17281532, -19.55606842, 6.92485857),
                     position=(-360.11, -30.46, -40.44),
                     view_up=(-0.03, 0.028, 0.89))
    window.record(scene, out_path='CST_L_refine_recognized_bundle.png',
                  size=(600, 600))
    if interactive:
        window.show(scene)




.. image-sg:: /examples_built/segmentation/images/sphx_glr_bundle_extraction_012.png
   :alt: bundle extraction
   :srcset: /examples_built/segmentation/images/sphx_glr_bundle_extraction_012.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 565-572

.. rst-class:: centered small fst-italic fw-semibold

Extracted refined Corticospinal tract Left bundle


Save the bundle as a trk file. Let's save the recognized bundle in the
common space (atlas space), in this case, MNI space.

.. GENERATED FROM PYTHON SOURCE LINES 572-577

.. code-block:: Python


    reco_cst_l = StatefulTractogram(r_recognized_cst_l, atlas_header,
                                    Space.RASMM)
    save_trk(reco_cst_l, "CST_L_rec_refine.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 578-580

Let's save the recognized bundle in the original space of the subject
anatomy.

.. GENERATED FROM PYTHON SOURCE LINES 580-585

.. code-block:: Python


    reco_cst_l = StatefulTractogram(target[r_cst_l_labels], target_header,
                                    Space.RASMM)
    save_trk(reco_cst_l, "CST_L_org_refine.trk", bbox_valid_check=False)








.. GENERATED FROM PYTHON SOURCE LINES 586-602

This example shows how changing different threshold parameters can change the
output. It is up to the user to decide what is the desired output and select
parameters accordingly.

References
----------

.. [Garyfallidis17] Garyfallidis et al. Recognition of white matter
        bundles using local and global streamline-based registration
        and clustering, Neuroimage, 2017.

.. [Chandio2020] Chandio, B.Q., Risacher, S.L., Pestilli, F.,
        Bullock, D., Yeh, FC., Koudoro, S., Rokem, A., Harezlak, J., and
        Garyfallidis, E. Bundle analytics, a computational framework for
        investigating the shapes and profiles of brain pathways across
        populations. Sci Rep 10, 17149 (2020)

.. GENERATED FROM PYTHON SOURCE LINES 604-606

.. include:: ../../links_names.inc



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (5 minutes 42.603 seconds)


.. _sphx_glr_download_examples_built_segmentation_bundle_extraction.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: bundle_extraction.ipynb <bundle_extraction.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: bundle_extraction.py <bundle_extraction.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
