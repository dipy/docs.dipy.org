Search.setIndex({"docnames": ["api_changes", "cite", "data", "dataset_list", "dependencies", "devel/coding_style_guideline", "devel/commit_codes", "devel/gitwash/configure_git", "devel/gitwash/development_workflow", "devel/gitwash/dot2_dot3", "devel/gitwash/following_latest", "devel/gitwash/forking_hell", "devel/gitwash/git_development", "devel/gitwash/git_install", "devel/gitwash/git_intro", "devel/gitwash/git_resources", "devel/gitwash/index", "devel/gitwash/maintainer_workflow", "devel/gitwash/patching", "devel/gitwash/set_up_fork", "devel/index", "devel/intro", "devel/make_release", "developers", "documentation", "examples_built/contextual_enhancement/contextual_enhancement", "examples_built/contextual_enhancement/fiber_to_bundle_coherence", "examples_built/contextual_enhancement/index", "examples_built/contextual_enhancement/sg_execution_times", "examples_built/fiber_tracking/index", "examples_built/fiber_tracking/linear_fascicle_evaluation", "examples_built/fiber_tracking/sg_execution_times", "examples_built/fiber_tracking/surface_seed", "examples_built/fiber_tracking/tracking_bootstrap_peaks", "examples_built/fiber_tracking/tracking_deterministic", "examples_built/fiber_tracking/tracking_introduction_eudx_1", "examples_built/fiber_tracking/tracking_pft", "examples_built/fiber_tracking/tracking_probabilistic", "examples_built/fiber_tracking/tracking_ptt", "examples_built/fiber_tracking/tracking_rumba", "examples_built/fiber_tracking/tracking_sfm", "examples_built/fiber_tracking/tracking_stopping_criterion", "examples_built/file_formats/index", "examples_built/file_formats/sg_execution_times", "examples_built/file_formats/streamline_formats", "examples_built/index", "examples_built/multiprocessing/index", "examples_built/multiprocessing/reconst_csa_parallel", "examples_built/multiprocessing/reconst_csd_parallel", "examples_built/multiprocessing/sg_execution_times", "examples_built/preprocessing/brain_extraction_dwi", "examples_built/preprocessing/denoise_ascm", "examples_built/preprocessing/denoise_gibbs", "examples_built/preprocessing/denoise_localpca", "examples_built/preprocessing/denoise_mppca", "examples_built/preprocessing/denoise_nlmeans", "examples_built/preprocessing/denoise_patch2self", "examples_built/preprocessing/gradients_spheres", "examples_built/preprocessing/index", "examples_built/preprocessing/motion_correction", "examples_built/preprocessing/piesno", "examples_built/preprocessing/reslice_datasets", "examples_built/preprocessing/sg_execution_times", "examples_built/preprocessing/snr_in_cc", "examples_built/quick_start/index", "examples_built/quick_start/quick_start", "examples_built/quick_start/sg_execution_times", "examples_built/quick_start/tracking_introduction_eudx", "examples_built/reconstruction/histology_resdnn", "examples_built/reconstruction/index", "examples_built/reconstruction/kfold_xval", "examples_built/reconstruction/reconst_csa", "examples_built/reconstruction/reconst_csd", "examples_built/reconstruction/reconst_cti", "examples_built/reconstruction/reconst_dki", "examples_built/reconstruction/reconst_dki_micro", "examples_built/reconstruction/reconst_dsi", "examples_built/reconstruction/reconst_dsi_metrics", "examples_built/reconstruction/reconst_dsid", "examples_built/reconstruction/reconst_dti", "examples_built/reconstruction/reconst_forecast", "examples_built/reconstruction/reconst_fwdti", "examples_built/reconstruction/reconst_gqi", "examples_built/reconstruction/reconst_ivim", "examples_built/reconstruction/reconst_mapmri", "examples_built/reconstruction/reconst_mcsd", "examples_built/reconstruction/reconst_msdki", "examples_built/reconstruction/reconst_qtdmri", "examples_built/reconstruction/reconst_qti", "examples_built/reconstruction/reconst_qtiplus", "examples_built/reconstruction/reconst_rumba", "examples_built/reconstruction/reconst_sfm", "examples_built/reconstruction/reconst_sh", "examples_built/reconstruction/reconst_shore", "examples_built/reconstruction/reconst_shore_metrics", "examples_built/reconstruction/restore_dti", "examples_built/reconstruction/sg_execution_times", "examples_built/registration/affine_registration_3d", "examples_built/registration/affine_registration_masks", "examples_built/registration/bundle_group_registration", "examples_built/registration/bundle_registration", "examples_built/registration/bundlewarp_registration", "examples_built/registration/index", "examples_built/registration/register_binary_fuzzy", "examples_built/registration/sg_execution_times", "examples_built/registration/streamline_registration", "examples_built/registration/syn_registration_2d", "examples_built/registration/syn_registration_3d", "examples_built/segmentation/brain_extraction_dwi_1", "examples_built/segmentation/bundle_extraction", "examples_built/segmentation/fast_streamline_search", "examples_built/segmentation/index", "examples_built/segmentation/segment_clustering_features", "examples_built/segmentation/segment_clustering_metrics", "examples_built/segmentation/segment_extending_clustering_framework", "examples_built/segmentation/segment_quickbundles", "examples_built/segmentation/sg_execution_times", "examples_built/segmentation/tissue_classification", "examples_built/simulations/index", "examples_built/simulations/reconst_dsid_1", "examples_built/simulations/sg_execution_times", "examples_built/simulations/simulate_dki", "examples_built/simulations/simulate_multi_tensor", "examples_built/streamline_analysis/afq_tract_profiles", "examples_built/streamline_analysis/bundle_assignment_maps", "examples_built/streamline_analysis/bundle_shape_similarity", "examples_built/streamline_analysis/cluster_confidence", "examples_built/streamline_analysis/index", "examples_built/streamline_analysis/path_length_map", "examples_built/streamline_analysis/sg_execution_times", "examples_built/streamline_analysis/streamline_length", "examples_built/streamline_analysis/streamline_tools", "examples_built/visualization/index", "examples_built/visualization/sg_execution_times", "examples_built/visualization/viz_advanced", "examples_built/visualization/viz_bundles", "examples_built/visualization/viz_roi_contour", "examples_built/visualization/viz_slice", "examples_built/workflows/combined_workflow_creation", "examples_built/workflows/index", "examples_built/workflows/sg_execution_times", "examples_built/workflows/workflow_creation", "faq", "gimbal_lock", "glossary", "index", "installation", "interfaces/basic_flow", "interfaces/buan_flow", "interfaces/bundle_segmentation_flow", "interfaces/bundlewarp_registration_flow", "interfaces/data_fetch", "interfaces/denoise_flow", "interfaces/gibbs_unringing_flow", "interfaces/index", "interfaces/motion_flow", "interfaces/reconstruction_flow", "interfaces/registration_flow", "interfaces/tracking_flow", "introduction", "mission", "note_about_examples", "old_highlights", "old_news", "reconstruction_models_list", "reconstruction_models_list_2", "reference/dipy", "reference/dipy.__config__", "reference/dipy.align", "reference/dipy.boots", "reference/dipy.core", "reference/dipy.data", "reference/dipy.denoise", "reference/dipy.direction", "reference/dipy.io", "reference/dipy.nn", "reference/dipy.reconst", "reference/dipy.segment", "reference/dipy.sims", "reference/dipy.stats", "reference/dipy.tracking", "reference/dipy.viz", "reference/dipy.workflows", "reference/index", "reference_cmd/dipy_align_affine", "reference_cmd/dipy_align_syn", "reference_cmd/dipy_apply_transform", "reference_cmd/dipy_buan_lmm", "reference_cmd/dipy_buan_profiles", "reference_cmd/dipy_bundlewarp", "reference_cmd/dipy_correct_motion", "reference_cmd/dipy_denoise_lpca", "reference_cmd/dipy_denoise_mppca", "reference_cmd/dipy_denoise_nlmeans", "reference_cmd/dipy_denoise_patch2self", "reference_cmd/dipy_evac_plus", "reference_cmd/dipy_fetch", "reference_cmd/dipy_fit_csa", "reference_cmd/dipy_fit_csd", "reference_cmd/dipy_fit_dki", "reference_cmd/dipy_fit_dti", "reference_cmd/dipy_fit_ivim", "reference_cmd/dipy_fit_mapmri", "reference_cmd/dipy_gibbs_ringing", "reference_cmd/dipy_horizon", "reference_cmd/dipy_info", "reference_cmd/dipy_labelsbundles", "reference_cmd/dipy_mask", "reference_cmd/dipy_median_otsu", "reference_cmd/dipy_recobundles", "reference_cmd/dipy_reslice", "reference_cmd/dipy_slr", "reference_cmd/dipy_snr_in_cc", "reference_cmd/dipy_split", "reference_cmd/dipy_track", "reference_cmd/dipy_track_pft", "reference_cmd/index", "release_notes/release0.10", "release_notes/release0.11", "release_notes/release0.12", "release_notes/release0.13", "release_notes/release0.14", "release_notes/release0.15", "release_notes/release0.16", "release_notes/release0.6", "release_notes/release0.7", "release_notes/release0.8", "release_notes/release0.9", "release_notes/release1.0", "release_notes/release1.1", "release_notes/release1.2", "release_notes/release1.3", "release_notes/release1.4", "release_notes/release1.4.1", "release_notes/release1.5", "release_notes/release1.6", "release_notes/release1.7", "stateoftheart", "subscribe", "theory/b_and_q", "theory/bmatrix", "theory/gqi", "theory/index", "theory/sh_basis", "theory/spherical"], "filenames": ["api_changes.rst", "cite.rst", "data.rst", "dataset_list.rst", "dependencies.rst", "devel/coding_style_guideline.rst", "devel/commit_codes.rst", "devel/gitwash/configure_git.rst", "devel/gitwash/development_workflow.rst", "devel/gitwash/dot2_dot3.rst", "devel/gitwash/following_latest.rst", "devel/gitwash/forking_hell.rst", "devel/gitwash/git_development.rst", "devel/gitwash/git_install.rst", "devel/gitwash/git_intro.rst", "devel/gitwash/git_resources.rst", "devel/gitwash/index.rst", "devel/gitwash/maintainer_workflow.rst", "devel/gitwash/patching.rst", "devel/gitwash/set_up_fork.rst", "devel/index.rst", "devel/intro.rst", "devel/make_release.rst", "developers.rst", "documentation.rst", "examples_built/contextual_enhancement/contextual_enhancement.rst", "examples_built/contextual_enhancement/fiber_to_bundle_coherence.rst", "examples_built/contextual_enhancement/index.rst", "examples_built/contextual_enhancement/sg_execution_times.rst", "examples_built/fiber_tracking/index.rst", "examples_built/fiber_tracking/linear_fascicle_evaluation.rst", "examples_built/fiber_tracking/sg_execution_times.rst", "examples_built/fiber_tracking/surface_seed.rst", "examples_built/fiber_tracking/tracking_bootstrap_peaks.rst", "examples_built/fiber_tracking/tracking_deterministic.rst", "examples_built/fiber_tracking/tracking_introduction_eudx_1.rst", "examples_built/fiber_tracking/tracking_pft.rst", "examples_built/fiber_tracking/tracking_probabilistic.rst", "examples_built/fiber_tracking/tracking_ptt.rst", "examples_built/fiber_tracking/tracking_rumba.rst", "examples_built/fiber_tracking/tracking_sfm.rst", "examples_built/fiber_tracking/tracking_stopping_criterion.rst", "examples_built/file_formats/index.rst", "examples_built/file_formats/sg_execution_times.rst", "examples_built/file_formats/streamline_formats.rst", "examples_built/index.rst", "examples_built/multiprocessing/index.rst", "examples_built/multiprocessing/reconst_csa_parallel.rst", "examples_built/multiprocessing/reconst_csd_parallel.rst", "examples_built/multiprocessing/sg_execution_times.rst", "examples_built/preprocessing/brain_extraction_dwi.rst", "examples_built/preprocessing/denoise_ascm.rst", "examples_built/preprocessing/denoise_gibbs.rst", "examples_built/preprocessing/denoise_localpca.rst", "examples_built/preprocessing/denoise_mppca.rst", "examples_built/preprocessing/denoise_nlmeans.rst", "examples_built/preprocessing/denoise_patch2self.rst", "examples_built/preprocessing/gradients_spheres.rst", "examples_built/preprocessing/index.rst", "examples_built/preprocessing/motion_correction.rst", "examples_built/preprocessing/piesno.rst", "examples_built/preprocessing/reslice_datasets.rst", "examples_built/preprocessing/sg_execution_times.rst", "examples_built/preprocessing/snr_in_cc.rst", "examples_built/quick_start/index.rst", "examples_built/quick_start/quick_start.rst", "examples_built/quick_start/sg_execution_times.rst", "examples_built/quick_start/tracking_introduction_eudx.rst", "examples_built/reconstruction/histology_resdnn.rst", "examples_built/reconstruction/index.rst", "examples_built/reconstruction/kfold_xval.rst", "examples_built/reconstruction/reconst_csa.rst", "examples_built/reconstruction/reconst_csd.rst", "examples_built/reconstruction/reconst_cti.rst", "examples_built/reconstruction/reconst_dki.rst", "examples_built/reconstruction/reconst_dki_micro.rst", "examples_built/reconstruction/reconst_dsi.rst", "examples_built/reconstruction/reconst_dsi_metrics.rst", "examples_built/reconstruction/reconst_dsid.rst", "examples_built/reconstruction/reconst_dti.rst", "examples_built/reconstruction/reconst_forecast.rst", "examples_built/reconstruction/reconst_fwdti.rst", "examples_built/reconstruction/reconst_gqi.rst", "examples_built/reconstruction/reconst_ivim.rst", "examples_built/reconstruction/reconst_mapmri.rst", "examples_built/reconstruction/reconst_mcsd.rst", "examples_built/reconstruction/reconst_msdki.rst", "examples_built/reconstruction/reconst_qtdmri.rst", "examples_built/reconstruction/reconst_qti.rst", "examples_built/reconstruction/reconst_qtiplus.rst", "examples_built/reconstruction/reconst_rumba.rst", "examples_built/reconstruction/reconst_sfm.rst", "examples_built/reconstruction/reconst_sh.rst", "examples_built/reconstruction/reconst_shore.rst", "examples_built/reconstruction/reconst_shore_metrics.rst", "examples_built/reconstruction/restore_dti.rst", "examples_built/reconstruction/sg_execution_times.rst", "examples_built/registration/affine_registration_3d.rst", "examples_built/registration/affine_registration_masks.rst", "examples_built/registration/bundle_group_registration.rst", "examples_built/registration/bundle_registration.rst", "examples_built/registration/bundlewarp_registration.rst", "examples_built/registration/index.rst", "examples_built/registration/register_binary_fuzzy.rst", "examples_built/registration/sg_execution_times.rst", "examples_built/registration/streamline_registration.rst", "examples_built/registration/syn_registration_2d.rst", "examples_built/registration/syn_registration_3d.rst", "examples_built/segmentation/brain_extraction_dwi_1.rst", "examples_built/segmentation/bundle_extraction.rst", "examples_built/segmentation/fast_streamline_search.rst", "examples_built/segmentation/index.rst", "examples_built/segmentation/segment_clustering_features.rst", "examples_built/segmentation/segment_clustering_metrics.rst", "examples_built/segmentation/segment_extending_clustering_framework.rst", "examples_built/segmentation/segment_quickbundles.rst", "examples_built/segmentation/sg_execution_times.rst", "examples_built/segmentation/tissue_classification.rst", "examples_built/simulations/index.rst", "examples_built/simulations/reconst_dsid_1.rst", "examples_built/simulations/sg_execution_times.rst", "examples_built/simulations/simulate_dki.rst", "examples_built/simulations/simulate_multi_tensor.rst", "examples_built/streamline_analysis/afq_tract_profiles.rst", "examples_built/streamline_analysis/bundle_assignment_maps.rst", "examples_built/streamline_analysis/bundle_shape_similarity.rst", "examples_built/streamline_analysis/cluster_confidence.rst", "examples_built/streamline_analysis/index.rst", "examples_built/streamline_analysis/path_length_map.rst", "examples_built/streamline_analysis/sg_execution_times.rst", "examples_built/streamline_analysis/streamline_length.rst", "examples_built/streamline_analysis/streamline_tools.rst", "examples_built/visualization/index.rst", "examples_built/visualization/sg_execution_times.rst", "examples_built/visualization/viz_advanced.rst", "examples_built/visualization/viz_bundles.rst", "examples_built/visualization/viz_roi_contour.rst", "examples_built/visualization/viz_slice.rst", "examples_built/workflows/combined_workflow_creation.rst", "examples_built/workflows/index.rst", "examples_built/workflows/sg_execution_times.rst", "examples_built/workflows/workflow_creation.rst", "faq.rst", "gimbal_lock.rst", "glossary.rst", "index.rst", "installation.rst", "interfaces/basic_flow.rst", "interfaces/buan_flow.rst", "interfaces/bundle_segmentation_flow.rst", "interfaces/bundlewarp_registration_flow.rst", "interfaces/data_fetch.rst", "interfaces/denoise_flow.rst", "interfaces/gibbs_unringing_flow.rst", "interfaces/index.rst", "interfaces/motion_flow.rst", "interfaces/reconstruction_flow.rst", "interfaces/registration_flow.rst", "interfaces/tracking_flow.rst", "introduction.rst", "mission.rst", "note_about_examples.rst", "old_highlights.rst", "old_news.rst", "reconstruction_models_list.rst", "reconstruction_models_list_2.rst", "reference/dipy.rst", "reference/dipy.__config__.rst", "reference/dipy.align.rst", "reference/dipy.boots.rst", "reference/dipy.core.rst", "reference/dipy.data.rst", "reference/dipy.denoise.rst", "reference/dipy.direction.rst", "reference/dipy.io.rst", "reference/dipy.nn.rst", "reference/dipy.reconst.rst", "reference/dipy.segment.rst", "reference/dipy.sims.rst", "reference/dipy.stats.rst", "reference/dipy.tracking.rst", "reference/dipy.viz.rst", "reference/dipy.workflows.rst", "reference/index.rst", "reference_cmd/dipy_align_affine.rst", "reference_cmd/dipy_align_syn.rst", "reference_cmd/dipy_apply_transform.rst", "reference_cmd/dipy_buan_lmm.rst", "reference_cmd/dipy_buan_profiles.rst", "reference_cmd/dipy_bundlewarp.rst", "reference_cmd/dipy_correct_motion.rst", "reference_cmd/dipy_denoise_lpca.rst", "reference_cmd/dipy_denoise_mppca.rst", "reference_cmd/dipy_denoise_nlmeans.rst", "reference_cmd/dipy_denoise_patch2self.rst", "reference_cmd/dipy_evac_plus.rst", "reference_cmd/dipy_fetch.rst", "reference_cmd/dipy_fit_csa.rst", "reference_cmd/dipy_fit_csd.rst", "reference_cmd/dipy_fit_dki.rst", "reference_cmd/dipy_fit_dti.rst", "reference_cmd/dipy_fit_ivim.rst", "reference_cmd/dipy_fit_mapmri.rst", "reference_cmd/dipy_gibbs_ringing.rst", "reference_cmd/dipy_horizon.rst", "reference_cmd/dipy_info.rst", "reference_cmd/dipy_labelsbundles.rst", "reference_cmd/dipy_mask.rst", "reference_cmd/dipy_median_otsu.rst", "reference_cmd/dipy_recobundles.rst", "reference_cmd/dipy_reslice.rst", "reference_cmd/dipy_slr.rst", "reference_cmd/dipy_snr_in_cc.rst", "reference_cmd/dipy_split.rst", "reference_cmd/dipy_track.rst", "reference_cmd/dipy_track_pft.rst", "reference_cmd/index.rst", "release_notes/release0.10.rst", "release_notes/release0.11.rst", "release_notes/release0.12.rst", "release_notes/release0.13.rst", "release_notes/release0.14.rst", "release_notes/release0.15.rst", "release_notes/release0.16.rst", "release_notes/release0.6.rst", "release_notes/release0.7.rst", "release_notes/release0.8.rst", "release_notes/release0.9.rst", "release_notes/release1.0.rst", "release_notes/release1.1.rst", "release_notes/release1.2.rst", "release_notes/release1.3.rst", "release_notes/release1.4.rst", "release_notes/release1.4.1.rst", "release_notes/release1.5.rst", "release_notes/release1.6.rst", "release_notes/release1.7.rst", "stateoftheart.rst", "subscribe.rst", "theory/b_and_q.rst", "theory/bmatrix.rst", "theory/gqi.rst", "theory/index.rst", "theory/sh_basis.rst", "theory/spherical.rst"], "titles": ["API changes", "Publications", "Data", "&lt;no title&gt;", "Dependencies", "DIPY Coding Style Guideline", "Commit message codes", "Configure git", "Development workflow", "Two and three dots in difference specs", "Following the latest source", "Making your own copy (fork) of DIPY", "Git for development", "Install git", "Introduction", "git resources", "Working with DIPY source code", "Maintainer workflow", "Making a patch", "Set up your fork", "DIPY development", "Introduction", "A guide to making a DIPY release", "Developers", "Documentation", "Crossing-preserving contextual enhancement", "Fiber to bundle coherence measures", "Contextual Enhancement", "Computation times", "Fiber Tracking", "Linear fascicle evaluation (LiFE)", "Computation times", "Surface seeding for tractography", "Bootstrap and Closest Peak Direction Getters Example", "An introduction to the Deterministic Maximum Direction Getter", "Introduction to Basic Tracking", "Particle Filtering Tractography", "An introduction to the Probabilistic Direction Getter", "Parallel Transport Tractography", "Tracking with Robust Unbiased Model-BAsed Spherical Deconvolution (RUMBA-SD)", "Tracking with the Sparse Fascicle Model", "Using Various Stopping Criterion for Tractography", "File Formats", "Computation times", "Read/Write streamline files", "Examples", "Multiprocessing", "Parallel reconstruction using Q-Ball", "Parallel reconstruction using CSD", "Computation times", "Brain segmentation with median_otsu", "Denoise images using Adaptive Soft Coefficient Matching (ASCM)", "Suppress Gibbs oscillations", "Denoise images using Local PCA via empirical thresholds", "Denoise images using the Marcenko-Pastur PCA algorithm", "Denoise images using Non-Local Means (NLMEANS)", "Patch2Self: Self-Supervised Denoising via Statistical Independence", "Gradients and Spheres", "Preprocessing", "Between-volumes Motion Correction on DWI datasets", "Noise estimation using PIESNO", "Reslice diffusion datasets", "Computation times", "SNR estimation for Diffusion-Weighted Images", "Quick Start", "Getting started with DIPY", "Computation times", "Introduction to Basic Tracking", "Local reconstruction using the Histological ResDNN", "Reconstruction", "K-fold cross-validation for model comparison", "Reconstruct with Constant Solid Angle (Q-Ball)", "Reconstruction with Constrained Spherical Deconvolution", "Reconstruction of the diffusion signal with the correlation tensor model", "Reconstruction of the diffusion signal with the kurtosis tensor model", "Reconstruction of the diffusion signal with the WMTI model", "Reconstruct with Diffusion Spectrum Imaging", "Calculate DSI-based scalar maps", "DSI Deconvolution vs DSI", "Reconstruction of the diffusion signal with the Tensor model", "Crossing invariant fiber response function with FORECAST model", "Using the free water elimination model to remove DTI free water contamination", "Reconstruct with Generalized Q-Sampling Imaging", "Intravoxel incoherent motion", "Continuous and analytical diffusion signal modelling with MAP-MRI", "Reconstruction with Multi-Shell Multi-Tissue CSD", "Mean signal diffusion kurtosis imaging (MSDKI)", "Estimating diffusion time dependent q-space indices using qt-dMRI", "Reconstruct with Q-space Trajectory Imaging (QTI)", "Applying positivity constraints to Q-space Trajectory Imaging (QTI+)", "Reconstruction with Robust and Unbiased Model-BAsed Spherical Deconvolution", "Reconstruction with the Sparse Fascicle Model", "Signal Reconstruction Using Spherical Harmonics", "Continuous and analytical diffusion signal modelling with 3D-SHORE", "Calculate SHORE scalar maps", "Using the RESTORE algorithm for robust tensor fitting", "Computation times", "Affine Registration in 3D", "Affine Registration with Masks", "Groupwise Bundle Registration", "Direct Bundle Registration", "Nonrigid Bundle Registration with BundleWarp", "Registration", "Diffeomorphic Registration with binary and fuzzy images", "Computation times", "Applying image-based deformations to streamlines", "Symmetric Diffeomorphic Registration in 2D", "Symmetric Diffeomorphic Registration in 3D", "Brain segmentation with median_otsu", "Automatic Fiber Bundle Extraction with RecoBundles", "Fast Streamline Search", "Segmentation", "Tractography Clustering - Available Features", "Tractography Clustering - Available Metrics", "Enhancing QuickBundles with different metrics and features", "Tractography Clustering with QuickBundles", "Computation times", "Tissue Classification of a T1-weighted Structural Image", "Simulation", "DSI Deconvolution vs DSI", "Computation times", "DKI MultiTensor Simulation", "MultiTensor Simulation", "Extracting AFQ tract profiles from segmented bundles", "BUAN Bundle Assignment Maps Creation", "BUAN Bundle Shape Similarity Score", "Calculation of Outliers with Cluster Confidence Index", "Streamlines Analysis and Connectivity", "Calculate Path Length Map", "Computation times", "Streamline length and size reduction", "Connectivity Matrices, ROI Intersections and Density Maps", "Visualization", "Computation times", "Advanced interactive visualization", "Visualize bundles and metrics on bundles", "Visualization of ROI Surface Rendered with Streamlines", "Simple volume slicing", "Creating a new combined workflow", "Workflows", "Computation times", "Creating a new workflow.", "Frequently Asked Questions", "Gimbal lock", "Glossary", "Diffusion Imaging In Python", "Installation", "Introduction to command line interfaces", "BUndle ANalytics (BUAN) framework", "White Matter Bundle Segmentation with RecoBundles", "Nonrigid White Matter Bundle Registration with BundleWarp", "Downloading DIPY datasets", "Denoising", "Gibbs Unringing", "DIPY Workflows Interfaces", "Between-Volumes Motion Correction", "Reconstruction", "Registration", "Tracking", "What is DIPY?", "Mission statement", "A note about the examples", "Older Highlights", "Past Announcements", "TESTING 2", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dipy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">__config__</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">align</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">boots</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">denoise</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">reconst</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sims</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stats</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows</span></code>", "API Reference", "dipy_align_affine", "dipy_align_syn", "dipy_apply_transform", "dipy_buan_lmm", "dipy_buan_profiles", "dipy_bundlewarp", "dipy_correct_motion", "dipy_denoise_lpca", "dipy_denoise_mppca", "dipy_denoise_nlmeans", "dipy_denoise_patch2self", "dipy_evac_plus", "dipy_fetch", "dipy_fit_csa", "dipy_fit_csd", "dipy_fit_dki", "dipy_fit_dti", "dipy_fit_ivim", "dipy_fit_mapmri", "dipy_gibbs_ringing", "dipy_horizon", "dipy_info", "dipy_labelsbundles", "dipy_mask", "dipy_median_otsu", "dipy_recobundles", "dipy_reslice", "dipy_slr", "dipy_snr_in_cc", "dipy_split", "dipy_track", "dipy_track_pft", "Command Line Utilities Reference", "Release notes for DIPY version 0.10", "Release notes for DIPY version 0.11", "Release notes for DIPY version 0.12", "Release notes for DIPY version 0.13", "Release notes for DIPY version 0.14", "Release notes for DIPY version 0.15", "Release notes for DIPY version 0.16", "Release notes for DIPY version 0.6", "Release notes for DIPY version 0.7", "Release notes for DIPY version 0.8", "Release notes for DIPY version 0.9", "Release notes for DIPY version 1.0", "Release notes for DIPY version 1.1", "Release notes for DIPY version 1.2", "Release notes for DIPY version 1.3", "Release notes for DIPY version 1.4", "Release notes for DIPY version 1.4.1", "Release notes for DIPY version 1.5", "Release notes for DIPY version 1.6", "Release notes for DIPY version 1.7", "A quick overview of features", "Subscribe", "DIY Stuff about b and q", "The B matrix and Siemens DICOM", "Generalised Q-Sampling Imaging", "Theory and concepts", "Spherical Harmonic bases", "Spherical coordinates"], "terms": {"here": [0, 7, 8, 11, 13, 14, 15, 18, 19, 21, 22, 23, 25, 26, 30, 34, 35, 39, 40, 41, 48, 50, 51, 60, 61, 63, 65, 67, 70, 72, 74, 75, 79, 81, 82, 83, 85, 87, 88, 89, 90, 91, 97, 99, 100, 101, 108, 109, 112, 113, 115, 117, 121, 123, 128, 131, 134, 135, 136, 137, 143, 145, 146, 149, 150, 156, 161, 162, 168, 170, 172, 174, 176, 177, 178, 180, 227, 235, 237, 240, 241, 244], "we": [0, 4, 5, 8, 11, 18, 19, 21, 22, 23, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 160, 162, 168, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 211, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244], "provid": [0, 5, 30, 34, 35, 39, 40, 44, 54, 56, 65, 67, 72, 73, 74, 75, 80, 83, 84, 85, 86, 87, 88, 89, 93, 97, 98, 100, 101, 105, 107, 109, 112, 113, 114, 115, 126, 128, 134, 135, 136, 147, 148, 150, 156, 158, 161, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 202, 204, 205, 214, 217, 224, 225, 226, 228, 231, 235, 237, 244], "inform": [0, 2, 3, 5, 8, 13, 35, 36, 41, 44, 50, 51, 53, 54, 56, 65, 67, 68, 71, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 97, 98, 105, 108, 112, 113, 114, 115, 121, 123, 130, 142, 146, 147, 148, 149, 150, 152, 155, 157, 158, 162, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 184, 185, 194, 205, 224, 228, 231, 237, 244], "about": [0, 2, 5, 8, 18, 24, 30, 37, 39, 45, 47, 48, 54, 65, 72, 74, 75, 76, 79, 83, 84, 85, 86, 87, 88, 89, 90, 97, 105, 112, 113, 114, 115, 121, 128, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 162, 168, 170, 171, 174, 175, 176, 177, 179, 180, 182, 205, 217, 221, 222, 226, 228, 230, 234], "function": [0, 5, 6, 25, 30, 35, 37, 39, 40, 44, 45, 47, 48, 52, 54, 55, 57, 59, 60, 65, 67, 69, 71, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 106, 109, 110, 112, 113, 114, 121, 122, 130, 131, 134, 137, 142, 145, 146, 147, 156, 158, 161, 162, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 198, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 243, 244], "class": [0, 5, 30, 44, 79, 81, 85, 95, 97, 106, 107, 110, 114, 117, 134, 138, 141, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 217, 224, 225, 226], "have": [0, 8, 10, 11, 13, 15, 17, 18, 19, 21, 22, 30, 33, 35, 37, 40, 41, 44, 45, 55, 56, 57, 60, 61, 63, 65, 67, 69, 70, 71, 72, 73, 74, 76, 79, 82, 83, 84, 85, 86, 88, 90, 91, 92, 95, 97, 99, 100, 101, 105, 107, 112, 113, 114, 115, 117, 121, 123, 126, 128, 130, 131, 134, 135, 137, 138, 141, 142, 143, 144, 146, 148, 149, 150, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 189, 202, 204, 209, 211, 217, 221, 224, 226, 227, 228, 231, 232, 239, 240, 243], "been": [0, 5, 8, 17, 30, 41, 53, 54, 70, 74, 79, 83, 84, 99, 100, 105, 115, 117, 156, 168, 170, 174, 176, 177, 180, 243], "remov": [0, 8, 26, 30, 40, 44, 45, 50, 52, 53, 54, 69, 71, 75, 79, 86, 90, 96, 105, 106, 107, 108, 115, 126, 146, 153, 162, 168, 170, 172, 173, 174, 176, 177, 180, 182, 203, 211, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236], "renam": [0, 18, 147, 218, 219, 224, 225, 226, 228, 230], "ar": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 21, 22, 25, 26, 30, 34, 35, 37, 40, 41, 44, 45, 48, 52, 53, 54, 56, 57, 60, 63, 65, 67, 68, 70, 72, 73, 74, 75, 76, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 97, 98, 99, 100, 101, 103, 105, 106, 109, 110, 112, 113, 114, 117, 121, 122, 123, 125, 126, 130, 131, 134, 135, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 190, 191, 200, 202, 205, 208, 209, 210, 211, 214, 217, 219, 220, 221, 222, 223, 224, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244], "deprec": [0, 5, 162, 170, 174, 176, 180, 217, 219, 221, 222, 223, 224, 228, 229, 230, 231, 233, 234, 235], "recommend": [0, 5, 44, 45, 52, 59, 72, 74, 76, 84, 87, 89, 90, 109, 110, 134, 137, 142, 146, 152, 153, 155, 164, 165, 168, 170, 175, 176, 180, 182, 186, 199, 200, 223, 237], "dure": [0, 7, 8, 30, 59, 81, 84, 89, 95, 98, 105, 145, 155, 156, 157, 168, 170, 175, 176, 180, 182, 197, 198, 217, 222, 230], "differ": [0, 14, 25, 26, 30, 37, 40, 44, 45, 50, 51, 52, 54, 55, 56, 57, 60, 61, 70, 72, 73, 74, 76, 81, 83, 84, 85, 86, 87, 88, 91, 92, 95, 98, 100, 101, 103, 105, 106, 108, 109, 111, 112, 115, 116, 117, 121, 123, 130, 134, 137, 142, 143, 146, 148, 150, 153, 157, 158, 162, 168, 170, 171, 172, 173, 175, 176, 177, 180, 181, 182, 185, 204, 205, 217, 221, 222, 225, 226, 228, 230, 231, 235, 237, 239, 240, 243, 244], "releas": [0, 20, 24, 145, 162, 163, 168, 176, 237], "circl": [0, 106, 168, 170, 180], "denois": [0, 2, 3, 24, 25, 26, 45, 52, 58, 60, 62, 74, 85, 86, 95, 138, 145, 146, 154, 162, 166, 171, 183, 191, 192, 193, 194, 203, 219, 226, 228, 231, 232, 234, 235, 236], "localpca": [0, 54, 85, 183, 191, 220, 228, 231], "genpca": [0, 183], "can": [0, 2, 4, 5, 7, 8, 15, 17, 18, 19, 21, 22, 23, 25, 26, 30, 34, 35, 36, 37, 39, 40, 41, 44, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 162, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 191, 194, 198, 199, 200, 204, 205, 209, 218, 222, 226, 228, 231, 234, 235, 237, 238, 239, 240, 243, 244], "us": [0, 1, 2, 3, 4, 6, 7, 8, 13, 15, 19, 21, 22, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 49, 50, 52, 56, 57, 58, 61, 62, 63, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 88, 89, 90, 91, 94, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 137, 138, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 161, 162, 164, 165, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244], "fewer": [0, 109, 173, 180], "imag": [0, 1, 2, 3, 5, 22, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 47, 48, 50, 52, 56, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 87, 90, 91, 93, 94, 95, 96, 97, 98, 101, 102, 104, 106, 107, 108, 111, 116, 119, 121, 123, 126, 128, 130, 131, 134, 135, 136, 137, 142, 144, 147, 152, 153, 154, 155, 158, 160, 162, 164, 165, 168, 170, 171, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 190, 191, 192, 197, 199, 200, 201, 204, 205, 207, 208, 214, 215, 218, 219, 222, 223, 226, 228, 230, 234, 237, 239, 243], "than": [0, 5, 17, 18, 19, 22, 23, 26, 41, 51, 54, 56, 59, 68, 72, 74, 75, 79, 81, 83, 84, 86, 87, 89, 91, 97, 98, 109, 112, 121, 126, 128, 130, 131, 137, 143, 144, 146, 156, 162, 163, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 191, 204, 209, 211, 217, 218, 221, 224, 230, 234, 235], "patch": [0, 16, 17, 20, 51, 53, 56, 152, 172, 182, 191, 192, 193, 194, 221, 228, 230, 233, 235], "voxel": [0, 2, 3, 25, 26, 30, 34, 35, 36, 37, 40, 41, 44, 45, 48, 50, 52, 53, 54, 56, 60, 61, 63, 65, 67, 70, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 105, 108, 119, 121, 122, 128, 130, 131, 134, 137, 142, 147, 152, 156, 157, 158, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 194, 198, 201, 208, 210, 214, 215, 217, 218, 219, 224, 226, 227, 228, 230, 231, 237], "pca_noise_estim": [0, 53, 183, 236], "ha": [0, 5, 8, 15, 17, 22, 25, 30, 34, 35, 37, 41, 48, 53, 54, 56, 59, 60, 63, 67, 70, 71, 72, 74, 75, 76, 79, 81, 82, 83, 84, 86, 88, 89, 90, 97, 100, 105, 107, 112, 114, 115, 117, 130, 131, 137, 142, 143, 144, 146, 148, 156, 158, 168, 170, 172, 173, 174, 175, 176, 177, 178, 180, 182, 214, 217, 219, 222, 224, 226, 230, 236, 239, 243, 244], "new": [0, 5, 6, 10, 12, 17, 18, 19, 21, 22, 23, 25, 26, 30, 44, 45, 56, 57, 59, 61, 65, 72, 87, 90, 98, 100, 114, 137, 139, 140, 145, 146, 162, 163, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 182, 210, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 243], "argument": [0, 30, 83, 90, 99, 131, 138, 141, 149, 150, 151, 152, 153, 155, 156, 157, 158, 168, 170, 174, 175, 176, 179, 180, 181, 182, 216, 222, 224, 228, 230, 232, 233, 235], "images_as_sampl": [0, 172], "gener": [0, 1, 5, 8, 11, 14, 18, 21, 22, 23, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 145, 146, 147, 148, 153, 161, 162, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 189, 197, 198, 202, 204, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "furi": [0, 32, 35, 67, 68, 90, 105, 134, 142, 146, 162, 222, 228, 229, 230, 234], "minimum": [0, 26, 45, 87, 100, 109, 114, 162, 164, 165, 168, 170, 172, 173, 175, 176, 177, 180, 182, 215, 222, 226, 229], "version": [0, 2, 3, 4, 8, 22, 25, 26, 34, 51, 52, 53, 54, 55, 56, 81, 82, 103, 105, 121, 131, 142, 147, 158, 162, 163, 166, 168, 170, 171, 174, 176, 177, 178, 180, 183, 237, 243], "i": [0, 1, 4, 5, 6, 7, 8, 9, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244], "distutil": [0, 22, 230, 234], "drop": [0, 218, 219, 223, 228, 234], "io": [0, 2, 3, 8, 24, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 88, 90, 91, 93, 94, 95, 97, 98, 101, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 121, 123, 124, 126, 128, 131, 136, 137, 142, 145, 162, 166, 168, 171, 177, 178, 180, 183, 217, 219, 221, 223, 224, 228, 229, 234, 235], "bvectxt": [0, 162, 183, 234, 235], "modul": [0, 4, 5, 30, 33, 47, 48, 50, 51, 52, 53, 54, 56, 60, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 108, 109, 110, 112, 113, 114, 115, 121, 124, 125, 131, 134, 142, 146, 162, 166, 183, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 239, 241, 243], "The": [0, 1, 2, 5, 7, 9, 10, 11, 12, 15, 17, 18, 19, 21, 22, 23, 25, 26, 30, 34, 35, 36, 37, 39, 40, 41, 44, 47, 50, 51, 52, 53, 54, 56, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 112, 114, 117, 121, 122, 123, 126, 128, 130, 131, 134, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 156, 157, 158, 160, 161, 162, 163, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 191, 192, 194, 199, 201, 204, 205, 206, 209, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 241, 242, 243], "default": [0, 8, 11, 18, 25, 26, 35, 39, 40, 47, 50, 55, 56, 61, 65, 67, 68, 77, 79, 83, 89, 90, 91, 95, 97, 99, 103, 108, 109, 110, 112, 113, 117, 128, 134, 137, 138, 141, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 221, 222, 224, 225, 226, 228, 231, 232, 233, 234, 235, 236, 243], "option": [0, 4, 8, 17, 18, 35, 47, 52, 54, 56, 67, 71, 74, 83, 84, 85, 90, 97, 100, 135, 138, 141, 146, 147, 151, 152, 153, 155, 156, 157, 158, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 216, 217, 218, 219, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236], "command": [0, 7, 8, 10, 15, 18, 22, 24, 26, 52, 65, 137, 138, 141, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 171, 182, 198, 208, 219, 224, 225, 226, 228, 230, 234], "line": [0, 5, 7, 8, 10, 17, 18, 22, 24, 26, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 54, 59, 61, 63, 67, 73, 86, 87, 89, 100, 109, 110, 124, 126, 128, 131, 134, 135, 136, 137, 138, 141, 144, 146, 148, 149, 150, 154, 156, 158, 162, 168, 173, 175, 176, 180, 181, 182, 198, 208, 217, 218, 219, 221, 222, 225, 226, 227, 228, 229, 230, 234, 244], "patch2self": [0, 45, 58, 62, 162, 182, 183, 194, 232, 233, 234, 235], "ridg": [0, 56, 172, 176, 182, 194, 234], "ol": [0, 56, 172, 176, 182, 194, 199, 200, 234], "track": [0, 1, 5, 7, 17, 24, 26, 30, 31, 32, 33, 34, 36, 37, 38, 41, 44, 64, 66, 79, 91, 100, 101, 105, 112, 113, 114, 123, 126, 128, 130, 131, 134, 135, 136, 147, 154, 162, 166, 168, 170, 171, 173, 174, 176, 177, 179, 183, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237], "pmf": [0, 33, 37, 38, 39, 158, 183, 219, 222, 234], "parent": [0, 170, 182, 183], "pmfgen": [0, 183], "mandatori": [0, 138, 141, 168], "paramet": [0, 5, 34, 36, 41, 44, 48, 50, 51, 52, 53, 54, 56, 65, 70, 73, 74, 75, 77, 79, 82, 83, 84, 85, 86, 88, 89, 91, 93, 95, 100, 101, 103, 106, 108, 109, 117, 121, 138, 141, 142, 150, 152, 156, 157, 158, 162, 184, 185, 193, 194, 200, 201, 204, 218, 219, 220, 221, 222, 224, 226, 228, 229, 230, 231, 232, 234, 235, 236, 239], "sphere": [0, 25, 26, 33, 34, 36, 37, 38, 39, 40, 41, 45, 47, 48, 58, 62, 68, 71, 72, 76, 78, 79, 80, 82, 84, 85, 86, 87, 90, 91, 92, 93, 95, 119, 122, 131, 158, 164, 165, 166, 168, 171, 173, 175, 176, 178, 180, 181, 182, 183, 217, 219, 222, 224, 226, 228, 229, 243, 244], "vertic": [0, 26, 32, 40, 57, 72, 76, 78, 86, 90, 91, 92, 119, 122, 170, 171, 172, 173, 176, 178, 180, 181, 183, 222, 244], "correspond": [0, 1, 5, 25, 44, 52, 54, 56, 63, 65, 70, 77, 83, 85, 86, 87, 88, 89, 90, 93, 94, 106, 107, 112, 121, 123, 130, 135, 142, 146, 158, 168, 170, 172, 173, 175, 176, 180, 181, 182, 184, 189, 203, 237], "spheric": [0, 5, 24, 25, 26, 29, 31, 34, 36, 37, 41, 45, 47, 48, 54, 57, 68, 69, 70, 71, 75, 80, 85, 86, 89, 91, 96, 122, 145, 154, 162, 163, 164, 165, 166, 170, 171, 172, 173, 175, 180, 181, 182, 183, 197, 198, 217, 222, 224, 225, 226, 228, 230, 242], "distribut": [0, 25, 26, 30, 34, 35, 37, 40, 45, 47, 54, 56, 57, 60, 67, 68, 70, 71, 72, 79, 80, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 97, 117, 131, 146, 147, 152, 156, 158, 161, 164, 165, 166, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 182, 191, 192, 194, 198, 214, 215, 226, 229, 241, 243], "valu": [0, 2, 3, 26, 30, 34, 35, 37, 41, 44, 45, 47, 52, 53, 54, 56, 57, 59, 60, 63, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 100, 101, 103, 109, 117, 121, 122, 123, 125, 126, 128, 131, 134, 142, 144, 145, 147, 148, 150, 152, 153, 155, 156, 158, 162, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 191, 192, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 239, 240, 243], "get_pmf_valu": [0, 173, 183], "point": [0, 5, 8, 18, 19, 22, 25, 26, 30, 35, 37, 39, 40, 45, 52, 57, 67, 70, 74, 82, 84, 85, 86, 87, 91, 92, 100, 101, 112, 113, 114, 115, 122, 130, 142, 143, 144, 150, 157, 158, 162, 164, 165, 166, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 189, 202, 203, 210, 211, 214, 215, 217, 219, 222, 223, 224, 228, 229, 230, 231, 233, 234, 235, 241, 244], "xyz": [0, 57, 92, 170, 171, 172, 173, 174, 176, 180, 230], "which": [0, 5, 6, 7, 8, 22, 25, 26, 30, 33, 34, 35, 37, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 63, 65, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 97, 98, 100, 101, 103, 105, 106, 107, 108, 109, 114, 115, 119, 121, 122, 123, 128, 130, 131, 134, 135, 136, 137, 142, 145, 146, 147, 149, 152, 153, 156, 157, 158, 161, 162, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 191, 192, 204, 221, 228, 231, 237, 240, 243], "return": [0, 18, 34, 36, 47, 50, 53, 54, 71, 72, 73, 74, 77, 79, 83, 84, 85, 87, 90, 91, 94, 99, 101, 103, 105, 106, 107, 108, 110, 112, 113, 114, 122, 123, 130, 131, 134, 138, 156, 158, 192, 218, 219, 222, 225, 227, 229, 234, 236], "locat": [0, 5, 60, 79, 95, 98, 106, 123, 138, 141, 148, 152, 156, 157, 168, 170, 171, 172, 173, 180], "orient": [0, 25, 26, 32, 34, 35, 37, 47, 63, 67, 68, 71, 72, 79, 80, 82, 84, 85, 86, 87, 88, 90, 91, 93, 97, 100, 105, 112, 113, 123, 131, 142, 147, 156, 158, 162, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 198, 221, 222, 228, 243], "segment": [0, 5, 24, 25, 35, 36, 40, 47, 48, 52, 54, 58, 62, 63, 67, 68, 70, 71, 74, 75, 79, 85, 86, 90, 100, 101, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 124, 125, 127, 129, 130, 138, 148, 154, 158, 162, 166, 168, 173, 176, 178, 180, 183, 204, 208, 214, 215, 219, 224, 225, 228, 230, 233, 234, 235, 236], "from": [0, 2, 3, 5, 7, 9, 10, 13, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 138, 141, 142, 143, 144, 145, 147, 148, 149, 150, 153, 156, 158, 161, 162, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 191, 194, 198, 199, 200, 204, 208, 210, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 243, 244], "metric": [0, 1, 45, 52, 73, 75, 79, 81, 86, 89, 90, 97, 98, 99, 100, 103, 105, 106, 107, 111, 112, 115, 116, 123, 125, 126, 132, 133, 156, 157, 158, 162, 166, 171, 173, 174, 175, 176, 179, 182, 183, 184, 185, 187, 199, 200, 201, 202, 211, 214, 215, 217, 219, 222, 223, 224, 225, 228, 231, 233, 234, 235], "import": [0, 2, 6, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 145, 146, 168, 170, 171, 172, 173, 174, 176, 177, 178, 181, 183, 217, 219, 220, 221, 222, 223, 224, 226, 228, 229, 230, 233, 234, 235, 236, 239], "resamplefeatur": [0, 112, 123, 183], "wa": [0, 8, 9, 22, 23, 30, 44, 51, 52, 54, 55, 60, 63, 68, 71, 74, 75, 80, 81, 83, 84, 85, 86, 89, 90, 91, 95, 97, 100, 121, 128, 131, 138, 143, 147, 156, 162, 163, 168, 170, 171, 172, 174, 175, 176, 177, 180, 181, 182, 224, 225, 226, 227, 228], "replac": [0, 7, 44, 59, 61, 95, 128, 145, 152, 162, 168, 172, 176, 177, 180, 219, 220, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233], "featurespe": [0, 112, 113, 114, 123, 183, 219], "name": [0, 2, 3, 5, 8, 11, 17, 18, 19, 21, 22, 38, 65, 79, 85, 97, 117, 131, 138, 141, 143, 146, 148, 149, 150, 151, 152, 156, 157, 162, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 207, 208, 210, 212, 213, 214, 215, 217, 219, 220, 222, 223, 226, 228, 229, 230, 231, 233, 239], "number": [0, 1, 22, 32, 36, 37, 44, 47, 48, 50, 52, 54, 56, 57, 59, 60, 65, 70, 72, 74, 79, 81, 83, 85, 87, 88, 89, 90, 91, 97, 98, 99, 100, 101, 103, 108, 112, 113, 114, 115, 117, 128, 130, 131, 144, 147, 153, 157, 158, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 196, 197, 198, 203, 204, 205, 208, 210, 211, 213, 214, 215, 217, 219, 222, 223, 226, 227, 228, 231, 233, 234, 235, 237, 241], "core": [0, 4, 7, 13, 23, 24, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 50, 51, 53, 54, 57, 59, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 105, 108, 119, 121, 122, 126, 128, 131, 136, 145, 153, 162, 166, 168, 171, 172, 173, 174, 176, 178, 179, 180, 182, 183, 197, 198, 203, 210, 217, 219, 221, 224, 225, 226, 228, 229, 230, 233, 236], "thread": [0, 168, 172, 175, 176, 177, 180, 182, 211, 217, 218, 222, 223, 233, 235], "standard": [0, 2, 3, 4, 5, 26, 45, 51, 55, 60, 63, 74, 75, 78, 81, 85, 86, 87, 92, 95, 106, 109, 119, 123, 137, 146, 152, 162, 164, 165, 168, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 185, 191, 192, 200, 217, 222, 226, 228, 233, 235, 237, 239, 244], "num_thread": [0, 168, 172, 177, 180, 182, 211, 232, 233], "openmp": [0, 162, 168, 172, 177, 180, 182, 211, 217, 219, 220], "parallel": [0, 29, 31, 37, 40, 45, 46, 49, 60, 72, 80, 84, 87, 90, 137, 145, 156, 168, 170, 172, 173, 176, 177, 178, 180, 182, 197, 198, 202, 211, 218, 219, 222, 226, 228, 231, 234, 235, 236], "num_process": [0, 37, 40, 47, 48, 52, 72, 90, 153, 168, 172, 173, 176, 182, 197, 198, 203, 210], "multiprocess": [0, 24, 47, 48, 162, 173, 176, 182, 197, 198, 218, 219, 222, 226, 227, 233], "packag": [0, 5, 22, 35, 67, 81, 83, 84, 92, 95, 159, 168, 170, 171, 174, 175, 176, 177, 180, 182, 217, 221, 223, 225, 226, 228, 231, 233, 239, 240], "logic": [0, 97, 175, 176, 180, 217, 224], "when": [0, 1, 5, 6, 7, 8, 9, 18, 22, 35, 36, 41, 44, 67, 74, 76, 81, 84, 89, 90, 95, 99, 100, 105, 112, 113, 114, 121, 123, 130, 131, 135, 138, 141, 142, 143, 146, 158, 168, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 185, 217, 219, 220, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 239, 243], "If": [0, 1, 2, 5, 8, 11, 17, 18, 21, 22, 23, 30, 33, 35, 36, 44, 47, 48, 56, 67, 72, 73, 76, 83, 85, 87, 89, 90, 91, 95, 97, 105, 109, 112, 113, 126, 128, 130, 134, 136, 137, 142, 146, 148, 149, 150, 157, 158, 159, 161, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 189, 191, 192, 193, 194, 197, 198, 200, 203, 204, 208, 210, 211, 214, 215, 217, 238, 239, 240, 244], "none": [0, 30, 35, 40, 47, 48, 51, 53, 54, 56, 65, 67, 71, 72, 76, 77, 78, 79, 82, 86, 90, 92, 93, 94, 95, 97, 98, 100, 105, 107, 119, 121, 122, 125, 137, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 191, 198, 209, 211, 225, 226, 232, 233], "omp_num_thread": [0, 168, 172, 177, 180, 182, 211], "environ": [0, 68, 145, 146, 168, 172, 177, 180, 182, 211, 219], "variabl": [0, 30, 45, 54, 79, 83, 91, 98, 105, 134, 146, 162, 164, 165, 168, 170, 172, 175, 176, 177, 180, 182, 211, 217, 219, 222, 225, 226, 227, 230, 232, 233, 236], "set": [0, 2, 3, 5, 7, 8, 12, 16, 17, 18, 22, 25, 26, 30, 32, 33, 35, 36, 39, 40, 41, 47, 48, 50, 51, 53, 54, 56, 57, 60, 61, 63, 67, 70, 73, 74, 81, 83, 84, 85, 87, 89, 90, 91, 92, 97, 98, 99, 100, 101, 103, 105, 108, 109, 112, 114, 115, 117, 122, 123, 125, 126, 128, 130, 131, 134, 135, 136, 137, 143, 146, 150, 152, 153, 157, 158, 162, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 185, 189, 191, 194, 202, 211, 217, 218, 219, 221, 222, 223, 226, 230, 231, 234, 235, 236, 239, 240], "all": [0, 2, 5, 6, 7, 8, 18, 19, 22, 26, 30, 33, 35, 37, 40, 41, 44, 45, 52, 54, 56, 60, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 79, 81, 83, 84, 85, 86, 87, 89, 90, 95, 97, 98, 99, 100, 105, 109, 110, 112, 113, 121, 123, 125, 130, 131, 134, 137, 138, 141, 143, 148, 151, 153, 155, 161, 162, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 196, 209, 211, 219, 221, 224, 228, 229, 230, 233], "avail": [0, 2, 13, 41, 45, 48, 60, 65, 69, 73, 74, 85, 86, 87, 89, 97, 101, 111, 114, 116, 117, 131, 134, 135, 138, 141, 142, 145, 147, 151, 152, 153, 156, 157, 158, 161, 162, 163, 168, 170, 171, 172, 175, 176, 177, 180, 182, 185, 196, 211, 217, 219, 224, 226, 235, 239, 240, 243], "maximum": [0, 29, 31, 41, 45, 82, 87, 90, 92, 99, 110, 114, 153, 158, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 185, 189, 214, 215, 221, 222, 226, 234, 243], "num_cpu_cor": 0, "select": [0, 8, 25, 26, 30, 40, 52, 54, 68, 70, 75, 83, 84, 85, 86, 87, 89, 91, 106, 109, 125, 158, 168, 172, 173, 175, 176, 177, 180, 182, 185, 186, 214, 217, 237, 243], "an": [0, 5, 7, 8, 15, 18, 22, 23, 25, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 63, 65, 67, 69, 70, 71, 72, 74, 76, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 103, 105, 106, 107, 108, 110, 112, 113, 114, 117, 119, 121, 122, 123, 126, 128, 131, 134, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 156, 157, 158, 159, 162, 163, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 194, 197, 198, 199, 200, 202, 203, 204, 210, 211, 217, 218, 221, 222, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 239, 240, 243], "error": [0, 22, 30, 44, 47, 48, 70, 77, 79, 81, 94, 146, 168, 170, 171, 172, 173, 174, 175, 176, 177, 180, 182, 185, 197, 198, 203, 210, 211, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236], "rais": [0, 168, 172, 173, 174, 175, 177, 182, 197, 198, 203, 210, 211, 217, 219, 220, 221, 222, 224, 226], "same": [0, 5, 8, 15, 21, 30, 33, 34, 35, 44, 48, 56, 60, 61, 67, 72, 75, 79, 81, 82, 83, 84, 86, 87, 90, 95, 97, 98, 100, 101, 105, 107, 109, 110, 112, 113, 114, 115, 123, 124, 125, 128, 130, 135, 137, 142, 143, 146, 148, 149, 152, 158, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 218, 219, 224, 228, 230, 231, 233, 235, 237, 238, 240], "directli": [0, 7, 8, 17, 35, 37, 67, 70, 85, 86, 100, 101, 142, 149, 157, 168, 170, 174, 176, 177, 182, 218, 220, 243], "directiongett": [0, 173, 176, 183, 221, 234], "direct": [0, 2, 3, 5, 24, 25, 26, 29, 30, 31, 32, 35, 36, 38, 39, 40, 41, 45, 47, 48, 53, 54, 56, 60, 67, 70, 71, 72, 73, 74, 78, 79, 81, 82, 83, 84, 85, 86, 87, 90, 91, 101, 102, 104, 106, 107, 119, 121, 123, 126, 128, 131, 136, 142, 152, 156, 158, 162, 164, 165, 166, 168, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 197, 198, 211, 214, 217, 218, 219, 220, 221, 224, 225, 226, 228, 230, 234, 239, 240, 243, 244], "closest_peak_direction_gett": [0, 183], "basedirectiongett": [0, 183], "basepmfdirectiongett": [0, 183], "reconst": [0, 24, 25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 52, 54, 63, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 119, 121, 126, 128, 131, 136, 145, 166, 173, 183, 217, 218, 219, 220, 221, 222, 224, 225, 226, 228, 229, 234], "eudxdirectiongett": [0, 173, 183], "eudx_direction_gett": [0, 183], "migrat": [0, 162, 234], "tavi": 0, "azur": [0, 162, 229, 230, 231, 232, 234], "depend": [0, 35, 37, 45, 56, 63, 67, 69, 72, 74, 83, 85, 86, 96, 98, 112, 117, 131, 142, 146, 147, 152, 153, 156, 158, 162, 168, 170, 171, 172, 176, 177, 178, 180, 182, 201, 219, 222, 224, 226, 228, 229, 232, 234], "ad": [0, 5, 6, 7, 8, 18, 25, 41, 47, 48, 54, 68, 73, 74, 84, 85, 95, 101, 137, 143, 145, 146, 147, 148, 162, 168, 172, 174, 176, 177, 178, 180, 182, 183, 185, 191, 192, 199, 200, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236], "tqdm": [0, 162, 231], "registr": [0, 1, 2, 3, 24, 59, 104, 105, 109, 110, 123, 125, 145, 146, 154, 155, 162, 166, 168, 171, 174, 177, 181, 182, 184, 189, 206, 209, 211, 217, 219, 221, 222, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237], "interp": [0, 168, 231], "method": [0, 1, 2, 3, 25, 30, 35, 41, 45, 52, 53, 54, 56, 59, 60, 67, 70, 72, 73, 74, 78, 79, 83, 84, 85, 86, 89, 90, 95, 99, 100, 101, 109, 112, 113, 114, 115, 117, 119, 123, 126, 128, 130, 134, 135, 137, 138, 141, 145, 146, 150, 153, 154, 155, 156, 157, 162, 164, 165, 170, 172, 173, 175, 176, 177, 178, 182, 189, 191, 192, 193, 194, 203, 208, 221, 222, 224, 225, 226, 229, 230, 232, 234, 235, 236], "align": [0, 24, 25, 26, 59, 61, 63, 68, 73, 74, 75, 86, 97, 98, 99, 100, 101, 103, 105, 106, 107, 109, 121, 134, 137, 142, 143, 150, 156, 157, 166, 170, 172, 174, 176, 177, 180, 183, 185, 211, 217, 219, 220, 226, 230, 231, 232, 234, 236], "imaffin": [0, 97, 98, 105, 107, 183, 219, 228, 234], "affinemap": [0, 97, 98, 107, 183, 217, 221, 229, 231, 236], "transform": [0, 25, 30, 44, 50, 52, 59, 61, 72, 73, 79, 83, 90, 97, 98, 99, 100, 103, 105, 106, 107, 108, 109, 123, 131, 134, 135, 137, 142, 143, 144, 149, 150, 154, 162, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 189, 190, 209, 211, 217, 222, 223, 225, 226, 227, 228, 230, 231, 235, 236, 239], "interpol": [0, 36, 41, 44, 51, 53, 54, 56, 61, 68, 75, 77, 80, 83, 87, 94, 100, 131, 137, 144, 162, 168, 176, 180, 182, 183, 210, 219, 224, 228, 232, 234, 236], "transform_invers": [0, 106, 107, 168, 183], "tissu": [0, 2, 3, 35, 36, 45, 52, 67, 69, 73, 74, 79, 81, 83, 84, 86, 87, 88, 89, 96, 105, 111, 116, 121, 131, 153, 156, 158, 162, 164, 165, 171, 175, 176, 178, 180, 182, 183, 200, 218, 219, 227, 228, 229, 230, 231], "tissueclassifierhmrf": [0, 85, 117, 183, 231], "now": [0, 7, 8, 10, 11, 17, 18, 19, 22, 26, 30, 39, 40, 44, 48, 51, 52, 56, 57, 60, 65, 72, 73, 74, 76, 77, 79, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 97, 98, 99, 100, 101, 105, 106, 107, 109, 114, 117, 122, 125, 126, 128, 131, 134, 137, 138, 141, 143, 145, 146, 147, 162, 163, 170, 176, 217, 218, 224, 225, 226, 243], "check": [0, 5, 8, 18, 22, 56, 61, 65, 72, 74, 79, 84, 90, 106, 113, 114, 146, 147, 152, 153, 155, 156, 157, 158, 168, 170, 171, 172, 174, 175, 177, 180, 182, 190, 191, 196, 200, 205, 217, 218, 219, 220, 221, 222, 224, 225, 226, 228, 230, 231, 234, 237], "toler": [0, 99, 126, 168, 170, 172, 173, 174, 176, 177, 180, 217, 219, 222, 234], "base": [0, 1, 2, 3, 8, 24, 26, 29, 30, 31, 45, 47, 48, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 83, 86, 92, 93, 94, 96, 98, 100, 101, 102, 104, 109, 123, 126, 128, 131, 138, 141, 145, 147, 150, 152, 153, 154, 162, 168, 170, 171, 173, 174, 175, 177, 178, 179, 180, 183, 189, 192, 194, 203, 206, 209, 211, 217, 218, 219, 221, 222, 225, 226, 228, 229, 230, 231, 234, 236, 240, 242], "stop": [0, 8, 26, 29, 31, 33, 34, 35, 37, 38, 39, 45, 67, 131, 158, 168, 176, 177, 180, 182, 185, 214, 215, 222, 226, 228, 230], "criterion": [0, 5, 26, 29, 31, 33, 34, 37, 38, 39, 45, 131, 157, 158, 172, 176, 180, 182, 214], "everi": [0, 22, 30, 37, 40, 44, 57, 84, 87, 91, 100, 112, 113, 122, 130, 131, 134, 138, 141, 142, 146, 170, 171, 176, 177, 179, 180, 182, 222, 224, 237], "iter": [0, 57, 59, 63, 70, 72, 76, 90, 92, 97, 98, 99, 103, 105, 106, 107, 117, 122, 138, 141, 168, 170, 172, 175, 176, 177, 178, 180, 182, 183, 184, 185, 189, 208, 217, 221, 228, 233], "previous": [0, 50, 57, 77, 81, 85, 86, 87, 97, 108, 112, 113, 114, 117, 122, 138, 141, 157, 168, 176, 177, 180], "onli": [0, 5, 8, 9, 11, 17, 19, 22, 25, 26, 30, 40, 41, 44, 47, 52, 54, 56, 61, 65, 70, 72, 74, 76, 77, 79, 80, 81, 82, 84, 85, 86, 90, 91, 94, 95, 98, 100, 105, 106, 112, 113, 114, 115, 121, 122, 123, 131, 135, 138, 141, 142, 147, 148, 152, 153, 156, 157, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 194, 199, 200, 203, 204, 210, 211, 217, 218, 219, 222, 224, 226, 228, 229, 231, 236, 239, 240, 243], "10th": [0, 168], "thi": [0, 5, 6, 7, 8, 9, 10, 11, 14, 17, 18, 19, 22, 25, 26, 30, 33, 34, 35, 36, 37, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 137, 138, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 243, 244], "mai": [0, 5, 7, 8, 10, 14, 41, 56, 61, 72, 73, 74, 75, 79, 83, 84, 85, 86, 97, 98, 103, 105, 123, 135, 138, 141, 146, 152, 153, 155, 158, 163, 168, 170, 173, 174, 175, 176, 177, 180, 181, 182, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 208, 210, 212, 214, 215, 217, 219, 220, 221, 222, 223, 228, 229, 230, 232, 233, 234, 235, 236, 239, 240], "result": [0, 4, 5, 25, 26, 30, 33, 35, 39, 50, 51, 52, 53, 54, 56, 61, 65, 67, 68, 72, 74, 79, 83, 84, 85, 86, 87, 89, 90, 91, 95, 97, 98, 101, 103, 105, 106, 108, 110, 112, 114, 115, 117, 126, 131, 138, 141, 143, 144, 145, 147, 152, 153, 154, 155, 162, 168, 170, 171, 172, 173, 175, 176, 177, 180, 181, 182, 187, 188, 189, 191, 192, 193, 194, 203, 204, 208, 212, 213, 222, 228, 233, 234], "earlier": [0, 149], "termin": [0, 123, 146, 147, 151, 168, 170, 176], "previou": [0, 8, 60, 74, 75, 85, 97, 101, 146, 147, 148, 158, 168, 170, 172, 173, 175, 176, 180, 182, 218, 243], "reconstruct": [0, 2, 3, 24, 26, 34, 35, 36, 37, 39, 40, 41, 46, 49, 52, 53, 60, 63, 65, 67, 78, 80, 81, 83, 84, 89, 93, 96, 119, 142, 145, 147, 152, 153, 154, 158, 162, 166, 170, 171, 172, 175, 176, 178, 182, 197, 199, 200, 201, 218, 219, 220, 221, 224, 226, 229, 230, 231, 232, 233, 235, 237, 243], "csdeconv": [0, 25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 67, 70, 72, 90, 91, 183, 218, 220, 225, 230], "auto_respons": [0, 183, 220], "auto_response_ssst": [0, 25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 67, 70, 72, 90, 91, 183], "response_from_mask": [0, 85, 183], "response_from_mask_ssst": [0, 72, 183], "sim": [0, 24, 25, 72, 78, 86, 90, 92, 119, 121, 122, 166, 170, 171, 176, 183, 219, 222, 224, 228], "multi_shell_fiber_respons": [0, 85, 183], "move": [0, 16, 25, 26, 44, 57, 83, 92, 95, 97, 98, 99, 100, 101, 105, 106, 107, 109, 122, 131, 134, 137, 147, 149, 150, 156, 157, 162, 168, 170, 172, 174, 176, 177, 178, 180, 181, 182, 184, 185, 186, 189, 211, 217, 219, 220, 222, 223, 226, 228, 230, 231, 233, 234], "mcsd": [0, 85, 183, 229, 234], "In": [0, 5, 12, 16, 21, 22, 25, 26, 30, 34, 35, 36, 37, 40, 44, 47, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 63, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 105, 106, 112, 119, 121, 122, 123, 128, 130, 131, 134, 135, 137, 138, 141, 142, 143, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 162, 163, 168, 170, 172, 174, 175, 176, 177, 180, 181, 182, 202, 217, 231, 239, 240, 243], "prior": [0, 53, 54, 126, 152, 170, 177, 227], "user": [0, 8, 15, 18, 19, 22, 41, 65, 73, 76, 83, 88, 90, 97, 99, 101, 109, 134, 146, 147, 148, 152, 153, 157, 162, 168, 170, 174, 175, 177, 178, 180, 181, 182, 217, 221, 222, 228, 234, 241], "scipi": [0, 4, 5, 63, 68, 70, 74, 75, 81, 83, 131, 142, 146, 162, 168, 170, 176, 177, 180, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 234], "memori": [0, 30, 37, 40, 41, 71, 76, 83, 110, 142, 162, 168, 170, 174, 175, 176, 178, 182, 208, 217, 218, 220, 222, 226, 228, 230, 232, 234, 237], "overlap": [0, 87, 100, 106, 107, 162, 177, 230], "bug": [0, 6, 7, 8, 18, 162, 168, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 234, 236], "occur": [0, 81, 89, 176, 180], "multi_median": [0, 162, 183, 230], "caus": [0, 44, 74, 143, 168, 170, 172, 176, 177, 180, 182, 217, 225, 226], "overli": 0, "smooth": [0, 25, 26, 51, 53, 68, 74, 75, 84, 85, 87, 90, 97, 103, 117, 168, 170, 172, 176, 177, 180, 182, 184, 185, 210, 224], "output": [0, 5, 8, 9, 26, 35, 41, 50, 51, 53, 54, 55, 56, 67, 74, 92, 103, 108, 109, 114, 125, 134, 138, 141, 148, 149, 152, 153, 155, 156, 157, 158, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 216, 217, 218, 219, 222, 225, 226, 228, 230, 231, 232, 234], "fix": [0, 1, 6, 7, 8, 18, 22, 26, 36, 41, 83, 100, 141, 150, 162, 168, 170, 175, 176, 177, 178, 180, 181, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "regardless": [0, 176, 180], "": [0, 1, 2, 3, 5, 7, 8, 14, 15, 17, 18, 22, 23, 25, 26, 30, 33, 34, 35, 37, 38, 39, 40, 41, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 59, 63, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 124, 125, 128, 130, 131, 134, 135, 137, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 222, 225, 227, 228, 231, 234, 236, 237, 239, 240, 241, 243], "instal": [0, 5, 8, 10, 16, 20, 22, 24, 84, 141, 159, 217, 219, 220, 222, 225, 226, 227, 228, 229, 230], "via": [0, 8, 22, 25, 26, 30, 45, 58, 62, 86, 91, 93, 126, 138, 141, 146, 168, 170, 171, 175, 176, 177, 180, 182, 185, 217, 221, 239, 240], "median_otsu": [0, 25, 45, 47, 48, 52, 54, 58, 62, 63, 68, 71, 74, 75, 79, 85, 86, 90, 105, 106, 107, 111, 116, 182, 183, 208, 228, 230], "threshold": [0, 6, 26, 35, 36, 45, 56, 58, 62, 63, 67, 72, 81, 83, 84, 85, 86, 90, 109, 112, 113, 114, 115, 123, 125, 126, 148, 152, 156, 158, 168, 172, 173, 176, 180, 181, 182, 183, 185, 190, 191, 194, 197, 198, 199, 200, 201, 202, 204, 205, 209, 211, 212, 214, 215, 219, 222, 225, 226, 227, 228, 230], "should": [0, 5, 6, 7, 8, 11, 14, 17, 22, 30, 37, 41, 45, 54, 56, 59, 68, 70, 71, 72, 73, 74, 79, 83, 84, 85, 86, 87, 89, 90, 103, 112, 128, 130, 131, 138, 141, 142, 145, 146, 147, 155, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 186, 198, 202, 204, 217, 219, 220, 222, 227, 228, 229, 231, 233, 234, 235, 236], "process": [0, 5, 25, 26, 30, 47, 48, 51, 55, 56, 65, 72, 73, 74, 75, 81, 83, 86, 87, 97, 99, 105, 106, 112, 114, 125, 130, 134, 138, 141, 145, 146, 148, 152, 153, 155, 156, 157, 158, 162, 168, 170, 171, 172, 174, 175, 176, 177, 178, 180, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 208, 210, 212, 219, 228, 230, 234, 243], "pipelin": [0, 40, 56, 97, 98, 134, 137, 162, 168, 175, 176, 230, 231, 234], "after": [0, 8, 11, 25, 26, 36, 52, 55, 56, 72, 83, 87, 99, 100, 101, 105, 106, 109, 115, 117, 124, 130, 134, 137, 141, 144, 146, 149, 150, 152, 153, 168, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 185, 194, 209, 215, 219, 224, 225, 226, 230, 233], "make": [0, 5, 6, 7, 12, 15, 16, 17, 19, 20, 24, 47, 50, 56, 60, 71, 77, 79, 83, 84, 85, 87, 98, 100, 103, 106, 108, 109, 112, 113, 114, 123, 126, 128, 131, 134, 135, 138, 141, 142, 146, 148, 150, 160, 168, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 182, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 231, 234, 235, 238, 240, 243], "sure": [0, 5, 7, 8, 22, 71, 79, 98, 106, 112, 113, 114, 123, 134, 146, 148, 149, 150, 168, 177, 179, 181], "still": [0, 8, 22, 35, 39, 56, 63, 67, 76, 79, 84, 87, 89, 103, 131, 146, 156, 170, 174, 176, 177, 180, 218, 219, 226, 231, 243], "oper": [0, 4, 5, 25, 26, 44, 47, 63, 97, 134, 141, 168, 174, 176, 180, 182, 217, 237], "expect": [0, 30, 41, 74, 81, 95, 117, 142, 153, 157, 168, 171, 172, 174, 175, 176, 177, 180, 182, 183, 185, 219, 239, 240], "try": [0, 5, 19, 22, 74, 79, 92, 98, 106, 114, 115, 126, 145, 146, 147, 152, 153, 155, 156, 157, 158, 159, 160, 162, 168, 172, 176, 180, 220, 224, 225, 226, 228, 239, 240], "readjust": 0, "median_radiu": [0, 47, 48, 50, 52, 54, 71, 74, 75, 79, 85, 86, 90, 105, 106, 107, 108, 147, 177, 182, 208], "peak_direction_gett": [0, 228], "dipy_track_loc": [0, 228], "dipy_track": [0, 24, 147, 158, 216, 230], "other": [0, 5, 6, 12, 15, 17, 20, 21, 26, 30, 34, 35, 40, 47, 51, 54, 56, 61, 63, 65, 67, 70, 72, 74, 75, 79, 82, 83, 84, 85, 86, 87, 90, 91, 92, 95, 97, 98, 99, 100, 105, 106, 112, 117, 121, 125, 126, 131, 134, 138, 141, 142, 146, 148, 152, 153, 155, 156, 158, 168, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 194, 200, 220, 224, 225, 228, 231, 233, 239, 240], "gradient": [0, 2, 3, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 47, 48, 51, 53, 54, 56, 58, 59, 62, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 105, 106, 119, 121, 122, 126, 128, 131, 136, 142, 145, 147, 152, 156, 162, 164, 165, 166, 171, 172, 175, 176, 178, 182, 183, 185, 201, 202, 217, 218, 221, 222, 224, 226, 229, 230, 231, 235, 236, 239, 240, 241], "unique_bv": [0, 183], "unique_bvals_magnitud": [0, 183], "visual": [0, 8, 24, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 52, 54, 56, 57, 65, 67, 68, 71, 72, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 99, 101, 103, 106, 107, 109, 110, 112, 113, 114, 115, 119, 121, 122, 124, 125, 126, 128, 130, 131, 133, 137, 142, 144, 145, 146, 147, 148, 149, 150, 161, 162, 166, 168, 172, 173, 176, 177, 180, 182, 183, 204, 219, 220, 221, 222, 224, 225, 228, 231, 233, 234, 237], "window": [0, 6, 13, 22, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 54, 57, 67, 68, 71, 72, 78, 79, 80, 84, 85, 90, 91, 92, 93, 95, 100, 101, 105, 106, 109, 110, 112, 113, 114, 115, 119, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 142, 147, 148, 162, 168, 176, 180, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 234, 236, 237], "scene": [0, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 57, 67, 68, 71, 72, 78, 79, 80, 84, 85, 90, 91, 92, 93, 95, 100, 105, 109, 110, 112, 113, 114, 115, 119, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 180, 181, 182, 204, 230], "instead": [0, 17, 18, 39, 53, 56, 74, 90, 97, 109, 146, 148, 168, 170, 172, 174, 175, 176, 177, 179, 180, 181, 218, 219, 220, 221, 223, 226, 227, 229, 230, 233, 234, 235, 236], "render": [0, 5, 45, 126, 128, 132, 133, 134, 181, 217, 219, 220, 221, 222, 223, 226, 230, 233], "clear": [0, 5, 56, 57, 72, 79, 84, 91, 92, 95, 112, 113, 115, 135, 137, 168, 172, 176, 177, 183, 226, 230], "rm_all": 0, "img": [0, 52, 61, 65, 71, 76, 77, 80, 81, 82, 94, 103, 168, 171, 174, 177, 228], "get_data": [0, 222, 228, 229], "sinc": [0, 8, 18, 26, 30, 51, 52, 54, 55, 56, 63, 74, 79, 83, 84, 89, 90, 97, 103, 105, 112, 113, 115, 121, 123, 126, 141, 153, 168, 170, 172, 174, 175, 176, 177, 178, 182, 243], "nibabel": [0, 4, 5, 44, 50, 53, 54, 61, 65, 71, 73, 74, 76, 77, 79, 80, 81, 82, 94, 105, 108, 142, 146, 162, 168, 171, 174, 220, 222, 226, 229, 231, 235, 237], "np": [0, 5, 25, 26, 30, 32, 36, 41, 44, 50, 51, 52, 53, 54, 55, 56, 57, 60, 63, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 94, 95, 97, 98, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 128, 130, 131, 134, 135, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 194, 217, 219, 224, 231, 233, 235], "asanyarrai": 0, "dataobj": [0, 52, 80, 81, 105], "tractogram": [0, 2, 3, 39, 44, 109, 110, 123, 149, 158, 162, 168, 171, 174, 177, 181, 182, 204, 209, 211, 214, 215, 228, 233, 234, 235], "streamlin": [0, 1, 2, 3, 24, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 67, 99, 100, 101, 102, 104, 109, 111, 112, 113, 114, 115, 116, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 145, 148, 150, 154, 158, 162, 166, 168, 171, 173, 176, 177, 179, 182, 183, 189, 204, 206, 209, 211, 214, 215, 217, 218, 219, 220, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237], "statefultractogram": [0, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 67, 101, 105, 109, 131, 162, 181, 183, 230, 234], "creat": [0, 5, 7, 12, 25, 26, 30, 32, 33, 35, 36, 40, 41, 44, 45, 52, 57, 65, 67, 72, 74, 75, 78, 79, 81, 83, 85, 89, 92, 97, 98, 99, 105, 107, 112, 113, 114, 119, 122, 123, 124, 125, 130, 131, 134, 135, 136, 139, 140, 143, 147, 148, 149, 151, 152, 153, 155, 156, 157, 158, 159, 162, 163, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 207, 217, 221, 222, 224, 225, 226, 227, 228, 230, 233], "anoth": [0, 7, 22, 26, 30, 44, 83, 110, 141, 168, 170, 174, 176, 177, 178, 225, 226, 229, 236, 239], "one": [0, 5, 6, 8, 11, 18, 22, 26, 30, 35, 44, 45, 51, 53, 54, 56, 57, 59, 60, 63, 65, 67, 68, 70, 72, 74, 75, 76, 77, 79, 81, 82, 83, 85, 86, 87, 90, 91, 93, 94, 95, 97, 100, 105, 107, 110, 112, 114, 121, 122, 123, 130, 131, 136, 138, 142, 143, 144, 146, 153, 157, 158, 162, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 194, 199, 200, 204, 217, 219, 221, 223, 226, 228, 229, 231, 233, 236, 239, 240, 243], "workflow": [0, 2, 12, 14, 16, 18, 24, 140, 145, 148, 149, 150, 152, 153, 155, 156, 157, 158, 162, 183, 187, 188, 191, 192, 193, 194, 199, 200, 201, 202, 203, 207, 208, 214, 215, 218, 219, 220, 221, 222, 223, 228, 229, 230, 231, 232, 233, 234, 235, 236], "dipy_nlmean": [0, 141], "dipy_denoise_nlmean": [0, 24, 152, 216], "get_fdata": [0, 59, 80, 81, 89, 229], "modif": [0, 112, 168, 170, 176, 177, 182, 219, 220], "appli": [0, 25, 26, 45, 48, 52, 53, 56, 69, 71, 72, 74, 75, 76, 77, 82, 86, 90, 95, 97, 100, 102, 104, 106, 107, 109, 115, 130, 131, 137, 142, 152, 153, 154, 155, 162, 168, 170, 172, 175, 176, 177, 178, 180, 181, 182, 185, 186, 187, 188, 193, 194, 203, 204, 208, 210, 211, 214, 222, 223, 226, 229, 230, 234, 237, 240], "codebas": [0, 145, 162], "datatyp": [0, 174, 226], "float64": [0, 25, 51, 55, 168, 170, 176, 180, 217, 222, 228, 235], "some": [0, 4, 7, 11, 12, 15, 17, 18, 21, 22, 30, 35, 44, 45, 57, 59, 60, 65, 67, 69, 70, 73, 74, 81, 83, 84, 85, 86, 87, 89, 90, 92, 95, 98, 103, 105, 107, 109, 112, 113, 122, 123, 126, 128, 130, 131, 134, 135, 136, 138, 141, 142, 143, 145, 146, 147, 148, 157, 161, 164, 165, 168, 170, 171, 172, 176, 177, 180, 182, 199, 200, 208, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 240], "introduc": [0, 5, 39, 52, 72, 83, 85, 89, 90, 100, 101, 156, 172, 176, 218, 226], "break": [0, 6, 100, 137, 170, 171, 172, 217, 222, 224, 226, 228, 229, 234, 236], "backward": [0, 6, 25, 168, 172, 173, 176, 226, 234], "compat": [0, 6, 73, 162, 172, 173, 174, 175, 176, 177, 218, 222, 223, 224, 225, 226, 227, 228, 231, 234], "python": [0, 1, 4, 5, 22, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 159, 161, 162, 168, 170, 172, 174, 175, 176, 177, 181, 182, 183, 198, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 233, 234, 235, 236], "harmon": [0, 8, 24, 34, 37, 45, 47, 69, 71, 80, 93, 96, 156, 162, 166, 168, 171, 172, 173, 176, 181, 182, 197, 198, 217, 222, 224, 226, 242], "mrtrix": [0, 171, 173, 176, 177, 228, 230, 231, 243], "fibernav": 0, "tournier07": [0, 172, 173, 175, 176, 243], "descoteaux07": [0, 92, 172, 173, 175, 176, 243], "cycl": [0, 168, 170, 237], "start": [0, 8, 14, 22, 23, 24, 33, 37, 38, 39, 40, 47, 48, 57, 59, 60, 61, 66, 72, 81, 83, 87, 88, 90, 95, 97, 99, 100, 101, 114, 123, 125, 130, 131, 134, 137, 143, 146, 156, 158, 159, 168, 170, 173, 175, 176, 177, 180, 181, 182, 189, 215, 226, 228, 237, 241], "data": [0, 1, 3, 5, 7, 24, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 168, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236], "default_spher": [0, 25, 26, 34, 35, 36, 37, 38, 41, 48, 67, 71, 72, 95, 126, 128, 131, 136, 176, 178, 181, 183], "symmetric724": [0, 85, 92, 171, 172, 228], "repulsion724": [0, 38, 47, 68, 76, 78, 79, 80, 82, 84, 90, 93, 119, 122, 171, 172, 176, 182, 228], "more": [0, 4, 5, 6, 11, 18, 21, 23, 26, 30, 39, 40, 41, 44, 45, 51, 54, 55, 68, 70, 74, 75, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 97, 100, 101, 105, 109, 112, 113, 114, 121, 125, 126, 128, 130, 131, 134, 136, 137, 142, 144, 145, 146, 147, 148, 149, 150, 155, 159, 162, 163, 164, 165, 166, 168, 170, 172, 173, 175, 176, 177, 178, 180, 181, 182, 191, 192, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 235, 237, 244], "evenli": [0, 40, 45, 57, 86, 92, 164, 165, 170, 176, 180], "mask": [0, 2, 3, 8, 25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 54, 55, 60, 63, 67, 68, 71, 72, 73, 74, 75, 79, 81, 82, 85, 86, 87, 88, 89, 90, 102, 104, 105, 106, 107, 108, 126, 128, 131, 136, 147, 156, 158, 162, 168, 171, 172, 173, 175, 176, 180, 181, 183, 195, 197, 198, 199, 200, 201, 207, 208, 212, 214, 215, 217, 218, 219, 222, 223, 224, 225, 226, 228, 230, 232, 234, 236], "follow": [0, 2, 5, 6, 7, 8, 16, 18, 19, 20, 21, 22, 23, 30, 34, 35, 37, 41, 44, 52, 53, 54, 56, 57, 59, 61, 63, 65, 67, 73, 74, 75, 76, 79, 83, 85, 86, 87, 88, 89, 91, 95, 97, 100, 112, 122, 134, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 156, 157, 158, 160, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 194, 199, 200, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240], "wai": [0, 5, 7, 8, 14, 15, 17, 18, 21, 22, 32, 34, 35, 37, 51, 52, 57, 59, 65, 67, 70, 72, 73, 74, 75, 76, 79, 81, 84, 85, 86, 87, 90, 114, 122, 123, 131, 134, 135, 137, 138, 142, 146, 147, 155, 156, 158, 168, 170, 173, 176, 177, 178, 180, 182, 202, 227, 240], "you": [0, 1, 2, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 33, 35, 40, 44, 47, 48, 52, 54, 55, 57, 59, 61, 65, 67, 70, 71, 72, 73, 74, 76, 79, 81, 82, 83, 84, 85, 86, 87, 91, 92, 95, 97, 100, 101, 109, 112, 113, 114, 123, 126, 128, 130, 134, 135, 136, 137, 138, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 168, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 204, 206, 209, 210, 218, 222, 224, 235, 237, 238], "4d": [0, 53, 55, 56, 65, 72, 78, 79, 83, 90, 119, 145, 152, 156, 168, 170, 172, 173, 174, 175, 176, 177, 178, 180, 182, 203, 208, 210, 213, 222, 228, 230], "volum": [0, 1, 2, 3, 24, 30, 36, 39, 41, 44, 45, 50, 53, 54, 56, 58, 61, 62, 65, 72, 75, 76, 79, 81, 83, 84, 85, 86, 88, 89, 90, 91, 95, 97, 98, 105, 106, 107, 108, 117, 123, 128, 132, 133, 138, 142, 147, 152, 153, 154, 156, 158, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 208, 210, 212, 213, 214, 215, 217, 219, 221, 225, 228, 230, 231, 234, 241], "vol_idx": [0, 47, 48, 52, 54, 63, 71, 74, 75, 79, 85, 86, 90, 105, 147, 156, 177, 182, 208, 213, 228], "requir": [0, 4, 5, 25, 26, 30, 40, 44, 56, 61, 68, 74, 75, 80, 84, 86, 87, 88, 89, 90, 91, 98, 109, 110, 112, 114, 115, 121, 134, 137, 146, 147, 148, 149, 152, 156, 157, 158, 168, 170, 174, 175, 176, 177, 178, 180, 182, 208, 213, 219, 226, 228, 230, 231, 232, 236], "order": [0, 5, 22, 25, 26, 30, 35, 44, 47, 48, 51, 55, 56, 67, 71, 73, 74, 77, 79, 80, 83, 84, 87, 88, 89, 92, 93, 97, 98, 100, 105, 114, 131, 137, 151, 152, 156, 157, 158, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 197, 198, 202, 210, 217, 220, 222, 224, 228, 230, 234, 235, 243, 244], "also": [0, 1, 5, 7, 8, 19, 35, 37, 39, 40, 41, 44, 50, 51, 52, 54, 55, 56, 57, 59, 60, 63, 65, 67, 70, 71, 72, 73, 74, 75, 76, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 97, 98, 99, 101, 105, 106, 107, 108, 112, 114, 115, 117, 121, 122, 125, 128, 130, 131, 134, 135, 137, 138, 141, 142, 143, 144, 145, 146, 148, 152, 153, 155, 156, 157, 158, 160, 168, 175, 177, 181, 182, 204, 208, 217, 237, 243, 244], "load": [0, 32, 33, 34, 35, 36, 37, 39, 41, 44, 51, 53, 54, 56, 57, 59, 60, 61, 65, 67, 68, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 84, 86, 88, 89, 90, 93, 94, 95, 99, 106, 109, 112, 113, 114, 115, 131, 134, 137, 142, 166, 170, 171, 174, 175, 182, 204, 217, 222, 224, 228, 235], "save": [0, 7, 8, 35, 40, 44, 50, 51, 53, 54, 56, 57, 59, 61, 63, 65, 67, 68, 71, 72, 73, 76, 77, 79, 80, 82, 85, 90, 91, 92, 94, 95, 100, 101, 105, 108, 109, 113, 115, 121, 122, 125, 128, 131, 134, 137, 138, 141, 142, 145, 148, 149, 150, 152, 153, 155, 156, 157, 158, 162, 166, 168, 170, 171, 173, 174, 175, 179, 180, 181, 182, 184, 185, 186, 187, 188, 190, 193, 194, 195, 197, 198, 199, 200, 201, 202, 204, 208, 210, 212, 214, 215, 219, 222, 223, 226, 228, 229, 230, 231, 233, 235], "load_tractogram": [0, 44, 105, 112, 113, 114, 115, 177, 183, 229], "save_tractogram": [0, 44, 101, 105, 183], "trk": [0, 2, 3, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 67, 101, 105, 109, 123, 131, 142, 147, 148, 149, 150, 171, 174, 182, 189, 204, 225, 228, 229, 231], "tck": [0, 2, 3, 44, 174, 182, 204, 222, 228, 229, 230], "vtk": [0, 4, 44, 146, 162, 183, 217, 219, 220, 221, 222, 226, 227, 230, 234, 236], "fib": [0, 2, 3, 44, 174], "dpy": [0, 2, 3, 44, 142, 166, 182, 183, 204, 219, 237], "refer": [0, 1, 8, 14, 19, 22, 24, 44, 45, 83, 87, 103, 136, 146, 154, 162, 164, 165, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 241, 242, 244], "nifti": [0, 44, 59, 61, 65, 79, 128, 138, 142, 145, 148, 156, 157, 168, 171, 174, 176, 179, 180, 182, 183, 186, 197, 198, 200, 202, 221, 223, 228, 237], "file": [0, 2, 3, 4, 5, 7, 8, 18, 22, 24, 28, 30, 31, 35, 40, 43, 49, 56, 59, 61, 62, 65, 66, 67, 73, 79, 83, 94, 96, 97, 98, 104, 105, 109, 116, 120, 123, 129, 131, 133, 138, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 155, 156, 157, 158, 162, 168, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 237], "need": [0, 5, 7, 8, 10, 11, 17, 20, 30, 33, 35, 37, 44, 45, 47, 50, 51, 54, 55, 56, 57, 67, 70, 71, 73, 74, 76, 79, 83, 84, 85, 86, 87, 91, 92, 95, 97, 98, 99, 105, 106, 107, 108, 112, 113, 114, 121, 122, 123, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 164, 165, 168, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 194, 204, 210, 214, 215, 217, 218, 219, 220, 221, 222, 224, 226, 228, 229, 230, 235, 238, 240], "guarante": [0, 44, 84, 112, 176, 180], "proper": [0, 90, 176, 182, 217], "spatial": [0, 25, 30, 39, 44, 54, 79, 81, 83, 90, 93, 105, 112, 131, 145, 156, 162, 170, 172, 174, 176, 177, 180, 182, 224, 228, 235, 241], "handl": [0, 4, 8, 44, 52, 65, 134, 145, 162, 168, 170, 171, 174, 175, 181, 182, 218, 219, 220, 221, 222, 225, 226, 228, 229, 230, 231, 232, 235], "were": [0, 30, 45, 53, 56, 72, 81, 83, 86, 87, 88, 101, 105, 126, 131, 142, 164, 165, 168, 170, 171, 172, 176, 180, 182, 224, 225], "modifi": [0, 8, 44, 97, 98, 99, 115, 128, 131, 168, 170, 171, 176, 177, 180, 182, 189, 225, 230, 231, 243], "enforc": [0, 7, 74, 84, 89, 130, 170, 171, 174, 176, 233], "affin": [0, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 53, 54, 55, 56, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 82, 84, 85, 86, 88, 90, 91, 93, 94, 95, 99, 100, 101, 102, 104, 105, 108, 109, 123, 126, 128, 131, 134, 135, 136, 137, 142, 144, 145, 147, 155, 157, 162, 170, 171, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 211, 217, 219, 221, 222, 223, 226, 227, 228, 230, 234], "uniform": [0, 51, 60, 168, 170, 176], "docstr": [0, 5, 138, 141, 182, 217, 218, 219, 220, 223, 224, 226, 227, 229, 231, 232, 234, 235, 244], "deform_streamlin": [0, 105, 183, 234, 235], "select_by_roi": [0, 183], "orient_by_roi": [0, 183, 219, 222], "_extract_v": 0, "values_from_volum": [0, 183, 219], "util": [0, 24, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 67, 79, 83, 95, 109, 126, 128, 130, 131, 136, 147, 156, 162, 168, 170, 181, 183, 218, 219, 220, 222, 224, 226, 228, 229, 230, 234, 236], "density_map": [0, 44, 131, 183, 230], "connectivity_matrix": [0, 131, 183, 222, 226, 229], "seeds_from_mask": [0, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 67, 126, 128, 131, 136, 183], "random_seeds_from_mask": [0, 183], "target": [0, 22, 41, 56, 99, 100, 105, 109, 131, 149, 168, 170, 175, 177, 179, 182, 183, 189, 219, 222, 226], "target_line_bas": [0, 183, 230], "near_roi": [0, 26, 183, 234], "length": [0, 45, 83, 84, 100, 101, 112, 113, 114, 123, 126, 127, 129, 134, 135, 142, 144, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 204, 209, 211, 217, 219, 222, 226, 227, 234, 244], "path_length": [0, 128, 183], "affine_for_trackvi": 0, "move_streamlin": 0, "flexi_tvis_affin": 0, "get_flexi_tvis_affin": [0, 235], "delet": [0, 12, 22, 82, 146, 168, 170, 171, 174, 217, 221, 225, 226, 228], "life": [0, 29, 31, 45, 73, 162, 170, 183, 218, 226, 227, 228, 229, 230, 231], "voxel2streamlin": [0, 183], "setup": [0, 22, 146, 168, 183, 218, 219, 226, 236], "fit": [0, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 48, 52, 54, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 105, 119, 145, 156, 160, 162, 164, 165, 168, 170, 172, 173, 175, 176, 177, 180, 181, 182, 183, 197, 198, 200, 201, 202, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 230, 234, 235, 236], "fibermodel": [0, 30, 183], "afq_profil": [0, 123, 183, 233], "stat": [0, 7, 24, 70, 91, 123, 124, 162, 166, 168, 170, 176, 183, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "analysi": [0, 1, 5, 21, 24, 35, 36, 40, 41, 52, 54, 59, 63, 65, 67, 73, 74, 77, 80, 81, 84, 85, 86, 93, 94, 101, 123, 124, 128, 145, 147, 148, 149, 150, 152, 155, 156, 158, 161, 162, 168, 170, 171, 172, 176, 177, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 223, 228, 230, 235, 239], "similarli": [0, 83, 87, 89, 168, 171, 182, 185], "simul": [0, 24, 57, 78, 84, 86, 92, 95, 119, 120, 130, 166, 170, 171, 172, 176, 178, 217, 224, 231], "singletensor": [0, 228], "single_tensor": [0, 121, 183, 219, 228], "multitensor": [0, 45, 86, 92, 118, 120, 178], "multi_tensor": [0, 78, 86, 119, 122, 176, 183, 219], "sticksandbal": 0, "sticks_and_bal": [0, 176, 183], "voxel_s": [0, 36, 44, 61, 76, 82, 170, 173, 174, 180, 183, 228], "stremline_map": 0, "_util": [0, 183], "_mapping_to_voxel": 0, "peaksandmetricsdirectiongett": [0, 221, 228], "localtrack": [0, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 67, 126, 128, 131, 136, 183, 219, 228, 234], "particlefilteringtrack": [0, 36, 183], "local": [0, 1, 2, 3, 8, 16, 19, 22, 26, 34, 35, 36, 38, 45, 51, 52, 54, 56, 58, 62, 67, 69, 72, 79, 86, 90, 97, 106, 109, 123, 128, 146, 149, 154, 156, 162, 168, 171, 173, 175, 176, 177, 178, 180, 182, 183, 191, 192, 193, 194, 203, 206, 209, 211, 214, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 241], "local_track": [0, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 67, 126, 128, 131, 136, 183], "thei": [0, 5, 8, 19, 36, 44, 53, 61, 63, 70, 73, 74, 79, 87, 90, 93, 97, 99, 100, 101, 112, 113, 114, 115, 126, 131, 134, 138, 141, 144, 147, 148, 152, 156, 168, 170, 171, 173, 176, 177, 180, 181, 182, 228, 239, 240], "tissue_classifi": 0, "stopping_criterion": [0, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 67, 126, 128, 131, 136, 173, 182, 183, 215], "tissueclassifi": 0, "stoppingcriterion": [0, 183], "binarytissueclassifi": [0, 222, 223], "binarystoppingcriterion": [0, 41, 131, 183], "thresholdtissueclassifi": 0, "thresholdstoppingcriterion": [0, 26, 33, 34, 35, 37, 38, 39, 40, 41, 67, 126, 128, 136, 183], "constrainedtissueclassifi": 0, "anatomicalstoppingcriterion": [0, 183], "acttissueclassifi": 0, "actstoppingcriterion": [0, 41, 183], "cmctissueclassifi": 0, "cmcstoppingcriterion": [0, 36, 183], "tissueclass": 0, "streamlinestatu": [0, 183], "eudx": [0, 34, 35, 67, 131, 147, 154, 182, 214, 225, 226, 228, 231], "tractographi": [0, 1, 2, 3, 26, 29, 30, 31, 33, 34, 35, 44, 45, 61, 67, 74, 76, 84, 86, 99, 100, 101, 105, 110, 111, 114, 116, 121, 123, 126, 128, 142, 145, 147, 149, 156, 158, 159, 162, 166, 170, 173, 174, 176, 177, 178, 180, 182, 215, 219, 221, 226, 227, 233, 235, 236], "perform": [0, 5, 25, 26, 35, 44, 51, 52, 54, 56, 59, 63, 67, 68, 70, 73, 74, 78, 83, 85, 86, 89, 97, 99, 101, 103, 105, 106, 107, 109, 112, 114, 115, 117, 119, 121, 147, 152, 153, 155, 156, 157, 158, 162, 168, 170, 172, 173, 174, 175, 176, 177, 178, 180, 182, 185, 199, 200, 201, 230, 234, 239], "trackvi": [0, 35, 44, 67, 131, 142, 171, 174, 183, 221, 223, 228, 231, 237], "extern": [0, 72, 85, 141, 181, 182, 219, 228, 237], "quickbund": [0, 228], "peak": [0, 29, 30, 31, 34, 35, 37, 40, 45, 47, 67, 71, 72, 82, 85, 90, 91, 131, 147, 154, 156, 162, 166, 176, 178, 179, 180, 182, 183, 197, 198, 214, 215, 219, 220, 221, 224, 225, 228, 229, 239], "welcom": [0, 5, 21], "viz": [0, 24, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 57, 67, 68, 71, 72, 74, 78, 79, 80, 84, 85, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 109, 110, 112, 113, 114, 115, 119, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 142, 166, 180, 183, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 230, 234, 236], "integr": [0, 1, 5, 12, 35, 63, 67, 75, 77, 79, 94, 145, 158, 162, 172, 175, 176, 221, 222, 227, 236, 239], "variou": [0, 29, 30, 31, 36, 45, 83, 170, 171, 175, 176, 180, 219, 239, 240], "analys": [0, 52, 172], "adjust": [0, 53, 56, 68, 86, 134, 137, 168, 170, 172, 176, 177, 182, 191, 219, 223, 226], "slr": [0, 99, 100, 101, 109, 149, 157, 162, 168, 177, 182, 211, 218, 222, 223, 226, 229, 234], "recobundl": [0, 24, 45, 111, 116, 154, 162, 183, 220, 221, 222, 223, 229, 230, 231, 233], "algorithm": [0, 26, 30, 35, 36, 45, 52, 53, 56, 58, 60, 61, 62, 67, 69, 74, 78, 79, 80, 81, 83, 86, 90, 91, 96, 100, 101, 105, 106, 107, 112, 114, 115, 117, 119, 130, 145, 147, 152, 157, 162, 163, 166, 168, 170, 172, 173, 175, 176, 177, 180, 181, 182, 185, 191, 193, 194, 228, 229, 235, 236, 237], "exclud": [0, 17, 41, 63, 75, 81, 95, 126, 131, 168, 173, 176, 180, 231], "insid": [0, 5, 32, 65, 84, 114, 168, 170, 172, 176, 177, 180, 182, 214, 215, 224], "note": [0, 5, 7, 8, 17, 18, 19, 22, 24, 25, 30, 45, 56, 69, 70, 72, 74, 75, 79, 84, 85, 86, 87, 89, 98, 101, 103, 105, 107, 112, 113, 128, 138, 141, 148, 150, 152, 153, 156, 175, 183, 189, 203, 237, 239, 240, 241], "nose": [0, 143, 162, 222, 234], "pytest": [0, 21, 22, 146, 162, 170, 176, 177, 180, 222, 223, 231, 234], "load_tck": [0, 44, 183], "save_tck": [0, 183], "highli": [0, 59, 63, 74, 86, 112, 146, 152, 155, 182, 189], "manag": [0, 130, 137, 146, 162, 166, 221, 226, 234], "tabl": [0, 2, 25, 26, 30, 45, 53, 57, 68, 73, 84, 85, 87, 88, 89, 95, 97, 137, 146, 162, 164, 165, 166, 170, 171, 172, 174, 176, 178, 180, 182, 202, 220, 222, 224, 226, 230, 231, 235], "b0_thresold": 0, "50": [0, 26, 30, 31, 33, 34, 37, 38, 41, 45, 47, 48, 52, 53, 54, 56, 71, 72, 75, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 95, 99, 103, 106, 119, 121, 122, 128, 130, 136, 147, 162, 163, 164, 165, 168, 170, 172, 176, 177, 178, 180, 182, 224], "impact": [0, 33, 74, 86, 112, 121, 156, 172, 176, 177, 178, 182, 193], "your": [0, 5, 6, 7, 12, 15, 16, 17, 18, 21, 22, 23, 35, 47, 48, 55, 57, 59, 61, 65, 67, 71, 73, 77, 79, 83, 94, 95, 112, 113, 123, 138, 141, 142, 145, 146, 148, 149, 152, 153, 155, 156, 157, 158, 159, 161, 162, 170, 171, 172, 176, 177, 219, 237, 238], "want": [0, 2, 7, 10, 12, 18, 19, 21, 22, 23, 57, 61, 63, 73, 76, 85, 95, 97, 98, 99, 100, 106, 107, 112, 113, 114, 123, 125, 126, 128, 130, 131, 134, 135, 137, 138, 142, 143, 146, 148, 152, 153, 155, 159, 161, 168, 170, 174, 175, 176, 177, 180, 181, 182, 206, 209, 210, 217, 238, 240], "assur": [0, 35, 63, 67, 125, 174], "code": [0, 4, 7, 8, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 145, 146, 159, 162, 170, 174, 176, 177, 182, 217, 218, 219, 220, 221, 222, 224, 225, 226, 228, 230, 231, 233, 234, 235, 237], "run": [0, 2, 6, 7, 22, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 166, 168, 170, 172, 175, 176, 177, 180, 182, 183, 215, 217, 218, 219, 222, 226, 228, 233, 235, 237, 239, 244], "exactli": [0, 5, 33, 35, 67, 101, 143, 168, 170, 174, 175, 176, 177, 226], "manner": [0, 72, 157, 171, 180, 182], "befor": [0, 5, 8, 22, 30, 35, 36, 53, 55, 59, 63, 67, 71, 73, 74, 75, 86, 90, 97, 99, 100, 101, 103, 105, 106, 109, 110, 114, 117, 124, 144, 146, 149, 150, 152, 153, 155, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 215, 221, 223, 224, 225, 226, 228, 234, 235], "pleas": [0, 1, 5, 6, 11, 18, 21, 23, 47, 48, 52, 53, 55, 56, 60, 81, 83, 88, 89, 126, 128, 134, 136, 146, 147, 148, 149, 150, 166, 168, 170, 171, 172, 174, 176, 180, 182, 196, 223, 226], "initi": [0, 7, 10, 25, 30, 32, 35, 39, 40, 48, 67, 70, 75, 81, 83, 84, 87, 90, 91, 92, 95, 97, 98, 100, 115, 130, 134, 136, 137, 146, 148, 168, 170, 172, 173, 175, 176, 177, 178, 180, 182, 217, 224, 227, 230, 234], "keyword": [0, 5, 30, 168, 170, 174, 175, 176, 178, 179, 181], "b0_threshold": [0, 56, 83, 156, 170, 172, 176, 182, 190, 191, 194, 197, 198, 199, 200, 201, 202, 205, 222], "fvtk": [0, 162, 180, 217, 218, 219, 221, 222, 224, 225, 226], "impli": [0, 17, 51, 59, 125, 155, 168, 170, 171, 176, 177, 178, 182, 184, 226, 244], "actor": [0, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 57, 67, 68, 71, 72, 78, 79, 80, 84, 85, 90, 91, 92, 93, 95, 100, 105, 109, 110, 112, 113, 114, 115, 119, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 142, 180, 217, 221, 222, 230], "ren": [0, 137, 180, 219, 222], "ui": [0, 134, 137, 219, 220, 221, 222], "element": [0, 26, 60, 70, 72, 73, 74, 79, 83, 88, 89, 90, 100, 113, 121, 137, 156, 168, 170, 172, 174, 176, 177, 178, 180, 182, 200, 219, 222], "To": [0, 2, 7, 8, 35, 39, 40, 41, 44, 51, 52, 53, 54, 65, 67, 68, 73, 74, 83, 85, 87, 89, 90, 91, 92, 95, 97, 99, 100, 101, 106, 107, 114, 115, 121, 122, 123, 125, 131, 146, 149, 152, 153, 155, 156, 157, 158, 168, 170, 171, 173, 174, 175, 176, 177, 178, 180, 182, 196], "learn": [0, 14, 15, 21, 56, 65, 68, 70, 80, 83, 145, 151, 159, 162, 171, 172, 175, 176, 182, 183, 194, 223, 232], "go": [0, 7, 8, 11, 17, 18, 19, 21, 22, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 143, 146, 148, 170, 175, 177, 180, 219, 221, 228], "http": [0, 1, 2, 3, 8, 11, 22, 39, 52, 54, 65, 74, 84, 86, 88, 89, 90, 101, 114, 134, 142, 143, 146, 148, 149, 150, 153, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 180, 182, 191, 203, 231], "gl": 0, "furthermor": [0, 142], "load_trk": [0, 30, 44, 101, 109, 110, 123, 124, 183, 230], "save_trk": [0, 33, 34, 35, 36, 37, 38, 39, 40, 41, 67, 109, 131, 183], "object": [0, 5, 7, 8, 30, 35, 40, 44, 47, 53, 57, 65, 67, 71, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 89, 90, 91, 93, 94, 95, 97, 106, 107, 112, 113, 114, 115, 131, 134, 135, 136, 137, 138, 141, 142, 143, 144, 162, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 194, 204, 219, 220, 222, 229, 230, 231, 235], "much": [0, 5, 6, 8, 41, 70, 83, 89, 97, 101, 126, 168, 170, 174, 175, 176, 177, 180, 218], "less": [0, 5, 51, 59, 76, 87, 90, 112, 128, 130, 142, 144, 162, 168, 170, 171, 172, 173, 176, 177, 180, 181, 182, 204, 209, 211, 218, 234, 235], "easier": [0, 6, 8, 78, 119, 131, 147, 160, 170, 176, 178, 182], "No": [0, 5, 44, 45, 94, 146, 164, 165, 170, 171, 172, 176, 177, 178, 182, 197, 198, 199, 201, 219, 220, 229, 236], "major": [0, 143, 168, 170, 176, 178, 224], "support": [0, 21, 24, 44, 61, 90, 126, 142, 147, 162, 168, 170, 173, 174, 175, 176, 177, 180, 181, 217, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 234, 236], "It": [0, 7, 8, 14, 17, 18, 25, 34, 36, 44, 50, 53, 57, 60, 63, 71, 72, 73, 74, 79, 82, 83, 84, 85, 86, 87, 91, 100, 101, 106, 108, 109, 110, 112, 113, 115, 125, 131, 135, 137, 138, 141, 142, 143, 148, 157, 158, 162, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 186, 189, 193, 194], "year": [0, 22, 223, 226], "multipl": [0, 2, 3, 5, 45, 52, 60, 63, 70, 71, 72, 73, 74, 77, 79, 81, 83, 87, 90, 94, 103, 137, 138, 141, 142, 145, 147, 152, 153, 155, 156, 157, 158, 162, 164, 165, 168, 170, 171, 172, 175, 176, 177, 178, 180, 181, 182, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 208, 210, 212, 214, 215, 218, 221, 226, 230, 231, 235, 239], "As": [0, 5, 30, 34, 36, 54, 61, 70, 74, 75, 81, 83, 84, 85, 86, 87, 88, 92, 100, 105, 107, 109, 145, 152, 153, 155, 156, 158, 168, 176, 180], "far": [0, 22, 84, 97, 123, 180], "know": [0, 8, 21, 23, 30, 44, 60, 63, 97, 144, 146, 159, 160, 168, 170, 176, 177, 181, 231], "work": [0, 5, 8, 14, 15, 18, 20, 21, 22, 24, 50, 56, 60, 63, 81, 83, 85, 90, 92, 97, 98, 105, 108, 109, 131, 138, 141, 143, 146, 152, 156, 162, 170, 175, 176, 180, 182, 202, 217, 218, 219, 222, 224, 226, 228, 229, 230, 234, 235], "well": [0, 5, 7, 8, 14, 30, 37, 50, 51, 63, 73, 74, 75, 85, 86, 87, 90, 91, 92, 99, 100, 105, 108, 123, 142, 146, 152, 156, 158, 168, 170, 172, 176, 178, 222, 243], "longer": [0, 17, 142, 168, 180, 227], "test": [0, 2, 3, 5, 6, 7, 8, 18, 21, 22, 24, 70, 79, 87, 95, 98, 128, 148, 166, 168, 170, 171, 172, 175, 176, 177, 181, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237], "upgrad": [0, 222, 223, 229], "newer": [0, 146, 219, 221, 222], "probabilistic_direction_gett": [0, 183], "probabilisticdirectiongett": [0, 26, 36, 37, 39, 180, 183], "input": [0, 26, 33, 35, 44, 47, 51, 53, 54, 60, 67, 71, 83, 85, 92, 95, 97, 99, 100, 103, 106, 109, 113, 114, 117, 128, 134, 135, 138, 141, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 208, 210, 212, 213, 214, 215, 217, 218, 219, 222, 225, 226, 228, 231, 233, 234, 239, 240], "pmf_threshold": [0, 158, 173, 182, 214, 215], "probabl": [0, 18, 25, 34, 36, 37, 77, 84, 87, 94, 97, 117, 146, 156, 158, 168, 173, 175, 176, 177, 178, 180, 241], "lower": [0, 26, 35, 39, 41, 50, 51, 52, 53, 54, 55, 56, 60, 65, 67, 72, 73, 74, 75, 77, 80, 81, 83, 86, 87, 90, 94, 98, 101, 107, 108, 142, 150, 168, 170, 174, 175, 176, 177, 182, 189, 202, 207], "mass": [0, 37, 97, 98, 157, 158, 168, 173, 177, 180, 182, 184], "dki": [0, 45, 54, 73, 75, 86, 118, 120, 145, 154, 162, 164, 165, 178, 182, 183, 199, 217, 218, 219, 221, 222, 228, 229, 230, 232, 233, 234, 235, 236, 237], "model": [0, 1, 2, 3, 18, 25, 26, 29, 30, 31, 34, 35, 36, 37, 38, 41, 45, 47, 48, 50, 52, 54, 55, 56, 63, 65, 67, 68, 69, 71, 72, 76, 77, 82, 83, 85, 86, 87, 88, 89, 94, 95, 96, 108, 109, 110, 117, 121, 123, 124, 126, 128, 131, 145, 147, 148, 149, 156, 158, 162, 164, 165, 168, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 194, 202, 206, 209, 211, 219, 220, 221, 223, 224, 225, 226, 228, 230, 231, 234, 235], "wl": [0, 45, 95, 164, 165, 176, 182, 199, 200], "max_kurtosi": [0, 176], "axial_kurtosi": [0, 183], "mean_kurtosi": [0, 183], "radial_kuroti": 0, "prefer": [0, 8, 45, 100, 101, 109, 137, 142, 148, 164, 165, 177, 217, 223, 234], "rather": [0, 17, 19, 22, 95, 98, 103, 143, 146, 170, 176, 177, 217, 221], "widget": [0, 134, 219], "slicer": [0, 26, 30, 39, 40, 68, 105, 131, 134, 137, 181, 219, 220, 221, 222, 225, 230], "power": [0, 2, 3, 45, 83, 85, 153, 162, 164, 165, 171, 173, 176, 180, 217, 219], "rgb": [0, 79, 135, 147, 148, 174, 176, 182, 199, 200, 225], "too": [0, 41, 74, 83, 106, 112, 146, 173, 180, 182, 218, 228], "see": [0, 6, 8, 11, 13, 14, 18, 19, 21, 22, 26, 30, 39, 40, 41, 44, 45, 47, 51, 52, 53, 54, 56, 63, 65, 70, 73, 74, 75, 76, 79, 81, 83, 84, 85, 86, 87, 88, 91, 92, 93, 97, 100, 101, 106, 107, 112, 113, 114, 115, 130, 131, 134, 135, 137, 138, 141, 143, 144, 145, 146, 147, 148, 152, 153, 160, 162, 163, 164, 165, 168, 175, 177, 179, 182, 196, 203, 239, 244], "tutori": [0, 16, 33, 39, 45, 50, 69, 71, 73, 74, 76, 77, 80, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 97, 98, 101, 107, 108, 109, 110, 113, 114, 124, 126, 128, 134, 136, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 162, 163, 170, 217, 218, 220, 221, 222, 223, 224, 226, 228, 229, 230, 232, 233, 234, 235], "viz_slic": [0, 133, 137], "py": [0, 5, 18, 22, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 146, 161, 170, 176, 177, 180, 182, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "behavior": [0, 137, 168, 170, 175, 176, 180, 182, 221, 222, 228], "interp_rbf": [0, 183, 219, 225], "addit": [0, 5, 25, 54, 73, 74, 81, 85, 89, 99, 134, 142, 152, 156, 163, 168, 171, 174, 175, 176, 179, 180, 182, 219, 224, 228, 237, 238], "norm": [0, 5, 25, 56, 68, 72, 83, 84, 85, 90, 114, 144, 168, 170, 180, 182, 183, 190, 191, 197, 200, 202, 205, 225], "angl": [0, 26, 34, 35, 45, 47, 67, 69, 78, 84, 86, 88, 89, 92, 96, 114, 119, 121, 122, 143, 144, 147, 154, 158, 168, 170, 171, 172, 173, 176, 178, 180, 181, 182, 197, 214, 215, 225, 234, 235, 244], "euclidean_norm": [0, 170], "discourag": [0, 219], "11": [0, 1, 26, 30, 33, 34, 37, 38, 41, 54, 75, 80, 81, 83, 84, 85, 86, 96, 98, 104, 109, 110, 115, 117, 123, 124, 131, 145, 146, 162, 163, 168, 170, 171, 176, 179, 180, 217, 219, 224, 227, 228, 229, 231, 232, 233, 235, 237], "vector_field": [0, 183, 219], "warp_2d_affin": 0, "transform_2d_affin": [0, 183], "warp_2d_affine_nn": 0, "transform_2d_affine_nn": [0, 183], "warp_3d_affin": 0, "transform_3d_affin": [0, 183], "warp_3d_affine_nn": 0, "transform_3d_affine_nn": [0, 183], "gqi": [0, 45, 82, 142, 164, 165, 171, 183, 224, 237, 241], "calcul": [0, 26, 30, 33, 35, 45, 47, 48, 52, 67, 69, 70, 71, 72, 73, 74, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 95, 96, 123, 125, 127, 129, 130, 145, 147, 148, 156, 168, 170, 172, 173, 174, 176, 177, 178, 179, 180, 182, 184, 191, 198, 203, 210, 217, 222, 224, 225, 226, 230, 237, 239, 240], "gqi2": [0, 45, 164, 165, 176, 227], "match": [0, 22, 45, 55, 58, 62, 90, 99, 101, 105, 109, 150, 157, 158, 168, 170, 171, 172, 174, 175, 176, 177, 182, 189, 209, 236], "either": [0, 5, 17, 30, 35, 40, 41, 56, 67, 84, 85, 90, 97, 101, 112, 123, 131, 150, 168, 170, 171, 172, 174, 176, 177, 178, 180, 182, 191, 192, 202, 219], "doc": [0, 5, 6, 22, 41, 83, 89, 146, 161, 170, 174, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "therein": 0, "access": [0, 11, 17, 18, 22, 44, 51, 65, 83, 85, 88, 134, 137, 146, 170, 171, 172, 176, 182, 203, 220, 229], "complet": [0, 17, 22, 35, 39, 65, 67, 84, 89, 101, 115, 126, 128, 136, 146, 147, 148, 150, 158, 168, 176, 219, 224, 225, 234], "resampl": [0, 61, 97, 98, 100, 101, 107, 113, 114, 115, 137, 142, 156, 166, 176, 177, 179, 180, 182, 183, 210, 217, 219, 226, 237], "aniso2iso": [0, 142, 217, 219], "reslic": [0, 45, 58, 62, 76, 82, 105, 182, 183, 210, 217, 219, 226, 234, 237], "peaks_from_model": [0, 26, 35, 37, 38, 40, 47, 48, 67, 71, 72, 82, 85, 90, 91, 126, 128, 131, 136, 183, 219, 224, 225, 226, 228, 234], "like": [0, 2, 3, 6, 7, 8, 9, 17, 19, 22, 37, 44, 60, 65, 70, 72, 73, 83, 90, 91, 94, 97, 98, 100, 101, 107, 109, 115, 134, 137, 138, 141, 142, 143, 145, 146, 148, 157, 158, 168, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 208, 217, 228, 233, 235], "odf": [0, 25, 26, 33, 35, 37, 38, 39, 47, 48, 67, 68, 71, 72, 76, 78, 79, 80, 82, 84, 85, 87, 90, 91, 92, 93, 95, 119, 122, 156, 162, 172, 173, 175, 178, 181, 182, 183, 197, 198, 214, 215, 218, 219, 224, 225, 226, 230, 232, 237, 243], "take": [0, 8, 18, 21, 25, 26, 37, 39, 40, 51, 53, 56, 72, 73, 74, 76, 81, 83, 85, 87, 89, 90, 91, 95, 97, 100, 105, 112, 113, 114, 131, 142, 146, 148, 168, 170, 171, 172, 175, 176, 179, 180, 182, 191, 192, 221, 224, 231, 232, 243], "size": [0, 1, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 51, 54, 55, 56, 57, 61, 65, 67, 68, 71, 72, 74, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 100, 103, 105, 106, 107, 109, 110, 112, 113, 114, 115, 119, 122, 124, 125, 126, 127, 128, 129, 131, 134, 135, 136, 137, 142, 147, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 189, 193, 204, 208, 210, 214, 215, 221, 222, 226, 228, 230, 235], "arrai": [0, 5, 6, 7, 41, 51, 53, 55, 56, 57, 60, 63, 65, 68, 72, 74, 76, 78, 79, 83, 84, 85, 86, 87, 88, 90, 91, 92, 98, 103, 105, 106, 107, 113, 114, 115, 119, 121, 122, 124, 130, 131, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 203, 208, 210, 217, 218, 219, 220, 221, 222, 226, 228, 229, 230, 233, 234, 235, 239, 240], "updat": [0, 7, 12, 16, 22, 57, 90, 92, 134, 145, 162, 168, 170, 174, 175, 176, 177, 182, 183, 185, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 243], "similar": [0, 11, 22, 45, 47, 60, 71, 73, 74, 76, 84, 86, 87, 89, 97, 98, 100, 106, 107, 109, 110, 117, 123, 126, 127, 129, 130, 154, 162, 164, 165, 168, 170, 171, 172, 176, 177, 179, 180, 182, 184, 194, 209, 211, 226, 228, 243], "nib": [0, 5, 44, 53, 54, 61, 80, 81, 105, 168, 174], "anat": 0, "voxel_dim": 0, "header": [0, 44, 65, 105, 123, 174, 182, 204, 219, 228, 231, 233, 239, 240], "pixdim": 0, "someth": [0, 6, 7, 8, 18, 19, 22, 70, 84, 87, 146, 147, 170, 174, 176, 178, 180, 181, 182, 204, 208], "end": [8, 17, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 143, 146, 148, 156, 170, 175, 176, 177, 180, 230, 239, 240, 243], "download": [2, 13, 22, 24, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 147, 148, 149, 150, 154, 162, 163, 170, 171, 182, 196, 219, 221, 222, 225, 226, 227, 234, 235], "full": [1, 21, 22, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 157, 164, 165, 168, 170, 171, 172, 173, 174, 176, 177, 180, 182, 184, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243], "exampl": [2, 3, 5, 7, 8, 17, 18, 21, 22, 24, 25, 26, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 145, 146, 147, 148, 149, 151, 156, 157, 159, 162, 163, 173, 177, 182, 185, 191, 192, 198, 203, 204, 208, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 236, 237], "demo": [25, 26, 59], "present": [22, 25, 26, 44, 72, 74, 79, 86, 137, 146, 161, 175, 176, 180, 229, 234], "fod": [25, 26, 34, 37, 38, 171, 173, 176, 218, 220, 228], "field": [22, 25, 35, 44, 67, 83, 85, 95, 101, 105, 117, 142, 156, 157, 158, 168, 170, 171, 175, 177, 178, 180, 181, 182, 185, 186, 201, 218, 219, 224, 239, 240], "meesters2016": [25, 26], "implement": [7, 8, 25, 26, 30, 41, 52, 57, 70, 80, 81, 84, 85, 90, 92, 95, 97, 98, 105, 106, 107, 114, 138, 144, 157, 162, 168, 170, 172, 173, 174, 176, 180, 182, 219, 222, 223, 224, 226, 227, 228, 229, 234, 236, 237, 243], "pde": [25, 26, 172, 180], "framework": [24, 25, 56, 60, 80, 83, 84, 87, 88, 89, 93, 99, 109, 112, 113, 117, 124, 125, 154, 162, 172, 176, 177, 178, 179, 181, 182, 188, 204, 209, 220, 221, 222, 223, 226, 228, 230, 243], "portegies2015a": 25, "hardi": [2, 3, 25, 26, 30, 35, 40, 45, 67, 85, 91, 93, 97, 98, 105, 107, 163, 164, 165, 171, 172, 173, 176, 180, 182, 243], "aim": [5, 25, 157, 160, 176], "elong": 25, "structur": [2, 3, 25, 30, 35, 45, 52, 54, 56, 63, 67, 68, 73, 79, 87, 98, 105, 111, 116, 131, 134, 138, 141, 145, 148, 149, 150, 154, 156, 158, 171, 172, 176, 177, 180, 227, 234], "junction": 25, "maintain": [8, 12, 16, 25, 44, 72, 147], "while": [8, 9, 25, 44, 51, 52, 54, 70, 79, 81, 83, 86, 89, 90, 92, 121, 150, 156, 168, 170, 175, 176, 177, 179, 180, 182, 218, 219, 221, 233, 243], "reduc": [1, 5, 8, 25, 36, 41, 44, 59, 84, 87, 99, 109, 130, 131, 143, 146, 158, 162, 168, 170, 171, 172, 177, 180, 182, 183, 208, 209, 215, 219, 225, 226, 230], "nois": [25, 37, 39, 45, 51, 55, 56, 58, 62, 63, 74, 86, 89, 90, 95, 121, 122, 152, 162, 171, 173, 175, 176, 178, 180, 182, 183, 191, 192, 193, 199, 200, 212, 217, 220, 224, 226, 228, 233], "small": [25, 26, 30, 34, 37, 51, 61, 71, 72, 79, 80, 83, 87, 89, 90, 91, 95, 98, 100, 103, 112, 113, 114, 115, 131, 156, 166, 168, 170, 171, 172, 176, 177, 180, 181, 182, 202, 204, 209, 211, 217, 219, 220, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235], "incoher": [25, 45, 69, 96, 154, 176, 182, 201], "achiev": [8, 25, 51, 85, 88, 98, 100, 112, 117, 157, 180], "hypo": 25, "ellipt": [25, 176], "2nd": [25, 73, 147], "domain": [25, 26, 30, 106, 107, 114, 168, 182, 229], "coupl": [25, 70, 106, 182, 226, 230], "posit": [25, 26, 30, 36, 37, 41, 45, 68, 69, 71, 79, 84, 86, 87, 93, 109, 110, 112, 124, 130, 131, 134, 135, 137, 142, 149, 150, 156, 162, 168, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 216, 221, 222, 226, 234, 235], "mathbb": [25, 56, 88, 89, 100, 170, 176], "r": [2, 3, 5, 8, 23, 25, 26, 36, 39, 41, 52, 54, 56, 63, 70, 73, 74, 75, 81, 86, 87, 90, 91, 95, 97, 98, 100, 103, 121, 126, 130, 136, 143, 144, 156, 158, 168, 170, 172, 173, 174, 176, 177, 178, 180, 181, 182, 185, 200, 203, 204, 215, 218, 219, 226, 239, 241, 243, 244], "3": [1, 2, 3, 5, 7, 24, 25, 26, 30, 33, 34, 35, 36, 37, 38, 41, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 65, 67, 68, 71, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 100, 103, 105, 106, 107, 109, 110, 112, 113, 114, 115, 117, 124, 125, 128, 130, 131, 134, 137, 142, 143, 144, 146, 147, 156, 157, 162, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 186, 189, 191, 198, 199, 200, 204, 208, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243], "time": [2, 3, 5, 8, 10, 22, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 146, 148, 156, 164, 165, 168, 170, 171, 172, 174, 175, 176, 177, 178, 180, 182, 185, 194, 201, 220, 222, 224, 225, 226, 230, 239, 241], "2": [1, 2, 3, 4, 7, 8, 22, 24, 25, 26, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 63, 65, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 97, 98, 100, 103, 105, 106, 107, 108, 112, 114, 117, 119, 121, 122, 123, 126, 128, 130, 131, 134, 135, 136, 137, 142, 143, 144, 146, 147, 152, 155, 156, 157, 158, 162, 163, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 185, 186, 191, 192, 193, 199, 200, 201, 202, 203, 204, 214, 215, 217, 218, 219, 222, 223, 225, 226, 228, 229, 231, 234, 236, 237, 239, 241, 243, 244], "carri": [25, 176], "non": [2, 3, 7, 25, 26, 30, 39, 45, 51, 53, 54, 56, 58, 60, 62, 65, 68, 72, 73, 74, 75, 81, 83, 84, 85, 86, 90, 97, 98, 101, 105, 121, 135, 137, 142, 152, 156, 162, 164, 165, 168, 170, 171, 172, 173, 176, 177, 180, 182, 193, 194, 198, 199, 200, 202, 219, 221, 223, 224, 225, 226, 227, 230, 234, 235, 236, 239, 240, 243], "flat": [25, 26, 52, 54, 56, 75, 81, 86, 170, 176, 178], "geometr": [25, 45, 143, 164, 165, 168, 176, 222], "differenti": [25, 73, 83, 168, 176, 180], "allow": [5, 11, 22, 25, 36, 41, 47, 48, 84, 85, 87, 130, 131, 134, 137, 138, 142, 153, 156, 157, 162, 168, 170, 172, 173, 174, 176, 177, 178, 180, 181, 182, 209, 215, 218, 219, 222, 224, 226, 229, 231, 232, 233, 234, 235], "includ": [5, 8, 17, 25, 26, 30, 41, 70, 74, 84, 87, 90, 95, 105, 114, 123, 131, 142, 145, 146, 157, 162, 163, 168, 170, 171, 172, 174, 175, 176, 177, 180, 181, 182, 184, 217, 219, 226, 230, 236, 243], "notion": [25, 177], "between": [5, 24, 25, 30, 44, 45, 52, 53, 54, 55, 58, 62, 68, 72, 73, 74, 75, 77, 79, 81, 83, 84, 85, 87, 89, 90, 91, 98, 99, 100, 101, 105, 106, 107, 110, 113, 114, 117, 123, 125, 131, 136, 142, 146, 148, 150, 154, 157, 161, 168, 170, 171, 172, 173, 174, 175, 176, 177, 180, 182, 186, 189, 191, 204, 214, 215, 222, 226, 231, 235, 237, 239, 240, 243, 244], "neighbor": [25, 26, 90, 109, 168, 170, 173, 176, 177, 180], "let": [8, 17, 21, 25, 30, 33, 35, 44, 51, 52, 53, 54, 55, 56, 57, 59, 65, 67, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 92, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 109, 110, 114, 115, 119, 122, 124, 125, 130, 131, 134, 135, 137, 141, 143, 146, 147, 148, 149, 150, 151, 160, 168, 180, 220], "f": [1, 2, 3, 8, 9, 25, 30, 36, 41, 48, 52, 56, 63, 70, 72, 75, 77, 81, 82, 83, 85, 86, 89, 90, 94, 100, 109, 123, 124, 125, 148, 149, 153, 168, 170, 171, 172, 173, 176, 177, 178, 179, 180, 182, 183, 188, 209, 243], "y": [1, 5, 25, 26, 30, 38, 39, 63, 68, 77, 78, 81, 83, 84, 89, 90, 91, 93, 94, 95, 105, 117, 119, 134, 137, 142, 143, 144, 157, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 186, 200, 233, 239, 244], "n": [1, 2, 3, 5, 22, 25, 30, 39, 40, 41, 51, 52, 55, 56, 59, 60, 70, 71, 73, 74, 81, 83, 86, 88, 89, 90, 91, 95, 97, 98, 100, 105, 106, 107, 114, 115, 117, 124, 130, 147, 152, 155, 157, 168, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 184, 239, 240], "where": [5, 8, 15, 18, 22, 25, 26, 30, 35, 36, 41, 47, 48, 53, 65, 67, 71, 72, 73, 74, 79, 81, 83, 85, 86, 88, 89, 90, 91, 93, 95, 98, 100, 101, 105, 106, 114, 123, 125, 126, 130, 131, 135, 138, 141, 142, 143, 144, 146, 148, 150, 152, 156, 158, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 184, 185, 199, 200, 206, 209, 212, 214, 215, 229, 239, 240, 243], "denot": [25, 30, 83, 88, 89, 100, 142, 168, 170, 176, 243], "part": [5, 25, 26, 35, 56, 65, 67, 70, 72, 79, 80, 84, 86, 89, 90, 91, 97, 114, 138, 142, 144, 146, 148, 161, 163, 168, 170, 172, 174, 175, 176, 177, 178, 180, 182, 199, 200, 219, 226, 238, 243], "angular": [2, 3, 25, 45, 78, 80, 93, 119, 121, 164, 165, 170, 172, 173, 176, 178, 180], "w": [25, 52, 72, 74, 80, 90, 91, 97, 98, 144, 153, 168, 170, 174, 175, 176, 178, 179, 180, 182, 185, 221, 226], "im": [18, 25, 30, 81, 83, 89, 103, 114, 128, 130, 243], "o": [1, 13, 25, 30, 44, 52, 65, 68, 70, 73, 80, 81, 83, 97, 98, 101, 105, 123, 137, 146, 153, 156, 171, 174, 176, 177, 180, 182, 201, 218, 226, 228, 237], "repres": [8, 25, 26, 37, 47, 52, 71, 79, 81, 86, 87, 88, 89, 91, 92, 112, 114, 115, 121, 126, 130, 131, 142, 144, 148, 150, 156, 158, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 189, 202, 208, 222, 243, 244], "evolut": [25, 83, 106, 168, 170, 176, 183, 226], "Then": [8, 9, 18, 19, 22, 25, 26, 53, 61, 63, 83, 85, 99, 117, 134, 146, 156, 157, 158, 159, 168, 170, 172, 176, 180, 182, 239, 240], "t": [2, 3, 5, 8, 10, 11, 18, 19, 22, 23, 25, 26, 35, 39, 41, 47, 50, 51, 52, 53, 54, 55, 56, 60, 63, 65, 67, 70, 72, 73, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 94, 97, 98, 100, 105, 108, 113, 114, 123, 130, 131, 134, 137, 142, 144, 146, 148, 149, 156, 159, 168, 170, 171, 172, 176, 177, 178, 180, 181, 182, 185, 209, 210, 217, 218, 219, 221, 222, 224, 226, 227, 228, 230, 231, 234, 235, 239, 240, 243], "geq": 25, "0": [2, 3, 5, 8, 22, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 150, 155, 156, 158, 162, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 189, 191, 194, 197, 198, 203, 204, 210, 211, 212, 214, 215, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 243], "given": [25, 26, 73, 84, 85, 87, 88, 89, 90, 95, 97, 100, 110, 114, 125, 128, 137, 144, 157, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 204, 210, 217, 222, 223, 239, 243], "egin": [25, 73, 74, 79, 88, 89, 176], "case": [5, 8, 17, 22, 25, 30, 37, 40, 51, 56, 63, 74, 80, 84, 85, 95, 97, 98, 109, 112, 128, 135, 138, 141, 142, 143, 146, 149, 150, 152, 153, 155, 156, 157, 158, 168, 170, 172, 174, 176, 177, 180, 181, 182, 185, 186, 217, 222, 225, 239, 240, 243], "rac": [25, 70, 73, 74, 79, 88, 89, 176], "partial": [2, 3, 22, 25, 36, 41, 81, 90, 101, 154, 158, 168, 174, 176, 180, 182, 215], "d": [1, 2, 3, 5, 7, 8, 9, 22, 25, 36, 40, 41, 52, 54, 56, 63, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 97, 98, 99, 100, 109, 114, 117, 123, 124, 125, 130, 143, 148, 149, 152, 153, 156, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 188, 191, 192, 198, 200, 201, 204, 209, 225, 231, 239, 241, 243], "33": [2, 3, 25, 26, 34, 37, 38, 41, 45, 48, 54, 56, 75, 80, 83, 84, 86, 87, 91, 95, 115, 146, 164, 165, 168, 170, 172, 176, 182, 194, 200, 217, 224], "cdot": [25, 30, 144, 176, 177, 180, 241], "abla": 25, "44": [25, 26, 33, 41, 54, 71, 75, 79, 80, 83, 84, 86, 109, 110, 112, 113, 124, 171, 176], "delta_": [25, 87], "u": [5, 8, 15, 17, 18, 21, 23, 25, 30, 35, 51, 55, 65, 67, 71, 80, 83, 101, 105, 125, 142, 144, 160, 161, 163, 168, 170, 172, 176, 222, 238, 244], "coeffici": [25, 45, 52, 55, 58, 62, 75, 80, 83, 85, 87, 92, 94, 153, 156, 162, 168, 170, 171, 172, 173, 175, 176, 178, 180, 181, 182, 197, 198, 225, 243], "goe": [25, 85, 87, 181], "laplac": [25, 176], "beltrami": [25, 176], "math": [25, 70, 84, 86, 87, 88, 121, 170, 171, 176, 191, 218, 219, 222, 223, 226, 234], "condit": [25, 36, 41, 89, 100, 117, 170, 176, 177, 180, 182, 220, 222, 226], "noisi": [25, 51, 53, 63, 84, 95, 152, 156, 172, 175, 176, 177, 178], "equat": [25, 30, 53, 74, 88, 142, 170, 172, 176, 177, 178, 180, 182, 194, 219, 239, 240], "solv": [25, 59, 81, 84, 88, 89, 90, 146, 155, 162, 168, 170, 172, 176, 180, 182, 183, 194, 219, 227], "shift": [25, 52, 168, 170, 172, 174, 176, 182, 194, 203, 233], "twist": [25, 172], "convolut": [25, 90, 172, 175, 176], "st_": 25, "its": [2, 3, 4, 22, 25, 39, 54, 56, 60, 77, 84, 85, 86, 87, 90, 91, 94, 95, 97, 114, 117, 121, 134, 135, 137, 143, 144, 148, 149, 151, 162, 168, 170, 171, 172, 175, 176, 177, 178, 179, 180, 182, 205, 226, 230, 231, 233], "kernel": [25, 26, 74, 90, 91, 97, 106, 168, 172, 175, 176, 180, 182, 185, 189, 234], "p_t": [25, 26], "int_": [25, 170, 176, 178, 243], "t_": [25, 176], "prime": [25, 83, 180], "r_": [25, 87, 176], "ani": [5, 7, 8, 10, 17, 18, 22, 25, 37, 44, 45, 56, 59, 61, 63, 79, 83, 87, 90, 92, 94, 98, 99, 100, 114, 131, 137, 138, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 155, 156, 158, 164, 165, 168, 170, 171, 173, 174, 175, 176, 177, 178, 180, 182, 196, 204, 205, 210, 213, 219, 221, 226, 235, 237, 243], "3d": [25, 30, 32, 35, 45, 51, 53, 54, 55, 56, 67, 69, 70, 74, 85, 86, 95, 96, 98, 100, 102, 104, 121, 130, 134, 136, 137, 142, 145, 152, 156, 164, 165, 168, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 191, 192, 203, 213, 217, 218, 222, 230, 234, 235], "rotat": [25, 26, 74, 87, 97, 131, 143, 144, 156, 157, 168, 170, 174, 176, 177, 178, 180, 182, 184, 221, 227, 228], "map": [1, 2, 3, 25, 26, 30, 35, 36, 39, 40, 41, 44, 45, 54, 56, 59, 61, 63, 65, 67, 68, 69, 73, 74, 75, 76, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 96, 101, 103, 105, 106, 107, 110, 112, 113, 115, 117, 123, 127, 129, 134, 135, 145, 147, 154, 157, 158, 162, 164, 165, 168, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 185, 186, 202, 217, 219, 221, 222, 227, 230, 231, 233, 234, 235], "vector": [5, 25, 57, 59, 65, 73, 74, 79, 83, 88, 89, 100, 101, 113, 114, 121, 122, 135, 142, 144, 145, 147, 152, 155, 156, 166, 168, 170, 171, 172, 174, 176, 177, 178, 180, 181, 182, 185, 190, 191, 198, 200, 205, 217, 219, 222, 226, 239, 240, 243], "1": [1, 2, 3, 5, 8, 22, 24, 25, 26, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 63, 65, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 142, 143, 144, 145, 147, 148, 149, 150, 153, 156, 157, 162, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 237, 239, 240, 241, 243], "onto": [8, 25, 143, 170, 176, 181, 244], "euclidean": [25, 144, 168, 170, 176, 177, 180, 244], "account": [8, 12, 22, 25, 53, 73, 81, 89, 90, 95, 105, 121, 168, 170, 171, 172, 176, 218, 231, 232, 243], "space": [1, 2, 3, 5, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 52, 56, 67, 69, 72, 73, 74, 76, 77, 79, 84, 86, 93, 94, 96, 97, 99, 100, 101, 105, 106, 109, 123, 131, 134, 135, 142, 148, 149, 152, 153, 156, 157, 162, 164, 165, 168, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 206, 209, 211, 219, 220, 221, 232, 234, 237, 239, 240, 241], "stochast": [25, 56, 176], "interpret": [25, 75, 79, 86, 87, 95, 131, 168, 170, 176, 178, 180, 219, 223], "duitsandfranken2011": [25, 26], "seen": [22, 25, 84, 87, 103, 170, 176, 243], "limit": [25, 37, 72, 74, 83, 86, 156, 168, 170, 173, 174, 175, 176, 177, 181, 182, 221, 222, 234], "obtain": [25, 26, 38, 41, 54, 56, 60, 71, 72, 74, 77, 80, 81, 82, 83, 85, 86, 89, 97, 99, 105, 114, 121, 142, 155, 156, 168, 171, 173, 175, 176, 177, 180, 181, 239], "accumul": 25, "random": [25, 26, 37, 40, 54, 56, 57, 70, 85, 86, 92, 109, 115, 117, 122, 124, 125, 130, 135, 158, 162, 168, 170, 172, 175, 176, 177, 178, 181, 182, 183, 191, 192, 204, 217, 218, 219, 222, 223, 228, 229, 234], "walk": [25, 97, 148, 152, 153, 155, 156, 157, 158], "particl": [25, 29, 31, 45, 83, 87, 154, 156, 162, 180, 182, 215, 221], "each": [8, 21, 25, 26, 30, 32, 34, 35, 37, 40, 41, 45, 53, 56, 59, 60, 63, 65, 67, 70, 73, 76, 79, 83, 84, 85, 86, 87, 90, 91, 92, 95, 97, 99, 100, 105, 106, 107, 110, 112, 113, 114, 117, 121, 122, 123, 126, 128, 130, 131, 134, 138, 141, 142, 147, 148, 149, 150, 152, 153, 155, 157, 158, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 191, 192, 193, 194, 204, 208, 211, 219, 225, 228, 234, 243], "step": [10, 22, 25, 30, 35, 37, 40, 45, 48, 51, 52, 53, 56, 59, 60, 65, 67, 68, 75, 81, 83, 85, 91, 95, 100, 103, 109, 123, 126, 128, 130, 136, 147, 148, 152, 153, 155, 156, 157, 158, 164, 165, 168, 170, 172, 173, 175, 176, 178, 180, 182, 185, 214, 215, 218, 219, 228, 234, 236], "randomli": [25, 83, 125, 156, 173, 177, 180], "forward": [17, 25, 30, 73, 74, 79, 83, 86, 105, 168, 176, 225], "along": [25, 26, 32, 35, 37, 45, 67, 73, 74, 79, 84, 101, 123, 128, 131, 138, 141, 142, 145, 149, 156, 158, 164, 165, 168, 170, 172, 173, 174, 176, 177, 179, 180, 181, 182, 231], "current": [2, 3, 7, 8, 17, 19, 22, 25, 41, 85, 87, 98, 106, 130, 134, 141, 146, 152, 153, 155, 156, 157, 163, 168, 170, 171, 173, 174, 176, 177, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 222, 223], "chang": [5, 6, 7, 10, 12, 18, 19, 24, 25, 56, 72, 73, 77, 81, 83, 84, 85, 92, 95, 99, 109, 125, 130, 134, 137, 142, 146, 150, 162, 168, 170, 171, 172, 173, 174, 175, 176, 177, 180, 182, 191, 199, 200, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 233, 234, 235, 243], "extens": [5, 25, 33, 34, 36, 37, 39, 41, 51, 87, 144, 174, 176, 178, 180, 182, 205, 219, 221, 225, 226, 229], "contour": [25, 103, 128, 181, 182, 204, 219, 221, 222], "2d": [25, 26, 45, 95, 98, 102, 104, 107, 142, 152, 164, 165, 168, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 219, 220, 224, 235], "motion": [24, 25, 45, 58, 62, 69, 95, 96, 154, 162, 168, 170, 171, 176, 182, 201, 234], "b": [1, 2, 3, 5, 8, 9, 22, 25, 26, 30, 45, 52, 53, 54, 56, 57, 59, 60, 65, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 100, 105, 106, 107, 109, 114, 117, 121, 122, 124, 125, 126, 130, 136, 142, 145, 147, 148, 149, 150, 152, 153, 155, 156, 157, 162, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 224, 226, 227, 228, 230, 234, 235], "shown": [25, 26, 52, 54, 72, 81, 84, 86, 89, 95, 121, 147, 148, 168, 176, 181, 182, 204], "right": [7, 8, 17, 22, 25, 26, 30, 41, 52, 53, 54, 55, 60, 63, 65, 75, 78, 83, 84, 86, 95, 97, 100, 105, 119, 123, 128, 131, 134, 135, 137, 142, 143, 148, 168, 170, 171, 174, 176, 177, 181], "adapt": [25, 26, 39, 45, 52, 55, 58, 62, 81, 83, 90, 105, 147, 152, 156, 172, 176, 180, 181, 182, 193, 204, 219, 221, 230], "practic": [7, 24, 25, 52, 63, 72, 81, 84, 91, 93, 128, 153, 170, 176, 221, 231, 243], "exact": [22, 25, 53, 91, 105, 110, 146, 168, 170, 172, 176, 177, 178, 180, 233], "analyt": [24, 25, 45, 53, 69, 82, 94, 96, 109, 124, 125, 154, 156, 168, 172, 173, 176, 177, 179, 182, 188, 209, 230, 243], "formula": [25, 142, 170, 176, 239, 240, 244], "unknown": [23, 25, 176], "approxim": [25, 63, 70, 83, 84, 88, 89, 152, 168, 170, 172, 176, 178, 180, 240], "portegies2015b": [25, 172, 180], "numpi": [4, 5, 21, 25, 26, 30, 32, 36, 39, 40, 41, 44, 50, 51, 52, 53, 54, 55, 56, 57, 60, 63, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 90, 92, 94, 95, 97, 98, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 128, 130, 131, 134, 135, 142, 146, 162, 168, 170, 171, 172, 174, 175, 176, 177, 178, 180, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 230, 231, 233, 234, 235, 236], "dipi": [1, 2, 3, 8, 10, 12, 14, 17, 18, 19, 21, 23, 24, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 237, 238, 241, 243], "gradient_t": [25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 51, 53, 54, 57, 59, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 93, 94, 95, 105, 119, 121, 122, 126, 128, 131, 136, 145, 176, 178, 183, 221], "get_fnam": [25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 63, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 88, 90, 91, 93, 94, 95, 105, 106, 107, 108, 112, 113, 114, 115, 117, 119, 121, 126, 128, 131, 136, 168, 175, 177, 178, 183, 229], "load_nifti_data": [25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 52, 67, 83, 105, 106, 117, 126, 128, 131, 136, 137, 183, 229], "read_bvals_bvec": [25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 51, 53, 54, 59, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 88, 90, 91, 93, 94, 95, 105, 121, 126, 128, 131, 136, 145, 178, 183, 217, 221, 225, 231], "add_nois": [25, 183], "odf_sh_to_sharp": [25, 183], "evalu": [1, 2, 3, 25, 26, 29, 31, 40, 45, 47, 70, 71, 74, 75, 85, 86, 87, 91, 105, 106, 107, 114, 117, 147, 157, 158, 162, 168, 170, 171, 172, 173, 175, 176, 178, 180, 183, 231], "stanford": [2, 3, 23, 25, 26, 30, 35, 40, 55, 63, 67, 91, 97, 98, 105, 107, 171, 217, 227, 231], "dataset": [3, 4, 24, 25, 26, 30, 35, 44, 45, 48, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 65, 67, 68, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 94, 95, 97, 98, 101, 105, 107, 108, 115, 117, 121, 126, 130, 134, 135, 136, 137, 142, 145, 146, 147, 150, 152, 153, 154, 155, 156, 158, 159, 162, 166, 168, 171, 172, 174, 175, 176, 177, 180, 182, 196, 210, 221, 222, 224, 225, 226, 228, 229, 230, 231, 234, 235, 237], "150": [25, 26, 56, 72, 80, 84, 90, 91, 178], "2000": [2, 3, 25, 26, 45, 52, 54, 65, 72, 80, 83, 84, 85, 86, 90, 91, 147, 164, 165, 170, 171, 176, 180, 182, 202, 229], "mm": [1, 2, 3, 25, 26, 36, 45, 57, 59, 61, 74, 81, 86, 87, 91, 93, 101, 105, 109, 110, 122, 130, 142, 156, 164, 165, 168, 170, 173, 176, 177, 178, 180, 181, 182, 202, 204, 208, 209, 214, 215, 239], "rician": [25, 39, 51, 53, 55, 60, 90, 121, 122, 171, 172, 176, 178, 182, 193], "constrain": [5, 25, 26, 34, 36, 37, 41, 45, 48, 68, 69, 70, 80, 81, 84, 85, 89, 90, 91, 96, 154, 162, 170, 171, 172, 173, 175, 176, 180, 182, 198, 202, 225, 226, 227, 230, 243], "deconvolut": [5, 25, 26, 29, 31, 34, 36, 37, 41, 45, 48, 54, 68, 69, 70, 80, 85, 91, 96, 118, 120, 154, 162, 163, 172, 173, 175, 176, 180, 182, 198, 224, 225, 228, 230, 243], "fiber": [2, 3, 24, 25, 27, 28, 30, 33, 34, 35, 37, 38, 39, 63, 67, 68, 69, 70, 74, 75, 76, 78, 79, 83, 85, 86, 91, 95, 96, 100, 111, 116, 119, 121, 123, 131, 154, 156, 162, 168, 172, 173, 175, 176, 178, 179, 180, 182, 198, 214, 219, 222, 228, 231, 234, 235, 237], "read": [5, 8, 15, 17, 18, 19, 25, 26, 30, 40, 42, 43, 45, 47, 48, 50, 65, 71, 76, 77, 79, 80, 82, 84, 87, 88, 89, 93, 94, 105, 108, 109, 110, 112, 122, 123, 124, 137, 142, 145, 146, 147, 159, 162, 168, 170, 171, 174, 175, 176, 177, 182, 183, 217, 221, 226, 227, 230, 231, 234, 237], "hardi_fnam": [25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 56, 63, 67, 68, 70, 71, 72, 79, 90, 91, 95, 105, 107, 126, 128, 131, 136], "hardi_bval_fnam": [25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 56, 63, 67, 68, 70, 71, 72, 79, 90, 91, 95, 105, 107, 126, 128, 131, 136], "hardi_bvec_fnam": [25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 56, 63, 67, 68, 70, 71, 72, 79, 90, 91, 95, 105, 107, 126, 128, 131, 136], "stanford_hardi": [2, 3, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 56, 63, 67, 68, 70, 71, 72, 79, 90, 91, 95, 105, 107, 126, 128, 131, 136, 152, 156, 158], "bval": [25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 51, 52, 53, 54, 56, 57, 59, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 93, 94, 95, 97, 105, 121, 122, 126, 128, 131, 136, 145, 147, 152, 155, 156, 168, 170, 171, 172, 174, 176, 178, 182, 183, 194, 196, 201, 202, 205, 212, 217, 224, 231, 236, 239], "bvec": [25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 51, 53, 54, 57, 59, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 93, 94, 95, 97, 105, 121, 122, 126, 128, 131, 136, 145, 147, 152, 155, 156, 168, 170, 171, 172, 174, 176, 178, 180, 182, 183, 190, 191, 196, 197, 198, 200, 202, 205, 212, 221, 226, 228, 230, 239], "gtab": [25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 51, 52, 53, 54, 57, 59, 63, 65, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 105, 119, 121, 122, 126, 128, 131, 136, 145, 168, 170, 171, 172, 175, 176, 178, 180, 222, 231, 233, 236], "add": [5, 7, 8, 15, 17, 18, 19, 22, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 57, 67, 68, 71, 72, 73, 78, 79, 80, 83, 84, 85, 90, 91, 92, 93, 95, 100, 105, 109, 110, 112, 113, 114, 115, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 141, 146, 162, 170, 174, 176, 177, 178, 180, 181, 182, 183, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236], "b0_slice": 25, "b0_mask": [25, 50, 63, 85, 90, 106, 108], "seed": [5, 25, 26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 67, 70, 126, 128, 131, 136, 147, 158, 162, 168, 170, 171, 173, 176, 180, 182, 214, 215, 217, 218, 219, 222, 225, 226, 228, 229, 230, 233], "data_noisi": 25, "10": [1, 2, 3, 24, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 52, 53, 54, 56, 59, 63, 65, 67, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 98, 101, 103, 105, 106, 107, 109, 110, 112, 113, 115, 117, 121, 124, 125, 128, 130, 134, 137, 146, 147, 148, 152, 153, 156, 162, 163, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 185, 188, 191, 192, 198, 201, 203, 209, 218, 219, 220, 221, 222, 223, 228, 229, 230, 234, 235, 236, 237], "mean": [8, 19, 25, 30, 45, 51, 52, 54, 56, 58, 62, 63, 68, 69, 70, 73, 75, 77, 79, 80, 81, 84, 87, 90, 94, 96, 97, 99, 100, 105, 109, 112, 114, 123, 125, 137, 143, 144, 152, 154, 162, 164, 165, 168, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 189, 191, 193, 199, 200, 202, 203, 204, 214, 215, 226, 227, 228, 231, 244], "noise_typ": [25, 178], "pad": [25, 26, 98, 168, 172, 175, 176], "larger": [25, 37, 51, 54, 72, 75, 90, 100, 103, 109, 115, 121, 146, 154, 168, 170, 173, 175, 176, 178, 180, 182, 185, 217, 221], "region": [2, 3, 25, 26, 30, 35, 36, 41, 63, 67, 70, 72, 74, 75, 81, 83, 86, 90, 95, 98, 109, 128, 130, 131, 171, 172, 176, 180], "avoid": [5, 8, 25, 37, 52, 56, 73, 74, 79, 81, 86, 97, 113, 168, 170, 175, 176, 180, 182, 219, 221, 223, 224, 226, 228, 229, 234, 235], "boundari": [25, 41, 168, 173, 177, 180, 181, 182, 210], "effect": [2, 3, 9, 25, 36, 39, 41, 52, 53, 73, 74, 81, 86, 87, 90, 95, 105, 106, 143, 152, 153, 158, 168, 170, 172, 174, 175, 176, 177, 180, 181, 182, 200, 204, 239, 240, 243], "data_smal": [25, 26, 59, 71, 72, 80, 81, 84, 90, 91, 93], "25": [25, 26, 33, 34, 35, 37, 38, 39, 40, 41, 47, 48, 54, 66, 67, 71, 72, 74, 75, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 103, 106, 109, 126, 128, 130, 133, 136, 137, 157, 158, 168, 171, 173, 175, 176, 177, 178, 180, 182, 224], "40": [2, 3, 25, 26, 30, 33, 34, 37, 38, 39, 40, 41, 45, 52, 54, 61, 63, 70, 75, 80, 81, 83, 84, 85, 86, 90, 93, 103, 106, 109, 110, 124, 126, 130, 131, 164, 165, 168, 170, 173, 176, 177, 182, 199, 224], "65": [25, 26, 33, 34, 38, 41, 54, 56, 74, 75, 80, 81, 83, 84, 86, 93, 103, 115, 176, 178, 182, 199, 224], "80": [2, 3, 25, 26, 33, 34, 38, 41, 51, 54, 72, 75, 77, 80, 81, 83, 84, 86, 87, 90, 94, 128, 130, 156, 171, 224, 227], "35": [7, 25, 26, 30, 33, 34, 38, 39, 40, 41, 54, 56, 62, 72, 75, 77, 80, 83, 84, 85, 86, 87, 97, 98, 99, 105, 106, 107, 115, 128, 131, 134, 157, 168, 171, 172, 173, 176, 178, 224, 227, 243], "42": [5, 8, 25, 26, 33, 38, 41, 52, 54, 57, 75, 80, 81, 83, 84, 86, 135, 156, 176, 178, 180, 182, 201, 226], "data_noisy_smal": 25, "enabl": [25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 57, 65, 67, 71, 72, 78, 79, 84, 88, 89, 90, 91, 92, 93, 95, 112, 113, 114, 115, 119, 122, 130, 131, 146, 161, 168, 172, 176, 180, 181, 182, 184, 204, 209, 220, 229], "disabl": [8, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 57, 67, 68, 71, 72, 78, 79, 84, 90, 91, 92, 93, 95, 112, 113, 114, 115, 119, 122, 130, 131, 137, 172, 176, 182, 184, 224], "interact": [4, 8, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 57, 67, 68, 71, 72, 78, 79, 84, 85, 90, 91, 92, 93, 95, 99, 101, 109, 110, 112, 113, 114, 115, 119, 122, 124, 126, 128, 130, 131, 132, 133, 136, 137, 148, 162, 168, 170, 176, 177, 178, 180, 181, 182, 189, 204, 222, 237], "fals": [8, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 52, 54, 56, 57, 67, 68, 71, 72, 74, 75, 77, 78, 79, 82, 84, 85, 86, 90, 91, 92, 93, 95, 99, 100, 101, 105, 109, 110, 112, 113, 114, 115, 119, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 157, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 189, 194, 200, 217, 234, 236], "csd": [5, 25, 26, 34, 36, 37, 38, 41, 45, 46, 49, 69, 70, 72, 80, 90, 96, 148, 154, 162, 164, 165, 175, 176, 182, 217, 219, 221, 222, 225, 226, 227, 228, 229, 230, 231, 235, 237], "origin": [7, 8, 18, 19, 25, 26, 35, 39, 41, 44, 45, 50, 51, 52, 53, 54, 55, 56, 60, 65, 67, 73, 75, 77, 80, 81, 83, 84, 86, 87, 89, 90, 92, 94, 95, 97, 98, 105, 108, 109, 112, 134, 149, 150, 152, 164, 165, 168, 170, 172, 175, 176, 177, 178, 180, 182, 183, 189, 209, 217, 226, 228, 229, 230, 243, 244], "constrainedsphericaldeconvmodel": [25, 26, 33, 34, 36, 37, 38, 41, 48, 70, 72, 183], "respons": [25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 48, 67, 69, 70, 85, 91, 96, 121, 156, 162, 171, 176, 177, 180, 182, 198, 217, 225, 226, 227, 228, 230, 231, 235], "ratio": [25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 63, 67, 70, 72, 83, 84, 90, 91, 142, 168, 175, 176, 177, 178, 180, 182, 212], "roi_radii": [25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 67, 70, 72, 85, 90, 91, 176, 182, 198], "fa_thr": [25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 67, 70, 72, 90, 91, 156, 176, 182, 198], "7": [1, 8, 22, 24, 25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 48, 53, 54, 57, 60, 67, 70, 72, 74, 75, 77, 80, 81, 83, 84, 85, 86, 87, 90, 91, 103, 109, 110, 115, 117, 123, 142, 145, 146, 156, 162, 163, 164, 165, 168, 170, 171, 175, 176, 177, 179, 180, 182, 218, 222, 226, 227, 228, 230, 237], "csd_model_orig": 25, "csd_fit_orig": 25, "csd_shm_orig": 25, "shm_coeff": [25, 26, 34, 36, 37, 41, 85, 173, 174, 176, 183, 230], "csd_model_noisi": 25, "csd_fit_noisi": 25, "csd_shm_noisi": 25, "inspir": [25, 26, 85, 177], "rodrigues2010": [25, 26], "lookup": [25, 26, 137, 172, 173, 180], "contain": [5, 7, 25, 26, 30, 44, 45, 50, 54, 56, 70, 71, 72, 73, 74, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 100, 108, 113, 115, 134, 137, 138, 141, 145, 146, 147, 153, 155, 156, 157, 162, 164, 165, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 208, 210, 212, 214, 215, 217, 219, 220, 221, 222, 223, 228, 229, 230, 232, 233, 234, 235, 236, 244], "sampl": [1, 25, 36, 37, 39, 45, 69, 73, 74, 84, 86, 89, 92, 95, 96, 97, 98, 103, 107, 121, 126, 141, 142, 148, 164, 165, 168, 170, 172, 173, 175, 176, 179, 180, 217, 219, 223, 234, 236], "over": [1, 22, 25, 26, 30, 44, 53, 84, 87, 88, 89, 98, 101, 107, 142, 143, 144, 152, 168, 170, 171, 172, 174, 176, 180, 181, 219, 229, 233, 239], "discret": [25, 26, 37, 39, 47, 71, 84, 97, 157, 158, 168, 170, 171, 173, 176, 177, 180, 182, 184, 211, 224], "ensur": [5, 8, 25, 26, 73, 74, 84, 131, 168, 170, 174, 176, 180, 182, 230], "rotation": [25, 26, 84, 87, 170], "invari": [25, 26, 45, 69, 74, 84, 87, 96, 114, 156, 170, 172, 176, 177, 180, 181, 219], "equal": [7, 25, 26, 30, 37, 72, 77, 79, 83, 84, 87, 94, 100, 103, 130, 156, 168, 170, 173, 176, 177, 178, 180, 181, 182, 215, 221, 224, 226, 230, 239, 240], "By": [22, 25, 26, 37, 44, 56, 65, 77, 79, 85, 90, 95, 99, 112, 113, 117, 137, 141, 143, 150, 168, 170, 175, 176, 177, 178, 180, 181, 239, 243], "100": [2, 3, 25, 26, 30, 33, 34, 37, 38, 41, 44, 45, 52, 54, 57, 59, 72, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 92, 93, 94, 97, 98, 103, 105, 106, 115, 117, 119, 122, 123, 124, 126, 130, 164, 165, 168, 171, 172, 176, 177, 178, 179, 180, 182, 184, 224], "enhancement_kernel": [25, 26, 183], "enhancementkernel": [25, 26, 180, 183], "shift_twist_convolut": [25, 183], "convolv": [25, 183], "d33": [25, 26, 172], "d44": [25, 26, 172], "02": [25, 26, 28, 33, 34, 37, 38, 41, 44, 49, 54, 57, 62, 66, 75, 80, 81, 83, 84, 86, 87, 88, 89, 104, 107, 120, 133, 176, 218, 219, 224, 231], "k": [1, 2, 3, 5, 25, 26, 30, 36, 41, 45, 52, 56, 63, 65, 68, 69, 71, 74, 86, 88, 89, 95, 96, 97, 98, 100, 112, 114, 126, 128, 137, 142, 147, 153, 156, 158, 168, 170, 171, 175, 176, 177, 178, 180, 181, 182, 200, 204, 215, 239, 241, 243], "shm": [25, 26, 33, 34, 35, 37, 38, 47, 67, 68, 71, 85, 92, 126, 128, 131, 136, 173, 182, 183, 217, 222, 224, 225, 226, 230, 243], "sf_to_sh": [25, 92, 183], "sh_to_sf": [25, 92, 183], "delta": [25, 73, 83, 142, 156, 170, 181, 182, 183, 202, 226, 235, 239, 241], "spike": 25, "zero": [5, 25, 26, 30, 44, 45, 54, 74, 75, 76, 81, 83, 85, 86, 87, 88, 90, 98, 103, 110, 121, 128, 130, 136, 164, 165, 168, 170, 172, 173, 174, 175, 176, 177, 178, 180, 219, 220, 221, 222, 228, 234, 236, 239, 240], "get_orient": [25, 172, 183], "shape": [25, 26, 30, 35, 36, 39, 41, 45, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 63, 65, 67, 68, 71, 72, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 90, 92, 93, 94, 97, 98, 100, 101, 103, 105, 107, 108, 109, 112, 114, 117, 122, 124, 127, 129, 130, 131, 134, 135, 137, 144, 150, 154, 157, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 198, 200, 209, 217, 218, 219, 224, 226, 228, 230, 231, 234, 235], "dtype": [25, 75, 103, 105, 106, 110, 115, 168, 170, 172, 174, 176, 178, 180, 182, 183, 217, 224, 225, 228, 230, 235], "spike_shm_conv": 25, "get_spher": [25, 38, 40, 47, 68, 76, 78, 79, 80, 82, 84, 85, 90, 91, 92, 93, 119, 122, 176, 180, 183], "sh_order": [25, 26, 33, 34, 35, 37, 38, 67, 68, 72, 80, 85, 90, 92, 126, 128, 136, 156, 172, 173, 175, 176, 182, 197, 198], "8": [1, 5, 24, 25, 26, 30, 33, 34, 35, 37, 38, 41, 45, 48, 53, 54, 56, 57, 63, 67, 68, 72, 74, 75, 80, 83, 84, 85, 86, 87, 90, 91, 92, 93, 97, 98, 101, 109, 115, 117, 126, 128, 131, 136, 137, 156, 162, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 178, 180, 182, 191, 214, 215, 217, 221, 222, 224, 227, 228, 229, 230, 232, 237, 241], "test_mod": [25, 172], "true": [5, 7, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 53, 54, 55, 56, 60, 61, 63, 65, 67, 68, 71, 72, 76, 79, 82, 83, 84, 87, 90, 92, 97, 98, 99, 100, 101, 105, 108, 109, 114, 115, 124, 125, 126, 128, 131, 134, 136, 142, 157, 168, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 189, 192, 193, 197, 198, 202, 204, 208, 214, 215, 221, 230], "spike_sf_conv": 25, "model_kernel": 25, "odf_slic": [25, 68, 71, 72, 78, 79, 80, 84, 85, 90, 91, 92, 93, 119, 122, 222], "6": [1, 6, 22, 24, 25, 26, 33, 34, 35, 37, 38, 41, 45, 52, 54, 56, 57, 60, 63, 67, 68, 70, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 86, 87, 88, 89, 93, 94, 99, 100, 107, 109, 110, 112, 113, 114, 115, 117, 123, 124, 126, 128, 131, 134, 136, 145, 146, 156, 162, 163, 164, 165, 168, 170, 171, 174, 176, 177, 178, 180, 182, 199, 200, 208, 212, 217, 219, 220, 222, 223, 225, 226, 234, 236, 237, 239, 240], "scale": [25, 68, 71, 72, 78, 79, 80, 84, 85, 86, 90, 91, 93, 95, 97, 103, 105, 106, 119, 131, 144, 157, 168, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 184, 185, 195, 202, 209, 223, 231, 234, 239, 241], "4": [1, 2, 3, 4, 24, 25, 26, 30, 32, 33, 34, 36, 37, 38, 40, 41, 44, 47, 50, 51, 52, 54, 55, 56, 57, 60, 61, 63, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 94, 97, 98, 100, 105, 106, 107, 108, 112, 113, 115, 117, 124, 126, 131, 134, 137, 142, 144, 146, 147, 152, 153, 156, 162, 163, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 198, 200, 208, 217, 218, 219, 222, 228, 231, 234, 237, 239, 243], "displai": [5, 25, 26, 30, 35, 39, 40, 67, 71, 78, 80, 84, 93, 105, 110, 119, 131, 134, 135, 136, 137, 171, 181, 182, 204, 219, 223, 229], "x": [5, 13, 22, 25, 26, 30, 39, 63, 83, 88, 89, 91, 93, 100, 105, 114, 121, 131, 134, 137, 142, 143, 144, 146, 157, 162, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 186, 193, 217, 220, 224, 228, 230, 233, 237, 239, 244], "set_camera": [25, 26, 32, 68, 109, 110, 124, 130, 131, 135], "30": [2, 3, 25, 26, 33, 34, 37, 38, 39, 41, 45, 52, 54, 70, 75, 77, 78, 80, 81, 83, 84, 86, 87, 93, 94, 104, 105, 109, 110, 115, 119, 124, 130, 135, 148, 149, 163, 164, 165, 168, 170, 180, 182, 222, 224], "focal_point": [25, 26, 68, 109, 110, 124, 130, 131, 135], "view_up": [25, 26, 32, 68, 109, 110, 124, 131, 135], "record": [25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 57, 67, 68, 70, 71, 72, 78, 79, 80, 84, 85, 90, 91, 92, 93, 95, 100, 105, 109, 110, 112, 113, 114, 115, 119, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 175, 177, 180, 181, 221, 222, 223, 226, 228, 230, 236], "out_path": [25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 57, 67, 68, 71, 72, 78, 79, 80, 84, 85, 90, 91, 92, 93, 95, 100, 105, 109, 110, 112, 113, 114, 115, 119, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137], "png": [25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 53, 54, 55, 56, 57, 60, 63, 65, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 181, 182, 223, 230], "900": [2, 3, 25, 26, 35, 40, 67, 72, 81, 83, 93, 100, 105, 125, 130, 134, 136, 137, 218], "show": [8, 17, 19, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 65, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 103, 105, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 124, 125, 126, 128, 130, 131, 134, 136, 137, 143, 145, 147, 172, 175, 176, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 222, 224, 228, 229, 234, 239], "csd_shm_enh": 25, "sharpen": [25, 84, 176, 225], "csd_shm_enh_sharp": 25, "lambda_": [25, 176], "convert": [7, 22, 25, 74, 86, 92, 121, 170, 173, 174, 175, 176, 177, 180, 182, 198, 218, 222, 228, 230, 236], "raw": [25, 51, 71, 76, 77, 79, 82, 94, 95, 142, 171, 173, 175, 226], "form": [17, 22, 25, 79, 80, 97, 98, 146, 156, 168, 170, 171, 172, 176, 177, 178, 180, 182, 239, 240], "csd_sf_orig": 25, "csd_sf_noisi": 25, "csd_sf_enh": 25, "csd_sf_enh_sharp": 25, "normal": [25, 32, 77, 79, 81, 86, 90, 97, 98, 105, 106, 107, 114, 138, 144, 145, 157, 168, 170, 172, 173, 174, 176, 177, 180, 181, 183, 226, 227, 230, 243], "amax": 25, "observ": [5, 25, 37, 51, 52, 60, 68, 78, 81, 86, 89, 90, 101, 117, 119, 143, 158, 170, 176, 177], "diffus": [1, 2, 3, 5, 21, 25, 26, 30, 35, 36, 37, 39, 40, 41, 45, 52, 53, 54, 56, 57, 58, 60, 62, 65, 67, 68, 69, 70, 71, 72, 77, 78, 80, 81, 82, 83, 85, 88, 89, 90, 91, 94, 95, 96, 97, 105, 110, 119, 121, 126, 131, 134, 142, 146, 147, 148, 149, 150, 153, 154, 158, 159, 160, 162, 163, 164, 165, 168, 170, 171, 172, 173, 174, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 224, 232, 234, 239, 240, 241, 243], "closer": [25, 99, 107, 157, 168, 231], "noiseless": [25, 95, 121, 122], "fodf_spheres_org": 25, "z": [5, 25, 26, 30, 39, 63, 71, 73, 83, 88, 89, 93, 105, 121, 131, 134, 137, 142, 143, 144, 157, 168, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 186, 239, 244], "setposit": [25, 130, 137], "fodf_spher": [25, 72, 85, 90, 91], "fodf_spheres_enh": 25, "fodf_spheres_enh_sharp": 25, "top": [5, 8, 17, 25, 30, 75, 97, 106, 107, 128, 136, 143, 146, 170, 181, 218, 224, 228], "left": [8, 25, 26, 30, 41, 51, 52, 53, 54, 55, 56, 60, 63, 65, 70, 73, 75, 78, 84, 86, 87, 88, 89, 91, 97, 98, 99, 100, 101, 105, 109, 110, 119, 123, 124, 128, 131, 134, 135, 137, 142, 143, 148, 149, 150, 168, 170, 171, 172, 174, 176, 177, 181], "bottom": [25, 26, 143], "snr": [25, 45, 54, 55, 58, 60, 62, 78, 86, 119, 121, 122, 152, 171, 176, 178, 219, 226, 230], "meester": [23, 25, 26, 172, 180, 218, 219], "g": [1, 5, 8, 9, 15, 22, 25, 26, 30, 32, 34, 36, 41, 52, 60, 65, 68, 71, 74, 76, 77, 79, 81, 82, 83, 84, 86, 87, 90, 91, 93, 94, 95, 97, 98, 103, 105, 106, 107, 112, 114, 126, 128, 130, 134, 136, 142, 143, 147, 149, 152, 153, 155, 156, 157, 158, 162, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 200, 214, 215, 237, 239, 240], "sanguinetti": [25, 26, 172, 180, 217], "e": [1, 2, 3, 5, 8, 9, 15, 22, 23, 25, 26, 30, 32, 34, 35, 36, 39, 41, 52, 54, 56, 60, 65, 67, 68, 71, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 89, 90, 91, 93, 94, 95, 98, 99, 103, 105, 109, 110, 112, 113, 114, 115, 121, 123, 124, 125, 128, 134, 142, 143, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 162, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 224, 226, 237, 238, 239, 240, 243], "garyfallidi": [1, 2, 3, 5, 21, 23, 25, 26, 35, 56, 67, 81, 82, 99, 100, 101, 109, 112, 113, 114, 115, 123, 124, 125, 134, 147, 148, 149, 150, 157, 158, 168, 171, 172, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "j": [1, 2, 3, 5, 25, 26, 30, 33, 36, 39, 41, 52, 54, 56, 63, 65, 70, 72, 73, 74, 75, 79, 80, 81, 83, 85, 88, 89, 90, 91, 93, 100, 105, 106, 107, 109, 117, 123, 124, 125, 137, 142, 148, 149, 153, 156, 157, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 188, 191, 192, 194, 195, 198, 199, 200, 201, 204, 209, 224, 235, 239, 241, 243], "portegi": [25, 26, 172, 180], "duit": [25, 26, 172, 180], "2016": [2, 3, 25, 26, 33, 45, 52, 54, 56, 74, 75, 80, 83, 84, 85, 86, 88, 89, 145, 147, 163, 164, 165, 170, 171, 172, 176, 177, 180, 182, 191, 192, 218, 219, 229], "fast": [1, 2, 3, 17, 25, 35, 45, 67, 74, 75, 83, 85, 86, 87, 97, 111, 114, 116, 117, 131, 145, 146, 147, 156, 162, 168, 172, 173, 176, 177, 178, 180, 181, 182, 204, 217, 219, 224, 236, 243], "ismrm": [25, 70, 83, 99, 100, 163, 168, 172, 176, 177, 180, 181, 182, 204, 211, 226, 230], "confer": [25, 26, 168, 172, 176, 180], "fick": [2, 3, 23, 25, 26, 45, 84, 164, 165, 171, 172, 176, 180, 219, 220, 222], "girard": [23, 25, 26, 32, 36, 41, 158, 172, 180, 182, 215, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 233, 234, 236], "2015": [1, 2, 3, 25, 26, 39, 40, 45, 52, 74, 80, 83, 86, 90, 91, 99, 100, 121, 145, 146, 149, 153, 156, 157, 162, 163, 164, 165, 168, 171, 172, 176, 178, 180, 182, 211, 217, 218, 219, 227, 229], "improv": [25, 26, 30, 36, 41, 51, 54, 55, 85, 89, 90, 101, 105, 150, 157, 162, 168, 170, 172, 176, 177, 180, 182, 217, 219, 220, 221, 224, 226, 228, 229, 230, 231, 232, 234, 235], "combin": [8, 25, 26, 35, 40, 45, 51, 60, 67, 84, 85, 87, 88, 90, 91, 93, 103, 131, 139, 140, 168, 170, 172, 176, 180, 182, 219], "flow": [25, 26, 141, 168, 172, 176, 180, 182, 221, 222, 229, 235], "plo": [2, 3, 25, 26, 39, 40, 53, 54, 56, 90, 91, 123, 171, 172, 175, 176, 179, 180, 182, 191], "One": [25, 26, 30, 37, 39, 52, 56, 60, 63, 70, 72, 74, 79, 85, 90, 95, 123, 135, 146, 147, 168, 170, 171, 172, 175, 176, 179, 180, 218, 220, 222, 235, 240], "se": [25, 80, 81, 172], "applic": [25, 26, 47, 50, 52, 54, 60, 74, 79, 84, 86, 90, 108, 130, 146, 168, 170, 172, 174, 175, 176, 177, 182, 203], "neuroimag": [2, 3, 25, 32, 33, 36, 41, 52, 54, 63, 65, 72, 73, 74, 75, 76, 77, 78, 81, 84, 85, 86, 88, 89, 90, 94, 95, 99, 100, 109, 119, 121, 123, 126, 146, 148, 149, 153, 156, 157, 158, 159, 168, 170, 171, 172, 173, 176, 177, 178, 180, 182, 191, 192, 198, 200, 206, 209, 211, 215, 217, 238, 243], "fifth": [25, 172], "intern": [25, 26, 37, 44, 54, 75, 83, 85, 109, 113, 115, 145, 168, 172, 176, 177, 180, 181, 182, 204, 224], "variat": [25, 30, 56, 90, 168, 172, 176, 177, 182], "comput": [1, 4, 7, 19, 25, 26, 32, 35, 39, 44, 47, 48, 51, 52, 53, 54, 56, 63, 67, 68, 72, 73, 74, 75, 77, 79, 80, 81, 83, 84, 85, 86, 90, 93, 94, 97, 98, 99, 101, 105, 109, 110, 112, 113, 114, 121, 124, 125, 136, 145, 146, 148, 153, 156, 157, 162, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 185, 188, 198, 199, 200, 201, 209, 212, 219, 222, 230, 243], "vision": [21, 25, 26, 168, 172, 176], "franken": [25, 26, 172], "2011": [1, 2, 3, 25, 26, 45, 51, 55, 63, 74, 75, 77, 83, 93, 94, 97, 98, 100, 105, 106, 107, 117, 148, 152, 156, 157, 164, 165, 168, 170, 172, 176, 177, 182, 199, 224, 229], "journal": [2, 3, 25, 26, 39, 40, 53, 54, 56, 83, 90, 91, 126, 134, 156, 163, 172, 175, 176, 178, 180, 182, 191, 200, 201], "92": [25, 26, 34, 38, 41, 45, 54, 75, 80, 81, 83, 84, 86, 90, 164, 165, 172, 176, 178, 226], "231": [25, 26, 80, 83, 84, 170, 172], "264": [25, 26, 80, 83, 84, 172, 225], "p": [5, 8, 17, 25, 26, 39, 53, 54, 55, 56, 68, 77, 78, 90, 94, 117, 119, 145, 148, 152, 168, 170, 172, 174, 175, 176, 177, 178, 180, 182, 191, 200, 241, 243, 244], "rodrigu": [25, 26, 170], "romeni": [25, 26], "A": [2, 3, 5, 8, 9, 15, 20, 24, 25, 26, 30, 32, 35, 36, 39, 40, 41, 45, 52, 53, 54, 56, 59, 60, 67, 68, 70, 72, 73, 74, 75, 80, 81, 84, 85, 86, 89, 90, 91, 95, 97, 100, 109, 114, 117, 123, 124, 125, 126, 128, 130, 134, 135, 136, 137, 138, 141, 142, 144, 146, 147, 148, 149, 150, 153, 155, 156, 158, 162, 163, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 222, 223, 224, 225, 227, 228, 239, 240, 243], "vilanova": [25, 26], "2010": [1, 2, 3, 25, 26, 45, 47, 71, 74, 78, 80, 82, 100, 119, 146, 147, 156, 164, 165, 168, 170, 171, 176, 178, 229], "acceler": [25, 26, 45, 68, 90, 97, 153, 164, 165, 168, 176, 182], "dw": [25, 26, 63, 68, 121, 128, 176], "mri": [1, 2, 3, 5, 21, 25, 26, 30, 35, 36, 39, 40, 41, 45, 50, 52, 54, 56, 60, 63, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 98, 108, 110, 126, 128, 142, 147, 148, 149, 150, 152, 153, 154, 158, 159, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 230, 232, 234, 243], "eurograph": [25, 26], "workshop": [25, 26, 80, 93, 163, 176, 223], "biologi": [25, 26, 131], "medicin": [25, 26, 54, 56, 57, 71, 74, 75, 80, 83, 85, 86, 90, 147, 156, 172, 176, 177, 178, 181, 182, 192, 204], "associ": [25, 26, 56, 73, 75, 81, 137, 168, 170, 171, 173, 174, 176, 177, 178, 180, 182, 194, 214, 215, 224, 243], "total": [25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 147, 170, 172, 175, 176, 178, 180, 182, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "script": [22, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 146, 147, 161, 182, 198, 208, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 244], "minut": [7, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 146], "000": [30, 36, 45, 62, 73, 74, 85, 87, 89, 96, 114, 115, 135, 164, 165, 170, 176, 178], "second": [17, 22, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 146, 156, 168, 170, 175, 176, 177, 178, 180, 181, 182, 224, 229, 239], "sourc": [6, 20, 21, 22, 24, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 161, 168, 170, 172, 176, 177, 180, 182, 224], "contextual_enhanc": [25, 28], "jupyt": [25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 236], "notebook": [25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 219, 221, 228, 230, 236], "ipynb": [25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141], "galleri": [25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 145, 162, 163, 219, 225, 228, 236, 237], "sphinx": [5, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 145, 146, 222, 223, 230, 231, 236], "fbc": [26, 162, 180, 219, 231], "quantit": [2, 3, 26, 36, 41, 74, 80, 158, 176, 179, 180, 182, 200], "surround": [26, 87, 95, 168], "These": [5, 10, 14, 22, 26, 39, 41, 44, 52, 53, 63, 70, 74, 75, 79, 81, 83, 84, 87, 90, 97, 117, 121, 123, 126, 131, 156, 168, 170, 171, 172, 176, 178, 217, 219, 220, 221, 222, 223, 228, 229, 230, 232, 233, 234, 235, 236, 239, 240, 241, 243, 244], "clean": [15, 22, 26, 145, 146, 162, 177, 180, 219, 221, 222, 223, 224, 225, 227, 228, 234], "low": [21, 26, 41, 45, 51, 74, 83, 84, 85, 86, 91, 95, 112, 126, 142, 152, 156, 164, 165, 168, 170, 172, 175, 176, 177, 178, 180], "indic": [26, 32, 45, 47, 54, 63, 69, 71, 74, 75, 79, 80, 84, 95, 96, 106, 110, 112, 113, 114, 115, 125, 128, 156, 168, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 197, 198, 206, 208, 209, 225, 231, 233, 234], "isol": [26, 63, 84, 90, 168], "poorli": [26, 176], "figur": [5, 26, 30, 35, 39, 41, 48, 50, 51, 52, 54, 56, 63, 65, 67, 75, 77, 80, 81, 83, 85, 86, 87, 88, 94, 97, 98, 105, 106, 107, 108, 117, 121, 128, 130, 131, 162, 170, 180, 181, 182, 204, 217, 219, 220, 221, 228], "below": [2, 26, 32, 41, 44, 45, 52, 53, 54, 56, 69, 73, 74, 75, 79, 81, 85, 114, 126, 128, 130, 135, 137, 143, 146, 148, 158, 168, 170, 174, 175, 176, 178, 179, 180, 182, 185, 223, 243], "On": [1, 8, 26, 74, 84, 112, 146, 168, 170, 176, 222], "illustr": [26, 52, 57, 71, 72, 73, 74, 79, 81, 84, 85, 86, 87, 90, 91, 92, 95, 122, 152, 168, 170, 176, 178, 235, 244], "contribut": [5, 21, 23, 26, 30, 75, 81, 83, 86, 87, 98, 121, 122, 123, 168, 175, 176, 178, 180, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 241], "two": [1, 22, 26, 30, 33, 45, 51, 52, 54, 57, 60, 63, 65, 68, 70, 72, 73, 75, 77, 79, 81, 83, 85, 86, 87, 89, 91, 93, 94, 97, 98, 100, 101, 105, 106, 107, 112, 113, 114, 117, 121, 122, 125, 130, 131, 137, 142, 143, 146, 148, 149, 150, 156, 157, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 189, 201, 225, 239, 240, 243], "densiti": [26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 67, 74, 79, 90, 105, 126, 127, 128, 129, 136, 156, 168, 176, 178, 180, 182, 214, 215, 226, 241], "estim": [1, 26, 34, 35, 36, 37, 41, 45, 51, 52, 55, 56, 58, 62, 67, 69, 70, 73, 74, 75, 79, 80, 81, 83, 84, 85, 86, 88, 89, 91, 93, 95, 96, 103, 105, 131, 142, 152, 153, 156, 158, 162, 164, 165, 168, 170, 173, 176, 177, 178, 180, 182, 183, 185, 191, 192, 193, 199, 200, 201, 202, 215, 217, 218, 219, 220, 226, 228, 230, 231, 232, 239, 240], "sum": [26, 30, 63, 72, 74, 76, 77, 82, 84, 85, 86, 88, 90, 91, 94, 103, 106, 112, 114, 143, 157, 168, 170, 171, 175, 176, 177, 178, 179, 180, 182, 185], "color": [7, 26, 30, 32, 35, 39, 40, 52, 57, 63, 67, 70, 79, 83, 87, 95, 99, 100, 101, 103, 105, 106, 107, 109, 110, 112, 113, 114, 115, 117, 124, 125, 126, 130, 131, 134, 136, 137, 145, 148, 149, 162, 168, 174, 176, 177, 180, 181, 182, 199, 200, 204, 217, 219, 221, 222, 226, 234], "spuriou": [22, 26, 84, 95, 100, 176, 180], "badli": [26, 63], "identifi": [26, 35, 36, 39, 45, 63, 67, 95, 131, 134, 158, 164, 165, 168, 170, 171, 172, 174, 175, 176, 177, 180, 182, 205, 214, 239], "lfbc": [26, 180], "deviat": [26, 51, 55, 60, 63, 73, 87, 95, 106, 121, 152, 168, 172, 173, 176, 177, 178, 180, 181, 182, 185, 191, 192, 226, 234], "portegies2015": [26, 172], "5d": [26, 172, 174], "first": [5, 8, 17, 19, 22, 26, 30, 32, 35, 40, 44, 47, 50, 51, 52, 53, 55, 56, 57, 60, 63, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 105, 106, 107, 108, 109, 110, 112, 113, 115, 117, 121, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 146, 147, 148, 149, 150, 151, 156, 157, 158, 168, 170, 172, 175, 176, 177, 178, 180, 181, 182, 220, 238], "induc": [26, 74, 176], "lift": 26, "defin": [5, 26, 34, 36, 40, 41, 52, 54, 63, 73, 74, 75, 79, 81, 83, 86, 87, 88, 89, 93, 95, 98, 99, 100, 103, 106, 107, 112, 113, 114, 117, 121, 126, 144, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 204, 208, 210, 219, 221, 227, 230, 234, 236, 243], "whole": [2, 3, 26, 72, 87, 90, 128, 172, 177, 180], "rel": [5, 7, 8, 26, 30, 40, 70, 79, 95, 123, 126, 150, 170, 172, 173, 176, 179, 180, 182, 217, 219, 222, 223, 224], "rfbc": [26, 180], "averag": [2, 3, 26, 36, 51, 72, 74, 83, 86, 88, 89, 90, 91, 100, 101, 109, 142, 148, 149, 152, 168, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 204, 219, 241], "detail": [2, 11, 12, 15, 16, 26, 30, 41, 44, 52, 54, 55, 56, 60, 74, 75, 81, 83, 85, 86, 88, 93, 97, 126, 142, 146, 147, 151, 170, 171, 176, 177, 217, 226, 230], "found": [26, 36, 52, 84, 87, 89, 97, 126, 128, 138, 141, 158, 162, 170, 172, 173, 176, 180, 182, 193, 194, 208, 217, 219, 236, 238, 239, 240], "load_nifti": [26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 50, 51, 53, 54, 55, 56, 59, 60, 61, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 82, 84, 85, 86, 88, 90, 91, 93, 94, 95, 97, 98, 105, 107, 108, 123, 126, 128, 131, 136, 137, 145, 168, 171, 183], "label_fnam": [26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 67, 126, 128, 131, 136], "stanford_label": [2, 3, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 67, 126, 128, 131, 136], "t1_fname": [26, 30, 39, 40, 52, 55, 74, 75, 84, 85, 86, 107, 117, 128, 131], "stanford_t1": [2, 3, 26, 30, 39, 40, 55, 128, 131], "label": [2, 3, 5, 6, 7, 18, 22, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 67, 68, 70, 83, 86, 87, 95, 105, 106, 107, 115, 121, 122, 126, 128, 130, 131, 134, 136, 157, 168, 171, 175, 177, 180, 181, 182, 206, 217, 220, 222, 228, 230], "t1_data": [26, 30, 39, 40, 128, 131], "relev": [5, 26, 73, 74, 75, 81, 83, 86, 89, 121, 146, 147, 148, 149, 150, 161, 162, 175, 176, 179, 180, 182], "hemispher": [26, 37, 57, 86, 92, 101, 122, 150, 171, 173, 176, 183, 224], "coordin": [24, 26, 30, 32, 50, 57, 59, 61, 65, 79, 83, 86, 90, 92, 108, 112, 121, 122, 123, 130, 131, 134, 135, 142, 144, 145, 147, 156, 162, 166, 168, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 204, 217, 218, 228, 233, 235, 242, 243], "bound": [26, 83, 168, 170, 174, 176, 177, 178, 180, 182, 207, 208, 212, 219, 222, 230], "dshape": 26, "xa": 26, "xb": 26, "ya": 26, "yb": 26, "za": [26, 182], "zb": 26, "15": [1, 24, 25, 26, 36, 38, 41, 45, 52, 54, 63, 72, 73, 74, 75, 77, 80, 81, 83, 84, 85, 86, 87, 89, 90, 94, 98, 101, 103, 109, 115, 117, 128, 129, 134, 137, 146, 147, 162, 163, 164, 165, 168, 170, 172, 175, 176, 177, 178, 180, 181, 182, 189, 198, 204, 217, 223, 224, 235, 237, 243], "18": [1, 26, 34, 37, 38, 41, 45, 54, 75, 77, 80, 81, 83, 84, 86, 87, 109, 110, 115, 117, 124, 134, 135, 147, 148, 149, 150, 163, 164, 165, 170, 172, 176, 177, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 224, 227, 229, 230], "selectionmask": 26, "bool": [26, 60, 75, 115, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 233, 234], "constant": [26, 34, 35, 45, 47, 67, 69, 83, 93, 96, 98, 142, 147, 154, 168, 176, 177, 178, 182, 197, 210, 225, 239], "solid": [26, 34, 35, 45, 47, 67, 69, 96, 147, 154, 170, 176, 178, 182, 197], "cda": 26, "csa": [26, 30, 33, 34, 37, 38, 45, 47, 71, 126, 136, 147, 148, 154, 158, 164, 165, 176, 179, 182, 197, 198, 219, 239, 240], "good": [5, 7, 8, 13, 15, 17, 22, 26, 35, 63, 67, 70, 72, 84, 85, 91, 95, 97, 106, 117, 130, 152, 160, 168, 170, 176, 177, 180, 182, 219, 226, 229, 233, 244], "choic": [5, 7, 26, 33, 84, 90, 97, 98, 106, 152, 177, 180, 217, 240, 243], "fraction": [2, 3, 26, 35, 39, 40, 41, 67, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 95, 119, 121, 122, 123, 135, 162, 175, 176, 177, 178, 179, 180, 182, 199, 200, 201, 228], "anisotropi": [2, 3, 26, 35, 39, 40, 41, 67, 73, 76, 79, 80, 81, 84, 85, 86, 87, 88, 95, 123, 135, 162, 170, 176, 177, 179, 180, 182, 199, 200, 227, 228, 230], "gfa": [26, 33, 34, 35, 37, 38, 39, 40, 47, 67, 71, 76, 82, 126, 128, 136, 158, 173, 179, 182, 183, 224, 225, 226, 230], "restrict": [26, 35, 37, 44, 67, 73, 74, 75, 84, 87, 89, 128, 158, 174, 176, 178, 180, 237], "those": [5, 8, 15, 17, 26, 30, 34, 35, 41, 63, 65, 67, 71, 79, 85, 87, 105, 113, 131, 137, 146, 158, 168, 170, 172, 176, 177, 180, 182], "area": [23, 26, 35, 40, 41, 67, 71, 79, 83, 101, 109, 134, 137, 148, 168, 170, 174, 175, 176, 177, 180, 182, 204], "signific": [26, 35, 67, 84, 148, 176, 180], "thu": [5, 22, 26, 60, 63, 74, 75, 81, 83, 85, 105, 113, 152, 170, 175, 176], "interest": [26, 35, 57, 60, 63, 67, 74, 75, 95, 98, 105, 122, 128, 131, 152, 156, 168, 171, 172, 176, 180, 231], "done": [8, 14, 18, 22, 26, 30, 35, 52, 56, 60, 61, 67, 70, 73, 75, 79, 84, 85, 86, 87, 90, 98, 100, 101, 107, 112, 114, 123, 131, 146, 168, 170, 172, 176, 177, 180, 182, 191], "csaodfmodel": [26, 33, 34, 35, 37, 38, 47, 67, 71, 126, 128, 131, 136, 183], "csa_model": [26, 33, 34, 35, 37, 38, 67, 126, 128, 136], "csa_peak": [26, 35, 67, 126, 128, 136, 148], "relative_peak_threshold": [26, 35, 40, 47, 48, 67, 71, 72, 82, 85, 90, 91, 126, 128, 131, 136, 173, 182, 225], "min_separation_angl": [26, 35, 40, 47, 48, 67, 71, 72, 82, 85, 90, 91, 126, 128, 131, 136, 173, 182], "45": [7, 26, 33, 34, 35, 37, 38, 41, 52, 54, 67, 75, 80, 81, 83, 84, 86, 103, 117, 126, 128, 131, 136, 137, 146, 168, 171, 176, 224, 227], "probabilist": [26, 29, 30, 31, 33, 34, 36, 39, 45, 60, 126, 128, 136, 154, 162, 172, 173, 176, 178, 182, 214, 223, 225, 228, 237], "collect": [2, 3, 8, 26, 90, 168, 171, 174, 175, 176, 179, 180, 222, 234, 243], "white": [1, 2, 3, 24, 26, 35, 36, 37, 39, 40, 41, 52, 60, 63, 67, 68, 70, 74, 75, 79, 80, 83, 84, 85, 86, 87, 89, 90, 91, 95, 98, 99, 100, 101, 109, 112, 115, 117, 123, 126, 128, 130, 131, 135, 148, 154, 156, 157, 158, 168, 171, 175, 176, 177, 178, 179, 180, 182, 189, 206, 209, 211, 215, 219, 220, 224, 236], "matter": [1, 2, 3, 24, 26, 35, 36, 37, 39, 40, 41, 44, 52, 60, 63, 67, 68, 70, 74, 75, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 95, 99, 100, 101, 109, 117, 123, 126, 128, 131, 148, 154, 156, 157, 158, 168, 171, 174, 175, 176, 177, 178, 179, 180, 182, 189, 206, 209, 211, 215, 224, 236, 239], "known": [26, 35, 67, 70, 72, 81, 86, 91, 112, 114, 115, 145, 158, 171, 176, 182, 199, 200], "csd_model": [26, 33, 34, 36, 37, 38, 41, 48, 70, 72], "csd_fit": [26, 33, 34, 36, 37, 38, 41, 72], "csd_fit_shm": 26, "lib": [8, 26, 52, 65, 81, 83, 134, 171], "get": [7, 8, 13, 14, 15, 16, 18, 19, 21, 22, 26, 32, 33, 35, 41, 45, 47, 48, 54, 56, 57, 64, 66, 67, 76, 77, 82, 83, 84, 85, 90, 94, 97, 98, 99, 101, 105, 106, 107, 109, 112, 113, 123, 126, 128, 131, 134, 137, 138, 141, 148, 149, 152, 156, 158, 168, 170, 171, 172, 173, 174, 175, 176, 177, 180, 182, 218, 221, 222, 224, 228, 230, 233, 234, 239, 240], "prob_dg": [26, 37, 39], "from_shcoeff": [26, 34, 36, 37, 41, 173, 183, 236], "max_angl": [26, 33, 34, 36, 37, 38, 39, 41, 173, 180, 182, 214, 215, 236], "optic": [26, 168, 171, 176], "radiat": [26, 128, 171], "calcarin": 26, "sulcu": 26, "cortex": [26, 30, 105], "v1": [26, 114, 170], "later": [5, 26, 74, 75, 83, 87, 90, 105, 123, 170, 176, 225], "genicul": 26, "nucleu": 26, "lgn": [26, 171], "roi": [26, 30, 44, 45, 63, 72, 80, 85, 90, 93, 95, 105, 126, 127, 128, 129, 132, 133, 162, 171, 176, 177, 180, 182, 183, 198, 204, 217, 222, 234], "cube": [26, 45, 87, 164, 165, 168, 172, 176], "dimens": [1, 26, 30, 44, 60, 65, 79, 83, 90, 97, 106, 114, 137, 142, 156, 158, 168, 170, 172, 174, 175, 176, 177, 178, 180, 182, 183, 200, 214, 215, 221, 228], "3x3x3": [26, 172], "rad": [26, 170], "26": [22, 26, 33, 34, 37, 38, 41, 54, 60, 63, 75, 80, 81, 83, 84, 86, 99, 105, 106, 107, 115, 157, 163, 168, 176, 177, 219, 224, 226], "29": [26, 33, 37, 41, 54, 71, 75, 79, 80, 81, 82, 83, 84, 86, 93, 94, 224, 225, 235], "31": [26, 31, 33, 34, 37, 38, 41, 54, 75, 80, 81, 83, 84, 86, 88, 103, 135, 147, 170, 176, 226], "getter": [26, 29, 30, 31, 36, 38, 39, 41, 45, 128, 158, 173, 174, 176, 182, 214, 220, 221, 226, 228, 230], "streamlines_gener": [26, 35, 67], "step_siz": [26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 67, 126, 128, 131, 136, 170, 173, 180, 182, 214, 215], "5": [1, 2, 3, 24, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 50, 52, 54, 57, 59, 61, 63, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 99, 101, 103, 105, 106, 107, 108, 112, 117, 119, 125, 126, 128, 130, 131, 134, 135, 136, 137, 145, 146, 147, 148, 155, 156, 158, 162, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 185, 200, 208, 210, 218, 219, 222, 224, 226, 228, 230, 235, 237], "enter": [8, 22, 26, 30, 168, 172, 173, 176, 177, 180, 182, 197, 198, 203, 210, 211, 221], "5x5x5": [26, 54, 172, 182, 191, 192], "find": [8, 11, 14, 18, 22, 26, 30, 36, 47, 60, 72, 79, 82, 84, 91, 100, 105, 106, 107, 109, 110, 117, 123, 130, 131, 134, 142, 146, 151, 156, 158, 159, 168, 170, 172, 173, 176, 177, 179, 180, 182, 190, 191, 197, 198, 199, 200, 202, 205, 219, 224, 226], "travers": [26, 30, 180], "through": [26, 30, 36, 40, 41, 60, 76, 83, 84, 85, 90, 91, 97, 105, 114, 117, 126, 131, 138, 141, 142, 145, 148, 152, 153, 155, 156, 157, 158, 168, 171, 176, 177, 180, 219, 224, 226, 231, 244], "mask_lgn": 26, "28": [26, 28, 34, 37, 38, 41, 54, 62, 71, 75, 79, 80, 83, 84, 86, 88, 110, 116, 162, 175, 176, 177, 178, 180, 221, 224, 232, 233], "discard": [8, 22, 26, 131, 170, 171, 172, 176, 218, 234], "filtered_fibers2": 26, "tol": [26, 168, 170, 171, 172, 176, 180], "sfil": 26, "rang": [5, 26, 45, 47, 48, 51, 52, 71, 74, 75, 79, 83, 84, 86, 88, 89, 105, 109, 110, 124, 148, 162, 164, 165, 168, 170, 172, 174, 175, 176, 177, 180, 181, 182, 214, 215, 222, 230, 239], "len": [26, 32, 44, 110, 112, 113, 114, 115, 124, 130, 131, 168, 170, 171, 175, 176, 177, 178, 180, 181, 217, 231], "append": [26, 87, 92, 124, 126, 130, 138, 141, 177, 182], "propag": [26, 63, 77, 78, 84, 94, 119, 154, 158, 162, 173, 176, 178, 180, 182, 202, 226, 239, 241], "sphx_glr_examples_built_contextual_enhancement_contextual_enhanc": [], "regard": [26, 86, 93, 168, 219], "electrostat": [26, 57, 92, 122, 170, 172, 235], "repuls": [26, 57, 170, 172, 219, 235], "fbcmeasur": [26, 183], "chosen": [26, 35, 37, 67, 87, 92, 158, 173, 176, 180, 240], "recal": [26, 143, 176], "20": [2, 3, 26, 36, 41, 45, 54, 72, 73, 75, 77, 79, 80, 81, 83, 84, 86, 87, 90, 91, 94, 95, 100, 101, 103, 109, 117, 121, 122, 135, 137, 164, 165, 168, 170, 171, 176, 177, 178, 180, 182, 189, 217, 224], "percent": [26, 177], "most": [5, 8, 13, 26, 30, 34, 47, 50, 60, 61, 63, 71, 87, 90, 97, 98, 100, 101, 106, 107, 108, 117, 146, 158, 171, 172, 174, 176, 177, 180, 237], "fbc_sl_orig": 26, "clrs_orig": 26, "rfbc_orig": 26, "get_points_rfbc_threshold": [26, 180, 183], "emphasi": [26, 180], "01": [26, 31, 33, 34, 37, 38, 41, 44, 49, 54, 57, 72, 75, 80, 81, 83, 84, 86, 90, 94, 101, 107, 109, 116, 129, 147, 150, 168, 170, 172, 176, 180, 182, 189, 221, 222, 227, 229, 230, 235, 236], "fbc_sl_thre": 26, "clrs_thre": 26, "rfbc_thre": 26, "125": [26, 45, 54, 80, 83, 84, 103, 115, 137, 164, 165, 224], "procedur": [26, 30, 51, 52, 74, 81, 86, 87, 121, 153, 155, 156, 168, 170, 176, 178, 182, 197, 198, 219, 221], "tau": [26, 87, 168, 170, 172, 176, 178, 180, 182, 183, 191, 231, 239], "lineactor": 26, "vstack": [26, 57, 78, 86, 92, 119, 122, 130, 180], "linewidth": [26, 39, 40, 86, 100, 105, 115, 124, 125, 126, 130, 135, 181], "horizont": [26, 181, 244], "axial": [26, 51, 54, 55, 60, 65, 71, 72, 73, 74, 79, 80, 85, 86, 90, 91, 117, 131, 137, 162, 176, 180, 181, 182, 199, 200], "slice": [26, 35, 39, 45, 50, 51, 52, 54, 55, 56, 60, 63, 65, 67, 68, 71, 74, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 94, 95, 98, 106, 107, 108, 117, 126, 131, 132, 133, 134, 145, 147, 162, 168, 171, 172, 174, 176, 177, 182, 183, 203, 219, 221, 222, 228, 230, 234, 236], "t1": [2, 3, 26, 40, 45, 52, 85, 111, 116, 128, 134, 141, 147, 152, 171, 172, 175, 217], "vol_actor1": 26, "sagitt": [26, 35, 63, 67, 131, 137, 181], "vol_actor2": [26, 30, 39, 40, 131], "285": [26, 80, 83, 84, 225], "155": [26, 83, 84, 226], "14": [1, 8, 24, 26, 33, 34, 37, 38, 41, 54, 75, 80, 83, 84, 86, 87, 89, 115, 117, 146, 162, 163, 171, 176, 177, 180, 220, 222, 223, 224, 231, 233, 237], "9": [1, 24, 26, 30, 33, 34, 37, 38, 41, 44, 45, 53, 54, 56, 57, 60, 72, 74, 75, 80, 81, 82, 83, 84, 86, 87, 88, 94, 107, 117, 146, 162, 163, 164, 165, 168, 171, 172, 174, 175, 176, 180, 182, 191, 217, 218, 224, 233, 236, 237], "n_frame": [26, 30, 71, 79, 100, 105, 112, 125, 126, 128, 131, 217], "or_befor": 26, "rm": [26, 30, 72, 74, 90], "or_aft": 26, "techniqu": [26, 39, 41, 52, 54, 75, 85, 86, 90, 110, 157, 175, 176, 177, 180, 226], "develop": [5, 10, 15, 16, 17, 21, 22, 24, 26, 53, 74, 86, 121, 146, 147, 156, 161, 162, 163, 168, 170, 174, 175, 176, 177, 178, 217, 219, 220, 221, 222, 226], "close": [5, 6, 8, 17, 22, 26, 41, 63, 76, 83, 85, 95, 97, 101, 125, 131, 135, 145, 150, 152, 158, 162, 168, 170, 171, 172, 173, 174, 180, 182, 183, 189, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "collabor": [8, 23, 26, 159, 160, 238], "pauli": [26, 182], "ossenblok": [26, 180], "academ": [26, 89], "center": [23, 26, 30, 56, 72, 83, 86, 90, 97, 103, 105, 128, 131, 134, 136, 142, 152, 157, 158, 168, 170, 172, 174, 176, 177, 178, 180, 182, 184, 198, 214, 215, 217, 229], "epileptologi": 26, "kempenhaegh": 26, "maastricht": 26, "umc": [23, 26], "open": [5, 8, 22, 26, 41, 63, 80, 83, 87, 117, 128, 131, 134, 141, 146, 159, 170, 171, 172, 174, 176, 180, 229, 230, 232, 233, 234, 243], "human": [1, 2, 3, 5, 23, 26, 73, 74, 79, 88, 89, 148, 149, 162, 171, 176, 180], "brain": [1, 2, 3, 23, 26, 30, 35, 41, 44, 45, 52, 54, 58, 59, 62, 63, 67, 68, 70, 72, 73, 74, 75, 79, 80, 81, 86, 88, 89, 90, 91, 95, 101, 105, 106, 107, 109, 110, 111, 116, 117, 124, 125, 128, 131, 147, 148, 150, 155, 157, 158, 162, 164, 165, 168, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 188, 195, 203, 204, 209, 212, 221, 226, 228, 232, 234], "contextu": [24, 26, 28, 162, 172, 180, 182, 218, 219], "cross": [5, 26, 27, 28, 30, 45, 69, 73, 74, 76, 79, 83, 84, 86, 87, 90, 95, 96, 105, 106, 107, 121, 156, 157, 162, 168, 170, 172, 176, 180, 182, 185, 217, 219, 222, 226, 228, 229, 234], "preserv": [26, 27, 28, 45, 51, 54, 56, 144, 150, 170, 172, 180], "enhanc": [24, 26, 28, 32, 111, 116, 152, 162, 172, 180, 218, 219, 226, 229], "fiber_to_bundle_coher": [26, 28, 221], "bundl": [1, 2, 3, 24, 27, 28, 34, 37, 45, 87, 102, 104, 105, 110, 111, 112, 113, 114, 115, 116, 126, 127, 128, 129, 130, 132, 133, 134, 145, 146, 154, 157, 162, 168, 171, 173, 179, 180, 181, 182, 183, 187, 188, 189, 204, 206, 209, 219, 221, 222, 223, 226, 228, 230, 231, 233, 235, 236], "coher": [27, 28, 39, 45, 72, 87, 90, 162, 171, 174, 176, 180, 219], "measur": [2, 3, 27, 28, 45, 52, 54, 57, 70, 72, 73, 74, 75, 77, 79, 80, 81, 83, 84, 86, 87, 89, 90, 91, 94, 95, 109, 142, 148, 153, 156, 162, 164, 165, 168, 170, 171, 172, 175, 176, 178, 179, 180, 182, 199, 201, 219, 231, 233, 239, 241], "surfac": [29, 31, 40, 45, 91, 126, 128, 132, 133, 162, 170, 171, 176, 219, 221, 233, 243], "introduct": [15, 16, 20, 24, 29, 30, 31, 33, 36, 39, 41, 44, 45, 64, 66, 128, 131, 146, 154, 230, 239], "determinist": [29, 31, 33, 35, 37, 41, 45, 67, 154, 162, 176, 180, 182, 214, 222, 226, 234, 237], "transport": [29, 31, 45, 145, 170, 173, 235, 236], "robust": [1, 5, 29, 31, 35, 45, 54, 59, 67, 69, 72, 74, 84, 85, 86, 87, 96, 99, 100, 121, 149, 155, 156, 157, 158, 162, 168, 171, 172, 173, 174, 176, 177, 178, 180, 182, 198, 199, 200, 211, 228, 234, 243], "unbias": [2, 3, 29, 31, 45, 69, 96, 99, 162, 168, 171, 176, 182, 235], "rumba": [29, 31, 45, 90, 162, 164, 165, 182, 183, 234, 235, 236], "sd": [29, 31, 45, 90, 156, 162, 164, 165, 176, 182, 235, 236, 243], "spars": [29, 30, 31, 45, 69, 84, 89, 96, 98, 162, 168, 170, 176, 177, 180, 226], "fascicl": [1, 29, 31, 45, 69, 96, 99, 100, 149, 157, 162, 168, 171, 176, 180, 182, 211, 226], "bootstrap": [29, 31, 45, 95, 162, 166, 173, 176, 182, 200, 221, 224], "closest": [29, 31, 45, 63, 154, 170, 172, 173, 176, 177, 180, 226], "basic": [17, 29, 31, 33, 37, 45, 51, 54, 61, 64, 66, 72, 81, 114, 147, 152, 156, 170, 174, 177, 178, 180, 182, 222, 228, 230], "filter": [29, 30, 31, 45, 51, 53, 55, 56, 86, 90, 103, 105, 109, 131, 152, 154, 162, 168, 170, 172, 173, 175, 176, 177, 180, 182, 193, 208, 215, 219, 221, 234], "linear": [1, 8, 29, 31, 45, 56, 68, 74, 75, 83, 84, 88, 89, 93, 99, 100, 101, 103, 106, 107, 144, 148, 150, 154, 157, 162, 164, 165, 168, 170, 171, 172, 173, 177, 180, 182, 183, 187, 194, 200, 209, 211, 219, 223, 224, 226, 231, 235, 236], "biggest": 30, "challeng": [2, 3, 30, 87, 123, 163], "propos": [7, 30, 41, 51, 53, 78, 79, 81, 83, 87, 89, 95, 105, 106, 107, 117, 119, 147, 156, 157, 168, 172, 175, 176, 180, 243], "predict": [30, 56, 68, 70, 83, 85, 91, 158, 168, 170, 175, 176, 180, 183, 217, 218, 219, 225, 226, 227, 230], "signal": [8, 18, 30, 40, 45, 48, 52, 53, 56, 60, 63, 65, 68, 69, 70, 72, 77, 78, 81, 83, 85, 87, 88, 89, 90, 91, 94, 95, 96, 119, 121, 122, 142, 145, 152, 156, 162, 164, 165, 166, 172, 175, 176, 178, 180, 181, 182, 199, 200, 201, 202, 212, 222, 224, 228, 230, 231, 233, 239, 241, 243], "simultan": [30, 83, 90, 99, 105, 162, 176], "pestilli2014": 30, "For": [5, 7, 8, 14, 17, 22, 30, 35, 39, 40, 48, 50, 51, 52, 54, 56, 57, 59, 60, 65, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 105, 106, 108, 112, 113, 114, 115, 119, 121, 122, 123, 126, 128, 131, 136, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 162, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 185, 186, 191, 192, 204, 208, 211, 214, 215, 237, 239, 240, 243, 244], "breviti": [30, 40, 83, 105], "corpu": [2, 3, 30, 33, 34, 35, 36, 37, 38, 41, 63, 67, 68, 70, 71, 72, 79, 84, 87, 90, 91, 95, 105, 126, 128, 131, 136, 171, 176, 177, 180, 182, 212], "callosum": [2, 3, 30, 33, 34, 35, 36, 37, 38, 41, 63, 67, 68, 70, 71, 72, 79, 84, 87, 90, 91, 95, 105, 126, 128, 131, 136, 171, 176, 177, 180, 182, 212], "connect": [2, 3, 19, 24, 30, 35, 36, 37, 41, 44, 67, 91, 100, 105, 126, 128, 129, 134, 158, 171, 173, 180, 182, 215, 219, 234, 244], "superior": [5, 30, 63, 105, 131, 170, 174], "frontal": [30, 105, 131], "fulli": [30, 74, 101, 105, 154, 161, 170, 176, 178], "demonstr": [5, 30, 33, 39, 40, 50, 56, 60, 70, 79, 86, 92, 95, 98, 103, 105, 108, 126, 128, 131, 156, 158], "matric": [30, 45, 99, 105, 127, 129, 144, 168, 170, 171, 176, 180, 219, 222], "intersect": [30, 45, 83, 86, 105, 127, 129, 180], "otherwis": [5, 30, 85, 105, 112, 137, 146, 147, 168, 170, 171, 172, 173, 176, 177, 180, 181, 182, 193, 194, 211, 219], "ll": [7, 8, 17, 19, 21, 22, 30, 35, 37, 67, 73, 90, 91, 105, 123, 131, 134, 137, 146, 176], "path": [5, 30, 37, 44, 45, 59, 61, 65, 73, 74, 80, 81, 97, 98, 101, 105, 123, 127, 129, 137, 138, 141, 146, 152, 153, 155, 156, 157, 158, 168, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 212, 214, 215, 217, 218, 219, 222, 226, 229, 230], "join": [23, 30, 65, 80, 81, 97, 98, 101, 105, 123, 137, 225], "pjoin": [30, 97, 98, 101, 105], "matplotlib": [4, 30, 35, 39, 41, 50, 51, 52, 53, 54, 55, 56, 60, 63, 65, 67, 70, 73, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 88, 90, 94, 95, 98, 103, 108, 117, 121, 122, 123, 126, 128, 130, 131, 142, 146, 180, 181, 219, 222, 224, 226], "pyplot": [30, 35, 39, 41, 50, 51, 52, 53, 54, 55, 56, 60, 63, 65, 67, 70, 73, 75, 76, 77, 80, 81, 83, 85, 86, 87, 88, 90, 94, 95, 98, 103, 108, 117, 121, 122, 123, 126, 128, 130, 131, 171, 180], "plt": [30, 35, 39, 41, 50, 51, 52, 53, 54, 55, 56, 60, 63, 65, 67, 70, 73, 75, 76, 77, 80, 81, 83, 85, 86, 87, 88, 90, 94, 95, 98, 103, 108, 117, 121, 122, 123, 126, 130, 131, 180], "mpl_toolkit": [30, 128], "axes_grid1": [30, 128], "axesgrid": [30, 128], "optim": [1, 2, 3, 6, 30, 45, 54, 55, 56, 57, 59, 75, 81, 83, 84, 85, 86, 87, 91, 97, 98, 100, 103, 105, 106, 107, 117, 147, 152, 157, 162, 164, 165, 168, 172, 173, 174, 175, 176, 177, 180, 182, 183, 185, 194, 217, 222, 226, 228, 229, 233, 234], "opt": [6, 30, 81, 83, 182, 222, 225, 226, 229, 234], "fetch_stanford_track": [30, 105, 183], "colormap": [30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 67, 71, 72, 78, 79, 80, 83, 84, 85, 90, 91, 93, 112, 113, 114, 115, 119, 122, 128, 131, 136, 176, 181, 182, 204, 219, 221, 222, 226, 228], "cmap": [30, 35, 39, 41, 50, 51, 52, 53, 54, 55, 56, 60, 65, 67, 73, 75, 80, 81, 83, 84, 85, 86, 87, 88, 98, 108, 110, 114, 117, 128, 131, 136, 181], "hardi_img": [30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 67, 105, 128, 131, 136], "return_img": [30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 65, 67, 97, 98, 105, 128, 131, 136, 174], "cc_slice": [30, 131], "fetch": [8, 17, 19, 30, 32, 44, 47, 48, 52, 54, 60, 68, 70, 73, 74, 79, 84, 85, 86, 95, 97, 98, 105, 107, 109, 110, 117, 124, 125, 134, 151, 152, 153, 155, 156, 157, 158, 171, 217, 219, 224, 227, 228, 229, 231], "ref": [5, 8, 30, 110, 168, 177, 180, 221], "streamline_tool": [30, 129, 131, 219, 221, 226, 228], "candid": [30, 45, 164, 165, 173, 180], "streamlines_fil": [30, 105], "lr_superiorfrontal_path": [30, 105], "lr": [30, 105, 131, 176], "superiorfront": [30, 105, 131], "candidate_sl_sft": 30, "to_vox": [30, 44, 174, 183], "candidate_sl": 30, "term": [30, 74, 83, 84, 89, 90, 112, 117, 142, 156, 168, 176, 225, 242], "connectom": [2, 3, 30, 148, 149, 162, 171, 180], "group": [5, 22, 30, 60, 81, 95, 99, 100, 131, 154, 162, 168, 177, 179, 182, 211, 230, 232, 234], "anatom": [30, 36, 41, 54, 56, 126, 128, 131, 148, 150, 158, 162, 180, 182, 227, 237], "candidate_streamlines_actor": 30, "streamtub": [30, 39, 40, 100, 105, 112, 113, 114, 115, 125, 130, 134, 135, 217, 221, 222, 225], "line_color": [30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 67, 128, 131, 136], "cc_roi_actor": [30, 131], "contour_from_roi": [30, 128, 131, 136], "opac": [30, 68, 87, 112, 115, 131, 134, 136, 137, 217, 221, 222], "vol_actor": [30, 39, 40, 131], "copi": [7, 8, 12, 16, 18, 19, 30, 39, 40, 41, 75, 95, 98, 105, 131, 134, 137, 141, 161, 168, 171, 174, 176, 177, 180, 182, 221, 226, 229], "canva": [30, 131], "life_candid": 30, "800": [2, 3, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 67, 83, 126, 128, 131, 147, 178], "next": [21, 22, 30, 33, 35, 40, 57, 63, 65, 67, 70, 74, 79, 83, 85, 87, 89, 92, 95, 97, 122, 123, 130, 131, 136, 138, 146, 168, 170, 173, 175, 176, 178, 180, 222], "fiber_model": [30, 180], "alreadi": [8, 17, 18, 22, 30, 35, 39, 61, 67, 83, 84, 103, 107, 109, 110, 113, 124, 146, 148, 168, 170, 171, 174, 175, 177, 179, 180], "do": [2, 5, 6, 7, 10, 11, 12, 15, 17, 18, 20, 21, 30, 35, 37, 44, 45, 53, 56, 59, 60, 63, 67, 69, 71, 72, 76, 84, 85, 86, 87, 92, 95, 97, 99, 106, 107, 110, 112, 113, 114, 126, 128, 131, 142, 143, 144, 146, 147, 148, 152, 157, 160, 163, 168, 170, 171, 175, 176, 177, 180, 182, 204, 219, 221, 222, 226, 228, 240], "them": [5, 8, 18, 22, 30, 44, 56, 57, 65, 76, 77, 80, 83, 89, 94, 95, 97, 99, 105, 106, 107, 109, 110, 114, 124, 126, 128, 130, 131, 134, 136, 142, 153, 168, 170, 176, 177, 178, 180, 181, 225], "world": [23, 30, 50, 59, 61, 79, 108, 130, 134, 135, 142, 168, 174, 177, 180, 181], "scanner": [2, 3, 30, 39, 51, 55, 73, 90, 142, 170, 171, 172, 176, 182, 239, 240], "iso": [30, 81, 88, 176, 183], "mid": [30, 60, 63, 68, 168, 180], "ac": [30, 171], "pc": 30, "would": [8, 9, 22, 30, 60, 72, 84, 91, 95, 98, 100, 101, 107, 123, 134, 137, 142, 150, 151, 157, 170, 176, 180, 182, 203, 204], "inv_affin": 30, "linalg": [30, 39, 40, 88, 134, 135, 176, 231, 235], "inv": [30, 39, 40, 134, 135, 168, 176], "invers": [30, 84, 87, 106, 107, 134, 144, 168, 170, 173, 176, 179, 180, 181, 182, 183, 185, 220, 228], "produc": [5, 30, 71, 73, 74, 81, 84, 85, 86, 87, 89, 97, 121, 142, 168, 170, 171, 173, 176, 177, 180], "fiberfit": [30, 183], "instanc": [8, 30, 56, 73, 74, 75, 79, 86, 88, 95, 106, 107, 112, 113, 117, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180], "store": [5, 30, 76, 86, 87, 91, 99, 135, 136, 142, 144, 168, 170, 174, 176, 178, 180, 181, 221, 224], "explain": [8, 15, 18, 30, 83, 84, 97, 98, 99, 100, 101, 106, 107, 109, 110, 112, 113, 115, 117, 124, 125, 149, 150, 160, 172, 227, 239, 240], "beta": [30, 85, 91, 101, 117, 143, 168, 176, 177, 180, 182, 189], "weight": [2, 3, 30, 40, 45, 52, 53, 54, 56, 58, 60, 62, 65, 68, 70, 73, 74, 79, 81, 83, 84, 86, 87, 88, 89, 90, 91, 95, 100, 111, 116, 123, 126, 142, 152, 153, 156, 164, 165, 170, 171, 172, 176, 178, 179, 180, 182, 183, 191, 199, 200, 202, 239, 240], "design": [30, 45, 56, 57, 73, 87, 91, 134, 142, 161, 164, 165, 168, 170, 172, 174, 175, 176, 180, 223, 229], "matrix": [30, 44, 50, 52, 54, 56, 59, 61, 73, 74, 79, 86, 90, 91, 100, 107, 108, 110, 131, 135, 137, 143, 144, 147, 152, 156, 157, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 189, 190, 191, 192, 217, 218, 219, 222, 223, 226, 228, 229, 230, 231, 232, 234], "m": [1, 2, 3, 5, 8, 18, 30, 32, 36, 39, 41, 45, 52, 59, 63, 72, 74, 75, 77, 80, 81, 87, 88, 89, 90, 91, 94, 100, 105, 106, 107, 114, 117, 123, 130, 131, 147, 148, 149, 150, 155, 157, 158, 164, 165, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 243], "n_": [30, 74, 176], "consid": [12, 17, 18, 30, 41, 44, 56, 72, 73, 80, 83, 91, 131, 157, 168, 170, 172, 173, 174, 175, 176, 177, 180, 181, 182, 185, 194, 244], "th": [30, 70, 100, 106, 107, 168, 176, 177, 180, 181, 243], "column": [30, 88, 89, 91, 100, 131, 137, 144, 168, 170, 172, 176, 177, 178, 180, 181], "arbitrarili": 30, "becaus": [6, 8, 17, 22, 30, 35, 37, 41, 53, 60, 67, 74, 78, 86, 98, 113, 119, 122, 125, 128, 131, 134, 137, 142, 152, 156, 158, 168, 170, 172, 176, 177, 178, 221, 239], "percentag": [30, 97, 121, 122, 170, 177, 178], "node": [30, 123, 170, 175, 177, 179, 180, 183, 235], "cylindr": [30, 178], "compart": [1, 30, 39, 73, 74, 75, 81, 83, 85, 86, 90, 121, 156, 176, 178, 182], "gaussian": [30, 39, 53, 55, 60, 63, 70, 73, 74, 84, 86, 90, 97, 103, 106, 107, 117, 121, 156, 168, 170, 172, 176, 177, 178, 182, 185, 189, 193, 199, 202, 217, 221, 226], "tensor": [1, 30, 45, 63, 65, 69, 70, 72, 75, 78, 80, 81, 84, 85, 86, 88, 89, 90, 91, 96, 119, 121, 122, 142, 145, 147, 154, 162, 164, 165, 166, 170, 171, 175, 176, 178, 180, 182, 199, 200, 217, 219, 221, 222, 224, 225, 226, 227, 228, 230, 231, 233, 235, 239, 240], "fiber_fit": 30, "ey": [30, 44, 97, 98, 105, 131, 134, 168, 176, 180, 227], "hold": [5, 30, 37, 56, 65, 100, 134, 137, 168, 170, 174, 176, 180], "properti": [30, 47, 56, 71, 79, 82, 84, 86, 87, 95, 100, 114, 121, 123, 143, 156, 168, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 217, 243], "assign": [5, 30, 45, 127, 129, 168, 170, 176, 177, 178, 179, 180, 183, 217, 226], "redund": [5, 30, 53, 54, 152], "beta_i": 30, "fig": [30, 41, 51, 52, 53, 55, 60, 63, 70, 73, 77, 80, 83, 87, 88, 90, 94, 98, 103, 117, 123, 126, 128, 130, 176], "ax": [7, 30, 51, 52, 53, 54, 55, 56, 60, 63, 70, 75, 76, 81, 83, 86, 87, 88, 89, 90, 95, 97, 98, 105, 106, 107, 122, 126, 128, 130, 143, 168, 170, 180, 181], "subplot": [30, 35, 39, 41, 50, 51, 52, 53, 54, 55, 56, 60, 63, 65, 67, 70, 73, 75, 76, 81, 83, 86, 87, 88, 90, 95, 98, 103, 108, 123, 126, 130], "hist": [30, 95, 126, 130, 168, 175], "bin": [30, 97, 126, 138, 141, 146, 168, 170, 177, 180, 182, 184], "histtyp": [30, 95, 126, 130], "set_xlabel": [30, 70, 83, 86, 87, 95, 123, 126, 130], "set_ylabel": [30, 70, 83, 86, 87, 95, 123, 126, 130], "savefig": [30, 35, 39, 41, 50, 51, 52, 53, 54, 55, 56, 60, 63, 65, 67, 70, 75, 76, 77, 80, 81, 83, 85, 86, 87, 90, 94, 95, 98, 103, 108, 117, 121, 122, 123, 126, 128, 130, 131], "beta_histogram": 30, "out": [5, 18, 22, 30, 48, 56, 63, 70, 83, 92, 105, 109, 123, 131, 137, 146, 152, 156, 161, 168, 170, 172, 175, 176, 177, 180, 182, 191, 219, 222, 224, 225, 226, 228, 230, 237, 239, 240], "optimized_sl": 30, "row_stack": 30, "life_optim": 30, "presum": 30, "But": [8, 21, 30, 56, 57, 95, 105, 143, 170], "how": [5, 15, 17, 18, 21, 22, 30, 33, 35, 41, 44, 48, 50, 52, 53, 54, 56, 57, 61, 63, 65, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 138, 143, 145, 146, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 162, 168, 170, 171, 172, 174, 175, 176, 177, 178, 180, 182, 222, 226, 227, 228, 229, 230, 231, 233, 234, 235, 239], "doe": [22, 30, 34, 56, 74, 83, 84, 86, 87, 105, 112, 113, 128, 130, 142, 158, 168, 171, 172, 174, 175, 176, 177, 180, 182, 217, 218, 219, 221, 222, 225, 226, 228, 231, 233, 234, 235], "quantifi": [30, 70, 73, 74, 84, 156, 176, 180], "invert": [5, 30, 63, 106, 107, 168, 176, 181, 182, 204, 224], "back": [8, 18, 22, 30, 106, 107, 128, 134, 143, 175, 176, 180, 182, 215, 217, 224, 226, 230, 233], "unseen": 30, "valid": [22, 30, 36, 41, 44, 45, 68, 69, 72, 84, 87, 91, 96, 125, 162, 168, 171, 174, 175, 176, 180, 217, 218, 226, 229, 230, 234], "sphx_glr_examples_built_reconstruction_kfold_xv": [], "without": [8, 22, 30, 37, 48, 51, 52, 53, 56, 65, 77, 81, 87, 88, 89, 90, 95, 98, 130, 146, 168, 170, 171, 175, 176, 177, 180, 182, 222, 224, 228, 229, 237], "s0": [30, 65, 70, 72, 78, 83, 86, 90, 91, 119, 121, 122, 176, 178, 180, 182, 201, 219, 225], "acquisit": [1, 5, 30, 45, 56, 57, 59, 60, 63, 65, 74, 78, 84, 86, 87, 88, 89, 95, 119, 152, 155, 162, 164, 165, 170, 171, 172, 175, 176, 182, 239, 240], "scheme": [1, 5, 30, 45, 53, 57, 78, 79, 87, 119, 164, 165, 168, 172, 175, 176, 180], "baselin": [30, 95], "model_predict": [30, 70], "focu": [23, 30, 83, 95], "root": [22, 30, 87, 146, 176, 177, 240], "squar": [30, 56, 70, 74, 77, 83, 84, 87, 89, 90, 91, 94, 95, 98, 105, 106, 144, 157, 168, 170, 171, 176, 178, 180, 181, 182, 185, 199, 200, 230, 239, 240], "model_error": 30, "model_rms": 30, "sqrt": [30, 53, 54, 56, 74, 75, 76, 77, 79, 82, 87, 88, 94, 114, 144, 170, 172, 176, 178, 180, 243, 244], "against": [30, 78, 90, 119, 168, 170, 171, 175, 176, 177, 180], "compar": [5, 17, 30, 48, 51, 54, 70, 74, 77, 83, 84, 89, 90, 95, 121, 125, 126, 142, 148, 168, 174, 176, 177, 180, 181, 218, 234], "assum": [17, 30, 39, 56, 57, 60, 79, 83, 85, 90, 95, 100, 103, 105, 112, 113, 114, 121, 156, 168, 170, 172, 176, 177, 178, 180, 181, 182, 191, 192, 193, 198, 218, 219], "naiv": [30, 103, 176, 180], "beta_baselin": 30, "pred_weight": 30, "reshap": [30, 173, 174, 175, 176, 177, 178, 180], "spdot": [30, 183], "life_matrix": [30, 180], "vox_coord": [30, 180], "b0s_mask": [30, 65, 68, 70, 105, 170, 176, 183], "mean_pr": 30, "empti": [30, 86, 148, 168, 170, 176, 177, 178, 180, 228, 230, 234, 236], "b0_signal": [30, 180], "demean": 30, "multipli": [30, 85, 92, 121, 130, 168, 176, 177, 182, 198], "mean_sign": [30, 54, 63], "mean_error": 30, "mean_rms": 30, "overal": [30, 84, 130], "altern": [30, 34, 36, 39, 48, 72, 74, 78, 89, 97, 103, 112, 119, 130, 157, 158, 168, 170, 172, 176, 182, 200, 225, 243], "text": [5, 7, 8, 17, 22, 30, 65, 83, 87, 100, 134, 137, 138, 141, 142, 145, 157, 161, 176, 181, 182, 185, 186, 217, 222], "median": [30, 85, 156, 170, 177, 179, 180, 182, 208, 219, 225, 233], "rmse": 30, "2f": [30, 86], "horizontalalign": [30, 83], "verticalalign": [30, 83], "transax": [30, 83], "error_histogram": 30, "vol_model": 30, "ones": [30, 41, 57, 75, 86, 110, 112, 113, 114, 115, 122, 138, 141, 170, 174, 176], "nan": [30, 75, 79, 170, 176, 178, 180, 217, 218, 222, 223, 226, 230, 231], "vol_mean": 30, "vol_improv": 30, "sl_idx": 30, "49": [25, 26, 30, 31, 33, 41, 53, 54, 62, 75, 80, 81, 83, 84, 86, 94, 96, 121, 162, 176, 224, 231], "subplots_adjust": [30, 52, 54, 56, 81, 86, 128], "05": [26, 30, 33, 34, 37, 38, 41, 54, 56, 57, 75, 80, 81, 83, 84, 86, 96, 104, 112, 115, 128, 148, 168, 170, 172, 176, 177, 182, 221, 222, 228, 232, 233, 234], "95": [26, 30, 33, 34, 38, 41, 54, 75, 80, 81, 83, 84, 86, 95, 128, 170, 176, 182, 199, 200, 224], "111": [30, 74, 80, 83, 84, 86, 103, 121, 128, 156, 176, 178, 182, 200, 224], "nrows_ncol": [30, 128], "label_mod": 30, "share_al": 30, "cbar_loc": [30, 128], "cbar_mod": [30, 128], "cbar_siz": [30, 128], "cbar_pad": [30, 128], "matshow": [30, 85, 128], "rot90": [30, 52, 63, 85, 88, 117, 128], "cm": [30, 75, 80, 85, 128], "bone": [30, 85, 128], "hot": [30, 87], "cbar_ax": [30, 128], "colorbar": [30, 52, 75, 77, 80, 83, 86, 87, 90, 94, 103, 128, 222], "rdbu": 30, "lax": [30, 128], "set_xtick": [30, 88, 128], "set_ytick": [30, 88, 128], "spatial_error": 30, "mani": [15, 30, 34, 40, 44, 57, 70, 72, 74, 84, 89, 97, 100, 126, 134, 135, 142, 146, 162, 168, 170, 172, 173, 174, 175, 176, 177, 178, 180, 182, 197, 198, 203, 210, 211, 228, 234, 237], "place": [5, 30, 95, 98, 149, 163, 168, 170, 172, 176, 180, 181, 182, 191, 192, 217, 228, 230], "substanti": [22, 30, 54, 70, 95, 180], "reduct": [1, 30, 45, 99, 127, 129, 143, 176, 177, 182, 209], "larg": [4, 6, 30, 51, 74, 97, 110, 131, 142, 145, 146, 148, 162, 168, 173, 174, 176, 180, 182, 209, 221, 225, 237], "amount": [30, 79, 84, 95, 110, 130, 168, 170, 172, 177, 180, 181, 182, 204], "profil": [30, 45, 52, 60, 101, 109, 124, 125, 127, 129, 154, 162, 168, 171, 172, 176, 177, 179, 181, 182, 183, 185, 188, 209, 217, 220, 240], "sphx_glr_examples_built_fiber_tracking_tracking_probabilist": [], "ipython": [4, 8, 30, 142, 146, 219, 228, 236, 237], "matlab": [30, 142, 170, 172, 227, 231, 242], "head": [7, 8, 17, 30, 51, 55, 60, 95, 226], "franco": [30, 40, 91, 176], "pestilli": [1, 2, 3, 30, 40, 70, 91, 109, 124, 125, 148, 176, 177, 179, 180, 182, 188, 209], "github": [10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 30, 142, 146, 162, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "webpag": 30, "yeatman": [1, 2, 3, 30, 40, 70, 91, 123, 176, 179, 180], "rokem": [1, 2, 3, 5, 21, 23, 30, 40, 45, 70, 81, 91, 109, 124, 125, 147, 148, 149, 150, 164, 165, 176, 177, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "kai": [1, 2, 3, 30, 40, 91, 176, 180], "wandel": [2, 3, 30, 40, 70, 91, 123, 176, 179, 180], "2014": [1, 2, 3, 5, 30, 36, 41, 45, 70, 72, 74, 81, 85, 90, 100, 147, 148, 149, 150, 158, 163, 164, 165, 168, 176, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 226, 229], "statist": [30, 45, 58, 62, 70, 73, 74, 79, 81, 95, 105, 123, 145, 162, 168, 170, 176, 179, 180, 182, 188, 217, 225, 233], "infer": [30, 70, 79, 114, 156, 175, 177, 180, 182, 234], "live": [30, 146, 175, 180, 229], "natur": [30, 51, 60, 74, 158, 160, 168, 170, 174, 175, 176, 177, 180, 239, 240], "1058": [30, 83, 180, 219], "1063": [30, 83, 156, 180, 182, 201, 219], "doi": [2, 3, 30, 38, 39, 40, 52, 53, 54, 56, 71, 73, 74, 75, 81, 83, 85, 86, 88, 89, 90, 91, 134, 147, 148, 153, 156, 168, 170, 171, 172, 173, 175, 176, 180, 182, 191, 192, 201, 203, 223], "1038": [2, 3, 30, 74, 75, 83, 85, 86, 147, 171, 180, 219], "nmeth": [30, 180], "3098": [30, 83, 180], "linear_fascicle_evalu": [30, 31, 223], "cortic": [32, 36, 123], "stonge2018": 32, "mesh": [32, 162, 166, 170, 183, 233], "random_coordinates_from_surfac": [32, 183], "seeds_from_surface_coordin": [32, 183], "load_polydata": [32, 183], "get_polydata_triangl": 32, "get_polydata_vertic": 32, "get_actor_from_polydata": 32, "normals_from_v_f": 32, "brain_lh": 32, "fury_surfac": 32, "polydata": [32, 174, 230], "extract": [32, 40, 45, 50, 53, 56, 73, 74, 75, 81, 86, 90, 91, 108, 110, 111, 112, 114, 116, 125, 127, 129, 148, 149, 168, 170, 171, 172, 173, 175, 176, 179, 180, 181, 182, 183, 195, 206, 213, 218, 219, 222, 224, 225, 226, 228, 231], "triangl": [32, 100, 122, 170, 180, 219], "vt": [32, 180], "surface_actor": 32, "500": [2, 3, 32, 45, 52, 83, 164, 165, 180, 226], "uncom": [32, 135, 136, 137], "600": [2, 3, 32, 71, 72, 75, 79, 80, 84, 85, 86, 90, 93, 95, 109, 110, 112, 113, 114, 115, 124, 135, 137, 147, 176, 177, 182, 217], "reset_camera": [32, 68, 134, 135, 137], "surface_seed1": 32, "choos": [8, 32, 50, 51, 59, 79, 84, 108, 135, 152, 157, 163, 176, 180, 234], "nb_seed": [32, 180], "100000": 32, "nb_triangl": [32, 180], "trilinear": [32, 36, 41, 61, 168, 170, 182, 210], "tri_idx": 32, "trilin_co": 32, "cartesian": [32, 45, 76, 86, 90, 122, 156, 164, 165, 170, 176, 177, 178, 244], "seed_pt": 32, "seed_n": 32, "dot": [32, 87, 88, 89, 114, 168, 170, 173, 176, 180, 224, 234, 235], "blue": [7, 32, 57, 63, 70, 75, 101, 117, 128, 135, 136, 176], "seed_actor": 32, "dot_siz": 32, "green": [22, 32, 52, 57, 63, 83, 87, 101, 105, 106, 107, 110, 136, 149, 150, 176, 181, 228], "outsid": [32, 41, 63, 89, 168, 170, 172, 175, 180, 182, 210, 222, 223, 228, 234], "red": [32, 52, 57, 63, 70, 75, 100, 101, 106, 107, 110, 117, 130, 135, 148, 176, 180, 181, 182, 204], "normal_length": 32, "normal_in": 32, "tile": [32, 87], "newaxi": [32, 228], "normal_out": 32, "normal_in_actor": 32, "normal_out_actor": 32, "visualis": [4, 32, 44, 172, 173, 176, 219, 222, 243], "surface_seed2": 32, "st": [1, 7, 23, 32, 81, 110, 176, 177, 181, 182, 204, 217, 218, 219, 224, 225, 226, 227, 233, 236], "ong": [32, 110, 177, 181, 182, 204, 219, 233, 236], "daducci": [2, 3, 32, 39, 90, 176, 182], "descoteaux": [1, 5, 23, 32, 36, 41, 45, 63, 77, 94, 147, 148, 149, 150, 158, 164, 165, 171, 172, 173, 176, 178, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 222, 224, 225, 226, 227, 243], "169": [32, 80, 83, 84, 219, 225], "524": [32, 75, 80, 226], "539": [32, 75, 80, 83, 86, 217], "2018": [2, 3, 32, 45, 52, 54, 74, 80, 86, 128, 145, 148, 149, 163, 164, 165, 171, 172, 176, 182, 203, 221, 222, 223, 229], "surface_se": [31, 32], "type": [5, 8, 18, 33, 52, 56, 65, 76, 85, 86, 114, 117, 131, 143, 146, 147, 153, 157, 158, 168, 170, 171, 173, 174, 176, 177, 178, 180, 181, 182, 186, 196, 202, 204, 205, 209, 217, 218, 221, 223, 224, 226, 234, 235], "describ": [2, 5, 14, 33, 35, 40, 41, 51, 67, 70, 74, 79, 83, 84, 87, 89, 91, 95, 123, 128, 156, 158, 168, 170, 171, 176, 178, 180], "berman": [33, 176], "et": [1, 2, 3, 23, 33, 41, 45, 47, 53, 57, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 88, 89, 90, 93, 94, 95, 99, 100, 101, 105, 106, 107, 109, 110, 112, 113, 114, 115, 117, 119, 121, 123, 128, 149, 150, 156, 157, 162, 164, 165, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 182, 189, 197, 198, 201, 206, 209, 211, 221, 243], "al": [1, 2, 3, 33, 41, 45, 47, 53, 57, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 88, 89, 90, 93, 94, 95, 99, 100, 101, 105, 106, 107, 109, 110, 112, 113, 114, 115, 117, 119, 121, 123, 128, 149, 150, 156, 157, 162, 164, 165, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 182, 189, 197, 198, 201, 206, 209, 211, 221, 243], "2008": [33, 45, 55, 56, 70, 76, 77, 80, 83, 93, 94, 146, 152, 164, 165, 168, 172, 176, 178, 180, 182, 193, 219, 222, 229], "berman2008": 33, "nd": [33, 86, 173, 176, 177, 180, 219], "amirbekian": [1, 5, 21, 23, 33, 126, 147, 148, 149, 150, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 224, 225, 226, 227], "phd": [33, 35, 67, 82, 147, 158, 176, 178, 182, 214], "thesi": [33, 35, 52, 54, 67, 74, 82, 86, 147, 158, 172, 176, 178, 182, 203, 214], "sphx_glr_examples_built_quick_start_tracking_introduction_eudx": [], "necessari": [22, 33, 39, 40, 44, 50, 51, 53, 54, 56, 60, 71, 74, 76, 77, 79, 80, 82, 84, 87, 89, 93, 94, 99, 108, 109, 110, 112, 113, 114, 115, 117, 124, 125, 130, 146, 168, 170, 171, 176, 180, 182, 231], "execut": [5, 28, 31, 33, 40, 43, 47, 48, 49, 59, 62, 66, 96, 104, 106, 107, 116, 120, 128, 129, 133, 138, 140, 141, 142, 146, 152, 153, 155, 156, 168, 170, 172, 175, 176, 177, 182, 226], "small_spher": [33, 37, 39, 183], "bootdirectiongett": [33, 183], "closestpeakdirectiongett": [33, 183], "stateful_tractogram": [33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 67, 101, 105, 109, 131, 183], "has_furi": [33, 34, 35, 36, 37, 38, 40, 41, 67, 105], "seed_mask": [33, 34, 35, 36, 37, 38, 39, 41, 67, 126, 128, 136, 147], "white_matt": [33, 34, 35, 37, 38, 39, 40, 41, 67, 126, 128, 131, 136], "serv": [33, 109, 125, 138, 176], "our": [14, 17, 19, 21, 22, 24, 33, 47, 54, 59, 63, 71, 72, 75, 79, 80, 83, 85, 87, 90, 92, 95, 97, 99, 100, 106, 112, 113, 114, 126, 128, 131, 134, 138, 141, 142, 145, 146, 149, 150, 159, 162, 168, 170, 171, 176, 180, 220, 222, 231, 233], "up": [6, 7, 12, 15, 16, 18, 22, 33, 37, 40, 45, 60, 74, 87, 89, 90, 92, 99, 105, 109, 126, 128, 130, 135, 136, 137, 142, 143, 146, 160, 162, 164, 165, 168, 170, 172, 173, 174, 175, 176, 177, 180, 182, 183, 208, 217, 218, 219, 222, 224, 226, 227, 228, 229, 230, 234, 239, 240], "boot_dg_csd": 33, "from_data": [33, 173, 183], "boot_streamline_gener": 33, "sft": [33, 34, 35, 36, 37, 38, 39, 40, 41, 67, 105, 131, 174, 229, 230, 235, 236], "rasmm": [33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 67, 101, 105, 109, 174, 177, 183], "tractogram_bootstrap_dg": 33, "repeat": [2, 3, 11, 33, 35, 37, 67, 72, 89, 90, 97, 234], "keep": [6, 8, 18, 33, 35, 41, 44, 67, 82, 85, 90, 115, 131, 168, 176, 177, 180, 182, 209, 211, 217, 222, 234], "NOT": [33, 170, 177, 182, 219, 228], "clip": [33, 37, 38, 71, 74, 79, 90, 172, 173, 175, 176, 182, 194, 222, 223, 230], "min": [33, 37, 38, 63, 65, 87, 90, 100, 110, 126, 135, 137, 147, 168, 170, 173, 175, 176, 177, 180, 183, 234], "peak_dg": 33, "from_pmf": [33, 37, 38, 39, 173, 183], "peak_streamline_gener": 33, "closest_peak_dg_csd": 33, "tractogram_closest_peak_dg": 33, "q": [1, 33, 45, 46, 49, 56, 63, 69, 73, 76, 77, 84, 85, 93, 94, 96, 109, 124, 125, 142, 147, 148, 152, 162, 164, 165, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 188, 197, 204, 209, 228, 232, 234, 240, 243], "ball": [33, 45, 46, 49, 69, 76, 85, 96, 147, 164, 165, 172, 173, 176, 178, 182, 197, 243], "residu": [33, 51, 52, 53, 54, 56, 68, 162, 168, 173, 176, 234], "vol": [1, 2, 3, 5, 33, 51, 55, 57, 72, 76, 77, 78, 82, 85, 94, 99, 112, 113, 114, 115, 119, 123, 147, 170, 172, 176, 177, 178, 180], "39": [26, 33, 41, 45, 47, 49, 54, 72, 75, 79, 80, 81, 83, 84, 86, 90, 91, 94, 95, 104, 106, 129, 164, 165, 170, 176, 220, 224], "tracking_bootstrap_peak": [31, 33], "trajectori": [34, 36, 37, 45, 69, 73, 96, 123, 158, 162, 171, 176, 180, 234], "pathwai": [34, 35, 37, 67, 109, 124, 125, 126, 148, 158, 177, 179, 180, 182, 188, 209], "within": [6, 34, 37, 45, 56, 71, 72, 79, 85, 110, 114, 123, 126, 147, 156, 158, 164, 165, 168, 170, 171, 172, 174, 176, 177, 178, 180], "constraint": [34, 39, 45, 69, 72, 74, 84, 85, 91, 145, 158, 162, 170, 171, 176, 226, 235, 236], "max": [23, 34, 45, 59, 63, 65, 68, 71, 79, 87, 97, 98, 105, 110, 126, 135, 137, 147, 158, 164, 165, 170, 172, 173, 175, 176, 177, 180, 183, 224, 226, 239], "word": [5, 7, 8, 34, 72, 87, 112, 158, 168, 176, 179, 181, 217, 223], "highest": [34, 63, 148, 158, 168, 170, 173, 176, 177, 222], "oppos": [34, 83, 158, 168, 176, 180], "draw": [34, 73, 97, 103, 106, 158, 180, 181], "therefor": [34, 52, 56, 60, 74, 76, 77, 79, 81, 82, 84, 99, 100, 134, 135, 137, 142, 144, 158, 168, 170, 172, 176, 243], "equival": [34, 79, 143, 146, 158, 168, 170, 176, 178], "alwai": [21, 34, 44, 60, 63, 72, 74, 79, 84, 86, 87, 91, 142, 158, 172, 173, 176, 178, 180, 224, 230, 239], "unlik": [34, 37, 158, 176, 180], "entir": [34, 40, 51, 53, 54, 56, 83, 84, 87, 109, 135, 146, 158, 168, 174, 176, 177, 180, 182, 229], "begin": [34, 35, 36, 37, 40, 41, 57, 67, 90, 112, 114, 122, 131, 143, 156, 158, 176, 182, 230, 238, 239, 240, 243], "deterministicmaximumdirectiongett": [34, 41, 183], "represent": [2, 3, 8, 17, 34, 35, 37, 67, 73, 84, 87, 89, 95, 100, 115, 126, 131, 144, 158, 168, 170, 171, 174, 176, 180, 222, 243], "detmax_dg": 34, "streamline_gener": [34, 37, 38, 39, 40, 41, 131], "tractogram_deterministic_dg": 34, "tracking_determinist": [31, 34], "approach": [35, 37, 56, 60, 67, 68, 75, 83, 84, 87, 90, 95, 103, 105, 106, 107, 158, 168, 172, 176, 177, 179, 182, 200], "idea": [21, 35, 54, 56, 67, 72, 83, 98, 106, 142, 152, 156, 158, 160, 168, 176, 180, 226, 233, 238], "direction": [35, 67, 87, 158], "tract": [35, 45, 63, 67, 75, 79, 101, 109, 110, 127, 129, 148, 150, 158, 168, 173, 176, 177, 179, 181, 182, 189, 204, 228, 230, 236], "build": [20, 35, 37, 38, 56, 67, 85, 97, 106, 107, 138, 141, 147, 158, 160, 168, 175, 176, 180, 181, 182, 183, 184, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232], "wide": [35, 67, 114, 158, 180, 239], "simpl": [5, 18, 21, 35, 45, 60, 67, 72, 75, 76, 79, 81, 83, 90, 93, 99, 100, 112, 113, 114, 130, 132, 133, 136, 146, 158, 162, 168, 170, 175, 176, 177, 180, 181, 182, 226, 231, 237], "three": [8, 35, 45, 65, 67, 79, 83, 84, 85, 86, 87, 90, 93, 97, 98, 103, 106, 114, 117, 131, 142, 143, 144, 156, 158, 164, 165, 168, 170, 171, 172, 174, 176, 178, 180, 181], "thing": [12, 15, 18, 22, 35, 67, 87, 95, 97, 98, 131, 138, 141, 146, 158, 170, 172, 176, 180, 217, 226, 227], "must": [5, 35, 36, 37, 39, 44, 60, 67, 68, 72, 73, 77, 84, 85, 94, 97, 105, 112, 113, 148, 158, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 185, 202], "abov": [5, 7, 8, 17, 22, 35, 41, 45, 47, 48, 51, 52, 54, 56, 57, 67, 72, 73, 74, 79, 81, 82, 83, 85, 86, 89, 98, 117, 121, 130, 131, 137, 143, 146, 148, 162, 164, 165, 168, 170, 171, 174, 175, 176, 177, 178, 180, 182, 239, 243], "internet": [35, 67, 91], "water": [1, 35, 45, 67, 69, 74, 75, 86, 89, 96, 121, 126, 142, 156, 162, 171, 176, 178, 182, 199, 219, 228, 231, 235], "qualiti": [35, 51, 52, 63, 67, 80, 112, 125, 157, 168, 171, 173, 174, 176, 177, 181, 182, 184, 222, 223, 228], "basi": [35, 37, 67, 80, 84, 87, 92, 93, 156, 158, 162, 170, 171, 172, 173, 175, 176, 182, 183, 202, 222, 224, 225, 228, 230, 231, 233, 243], "peak_slic": [35, 67, 72, 90, 91, 222], "peak_dir": [35, 67, 72, 90, 91, 174], "peak_valu": [35, 67, 71, 72, 82, 90, 91, 173, 176, 183, 226], "csa_direction_field": [35, 67], "ve": [8, 17, 18, 19, 35, 67, 73, 123, 131, 146, 170, 180, 240], "further": [22, 35, 39, 40, 63, 67, 83, 84, 95, 109, 168, 176, 177, 180], "again": [5, 7, 8, 22, 35, 67, 87, 90, 97, 143, 170, 172, 176, 177, 219, 221, 224, 226, 244], "sli": [35, 39, 50, 53, 54, 56, 67, 108], "set_axis_off": [35, 39, 50, 51, 53, 60, 65, 67, 76, 77, 80, 94, 108], "imshow": [35, 39, 41, 50, 51, 52, 53, 54, 55, 56, 60, 63, 65, 67, 73, 75, 76, 77, 79, 80, 81, 83, 86, 87, 88, 90, 94, 98, 103, 108, 117, 131, 181], "grai": [2, 3, 35, 36, 39, 41, 50, 51, 52, 53, 54, 55, 56, 60, 65, 67, 73, 75, 80, 81, 83, 85, 86, 88, 98, 108, 117, 131, 158, 168, 176, 177, 180, 181], "gfa_tracking_mask": [35, 67], "deriv": [35, 36, 52, 67, 74, 75, 80, 81, 89, 95, 142, 148, 153, 156, 168, 170, 171, 172, 176, 177, 178, 180, 181, 182, 185, 199, 244], "specifi": [35, 44, 52, 67, 83, 85, 89, 90, 97, 98, 105, 131, 138, 142, 146, 148, 151, 152, 153, 155, 156, 157, 158, 168, 170, 171, 172, 175, 176, 177, 178, 180, 181, 182, 187, 188, 193, 194, 199, 200, 201, 202, 208, 219, 228, 239, 244], "grid": [35, 44, 45, 47, 67, 71, 72, 84, 97, 105, 107, 135, 137, 164, 165, 168, 176, 178, 180, 181, 219, 226, 234], "per": [5, 35, 40, 45, 67, 80, 85, 92, 99, 100, 101, 109, 131, 135, 148, 149, 150, 158, 164, 165, 168, 171, 172, 175, 176, 177, 179, 180, 181, 182, 185, 194, 200, 214, 215, 222, 225, 226, 239, 241], "give": [7, 8, 11, 15, 19, 21, 22, 35, 44, 51, 56, 60, 63, 67, 71, 72, 83, 89, 114, 125, 142, 152, 170, 172, 173, 176, 180, 182, 194, 218, 219, 220, 228, 234], "final": [8, 18, 22, 35, 40, 53, 65, 67, 72, 74, 78, 79, 83, 84, 86, 87, 88, 90, 91, 97, 98, 99, 105, 106, 115, 119, 121, 130, 131, 134, 145, 146, 168, 170, 172, 176, 177, 182], "bring": [8, 35, 67, 105, 107, 134, 157, 168, 231], "togeth": [35, 53, 67, 78, 84, 85, 87, 98, 100, 119, 131, 134, 138, 143, 168, 170, 174, 176, 177, 180, 182, 228, 231], "garyfallidis12": [35, 67, 99, 112, 113, 114, 115, 123, 147, 158, 177, 180], "what": [8, 19, 22, 24, 35, 60, 63, 65, 67, 84, 87, 90, 95, 97, 101, 103, 106, 109, 112, 113, 130, 134, 137, 142, 145, 147, 148, 160, 168, 174, 176, 177, 178, 182], "happen": [35, 67, 84, 103, 135, 136, 146, 170, 182, 228], "prepar": [35, 38, 67, 68, 79, 83, 97, 168, 170, 175, 176], "streamlines_actor": [35, 39, 40, 67, 128, 136], "static": [35, 67, 97, 98, 100, 101, 105, 106, 107, 149, 150, 157, 168, 170, 174, 176, 181, 182, 184, 185, 186, 189, 211], "Or": [7, 8, 35, 61, 65, 67, 72, 142, 176], "tractogram_eudx": [35, 67], "so": [5, 6, 8, 17, 18, 19, 22, 35, 37, 39, 40, 44, 56, 57, 67, 70, 74, 76, 79, 83, 84, 85, 87, 90, 92, 95, 97, 100, 101, 105, 106, 107, 109, 112, 113, 114, 115, 122, 123, 126, 130, 131, 134, 135, 137, 143, 146, 147, 153, 156, 157, 162, 168, 170, 171, 172, 174, 175, 176, 177, 180, 181, 182, 197, 218, 224, 225, 226, 239, 244], "call": [5, 7, 8, 22, 35, 44, 48, 54, 55, 57, 60, 65, 67, 72, 73, 74, 75, 76, 78, 79, 81, 83, 85, 86, 87, 89, 92, 95, 97, 100, 101, 106, 117, 119, 122, 123, 131, 135, 138, 141, 144, 146, 147, 156, 157, 158, 168, 170, 171, 172, 175, 176, 177, 178, 180, 182, 183, 219, 222, 223, 224, 234, 244], "softwar": [1, 5, 35, 40, 44, 67, 105, 106, 107, 134, 157, 160, 161, 170, 171, 172, 176, 177, 182, 200, 239, 240, 243], "toward": [35, 36, 41, 67, 84, 97, 107, 143, 147, 158, 168, 170, 176, 180, 181, 182, 244], "accur": [35, 39, 67, 68, 74, 79, 90, 97, 147, 156, 158, 170, 172, 175, 176, 180, 182, 191, 192, 235], "univers": [2, 3, 23, 35, 67, 86, 145, 147, 158, 171, 176, 178, 180, 182, 214], "cambridg": [23, 35, 67, 86, 147, 158, 170, 176, 182, 214], "2012": [1, 35, 36, 41, 67, 74, 75, 82, 99, 100, 112, 113, 114, 115, 123, 146, 147, 158, 176, 177, 178, 179, 180, 182, 214, 229], "tracking_introduction_eudx_1": [31, 35], "pft": [36, 154, 162, 222, 223], "girard2014": [36, 41, 158], "pve": [2, 3, 36, 41, 85, 117, 158, 177, 180, 182, 215, 227], "incorrectli": [36, 158], "corticospin": [36, 41, 63, 85, 109, 110, 117, 148, 158, 176, 180], "fluid": [2, 3, 36, 41, 81, 83, 85, 90, 117, 158, 170, 176, 180, 182, 215], "reli": [5, 36, 56, 99, 158, 176, 180, 219, 226], "correctli": [8, 36, 73, 217, 221, 222, 226, 233], "kept": [36, 72, 126, 158, 168, 170, 173, 176, 180], "extend": [5, 15, 36, 73, 85, 134, 138, 141, 147, 158, 170, 176, 177, 181, 182, 220, 226, 228, 234], "continu": [36, 41, 45, 69, 96, 147, 158, 162, 176, 180, 219, 225], "until": [22, 36, 41, 72, 83, 90, 158, 168, 176, 177], "whenev": [36, 41, 176], "classifi": [6, 36, 41, 54, 85, 117, 162, 177, 183, 218, 219, 227, 228, 231], "invalidpoint": [36, 41, 180, 183], "sphx_glr_examples_built_fiber_tracking_tracking_stopping_criterion": [], "f_pve_csf": [36, 41], "f_pve_gm": [36, 41], "f_pve_wm": [36, 41], "stanford_pve_map": [36, 41, 158], "pve_csf_data": [36, 41], "pve_gm_data": [36, 41], "pve_wm_data": [36, 41], "_": [36, 41, 54, 68, 73, 78, 86, 88, 89, 90, 98, 100, 101, 105, 117, 119, 125, 170, 171, 172, 176, 178, 180, 182, 239, 240], "return_voxs": [36, 61, 76, 82, 168, 174], "dg": [36, 41, 180, 222], "smith2012": [36, 41], "both": [5, 36, 50, 51, 52, 53, 54, 57, 60, 72, 73, 74, 81, 83, 84, 85, 86, 87, 89, 90, 91, 98, 99, 100, 101, 105, 108, 110, 112, 123, 130, 134, 136, 163, 168, 170, 171, 175, 176, 180, 181, 182, 202, 204, 226, 228, 243], "determin": [36, 41, 63, 72, 83, 84, 85, 117, 131, 144, 168, 172, 173, 177, 178, 180, 182, 183, 194, 198, 243], "reach": [17, 36, 41, 72, 81, 90, 99, 110, 117, 131, 143, 158, 172, 176, 180, 182, 215], "invalid": [36, 41, 44, 76, 83, 86, 88, 90, 168, 170, 174, 180, 217, 221, 234], "conjunct": 36, "cmc_criterion": 36, "from_pv": [36, 180, 183], "average_voxel_s": [36, 180], "pft_back_tracking_dist": [36, 180], "distanc": [36, 99, 100, 101, 109, 110, 113, 114, 115, 128, 130, 142, 168, 170, 172, 173, 174, 176, 177, 179, 181, 182, 183, 189, 204, 209, 215, 229, 233, 237, 244], "backtrack": [36, 41, 180], "wm": [2, 3, 36, 52, 72, 74, 85, 117, 158, 176, 182, 218, 235], "csf": [2, 3, 36, 60, 81, 83, 84, 85, 90, 117, 176, 182, 221], "pft_front_tracking_dist": [36, 180], "event": [36, 134, 170, 177, 181, 182, 219, 222], "particle_count": [36, 180], "min_wm_pve_before_stop": [36, 180, 182, 215], "control": [5, 8, 36, 41, 80, 83, 91, 101, 142, 148, 150, 158, 168, 170, 171, 175, 176, 177, 179, 180, 182, 228], "gm": [2, 3, 36, 52, 85, 90, 117, 170, 176, 182], "wm_pve": 36, "long": [5, 36, 44, 82, 147, 168, 175, 178, 180, 182, 219, 229], "particularlyuseful": 36, "interfac": [22, 24, 36, 41, 83, 97, 134, 141, 156, 158, 162, 168, 170, 172, 176, 178, 182, 194, 219, 225, 229, 233, 234], "sub": [36, 40, 45, 52, 70, 80, 81, 97, 138, 164, 165, 168, 170, 174, 175, 176, 177, 182, 222], "exit": [36, 41, 131, 170, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 222], "deep": [36, 68, 74, 145, 162, 175, 182, 195, 230, 234], "pft_streamline_gen": 36, "max_cross": [36, 180], "maxlen": [36, 180], "1000": [2, 3, 36, 40, 44, 45, 52, 54, 57, 59, 65, 68, 76, 80, 85, 86, 91, 97, 98, 105, 122, 147, 164, 165, 168, 170, 171, 175, 176, 178, 181, 182, 219, 239, 240], "return_al": [36, 41, 180], "pft_streamline_gener": 36, "tractogram_pft": 36, "prob_streamline_gener": 36, "tractogram_probabilistic_cmc": 36, "whittingstal": [36, 41, 158, 171, 180, 182, 215], "derich": [2, 3, 36, 41, 63, 158, 172, 173, 176, 178, 180, 182, 193, 215, 243], "bias": [36, 41, 74, 99, 158, 170, 180, 182, 215], "98": [26, 33, 34, 36, 37, 41, 54, 75, 80, 83, 84, 86, 94, 135, 158, 162, 180, 181, 182, 215, 224], "266": [36, 41, 80, 83, 84, 158, 180, 182, 215, 225], "278": [36, 41, 83, 84, 158, 180, 182, 215, 226], "smith": [1, 5, 21, 23, 36, 41, 59, 117, 147, 148, 149, 150, 155, 172, 176, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 224, 243], "tournier": [36, 41, 45, 72, 85, 164, 165, 172, 173, 175, 176, 180, 182, 198, 222, 243], "calamant": [36, 41, 72, 85, 172, 173, 176, 180, 243], "connelli": [36, 41, 72, 85, 172, 173, 176, 180, 243], "63": [26, 33, 34, 36, 37, 38, 41, 52, 53, 54, 75, 80, 81, 83, 84, 86, 99, 117, 180, 224], "1924": [36, 41, 83, 180, 228], "1938": [36, 41, 80, 83, 180, 230], "tracking_pft": [31, 36], "mr": [1, 37, 51, 52, 53, 55, 57, 63, 79, 83, 90, 93, 117, 142, 152, 153, 155, 156, 158, 160, 170, 171, 172, 176, 182, 201, 224, 239], "possibl": [8, 15, 22, 37, 44, 50, 57, 71, 72, 74, 76, 77, 82, 84, 85, 93, 94, 97, 108, 115, 137, 142, 143, 158, 168, 170, 171, 172, 173, 176, 177, 180, 182, 185, 197, 198, 199, 200, 201, 202, 203, 210, 211, 217, 221, 228, 231, 233, 234, 240], "howev": [8, 37, 39, 44, 47, 54, 59, 73, 74, 77, 81, 84, 85, 86, 87, 89, 90, 112, 130, 131, 134, 137, 142, 146, 158, 170, 172, 175, 176, 177, 182, 191, 192, 243], "few": [4, 8, 37, 47, 95, 134, 146, 147, 180, 218, 219, 223, 224, 225, 226, 227, 237], "latter": [37, 75, 156], "cannot": [37, 70, 81, 86, 90, 146, 170, 172, 175, 180, 217, 223, 226, 228, 234, 235, 236], "neg": [37, 39, 44, 52, 56, 71, 72, 74, 84, 85, 86, 128, 168, 170, 171, 172, 173, 174, 176, 177, 180, 182, 194, 198, 217, 219, 225, 230, 232, 243], "ideal": [37, 45, 56, 74, 164, 165, 176, 243], "strictli": [37, 39, 125, 176, 177], "failur": [6, 37, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 230, 231, 234], "sometim": [8, 37, 47, 56, 130, 131, 142, 146, 228], "tractogram_probabilistic_dg_pmf": 37, "disadvantag": 37, "tend": [37, 56, 84], "lot": [22, 37, 60, 84, 131, 142, 146, 175, 176], "ram": [37, 90, 176], "uniqu": [17, 37, 68, 73, 85, 88, 89, 101, 110, 168, 170, 172, 173, 174, 175, 176, 177, 180, 231, 234], "81": [25, 26, 37, 41, 52, 54, 55, 71, 75, 79, 80, 83, 84, 86, 103, 115, 168, 171, 176, 224, 229], "106": [37, 55, 71, 79, 80, 83, 84, 103, 113, 116, 224], "76": [26, 37, 41, 52, 54, 55, 70, 71, 75, 79, 80, 83, 84, 86, 103, 135, 153, 220, 224], "181": [37, 83, 84, 115, 225, 226], "sh": [37, 85, 92, 162, 172, 173, 174, 175, 176, 182, 214, 222, 228, 230, 231, 234, 235, 243], "362": [37, 40, 80, 84, 88, 89, 91, 171, 172, 176, 226], "worri": [8, 37, 148], "tractogram_probabilistic_dg_sh": 37, "Not": [37, 217], "attribut": [37, 44, 71, 72, 73, 74, 79, 83, 88, 115, 173, 174, 175, 181, 219, 221, 222, 229, 230, 232, 236], "return_sh": [37, 48, 91, 173], "fod_coeff": 37, "tractogram_probabilistic_dg_sh_pfm": 37, "tracking_probabilist": [31, 37], "ptt": [38, 145, 171, 173, 235, 236], "aydogan2021": 38, "pttdirectiongett": [38, 183], "ptt_dg": 38, "probe_length": [38, 173], "direction_gett": [38, 183], "tractogram_ptt_dg_pmf": 38, "aydogan": [38, 173, 236], "db": [38, 173], "shi": [38, 173], "ieee": [1, 2, 3, 38, 55, 56, 77, 82, 90, 94, 97, 98, 117, 152, 163, 168, 170, 172, 173, 176, 177, 180], "tran": [1, 38, 170, 172, 173, 177, 182, 184], "med": [1, 38, 52, 59, 73, 81, 93, 153, 155, 168, 170, 172, 173, 176, 177, 182, 199, 203, 243], "2021": [1, 38, 45, 73, 80, 83, 89, 134, 163, 164, 165, 171, 173, 176, 229, 232, 233, 234], "feb": [2, 3, 38, 173], "635": [38, 75, 83, 86, 173, 217], "647": [38, 80, 83, 173, 222], "1109": [38, 80, 83, 90, 173, 176, 219], "tmi": [38, 173, 176], "2020": [38, 56, 73, 74, 83, 84, 101, 109, 124, 125, 148, 163, 170, 171, 172, 173, 175, 176, 177, 179, 182, 188, 194, 209, 229, 230, 231, 232], "3034038": [38, 173], "epub": [38, 173], "pmid": [38, 170, 173], "33104507": [38, 173], "pmcid": [38, 170, 173], "pmc7931442": [38, 173], "tracking_ptt": [31, 38], "canalesrodriguez2015": [39, 90], "richardson": [39, 78, 90, 119, 176], "luci": [39, 78, 90, 119, 176], "noncentr": [39, 90, 176, 182], "chi": [39, 60, 90, 170, 176, 182], "reflect": [39, 90, 126, 131, 144, 168, 176, 182, 210], "sphx_glr_examples_built_reconstruction_reconst_rumba": [], "transform_streamlin": [39, 40, 134, 135, 183, 235, 236], "rumbasdmodel": [39, 90, 183], "t1_aff": [39, 40], "global": [1, 2, 3, 7, 18, 39, 59, 84, 90, 98, 109, 123, 134, 149, 155, 168, 176, 177, 178, 182, 206, 209, 211, 226], "voxelwis": [39, 90, 176, 182, 219], "tv": [39, 90, 172, 176, 182, 203], "regular": [2, 3, 5, 39, 84, 87, 90, 91, 93, 101, 106, 150, 156, 162, 168, 170, 171, 172, 173, 176, 178, 181, 182, 189, 194, 202, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 243], "use_tv": [39, 90, 176, 182], "turn": [5, 8, 39, 77, 142, 143, 152, 174, 176, 180], "off": [9, 17, 39, 54, 63, 81, 87, 101, 103, 105, 117, 150, 168, 182, 189, 219], "effici": [1, 39, 90, 99, 100, 137, 146, 149, 157, 162, 168, 170, 171, 180, 182, 211, 231], "although": [39, 52, 73, 74, 84, 86, 87, 100, 153, 175, 176, 180], "usag": [39, 76, 147, 162, 175, 176, 182, 216, 226], "wm_respons": [39, 90, 176], "n_iter": [39, 90, 176, 182], "200": [2, 3, 39, 45, 52, 56, 72, 80, 83, 84, 87, 90, 106, 115, 121, 134, 147, 164, 165, 171, 176, 182, 219, 234, 236], "rumba_fit": [39, 90], "fodf": [39, 68, 80, 85, 91, 156, 175, 176, 182, 217], "f_wm": [39, 90, 176, 183], "establish": [39, 95, 168], "common": [5, 7, 15, 39, 44, 59, 61, 71, 74, 83, 84, 86, 90, 95, 99, 105, 109, 138, 141, 148, 155, 168, 170, 171, 174, 176, 179, 180, 182, 224], "caution": [39, 87], "separ": [5, 8, 39, 56, 72, 73, 83, 85, 87, 117, 141, 146, 156, 168, 170, 171, 174, 175, 176, 177, 178, 181, 182, 201, 212, 224, 234], "isotrop": [39, 45, 61, 81, 84, 85, 90, 105, 130, 142, 164, 165, 168, 170, 173, 177, 178, 180, 182, 183, 184, 185, 230, 237], "bia": [39, 53, 84, 117, 170, 172, 176, 180, 217, 223, 228], "advantag": [39, 56, 70, 82, 86, 91, 100, 123, 146, 168], "featur": [2, 3, 5, 6, 7, 12, 17, 18, 39, 45, 51, 73, 98, 111, 113, 115, 116, 121, 123, 145, 162, 163, 170, 172, 174, 175, 176, 178, 182, 183, 200, 217, 219, 232, 235, 236], "f_wm_tracking_mask": 39, "adher": 39, "manipul": [39, 44, 141, 166, 174], "list": [2, 8, 18, 21, 22, 39, 40, 87, 97, 99, 105, 110, 112, 113, 114, 126, 130, 135, 136, 138, 141, 146, 151, 156, 159, 168, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 196, 199, 200, 201, 202, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238], "tractogram_probabilistic_rumba": 39, "canal": [39, 45, 78, 90, 119, 164, 165, 176, 182, 224], "rodr\u00edguez": [39, 45, 90, 164, 165, 176, 182], "sotiropoulo": [39, 45, 90, 164, 165, 176, 182], "caruy": [23, 39, 90, 176, 182, 225], "aja": [39, 90, 176, 182], "fern\u00e1ndez": [39, 90, 176, 182], "radua": [39, 90, 176, 182], "mendizab": [39, 90, 176, 182], "iturria": [39, 90, 176, 182], "medina": [39, 90, 176, 182], "meli": [39, 90, 176, 182], "garc\u00eda": [39, 90, 176, 182], "l": [1, 2, 3, 39, 53, 54, 56, 70, 73, 74, 75, 80, 81, 87, 88, 90, 95, 105, 106, 107, 109, 124, 125, 147, 148, 157, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 188, 191, 199, 200, 209, 226, 243], "alem\u00e1n": [39, 90, 176, 182], "g\u00f3mez": [39, 90, 176, 182], "thiran": [39, 90, 176, 182], "sarr\u00f3": [39, 90, 176, 182], "pomarol": [39, 90, 176, 182], "clotet": [39, 90, 176, 182], "salvador": [39, 90, 176, 182], "multichannel": [39, 90, 176, 182], "ONE": [2, 3, 39, 40, 53, 54, 56, 90, 91, 172, 175, 176, 182, 191], "e0138910": [39, 90, 176, 182], "org": [1, 2, 3, 22, 39, 52, 54, 74, 84, 86, 88, 89, 90, 114, 134, 142, 143, 148, 149, 150, 153, 159, 166, 168, 170, 171, 172, 174, 175, 176, 177, 180, 182, 191, 203, 225, 231], "1371": [2, 3, 39, 40, 53, 54, 56, 83, 90, 91, 172, 175, 176, 182, 191, 221], "pone": [2, 3, 39, 40, 53, 54, 56, 90, 91, 172, 175, 176, 182, 191], "0138910": [39, 90, 176, 182], "tracking_rumba": [31, 39], "sfm": [40, 45, 91, 164, 165, 183, 218, 219, 221, 227, 230, 234], "rokem2015": [40, 91, 176], "sphx_glr_examples_built_reconstruction_reconst_sfm": [], "select_random_set_of_streamlin": [40, 44, 125, 183], "freesurf": [40, 131, 171], "canon": [40, 172, 176, 180], "deconvolv": [40, 72, 78, 119, 156, 176], "symmetr": [40, 45, 80, 91, 92, 100, 102, 104, 105, 114, 154, 162, 168, 170, 172, 174, 175, 176, 180, 182, 209, 222, 223, 226, 230, 239, 240, 243], "sf_model": [40, 91], "sparsefasciclemodel": [40, 91, 183], "l1_ratio": [40, 91, 176], "alpha": [40, 75, 83, 87, 91, 101, 143, 150, 168, 170, 171, 172, 176, 180, 182, 189, 194], "001": [26, 28, 40, 72, 83, 85, 90, 91, 101, 138, 140, 168, 170, 174, 176, 180, 182], "pnm": 40, "suffici": [40, 45, 47, 90, 164, 165, 176, 226], "high": [2, 3, 40, 45, 51, 52, 56, 63, 72, 74, 80, 81, 83, 84, 85, 92, 95, 112, 122, 142, 164, 165, 168, 172, 175, 176, 177, 178, 180, 182, 189, 221], "sake": [40, 54, 85], "compon": [40, 51, 53, 54, 73, 74, 81, 83, 84, 90, 121, 143, 152, 168, 170, 172, 174, 176, 178, 180, 182, 191, 192, 219, 221, 222, 228], "construct": [5, 40, 68, 90, 97, 168, 170, 171, 172, 176, 178, 180, 228], "subject": [2, 3, 40, 59, 79, 81, 87, 89, 95, 100, 101, 109, 123, 134, 142, 146, 148, 149, 152, 155, 159, 170, 171, 175, 176, 177, 179, 182, 187, 188, 238], "anatomi": [40, 44, 109, 126, 128, 145, 162, 182, 189, 204], "speed": [4, 40, 87, 89, 112, 142, 146, 162, 168, 176, 177, 180, 182, 208, 226, 227, 229], "particularli": [5, 40, 54, 81, 86, 95], "throughout": [40, 101, 168, 180], "purpos": [8, 40, 52, 57, 59, 65, 72, 74, 81, 84, 85, 91, 95, 98, 100, 114, 115, 121, 123, 152, 156, 158, 160, 161, 168, 170, 171, 176, 177, 181, 182, 219, 240], "subset": [40, 168, 175], "plot_streamlin": 40, "tractogram_sfm": 40, "tractogram_sfm_detr": 40, "ariel": [1, 21, 23, 40, 91, 176, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "jason": [40, 91, 123, 176, 179], "kendrick": [40, 91, 176], "aviv": [40, 91, 176], "mezer": [1, 2, 3, 40, 70, 91, 176], "stefan": [21, 23, 40, 91, 176, 182, 217, 224, 225, 226, 227, 228], "van": [1, 2, 3, 5, 21, 23, 40, 74, 91, 147, 148, 149, 150, 176, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 224, 225, 226, 227], "der": [1, 2, 3, 5, 21, 23, 40, 74, 91, 147, 148, 149, 150, 176, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 224, 225, 226, 227], "walt": [1, 2, 3, 5, 21, 23, 40, 91, 147, 148, 149, 150, 176, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 224, 225, 226, 227], "brian": [40, 91, 123, 176, 179], "accuraci": [1, 2, 3, 40, 70, 72, 74, 84, 89, 91, 105, 168, 175, 176, 177, 233], "e0123272": [2, 3, 40, 91, 176], "0123272": [2, 3, 40, 91, 176], "tracking_sfm": [31, 40], "fa": [2, 3, 41, 47, 54, 63, 65, 71, 72, 74, 79, 80, 81, 85, 87, 88, 89, 90, 95, 105, 123, 134, 135, 145, 147, 148, 156, 170, 171, 174, 176, 179, 181, 182, 183, 197, 198, 199, 200, 214, 222, 224, 226, 227, 229], "endpoint": [41, 100, 114, 131, 176, 183], "outsideimag": [41, 180, 183, 219], "trackpoint": [41, 180, 183, 228], "2004": [41, 45, 76, 83, 164, 165, 171, 176, 178, 180, 234], "sphx_glr_examples_built_fiber_tracking_tracking_determinist": [], "dti": [41, 45, 54, 63, 69, 70, 72, 73, 74, 79, 84, 85, 87, 88, 89, 95, 96, 121, 142, 145, 147, 148, 154, 162, 164, 165, 170, 171, 179, 182, 183, 200, 217, 218, 219, 220, 224, 225, 226, 228, 230, 231, 234, 235, 237], "fractional_anisotropi": [41, 72, 79, 80, 183], "tensormodel": [41, 63, 70, 72, 74, 79, 81, 87, 95, 145, 183, 219, 224, 235], "scalar": [1, 41, 45, 69, 76, 80, 83, 84, 96, 114, 135, 156, 168, 170, 175, 176, 177, 180, 181, 217], "metric_map": [41, 180], "float": [5, 41, 50, 77, 103, 108, 110, 142, 147, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 189, 190, 191, 193, 194, 197, 198, 199, 200, 202, 204, 205, 207, 209, 210, 212, 214, 215, 220, 226, 230, 233, 235], "state": [8, 22, 41, 44, 84, 86, 89, 95, 112, 162, 170, 174, 175, 180, 226, 228, 229, 231, 234, 237], "tensor_model": 41, "tenfit": [41, 72, 74, 79, 87, 145, 226], "eval": [41, 72, 78, 79, 90, 95, 119, 121, 147, 176, 178, 180, 182, 183, 199, 200], "threshold_criterion": 41, "mask_fa": 41, "xtick": [41, 52, 54, 56, 75, 81, 86], "ytick": [41, 52, 54, 56, 75, 81, 86], "nearest": [41, 68, 75, 77, 80, 83, 87, 94, 110, 131, 168, 170, 177, 180, 182, 210, 236], "tight_layout": [41, 73, 87, 88, 103], "threshold_fa": 41, "tractogram_probabilistic_thresh_al": 41, "tractogram_deterministic_thresh_al": 41, "neighborhood": [41, 109, 168, 177, 182, 185], "binary_criterion": 41, "white_matter_mask": 41, "tractogram_deterministic_binary_al": 41, "include_map": [41, 180, 182, 215], "exclude_map": [41, 180, 182, 215], "background": [5, 41, 50, 52, 60, 63, 68, 71, 73, 74, 75, 79, 81, 86, 87, 88, 108, 128, 131, 137, 168, 172, 176, 180, 181, 182, 204], "stem": [41, 180], "plausibl": [41, 74, 176], "act_criterion": 41, "121": [41, 80, 83, 84, 103, 224], "122": [41, 83, 84, 88, 103, 115, 176, 224], "act_map": 41, "tractogram_deterministic_act_al": 41, "tractogram_deterministic_act_valid": 41, "respect": [41, 63, 73, 81, 84, 90, 93, 98, 100, 117, 131, 142, 146, 162, 168, 170, 171, 172, 174, 176, 177, 180, 181, 182, 204, 230, 231], "addition": [5, 41, 45, 54, 79, 145, 164, 165], "cut": [41, 180, 181], "subcort": [41, 180], "tracking_stopping_criterion": [31, 41], "write": [5, 7, 8, 11, 17, 18, 19, 42, 43, 45, 65, 71, 76, 77, 82, 84, 93, 94, 134, 141, 146, 152, 153, 155, 168, 174, 176, 181, 182, 226, 230], "format": [2, 3, 4, 5, 7, 18, 22, 24, 44, 61, 65, 73, 83, 85, 121, 131, 137, 142, 146, 148, 168, 170, 171, 172, 174, 175, 176, 178, 180, 182, 200, 202, 217, 219, 220, 221, 223, 226, 228, 230, 235, 237], "short": [11, 44, 86, 98, 126, 168, 173, 178, 180, 182, 226, 239, 240], "made": [7, 8, 17, 18, 21, 44, 72, 84, 112, 113, 138, 141, 168, 176, 180, 227, 239, 240, 244], "complex": [44, 126, 144, 162, 176, 234, 241, 243], "convent": [5, 44, 86, 143, 144, 162, 168, 170, 171, 172, 174, 176, 180, 242], "frequent": [5, 24, 44, 159], "ask": [12, 22, 24, 44, 159], "question": [24, 44, 63, 123, 131, 159, 180, 221, 230, 236, 238], "create_nifti_head": [44, 183], "get_reference_info": [44, 183], "is_header_compat": [44, 183], "fetcher": [44, 75, 83, 87, 97, 105, 123, 134, 162, 175, 183, 218, 219, 222, 225, 226, 228, 230, 231, 233, 235], "fetch_file_format": [44, 183], "get_file_format": [44, 183], "cc_m_sub": 44, "laf_m_sub": 44, "lpt_m_sub": 44, "raf_m_sub": 44, "rpt_m_sub": 44, "And": [21, 23, 44, 95, 97, 98, 105, 106, 107, 117, 123, 146, 148, 180, 182, 214, 215], "template0": 44, "nii": [44, 50, 51, 53, 54, 55, 56, 59, 60, 61, 63, 65, 68, 79, 80, 81, 97, 98, 108, 123, 128, 131, 137, 138, 141, 142, 145, 147, 148, 152, 153, 155, 156, 157, 158, 182, 194, 204, 212, 217, 221, 230, 235], "gz": [44, 50, 51, 53, 54, 55, 56, 59, 60, 61, 63, 65, 68, 79, 80, 81, 97, 98, 108, 123, 128, 131, 134, 137, 138, 141, 145, 147, 148, 152, 153, 155, 156, 157, 158, 182, 194, 204, 212, 230, 235], "bundles_filenam": 44, "ref_anat_filenam": 44, "filenam": [5, 44, 65, 74, 76, 77, 82, 83, 84, 94, 147, 171, 174, 181, 182, 189, 204, 211, 222], "print": [44, 47, 48, 51, 53, 54, 55, 56, 57, 60, 61, 63, 65, 70, 71, 72, 76, 77, 79, 80, 82, 83, 84, 85, 88, 90, 91, 92, 93, 94, 95, 101, 112, 113, 115, 117, 122, 125, 130, 134, 135, 146, 168, 170, 174, 180, 182, 220, 221, 222, 229, 233, 235], "basenam": 44, "reference_anatomi": 44, "simpli": [44, 56, 79, 85, 87, 97, 112, 161, 168, 180], "own": [8, 12, 14, 15, 16, 17, 18, 19, 44, 57, 65, 73, 112, 142, 149, 152, 153, 155, 156, 157, 158, 162, 175, 176, 182, 226, 231, 233, 234], "written": [5, 8, 44, 89, 91, 160, 168, 170, 176, 177, 178, 181, 228], "properli": [5, 44, 77, 84, 92, 134, 138, 141, 174, 176, 180, 182, 221, 224, 226, 230, 235], "technic": [15, 44], "cc_trk": 44, "cc_sft": 44, "laf_sft": 44, "raf_sft": 44, "onc": [11, 22, 44, 54, 74, 79, 82, 84, 85, 86, 87, 90, 95, 131, 135, 138, 141, 142, 153, 155, 168, 170, 176, 177, 180, 182, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 208, 210, 212, 214, 215, 228, 239, 240, 243], "anywai": [44, 239, 240], "lpt_sft": 44, "bbox_valid_check": [44, 101, 105, 109, 110, 112, 113, 114, 115, 123, 124, 174, 177], "rpt_sft": 44, "share": [21, 23, 44, 73, 159, 168, 226, 238], "nifti1": [44, 171, 182, 196, 205, 213], "nifti1imag": [44, 53, 54, 71, 73, 74, 76, 77, 82, 94, 105, 168, 171, 174], "trkfile": [44, 174], "nifti1head": [44, 174], "dict": [44, 52, 168, 170, 171, 174, 175, 176, 178, 180, 181, 182], "reason": [8, 44, 76, 81, 84, 95, 97, 103, 106, 113, 131, 146, 168, 171, 175, 176, 182, 202, 224, 243], "why": [8, 18, 22, 44, 79, 89, 97, 142, 156, 234], "relat": [5, 6, 8, 17, 44, 73, 74, 84, 87, 142, 168, 170, 174, 176, 178, 180, 217, 219, 222, 223, 224, 234, 243, 244], "voxel_ord": [44, 174, 183], "particular": [2, 8, 44, 56, 70, 74, 79, 87, 91, 161, 168, 170, 172, 174, 176, 177, 180, 182], "easili": [6, 44, 63, 65, 79, 114, 138, 141, 170, 176, 177], "verifi": [5, 44, 56, 65, 72, 74, 106, 107, 170, 174, 217, 226], "accept": [44, 163, 170, 177, 224], "varieti": [44, 84, 98, 114, 156], "lost": [8, 44], "fake": 44, "wish": [44, 90], "manual": [8, 16, 17, 22, 44, 48, 63, 113, 115, 168, 171, 172, 175, 230], "api": [7, 24, 44, 123, 146, 162, 168, 174, 176, 179, 217, 220, 221, 222, 224, 226, 231], "freedom": [44, 97, 143, 168], "action": [11, 44, 162, 182, 234, 235], "beginn": [44, 230], "create_tractogram_head": [44, 109, 183], "nifti_head": 44, "self": [5, 44, 45, 58, 60, 62, 88, 110, 114, 138, 141, 162, 168, 170, 172, 174, 176, 177, 180, 182, 194, 200, 222, 228, 232], "lpt": 44, "rpt": 44, "tool": [15, 22, 44, 65, 72, 97, 98, 105, 106, 107, 128, 131, 146, 147, 157, 162, 168, 176, 177, 180, 181, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "safer": [44, 97], "cc": [2, 3, 44, 63, 70, 71, 79, 103, 107, 146, 157, 168, 182, 185, 212, 225], "laf": 44, "raf": 44, "is_bbox_in_vox_valid": [44, 174, 183], "remove_invalid_streamlin": [44, 174, 183], "safe": [18, 44, 162, 168, 174, 230], "removing_invalid_coordin": 44, "to_voxmm": [44, 174, 183], "to_rasmm": [44, 174, 183], "subsampl": [44, 89, 168, 172, 180], "everyth": [8, 21, 22, 44, 134, 138, 141, 180, 224], "mi": [44, 97, 98, 168, 174, 182, 234], "corner": [44, 98, 170, 174, 180, 222, 229], "prevent": [7, 44, 74, 168, 176, 177, 180, 182, 186], "to_corn": [44, 174, 183], "cc_streamlines_vox": 44, "laf_streamlines_vox": 44, "raf_streamlines_vox": 44, "lpt_streamlines_vox": 44, "rpt_streamlines_vox": 44, "reus": [44, 176, 229], "space_attribut": [44, 109, 174, 183], "cc_densiti": 44, "laf_dens": 44, "raf_dens": 44, "lpt_densiti": 44, "rpt_densiti": 44, "re": [1, 8, 11, 17, 18, 19, 44, 81, 107, 131, 134, 146, 168, 175, 176, 177, 180, 221, 240, 243], "explicitli": [41, 44, 83, 84, 168, 170, 175, 176, 177, 218, 219, 228], "Be": [44, 110, 150, 170, 180], "care": [44, 63, 76, 86, 90, 112, 162, 174, 176, 180, 182], "metadata": [44, 175], "look": [6, 8, 9, 13, 17, 21, 22, 44, 57, 65, 70, 72, 89, 90, 91, 95, 97, 101, 103, 109, 117, 130, 142, 143, 145, 146, 147, 148, 159, 172, 176, 180, 218, 219, 221, 224, 226, 237], "mention": [44, 54, 74, 83, 85, 148, 219], "consist": [5, 23, 44, 60, 87, 90, 162, 168, 171, 172, 174, 175, 176, 177, 180, 219, 222, 224, 228, 234], "vox": [44, 131, 174, 183], "cc_1000": 44, "laf_1000": 44, "raf_1000": 44, "lpt_1000": 44, "rpt_1000": 44, "streamline_format": [43, 44], "correct": [2, 3, 22, 24, 45, 52, 53, 57, 58, 62, 74, 78, 81, 89, 105, 117, 119, 131, 142, 154, 162, 168, 170, 171, 172, 174, 175, 180, 181, 182, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 234], "dwi": [45, 56, 58, 60, 62, 63, 68, 80, 81, 84, 86, 87, 97, 142, 145, 147, 152, 156, 168, 171, 172, 174, 175, 176, 177, 180, 182, 212, 230, 231, 236], "piesno": [45, 58, 62, 162, 183, 217, 218, 219, 221, 226], "nlmean": [45, 51, 58, 62, 86, 138, 154, 182, 183, 193, 217, 218, 219, 226, 233], "supervis": [45, 58, 62, 162, 172, 182, 194, 232], "independ": [45, 58, 62, 86, 112, 172, 176, 180, 182, 231], "pca": [45, 56, 58, 62, 74, 85, 86, 154, 162, 180, 182, 183, 191, 192, 219, 220, 222, 228, 231, 235, 236], "empir": [45, 51, 58, 62, 86, 180], "soft": [45, 55, 58, 62, 172], "ascm": [45, 55, 58, 62], "marcenko": [45, 53, 58, 62, 74, 154, 172, 182, 191, 192], "pastur": [45, 53, 58, 62, 74, 154, 172, 182, 191, 192], "suppress": [45, 51, 54, 58, 62, 74, 81, 84, 152, 154, 172, 219, 220, 221, 222], "gibb": [24, 45, 58, 62, 74, 154, 162, 177, 182, 183, 203, 228, 229, 230, 231, 233, 236], "oscil": [45, 58, 62, 74, 84, 93, 154, 168, 176], "overview": [12, 16, 45, 69, 154, 231], "yet": [22, 45, 65, 69, 91, 168, 170], "singl": [45, 52, 68, 71, 72, 74, 76, 79, 80, 86, 89, 90, 91, 95, 98, 100, 101, 103, 121, 122, 123, 128, 142, 144, 147, 149, 150, 156, 162, 164, 165, 168, 170, 174, 175, 176, 177, 178, 180, 182, 186, 197, 198, 217, 222, 228, 231, 235, 237], "shell": [2, 3, 45, 52, 54, 56, 57, 60, 63, 68, 69, 71, 74, 75, 77, 80, 84, 86, 87, 90, 93, 94, 96, 122, 146, 147, 162, 164, 165, 171, 176, 178, 182, 205, 228, 229, 230, 231, 233, 234, 235], "multi": [2, 3, 5, 45, 52, 53, 54, 56, 57, 69, 74, 75, 78, 80, 83, 84, 86, 90, 94, 96, 97, 103, 106, 107, 119, 147, 152, 162, 164, 165, 168, 171, 175, 176, 178, 180, 182, 185, 195, 217, 218, 219, 222, 224, 225, 226, 227, 229, 230, 231, 233, 235], "paper": [5, 45, 54, 60, 63, 74, 75, 85, 86, 87, 95, 147, 148, 149, 150, 162, 163, 164, 165, 172, 176, 182, 189, 221, 226, 228, 230], "descript": [5, 8, 22, 45, 112, 113, 126, 128, 136, 164, 165, 171, 174, 176, 180, 182, 228], "sl": [45, 126, 164, 165, 218], "nnl": [45, 164, 165, 170, 176], "ye": [45, 142, 164, 165], "typic": [45, 74, 89, 91, 97, 131, 152, 164, 165, 168, 173, 174, 176, 177, 178, 179, 180, 182, 239, 240], "1200": [2, 3, 45, 75, 80, 83, 85, 134, 136, 137, 147, 164, 165, 219], "success": [45, 146, 164, 165, 174, 175, 176], "1500": [2, 3, 45, 55, 83, 93, 146, 164, 165, 170, 222], "basser": [45, 53, 79, 156, 164, 165, 172, 176, 182, 200, 239], "1994": [45, 79, 83, 156, 164, 165, 176, 182, 200, 229, 239], "fwdti": [45, 81, 164, 165, 183, 219, 220, 228], "style": [6, 20, 21, 24, 45, 164, 165, 170, 176, 178, 218, 219, 220, 221, 222, 223, 224, 228, 229, 231, 232, 234, 235], "acquist": [45, 164, 165], "32": [26, 31, 33, 37, 41, 45, 54, 55, 68, 75, 80, 81, 83, 84, 86, 97, 98, 105, 164, 165, 168, 170, 175, 176, 178, 182, 217, 221, 224, 226, 227], "500mm": [45, 164, 165], "1500mm": [45, 164, 165], "henriqu": [1, 23, 45, 52, 54, 73, 74, 81, 86, 121, 156, 162, 164, 165, 171, 172, 176, 178, 182, 203, 217, 219, 220, 228, 229, 230, 231, 234], "2017": [1, 2, 3, 45, 80, 81, 83, 105, 109, 123, 126, 146, 149, 163, 164, 165, 168, 171, 176, 177, 180, 182, 206, 209, 211, 214, 219, 220, 221, 229], "pasternak": [45, 81, 164, 165], "2009": [2, 3, 25, 45, 60, 81, 93, 105, 106, 107, 157, 164, 165, 168, 170, 171, 172, 176, 177, 182, 197, 229], "dual": [45, 164, 165, 180], "spin": [45, 83, 84, 142, 156, 164, 165, 171, 175, 176, 178, 182, 200, 201, 202, 239, 241], "echo": [45, 83, 142, 156, 164, 165, 171, 176, 178, 182, 200, 201, 239, 241], "epi": [45, 164, 165], "acquir": [45, 51, 52, 53, 55, 56, 59, 60, 65, 72, 73, 74, 75, 80, 81, 83, 86, 88, 89, 93, 121, 142, 153, 155, 156, 164, 165, 170, 171, 172, 176, 180, 182, 203], "2500": [2, 3, 45, 57, 80, 93, 122, 164, 165, 176, 234], "suggest": [5, 11, 45, 74, 84, 89, 146, 164, 165, 168, 172, 175, 224, 226, 238], "least": [45, 56, 74, 83, 85, 86, 89, 90, 95, 97, 106, 146, 164, 165, 168, 170, 173, 175, 176, 177, 180, 182, 199, 200, 230, 239, 240], "jensen": [45, 74, 75, 86, 156, 164, 165, 176, 182, 199], "2005": [45, 74, 80, 83, 86, 91, 95, 156, 164, 165, 168, 176, 180, 182, 199, 200, 229], "micro": [45, 79, 156, 164, 165, 219], "wmti": [45, 69, 74, 96, 164, 165, 228], "increment": [45, 164, 165, 170], "fiereman": [45, 52, 54, 56, 74, 75, 153, 156, 164, 165, 172, 176, 182, 191, 192], "tabesh": [45, 74, 75, 164, 165, 176, 182, 199], "7t": [45, 56, 164, 165], "3000": [2, 3, 45, 83, 147, 164, 165, 171], "resolut": [2, 3, 21, 45, 61, 78, 80, 92, 97, 105, 106, 107, 119, 122, 142, 164, 165, 168, 172, 174, 176, 177, 178, 182, 185, 208, 210, 222, 230, 234], "aganj": [45, 47, 71, 147, 164, 165, 176, 178, 182, 197], "westin": [45, 88, 89, 164, 165, 170, 171, 176, 225], "ivim": [2, 3, 45, 83, 154, 162, 164, 165, 171, 182, 183, 201, 219, 222, 223, 228, 229, 230, 234, 235], "lebihan": [45, 79, 156, 164, 165, 176, 182, 200, 239], "1984": [45, 83, 109, 164, 165, 170, 229], "project": [1, 2, 3, 8, 11, 14, 15, 22, 45, 83, 87, 137, 142, 159, 162, 164, 165, 168, 170, 176, 180, 183, 217, 224, 226, 244], "fadnavi": [23, 45, 56, 83, 164, 165, 172, 175, 176, 181, 182, 194, 195, 204, 221, 222, 223, 228, 229, 232, 233, 234, 235], "2019": [2, 3, 45, 68, 83, 86, 89, 163, 164, 165, 171, 172, 175, 176, 181, 182, 204, 223, 228, 229, 230, 243], "sdt": [45, 164, 165, 176, 217, 218, 225, 228], "qbi": [45, 142, 164, 165, 237, 243], "60": [2, 3, 26, 33, 34, 38, 41, 45, 51, 54, 56, 65, 75, 76, 77, 78, 80, 82, 83, 84, 86, 88, 90, 92, 94, 119, 122, 125, 128, 130, 142, 164, 165, 171, 176, 224], "64": [2, 3, 26, 37, 41, 45, 52, 53, 54, 57, 71, 75, 80, 83, 84, 86, 92, 93, 99, 103, 112, 113, 115, 122, 134, 146, 147, 164, 165, 171, 175, 176, 178, 218, 219, 226], "1000mm": [45, 164, 165], "dsi": [2, 3, 45, 69, 76, 82, 94, 96, 118, 120, 142, 162, 164, 165, 171, 183, 217, 219, 224, 225, 226, 237], "515": [45, 57, 75, 80, 87, 164, 165, 171, 226], "encod": [45, 73, 86, 88, 89, 162, 164, 165, 168, 170, 171, 174, 175, 176, 239], "12": [1, 24, 26, 31, 33, 41, 45, 52, 54, 56, 60, 70, 75, 80, 81, 83, 84, 86, 87, 88, 90, 98, 100, 103, 105, 106, 107, 109, 112, 113, 115, 117, 130, 146, 157, 162, 163, 164, 165, 168, 170, 176, 177, 180, 182, 218, 220, 222, 223, 224, 225, 226, 227, 230, 235, 237], "subsequ": [45, 91, 164, 165, 172, 177], "studi": [1, 2, 3, 45, 74, 75, 80, 84, 87, 95, 164, 165, 170, 171, 176, 230], "half": [45, 70, 88, 164, 165, 170, 176, 180], "mm2": [45, 164, 165], "wedeen": [1, 45, 76, 164, 165, 176], "2013": [2, 3, 45, 53, 54, 56, 63, 74, 75, 83, 84, 90, 93, 95, 146, 162, 163, 164, 165, 171, 172, 176, 182, 191, 224, 225, 226, 229], "dsid": [45, 78, 119, 164, 165], "203": [2, 3, 45, 76, 77, 80, 82, 83, 84, 94, 164, 165, 171, 225], "radiu": [45, 51, 53, 106, 110, 152, 164, 165, 168, 170, 172, 173, 176, 177, 178, 180, 182, 185, 191, 192, 194, 208, 233, 234, 239, 244], "4000mm": [45, 164, 165], "rodriguez": [45, 78, 90, 119, 164, 165, 176, 224], "benefit": [7, 45, 52, 90, 164, 165], "23": [26, 34, 37, 38, 41, 45, 54, 66, 67, 74, 75, 80, 83, 84, 86, 87, 104, 145, 156, 163, 164, 165, 168, 176, 224, 225, 236], "4000": [2, 3, 45, 83, 164, 165], "258": [45, 80, 83, 84, 164, 165], "yeh": [1, 2, 3, 45, 82, 109, 124, 125, 148, 149, 164, 165, 176, 177, 179, 182, 188, 209, 241], "At": [8, 22, 45, 70, 85, 105, 164, 165, 168, 170], "opdt": [45, 164, 165], "tuch": [45, 76, 164, 165, 176], "2007": [45, 72, 77, 83, 85, 86, 90, 94, 164, 165, 172, 173, 176, 178, 182, 198, 230, 243], "tristan": [45, 164, 165, 176], "vega": [45, 164, 165, 176], "shore": [45, 69, 96, 164, 165, 183, 222, 225, 226, 229, 234, 237], "514": [26, 45, 78, 83, 86, 119, 164, 165, 226], "five": [45, 164, 165, 175, 176], "lattic": [45, 106, 164, 165, 168, 181], "unit": [7, 23, 45, 79, 83, 87, 130, 144, 156, 164, 165, 170, 171, 172, 176, 178, 180, 181, 182, 190, 191, 198, 200, 205, 239, 240, 241, 243], "merlet": [23, 45, 93, 164, 165, 176, 225], "\u00f6zarslan": [45, 93, 164, 165], "six": [45, 79, 93, 156, 164, 165, 168, 176, 225, 228], "5000": [45, 57, 80, 83, 86, 92, 122, 164, 165, 170, 176], "6000": [45, 164, 165], "19": [1, 26, 31, 33, 34, 35, 37, 38, 41, 45, 54, 75, 80, 83, 84, 86, 91, 94, 105, 109, 110, 117, 124, 147, 162, 164, 165, 176, 180, 217, 224, 226, 232], "56": [26, 34, 37, 38, 41, 45, 54, 59, 75, 80, 81, 83, 84, 86, 103, 117, 135, 155, 164, 165, 176, 178, 224], "87": [26, 33, 34, 38, 41, 45, 54, 75, 79, 80, 83, 84, 86, 95, 103, 164, 165, 180, 224, 236], "170": [2, 3, 45, 80, 83, 84, 87, 164, 165, 225], "olson": [45, 164, 165], "ozarslan": [45, 60, 84, 89, 164, 165, 172, 176], "mapl": [45, 84, 162, 164, 165, 176, 220, 221], "wu": [45, 77, 94, 117, 164, 165, 176], "minn": [45, 164, 165], "hcp": [2, 3, 45, 56, 68, 84, 162, 164, 165, 171, 176, 217, 222, 226, 234, 235], "sm": [45, 164, 165], "mt": [45, 87, 164, 165, 170, 171], "jeurissen": [45, 52, 72, 74, 85, 90, 153, 164, 165, 176], "forecast": [45, 69, 96, 162, 164, 165, 183, 221, 222], "alexand": [23, 45, 80, 81, 86, 164, 165, 171, 176], "1480": [45, 80, 83, 164, 165, 221], "36": [26, 34, 37, 38, 41, 45, 54, 75, 77, 80, 81, 83, 84, 86, 88, 94, 103, 164, 165, 168, 170, 176, 224], "anderson": [45, 80, 164, 165, 175, 176], "256": [45, 80, 83, 84, 115, 117, 147, 162, 164, 165, 168, 170, 175, 177, 182, 185, 226, 230], "qti": [45, 69, 73, 96, 162, 164, 165, 181, 183, 235], "216": [45, 80, 83, 84, 164, 165, 225], "250": [45, 80, 83, 84, 137, 156, 164, 165, 168, 176, 182], "200mm": [45, 164, 165], "four": [45, 86, 87, 93, 121, 158, 164, 165, 168, 170, 172, 175, 176], "stick": [45, 86, 122, 164, 165, 176, 178], "prolat": [45, 72, 91, 164, 165, 176, 178, 224], "plane": [45, 84, 87, 121, 134, 137, 144, 156, 164, 165, 170, 176, 180, 228, 239, 244], "120": [2, 3, 45, 52, 74, 80, 83, 84, 97, 98, 134, 153, 164, 165, 168, 224], "morez": [45, 164, 165], "2023": [45, 80, 101, 145, 150, 164, 165, 168, 182, 189, 229, 235, 236], "217": [45, 83, 84, 89, 164, 165, 171, 225], "herberthson": [45, 89, 164, 165, 176], "jone": [45, 57, 63, 95, 164, 165, 170, 176, 182, 199, 200], "1999": [45, 57, 79, 83, 164, 165, 180, 222, 229], "behren": [45, 164, 165, 176, 178], "2003": [45, 80, 83, 97, 98, 164, 165, 168, 229], "qtau": [45, 87, 162, 164, 165, 222], "dmri": [2, 3, 21, 45, 59, 61, 65, 69, 75, 79, 95, 96, 142, 155, 162, 163, 164, 165, 171, 172, 176, 222], "vari": [45, 54, 60, 83, 87, 164, 165, 172, 176], "strength": [2, 3, 45, 79, 87, 142, 156, 164, 165, 168, 170, 171, 176, 178, 182, 189], "dellacqua2014": [45, 85, 164, 165], "smt": [45, 80, 86, 164, 165, 176], "smt2": [45, 162, 164, 165, 176, 231], "72": [2, 3, 26, 33, 38, 41, 45, 54, 62, 74, 75, 79, 80, 81, 83, 84, 85, 86, 147, 162, 164, 165, 168, 177, 224, 234], "\u03bcm2": [45, 164, 165], "\u03bcm": [45, 164, 165], "24": [26, 33, 34, 37, 41, 45, 54, 61, 63, 75, 80, 81, 83, 84, 86, 112, 163, 164, 165, 168, 170, 176, 177, 220, 221, 222, 224, 226], "rapid": [45, 144, 164, 165], "kurtosi": [1, 2, 3, 45, 52, 54, 69, 73, 75, 85, 96, 121, 145, 147, 154, 162, 164, 165, 176, 178, 182, 199, 217, 218, 231], "netohe2019": [45, 86, 164, 165], "kaden2016b": [45, 86, 164, 165], "spectrum": [45, 69, 78, 96, 119, 166, 176], "v": [1, 2, 3, 5, 7, 19, 45, 52, 68, 69, 74, 75, 83, 86, 88, 96, 118, 120, 146, 148, 168, 170, 171, 172, 173, 175, 176, 177, 180, 181, 182, 195, 219, 220, 228, 230, 239, 240], "fold": [30, 45, 69, 96, 176], "comparison": [2, 3, 30, 45, 51, 60, 63, 69, 75, 81, 86, 87, 89, 95, 96, 100, 121, 154, 168, 176, 182, 200, 211, 219, 230], "restor": [22, 45, 69, 90, 96, 152, 162, 176, 182, 199, 200, 217, 219, 225, 226, 234], "sphx_glr_auto_examples_reconstruction_histology_resdnn": [], "histolog": [45, 69, 175], "resdnn": [45, 69, 162, 171, 175, 234], "free": [1, 5, 45, 69, 70, 79, 87, 89, 96, 97, 98, 121, 142, 153, 155, 156, 159, 162, 168, 171, 176, 219, 221, 228, 231, 235], "elimin": [1, 45, 69, 96, 176, 219, 228, 231], "contamin": [45, 69, 96, 176], "intravoxel": [45, 69, 96, 154, 176, 182, 201], "msdki": [45, 52, 69, 74, 96, 183], "qt": [2, 3, 45, 69, 96, 171, 176], "buan": [24, 45, 101, 127, 129, 154, 162, 168, 181, 182, 204, 230, 231, 232], "score": [45, 70, 126, 127, 129, 148, 177, 180, 222], "creation": [45, 114, 127, 129, 145, 175, 177, 182, 217, 222, 224], "afq": [45, 127, 129, 228, 233], "outlier": [45, 74, 95, 109, 127, 129, 168, 176, 182, 199, 200, 222], "cluster": [1, 2, 3, 5, 45, 99, 100, 109, 111, 116, 123, 125, 127, 129, 147, 149, 162, 168, 170, 171, 176, 180, 182, 183, 204, 206, 209, 211, 217, 219, 230, 236, 237], "confid": [45, 127, 129, 170, 180], "index": [22, 45, 76, 84, 87, 95, 127, 129, 168, 170, 172, 176, 177, 178, 180, 181, 219, 224, 225, 228, 234, 235], "groupwis": [45, 102, 104, 162, 168, 235], "diffeomorph": [45, 102, 104, 105, 154, 162, 168, 181, 182, 185, 186, 223, 226, 231, 235], "binari": [20, 45, 50, 87, 102, 104, 106, 108, 131, 146, 158, 168, 170, 174, 175, 176, 177, 180, 181, 182, 204, 207, 208, 214, 215, 219, 222, 228, 234], "fuzzi": [45, 102, 104, 222], "nonrigid": [24, 45, 102, 104, 154, 182, 189], "bundlewarp": [24, 45, 102, 104, 145, 154, 181, 182, 183, 189, 236], "deform": [45, 97, 98, 101, 102, 103, 104, 106, 154, 168, 180, 181, 182, 185, 189, 221, 229, 230], "quickbundl": [1, 45, 99, 109, 111, 112, 113, 116, 123, 162, 168, 180, 183, 217, 218, 220, 221, 224, 225, 237], "classif": [45, 54, 85, 111, 116, 152, 162, 171, 177, 219, 230], "search": [45, 63, 109, 111, 116, 145, 146, 172, 176, 177, 180, 182, 209, 234, 235, 236], "automat": [5, 17, 45, 48, 50, 54, 91, 95, 108, 111, 115, 116, 146, 152, 162, 168, 172, 175, 176, 177, 182, 191, 198, 217, 219, 220, 221, 222, 223, 228, 229, 230, 232, 233, 234, 235, 236], "advanc": [2, 3, 16, 45, 52, 54, 56, 74, 86, 97, 98, 105, 106, 107, 132, 133, 138, 141, 145, 147, 157, 168, 172, 174, 176, 177, 182, 194, 203, 220], "auto_examples_python": [], "zip": [22, 45, 87, 112, 113, 114, 115], "auto_examples_jupyt": [], "mrm": [47, 52, 54, 56, 71, 73, 74, 76, 81, 86, 95, 147, 153, 170, 171, 172, 176, 178, 182, 191, 192, 199, 200, 203], "maskdata": [47, 48, 52, 54, 71, 74, 75, 79, 86], "numpass": [47, 48, 50, 52, 54, 71, 74, 75, 79, 85, 86, 90, 105, 106, 107, 108, 147, 177, 182, 208], "autocrop": [47, 48, 50, 52, 54, 71, 74, 75, 79, 86, 108, 177, 182, 208], "dilat": [47, 48, 52, 54, 71, 74, 75, 79, 86, 131, 177, 182, 208], "instanti": [47, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 93, 94, 97, 106, 170, 176, 178, 182], "csamodel": [47, 71, 131], "mainli": [47, 63, 71, 72, 113, 156, 170, 175], "start_tim": [47, 48], "processor": [47, 180], "system": [5, 47, 48, 56, 57, 90, 126, 128, 130, 131, 134, 145, 147, 162, 168, 170, 171, 172, 173, 174, 176, 180, 181, 182, 194, 225, 230, 244], "sens": [47, 60, 84, 87, 90, 93, 103, 128, 172, 176, 180, 182, 238, 240], "resourc": [14, 16, 20, 47, 80, 168, 171, 175, 221], "csapeaks_parallel": 47, "return_odf": [47, 48, 71, 82, 173], "normalize_peak": [47, 48, 71, 82, 90, 173, 176], "npeak": [47, 48, 90, 173, 182, 228], "time_parallel": [47, 48], "ran": [47, 48], "str": [47, 48, 117, 137, 147, 168, 170, 171, 172, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "114": [47, 48, 75, 77, 80, 83, 84, 224], "333221912": 47, "don": [8, 10, 11, 18, 23, 47, 63, 85, 87, 97, 114, 131, 134, 137, 146, 148, 168, 170, 177, 180, 182, 209, 210, 219, 221, 224, 226, 227, 228, 235], "csapeak": [47, 71, 131], "time_singl": [47, 48], "196": [47, 80, 83, 84, 225], "872478008": 47, "speedup": [47, 48, 114, 162, 177], "factor": [47, 48, 85, 90, 93, 97, 98, 105, 117, 131, 168, 170, 172, 176, 182, 184, 185, 191, 202, 231, 239, 243], "72191839533": 47, "runtim": [47, 48, 74, 84, 217, 219, 226], "frozen": [47, 48, 226], "main": [1, 5, 17, 18, 19, 21, 22, 47, 48, 53, 54, 55, 73, 82, 84, 86, 87, 168, 173, 176, 180, 182, 234], "__name__": [47, 48, 138, 141], "__main__": [47, 48, 138, 141], "freeze_support": [47, 48], "reconst_csa_parallel": [47, 49], "sphx_glr_examples_built_reconstruction_reconst_csd": [], "37": [26, 33, 41, 48, 54, 62, 63, 75, 80, 83, 84, 86, 224], "readi": [8, 15, 22, 48, 72, 80, 106, 114, 138, 141, 146, 171, 218], "cpu": [48, 153, 180, 225], "durat": [48, 79, 87, 142, 156, 170], "csd_peaks_parallel": 48, "425682068": 48, "csd_peak": [48, 72], "242": [48, 80, 83, 84, 225, 235], "772505999": 48, "reconst_csd_parallel": [48, 49], "b0": [2, 3, 50, 52, 54, 56, 57, 63, 68, 72, 77, 86, 90, 97, 98, 105, 106, 107, 108, 122, 145, 147, 156, 162, 168, 170, 171, 172, 175, 176, 178, 182, 190, 191, 194, 197, 198, 199, 200, 201, 202, 205, 217, 218, 222, 226], "save_nifti": [50, 51, 55, 56, 59, 60, 61, 63, 65, 68, 79, 105, 108, 128, 131, 145, 183], "scil_b0": [2, 3, 50, 108], "compani": [50, 108], "come": [5, 8, 15, 18, 50, 60, 90, 108, 163, 175, 176, 182, 224], "tesla": [50, 108, 171], "siemen": [2, 3, 50, 51, 60, 90, 108, 142, 171, 172, 176, 177, 182], "data_fnam": [50, 108], "squeez": [50, 68, 97, 98, 107, 108, 176, 180, 227], "fine": [50, 98, 103, 108], "tune": [50, 108], "num_pass": [50, 108], "yield": [50, 60, 108, 168, 173], "incorrect": [50, 108, 219, 232], "veri": [6, 7, 11, 50, 56, 60, 61, 63, 65, 74, 79, 83, 84, 91, 95, 97, 100, 101, 108, 122, 135, 138, 141, 142, 150, 156, 168, 170, 174, 176, 180, 182, 189, 243], "easi": [15, 50, 79, 108, 131, 134, 135, 137, 142, 143, 146, 234, 244], "float32": [50, 79, 103, 106, 108, 115, 128, 173, 174, 177, 180, 233], "fname": [50, 100, 101, 105, 108, 112, 113, 114, 115, 125, 168, 170, 171, 174, 177, 181, 182], "se_1": [50, 108], "5t": [50, 51, 108, 171, 177], "_binary_mask": [50, 108], "astyp": [50, 51, 55, 60, 63, 68, 77, 79, 83, 98, 103, 108, 128, 131, 176, 180], "_mask": [50, 108], "quick": [18, 24, 50, 79, 83, 108, 145, 176, 180], "view": [50, 108, 128, 135, 136, 170, 176, 178, 181, 217, 218, 228], "middl": [50, 51, 52, 53, 54, 56, 65, 78, 87, 97, 107, 108, 112, 119, 130, 137, 171, 177, 180, 181], "histeq": [50, 108, 183], "crop": [50, 79, 108, 182, 183, 208], "largest": [50, 108, 168, 173, 176, 182], "significantli": [50, 73, 108, 123, 180], "smaller": [50, 51, 72, 83, 84, 87, 89, 108, 109, 121, 124, 142, 168, 170, 172, 176, 177, 180, 181, 182, 191, 204], "auto": [50, 85, 108, 109, 170, 175, 182, 208, 219, 226, 228, 230, 236], "activ": [15, 50, 108, 146, 175, 181, 182, 204], "b0_mask_crop": [50, 108], "mask_crop": [50, 108], "_binary_mask_crop": [50, 108], "_mask_crop": [50, 108], "brain_extraction_dwi": [50, 62], "coupe11": [51, 55, 152, 172], "better": [8, 14, 18, 51, 52, 70, 73, 74, 75, 81, 87, 97, 160, 162, 176, 219, 221, 227, 229, 230, 231, 234], "degre": [51, 74, 78, 79, 86, 97, 119, 143, 156, 168, 170, 171, 172, 173, 176, 177, 178, 180, 243], "sharp": [51, 176], "easiest": [18, 22, 51, 146], "non_local_mean": [51, 55, 183, 228], "radii": [51, 72, 170, 176, 178, 180, 182, 198, 222, 230], "involv": [51, 53, 72, 74, 85, 152, 156, 157, 168, 182, 239], "wavelet": [51, 183], "decomposit": [51, 172, 176, 182, 191, 192, 234, 239, 240], "frequenc": [51, 52, 74], "noise_estim": [51, 55, 60, 95, 183], "estimate_sigma": [51, 55, 95, 183, 217, 226], "adaptive_soft_match": [51, 183, 236], "dwi_fnam": [51, 53, 54, 59, 60], "dwi_bval_fnam": [51, 53, 54, 59, 60], "dwi_bvec_fnam": [51, 53, 54, 59, 60], "sherbrooke_3shel": [2, 3, 51, 59, 60, 65, 151, 152, 155], "pre": [8, 22, 51, 56, 73, 74, 75, 81, 86, 100, 101, 107, 125, 168, 175, 176, 177, 182, 185, 219, 221, 222, 223, 230, 231], "sherbrook": [2, 3, 23, 51, 171], "coil": [51, 55, 60, 90, 172, 176, 182], "sigma": [51, 53, 54, 55, 60, 63, 74, 75, 95, 97, 98, 103, 105, 152, 168, 172, 176, 177, 178, 182, 184, 191, 192, 193, 199, 200, 219, 234], "sharper": [51, 78, 119, 176], "den_smal": 51, "patch_radiu": [51, 53, 54, 55, 85, 152, 172, 182, 191, 192, 193, 194, 230], "block_radiu": [51, 55, 172, 182, 193], "den_larg": 51, "varianc": [51, 53, 54, 73, 79, 84, 87, 152, 156, 168, 172, 176, 177, 180, 182, 199, 200, 226, 228, 233], "itself": [51, 73, 87, 89, 114, 146, 148, 171, 175, 176, 177], "den_fin": 51, "plot": [4, 51, 52, 53, 54, 55, 70, 74, 75, 81, 83, 84, 86, 87, 89, 91, 101, 106, 107, 117, 121, 122, 123, 130, 148, 168, 176, 180, 182, 183, 219, 221, 224, 226, 228], "axial_middl": [51, 55, 65], "final_output": 51, "ab": [51, 52, 55, 81, 98, 170, 176, 180, 224], "set_titl": [51, 52, 53, 54, 55, 56, 60, 73, 81, 83, 86, 87, 88, 90, 98, 103, 117], "denoised_ascm": 51, "bbox_inch": [51, 53, 55, 60, 63, 65, 76, 80, 98, 117], "tight": [51, 53, 55, 60, 63, 65, 76, 80, 98, 117], "realli": [22, 51, 76, 232], "dictat": [51, 89], "ascm_comparison": 51, "outperform": 51, "pierrick": [51, 55, 152, 172], "coup": [51, 53, 54, 55, 56, 152, 172, 177, 182, 191], "jose": [51, 55, 152, 170, 172], "manjon": [51, 53, 54, 55, 56, 152, 172, 182, 191], "montserrat": [51, 55, 152, 172], "robl": [51, 55, 152, 172], "loui": [51, 55, 152, 171, 172], "collin": [2, 3, 51, 53, 54, 55, 56, 152, 171, 172, 182, 191], "multiresolut": [51, 55, 152, 172], "iet": [51, 55, 152, 172], "institut": [23, 51, 55, 145, 152, 171, 172, 222], "engin": [51, 55, 74, 90, 145, 152, 172, 176], "technologi": [23, 51, 55, 152, 172, 176, 237], "00645538": 51, "denoise_ascm": [51, 62], "magnet": [52, 54, 55, 56, 57, 68, 71, 73, 74, 75, 76, 77, 80, 83, 85, 86, 90, 94, 142, 147, 152, 153, 156, 171, 172, 175, 176, 177, 178, 181, 182, 191, 192, 199, 200, 204, 241], "reson": [1, 52, 54, 55, 56, 57, 68, 71, 73, 74, 75, 76, 77, 80, 81, 83, 85, 86, 90, 93, 94, 147, 152, 153, 156, 172, 173, 175, 176, 177, 178, 181, 182, 191, 192, 199, 200, 203, 204, 243], "fourier": [52, 84, 153, 176, 239], "finit": [52, 87, 153, 168, 170, 180], "corrupt": [52, 74, 81, 84, 86, 95, 153, 172, 176, 180], "artefact": [52, 56, 74, 81, 86, 153, 155, 172, 176, 229], "manifest": [52, 153, 226], "intens": [52, 60, 121, 153, 168, 172, 175, 176, 177, 180, 181, 182, 194, 219], "adjac": [52, 90, 114, 153, 176, 177], "edg": [52, 74, 146, 153, 170, 171, 172, 176, 180, 183, 224, 226], "affect": [6, 8, 52, 54, 87, 153, 175], "context": [52, 114, 117, 128, 153, 175], "magnifi": [52, 153], "chapter": 52, "cite": [5, 24, 52, 81, 147, 148, 149, 150, 171, 172], "gibbs_remov": [52, 183, 231, 236], "t1_denoised_fnam": 52, "ap_fnam": 52, "tissue_data": [2, 3, 52, 117, 153], "axial_slic": [52, 75, 86], "88": [26, 33, 34, 37, 41, 52, 54, 71, 75, 79, 80, 81, 83, 84, 86, 94, 99, 115, 131, 176, 224], "t1_slice": 52, "figsiz": [52, 54, 56, 73, 75, 77, 80, 81, 86, 87, 88, 90, 94, 103, 180], "wspace": [52, 54, 56, 81, 86], "vmin": [52, 54, 73, 74, 75, 81, 84, 86, 88, 94, 128, 181], "vmax": [52, 54, 73, 74, 75, 81, 84, 86, 88, 128, 181], "400": [2, 3, 52, 83, 84, 117, 147, 171, 176, 177, 182, 222], "due": [52, 53, 74, 81, 83, 86, 90, 95, 146, 172, 225, 230, 231, 243], "evid": [52, 73, 228], "artifici": [52, 95, 121], "c": [1, 2, 3, 7, 8, 9, 18, 22, 52, 55, 56, 60, 63, 68, 71, 72, 73, 75, 81, 82, 87, 88, 89, 90, 95, 98, 105, 106, 107, 117, 142, 146, 147, 148, 149, 152, 157, 168, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 199, 200, 220, 223, 225, 226, 227, 228], "fft": [52, 176, 231], "fft2": 52, "fftshift": 52, "c_crop": 52, "192": [52, 54, 74, 80, 83, 84, 85, 86, 171, 228], "t1_gibb": 52, "ifft2": 52, "t1_unr": 52, "inplac": [22, 52, 146, 172, 231, 236], "fig1": [52, 54, 56, 75, 81, 86], "subplot_kw": [52, 54, 56, 75, 81, 86], "annot": [22, 52], "ring": [52, 74, 153, 162, 172, 182, 203, 229, 233], "fontsiz": [52, 87], "xy": [52, 79, 156, 170, 228, 239, 240], "70": [26, 33, 34, 38, 41, 52, 54, 70, 75, 77, 80, 81, 83, 84, 86, 89, 94, 103, 115, 121, 156, 171, 175, 221, 224], "xycoord": 52, "xytext": 52, "textcoord": 52, "offset": [52, 101, 105, 168, 170, 176, 178, 180, 181], "arrowprop": 52, "arrowstyl": 52, "75": [26, 33, 34, 38, 41, 52, 54, 75, 80, 81, 83, 84, 86, 115, 134, 137, 162, 170, 180, 224, 235], "gibbs_suppression_structur": 52, "uncorrect": 52, "panel": [52, 53, 54, 74, 75, 81, 86, 134, 137, 183], "characterist": [52, 63, 150, 170, 180], "appreci": [52, 54], "arrow": 52, "artefactu": [52, 74], "compromis": [52, 54], "contrast": [2, 3, 52, 74, 75, 77, 79, 83, 84, 85, 86, 105, 130, 147, 152, 171, 176], "grei": [52, 85, 87, 90, 131, 158, 176, 182, 215], "highlight": [52, 148, 182, 204, 222, 226, 231], "kindli": [52, 54, 74, 75, 85, 86, 147, 244], "suppli": [52, 171, 180], "romain": 52, "valabr\u00e8gu": 52, "cenir": [2, 3, 52, 171, 217, 218, 221, 234], "icm": [52, 117, 177], "pari": 52, "read_cenir_multib": [52, 183], "asarrai": [52, 80, 81, 105, 112, 180], "data_slic": [52, 83], "data_correct": [52, 59], "slice_axi": [52, 172, 182, 203], "dimension": [1, 52, 53, 84, 87, 93, 114, 144, 152, 168, 170, 175, 176, 177, 178, 180, 182, 200, 217, 219, 226], "axi": [7, 52, 54, 56, 57, 63, 68, 76, 77, 81, 82, 84, 87, 93, 94, 98, 103, 105, 117, 121, 122, 143, 144, 156, 168, 170, 172, 174, 176, 177, 178, 180, 181, 182, 203, 208, 222, 224, 228, 231, 239, 244], "fig2": [52, 54, 86], "10000": [52, 59, 83, 97, 98, 168, 176, 181, 182, 223, 228], "gibbs_suppression_b0": 52, "hard": [8, 52, 74, 176, 231], "sphx_glr_examples_built_reconstruction_reconst_msdki": [], "unnecessari": [52, 73, 74, 81, 86, 170, 175, 219, 222, 234, 235], "dki_model": [52, 86], "meandiffusionkurtosismodel": [52, 86, 183], "dki_fit": [52, 86], "mskini": 52, "msk": [52, 86, 176, 183], "mskgib": 52, "fig3": [52, 54, 86], "59": [26, 37, 41, 52, 54, 75, 79, 80, 81, 83, 84, 86, 90, 94, 224], "gibbs_suppression_msdki": 52, "black": [52, 88, 135, 181, 226, 230], "ventricl": [52, 81, 98], "seem": [52, 86, 176, 220, 221, 224, 226], "veraart": [52, 54, 56, 74, 153, 172, 176, 182, 191, 192], "jelescu": [52, 153], "knoll": [52, 56, 153], "novikov": [52, 54, 56, 75, 153, 172, 182, 191, 192], "magn": [52, 73, 81, 153, 172, 173, 176, 182, 183, 199, 200, 203, 243], "301": [52, 80, 83, 84, 91, 153, 176, 226], "314": [52, 83, 84, 153, 226], "1002": [52, 54, 56, 71, 73, 74, 80, 81, 86, 147, 153, 172, 173, 176, 180, 182, 191, 192, 203, 219], "25866": [52, 153], "perron": [52, 74, 153, 176], "aelterman": [52, 74, 153], "piz": [52, 74, 153], "urica": [52, 74, 153], "philip": [2, 3, 52, 74, 90, 153, 171, 172, 176, 177, 182], "leeman": [52, 72, 74, 90, 153, 170, 176], "artifact": [52, 74, 153, 168, 171, 172, 182], "441": [52, 55, 56, 74, 80, 83, 84, 152, 153, 172, 176], "455": [52, 74, 83, 84, 153, 226], "1016": [2, 3, 52, 54, 73, 74, 80, 81, 88, 89, 90, 153, 168, 170, 171, 172, 176, 182, 191, 192, 219], "06": [26, 28, 33, 34, 37, 38, 41, 52, 54, 74, 75, 80, 83, 84, 86, 153, 170, 176, 219, 220, 227, 229, 234], "068": [52, 74, 153], "kellner": [52, 172, 182, 203], "dhital": [52, 172, 182, 203], "kiselev": [52, 172, 182, 203], "reisert": [52, 172, 182, 203, 231], "subvoxel": [52, 172, 182, 203], "1574": [52, 80, 83, 222], "1581": [52, 83, 222], "26054": [52, 172, 182, 203], "neto": [1, 23, 52, 74, 86, 121, 156, 172, 176, 178, 182, 203, 217, 219, 220, 228, 229, 230, 231, 234], "healthi": [52, 54, 74, 80, 86, 89, 117, 148, 162, 171, 172, 176, 182, 203], "ag": [2, 3, 52, 54, 74, 81, 86, 171, 172, 176, 182, 203], "doctor": [52, 54, 74, 86, 172, 176, 182, 203], "17863": [52, 54, 74, 86, 172, 176, 182, 203], "cam": [52, 54, 74, 86, 172, 176, 182, 203], "29356": [52, 54, 74, 86, 172, 176, 182, 203], "retriev": [2, 52, 130, 138, 168, 172, 176, 177, 180], "digit": [52, 65, 134, 171, 180], "washington": [23, 52, 65, 134, 145, 171], "edu": [22, 52, 65, 134, 142, 171, 180], "researchwork": [52, 65, 134, 171], "1773": [52, 65, 80, 83, 134, 171], "33311": [52, 171], "denoise_gibb": [52, 62], "explor": [2, 3, 53, 74, 75, 85, 86, 121, 147, 152, 156, 176, 178, 180], "manjon2013": [53, 54, 56, 182, 191], "around": [53, 63, 72, 83, 143, 152, 170, 172, 176, 180, 181, 182, 191, 192, 194, 217, 226, 243], "eigenvalu": [53, 72, 79, 90, 91, 121, 122, 152, 168, 172, 176, 178, 180, 182, 191, 192, 199, 200, 222, 239], "sphx_glr_examples_built_preprocessing_denoise_mppca": [], "isbi2013_2shel": [2, 3, 53, 93], "koai": [53, 60, 81, 172, 176], "koay2006": 53, "correct_bia": [53, 172], "lowest": [53, 63, 148, 176, 180], "relationship": [53, 87, 131, 172, 176, 180, 182, 191, 239, 240], "tau_factor": [53, 172, 182, 191, 231], "accord": [53, 75, 83, 86, 112, 113, 114, 121, 156, 162, 168, 170, 171, 172, 176, 177, 178, 179, 180, 182, 210, 217, 218, 230], "denoised_arr": [53, 54, 56, 85, 172], "taken": [53, 54, 101, 121, 168, 170, 171, 172, 176, 180, 182, 191, 192, 194, 243], "slow": [53, 83, 112, 142, 156, 168, 222], "gra": [53, 54, 56], "orig": [53, 54, 56], "den": [53, 54, 55, 56], "rms_diff": [53, 54, 56], "denoised_localpca": 53, "jv": [53, 54, 56, 172, 182, 191], "concha": [53, 54, 56, 172, 182, 191], "buad": [53, 54, 56, 172, 182, 191], "dl": [53, 54, 56, 171, 172, 182, 191], "overcomplet": [53, 54, 56, 154, 172, 182, 191], "e73021": [53, 54, 56, 172, 182, 191], "0073021": [53, 54, 56, 172, 182, 191], "cg": [53, 135, 168, 170, 172], "pj": [53, 79, 156, 172], "2006": [53, 80, 83, 90, 95, 170, 172, 176, 182, 200, 229], "magnitud": [53, 90, 101, 168, 170, 172, 176, 180, 181], "jmr": [53, 60], "179": [53, 80, 83, 84, 172, 225], "317": [53, 83, 84, 172, 226], "322": [53, 83, 84, 220], "denoise_localpca": [53, 54, 62], "exploit": [54, 153], "across": [5, 54, 56, 60, 73, 79, 83, 86, 90, 109, 124, 125, 143, 154, 156, 170, 175, 176, 177, 179, 182, 222, 238, 239, 240], "veraart2016a": 54, "loss": [54, 56, 75, 91, 112, 170, 171, 175, 177, 182], "henri2018": 54, "behind": [5, 15, 54, 146, 152, 244], "princip": [54, 79, 87, 121, 122, 152, 170, 172, 176, 178, 180, 182, 191, 192], "veraa2016a": [54, 56], "veraa2016b": 54, "mppca": [54, 85, 152, 162, 183, 229], "auxiliari": 54, "hansen": [2, 3, 54, 68, 74, 75, 85, 86, 147, 162, 175, 176], "jespersen": [2, 3, 54, 73, 74, 75, 85, 86, 147, 176], "hansen2016": [54, 74, 75, 85, 86, 147], "mbyte": [54, 74, 76, 79, 84, 85, 86, 95], "cfin_multib": [2, 3, 54, 74, 75, 84, 85, 86, 147, 152, 156], "simplic": [54, 85, 114], "sel_b": [54, 85], "logical_or": [54, 72, 85], "67": [1, 26, 33, 38, 41, 54, 72, 75, 80, 83, 84, 85, 86, 90, 226, 236], "mp": [54, 74, 85, 143, 162, 180, 233], "slide": [54, 168, 180], "compris": [54, 89, 180], "assess": [54, 74, 176, 181, 182, 184, 228], "hspace": [54, 56, 81, 86], "denoised_mppca": 54, "dkimodel": [54, 74, 75], "diffusionkurtosismodel": [54, 74, 75, 86, 183], "dki_orig": 54, "dki_den": 54, "md": [54, 72, 73, 74, 79, 80, 81, 85, 86, 88, 147, 148, 156, 170, 176, 178, 179, 180, 182, 183, 199, 200, 218, 219, 221, 229, 230], "mk": [54, 73, 74, 75, 86, 88, 176, 182, 183], "fa_orig": 54, "fa_den": 54, "md_orig": 54, "md_den": 54, "mk_orig": 54, "mk_den": 54, "03": [26, 33, 34, 37, 38, 41, 43, 54, 57, 75, 80, 81, 83, 84, 86, 104, 107, 109, 110, 116, 124, 133, 150, 170, 176, 217, 218, 223, 224, 225, 227, 228, 232, 233, 234, 235], "0e": [54, 90, 170, 176, 178], "denoised_dki": 54, "upper": [54, 70, 72, 74, 81, 83, 86, 103, 168, 170, 173, 174, 175, 176, 177, 182, 207, 219], "std": [54, 60, 63, 74, 87, 137, 168, 176, 181, 182, 185, 199, 200, 217, 226], "return_sigma": [54, 172, 182, 192], "pca_sigma": 54, "level": [21, 54, 59, 83, 87, 88, 89, 97, 98, 99, 103, 105, 106, 107, 142, 148, 150, 156, 168, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 185, 218, 224, 228, 229], "mean_sigma": 54, "nomin": [54, 170], "theori": [24, 54, 56, 77, 94, 170, 172, 176, 177, 182, 191, 192, 235], "26059": [54, 56, 172, 182, 191, 192], "christiaen": [54, 172, 182, 191, 192], "aron": [54, 172, 182, 191, 192], "sijber": [54, 74, 172, 176, 182, 191, 192], "142": [54, 80, 84, 115, 147, 172, 177, 182, 191, 192, 224], "394": [54, 80, 84, 172, 182, 191, 192, 219], "406": [54, 80, 83, 84, 95, 172, 182, 191, 192, 226], "08": [26, 33, 34, 37, 38, 41, 54, 62, 72, 75, 80, 83, 84, 86, 90, 104, 172, 176, 182, 191, 192, 228, 229, 230], "016": [54, 172, 182, 191, 192], "denoise_mppca": [54, 62], "coupe08": [55, 56, 152, 172], "boost": [55, 238], "decid": [55, 59, 84, 109, 134, 177], "3t": [55, 73, 171, 176, 177], "ge": [2, 3, 55, 60, 90, 171, 172, 176, 177, 182], "sphx_glr_examples_built_preprocessing_denoise_ascm": [], "yger": [55, 56, 152, 172], "prima": [55, 56, 152, 172, 182], "hellier": [55, 56, 152, 172], "kervrann": [55, 56, 152, 172], "barillot": [55, 56, 152, 172, 182, 193], "blockwis": [55, 56, 152, 172], "transact": [2, 3, 55, 56, 77, 82, 90, 94, 97, 98, 117, 152, 168, 172, 176], "medic": [2, 3, 23, 55, 56, 63, 77, 82, 90, 93, 94, 97, 98, 101, 117, 145, 147, 152, 162, 168, 171, 172, 176, 177, 181, 182, 204, 205, 219, 220, 222, 243], "27": [2, 3, 22, 26, 33, 41, 54, 55, 56, 63, 75, 76, 77, 80, 81, 83, 84, 86, 94, 152, 171, 172, 176, 220, 224, 230], "425": [55, 56, 83, 84, 152, 172, 226], "denoise_nlmean": [55, 62], "fadnavis20": [56, 172, 182, 194], "rank": [56, 88, 152, 168, 176, 228, 239, 240], "oversampl": [56, 152], "explicit": [56, 168, 224], "classic": [56, 63, 106, 142, 239, 240, 241], "knoll11": 56, "etc": [5, 6, 56, 95, 134, 142, 152, 166, 168, 170, 175, 176, 178, 180, 182, 210, 224, 227], "certain": [5, 56, 63, 74, 95, 176, 180], "assumpt": [56, 60, 83, 84, 87, 100, 176, 231], "fact": [6, 56, 144, 156], "fluctuat": 56, "bodi": [5, 56, 157, 161, 180, 182, 184], "regressor": [56, 170], "phase": [56, 90, 172, 175, 176, 177], "train": [56, 68, 175], "rest": [8, 17, 23, 56, 84, 85, 168, 180], "mathcal": [56, 176, 177], "phi_": [56, 176], "ight": [56, 73, 88, 89, 176], "y_": [56, 243], "fed": [56, 182], "phi": [56, 57, 83, 86, 92, 121, 122, 168, 170, 171, 172, 176, 183, 224, 243, 244], "built": [22, 56, 73, 90, 97, 168, 174, 175, 180], "held": [56, 70], "mere": [56, 147], "nor": [56, 170, 177], "kind": [6, 56, 70, 87, 95, 131, 168, 176, 180, 226], "loadtxt": [56, 78, 119, 171, 221], "shift_intens": [56, 172, 182, 194], "clip_negative_v": [56, 172, 182, 194], "ordinari": [56, 74, 176, 182, 199, 200], "regress": [56, 68, 172, 176, 182, 194, 218], "littl": [8, 15, 56, 231], "slower": [56, 89, 157, 170, 180, 182], "switch": [18, 56, 106, 168, 176, 180, 219, 222, 223, 226, 235], "hamper": 56, "exhibit": [56, 63, 74], "attenu": [56, 63, 121, 176, 178, 222], "skip": [56, 146, 168, 170, 171, 172, 173, 176, 178, 182, 194, 219, 224, 226, 228, 235], "b0_denois": [56, 172, 182, 194], "greater": [5, 56, 83, 109, 142, 156, 168, 170, 173, 177, 180, 181, 182, 204, 209, 211], "higher": [4, 56, 72, 74, 78, 81, 84, 91, 101, 119, 125, 137, 142, 150, 168, 170, 176, 177, 180, 182, 208], "accordingli": [56, 109, 147, 168, 177, 180], "pick": [8, 22, 56, 137, 146, 220], "denoised_patch2self": 56, "inspect": [56, 68, 106, 138, 141, 182, 221], "underli": [56, 63, 72, 73, 87, 126, 131, 156, 160, 172, 176, 182, 194, 226], "got": [8, 17, 56], "rid": 56, "lastli": [56, 138, 141], "batch": [56, 175], "300": [2, 3, 56, 57, 78, 80, 83, 84, 86, 92, 119, 122, 134, 171, 181, 226], "split": [56, 156, 168, 172, 173, 175, 176, 180, 182, 183, 201, 203, 210, 213, 219, 228], "denoised_batch1": 56, "denoised_batch2": 56, "merg": [12, 15, 17, 19, 22, 56, 145, 162, 177, 180, 182, 219, 221, 222, 225, 226, 228, 236], "denoised_p2": 56, "concaten": [56, 78, 119, 121, 177, 178, 182], "batson": [56, 172, 182, 194], "neural": [56, 68, 73, 162, 172, 175, 176, 182, 194], "bredi": 56, "pock": 56, "stollberg": 56, "tgv": 56, "pp": [2, 3, 56, 72, 85, 176, 178], "480": [56, 80, 83, 226], "491": [56, 83, 87, 171, 226, 230], "denoise_patch2self": [56, 62], "usual": [5, 8, 57, 61, 65, 98, 137, 138, 141, 146, 176, 177, 180], "saw": 57, "sphx_glr_examples_built_quick_start_quick_start": [], "disk": [22, 57, 65, 134, 142, 170, 171, 174, 179, 181, 182, 187, 188, 234], "sai": [8, 17, 22, 57, 63, 87, 100, 146, 149, 150, 168, 170, 175, 176, 180, 225, 239, 240], "physicist": 57, "scientist": [21, 57, 163], "who": [7, 17, 18, 21, 22, 57, 65, 168, 170, 176], "specif": [4, 5, 11, 57, 65, 73, 76, 80, 82, 84, 85, 86, 87, 90, 99, 112, 121, 122, 130, 134, 138, 141, 142, 146, 147, 151, 152, 154, 170, 171, 174, 175, 176, 177, 180, 181, 220, 222, 223, 224, 234, 237], "disperse_charg": [57, 86, 92, 122, 183, 219, 225, 229], "jones1999": 57, "polar": [57, 92, 121, 122, 170, 176, 178, 244], "n_pt": [57, 86, 92, 122, 130], "theta": [57, 86, 92, 98, 121, 122, 144, 168, 170, 171, 172, 173, 176, 180, 224, 243, 244], "pi": [57, 86, 87, 92, 114, 122, 130, 142, 143, 170, 173, 176, 177, 178, 180, 239, 241, 243], "rand": [57, 86, 92, 122, 124, 135, 170, 180, 181], "hsph_initi": [57, 86, 92, 122], "potenti": [57, 74, 86, 90, 92, 122, 126, 170, 172, 176, 220, 222], "energi": [57, 83, 92, 122, 156, 168, 176, 177, 182, 185], "minim": [57, 84, 92, 100, 103, 122, 168, 170, 175, 176, 222, 234], "hsph_updat": [57, 86, 92, 122], "nice": [7, 15, 18, 57, 68, 92, 178, 182], "setbackground": [57, 92, 100, 109, 110, 112, 113, 114, 115, 124, 125, 130], "point_radiu": [57, 112], "initial_vs_upd": 57, "becom": [57, 87, 100, 130, 137, 143, 170, 176, 180], "sph": [57, 225, 230], "full_spher": 57, "fill": [57, 168, 170, 176, 178, 180, 182, 210, 217, 239, 240], "stack": [57, 98, 122, 230], "discuss": [7, 57, 73, 105, 122, 170, 176, 180, 244], "hstack": [57, 86, 122], "insert": [8, 57, 122, 135, 177, 183], "80451777": 57, "16877559": 57, "56944355": 57, "32822557": 57, "94355999": 57, "04430036": 57, "23584135": 57, "96241331": 57, "13468285": 57, "39207424": 57, "73505312": 57, "55314981": 57, "32539386": 57, "16751384": 57, "93062235": 57, "82043195": 57, "39411534": 57, "41420347": 57, "65741493": 57, "74947875": 57, "07802061": 57, "88853765": 57, "45303621": 57, "07251925": 57, "39638642": 57, "15185138": 57, "90543855": 57, "10175269": 57, "08197111": 57, "99142681": 57, "50577702": 57, "37862345": 57, "77513476": 57, "42845026": 57, "40155296": 57, "80943535": 57, "26939707": 57, "81103868": 57, "51927014": 57, "48938584": 57, "43780086": 57, "75420946": 57, "gradientt": [5, 57, 65, 71, 73, 74, 76, 77, 79, 82, 83, 84, 86, 93, 94, 121, 122, 168, 171, 175, 176, 178, 180, 183, 218, 219, 224, 226, 230, 233], "cyan": 57, "colors_b1000": 57, "colors_b2500": 57, "ascontiguousarrai": [57, 130], "dk": [57, 95, 176, 182, 199, 200], "strategi": [2, 3, 22, 57, 63, 72, 74, 75, 84, 85, 86, 90, 95, 97, 98, 105, 123, 138, 141, 147, 168, 176, 182, 214], "anisotrop": [57, 72, 76, 79, 82, 84, 85, 128, 142, 162, 168, 171, 176, 230, 237], "525": [57, 83, 86, 226], "gradients_spher": [57, 62, 221], "inevit": [59, 155], "misalign": [59, 98, 155, 168], "issu": [1, 2, 3, 8, 22, 59, 74, 81, 86, 125, 134, 145, 155, 162, 170, 172, 176, 180, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "jenkinsonsmith01": [59, 155], "preprocess": [24, 59, 80, 114, 155, 171], "essenti": [5, 59, 84, 98, 240], "motion_correct": [59, 62, 183], "193": [2, 3, 59, 65, 80, 83, 84], "bvals_smal": 59, "bvecs_smal": 59, "reg_affin": [59, 97, 98], "jenkinson": [59, 155], "2001": [59, 83, 109, 117, 155, 177, 230], "optimis": [59, 155, 173, 226], "anal": [59, 155, 168], "143": [59, 80, 83, 84, 115, 155, 176, 224], "often": [8, 22, 60, 61, 79, 90, 95, 128, 130, 131, 144, 170, 176], "identif": [1, 60, 172], "koay2009": 60, "detect": [17, 60, 90, 95, 146, 168, 170, 176, 180], "channel": [60, 106, 107, 168, 170, 174, 175, 176, 177, 181, 238], "grappa": [60, 172], "intuit": [60, 87, 126, 144, 182], "fourth": [60, 74, 83, 88, 89, 170, 176, 178], "quit": [8, 60, 84, 130, 176], "central": [60, 77, 94, 168, 170, 179, 180], "tim": 60, "trio": [2, 3, 60, 171, 239, 240], "receiv": [60, 106, 168, 172, 176], "distinct": 60, "had": [8, 60, 65, 180], "even": [8, 18, 60, 76, 86, 89, 97, 103, 112, 114, 146, 152, 168, 170, 172, 173, 176, 177, 180, 182, 202, 243], "return_mask": [60, 172], "axial_piesno": 60, "mask_piesno": 60, "uint8": [60, 63, 68, 79, 131, 174], "sphx_glr_examples_built_preprocessing_snr_in_cc": [], "pierpaoli": [60, 79, 95, 172, 176, 182, 199, 200], "199": [8, 60, 80, 83, 84, 172, 225], "94": [26, 37, 38, 41, 54, 60, 75, 80, 83, 84, 86, 103, 162, 172, 178, 217, 224, 230], "103": [60, 80, 81, 83, 84, 85, 162, 172, 176, 182, 200, 223, 224], "especi": [61, 180], "facilit": [61, 174, 175], "principl": [5, 61, 176, 178, 180], "fimg": [61, 121, 171, 178], "aniso_vox": [61, 168, 171], "58": [26, 33, 34, 37, 38, 41, 47, 54, 61, 63, 74, 75, 80, 83, 84, 86, 109, 116, 147, 156, 168, 172, 173, 176, 177, 178, 224, 243], "new_voxel_s": 61, "data2": [61, 105, 168, 177], "affine2": [61, 105, 168], "77": [25, 26, 33, 34, 38, 41, 54, 61, 75, 80, 81, 83, 84, 86, 115, 168, 170, 175, 224], "iso_vox": 61, "analyz": [61, 76, 88, 159, 170, 176, 179, 180, 229], "img3": 61, "spm2analyzeimag": 61, "realiz": [61, 168, 172], "problem": [8, 61, 83, 84, 85, 89, 95, 97, 100, 106, 130, 142, 157, 162, 168, 170, 176, 180, 218, 219, 221, 222, 226, 231, 234, 235], "reslice_dataset": [61, 62], "divid": [63, 70, 76, 77, 83, 87, 90, 100, 114, 124, 168, 170, 172, 176, 177, 179, 180, 182, 187, 188, 220, 221, 228], "worst": 63, "sever": [14, 18, 22, 63, 81, 84, 88, 89, 131, 158, 168, 180, 243], "cst": [63, 123, 124, 128, 134, 135, 171, 222, 233], "longitudin": [5, 63, 176], "fasciculu": [5, 63, 101, 109, 110, 134, 148, 149, 150, 171], "slf": [5, 63], "cfa": [63, 79, 177], "being": [5, 63, 87, 90, 142, 146, 148, 158, 168, 170, 174, 176, 177, 179, 180, 181, 182, 186, 219, 220, 223, 228, 233, 237, 243], "adopt": [5, 63], "recent": [13, 63, 87, 146, 171, 172, 180, 219, 225, 235, 237], "descoteaux2011": [63, 77, 94], "jones2013": 63, "explan": [5, 8, 9, 63, 168, 176, 222], "tenmodel": [63, 72, 74, 79, 145, 226], "tensorfit": [63, 79, 177, 183, 224], "just": [8, 9, 10, 11, 14, 17, 18, 19, 21, 22, 63, 65, 76, 77, 79, 82, 83, 84, 91, 94, 97, 101, 103, 105, 135, 138, 141, 142, 146, 155, 168, 174, 175, 176, 180, 181, 182, 204, 217, 227, 228, 237], "could": [63, 72, 74, 86, 87, 89, 103, 112, 114, 117, 128, 130, 168, 170, 172, 176, 178, 182, 189, 203, 208, 218, 228, 230], "unless": [5, 63, 112, 168, 170, 176, 178, 180, 235], "best": [18, 63, 72, 84, 142, 157, 168, 170, 173, 176, 180, 231], "segment_from_cfa": [63, 183], "bounding_box": [63, 176, 183, 230], "cc_box": 63, "zeros_lik": [63, 98, 180], "diff": [7, 8, 9, 15, 17, 63, 168], "bounds_min": 63, "bounds_max": 63, "mask_cc_part": 63, "return_cfa": [63, 177], "cfa_cc_part": 63, "255": [63, 79, 80, 83, 84, 131, 137, 174, 225], "titl": [8, 63, 77, 80, 87, 94, 110, 181, 182, 183, 217, 230], "cc_segment": 63, "catch": [63, 217, 220], "warn": [41, 63, 68, 74, 81, 83, 84, 101, 146, 174, 175, 176, 183, 217, 219, 220, 221, 222, 223, 224, 226, 228, 229, 230, 231, 233, 234, 235], "manufactur": 63, "ndimag": [63, 68, 74, 75, 131, 170, 234], "binary_dil": [63, 131], "mask_nois": [63, 182], "noise_std": 63, "li": [63, 70, 156, 168, 177, 182], "null": [63, 170, 172, 182, 191, 234], "idx": [63, 90, 170, 172, 175, 180, 183], "inf": [63, 83, 123, 168, 175, 176, 177, 180, 182], "axis_x": 63, "argmin": [63, 89, 100, 180], "axis_i": 63, "axis_z": 63, "els": [8, 18, 63, 110, 134, 142, 168, 170, 172, 174, 176, 178, 180, 181], "98875": 63, "1177": [63, 80, 219], "09229": 63, "46995373635": 63, "126": [44, 63, 80, 83, 84, 103, 106, 115, 162, 224], "11825": 63, "039925": 63, "99218": 63, "9965694823": 63, "perpendicular": [63, 80, 84, 87, 90, 156, 170, 176, 178, 180, 182, 202, 217], "henc": [5, 63, 83, 146, 157, 176, 177, 180, 240], "le": [63, 83, 156, 170, 176, 180, 182, 201], "bihan": [63, 83, 156, 176, 182, 201], "mangin": 63, "poupon": 63, "603": [63, 75, 77, 83, 86, 94, 176, 227], "knosch": 63, "turner": 63, "count": [63, 68, 95, 130, 131, 176, 177, 180, 181, 225], "fallaci": 63, "73": [26, 33, 34, 37, 38, 41, 54, 63, 74, 75, 80, 83, 84, 86, 180, 224], "239": [63, 80, 83, 84, 225], "snr_in_cc": [62, 63, 222, 228], "publicli": [65, 171, 224], "haven": [22, 65, 130, 146], "With": [22, 65, 82, 84, 90, 99, 134, 168, 170, 176, 177, 180, 222, 237], "fetch_sherbrooke_3shel": [65, 183], "folder": [2, 5, 65, 97, 98, 123, 147, 148, 149, 151, 161, 171, 182, 186, 188, 196, 218, 223, 228], "home": [7, 11, 65, 146, 160, 171], "directori": [5, 7, 8, 10, 19, 22, 65, 138, 141, 146, 148, 151, 152, 153, 155, 156, 157, 158, 171, 173, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 222, 224, 225, 232], "expandus": [65, 137], "dname": 65, "fdwi": [65, 145], "hardi193": [65, 152, 155], "fbval": [65, 74, 75, 76, 77, 82, 83, 84, 85, 86, 88, 93, 94, 121, 145, 168, 171, 174, 178], "fbvec": [65, 74, 75, 76, 77, 82, 83, 84, 85, 86, 88, 93, 94, 121, 145, 168, 171, 174, 178], "usernam": [22, 65], "librari": [1, 4, 65, 89, 95, 134, 142, 145, 146, 147, 148, 149, 150, 162, 170, 176, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 221, 226, 235], "last": [8, 22, 65, 79, 83, 87, 95, 112, 115, 131, 137, 138, 142, 146, 148, 156, 162, 168, 170, 171, 172, 174, 175, 176, 177, 180, 182, 200, 220, 223, 235], "128": [51, 65, 83, 84, 115, 117, 135, 175, 224, 234], "get_zoom": [65, 105], "quickli": [65, 168, 176, 223], "info": [22, 65, 81, 99, 147, 170, 174, 175, 180, 182, 183, 217, 222, 223, 226, 231, 233], "000000": [44, 65, 77, 94], "3500": [2, 3, 41, 65, 80, 83], "964050": 65, "999992": 65, "999979": 65, "00504001": 65, "00402795": 65, "00398794": 65, "0257055": 65, "653861": 65, "756178": 65, "589518": 65, "769236": 65, "246462": 65, "235785": 65, "529095": 65, "815147": 65, "893578": 65, "263559": 65, "363394": 65, "79784": 65, "133726": 65, "587851": 65, "232937": 65, "931884": 65, "278087": 65, "93672": 65, "144139": 65, "31903": 65, "tell": [7, 18, 19, 65, 112, 114, 177, 179, 182], "fun": [65, 170], "hardi193_s0": 65, "sphx_glr_examples_built_reconstruction_reconst_dti": [], "quick_start": [65, 66, 222], "tracking_introduction_eudx": [66, 67], "driven": [68, 72, 90, 168, 176], "ground": [68, 78, 86, 89, 119, 181], "truth": [68, 78, 86, 89, 119, 181], "sequenti": [68, 90, 114, 177], "network": [2, 3, 8, 68, 80, 83, 105, 148, 149, 156, 162, 171, 175], "block": [5, 22, 68, 161, 162, 172, 176, 182, 183, 191, 192, 193, 220, 223], "histologi": [68, 175], "squirrel": 68, "monkei": 68, "third": [68, 170, 172, 176, 180, 182, 203], "ndi": 68, "nn": [24, 68, 162, 168, 176, 183, 234], "histo_resdnn": [68, 183], "historesdnn": [68, 183], "sh_to_sf_matrix": [68, 183], "onednn": 68, "tf_cpp_min_log_level": 68, "mean_b0": 68, "mask_label": 68, "return_count": 68, "val": [2, 3, 68, 90, 98, 176, 181, 218, 235], "argmax": 68, "appropri": [2, 3, 5, 68, 105, 106, 134, 137, 153, 168, 170, 171, 174, 181, 234], "resdnn_model": [68, 175], "verbos": [5, 68, 90, 99, 109, 168, 172, 174, 175, 176, 177, 180, 182, 194, 218, 226], "fetch_default_weight": [68, 175, 183], "predicted_sh": 68, "coron": [68, 117, 181, 228], "invb": [68, 173, 176], "basis_typ": [68, 172, 173, 175, 176], "0006": 68, "fod_spher": 68, "b_matrix": [68, 239, 240], "mean_sh": 68, "background_img": 68, "ori_shap": [68, 175], "slice_index": [68, 181], "display_ext": [68, 134], "camera": [68, 135], "zoom": [68, 105, 134, 137, 152, 153, 168, 174, 222], "screenshot": [68, 134, 137], "curvatur": [68, 173, 180, 234, 236], "popul": [2, 3, 68, 70, 72, 74, 79, 86, 90, 99, 109, 121, 124, 125, 149, 154, 156, 176, 177, 179, 182], "visibl": [68, 152, 221, 224, 228, 232], "zoom_factor": 68, "85": [26, 33, 34, 38, 41, 54, 68, 72, 74, 75, 79, 80, 83, 84, 86, 90, 91, 95, 99, 115, 121, 156, 170, 176, 178, 224, 231], "view_posit": 68, "view_cent": 68, "up_vector": 68, "pred_fodf": 68, "nath": [68, 171, 175], "schill": [68, 171, 175], "parvathaneni": [68, 175], "hainlin": [68, 175], "huo": [68, 175], "stepniewska": [68, 175], "reveal": [68, 73, 85, 86, 121, 175, 176], "untap": [68, 175], "62": [26, 33, 41, 54, 68, 71, 75, 79, 80, 81, 83, 84, 86, 90, 147, 175, 176, 223, 224], "220": [68, 80, 83, 84, 175, 226], "227": [68, 83, 84, 175, 225], "bermudez": [68, 175], "st\u0119pniewska": [68, 175], "captur": [68, 73, 74, 86, 105, 121, 142, 175], "arxiv": [68, 168, 175, 176, 180], "preprint": [68, 128, 175], "1911": [68, 83, 175, 228], "07927": [68, 175], "histology_resdnn": [68, 96], "pattern": [70, 117, 170, 177], "hand": [22, 70, 74, 163, 168], "nest": [70, 137, 142, 168, 170, 174, 175, 176, 177, 180], "log": [8, 11, 15, 17, 22, 70, 73, 74, 75, 90, 99, 131, 138, 141, 168, 170, 171, 174, 175, 176, 177, 182, 219, 229, 239, 240], "likelihood": [70, 90, 117, 176, 177], "hastie2008": 70, "rokem2014": [70, 91, 176], "imprevi": 70, "conduct": [70, 79, 156, 176, 223, 233], "cross_valid": [70, 183, 226], "dpd": [70, 91, 95, 123, 176], "xval": [70, 226], "centrum": [70, 91], "semioval": [70, 91], "cso": 70, "cc_vox": 70, "38": [26, 34, 37, 38, 41, 47, 54, 68, 70, 72, 75, 79, 80, 81, 83, 84, 86, 90, 91, 95, 99, 103, 106, 134, 176, 224], "cso_vox": 70, "dti_model": 70, "dti_cc": 70, "kfold_xval": [70, 96, 183], "csd_cc": 70, "dti_cso": 70, "csd_cso": 70, "scatter": [70, 83], "focus": [70, 163], "set_size_inch": 70, "legend": [70, 83, 86, 87, 95, 121, 122, 130], "loc": [70, 83, 86], "this_ax": 70, "cc_dti_r2": 70, "pearsonr": 70, "cc_csd_r2": 70, "cso_dti_r2": 70, "cso_csd_r2": 70, "r2": [70, 176, 225], "782881752597": 70, "805764364116": 70, "431921832012": 70, "604806420501": 70, "pretti": [7, 70], "hasti": [70, 91, 176], "tibshirani": 70, "friedman": 70, "mine": [70, 180], "springer": [70, 176, 177], "verlag": [70, 177], "berlin": 70, "chan": [23, 70, 176, 225], "aganj2010": [71, 147], "160": [2, 3, 71, 79, 80, 83, 84, 87, 171, 225], "apart": [71, 170, 171, 172, 176, 239], "peak_indic": [71, 82, 173, 176], "maxima": [71, 72, 173, 176, 224], "enough": [71, 146, 170, 180], "rectangular": [71, 79, 100, 239, 240], "splenium": [71, 79], "13": [1, 24, 26, 31, 34, 37, 38, 41, 54, 71, 75, 79, 80, 81, 83, 84, 86, 87, 89, 115, 117, 162, 163, 176, 180, 181, 221, 224, 228, 230, 231, 232, 233, 237], "43": [26, 34, 37, 38, 41, 54, 71, 75, 79, 80, 81, 83, 84, 86, 176, 226], "74": [26, 37, 41, 54, 71, 75, 79, 80, 81, 83, 84, 86, 115, 224], "csaodf": 71, "csa_odfs_actor": 71, "plasma": [71, 72, 78, 80, 84, 85, 90, 91, 93, 119, 122], "csa_odf": 71, "lenglet": [71, 147, 176], "sapiro": [71, 147, 176], "yacoub": [71, 147, 176], "ugurbil": [71, 147, 176], "harel": [71, 147, 176], "aug": [71, 147], "554": [71, 75, 83, 86, 147, 176, 178, 227], "66": [8, 26, 34, 37, 41, 54, 71, 75, 80, 81, 83, 84, 86, 115, 147, 176, 224], "22365": [71, 147, 176], "reconst_csa": [71, 96, 221], "tournier2007": [72, 85], "proce": [72, 91, 176], "There": [5, 8, 13, 14, 15, 22, 72, 85, 90, 109, 114, 142, 148, 158, 168, 170, 171, 174, 175, 176, 177, 178, 239, 244], "cuboid": [72, 85, 176, 182, 198], "mask_for_response_ssst": [72, 183], "meet": [1, 2, 3, 72, 75, 85, 101, 163, 171, 175, 176, 180, 228, 229, 230, 231, 232, 234], "ident": [72, 79, 82, 87, 97, 100, 143, 144, 168, 174, 176, 180, 181, 183, 217, 230, 234], "nvoxel": 72, "tupl": [72, 97, 124, 168, 170, 171, 174, 175, 176, 177, 178, 180, 181, 182, 222, 225, 244], "0014": [72, 91], "00029": [72, 91], "416": [72, 80, 83, 84, 90, 91, 226], "206": [2, 3, 72, 80, 83, 84, 91, 225], "radial": [72, 73, 74, 84, 86, 91, 93, 162, 170, 176, 180, 182, 199, 200, 224, 244], "21197": 72, "doubl": [5, 72, 73, 142, 168, 170, 172, 173, 176, 177, 178, 180, 217, 223, 231], "single_tensor_odf": [72, 90, 183], "evec": [72, 79, 90, 95, 121, 147, 176, 178, 182, 183, 199, 200], "response_odf": [72, 90], "1d": [72, 90, 113, 145, 168, 170, 172, 173, 175, 176, 177, 178, 179, 180, 182, 208, 236], "response_actor": [72, 90], "csd_respons": 72, "calibr": [72, 90, 109, 156, 162, 176, 182, 197, 198, 227], "eigenvector": [72, 84, 121, 168, 172, 176, 178, 180, 182, 199, 200, 217, 222, 239], "tax2014": [72, 90], "fat": [72, 90, 176], "converg": [72, 74, 83, 84, 90, 97, 117, 168, 170, 172, 176, 177], "recursive_respons": [72, 90, 183], "shorten": [7, 72, 90], "mean_diffus": [72, 79, 80, 183, 219], "wm_mask": [72, 89], "logical_and": 72, "0011": 72, "peak_thr": [72, 90, 176], "init_fa": [72, 90, 176], "init_trac": [72, 90, 176], "0021": [72, 90, 176], "pancak": [72, 90], "response_sign": 72, "on_spher": [72, 90, 176, 183], "csd_recursive_respons": 72, "recurs": [72, 90, 162, 168, 170, 176], "portion": [72, 83, 90, 176], "55": [26, 33, 34, 38, 41, 54, 72, 75, 79, 80, 83, 84, 86, 87, 90, 91, 95, 116, 134, 137, 176, 218, 224], "csd_odf": 72, "30x30": 72, "fodf_peak": [72, 90, 91], "getproperti": [72, 91], "setopac": [72, 91], "csd_both": 72, "fibr": [72, 85, 171, 172, 173, 176, 182, 198, 243], "super": [72, 85, 114, 162, 172, 173, 176, 182, 198, 243], "resolv": [8, 72, 73, 74, 78, 85, 119, 156, 172, 173, 176, 182, 198, 222, 223, 236, 243], "1459": [72, 83, 85, 172, 173, 176, 221, 243], "1472": [72, 80, 83, 85, 172, 173, 176, 221, 243], "tax": [23, 72, 74, 90, 176, 227], "vo": [72, 90], "viergev": [72, 74, 90], "86": [26, 37, 41, 54, 72, 75, 80, 81, 83, 84, 86, 90, 103, 115, 224], "reconst_csd": [72, 96, 221], "expans": [74, 84, 88, 89, 156, 170, 176, 178], "dt": [73, 74, 75, 121, 123, 156, 174, 176, 178, 179, 239], "biolog": [74, 83, 87, 156, 176], "kt": [73, 74, 75, 121, 156, 176, 178, 183], "jensen2005": [74, 86, 156], "character": [74, 75, 79, 81, 86, 156, 176, 178], "microstructur": [74, 75, 80, 81, 83, 84, 86, 88, 89, 156, 162, 175, 176, 182, 200, 219], "heterogen": [74, 121, 156, 170], "jensen2010": [74, 156], "moreov": [74, 81, 86, 114, 156, 173, 243], "concret": [74, 75, 156, 182], "biophys": [74, 75, 79, 86, 87, 156, 176, 180], "axon": [74, 75, 79, 80, 84, 86, 87, 121, 156, 176, 228], "tortuos": [74, 75, 156, 183, 219], "fierem2011": [74, 75, 156], "sphx_glr_examples_built_reconstruction_reconst_dki_micro": [], "netohe2015": [74, 86, 156], "express": [73, 74, 81, 83, 91, 92, 143, 144, 170, 171, 176, 177, 180, 182, 222, 243], "s_": [73, 74, 83, 100, 176, 178], "bd": [74, 83, 176, 178], "mathbf": [74, 79, 81, 83, 88, 89, 100, 142, 144, 156, 176, 180, 239, 240, 241], "s_0": [74, 79, 81, 83, 88, 89, 156, 176, 178], "absenc": [74, 83], "sensit": [74, 75, 83, 84, 86, 95, 105, 142, 176, 226], "sum_": [74, 89, 91, 100, 170, 176, 243], "d_": [73, 74, 79, 81, 100, 156, 176, 239, 240], "ij": [73, 74, 176, 239, 240], "w_": [73, 74, 176], "ijkl": [73, 74, 176], "antipod": [74, 79, 156, 170, 171, 172, 176, 224], "symmetri": [74, 79, 156, 170, 171, 172, 176, 243], "wijkl": [74, 178], "xxxx": [74, 176], "yyyi": [74, 176], "zzzz": [74, 176], "xxxy": [74, 176], "xxxz": [74, 176], "xyyi": [74, 176], "yyyz": [74, 176], "xzzz": [74, 176], "yzzz": [74, 176], "xxyi": [74, 176], "xxzz": [74, 176], "yyzz": [74, 176], "xxyz": [74, 176], "xyyz": [74, 176], "xyzz": [74, 176], "compare_map": [74, 84, 183], "gaussian_filt": [74, 75], "fraw": [74, 75, 76, 77, 82, 83, 84, 85, 86, 93, 94], "taxcmw2015": 74, "netohe2012": 74, "might": [6, 7, 12, 22, 74, 84, 85, 95, 110, 131, 146, 148, 168, 170, 172, 173, 174, 175, 176, 177, 182, 191, 192, 222, 230], "favor": 74, "fwhm": [74, 75], "pioneer": 74, "sphx_glr_examples_built_preprocessing_denoise_gibb": [], "gauss_std": [74, 75], "data_smooth": [74, 75], "dkifit": [74, 75], "diffusionkurtosisfit": [74, 183], "rd": [73, 74, 147, 148, 176, 182, 183, 199, 200], "diffusionkurtosisifit": 74, "Of": [7, 74, 168], "cours": [7, 15, 21, 74, 82, 87, 163, 168, 239], "analog": [74, 75, 168], "theoret": [5, 24, 74, 89, 93, 100, 168, 176], "decoupl": [74, 86], "veraar2011": 74, "fit_label": [74, 84, 181], "map_kwarg": [74, 84, 181], "2e": [74, 90, 176], "diffusion_tensor_measures_from_dti_and_dki": 74, "underestim": [74, 81], "ak": [73, 74, 170, 176, 182, 183], "rk": [73, 74, 176, 182, 183], "kurtosis_tensor_standard_measur": 74, "behaviour": [23, 74, 112, 168, 176, 180, 224], "confin": [74, 170, 176], "compartment": [74, 81, 86, 121, 176], "myelin": [74, 75, 79], "sheath": 74, "pronounc": 74, "perpendicularli": 74, "amplitud": [74, 81, 142, 176, 239], "band": [74, 176], "dark": 74, "decai": [74, 83, 176, 239], "consequ": [74, 83, 95, 121, 156], "tendenc": [74, 179], "inadequ": 74, "sign": [5, 74, 83, 105, 168, 170, 180, 226, 230, 240, 243], "parametr": [2, 3, 74, 142, 168, 171, 176, 177, 224], "perron2015": 74, "netohe2018": [74, 86], "unring": [24, 74, 154, 162], "overcom": [74, 86, 123, 176], "powder": [74, 86], "physic": [74, 83, 84, 89, 95, 143, 156, 168, 170, 176, 178, 181, 182, 201, 242], "delaha2020": 74, "section": [5, 7, 8, 17, 22, 73, 74, 83, 114, 138, 148, 162, 170, 171, 176, 178, 180, 223, 225, 227, 230, 231], "though": [74, 103, 168, 176, 180, 239, 240], "fit_method": [74, 83, 89, 95, 176, 182, 199, 200, 234], "cl": [74, 75, 176], "cwl": [74, 176], "unconstrain": [74, 89, 168, 170], "unplaus": 74, "mosek": [74, 84, 89], "solver": [74, 84, 89, 168, 170, 176, 222], "www": [1, 74, 84, 89, 142, 143, 170, 174, 176, 180], "com": [2, 3, 7, 8, 10, 11, 17, 18, 19, 74, 84, 89, 101, 146, 148, 149, 150, 157, 170, 173, 180, 182, 184], "cvxpy_solv": [74, 84, 89, 176], "greatli": [74, 84], "solut": [74, 76, 84, 97, 117, 134, 147, 162, 168, 170, 176, 180], "atyp": 74, "scenario": [74, 103], "counterpart": 74, "unexpect": [74, 81, 221], "qualit": [74, 228], "dkimodel_plu": 74, "dkifit_plu": 74, "pure": [74, 144, 170, 172], "kurtosis_tensor_standard_measures_plu": 74, "obviat": 74, "dkifit_noisi": 74, "dkifit_noisy_plu": 74, "kurtosis_tensor_standard_measures_noisi": 74, "unsmooth": 74, "hansen2013": 74, "glennr2015": 74, "mkt": [74, 176, 183], "kfa": [74, 176, 183, 230, 234], "measures_from_kurtosis_tensor_onli": 74, "report": [74, 83, 176, 219, 226, 233], "jh": [74, 75, 86, 156, 176], "helpern": [74, 75, 86, 156, 176, 182, 199], "ja": [74, 75, 86, 156, 176], "ramani": [74, 86, 156, 182, 199], "lu": [74, 86, 95, 156, 168, 176, 182, 199, 200], "h": [7, 74, 75, 86, 90, 91, 97, 98, 138, 141, 147, 155, 156, 168, 170, 172, 175, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 226], "kaczynski": [74, 86, 156, 182, 199], "diffusion": [1, 74, 86, 156, 176, 182, 199], "quantif": [74, 86, 123, 156, 176, 179, 182, 199], "non_gaussian": [74, 86, 156], "53": [26, 33, 34, 37, 38, 41, 54, 71, 74, 75, 80, 83, 84, 86, 95, 104, 107, 145, 156, 176, 182, 199, 200, 226, 236], "1432": [74, 80, 86, 156, 182, 199, 228], "1440": [74, 83, 86, 156, 221], "nmr": [74, 90, 156, 170, 176, 182, 200], "biomedicin": [74, 156, 176], "698": [74, 80, 83, 156, 176, 217], "710": [74, 75, 80, 83, 156, 176, 217], "177": [74, 75, 80, 83, 84, 156, 176, 226], "188": [74, 75, 80, 83, 84, 156, 176], "poot": 74, "dh": 74, "heck": 74, "blockx": 74, "linden": 74, "verhoy": 74, "138": [74, 83, 84, 147, 217, 224], "145": [74, 80, 83, 84, 221, 224], "ferreira": [74, 86, 156, 176], "correia": [1, 74, 81, 86, 156, 171, 176, 180], "master": [7, 9, 12, 17, 18, 19, 22, 74, 217, 219, 222, 224, 226, 229], "dissert": 74, "bachelor": 74, "programin": 74, "biomed": [2, 3, 74, 145, 176], "faculti": 74, "scienc": [23, 74, 145, 170, 180], "repositorio": 74, "ul": 74, "pt": [23, 74, 130, 180, 228], "bitstream": [65, 74, 134], "10451": [74, 75], "8511": 74, "ulfc104137_tm_rafael_henriqu": 74, "pdf": [74, 76, 77, 97, 143, 168, 176, 178, 182, 183, 184, 226, 235], "lund": [74, 176], "te": [74, 180], "sangil": [74, 176], "sn": [74, 75, 85, 86, 147, 170, 176], "experiment": [74, 162, 176, 178], "computationally393fast": 74, "69": [26, 37, 41, 54, 74, 75, 80, 83, 84, 86, 87, 94, 99, 103, 224], "1754": [74, 176, 223], "1760": [74, 83, 176, 228], "394doi": 74, "24743": [74, 176], "glenn": [74, 162, 176], "gr": [23, 74], "diffusional387kurtosi": 74, "biomedicine28": 74, "448": [74, 84, 176, 226], "459": [74, 80, 83, 84, 94, 176, 217], "nbm": [74, 176], "3271": [74, 83, 176], "nune": [74, 86, 156, 176], "rg": [74, 86, 156, 176], "geometri": [74, 86, 121, 156, 166, 176, 178, 180, 183, 221, 226], "novel": [1, 74, 75, 84, 86, 121, 156, 176, 178], "biomark": [74, 86, 121, 156, 176, 178], "99": [26, 37, 38, 41, 54, 74, 75, 80, 81, 83, 84, 86, 99, 103, 121, 156, 170, 176, 178, 224], "cmw": 74, "ott": 74, "ma": [23, 74, 128], "dijkhuizen": 74, "rekindl": 74, "794": [74, 83, 218], "808": [74, 80, 218], "scientif": [4, 5, 74, 75, 80, 83, 85, 86, 134, 146, 147, 171, 176], "160072": [2, 3, 74, 75, 85, 86, 147], "sdata": [2, 3, 74, 75, 85, 86, 147, 171], "dela": [74, 84, 89, 170, 171, 176, 235, 236], "haij": [74, 84, 89, 170, 171, 176, 235, 236], "program": [74, 84, 89, 142, 145, 170, 171, 176, 182, 205], "209": [74, 80, 83, 84, 170, 171, 176, 182, 200, 225], "116405": [74, 84, 170, 171, 176], "reconst_dki": [74, 96, 219], "hinder": [75, 84, 176, 178], "fierem2013": 75, "influenc": [75, 81, 171], "intra": [2, 3, 75, 86, 121, 176, 182, 201], "extra": [4, 75, 81, 86, 98, 121, 138, 141, 143, 168, 170, 174, 176, 177, 181], "cellular": [75, 86, 121, 176], "fierem2012": 75, "distinguish": [75, 170, 180, 181, 182, 204, 205], "degener": [75, 170, 180], "dki_micro": [75, 183], "sphx_glr_examples_built_reconstruction_reconst_dki": [], "kurtosismicrostructuremodel": [75, 183], "dki_micro_model": 75, "meaning": [6, 75, 84, 176], "fieremans2011": 75, "planar": [75, 88, 89, 170, 171, 180, 183], "criteria": [75, 176, 180], "articl": [1, 2, 3, 75, 81, 88, 89, 101, 148, 149, 150, 170, 172, 176], "publish": [75, 81, 89, 176, 228], "nevertheless": 75, "predefin": [75, 172, 177], "well_aligned_mask": 75, "cp": [75, 158, 182, 214], "isnan": [75, 79, 224], "dki_micro_fit": 75, "kurtosismicrostructurefit": 75, "awf": [75, 176, 183], "tort": [75, 170, 177, 182], "im0": [75, 86], "im1": [75, 86], "kurtosis_microstructural_measur": 75, "overlaid": [75, 91, 181], "kim": 75, "grossman": [75, 105, 106, 107, 157, 168], "ri": 75, "ingles": 75, "demyelin": 75, "proceed": [75, 83, 85, 176, 177, 181, 182, 204], "20th": 75, "annual": [1, 2, 3, 75, 171, 176], "societi": [75, 83, 85, 90, 170, 176, 177, 180, 181, 182, 204], "melbourn": 75, "australia": 75, "benitez": 75, "falangola": 75, "deardorff": 75, "spampinato": 75, "babb": 75, "ferri": 75, "alzheim": 75, "diseas": [75, 148], "progress": [8, 18, 75, 87, 90, 109, 148, 157, 162, 168, 172, 175, 182, 184, 194, 211, 219, 231, 234], "ajnr": 75, "am": [8, 18, 22, 75], "neuroradiol": 75, "34": [26, 28, 31, 33, 37, 41, 54, 75, 80, 81, 83, 84, 86, 103, 145, 176, 178, 224, 231, 236], "2105": [75, 230], "2112": [75, 83, 230], "3174": [75, 83], "a3553": 75, "reconst_dki_micro": [75, 96], "wedeen08": 76, "keyhol": [76, 176], "diffusionspectrummodel": [76, 77, 78, 119, 183, 218], "taiwan_ntu_dsi": [2, 3, 76, 77, 82, 94], "96": [26, 33, 37, 41, 54, 75, 76, 77, 80, 82, 83, 84, 86, 94, 147, 224], "dsmodel": [76, 77], "dataslic": [76, 77, 82, 94], "dsfit": [76, 176], "724": [76, 80, 82, 83, 84, 93, 180, 217, 222], "fashion": [76, 83, 156, 168, 175, 180], "17": [26, 33, 41, 54, 75, 76, 80, 83, 84, 86, 87, 93, 96, 117, 123, 129, 170, 175, 176, 180, 224, 228], "345": [76, 83, 84, 88, 89, 176, 226], "ndindex": [76, 90, 183, 224, 226], "disc": [76, 170], "memmap": 76, "mind": [5, 76, 115, 130, 176], "gbyte": 76, "tuch04": 76, "fig_hist": [76, 95, 130], "dsi_gfa": 76, "sphx_glr_examples_built_reconstruction_reconst_dsi_metr": [], "41": [26, 34, 37, 41, 54, 72, 75, 76, 80, 83, 84, 86, 105, 106, 107, 115, 157, 162, 168, 172, 223, 224, 235], "1267": [76, 219], "1277": [76, 220], "52": [26, 33, 38, 41, 54, 72, 75, 76, 80, 81, 83, 84, 86, 90, 96, 135, 178, 224, 229], "1358": [76, 83, 221], "1372": 76, "reconst_dsi": [76, 96], "rtop": [77, 84, 87, 94, 176, 178, 181, 182, 183, 202, 217], "displac": [73, 77, 83, 84, 87, 94, 101, 142, 156, 157, 168, 176, 178, 180, 181, 182, 185, 186, 239], "msd": [77, 84, 86, 87, 94, 176, 178, 182, 183, 202], "wu2007": [77, 94], "wu2008": [77, 94], "qgrid_siz": [77, 176], "filter_width": [77, 176], "rtop_sign": [77, 94, 176, 183], "rtop_pdf": [77, 94, 176, 183], "mse": [77, 94], "leav": [18, 22, 77, 168, 170, 172, 176, 178, 180], "rtop_pdf_norm": 77, "msd_norm": 77, "msd_discret": [77, 176, 183], "ax1": [77, 80, 90, 94, 123], "add_subplot": [77, 80, 94, 117], "ind": [77, 80, 94, 176, 179, 180], "ax2": [77, 80, 94, 123], "ax3": [77, 80, 94], "621": [75, 77, 80, 83, 86, 94, 176, 217], "hybrid": [77, 84, 94, 176], "617": [75, 77, 80, 83, 86, 94, 176, 217], "629": [75, 77, 83, 94, 176, 217], "858": [77, 81, 83, 94, 176, 218], "865": [77, 94, 176, 219], "reconst_dsi_metr": [77, 96], "canales10": [78, 119], "goal": [78, 119, 147, 157], "multi_tensor_odf": [78, 92, 119, 122, 183], "diffusionspectrumdeconvmodel": [78, 119, 183], "btabl": [78, 119], "dsi515btabl": [78, 119], "0015": [78, 92, 119, 122, 176, 178], "0003": [78, 92, 119, 122, 176, 178], "subdivid": [78, 92, 119, 122, 170, 172, 182, 183, 224], "odf_gt": [78, 119], "dsi_model": [78, 119], "dsi_odf": [78, 119], "dsid_model": [78, 119], "dsid_odf": [78, 119], "odf_actor": [78, 79, 80, 92, 119, 122], "rotatex": [78, 84, 92, 93, 100, 119, 122, 125], "90": [26, 33, 34, 38, 41, 54, 75, 78, 80, 83, 84, 86, 90, 92, 93, 100, 119, 121, 122, 125, 173, 176, 178, 182, 214, 215, 224], "136": [78, 80, 83, 84, 96, 119, 176, 224], "149": [78, 80, 83, 84, 119], "reconst_dsid": [78, 96, 219], "colleagu": [79, 156], "basser1994": [79, 156], "influenti": [79, 156], "commonli": [79, 156], "bmathbf": 79, "definit": [5, 79, 83, 89, 91, 98, 144, 156, 162, 168, 170, 172, 173, 176, 219, 222, 224, 226, 231, 234, 243], "quadrat": [79, 156, 176, 180], "pmatrix": [79, 88, 89, 156, 176, 239, 240], "xx": [79, 156, 239, 240], "xz": [79, 156, 239, 240], "yx": [79, 156, 239, 240], "yy": [79, 156, 239, 240], "yz": [79, 156, 239, 240], "zx": [79, 156], "zy": [79, 156], "zz": [79, 156, 239, 240], "covari": [79, 88, 89, 156, 176], "diagon": [79, 148, 156, 176, 182, 209], "numer": [4, 79, 84, 142, 162, 168, 170, 176, 178, 231, 233, 239], "recov": [79, 87, 95, 110, 175, 176, 240, 243], "triangular": [79, 170, 171, 172, 174, 176], "dxx": [79, 156, 176, 182, 200], "dxy": [79, 156, 176, 182, 200], "dyi": [79, 156, 176, 182, 200], "dxz": [79, 156, 176, 182, 200], "dyz": [79, 156, 176, 182, 200], "dzz": [79, 156, 176, 182, 200], "tensor_v": 79, "lower_triangular": [79, 183], "quadratic_form": [79, 176, 183], "eigen": [79, 176, 178], "That": [79, 83, 143, 144, 168, 176, 180], "whether": [22, 79, 114, 146, 156, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 197, 198, 200], "unrestrict": 79, "mathemat": [4, 79, 89, 100, 168, 176, 180, 222, 242, 243], "frac": [73, 79, 100, 142, 144, 156, 170, 176, 177, 178, 180, 243, 244], "lambda_1": [79, 176, 239, 240], "lambda_2": [79, 176, 239, 240], "lambda_3": [79, 176, 239, 240], "carefulli": [79, 152], "pack": 79, "wrap": [79, 138, 141, 168, 175, 176, 180, 182, 191, 192, 193, 208, 210, 217, 227], "decreas": [79, 84, 87, 99, 103, 180, 219, 222], "fan": [79, 100], "color_fa": [79, 95, 145, 183], "possibli": [8, 79, 168, 179, 180, 217], "tensor_fa": 79, "viewer": [79, 137, 143, 244], "tensor_evec": 79, "complimentari": 79, "md1": 79, "tensors_md": 79, "md2": 79, "obvious": [22, 79], "quantiti": [79, 84, 87, 176], "pajevic1999": 79, "tensor_rgb": 79, "ellipsoid": [79, 95, 170, 221], "increas": [5, 79, 83, 84, 87, 109, 162, 168, 170, 175, 176, 180, 222, 226, 228, 231], "tensor_slic": [79, 95], "scalar_color": [79, 95], "tensor_ellipsoid": 79, "did": [8, 79, 95, 107, 157, 162, 170, 175, 233], "tensor_odf": 79, "reliabl": 79, "drawback": 79, "intermedi": [15, 79, 176, 180], "mislead": [79, 219, 230], "lead": [21, 73, 79, 95, 105, 143, 170, 176, 239], "fortun": [79, 92], "mattielo": [79, 156], "spectroscopi": [79, 156, 239], "pajev": 79, "reconst_dti": [79, 96, 219], "anderson2005": 80, "kaden2016": 80, "zucchelli2017": 80, "forecastmodel": [80, 183], "fetch_hbn": [80, 81, 183], "op": [80, 81, 123, 226, 244], "alexander2017": 80, "hbn": [80, 162], "pod2": [80, 171], "richiehalford2022": 80, "data_path": [80, 81], "ndaraa948vfh": [80, 81, 171], "dwi_path": [80, 81], "qsiprep": [80, 81], "hbnsiteru": [80, 81], "ndaraa948vfh_s": [80, 81], "hbnsiteru_acq": [80, 81], "64dir_spac": [80, 81], "t1w_desc": [80, 81], "preproc_dwi": [80, 81], "mask_img": [80, 81, 89, 171], "brain_mask": [80, 81, 147, 156, 182], "51": [26, 34, 37, 41, 54, 75, 80, 81, 83, 84, 86, 99, 170, 224], "mask_smal": [80, 81], "dec_alg": [80, 176], "fm": [80, 176], "f_fit": [80, 176], "d_par": [80, 176], "dpar": [80, 176, 183], "d_perp": [80, 176], "dperp": [80, 176, 183], "forecast_indic": 80, "shrink": [80, 180], "ax4": 80, "dpi": [80, 181], "magnif": 80, "kaden": [80, 86, 176], "zucchelli": [23, 80, 176, 217, 221, 225, 226], "miccai": [80, 93, 172, 176, 182, 193], "cdmri": [80, 176], "lm": [80, 171], "escalera": [80, 171], "ai": [80, 170, 171], "transdiagnost": [80, 171], "research": [23, 80, 142, 160, 171, 230], "pediatr": [2, 3, 80, 171], "mental": [80, 171], "health": [80, 171], "disord": [73, 80, 171], "sci": [2, 3, 80, 109, 124, 125, 148, 171, 177, 179, 182, 188, 209], "170181": [80, 171], "richi": [80, 171, 228], "halford": [80, 171, 228], "cieslak": [23, 80, 105, 171, 222, 228], "2022": [73, 80, 83, 99, 110, 145, 171, 175, 177, 182, 195, 229, 234, 235], "reconst_forecast": [80, 96, 221], "parenchyma": 81, "cerebr": [81, 83], "spinal": [81, 83, 128, 172], "morphologi": [81, 171], "enlarg": 81, "atrophi": 81, "pathologi": 81, "expand": [15, 81, 90, 168, 219, 233], "pasternak2009": 81, "s_0fe": 81, "thebdiffus": 81, "hoy2014": 81, "henriques2017": 81, "freewatertensormodel": [81, 183], "fwdtimodel": 81, "fwdtifit": 81, "freewatertensorfit": [81, 183], "dtimodel": 81, "dtifit": [81, 239, 240], "dti_fa": 81, "dti_md": 81, "fadiff": 81, "5e": [81, 88, 170, 176, 178], "mddiff": 81, "in_vivo_free_water_dti_and_standard_dti_measur": 81, "vivo": [73, 81, 86], "periventricular": 81, "abl": [5, 7, 17, 81, 84, 134, 137, 138, 141, 146, 156, 176, 219, 224], "problemat": 81, "reproduc": [81, 87, 88, 126, 154, 170, 171, 175, 177, 180, 182, 222, 226, 230], "inflat": [81, 126], "in_vivo_free_water_dti_and_standard_dti_correct": 81, "dismiss": 81, "sochen": 81, "gur": 81, "intrat": 81, "assaf": [81, 178], "717": [80, 81, 83, 86, 234], "22055": 81, "hoi": 81, "kecskemeti": 81, "323": [62, 80, 81, 83, 84, 170, 176, 178, 226], "333": [80, 81, 83, 84, 226], "09": [2, 3, 26, 41, 54, 75, 80, 81, 83, 84, 86, 171, 176, 230, 231], "053": 81, "jean": [1, 23, 81, 176, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230], "peterson": [1, 2, 3, 81, 176, 219], "rescienc": [1, 81, 176], "reconst_fwdti": [81, 96, 220], "yeh2010": 82, "think": [8, 18, 82, 126, 142, 176, 178, 239], "generalizedqsamplingmodel": [82, 183], "gqmodel": 82, "sampling_length": [82, 176], "gqfit": 82, "gqpeak": 82, "gqpeak_valu": 82, "gqpeak_indic": 82, "reconst_gqi": [82, 96, 219], "perfus": [83, 145, 156, 162, 176, 182, 201], "sequenc": [83, 100, 113, 114, 142, 143, 144, 156, 168, 170, 171, 175, 176, 177, 178, 180, 181, 182, 184, 230, 239, 240, 241], "understood": [83, 156, 180], "stejskal": [83, 142, 156, 178, 182, 201, 239, 240, 241], "tanner": [83, 142, 148, 156, 178, 182, 201, 239, 240, 241], "stejskal65": [83, 156, 182, 201], "lebihan84": [83, 156, 182, 201], "brownian": [83, 156], "thermal": [83, 95, 156], "vascular": [83, 156], "blood": [83, 156], "pressur": [83, 156], "pseudo": [83, 85, 156, 170, 176, 181, 182, 201], "laid": [83, 156, 176], "macroscop": [83, 156, 176], "fe": 83, "weigh": 83, "ivimmodel": [83, 176], "read_ivim": [83, 183], "21": [2, 3, 26, 33, 34, 37, 38, 41, 48, 49, 54, 75, 80, 83, 84, 86, 88, 89, 163, 176, 218, 219, 224, 236], "regist": [22, 83, 97, 98, 99, 100, 101, 105, 106, 107, 109, 134, 149, 150, 157, 168, 174, 182, 183, 189, 222, 223, 230], "bvalu": [83, 85, 86, 121, 170, 174, 176, 182, 190, 191, 197, 198, 199, 200, 201], "54": [2, 3, 26, 37, 41, 54, 75, 80, 81, 83, 84, 86, 87, 90, 131, 171, 176, 225], "midwai": 83, "axhlin": 83, "axvlin": 83, "ivim_data_slic": 83, "heat": 83, "hair": 83, "medial": 83, "mixtur": [83, 168], "x1": [83, 176, 180], "x2": [83, 176, 180], "y1": [83, 170], "y2": [83, 170], "csf_slice": 83, "exponenti": [83, 176, 226], "pass": [22, 83, 97, 131, 138, 168, 170, 173, 174, 175, 176, 177, 179, 180, 181, 182, 193, 208, 223], "trr": [83, 176], "stage": [8, 83, 97, 106, 156, 170, 176, 182, 201], "guess": [83, 168, 170, 176], "split_b_d": [83, 156, 176, 182, 201], "mono": [83, 168, 176], "logarithm": [83, 89, 176, 180], "split_b_s0": [83, 176, 182, 201], "s0_": 83, "d_star": [83, 176, 182, 183, 201], "two_stag": [83, 176], "flag": [8, 18, 83, 109, 131, 147, 162, 168, 170, 176, 178, 182, 186, 220, 221, 226, 234], "ivimfit": [83, 183], "model_param": [83, 176, 219], "arrang": [83, 171, 178, 180], "ivimparam": 83, "20x20": 83, "height": [83, 221], "estimated_param": 83, "heatmap": [83, 90], "def": [83, 87, 98, 100, 103, 105, 106, 112, 113, 114, 125, 130, 134, 137, 138, 141, 168, 170, 174, 176, 178, 226], "plot_map": 83, "raw_data": 83, "clim": 83, "page": [2, 3, 5, 8, 11, 13, 14, 16, 17, 22, 83, 112, 113, 148, 170, 217, 219, 222, 226, 228, 235], "s0_predict": [83, 176, 182, 183, 201], "predicted_s0": 83, "measured_s0": 83, "perfusion_fract": [83, 176, 182, 183, 201], "perfusion_coeff": 83, "diffusion_coeff": 83, "refin": [83, 97, 109, 168, 176, 177, 182, 183, 209], "varpro": [83, 176, 228, 229, 235], "mix": [83, 148, 162, 175, 176, 182, 186, 187, 220, 221, 223], "farooq16": 83, "convex": [83, 84, 97, 176], "basin": 83, "fadnavis19": 83, "ivimmodel_vp": 83, "ivimfit_vp": 83, "ivim_trr_predict": 83, "s0_est": 83, "f_est": 83, "d_star_est": 83, "d_est": 83, "text_fit": 83, "param": [83, 138, 141, 168, 176, 180, 182, 217, 222, 226, 236], "3f": 83, "4f": [83, 170], "5f": 83, "gca": 83, "ivim_predict_vp": 83, "ivim_voxel_plot": 83, "januari": [2, 3, 83, 145, 156, 163, 182, 201], "1965": [83, 156, 178, 180, 182, 201, 229], "presenc": [83, 89, 95, 156, 178, 182, 201, 243], "chemic": [83, 156, 178, 182, 201], "288": [83, 84, 156, 178, 182, 201, 225], "bibcod": [83, 156, 182, 201], "1965jchph": [83, 156, 182, 201], "1695690": [83, 156, 182, 201], "deni": [83, 156, 176, 182, 201], "radiologi": [83, 156, 176, 182, 201], "168": [80, 83, 84, 156, 176, 182, 201, 225], "1988": [83, 156, 170, 176, 182, 201, 229, 239], "497": [83, 86, 156, 172, 173, 176, 178, 182, 201, 226, 243], "505": [80, 83, 86, 156, 176, 182, 201, 226], "shreya": [23, 83, 176, 221, 222, 223, 228, 229, 232, 233, 234, 235], "microlearn": [83, 176, 223], "machin": [15, 22, 83, 145, 168, 172, 176, 180, 217], "montreal": [23, 83, 163, 171, 176, 181, 182, 204], "canada": [83, 93, 163, 176, 181, 182, 204], "farooq": [83, 176], "hamza": [83, 176], "reconst_ivim": [83, 96], "ozarslan2013": [84, 87], "qiv": [84, 87, 176, 182, 183, 202], "teturn": 84, "ng": [84, 176, 182, 183, 202, 221], "interestingli": 84, "rtap": [84, 87, 156, 176, 182, 183, 202, 217], "rtpp": [84, 87, 156, 176, 182, 183, 202, 217], "delahaije2020": 84, "laplacian": [84, 87, 162, 176, 182, 202, 219], "fick2016a": 84, "mapmri": [84, 87, 156, 182, 183, 202, 217, 219, 220, 221, 222, 223, 230, 237], "187": [80, 83, 84], "big_delta": [84, 87, 170, 176, 182, 202, 220], "small_delta": [84, 87, 170, 176, 182, 202, 220], "0365": [84, 156], "0157": [84, 156], "radial_ord": [84, 87, 93, 176, 182, 202], "anisotropic_sc": [84, 176], "laplacian_regular": [84, 87, 176, 230], "regularization_weight": 84, "gcv": [84, 87, 176, 228], "craven1978": 84, "omit": [84, 168, 176, 180], "custom": [84, 85, 168, 175, 176, 182, 184, 219, 231], "positivity_constraint": [84, 176], "exist": [5, 21, 22, 84, 112, 113, 114, 121, 171, 174, 175, 176, 177, 180, 181, 182, 206, 217, 218, 221, 222, 226, 227, 231], "global_constraint": [84, 176], "everywher": [84, 162, 176], "pos_grid": [84, 176], "pos_radiu": [84, 176], "job": [84, 142, 180, 222], "viabl": 84, "impos": [84, 87, 89, 176], "extrapol": [84, 87, 176, 180], "beyond": [5, 84, 87], "desir": [84, 109, 114, 128, 168, 170, 172, 176, 177, 178, 180], "cvxpy": [4, 84, 89, 162, 170, 176, 220, 221, 222, 223, 230, 231], "map_model_laplacian_aniso": 84, "mapmrimodel": [84, 183], "laplacian_weight": [84, 87, 176, 182, 202], "map_model_positivity_aniso": 84, "map_model_both_aniso": 84, "map_model_plus_aniso": 84, "preset": [84, 87, 176], "faster": [84, 109, 112, 146, 162, 168, 172, 175, 176, 177, 180, 182, 191, 192, 218, 219, 224, 226, 238], "mapfit_laplacian_aniso": [84, 221], "mapfit_positivity_aniso": 84, "mapfit_both_aniso": 84, "mapfit_plus_aniso": 84, "cmapl": 84, "map_label": [84, 181], "mapmri_rtop": 84, "appear": [17, 22, 84, 134, 161, 171], "smoother": [84, 168, 176, 177, 180, 182, 185], "norm_of_laplacian_sign": [84, 176, 183], "mapmri_norm_laplacian": 84, "mapmri_map": 84, "proton": [84, 142, 241], "said": 84, "hosseinbor2013": 84, "composit": [84, 168], "fick2016b": 84, "puls": [84, 87, 142, 170, 171, 176, 178, 239, 241], "appar": [84, 152, 154, 162, 172, 176], "diamet": 84, "under": [5, 84, 85, 100, 106, 107, 168, 170, 171, 176, 181, 182, 185, 228, 229, 233, 237], "strong": 84, "protocol": [8, 84], "pore": [84, 176], "realist": 84, "map_model_both_ng": 84, "bval_threshold": [84, 176, 182, 202], "map_model_plus_ng": 84, "mapfit_both_ng": 84, "mapfit_plus_ng": 84, "ng_perpendicular": [84, 176, 183], "ng_parallel": [84, 176, 183], "mapmri_ng": 84, "clue": 84, "map_model_both_iso": 84, "mapfit_both_iso": 84, "noisier": 84, "sfu": [84, 93], "rutger": [23, 84, 171, 176, 219, 220, 222], "hj": [84, 171, 176], "craven": [84, 176], "spline": [84, 168, 176, 183], "1978": [80, 83, 84, 176, 229], "377": [83, 84, 147, 176, 226], "403": [83, 84, 176, 226], "hosseinbor": [84, 176], "bessel": [84, 176], "bfor": [84, 176], "650": [75, 83, 84, 176, 217], "670": [75, 80, 83, 84, 86, 176, 219], "dispers": [84, 86, 173], "isbi": [2, 3, 84, 93, 163, 171, 176, 224], "reconst_mapmri": [84, 96, 221], "msmt": [85, 162, 176, 228, 229, 231], "jeurissen2014": 85, "cerebrospin": [2, 3, 85, 90, 158, 182, 215], "overestim": [85, 176], "ssst": [85, 176], "otsu": [85, 156, 183, 219, 225], "powermap": 85, "unavail": 85, "dp": [6, 85, 180, 234], "unique_bvals_toler": [85, 176, 183], "auto_response_msmt": [85, 183], "mask_for_response_msmt": [85, 183], "response_from_mask_msmt": [85, 183, 232], "multishelldeconvmodel": [85, 183], "qball_model": 85, "qballmodel": [85, 183], "ap": [85, 176, 180], "anisotropic_pow": [85, 183, 219], "anisotropic_power_map": 85, "treat": [85, 168, 170, 171, 172, 176, 182], "hidden": [85, 117, 168, 171, 175, 176, 221, 230], "markov": [85, 117, 177, 224, 225], "hmrf": [85, 117], "nclass": [85, 117, 177], "initial_segment": [85, 117, 177], "final_segment": [85, 117, 177], "precis": [85, 86, 114, 142, 168, 170, 175, 176, 180, 219, 221, 226, 227], "mask_wm": [85, 176], "mask_gm": [85, 176], "mask_csf": [85, 176], "wm_fa_thr": [85, 176], "gm_fa_thr": [85, 176], "csf_fa_thr": [85, 176], "gm_md_thr": [85, 176], "csf_md_thr": [85, 176], "0032": [85, 176], "nvoxels_wm": 85, "nvoxels_gm": 85, "nvoxels_csf": 85, "precalcul": [85, 182, 189], "response_wm": [85, 176], "response_gm": [85, 176], "response_csf": [85, 176], "auto_response_wm": 85, "auto_response_gm": 85, "auto_response_csf": 85, "multishellrespons": [85, 183], "ubval": [85, 170, 176], "response_mcsd": 85, "wm_rf": [85, 176], "gm_rf": [85, 176], "csf_rf": [85, 176], "mcsd_model_simple_respons": 85, "mcsd_model": 85, "mcsd_fit": 85, "all_shm_coeff": [85, 176, 183], "vf": [85, 168], "volume_fract": [85, 176, 183], "sh_coeff": [85, 92, 176, 183], "csf_sh_coeff": 85, "gm_sh_coeff": 85, "wm_sh_coeff": 85, "mcsd_pred": 85, "mcsd_odf": 85, "reset_camera_tight": 85, "msdodf": 85, "411": [75, 83, 84, 85, 176, 226], "426": [84, 85, 226], "dell": [85, 90, 176], "acqua": [85, 90, 176], "milan": [85, 176], "itali": [85, 176], "reconst_mcsd": [85, 96], "implaus": 86, "mesoscop": 86, "contrari": [86, 112], "confound": [86, 95], "secondli": 86, "sphx_glr_examples_built_simulations_simulate_multi_tensor": [], "sphx_glr_examples_built_simulations_simulate_dki": [], "meval": [86, 92, 121, 122, 176, 178], "00099": [86, 121, 178], "00226": [86, 121, 178], "00087": [86, 121, 178], "loop": [86, 90, 117, 137, 138, 141, 142, 168, 170, 176, 177, 180, 222, 228, 234], "linspac": [86, 87, 130, 178, 180], "num": [86, 170, 218], "ang": 86, "91": [26, 33, 37, 41, 54, 75, 80, 81, 83, 84, 86, 87, 99, 171, 175, 224], "f_i": 86, "individu": [23, 86, 99, 100, 123, 125, 170, 175, 176, 178, 180, 219, 235], "a_i": 86, "msdki_model": 86, "msdki_fit": 86, "nrow": [5, 86, 87, 168, 181], "ncol": [86, 87, 103, 168, 181], "bbox_to_anchor": 86, "msdki_simul": 86, "curv": [86, 180], "art": [86, 162, 237], "sphx_glr_examples_built_preprocessing_denoise_nlmean": [], "sphx_glr_examples_built_preprocessing_denoise_localpca": [], "im2": 86, "im3": 86, "msdki_invivo": 86, "insur": [86, 176, 219], "intris": [86, 176], "di": [86, 234], "microscop": [73, 86, 88, 170, 176], "smt2f": [86, 176, 183], "smt2di": [86, 176, 183], "ufa2": 86, "smt2ufa": [86, 176, 183], "ufa": [86, 88, 89, 176, 181, 183], "msdki_smt2_invivo": 86, "confirm": [86, 88, 99], "rescal": [86, 176], "real": [8, 73, 86, 123, 130, 138, 141, 142, 144, 162, 168, 170, 173, 176, 178, 180, 243], "rn": [1, 86], "down": [8, 10, 86, 112, 130, 137, 143, 168, 170, 175, 176, 180, 183, 226, 232, 239, 240], "colleg": [86, 176], "shemesh": [73, 86, 176], "misestim": [86, 176], "press": [86, 176], "27606": [86, 176], "kelm": [86, 176], "carson": [86, 176], "rp": [86, 176], "dc": 86, "139": [80, 83, 84, 86, 115, 176, 224], "346": [80, 83, 84, 86, 116, 176, 180, 226], "359": [80, 83, 84, 86, 176, 226], "reconst_msdki": [86, 96], "sought": 87, "unsolv": 87, "fick2017": 87, "terminologi": 87, "au": [87, 171], "graphnet": [2, 3, 87, 171, 176], "sparsiti": [87, 91, 170, 176], "drastic": 87, "nervou": 87, "mous": [87, 137], "fetch_qtdmri_test_retest_2subject": [87, 183], "read_qtdmri_test_retest_2subject": [87, 183], "qtdmri": [87, 183], "retest": [2, 3, 87, 171], "mice": [2, 3, 87, 171], "freeli": 87, "citeabl": 87, "wassermann2017": 87, "cc_mask": [87, 171], "5m": [87, 171], "visualise_gradient_table_g_delta_rainbow": [87, 183], "dmri_acquisition_schem": 87, "isolin": [87, 176], "architectur": [87, 176, 228], "subplot_titl": 87, "subject1": 87, "subject2": 87, "data_": 87, "mask_": 87, "gtab_": [87, 176], "enumer": [87, 88, 100, 125, 126, 130, 180], "data_middle_slic": 87, "mask_middle_slic": 87, "tenmod": 87, "overlai": [87, 106], "mask_templ": 87, "greys_r": 87, "dmri_datasets_fa_with_ccmask": 87, "tau_min": 87, "tau_max": 87, "qtdmri_fit": 87, "cc_voxel": 87, "time_ord": [87, 176], "l1": [87, 91, 176, 177, 180], "cv": [87, 176], "qtdmri_mod": 87, "qtdmrimodel": [87, 183], "l1_regular": [87, 176], "l1_weight": [87, 176], "5th": [87, 176, 182, 200], "trend": 87, "topic": [9, 87], "commun": [5, 15, 87, 162, 168, 176, 227, 233, 238], "plot_mean_with_std": 87, "ind1": 87, "plotcolor": 87, "std_mult": 87, "lw": 87, "fill_between": 87, "005": [87, 178], "msd_": 87, "4e": 87, "10e": 87, "delta_grid": 87, "msd_grid": 87, "meshgrid": 87, "d_grid": 87, "d_level": 87, "1e": [87, 88, 93, 168, 170, 172, 173, 174, 176, 177, 182, 228], "contourf": 87, "1e3": 87, "1e5": 87, "dashdot": 87, "marker": [87, 148], "clarifi": [5, 87, 162, 225, 226, 228, 231, 234], "0091": 87, "14e": 87, "set_ylim": 87, "set_xlim": 87, "009": 87, "0185": 87, "cb": [87, 168], "set_label": 87, "qt_indices_msd": 87, "slowli": 87, "nearli": [87, 180], "perfectli": [87, 101, 168, 173], "slightli": [6, 87, 98, 168, 173, 176, 180, 243], "eas": [5, 87], "rtxp_": 87, "rtxp_grid": 87, "d_color": 87, "162": [80, 83, 84, 87, 225], "3e": [87, 88, 176], "22": [26, 31, 33, 41, 50, 52, 54, 62, 75, 80, 81, 83, 84, 86, 87, 93, 97, 98, 108, 116, 163, 168, 172, 176, 224, 227, 229, 234], "140": [2, 3, 44, 80, 83, 84, 87, 99, 100, 134, 149, 157, 168, 171, 182, 211, 224], "113": [83, 84, 87, 103, 135, 147, 224], "6e": 87, "16": [24, 25, 26, 33, 34, 37, 38, 41, 54, 75, 80, 81, 83, 84, 86, 87, 90, 93, 117, 126, 129, 133, 136, 145, 162, 163, 175, 176, 180, 181, 217, 218, 219, 225, 226, 228, 236, 237], "qt_indices_rtop": 87, "experienc": 87, "odd": [87, 172, 176, 231, 243], "arriv": 87, "notic": [8, 87, 100, 131, 143, 152, 168, 170, 171, 177, 180, 182], "experi": [83, 87, 106, 138, 148, 161, 171], "qt_indices_rtap": 87, "9e": 87, "15e": 87, "qt_indices_rtpp": 87, "bigger": [87, 170, 180], "asid": 87, "sharpening_factor": 87, "conclud": 87, "help": [5, 6, 8, 11, 13, 15, 21, 23, 87, 98, 109, 138, 141, 155, 159, 168, 170, 173, 176, 177, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 222, 226, 237, 238, 241], "tempor": [87, 142, 176, 239, 240], "reconst_qtdmri": [87, 96], "briefli": [88, 89], "summar": [88, 89, 179], "dtd": [88, 89, 176], "langl": [88, 89, 176], "otim": [88, 89, 176], "outer": [7, 88, 89, 168, 176], "product": [88, 89, 168, 170, 176, 177, 180, 182], "cumul": [88, 89, 176, 180], "pprox": [88, 89], "exp": [88, 89, 176, 180, 241], "inner": [88, 89, 168, 170, 176, 180], "eta": [68, 88], "ln": [88, 89], "s_1": [88, 89], "s_n": [88, 89], "ext": [88, 89, 176], "_1": [88, 89, 176, 239, 240], "_n": [88, 89, 176], "_i": [88, 89, 91, 176], "voigt": [88, 89, 176], "notat": [88, 89, 176, 223], "qte": [88, 171, 176], "fdata": [73, 88], "fmask": [73, 88], "qte_lte_pt": 88, "bten": [88, 170, 176, 178, 230, 231, 232], "lte": [88, 170], "61": [8, 25, 26, 34, 37, 38, 41, 54, 75, 80, 81, 83, 84, 86, 88, 112, 162, 170, 176, 177, 224, 233], "pte": [88, 170], "matrix_rank": 88, "qtimodel": [88, 89, 183], "qtifit": [88, 89, 183], "\u03bcfa": 88, "v_md": [88, 176, 183], "v_shear": [88, 176, 183], "shear": [88, 97, 131, 144, 157, 168, 170, 176, 177, 180, 182, 184, 219], "v_iso": [88, 176, 183], "c_md": [88, 176, 183], "c_mu": [88, 176, 183], "\u03bc": 88, "c_m": [88, 176, 183], "c_c": [88, 176, 183], "k_bulk": [88, 176, 183], "bulk": [88, 176, 180], "k_shear": [88, 176, 183], "k_mu": [88, 176, 183], "carl": [88, 89, 176], "fredrik": [88, 89, 176], "multidimension": [88, 89, 170, 176, 178, 230], "135": [80, 84, 88, 89, 115, 176, 224], "039": [31, 33, 88, 89, 176], "reconst_qti": [88, 96], "heteroskedast": 89, "mathrm": [89, 170, 176, 180, 239], "s_k": 89, "ldot": [89, 100], "ddot": 89, "semi": [89, 168, 170, 180], "succeq": 89, "violat": [83, 89], "unreli": [89, 175], "enfoc": 89, "semidefinit": [89, 171, 176], "sdp": [89, 176], "instruct": [5, 8, 10, 11, 13, 17, 19, 22, 89, 106, 107, 146, 217, 220, 222, 223, 226, 228, 231], "sc": [89, 142, 176, 180], "readili": 89, "licenc": 89, "latest": [16, 20, 89, 146, 162, 218, 234, 243], "html": [5, 22, 89, 142, 146, 170, 174, 180, 219, 221, 231], "routin": [89, 176, 180, 181, 235], "read_dib_217_lte_pte_st": [89, 183], "read_dib_70_lte_pte_st": [89, 183], "showcas": [89, 90, 152, 153, 155, 156, 158, 230], "richer": 89, "emul": 89, "shorter": [89, 126, 173, 180, 182], "scan": [89, 175], "patient": [89, 95, 148, 171, 179, 182], "clinic": [73, 89, 170, 176], "filip": 89, "szczepankiewicz": [89, 171], "szczepankiewicz_dib_2019": 89, "mark": [89, 103, 176, 180, 221], "_217": 89, "suffix": 89, "data_img": [89, 171], "gtab_217": 89, "data_217": 89, "downsampl": [89, 115, 130, 183, 224, 234], "_70": 89, "gtab_70": 89, "data_70": 89, "consider": [89, 100, 130, 176, 182, 197], "qtimodel_217": 89, "qtifit_217": 89, "qtimodel_unconstrain": 89, "qtifit_unconstrain": 89, "sdpdc": [89, 176], "qtimodel_constrain": 89, "qtifit_constrain": 89, "\u00b5fa": 89, "compare_qti_map": [89, 183], "clearli": [89, 160], "fall": [89, 168, 180, 182, 185, 229, 232], "sound": [8, 89, 100], "rich": 89, "despit": 89, "cost": [89, 91, 100, 168, 176, 177], "dens": [89, 110, 168, 170, 175, 235], "boito": [89, 176, 235], "feragen": [89, 176], "238": [84, 86, 89, 133, 176, 228], "118198": 89, "hoge": [89, 171], "waveform": [89, 171], "oil": [89, 171], "liquid": [89, 171], "crystal": [89, 171], "brief": [89, 112, 113, 171], "dib": [89, 171], "104208": [89, 171], "reconst_qtiplu": 89, "priori": [90, 117, 176], "rl": 90, "richardson1972": 90, "constantinides1997": 90, "promot": [90, 170, 176, 177, 221, 226], "rudin1992": 90, "abil": [8, 90, 101, 137, 153, 162, 229], "wise": [2, 3, 90, 126, 173, 176, 178, 180, 182], "symmetric362": [90, 171, 172, 176], "constructor": [90, 168, 170, 173, 176, 178, 221, 229], "7e": [90, 176], "csf_respons": [90, 176, 182], "gm_respons": [90, 176, 182], "8e": [90, 176], "adequ": [90, 176], "impuls": [90, 176], "imprecis": [90, 176], "acqua2007": 90, "0017": [90, 176], "0002": [18, 90, 176], "003": [90, 140, 176, 182], "0008": [90, 176, 182], "default_respons": 90, "auto_response_sst": 90, "00139919": [72, 90, 91], "0003007": [72, 90, 91], "7372408293461": [72, 90, 91], "estimated_respons": 90, "arang": [90, 112, 113, 114, 115, 176, 178, 180], "rec_respons": 90, "rec_response_sign": 90, "doesn": [8, 22, 90, 159, 170, 217, 218, 219, 221, 226, 235], "bear": 90, "recon_typ": [90, 176, 182], "n_coil": [90, 176, 182], "suitabl": [90, 171, 173, 176, 239, 240], "smf": [90, 176, 182], "isn": [90, 142, 170], "ipat": [90, 176, 182], "asset": [90, 176, 182], "cover": [90, 98, 131, 168, 174, 219], "wherein": 90, "inclus": [90, 168, 180], "neither": [90, 170, 177, 180], "f_iso": [90, 176, 183], "ax0": 90, "wm_iso_partit": 90, "rumbafit": [90, 183], "combined_odf_iso": [90, 176, 183], "rumba_odf": 90, "rumba_peak": 90, "exchang": [73, 90, 176], "demand": 90, "gb": [90, 176], "singleton": [90, 176, 182, 218, 221], "data_tv": 90, "rumba_global_odf": 90, "peak_direct": [90, 183, 228, 236], "pk": 90, "rumba_global_peak": 90, "1972": [90, 229], "bayesian": [90, 117, 162, 219], "josa": 90, "1364": [80, 83, 90, 230], "000055": 90, "constantinid": [90, 176], "atalar": [90, 176], "mcveigh": [90, 176], "1997": [83, 90, 176, 222, 229], "offici": [90, 162, 163, 176], "852": [83, 90, 176, 219, 222], "857": [80, 83, 90, 176, 218], "rudin": [90, 176], "osher": [90, 176], "fatemi": [90, 176], "1992": [90, 176, 229], "nonlinear": [2, 3, 90, 101, 145, 150, 168, 171, 176, 182, 189, 233, 236], "physica": [90, 176], "phenomena": [90, 176], "259": [80, 83, 84, 90, 176, 225], "268": [80, 83, 84, 90, 116, 176, 225], "0167": [90, 170, 176], "2789": [80, 83, 90, 176], "90242": [90, 176], "dellacqua2007": 90, "rizzo": [90, 176], "scifo": [90, 176], "clark": [90, 176], "scotti": [90, 176], "fazio": [90, 176], "bio": [90, 176], "462": [80, 84, 90, 176, 226], "472": [83, 84, 90, 176, 226], "tbme": [90, 176], "888830": [90, 176], "07": [2, 3, 26, 41, 54, 62, 75, 80, 83, 84, 86, 90, 96, 171, 173, 176], "067": [90, 147], "reconst_rumba": [90, 96], "dpp": [91, 234], "guid": [15, 20, 24, 91, 114, 170, 175, 221, 228, 231], "examin": [91, 103, 170, 176, 178, 237], "elast": [91, 176], "net": [91, 170, 175, 176, 180, 182, 195, 225], "zou2005": [91, 176], "y_i": [91, 174, 243], "hat": [5, 91, 144, 183], "lambda": [91, 114, 168, 172, 176, 217], "w_j": 91, "2_j": 91, "balanc": [91, 176], "l2": [91, 144, 170, 176, 177, 180], "autom": [22, 91, 105, 106, 107, 123, 157, 168, 179, 219], "entri": [22, 91, 168, 170, 176, 180, 217, 239], "put": [5, 91, 138, 141, 168, 176, 180, 182, 226], "sf_fit": 91, "sf_odf": 91, "sf_peak": 91, "sf_both": 91, "zou": [91, 176], "soc": [1, 91, 93, 170, 176], "320": [83, 84, 91, 176, 226], "reconst_sfm": [91, 96], "sf": [92, 170, 172, 173, 176, 222], "00015": 92, "symm_sign": 92, "seri": [9, 15, 22, 92, 98, 138, 141, 168, 177, 178, 180, 222, 226, 229, 230, 243], "sh_basi": [92, 176], "reproject": 92, "high_res_sph": 92, "symm_reconst": 92, "fail": [6, 22, 92, 98, 160, 168, 174, 176, 217, 218, 219, 221, 222, 226, 227, 228, 230, 231, 234, 235], "asymmetr": [92, 145, 168, 182, 209, 234, 236, 243], "odf2": 92, "n_pts_hemispher": 92, "int": [5, 83, 92, 134, 147, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 191, 192, 193, 194, 197, 198, 201, 202, 203, 204, 208, 209, 210, 211, 213, 214, 215, 219, 233, 235, 239, 241], "asym_odf": 92, "asym_sign": 92, "asym_reconst": 92, "deal": [92, 95, 177, 233, 234, 237], "full_basi": [92, 172, 176], "asym_reconst_ful": 92, "reconst_sh": [92, 96, 234], "merlet2013": 93, "\u00f6zarslan2008": 93, "\u00f6zarslan2009": 93, "shoremodel": [93, 94, 183], "fetch_isbi2013_2shel": [93, 183], "contest": 93, "xmin": 93, "xmax": 93, "ymin": 93, "ymax": 93, "zmin": 93, "zmax": 93, "zeta": [93, 176], "lambdan": [93, 176], "lambdal": [93, 176], "cheng2011": 93, "700": [2, 3, 80, 93, 176, 217], "asm": [93, 94, 176], "asmfit": [93, 94, 176], "proc": [1, 93, 170, 176], "intl": [1, 93, 176], "mag": [1, 93, 176], "toronto": 93, "honolulu": 93, "hi": [93, 170, 176], "eap": [93, 170, 176], "compress": [93, 130, 174, 176, 180, 182, 197, 198, 217], "cheng": [93, 175, 176, 178], "insight": [93, 176], "unifi": [93, 170, 176, 181, 182, 204], "reconst_shor": [93, 96], "shore_map": 94, "ON": [94, 170, 176, 177, 182], "reconst_shore_metr": [94, 96], "physiolog": [95, 176, 182, 200], "pernici": 95, "wrong": [8, 95, 170, 176, 218, 219, 220, 222, 224, 226, 227, 234], "particip": [95, 177], "young": 95, "children": [23, 95, 168, 170, 172, 176, 180, 182, 183, 203, 210], "prone": [5, 95, 168], "actual": [7, 8, 95, 130, 141, 161, 168, 170, 176, 177, 178, 180, 218, 219, 239, 240], "yendiki": 95, "yendiki2013": 95, "refit": 95, "chang2005": [95, 176], "intermitt": [95, 222, 228, 234], "ne": 95, "fetch_stanford_hardi": [95, 97, 98, 183], "dti_wl": 95, "roi_idx": 95, "fit_wl": 95, "fa1": 95, "evals1": 95, "evecs1": 95, "cfa1": 95, "tensor_ellipsoids_wl": 95, "noisy_data": 95, "noisy_idx": 95, "fit_wls_noisi": 95, "fa2": 95, "evals2": 95, "evecs2": 95, "cfa2": 95, "tensor_ellipsoids_wls_noisi": 95, "distort": [95, 152, 168, 175, 180], "dti_restor": 95, "fit_restore_noisi": 95, "fa3": 95, "evals3": 95, "evecs3": 95, "cfa3": 95, "tensor_ellipsoids_restore_noisi": 95, "convinc": 95, "ourselv": [95, 143], "chung2006": 95, "ravel": [95, 112, 114, 180, 224], "dti_fa_distribut": 95, "resembl": [95, 171], "importantli": 95, "believ": 95, "koldewynb": 95, "kakunooria": 95, "kanwish": 95, "fischl": 95, "reject": [95, 173, 176, 182, 199, 200], "1088": [80, 83, 95, 176, 182, 199, 200, 219], "chung": [95, 176, 231], "sw": [95, 176, 182, 200], "henri": [95, 126, 176, 182, 200], "uncertainti": [95, 142, 176, 182, 200], "531": [75, 83, 95, 176, 182, 200, 226], "541": [75, 80, 83, 86, 95, 176, 182, 200, 226], "restore_dti": [95, 96, 219], "maxim": [23, 97, 98, 100, 103, 105, 117, 157, 168, 170, 172, 173, 176, 177, 180, 182, 183, 185, 193, 197, 198, 203, 210, 211, 217, 224, 225, 226, 227], "mutual": [97, 98, 157, 168, 182, 184], "mattes03": [97, 98, 168], "ant": [97, 98, 105, 106, 107, 117, 157, 168], "avants11": [97, 98, 105, 106, 107, 157, 168], "twice": [97, 143, 170, 180, 219, 222], "simplifi": [97, 115, 143, 162, 168, 174, 176, 180, 221, 225, 231, 237], "regtool": [97, 98, 103, 105, 106, 107, 183, 226, 227, 230], "fetch_syn_data": [97, 183], "transform_centers_of_mass": [97, 183], "mutualinformationmetr": [97, 98, 105, 183], "affineregistr": [97, 98, 105, 183, 218, 234], "translationtransform3d": [97, 98, 105, 183], "rigidtransform3d": [97, 98, 105, 183], "affinetransform3d": [97, 105, 183], "static_data": [97, 98], "static_affin": [97, 98, 105, 107, 168], "static_img": [97, 98], "hardi150": [97, 98, 152, 156], "static_grid2world": [97, 98, 168], "folder2": 97, "moving_data": 97, "moving_affin": [97, 98, 105, 107, 168], "moving_img": 97, "moving_grid2world": [97, 98, 168], "affine_map": [97, 98, 105, 107, 168], "overlay_slic": [97, 98, 105, 107, 183], "resampled_0": 97, "resampled_1": 97, "resampled_2": 97, "rough": [97, 100], "c_of_mass": 97, "occupi": [97, 170, 176, 178], "roughli": [97, 105, 107, 123, 168, 177], "transformed_com_0": 97, "transformed_com_1": 97, "transformed_com_2": 97, "translat": [97, 98, 105, 131, 144, 157, 170, 177, 180, 182, 183, 184, 209, 228], "joint": [97, 168, 182, 184, 241], "margin": [97, 168, 180, 182, 184], "integ": [97, 131, 142, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 217, 219, 226, 230, 233], "consum": [41, 83, 97], "nbin": [97, 98, 105, 168, 177, 182, 184], "sampling_prop": [97, 98, 105, 182, 184], "stuck": [8, 97], "optima": 97, "pyramid": [97, 106, 107, 168, 182, 185], "flexibl": [97, 114, 172, 176, 177, 219, 243], "indirectli": 97, "coarsest": [97, 168, 182, 184], "medium": [97, 121, 182, 209], "finest": [97, 106, 107, 168, 182, 184], "level_it": [97, 98, 103, 105, 106, 107, 168, 182, 184, 185], "request": [5, 7, 8, 17, 97, 145, 162, 168, 171, 180, 181, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240], "configur": [5, 8, 12, 16, 97, 103, 106, 146, 162, 175, 176, 229, 233], "nx": [97, 170], "ny": [8, 23, 97, 170], "nz": [97, 170], "ahead": [8, 97, 134, 220], "affreg": [97, 98], "dictionari": [97, 134, 168, 170, 171, 174, 175, 176, 178, 180, 182, 214, 215, 222], "regtransform": 97, "params0": [97, 105, 168], "starting_affin": [97, 98, 105, 168, 182, 234], "transformed_trans_0": 97, "transformed_trans_1": 97, "transformed_trans_2": 97, "rigid": [97, 98, 100, 101, 105, 157, 177, 182, 183, 184, 189, 209, 211, 222, 228, 231, 234], "slight": [97, 143], "transformed_rigid_0": 97, "transformed_rigid_1": 97, "transformed_rigid_2": 97, "transformed_affine_0": 97, "transformed_affine_1": 97, "transformed_affine_2": 97, "affine_registr": [97, 98, 183], "register_dwi_to_templ": [97, 183], "center_of_mass": [97, 183], "string": [97, 138, 141, 147, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 194, 222, 223, 230, 231], "rigid_isosc": [97, 182, 183, 184], "rigid_sc": [97, 182, 183, 184], "xformed_img": [97, 98], "xformed_affine_0": 97, "xformed_affine_1": 97, "xformed_affine_2": 97, "bvals_fil": [97, 182, 202, 212], "bvecs_fil": [97, 182, 202, 212], "opposit": [97, 123, 168, 176, 221], "revers": [97, 114, 175, 176, 177, 244], "xformed_dwi": 97, "templat": [2, 3, 97, 103, 105, 168, 171, 176, 217, 219, 230], "reg_method": [97, 168], "aff": [97, 99, 168], "xformed_dwi_0": 97, "xformed_dwi_1": 97, "xformed_dwi_2": 97, "dwi_to_templ": 97, "matt": [23, 97, 98, 168, 220, 222, 228], "haynor": [97, 98, 168], "vessel": [97, 98, 168], "lewellen": [97, 98, 168], "eubank": [97, 98, 168], "pet": [97, 98, 168], "ct": [97, 98, 168, 176, 183, 234], "chest": [97, 98, 168], "avant": [97, 98, 105, 106, 107, 117, 157, 168], "tustison": [97, 98, 105, 106, 107, 117, 157, 168], "song": [97, 98, 105, 106, 107, 157, 168], "affine_registration_3d": [97, 104], "pixel": [98, 103, 152, 168, 172, 177, 180, 181], "circumst": 98, "cardiac": 98, "priorit": 98, "heart": [23, 98], "register_seri": [98, 183], "pad_bi": 98, "mode": [18, 98, 117, 146, 147, 156, 168, 170, 172, 174, 175, 177, 178, 180, 181, 182, 183, 199, 200, 204, 210, 217, 220, 225, 226], "constant_valu": 98, "affmat": 98, "co": [7, 22, 98, 130, 143, 168, 170, 178, 180, 243, 244], "sin": [98, 143, 170, 178, 180, 244], "deregist": 98, "centr": [23, 98, 142, 170, 171], "transl": 98, "static_mask": [98, 168], "moving_mask": [98, 168], "conveni": [15, 98, 138, 141, 168, 182], "reg_func": 98, "fignam": 98, "scope": 98, "except": [5, 7, 98, 148, 168, 170, 171, 172, 175, 176, 177, 180, 182, 221, 225, 227], "hopefulli": 98, "transformed_pipelin": 98, "border": [98, 137, 226], "troublesom": 98, "sz": 98, "pd": 98, "squares_st": 98, "int32": [98, 168, 180], "squares_mv": 98, "deregistered_squar": 98, "masked_stat": 98, "transformed_squar": 98, "pin": [98, 228, 235], "attempt": [6, 98, 176, 180, 229], "transformed_squares_mask": 98, "transformed_squares_mask_2": 98, "transformed_squares_mask_3": 98, "xform": [98, 168], "series_affin": [98, 168], "series_mask_1": 98, "series_mask_2": 98, "affine_registration_mask": [98, 104], "coregist": 99, "atla": [2, 3, 99, 109, 110, 123, 124, 148, 149, 171, 177, 179], "garyfallidis15": [99, 100, 109, 149, 157, 168, 182, 211], "shuffl": [99, 175], "pair": [73, 99, 131, 168, 170, 174, 176, 180, 181, 182, 189], "pairwis": [99, 100, 126, 168, 177], "centroid": [99, 109, 112, 114, 115, 123, 125, 168, 177, 179, 182, 183, 211], "streamlinear": [99, 100, 109, 183, 222, 226], "groupwise_slr": [99, 183], "read_five_af_bundl": [99, 183], "show_bundl": [99, 183], "basicconfig": 99, "arcuat": [99, 109, 110, 124, 134, 148, 149, 171], "fasciculi": 99, "57": [2, 3, 26, 33, 41, 54, 75, 80, 81, 83, 84, 86, 99, 176, 224], "save_a": [99, 181], "before_group_registr": 99, "nativ": [99, 100, 130, 134, 135, 147, 148, 149, 168, 174, 181, 182, 204, 211], "bundles_reg": 99, "after_group_registr": 99, "117": [80, 83, 84, 99, 100, 103, 115, 149, 157, 168, 171, 178, 182, 211, 224], "124": [80, 83, 84, 99, 100, 103, 115, 125, 129, 149, 157, 168, 171, 182, 211, 224], "simplif": [1, 99, 100, 112, 113, 114, 115, 123, 177, 180], "frontier": [1, 5, 99, 112, 113, 114, 115, 123, 147, 148, 149, 150, 162, 163, 177, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "neurosci": [1, 23, 99, 105, 112, 113, 114, 115, 123, 161, 177, 180], "175": [1, 83, 84, 99, 112, 113, 114, 115, 123, 177, 180], "romerobascones22": 99, "romero": [99, 233, 234, 235], "bascon": [99, 233, 234, 235], "bundleatlas": 99, "atlas": [2, 3, 99, 168, 171], "bundle_group_registr": [99, 104], "garyfallidis14": [100, 147, 148, 149, 150, 168, 182, 211], "concept": [15, 24, 100, 101, 125, 240], "cingulum": [100, 125, 135, 171], "sleep": 100, "two_cingulum_bundl": [100, 125, 183], "cb_subj1": [100, 125], "cb_subj2": 100, "streamlinelinearregistr": [100, 183], "set_number_of_point": [100, 101, 112, 113, 130, 183, 217, 219, 220, 222, 226], "srr": 100, "srm": 100, "finish": [8, 18, 100, 106, 146, 175, 226], "cb_subj2_align": 100, "show_both_bundl": [100, 125], "lines_actor": [100, 105], "rotatez": [100, 125], "orang": [100, 105, 135], "before_registr": 100, "after_registr": 100, "stai": [100, 114, 239, 240], "bmd": [100, 168], "operatornam": [100, 143, 241, 244], "flip": [100, 105, 109, 168, 177, 180, 220, 230, 243], "mdf": [100, 101, 109, 112, 115, 168, 180, 182, 183, 189, 209, 230], "eq": [100, 168, 170, 176, 220], "row": [100, 110, 114, 130, 131, 137, 144, 168, 170, 171, 172, 174, 176, 177, 178, 180, 181, 228], "primarili": [100, 176], "visser": 100, "intact": [100, 168, 180], "x_": 100, "prove": 100, "nonneg": [100, 176, 180], "satisfi": [100, 170, 180], "inequ": [100, 170, 176], "formul": [100, 117, 170, 176, 239, 241], "underset": 100, "compos": [100, 168, 170, 176, 180, 182], "bundle_registr": [100, 104], "nonlinearli": [101, 150, 168, 182, 189], "chandio23": [101, 150], "chandio20": [101, 148], "uncin": [101, 148, 150], "streamwarp": [101, 183], "bundlewarp_vector_fil": [101, 183], "bundlewarp_shape_analysi": [101, 183], "fetch_bundle_warp_dataset": [101, 183], "unlist_streamlin": [101, 168, 183], "viz_two_bundl": [101, 183], "viz_vector_field": [101, 183], "viz_displacement_mag": [101, 183], "loaf": 101, "uf_l": [101, 148], "figshar": [2, 3, 101, 148, 149, 150], "test_bundles_for_dipi": [101, 150], "22557733": [101, 150], "bundle_warp_fil": 101, "s_uf_l_path": 101, "s_uf_l": [101, 150], "m_uf_l_path": 101, "m_uf_l": [101, 150], "uf_subj1": 101, "uf_subj2": 101, "static_and_mov": 101, "trade": [101, 150, 168, 182, 189], "deformed_bundl": [101, 168], "moving_align": [101, 168], "match_pair": 101, "warp_map": 101, "max_it": [101, 168, 177, 182, 189], "warp": [101, 103, 105, 106, 107, 150, 157, 168, 171, 181, 182, 185, 189, 233], "static_and_partially_deform": 101, "linearli": [101, 168, 180, 182, 189], "linearly_and_nonlinearly_mov": 101, "c1": [101, 171, 181], "points_align": [101, 181], "partially_vectorfield": 101, "partially_vectorfield_over_linearly_mov": 101, "partially_deformation_magnitude_over_linearly_mov": 101, "new_tractogram": 101, "partially_deformed_bundl": 101, "deformed_bundle2": 101, "dist": [22, 101, 114, 168, 170, 180, 182, 183, 189], "static_and_fully_deform": 101, "fully_vectorfield": 101, "fully_vectorfield_over_linearly_mov": 101, "fully_deformation_magnitude_over_linearly_mov": 101, "no_disk": [101, 168, 179, 182, 187, 188], "fully_deformed_bundl": 101, "chandio": [23, 101, 109, 124, 125, 148, 150, 168, 177, 179, 181, 182, 188, 189, 204, 209, 233], "biorxiv": [101, 128, 150, 168, 182, 189], "stnd": 101, "neurip": 101, "bundlewarp_registr": [101, 104], "skimag": [103, 177, 217, 219], "imwarp": [103, 105, 106, 107, 183, 219], "symmetricdiffeomorphicregistr": [103, 105, 106, 107, 183], "ssdmetric": [103, 106, 183], "ellips": [103, 170], "draw_ellips": 103, "rr": 103, "img_ref": 103, "img_in": 103, "show_imag": 103, "img_warp": 103, "fig_nam": 103, "axarr": [73, 103], "ssd": [103, 106, 157, 168, 176, 182, 185], "02f": 103, "step_length": [103, 168, 182, 185], "sdr": [103, 105, 106, 107, 221, 222, 235], "ndim": [103, 106, 170, 176, 178, 228], "inv_it": [103, 106, 168, 182, 185], "ss_sigma_factor": [103, 168, 182, 185], "opt_tol": [103, 168, 182, 185], "plot_2d_diffeomorphic_map": [103, 106, 183, 226], "register_binary_fuzzi": [103, 104], "greene17": 105, "ra": [44, 105, 134, 147, 170, 174, 177], "vox_siz": [105, 174, 180], "t2": [2, 3, 105, 171, 172, 180, 217], "mni": [2, 3, 105, 109, 148, 149, 171, 217, 219], "2x2x2": [105, 168], "fetch_mni_templ": [105, 183], "read_mni_templ": [105, 183], "img_t2_mni": 105, "new_zoom": [105, 168], "b0_idx_stanford": 105, "b0_data_stanford": 105, "skull": [105, 106, 107, 117], "b0_masked_stanford": 105, "mean_b0_masked_stanford": 105, "rigidli": 105, "eventu": 105, "syn": [2, 3, 105, 106, 107, 117, 157, 168, 217, 219, 234], "transform_origin": [105, 183], "mismatch": [105, 219, 222], "affine_reg": [105, 157], "rigid_map": 105, "bump": [22, 105, 234], "highres_map": 105, "avants09": [105, 106, 107, 157], "ccmetric": [105, 106, 107, 183, 219, 228], "warped_mov": [105, 106, 107, 157, 168, 182], "transformed_sagitt": 105, "transformed_coron": 105, "transformed_axi": 105, "whose": [105, 168, 180, 182], "extent": 105, "isocent": 105, "target_isocent": 105, "diag": [105, 168, 170, 176], "origin_affin": 105, "fov": 105, "mirror": [12, 105, 144, 170, 172, 183], "implicitli": 105, "mni_streamlin": 105, "deform_field": [105, 180], "get_forward_field": [105, 168, 183], "stream_to_current_grid": [105, 180], "current_grid_to_world": [105, 180], "stream_to_ref_grid": [105, 180], "ref_grid_to_world": [105, 180], "show_template_bundl": 105, "template_actor": 105, "streamlines_dsn_mni": 105, "epstein": [105, 106, 107, 157, 168], "gee": [105, 106, 107, 117, 157, 168], "correl": [45, 69, 105, 106, 107, 152, 157, 162, 168, 170, 176, 180, 182, 185, 219], "elderli": [105, 106, 107, 157, 168], "neurodegen": [105, 106, 107, 157, 168], "grafton": 105, "streamline_registr": [104, 105, 183], "fname_mov": 106, "reg_o": [106, 171], "fname_stat": 106, "reg_c": [106, 171], "overlay_imag": [106, 183], "input_imag": [106, 177], "letter": [5, 106, 180], "decis": 106, "dim": [106, 162, 168, 221, 235], "n_0": [106, 107], "n_1": [106, 107], "n_k": [106, 107, 176], "diffeomorphicmap": [106, 107, 181, 183, 231, 235], "forth": [106, 107], "diffeomorphic_map": 106, "direct_warp_result": 106, "warped_stat": [106, 107], "inverse_warp_result": 106, "callback_cc": 106, "statu": [7, 8, 15, 18, 106, 168, 180, 217, 229, 234], "react": [106, 221], "registrationstag": [106, 183], "scale_end": 106, "wmove": 106, "moving_imag": [106, 168], "wstatic": 106, "static_imag": [106, 168], "t1_name": 106, "b0_name": 106, "syn_data": [2, 3, 106, 107], "sigma_diff": [106, 168, 234], "callback": [106, 134, 137, 168, 170, 175, 181], "t1_slices_input": 106, "t1_slices_r": 106, "inv_warp": 106, "t1_slices_res2": 106, "diffeomorphic_map_b0": 106, "syn_registration_2d": [104, 106], "modal": [107, 168, 182, 185], "stanford_b0": 107, "stanford_b0_affin": 107, "b0_fname": 107, "syn_b0": 107, "syn_b0_affin": 107, "stanford_b0_mask": 107, "syn_b0_mask": 107, "suppos": [8, 107, 226], "pre_align": 107, "02783543e": 107, "00": [25, 26, 31, 33, 34, 37, 38, 41, 43, 44, 49, 54, 57, 62, 66, 72, 75, 76, 77, 80, 81, 82, 83, 84, 86, 93, 94, 96, 104, 107, 116, 120, 129, 133, 135, 140], "83019053e": 107, "07735639e": 107, "57654118e": 107, "34051706e": 107, "41918267e": 107, "66525861e": 107, "23579799e": 107, "34288908e": 107, "90262026e": 107, "80820307e": 107, "46216651e": 107, "00000000e": [57, 83, 107], "input_3d": 107, "syn_registration_3d": [104, 107, 217], "brain_extraction_dwi_1": [108, 116], "garyfallidis17": [109, 123, 149, 168, 177, 182, 206, 209, 211], "whole_brain_slr": 109, "get_two_hcp842_bundl": [109, 110, 123, 124, 183], "fetch_target_tractogram_hcp": [109, 110, 183], "fetch_bundle_atlas_hcp842": [109, 110, 124, 183], "get_bundle_atlas_hcp842": [109, 183], "get_target_tractogram_hcp": [109, 110, 183], "target_fil": 109, "target_fold": 109, "atlas_fil": [109, 124], "atlas_fold": [109, 124], "all_bundles_fil": 109, "sft_atla": 109, "atlas_head": 109, "sft_target": 109, "target_head": 109, "tractograms_initi": [109, 110], "qb_centroids1": 109, "qb_centroids2": 109, "x0": [83, 109, 168, 170, 177, 182, 211, 228], "rng": [109, 125, 168, 177, 180, 183, 230], "randomst": [109, 125, 168, 175, 177, 180], "slr_transform": [109, 182, 209], "npy": [109, 142, 148, 149, 174, 182, 217], "tractograms_after_registr": 109, "tri": [109, 168, 170, 173, 181], "kei": [2, 5, 11, 44, 109, 134, 150, 168, 170, 171, 174, 176, 179, 180, 182, 214, 215, 222, 223, 224, 226, 234], "millimet": [109, 130, 142, 168, 176, 177], "model_clust_thr": [109, 177, 182, 209], "reduction_thr": [109, 177, 182, 209], "pruning_thr": [109, 177, 182, 209], "reduction_dist": [109, 177, 182, 209], "pruning_dist": [109, 177, 182, 209], "diferect": 109, "mam": [109, 177, 182, 209, 229], "neighbour": [109, 172, 180, 182, 203], "model_af_l_fil": [109, 110, 123, 124], "model_cst_l_fil": [109, 110, 123, 124], "sft_af_l": [109, 110, 124], "model_af_l": [109, 110, 123, 124], "17281532": [109, 110, 124], "55606842": [109, 110, 124], "92485857": [109, 110, 124], "360": [80, 84, 86, 109, 110, 124, 226], "46": [7, 25, 26, 31, 34, 37, 40, 41, 54, 75, 80, 83, 84, 86, 109, 110, 124, 129, 131, 176, 224], "028": [109, 110, 124], "89": [26, 37, 38, 41, 54, 75, 80, 81, 83, 84, 86, 103, 109, 110, 115, 117, 124, 147, 176, 218, 224, 233], "af_l_model_bundl": [109, 110], "rb": [109, 177, 232], "recognized_af_l": [109, 110], "af_l_label": 109, "recogn": [22, 109, 110, 177, 182, 183, 206, 209], "model_bundl": [109, 177, 179], "af_l_recognized_bundl": [109, 110], "reco_af_l": 109, "af_l_rec_1": 109, "af_l_org_1": 109, "af_l_recognized_bundle2": 109, "af_l_rec_2": 109, "af_l_org_2": 109, "af_l_recognized_bundle3": 109, "af_l_rec_3": 109, "af_l_org_3": 109, "rule": [5, 15, 109, 162, 168, 175, 180, 217], "thumb": [15, 109, 180], "r_recognized_af_l": 109, "r_af_l_label": 109, "pruned_streamlin": [109, 177], "af_l_refine_recognized_bundl": 109, "af_l_rec_refin": 109, "af_l_org_refin": 109, "sft_cst_l": 109, "model_cst_l": [109, 123], "cst_l_model_bundl": 109, "recognized_cst_l": 109, "cst_l_label": 109, "cst_l_recognized_bundl": 109, "reco_cst_l": 109, "cst_l_rec_1": 109, "cst_l_org_1": 109, "cst_l_recognized_bundle2": 109, "cst_l_rec_2": 109, "cst_l_org_2": 109, "cst_l_recognized_bundle3": 109, "cst_l_rec_3": 109, "cst_l_org_3": 109, "r_recognized_cst_l": 109, "r_cst_l_label": 109, "cst_l_refine_recognized_bundl": 109, "cst_l_rec_refin": 109, "cst_l_org_refin": 109, "recognit": [1, 2, 3, 109, 123, 149, 168, 177, 182, 206, 209, 211, 221], "chandio2020": [109, 124, 125, 177, 179, 182, 188, 209], "risach": [109, 124, 125, 148, 177, 179, 182, 188, 209], "bullock": [109, 124, 125, 148, 177, 179, 182, 188, 209, 234], "fc": [109, 124, 125, 148, 177, 179, 182, 188, 209], "koudoro": [23, 109, 124, 125, 134, 148, 177, 179, 181, 182, 188, 204, 209, 219, 220, 221, 222, 223, 228, 229, 230, 231, 232, 233, 234, 235, 236], "harezlak": [109, 124, 125, 148, 177, 179, 182, 188, 209], "investig": [19, 109, 124, 125, 148, 150, 168, 176, 177, 179, 182], "rep": [109, 124, 125, 148, 177, 179, 180, 182, 188, 209], "17149": [109, 124, 125, 148, 177, 179, 182, 188, 209], "bundle_extract": [109, 116, 222, 229], "stonge2022": [110, 177], "fss": [110, 183], "faststreamlinesearch": [110, 183], "nearest_from_matrix_row": [110, 183], "hcp_file": 110, "faststreamlinessearch": 110, "ref_streamlin": [110, 177], "tree": [10, 110, 146, 177, 180, 182, 183], "max_radiu": [110, 177], "radius_search": [110, 177, 183], "cautiou": 110, "fs_tree_af": 110, "coo_mdist_mtx": 110, "ids_": 110, "ids_ref": 110, "col": [110, 137], "af": [110, 123, 124, 134, 170, 171], "nn_": 110, "nn_ref": 110, "nn_dist": 110, "colormap_lookup_t": [110, 126, 135, 137], "scale_rang": [110, 126, 135, 137], "lookup_colormap": [110, 126, 135, 137], "scalar_bar": [110, 126, 135], "af_l_recognized_bundle_dist": 110, "ref_color": 110, "af_l_model_bundle_reach": 110, "neuroinformat": [1, 5, 23, 110, 117, 145, 147, 148, 149, 150, 162, 163, 177, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "fast_streamline_search": [110, 116], "familiar": [112, 113], "get_streamlin": [112, 113], "fornix": [112, 113, 114, 115, 162, 171, 177], "identityfeatur": [112, 113, 183], "unalt": 112, "averagepointwiseeuclideanmetr": [112, 113, 123, 183], "nb_point": [112, 113, 123, 177, 180, 219], "qb": [112, 113, 114, 115, 123, 177, 221], "nb": [112, 113, 115, 176], "191": [84, 96, 112, 113, 115, 177, 225], "47": [2, 3, 26, 33, 38, 41, 44, 54, 63, 75, 80, 81, 83, 84, 86, 112, 115, 162, 168, 171, 177, 224, 232], "predetermin": 112, "fly": [8, 112, 113, 143], "perman": 112, "centerofmassfeatur": [112, 183], "graviti": [112, 168], "wiki": [112, 113, 114, 143, 170, 171, 176, 177], "euclideanmetr": 112, "belong": [112, 113, 114, 131, 148, 177, 179, 182], "create_colormap": [112, 113, 114, 115], "colormap_ful": [112, 113, 114, 115], "center_of_mass_featur": 112, "midpointfeatur": [112, 183], "halfwai": [112, 168], "midpoint_featur": 112, "arclengthfeatur": [112, 114, 183], "arclength_featur": 112, "vectorofendpointsfeatur": [112, 113, 114, 183], "extrem": [101, 112, 114, 125, 168, 177, 182, 189], "ambigu": 112, "cosinemetr": [112, 113, 114, 183], "vector_of_endpoints_featur": 112, "segment_clustering_featur": [112, 116], "won": [113, 123, 180, 222, 228, 230], "sumpointwiseeuclideanmetr": [113, 114, 183], "cosine_metr": 113, "segment_clustering_metr": [113, 116], "datum": [5, 114, 177], "n_i": [114, 130, 176, 180], "modular": [114, 181, 182, 204], "subclass": [114, 170, 176, 177], "capabl": [114, 134, 170, 176, 230], "hierarch": [114, 174], "clustermap": [114, 115, 183], "sphx_glr_examples_built_segmentation_segment_clustering_featur": [], "arc": [114, 168, 177], "redefin": 114, "infer_shap": [114, 183], "__init__": [114, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 219], "is_order_invari": [114, 177, 183], "educ": [114, 115], "neuroanatomi": [114, 115], "fornix_clusters_arclength": 114, "sphx_glr_examples_built_segmentation_segment_clustering_metr": [], "cosin": [114, 130, 170, 177], "minu": [114, 168, 170, 172, 173, 176, 177, 180, 182, 197, 198, 203, 210, 211], "en": [23, 114, 143, 170, 176, 177, 182, 222], "wikipedia": [114, 143, 144, 170, 176, 177, 244], "cosine_similar": [114, 175], "are_compat": [114, 174, 177, 183, 234], "shape1": [114, 177], "shape2": [114, 177], "v2": [114, 170], "cos_theta": 114, "arccosin": 114, "arcco": [114, 170, 177, 223, 244], "fornix_clusters_cosin": 114, "segment_extending_clustering_framework": [114, 116], "pickl": [115, 142, 183, 219], "save_pickl": [115, 142, 183], "10mm": [115, 177, 180], "upsampl": [115, 172, 177, 180], "101": [80, 83, 84, 115, 171, 224], "105": [80, 83, 84, 104, 106, 115, 224], "115": [80, 83, 84, 96, 103, 115, 220], "116": [80, 83, 84, 86, 101, 115, 172, 176, 224, 235, 243], "119": [80, 83, 84, 115, 172, 224, 232], "123": [80, 83, 84, 103, 115, 170, 224], "129": [80, 83, 84, 115, 162, 224], "144": [80, 83, 84, 115, 176, 218, 224], "148": [80, 83, 84, 115], "151": [83, 84, 115], "159": [83, 84, 115, 119, 120, 225], "167": [80, 83, 84, 115, 225], "180": [2, 3, 84, 115, 225], "185": [83, 84, 115, 225], "208": [80, 83, 84, 115, 225], "210": [80, 83, 84, 115, 225], "224": [44, 80, 83, 84, 98, 104, 115], "237": [75, 83, 84, 115, 225], "246": [80, 83, 84, 115], "249": [80, 84, 115, 225], "251": [80, 83, 84, 115, 131, 225], "267": [83, 84, 115, 225], "270": [83, 84, 115, 225], "280": [80, 83, 84, 115], "284": [80, 83, 84, 115, 231], "293": [83, 84, 115], "296": [31, 40, 80, 83, 84, 115], "297": [2, 3, 75, 80, 83, 84, 115], "299": [80, 84, 115, 226], "84": [26, 37, 38, 41, 54, 75, 80, 81, 83, 84, 86, 115, 224, 225], "83773804": 115, "92590332": 115, "32278442": 115, "10850525": 115, "84362793": 115, "91885376": 115, "40357208": 115, "112": [80, 83, 84, 103, 115, 224], "25676727": 115, "72930145": 115, "48336792": 115, "107": [80, 83, 84, 103, 115, 224], "60327911": 115, "13782501": 115, "23897552": 115, "102": [83, 84, 115, 171, 224], "5100708": 115, "29447174": 115, "04563904": 115, "97": [25, 26, 34, 38, 41, 54, 75, 80, 81, 83, 84, 86, 103, 115, 176, 178, 224, 228, 236], "46020508": 115, "54240417": 115, "82": [26, 33, 34, 38, 41, 54, 75, 80, 81, 83, 84, 86, 115, 224], "60240173": 115, "93": [26, 33, 34, 37, 41, 54, 75, 80, 81, 83, 84, 86, 115, 162, 218, 222], "14851379": 115, "84208679": 115, "78": [26, 33, 34, 37, 38, 41, 54, 75, 80, 83, 84, 86, 115, 224], "98937225": 115, "57682037": 115, "63652039": 115, "72344208": 115, "60827637": 115, "9391861": 115, "40846252": 115, "15874481": 115, "4484024": 115, "74534607": 115, "00262451": 115, "82582092": 115, "02451324": 115, "43942261": 115, "0697403": 115, "fornix_initi": 115, "fornix_centroid": 115, "fornix_clust": 115, "pkl": 115, "video": [15, 21, 115, 162], "segment_quickbundl": [115, 116, 217, 221, 225], "mrf": [117, 162, 183, 219], "zhang": [117, 177, 180], "zhang2001": 117, "avants2011": [117, 168], "fsl": [117, 171, 182, 200, 230, 239, 240], "atropo": 117, "strip": [117, 228], "img_ax": 117, "imgplot": 117, "img_cor": 117, "t1_imag": 117, "pad_inch": 117, "adult": 117, "100th": 117, "task": [8, 117, 180], "t0": [117, 170], "total_tim": 117, "final_seg": 117, "yellow": [7, 117, 131, 148], "light": 117, "bradi": 117, "cook": 117, "multivari": 117, "public": [8, 21, 22, 24, 117, 143, 162, 171, 176, 219], "381": [83, 84, 117, 226], "tissue_classif": [116, 117], "reconst_dsid_1": [119, 120], "barrier": 121, "media": 121, "rnh2015": 121, "multi_tensor_dki": [121, 183], "decompose_tensor": [121, 183], "from_lower_triangular": [121, 183], "small_64d": [121, 171, 178], "circ": [121, 176], "fie": 121, "signal_dki": 121, "signal_noisi": [121, 122], "decompos": 121, "dt_eval": 121, "dt_evec": 121, "signal_dti": 121, "simulated_dki_sign": 121, "simulate_dki": [120, 121], "someon": [8, 17, 122], "simulated_sign": 122, "cach": [122, 172, 180, 183, 224], "multi_tensor_simul": 122, "simulate_multi_tensor": [120, 122], "diverg": [123, 180], "yeatman2012": [123, 179], "dsa": 123, "metricspe": [123, 183], "grab": [123, 171], "bundles_path": 123, "fetch_bundles_2_subject": [123, 134, 135, 137, 183], "bundles_fold": 123, "cst_l_file": 123, "bundles_2_subject": [2, 3, 123, 134, 137, 171], "subj_2": [123, 171], "bundles_cst": 123, "af_l_fil": 123, "bundles_af": 123, "cst_l": [123, 148, 233], "af_l": [123, 124, 148, 149, 171, 177, 182], "pull": [7, 8, 10, 15, 17, 18, 123, 145, 162, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "cluster_cst_l": 123, "standard_cst_l": 123, "cluster_af_l": 123, "standard_af_l": 123, "oriented_cst_l": 123, "orient_by_streamlin": [123, 179, 183], "oriented_af_l": 123, "volumetr": 123, "fetch_bundle_fa_hcp": [2, 123, 183], "fa_affin": 123, "hcp_bundle_fa": 123, "w_cst_l": 123, "gaussian_weight": [123, 183], "w_af_l": 123, "profile_cst_l": 123, "profile_af_l": 123, "tract_profil": 123, "robert": [123, 179, 235], "dougherti": [123, 179], "nathaniel": [123, 179], "myall": [123, 179], "heidi": [123, 179], "feldman": [123, 179], "e49790": [123, 179], "afq_tract_profil": [123, 129], "assignment_map": [124, 183], "fasiculu": 124, "fake_tub": 124, "af_l_before_assignment_map": 124, "indx": 124, "si": [124, 180], "disks_color": 124, "af_l_after_assignment_map": 124, "bundle_assignment_map": [124, 129], "whatsoev": 125, "dissimilar": [125, 168], "bundle_shape_similar": [125, 129, 183, 231], "bundle1": [125, 135, 177, 180], "bundle2": [125, 135, 177, 180], "streamtube_actor": 125, "two_bundl": 125, "cluster_thr": [125, 147, 181, 182, 204], "clust_thr": [125, 177, 182, 209], "ba_scor": 125, "lenient": 125, "jordan_2018_plm": [126, 128], "cluster_confid": [126, 129, 183], "40mm": 126, "cci": [126, 180], "long_streamlin": 126, "hue": [126, 135], "satur": [126, 135], "lut_cmap": [126, 135], "hue_rang": [126, 135, 137], "saturation_rang": [126, 135, 137], "bar3": [126, 135], "stream_actor": [126, 134, 135], "pop": [126, 128, 136], "cci_streamlin": 126, "landscap": 126, "probe": [126, 173], "stabl": [126, 176, 226, 234], "phenomenon": 126, "lone": 126, "vote": 126, "lend": 126, "cci_histogram": 126, "histogram": [126, 130, 168, 170, 177, 181], "keep_streamlin": 126, "keep_streamlines_actor": 126, "filtered_cci_streamlin": 126, "jordan": [23, 126, 128, 180, 219, 221, 222, 223, 226], "keshavan": 126, "therapi": 128, "shortest": [128, 170, 180], "treatment": [128, 143], "gross": 128, "tumor": [128, 234], "gtv": 128, "mpl": [128, 181, 219, 226], "lesion": 128, "electrod": 128, "surface_opac": [128, 136], "surface_color": [128, 136], "seedroi_actor": [128, 136], "plm_roi_sl": 128, "transpar": [128, 136, 181, 182, 204], "hypothesi": 128, "motor": 128, "cortico": 128, "path_length_map_base_roi": 128, "wmpl": 128, "example_cc_path_length_map": 128, "ignor": [128, 168, 170, 172, 175, 176, 177, 179, 180, 222, 226, 230], "wmpl_show": 128, "masked_wher": 128, "slx": 128, "sly": 128, "slz": 128, "cool": [8, 17, 128], "path_length_map": [128, 129], "plan": [128, 144, 222, 228, 239, 240], "neuro": 128, "oncologi": 128, "approx_polygon_track": [130, 183, 234], "simulated_bundl": 130, "no_streamlin": 130, "randint": [130, 217, 223], "burlywood": 130, "length_histogram": 130, "2mm": 130, "bundle_downsampl": 130, "n_pts_d": 130, "curvi": 130, "bundle_downsampled2": 130, "n_pts_ds2": 130, "thought": [8, 130, 144], "lossi": 130, "bundle_actor": 130, "bundle_actor2": 130, "bundle_actor3": 130, "simulated_cosine_bundl": 130, "equidist": 130, "obviou": 130, "great": [130, 170], "n_pts_histogram": 130, "lengths_downsampl": 130, "lengths_downsampled2": 130, "id": [130, 170, 177, 181, 182], "lengths_plot": 130, "streamline_length": [129, 130], "meant": [131, 170, 172, 175, 176, 180], "labels_img": 131, "cc_streamlin": 131, "other_streamlin": 131, "assert": [7, 131, 221, 226, 231], "cc_streamlines_actor": 131, "corpuscallosum_axi": 131, "corpuscallosum_sagitt": 131, "return_map": [131, 170, 176, 180], "mapping_as_streamlin": [131, 180], "log1p": 131, "gyru": 131, "surpris": 131, "anyon": [8, 131], "tricki": 131, "literatur": [83, 131, 176, 243], "lr_superiorfrontal_track": 131, "dm": [131, 168, 180], "int16": [131, 147, 170, 174, 176, 178], "lr_sf_trk": 131, "footnot": 131, "aparc": [131, 171, 230], "aseg": 131, "mgz": 131, "remain": [8, 131, 168, 170, 171, 172, 176, 180, 239], "lie": [131, 170, 180], "label_info": 131, "txt": [5, 131, 141, 157, 174, 182, 184, 186, 218, 226, 230], "4x4": [131, 168, 170, 174, 181], "thin": [134, 173, 180], "tailor": [14, 134], "dialog": 134, "snapshot": [134, 148], "primit": 134, "button": [8, 11, 134, 137, 219, 228], "slider": [134, 181, 219, 221, 222, 234], "lineslider2d": 134, "read_bundles_2_subject": [134, 135, 183, 219], "subj_1": [134, 135, 137, 171], "cc_1": [134, 171], "1mm": [134, 177, 180], "world_coord": [134, 181], "image_actor_z": 134, "slicer_opac": 134, "image_actor_x": 134, "x_midpoint": 134, "round": [134, 170, 175, 176, 180, 218, 221, 226, 227], "image_actor_i": 134, "y_midpoint": 134, "image_actor": 134, "showmanag": [134, 137, 181], "show_m": [134, 137], "line_slider_z": 134, "min_valu": 134, "max_valu": [134, 176], "initial_valu": 134, "text_templ": 134, "0f": 134, "line_slider_x": 134, "line_slider_i": 134, "opacity_slid": 134, "change_slice_z": 134, "change_slice_x": 134, "change_slice_i": 134, "change_opac": 134, "on_chang": 134, "build_label": [134, 183], "textblock2d": [134, 137, 181, 221], "messag": [8, 18, 20, 21, 24, 134, 137, 168, 170, 172, 176, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 220, 222, 228, 229, 231, 234, 235], "font_siz": [134, 181], "font_famili": 134, "arial": 134, "justif": 134, "bold": [5, 7, 134, 181], "ital": 134, "shadow": 134, "background_color": 134, "line_slider_label_z": 134, "line_slider_label_x": 134, "line_slider_label_i": 134, "opacity_slider_label": 134, "panel2d": [134, 137, 221], "1030": [80, 83, 134, 219], "add_el": [134, 137], "screen": [134, 143, 171], "re_align": 134, "getsiz": 134, "win_callback": 134, "obj": [8, 134, 137, 168, 171, 174, 177, 182, 230], "size_old": 134, "size_chang": 134, "reset_clipping_rang": 134, "add_window_callback": 134, "bundles_and_3_slic": 134, "del": 134, "garyfallidis2021": 134, "eleftherio": [1, 21, 22, 23, 134, 180, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "serg": [23, 134, 219, 220, 221, 222, 223, 228, 229, 230, 231, 232, 233, 234, 235, 236], "javier": [23, 134, 222, 234, 236], "guaj": [23, 134, 181, 182, 204, 222, 234, 236], "marc": [23, 134, 217, 218, 219, 220, 221, 222, 226, 227, 228], "alexandr": [23, 134, 217, 218, 219, 220, 221, 222, 226, 227, 228], "c\u00f4t\u00e9": [23, 134, 176, 217, 218, 219, 220, 221, 222, 227, 228], "soham": 134, "biswa": 134, "david": [134, 176, 217, 219, 220, 221, 222, 233, 234, 235], "reagan": [134, 181, 182, 204, 219, 220, 221, 222], "nasim": [134, 233, 234], "anousheh": [134, 233, 234], "filipi": 134, "silva": 134, "geoffrei": 134, "fox": 134, "contributor": [1, 5, 21, 22, 23, 134, 170, 177, 217, 219], "3384": [83, 134], "21105": [54, 134], "joss": [134, 228], "03384": 134, "viz_advanc": [133, 134, 222], "dix": [135, 171, 174], "subj_id": [135, 171], "bundle_n": 135, "176": [80, 83, 84, 117, 135, 147, 225], "118": [80, 83, 84, 99, 104, 135, 224], "wonder": [23, 135], "knew": 135, "camera_info": 135, "focal": 135, "stream_actor2": 135, "bar": [5, 135, 162, 175, 176, 181, 219, 222, 231, 234], "stream_actor3": 135, "bar2": 135, "bundle3": 135, "stream_actor4": 135, "bundle4": 135, "stream_actor5": 135, "bundle5": 135, "stream_actor6": 135, "bundle6": 135, "summari": [6, 7, 12, 16, 21, 22, 135, 162, 174, 175, 183, 228], "viz_bundl": [133, 135], "decim": [136, 220], "contour_from_roi_tutori": 136, "viz_roi_contour": [133, 136], "fname_t1": 137, "exp_bundles_and_map": [134, 137], "t1_warp": 137, "value_rang": [137, 231], "slice_actor": [137, 181, 183], "slice_actor2": 137, "hsv": 137, "fname_fa": 137, "fa_1x1x1": 137, "lut": 137, "fa_actor": 137, "slices_lut": 137, "click": [8, 11, 137, 152, 153, 221], "label_posit": 137, "label_valu": 137, "result_posit": 137, "result_valu": 137, "panel_pick": 137, "left_click_callback": 137, "ev": 137, "event_po": 137, "iren": [137, 181], "geteventposit": 137, "picker": [137, 222], "getpointijk": 137, "8f": 137, "setinterpol": 137, "addobserv": 137, "leftbuttonpressev": 137, "perspect": [137, 170], "show_m_mosa": 137, "left_click_callback_mosa": 137, "cnt": [5, 137], "slice_mosa": 137, "drag": 137, "scroll": [137, 222], "wheel": [22, 137, 221, 222, 231, 233, 234, 235], "combinedworkflow": [138, 183], "organ": [1, 2, 3, 8, 138, 145, 168, 170, 171, 174, 175, 176, 177], "combined_workflow": [138, 183], "nlmeansflow": [138, 183], "medianotsuflow": [138, 183], "denoiseandseg": 138, "_get_sub_flow": 138, "commandlin": [138, 148, 182], "input_fil": [138, 141, 147, 182, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 210, 213], "out_dir": [2, 138, 141, 147, 148, 149, 151, 152, 153, 155, 156, 157, 158, 171, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "out_fil": [138, 141, 182, 186, 212], "wildcard": [138, 141, 153, 155, 182, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 208, 210, 212, 214, 215], "out_": [138, 141], "front": [1, 5, 138, 141, 226, 228], "document": [6, 20, 21, 22, 138, 141, 145, 159, 161, 162, 168, 170, 171, 172, 174, 177, 180, 182, 217, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235], "parser": [138, 141, 182], "io_it": [138, 141], "get_io_iter": [138, 141, 182, 183, 222], "in_fil": [138, 141], "nl_flow": 138, "run_sub_flow": [138, 182, 183], "last_generated_output": 138, "out_denois": [138, 182, 191, 192, 193, 194], "me_flow": 138, "ioiter": [138, 141, 183], "globbin": 138, "bit": [138, 141, 146, 170, 218, 219, 221, 222, 226, 227, 239], "flow_runn": [138, 141, 183], "run_flow": [138, 141, 183], "argpars": [138, 141, 182], "combined_workflow_cr": [138, 140], "forc": [17, 22, 138, 141, 147, 149, 150, 170, 172, 180, 182, 234], "overwrit": [138, 141, 175, 231], "wrote": [138, 141], "callabl": [141, 168, 170, 171, 173, 176, 179, 226, 230], "anywher": [23, 141, 176], "t1_denois": 141, "my_workflow": 141, "shutil": 141, "Will": [141, 171, 174, 175, 176], "appendtextflow": 141, "text_to_append": 141, "myfil": 141, "glob": 141, "anyth": [8, 18, 141, 168, 170, 180, 226, 233], "newli": 141, "comment": [5, 141, 217, 221, 224, 228, 230], "workflow_cr": [140, 141], "text_fil": 141, "brett": [1, 5, 7, 21, 22, 23, 147, 148, 149, 150, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 224, 225, 226, 227], "nimmo": [1, 5, 21, 23, 147, 148, 149, 150, 176, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 224], "16th": 1, "tsiara": 1, "vogiatzi": 1, "william": [1, 176], "chamberlain": 1, "sr": [1, 170], "hampshir": 1, "menzi": 1, "la": [1, 147], "grant": [1, 171], "je": 1, "odlaug": 1, "bl": 1, "craig": 1, "fineberg": 1, "sahakian": 1, "bj": 1, "trichotillomania": 1, "arch": 1, "gen": 1, "psychiatri": 1, "965": [1, 178, 219], "71": [1, 26, 34, 37, 41, 54, 71, 75, 79, 80, 83, 84, 86, 224], "nguyen": [1, 23], "olivetti": [1, 23, 224], "halchenko": [1, 9, 219, 224, 236], "17th": 1, "vj": 1, "tseng": 1, "wy": 1, "cote": [1, 181, 182, 204, 226], "rheault": [1, 2, 3, 180, 222, 223, 228, 229, 230, 234, 235, 236], "sidhu": 1, "hau": 1, "petit": 1, "fortin": 1, "cunann": 1, "ocegueda": [1, 23, 171, 217, 218, 219, 226, 227, 235], "wassermann": [1, 2, 3, 23, 171, 222, 226], "jd": 1, "kn": 1, "dalmau": 1, "rivera": 1, "rectangl": 1, "arbitrari": [1, 19, 168, 170, 174, 175, 176, 177, 180, 226, 240], "rafael": [1, 23, 162, 217, 219, 220, 222, 228, 229, 230, 231, 234], "samuel": [1, 23, 217, 218, 219, 224, 225, 226, 227], "eric": [1, 2, 3, 23, 219, 229, 231, 234, 235], "thoma": 1, "marta": 1, "morgado": 1, "marral": 1, "hum": 1, "390": [1, 80, 84, 217], "frontiersin": 1, "3389": [1, 83], "fnhum": 1, "675433": 1, "citat": [1, 2, 3, 217, 219, 220, 226, 231, 232, 234], "synthet": [2, 3, 145, 161, 171, 176], "phantom": [2, 3, 166, 171, 183], "anim": [2, 3, 181, 182, 204], "bundle_file_formats_exampl": [2, 3], "zenodo": [2, 3, 171], "5281": [2, 3, 171], "3352379": [2, 3], "202": [2, 3, 68, 80, 83, 84, 172, 176, 225, 243], "204": [2, 3, 83, 84, 225], "eddi": [2, 3, 171, 221], "cenir_multib": [2, 3, 229], "cfin": [2, 3, 171, 221], "1400": [2, 3, 147, 221], "1600": [2, 3, 83, 146, 147, 222], "1800": [2, 3, 80, 81, 83, 146, 147, 228], "2200": [2, 3, 80, 83, 147, 230], "2400": [2, 3, 77, 83, 94, 147], "2600": [2, 3, 83, 147, 235], "2800": [2, 3, 147], "496": [2, 3, 80, 83, 84, 147, 226, 236], "gold": [2, 3, 171], "gold_standard_io": [2, 3], "2651349": [2, 3], "hcp842": [2, 3, 171], "bundle_atlas_hcp842": [2, 3], "283": [2, 3, 80, 83, 84, 228], "macroscal": [2, 3, 148, 149], "topologi": [2, 3, 148, 149, 176, 180], "178": [2, 3, 80, 83, 84, 86, 225], "68": [2, 3, 26, 33, 34, 37, 38, 41, 54, 75, 80, 81, 83, 84, 86, 224], "advanced_atlas_of_80_bundles_in_mni_spac": [2, 3], "7375883": [2, 3], "bundle_fa_hcp": [2, 3], "target_tractogram_hcp": [2, 3], "recoveri": [2, 3, 8], "384": [2, 3, 80, 84, 226], "399": [2, 3, 83, 84, 226], "fetch_ivim": [2, 3, 183], "ivim_dataset": [2, 3], "3395704": [2, 3], "2009a": [2, 3, 171], "2009c": [2, 3, 171, 219], "mni_templ": [2, 3], "fonov": [2, 3, 171], "evan": [2, 3, 171], "botteron": [2, 3, 171], "almli": [2, 3, 171], "mckinstri": [2, 3, 171], "bdcg": [2, 3, 171], "issn": [2, 3, 170], "1053": [2, 3, 83, 171, 220], "8119": [2, 3, 171], "033": [2, 3, 66, 67, 171], "birth": [2, 3, 171], "adulthood": [2, 3, 171], "supplement": [2, 3, 170], "juli": [2, 3, 171], "s102": [2, 3, 171], "s1053": [2, 3, 171], "70884": [2, 3, 171], "icbm": [2, 3], "152": [2, 3, 31, 41, 80, 83, 84], "c57bl6": [2, 3, 171], "qtdmri_test_retest_2subject": [2, 3], "santin": [2, 3], "philipp": [2, 3, 230, 231, 232], "leherici": [2, 3], "petiet": [2, 3], "996889": [2, 3, 171], "scil": [2, 3, 171, 222], "lab": [2, 3, 228, 229, 230, 231], "snail": [2, 3, 171], "discoveri": [2, 3], "mr750": [2, 3], "fetch_stanford_pve_map": [2, 3, 183], "taiwan": [2, 3, 171], "ntu": [2, 3, 171], "308": [2, 3, 80, 83, 84, 226], "615": [2, 3, 75, 83, 86, 217], "923": [2, 3, 59, 80, 222], "1231": [2, 3, 80, 83, 219], "1538": [2, 3, 83, 222], "1846": [2, 3, 83, 228], "2462": [2, 3, 83], "2769": [2, 3, 83], "3077": [2, 3, 80, 83], "3385": [2, 3, 148], "3692": [2, 3], "nation": [2, 3, 23, 145], "hospit": [2, 3, 23], "fetchflow": [2, 162, 183, 228, 229], "available_data": [2, 182], "get_fetcher_datanam": [2, 182, 183], "fetch_flow": 2, "temporarydirectori": [2, 235], "languag": [4, 5, 142, 221, 226, 229], "cython": [4, 20, 142, 146, 162, 168, 170, 176, 177, 180, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236], "h5py": [4, 5, 142, 146, 162, 174, 220, 222], "piec": [5, 168], "systemat": [5, 170], "stabil": [5, 176], "readabl": [5, 8], "toolkit": 5, "obscur": 5, "member": [5, 235], "decod": [5, 171], "effort": 5, "english": 5, "spell": [5, 230], "abid": 5, "pep8": [5, 6, 21, 217, 218, 219, 220, 227, 231], "conform": [5, 6, 176, 231], "syntax": [5, 176, 223, 231], "push": [5, 8, 15, 18, 19, 22], "complianc": 5, "editor": [5, 8, 142], "aspect": [5, 176], "shorthand": [5, 223], "npt": [5, 231], "sp": [5, 180, 230], "alia": [5, 7, 8, 170, 176, 177, 178, 180, 234], "cimport": 5, "prefix": [5, 6, 182], "cnp": [5, 170, 180, 233], "symbol": [5, 176], "cdef": [5, 180], "cpdef": 5, "ctypedef": 5, "statement": [5, 24, 219, 226, 229, 230, 234], "char": [5, 180], "xf": 5, "clustermapcentroid": [5, 183], "pyarray_data": [5, 233], "npy_intp": [5, 170, 180, 219, 233], "pstr": 5, "qa": [5, 176, 179, 180], "stride": [5, 170, 175, 176, 178, 180], "tmp": [5, 8, 181, 182, 225, 226], "ftmp": [5, 226], "get_direction_c": 5, "bad": [5, 142, 219, 221, 222, 225, 229], "void": 5, "estimate_kernel_s": 5, "kernelmax": 5, "k2": [5, 173], "libc": 5, "stdlib": 5, "calloc": 5, "realloc": 5, "side": [5, 168, 172, 176, 182, 217], "colon": [5, 8], "c_extract": [5, 177], "data2d": 5, "nogil": [5, 168, 176], "awai": [5, 143, 180, 221], "whitespac": [5, 6, 222], "websit": [5, 22, 149, 150, 171, 217, 218, 221, 222, 223, 224, 226, 227, 229, 232, 238], "interleav": 5, "intermix": 5, "former": [5, 146], "rational": 5, "edit": [5, 7, 12, 15, 18, 22, 146, 161], "valid_exampl": 5, "restructuredtext": [5, 221, 231], "rst": [5, 219, 220, 221, 222, 225, 226, 230], "markup": [5, 221], "pars": [5, 182, 233], "content": [5, 7, 12, 16, 219, 220, 224, 229], "compil": [5, 22, 146, 175, 176, 183, 217, 218, 221, 226, 227, 235], "web": [5, 22, 171, 224, 226, 230], "enrich": 5, "encourag": [5, 23, 152], "acronym": 5, "referenc": [5, 168, 171, 176, 177, 226], "comma": [5, 182, 212, 234], "nameyear": 5, "garyfallidis2014": 5, "_specific_filenam": 5, "specific_filenam": 5, "cap": 5, "capit": 5, "lowercas": [5, 229, 230], "customari": 5, "underscor": 5, "font": [5, 231], "caption": 5, "face": [5, 170, 171, 172, 176, 178, 183, 224, 226], "backquot": 5, "inlin": [5, 217, 221], "devel": [5, 41, 76, 83, 88, 90, 101, 146, 229], "enclos": 5, "categori": [6, 172, 176, 180], "bf": [6, 18, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236], "rf": [6, 142, 176, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 241], "refactor": [6, 8, 162, 217, 218, 221, 222, 224, 225, 226, 227, 228, 230, 231], "nf": [6, 7, 8, 145, 162, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "bw": [6, 219], "address": [6, 7, 220, 223], "bk": 6, "pl": [6, 23], "pylint": 6, "happier": 6, "relax": [6, 218, 226], "habit": [6, 21], "glanc": 6, "person": 7, "gitconfig": 7, "yourdomain": [7, 18], "ci": [7, 22, 162, 218, 219, 222, 228, 229, 230, 231, 236], "commit": [7, 9, 15, 18, 20, 21, 22, 24, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "checkout": [7, 8, 15, 17, 18, 22], "br": 7, "branch": [7, 9, 12, 15, 17, 18, 19, 22, 177, 180, 218, 219, 229], "wdiff": 7, "vim": [7, 22, 142], "config": [7, 15, 18, 182, 217, 222, 226, 227, 236], "simplest": [7, 18], "lg": [7, 8], "graph": [7, 8, 9, 17, 180, 183, 228], "cred": 7, "creset": 7, "cgreen": 7, "cr": [7, 171], "abbrev": 7, "date": [7, 174, 218, 219], "6d8e1e": 7, "my": [7, 8, 17, 142, 218, 219, 224, 230, 234], "ago": 7, "matthew": [7, 21, 22, 23, 217, 218, 219, 221, 222, 224, 225, 226, 227], "d304a73": 7, "placehold": [7, 168], "48": [7, 26, 31, 34, 37, 38, 39, 41, 54, 75, 80, 83, 84, 86, 171, 176, 219, 224], "hhuuggoo": 7, "week": 7, "jonathan": 7, "terhorst": 7, "4aff2a8": 7, "test_bugfix": 7, "hugo": 7, "a7ff2e5": 7, "summit": 7, "corran": 7, "webster": 7, "68f6752": 7, "axisindex": 7, "index_bi": 7, "sketchi": 7, "corr": 7, "376adbd": 7, "b605216": 7, "joshu": 7, "2e991e8": 7, "ufunc": [7, 217, 234], "7beda5a": 7, "throw": [7, 221, 228], "65af65": 7, "956fbab": 7, "remot": [7, 8, 15, 17, 18, 19, 171], "upstream": [7, 8, 15, 17, 18, 22], "thank": [7, 9, 18, 22, 161, 176], "yuri": 7, "zaytsev": 7, "post": [7, 15, 168, 238], "fork": [8, 12, 16, 18, 224], "git": [8, 9, 10, 14, 16, 17, 18, 19, 20, 22, 146, 221], "bugfix": [8, 217], "databas": 8, "yourself": [8, 11, 19], "mail": [8, 18, 22, 23, 146, 159, 170, 217, 238], "linux": [8, 15, 22, 147, 222, 227, 231, 232, 237], "strang": [8, 222, 231], "confus": [8, 176, 226, 234], "link": [8, 15, 17, 22, 148, 170, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 234, 235], "repo": [8, 17, 18, 22, 226, 230, 233], "branchnam": 8, "remind": [8, 17, 143, 222], "hack": [8, 18], "my_new_fil": 8, "readm": [8, 22, 217, 218, 219, 220, 221, 222, 226, 228, 229, 230, 234], "untrack": 8, "new_file_nam": 8, "faith": [8, 18], "tangl": 8, "url": [8, 19, 171, 219, 226, 230], "dropdown": 8, "menu": [8, 222], "attent": 8, "complic": 8, "happi": [8, 21, 23, 217, 226, 238], "preliminari": [8, 176], "unwant": 8, "stuff": [8, 14, 17, 20, 224, 226, 228, 233], "clone": [8, 10, 15, 18, 22, 146], "githhub": 8, "rememb": [8, 17, 22], "ssh": [8, 11, 22], "enh": [8, 217, 219, 220, 221, 222, 224, 226, 228, 229, 230, 231, 233, 234, 235, 236], "graphic": 8, "gitk": 8, "fanci": 8, "mayb": [8, 22, 168, 172, 176, 180, 229], "meantim": 8, "sternli": 8, "advis": [8, 170, 176, 177, 182], "messi": 8, "situat": [8, 143], "replai": [8, 181], "tear": 8, "backup": 8, "succinctli": 8, "conflict": [8, 22, 146, 182, 221], "man": 8, "luckili": 8, "straightforward": [8, 175], "mistak": [8, 142, 174, 228, 230], "abort": [8, 222], "reset": [8, 170, 182, 183], "forgot": 8, "reflog": 8, "8630830": 8, "immedi": [8, 143, 146], "278dd2a": 8, "11ee694744f2552d": 8, "26aa21a": 8, "seek_gzip_factori": 8, "leak": [8, 217, 226], "gzip": 8, "botch": 8, "embarrass": 8, "typo": [8, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236], "perhap": [8, 231], "poster": 8, "onelin": [8, 17], "eadc391": 8, "a815645": 8, "2dec1ac": 8, "13d7934": 8, "6ad92e5": 8, "maskedconst": 8, "29001ed": 8, "nep": [8, 231], "copul": 8, "structured_array_extens": 8, "sensibl": [8, 17], "reword": [8, 225], "amend": 8, "squash": [8, 176, 224], "meld": 8, "fixup": [8, 224], "THAT": 8, "WILL": 8, "BE": [8, 23, 170, 177, 182], "ii": [8, 170, 180], "collaps": [8, 143], "revis": [8, 22], "detach": 8, "721fc64": 8, "foo": 8, "0f22701": 8, "79": [8, 26, 37, 41, 54, 75, 80, 81, 83, 84, 86, 94, 224], "successfulli": [8, 243], "sophist": 8, "went": 8, "yarik": 9, "imagin": [9, 143, 147, 170, 176, 180], "repositori": [10, 17, 18, 21, 146], "cd": [10, 18, 19, 22, 146, 147], "paus": 11, "hardcor": 11, "trunk": [12, 19, 22], "review": [12, 22, 234], "debian": [13, 226], "ubuntu": [13, 219, 222, 230, 234], "sudo": [13, 22, 146], "apt": [13, 146], "fedora": 13, "yum": [13, 146], "msysgit": 13, "osx": [13, 22, 162, 217, 219, 222, 229, 231], "comprehens": [14, 73], "host": 14, "servic": [14, 22, 170, 177, 182], "quicker": 14, "excel": [15, 18, 170], "pro": [15, 218], "book": [15, 177, 221], "depth": [15, 168, 170, 174, 175, 176, 177, 181, 182, 204], "cheat": 15, "sheet": 15, "cast": [15, 83, 174, 175, 176, 182, 217, 219], "snippet": [15, 145, 223], "tos": 15, "magic": 15, "parabl": 15, "foundat": [15, 145], "fernando": 15, "perez": 15, "tip": [15, 143, 231], "svn": 15, "crash": [15, 219, 221, 222, 228], "subvers": 15, "linu": 15, "torvald": 15, "histori": [15, 170, 175, 226], "onlin": [16, 218, 225, 237], "peopl": [17, 142, 240], "Being": 17, "scari": 17, "rw": [17, 22], "incorpor": [17, 168], "rebas": [17, 22, 219, 220, 221, 222, 223, 225], "ff": [17, 177], "rejoin": 17, "compact": [17, 144, 180], "discov": 18, "quickest": 18, "email": [18, 217], "somewher": 18, "test_my_bug": 18, "funni": 18, "send": [18, 21, 23, 146, 159], "warmli": 18, "unmodifi": 18, "0001": [18, 176], "refresh": 18, "pointer": 18, "accident": [19, 218], "deliber": [19, 170], "satisfact": 19, "checklist": 20, "upload": [20, 219, 221, 236], "guidelin": [20, 21, 24, 159, 162, 220, 221, 223, 234], "futur": [22, 168, 173, 174, 228, 230], "divis": [176, 219, 222, 226], "xrang": [], "seek": 21, "courag": 21, "willing": 21, "ian": [21, 23, 180, 224], "bago": [21, 23, 217, 218, 219, 221, 224, 225, 226, 227], "primari": [21, 176], "nipi": [21, 22, 146, 160, 170, 219, 224, 225, 230, 233, 238], "pitch": [21, 143, 170], "feedback": 21, "hope": [21, 146, 160], "enjoi": 21, "apologi": 21, "outstand": 22, "delai": [22, 174], "travi": [22, 217, 218, 219, 220, 221, 222, 223, 226, 229, 230, 231], "inde": 22, "pr": [22, 76, 176, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "changelog": [22, 217, 226, 227, 230], "shortlog": 22, "tag": [22, 176, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "opportun": [22, 142], "mailmap": 22, "duplic": [22, 170, 171, 172, 176, 180, 217, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 232, 233, 234, 235, 236], "author": [22, 168, 171, 177, 182, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "copyright": [22, 168, 170, 171, 177, 182, 218, 219, 222, 226], "conf": [22, 170, 219], "licens": [22, 168, 171, 226], "pyx": [22, 170, 219, 220, 225, 226, 233], "doctest": [22, 170, 218, 220, 224, 225], "doctest_extmod": 22, "buildbot": [22, 217, 219, 225, 226, 227, 231, 237], "long_descript": 22, "diffthi": 22, "distclean": 22, "fxd": [22, 146], "build_ext": [22, 146], "sv": [22, 170, 171], "moment": [22, 168, 176], "autodoc": 22, "builder": 22, "yml": [22, 219], "appveyor": [22, 162, 222, 229, 230], "trigger": [22, 170, 224], "macpython": 22, "privileg": 22, "trick": [22, 176, 182], "pypi": 22, "_version_extra": 22, "setuptool": [22, 146, 236], "intro": [22, 174, 222], "sdist": [22, 235], "gztar": 22, "pypirc": 22, "server": 22, "password": 22, "login": 22, "mainten": [22, 218, 231], "maint": [22, 217, 219, 225, 226, 228, 229, 230, 232, 234, 235], "dev": [22, 146, 168, 182, 185, 218, 219, 220, 222, 226, 227], "_version_micro": 22, "_version_minor": 22, "bdist32": 22, "ex": [22, 176, 180, 182, 212], "bic": 22, "berkelei": [22, 23, 163], "win32": [22, 226], "admin": 22, "python26": 22, "bdist_egg": 22, "bdist_wininst": 22, "bdist": 22, "mpkg": [22, 225], "egg": 22, "dmg": [22, 225], "permiss": [22, 170, 171, 177], "build_dmg": 22, "box": [22, 174, 177, 180, 182, 208, 212, 221], "bdist_mpkg": 22, "reown_mpkg": 22, "announc": [22, 222], "fear": 22, "trembl": 22, "advic": [170, 222], "howto": [], "pyport": [], "python3port": [], "ptgmedia": [], "pearsoncmg": [], "imprint_download": [], "informit": [], "python2python3": [], "__future__": 230, "print_funct": [], "absolute_import": [], "configpars": [], "python3": [81, 83, 219, 220, 229], "builtin": [], "namespac": [168, 170, 174, 175, 176, 177, 182, 230], "functool": [], "unicod": [], "my_str": [], "byte": [170, 176, 178, 183, 224, 228], "rt": [176, 182, 200], "stringio": [], "bytesio": [], "basestr": [], "string_typ": [], "isinst": [], "a_vari": [], "meanwhil": 157, "gone": [], "__next__": [], "valueerror": [168, 170, 172, 176, 180, 217, 226, 228, 236], "err": [], "has_kei": [], "hello": [], "item": [170, 171, 174, 176, 178, 180, 234], "iteritem": [], "team": [23, 163, 177], "indiana": [23, 145], "IN": [23, 170, 176, 177, 182], "usa": 23, "birmingham": 23, "uk": [23, 170], "databrick": 23, "san": [23, 170, 182, 214], "francisco": [23, 182, 214], "ca": [23, 142, 163, 176], "omar": [23, 217, 218, 219, 226, 227, 235], "googl": [23, 145, 146, 162, 229], "microsoft": 23, "qc": 23, "gabriel": [23, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 233, 234, 236], "swiss": 23, "feder": 23, "epfl": 23, "lausann": 23, "ch": 23, "matthieu": [23, 218, 219, 220, 225, 226], "dumont": [23, 218, 219, 220, 225, 226], "imeka": 23, "ranveer": [23, 219, 220], "aggarw": [23, 181, 182, 204, 219, 220], "hyderabad": 23, "telangana": 23, "india": 23, "retir": [23, 217, 222], "formerli": 23, "mrc": 23, "cognit": 23, "california": [23, 182, 214], "christoph": [23, 170, 217, 218, 219, 221, 222, 223, 225, 226, 228, 230], "houd": [23, 180, 217, 218, 219, 221, 222, 223, 225, 226, 228, 230], "francoi": [23, 222, 223, 228, 229, 230, 234, 235, 236], "rh\u00e9ault": 23, "utrecht": 23, "nl": [23, 176], "michael": [23, 217, 224, 226], "paquett": [23, 217, 224, 226], "planck": 23, "leipzig": 23, "de": 23, "massachusett": 23, "emanuel": [23, 224], "laboratori": 23, "nilab": 23, "trento": 23, "IT": 23, "yaroslav": [23, 219, 224, 236], "halchenco": 23, "pb": 23, "depart": [23, 145], "dartmouth": 23, "nh": 23, "emmanuel": [23, 225, 235], "recherch": 23, "informatiqu": 23, "syst\u00e8m": 23, "al\u00e9atoir": 23, "irisa": 23, "renn": 23, "fr": [23, 176], "sylvain": [23, 172, 182, 193, 225], "inria": [23, 176], "sophia": [23, 176, 178], "antipoli": [23, 176, 178], "erick": 23, "ziegler": [23, 225], "universit\u00e9": 23, "li\u00e8g": 23, "kimberli": [23, 176, 225], "chantal": [23, 227], "cardiff": 23, "demian": [23, 171, 222, 226], "mauro": [23, 217, 221, 225, 226], "franc": 23, "gregori": [23, 218, 219, 226, 230, 231], "lee": [23, 176, 180, 218, 219, 226, 230, 231], "cincinnati": 23, "oh": 23, "endolith": [23, 224], "york": 23, "matthia": [23, 225, 226], "ekman": [23, 225, 226], "donder": 23, "nijmegen": 23, "andrew": [23, 148, 226], "lawrenc": [23, 226, 229], "kesshi": [23, 219, 221, 222, 223, 226], "maria": [23, 224], "luisa": [23, 224], "mandelli": [23, 224], "adam": [23, 175, 228], "rybinski": 23, "jagiellonian": 23, "krakow": 23, "qiyuan": [23, 227], "tian": [23, 227], "jon": [23, 219, 220, 221, 222, 223, 228, 229, 230, 231, 232, 234, 235], "haitz": [23, 219, 220, 221, 222, 223, 228, 229, 230, 231, 232, 234, 235], "legarreta": [23, 219, 220, 221, 222, 223, 228, 229, 230, 231, 232, 234, 235], "gorro\u00f1o": [23, 220, 221, 222, 223, 228, 229, 230, 231, 232, 234, 235], "champalimaud": 23, "programm": 23, "lisbon": 23, "stephan": [23, 218, 219], "eindhoven": 23, "himanshu": [23, 218], "mishra": [23, 218], "indian": 23, "karaghpur": 23, "gauvin": [23, 217, 219], "oscar": [23, 217], "esteban": [23, 217], "bishakh": [23, 218, 219], "ghosh": [23, 218, 219], "durgapur": 23, "dimitri": [23, 217], "rozaki": [23, 217], "tomotech": 23, "athen": 23, "rohan": [23, 217], "prinja": [23, 217], "bombai": 23, "sagun": [23, 218], "pai": [23, 218], "vatsala": [23, 218], "swaroop": [23, 218], "mombai": 23, "shahnawaz": [23, 219], "ahm": [23, 219], "birla": 23, "pilani": 23, "goa": 23, "nil": [23, 219, 221], "goyett": [23, 219, 221], "scott": [23, 228], "trinkl": [23, 228], "chicago": 23, "il": 23, "kevin": [23, 228], "sitek": [23, 228], "mit": [23, 168], "mcgovern": 23, "derek": [23, 229, 230, 234], "pisner": [23, 229, 230, 234], "texa": 23, "austin": 23, "ross": [23, 229], "john": [23, 233], "hopkin": 23, "larson": [23, 229, 231, 234, 235], "jakob": [23, 222], "wasserth": [23, 222], "german": 23, "cancer": 23, "bramsh": [23, 222, 223, 230, 231, 232, 233, 236], "qamar": [23, 222, 223, 230, 231, 232, 233, 236], "pennsylvania": 23, "sven": [23, 219], "dorkenwald": [23, 219], "princeton": 23, "boundless": 23, "everyon": 23, "mission": 24, "boot": [24, 166, 183, 219], "dipy_align_affin": [24, 157, 216], "dipy_align_syn": [24, 157, 216, 231], "dipy_apply_transform": [24, 157, 216], "dipy_buan_lmm": [24, 148, 216], "dipy_buan_profil": [24, 148, 216], "dipy_bundlewarp": [24, 150, 216], "dipy_correct_mot": [24, 155, 216], "dipy_denoise_lpca": [24, 152, 216], "dipy_denoise_mppca": [24, 152, 216], "dipy_denoise_patch2self": [24, 216], "dipy_evac_plu": [24, 216], "dipy_fetch": [24, 147, 151, 216, 229], "dipy_fit_csa": [24, 147, 156, 216, 228], "dipy_fit_csd": [24, 156, 216, 228], "dipy_fit_dki": [24, 156, 216], "dipy_fit_dti": [24, 147, 156, 216, 228, 235], "dipy_fit_ivim": [24, 156, 216], "dipy_fit_mapmri": [24, 156, 216], "dipy_gibbs_ring": [24, 153, 216], "dipy_horizon": [24, 147, 148, 149, 150, 216, 228, 231, 234], "dipy_info": [24, 147, 216], "dipy_labelsbundl": [24, 149, 216], "dipy_mask": [24, 147, 158, 216], "dipy_median_otsu": [24, 147, 156, 216], "dipy_recobundl": [24, 149, 216], "dipy_reslic": [24, 216], "dipy_slr": [24, 149, 157, 162, 216], "dipy_snr_in_cc": [24, 216], "dipy_split": [24, 216], "dipy_track_pft": [24, 158, 216], "paradigm": [142, 239], "bloch": 142, "torrei": 142, "pgse": [142, 239, 240, 241], "readout": 142, "gamma": [142, 143, 172, 176, 239], "gyromagnet": [142, 239], "width": [142, 168, 176, 181, 239], "wave": [142, 171, 176, 241], "proport": [142, 168, 175], "stand": [142, 175], "gather": [142, 182, 184], "mobil": 142, "molecul": 142, "movement": 142, "counterintuit": 142, "dephas": 142, "dwmri": 142, "speak": 142, "plenti": 142, "nonisotrop": [142, 226], "textrm": [142, 176], "batteri": 142, "painless": 142, "noth": [142, 168, 228], "ever": 142, "consol": [142, 146], "dicom": [142, 228], "npz": [142, 171, 222], "pydicom": 142, "v4": 142, "v6": 142, "v7": 142, "loadmat": 142, "pytabl": [142, 162, 219, 220], "hdf5": [142, 162, 174, 175, 219, 229], "serial": [142, 176], "load_pickl": [142, 183], "huge": [142, 182, 209, 237], "pycharm": 142, "sublim": 142, "aptana": 142, "emac": 142, "eclips": 142, "pydev": 142, "chri": [142, 148, 222], "rorden": 142, "dcm2nii": 142, "cabiatl": [], "mricro": [], "mricron": 142, "reader": [142, 183], "openli": 142, "grade": 142, "fcon_1000": 142, "nitrc": 142, "humanconnectom": [142, 171], "openneuro": 142, "gimbal_lock": [143, 230], "euler": [143, 144, 170, 230], "defici": 143, "indistinguish": 143, "spitfir": 143, "aircraft": 143, "tail": 143, "wing": 143, "roll": [143, 170], "tilt": 143, "violent": 143, "straight": [143, 180], "wait": 143, "pm": [143, 176, 239, 240], "radian": [143, 170, 173, 180, 239], "smallmatrix": 143, "pm1": 143, "proof": 143, "mathworld": [143, 144, 170, 244], "rewrit": 143, "v_": [143, 170, 176], "v_1": [143, 177], "v_2": [143, 177], "conclus": 143, "gregslabaugh": 143, "homogen": [144, 168, 170, 176, 178], "theorem": 144, "boldsymbol": 144, "x_1": 144, "x_n": 144, "pythagora": 144, "gimbal": 144, "lock": [144, 176], "quaternion": 144, "suffer": [144, 176], "orthogon": [144, 176, 180, 243, 244], "transpos": [144, 168, 170, 176, 178, 181], "synonym": 144, "paragon": 145, "special": [145, 168, 170, 172, 175, 176, 177, 182], "synb0": [145, 171, 183, 236], "cnn": [145, 183, 236], "horizon": [145, 162, 182, 183, 204, 223, 228, 229, 230, 231, 234, 236], "older": [145, 176, 219, 221, 222, 224, 226], "april": [145, 163], "march": [145, 163], "past": 145, "dec": [145, 147, 174, 222], "colorfa": [145, 224], "exercis": 145, "filepath": [145, 175], "acknowledg": [145, 228], "intellig": 145, "bioengin": 145, "nih": [145, 174, 223], "gordon": 145, "betti": 145, "moor": [145, 176, 180], "alfr": 145, "sloan": [145, 176], "escienc": 145, "summer": [145, 162, 163, 229], "facil": 145, "gotten": 146, "greatest": 146, "bleed": 146, "platform": [146, 153, 226], "conda": [146, 217, 219, 220, 222, 227], "forg": 146, "appl": [146, 170], "xcode": 146, "mint": 146, "neurodebian": 146, "mac": [146, 147, 218, 222, 231, 235, 237], "big": [146, 156, 170, 176, 182, 202, 220, 226, 228], "uninstal": 146, "__file__": 146, "canopi": 146, "pythonxi": 146, "64bit": [146, 162], "alloc": [146, 168, 170, 176, 178, 183], "chunk": [146, 176], "32bit": [146, 227], "okai": 146, "among": [146, 180], "temporari": [146, 168, 173, 174, 176, 180, 235], "old": [146, 162, 222, 224, 226, 230, 231], "pythonpath": 146, "bashrc": 146, "bash_profil": 146, "retyp": 146, "export": [146, 181], "user_dir": 146, "restart": 146, "cmd": [146, 222], "powershel": 146, "python_compil": 146, "msc": 146, "1900": [83, 146, 229], "amd64": 146, "visualstudiobuildtool": 146, "msc_ver": 146, "1700": [146, 223], "1910": [83, 146, 228], "unabl": [146, 176, 219, 226, 231], "vcvarsal": 146, "bat": 146, "reinstal": 146, "multithread": [146, 162], "gcc": 146, "clang": 146, "brew": 146, "multilib": 146, "bash": 146, "usr": 146, "cellar": 146, "omp": [146, 219], "hombrew": 146, "hour": [146, 171], "encount": [76, 83, 88, 90, 146], "build_modref_templ": 146, "docgen_cmd": 146, "reference_cmd": 146, "examples_built": 146, "make_exampl": 146, "traceback": [146, 171, 172, 180], "modulenotfounderror": [146, 229], "virtual": 146, "sphinxbuild": 146, "path_to_sphinx": 146, "mkdir": [147, 148, 149, 151, 152, 153, 155, 156, 157, 158], "data_fold": [147, 151], "__dti_ax_ep2d_2_5_iso_33d_20141015095334_4": [147, 152, 156], "mv": 147, "uint16": [147, 217], "888": [81, 147, 219], "avg": [147, 180], "940581408413976": 147, "percentil": [147, 181], "98th": 147, "psr": 147, "569": [75, 80, 83, 86, 147, 227], "451": [83, 84, 147, 226], "131": [80, 83, 84, 147, 224], "289": [83, 84, 147, 162, 225, 228], "1257": [147, 219], "62918037280702": 147, "234": [80, 83, 84, 147, 225], "498": [80, 83, 147, 226], "084": 147, "641": [75, 83, 147, 222], "069": 147, "488": [80, 83, 147, 226], "104": [80, 83, 84, 147, 224], "082": 147, "486": [80, 83, 147, 226], "504": [86, 104, 105, 147, 226], "elef": 147, "b0_thr": 147, "out_work": 147, "ga": [147, 176, 182, 183, 199, 200], "fastest": 147, "out_mask": [147, 182, 195, 207, 208], "pam5": [147, 148, 158, 162, 174, 182, 229], "out_tractogram": [147, 182, 214, 215], "tracks_from_peak": 147, "tracking_method": [147, 158, 182, 214], "random_color": [147, 149, 150, 181, 182, 204, 234], "length_gt": [147, 181, 182, 204], "length_lt": [147, 181, 182, 204], "clusters_gt": [147, 181, 182, 204], "clusters_lt": [147, 181, 182, 204], "native_coord": [147, 182, 204], "stealth": [147, 181, 182, 204], "emergency_head": [147, 182, 204], "bg_color": [147, 181, 182, 204], "disable_order_transpar": [147, 182, 204], "out_stealth_png": [147, 182, 204], "out_strat": 147, "mix_nam": [147, 149, 182], "log_level": [147, 174, 175], "log_fil": 147, "stretch": 147, "nonetheless": 147, "parkinson": 148, "ppmi": 148, "marek11": 148, "yeh18": [148, 149], "atlas_of_30_human_brain_bundles_in_mni_spac": [148, 149], "12089652": [148, 149], "35092": 148, "yhjc": 148, "12098397": 148, "h5": [148, 174], "subjects_smal": 148, "af_r": 148, "ccmid": 148, "cc_forcepsmajor": [148, 171], "cc_forcepsminor": 148, "cst_r": [148, 171], "emc_l": 148, "emc_r": 148, "fpt_l": 148, "fpt_r": 148, "ifof_l": 148, "ifof_r": 148, "ilf_l": 148, "ilf_r": 148, "mlf_l": 148, "mlf_r": 148, "ml_l": 148, "ml_r": 148, "mdlf_l": 148, "mdlf_r": 148, "opt_l": 148, "opt_r": 148, "or_l": 148, "or_r": 148, "stt_l": 148, "stt_r": 148, "uf_r": 148, "3805": [80, 148], "anatomical_measur": [148, 183], "org_bundl": 148, "rec_bundl": 148, "3806": [54, 83, 148], "3809": [80, 148], "3850": [83, 148], "3851": [80, 148], "3383": [80, 83, 148], "3387": [83, 148], "3392": [83, 148], "3552": [83, 148], "streamlines_moved_af_l__labels__recognized_orig": 148, "streamlines_moved_af_r__labels__recognized_orig": 148, "streamlines_moved_ccmid__labels__recognized_orig": 148, "streamlines_moved_uf_l__labels__recognized_orig": 148, "streamlines_moved_uf_r__labels__recognized_orig": 148, "streamlines_moved_v__labels__recognized_orig": 148, "moved_af_l__recogn": 148, "moved_af_r__recogn": 148, "moved_ccmid__recogn": 148, "moved_uf_l__recogn": 148, "moved_uf_r__recogn": 148, "moved_v__recogn": 148, "overridden": 148, "eg": [148, 177, 179, 182, 225, 236], "bundle_profil": 148, "lmm": [148, 182], "lmm_plot": 148, "buan_thr": [148, 182, 204], "buan_highlight": [148, 182, 204], "af_l_fa_pvalu": 148, "pvalu": [148, 182, 204], "cst_l_fa_pvalu": 148, "sm_plot": 148, "dipy_buan_shap": [148, 230], "12033390": 148, "marek": 148, "kenneth": 148, "jen": [148, 182, 199], "danna": 148, "lasch": 148, "shirlei": 148, "siderowf": 148, "carolin": 148, "simuni": 148, "tanya": 148, "coffei": 148, "kieburtz": 148, "karl": 148, "flagg": 148, "emili": 148, "chowdhuri": 148, "sohini": 148, "neurobiologi": 148, "panesar": [148, 149], "fernand": [148, 149], "meola": [148, 149], "yoshino": [148, 149], "fernandez": [148, 149], "miranda": [148, 149], "vettel": [148, 149], "verstynen": [148, 149], "hcp_tractogram_zip": 149, "7013003": 149, "whole_brain_mni": 149, "rb_output": 149, "pink": [149, 150], "org_output": 149, "visit": [149, 150, 166, 177], "chandio2023": [150, 168, 182, 189], "m_uf": 150, "s_uf_li": 150, "capac": 150, "\u03bb": [150, 182, 189], "requirs": 150, "nonlinearly_mov": [150, 182], "caustiou": 150, "destin": 151, "specific_dataset": 151, "specific_data_out_fold": 151, "eigenspectrum": 152, "lpca": [152, 162, 182, 191, 228, 229, 234], "ow": 152, "denoise_lpca_output": 152, "suffic": [152, 153, 155], "dwi_lpca": [152, 182], "subtl": 152, "hardli": 152, "denoise_mppca_output": 152, "textur": 152, "denoise_nlmeans_output": 152, "lcpa": 152, "veraart15": 153, "perrone15": 153, "gibbs_ringing_output": 153, "t1_brain_denois": 153, "motion_output": 155, "recons_csd_output": 156, "stanford_hardi_mask": 156, "recons_mapmri_output": 156, "recons_dti_output": 156, "save_metr": [156, 182, 184, 199, 200, 201, 202], "out_tensor": [156, 182, 200], "dti_tensor": [156, 182], "recons_dki_output": 156, "cfin_multib_mask": 156, "recons_csa_output": 156, "pam": [156, 173, 174, 181, 182, 197, 198, 214, 215, 222], "extract_pam_valu": [156, 182, 197, 198], "recons_ivim_output": 156, "ivim_mask": 156, "sort": [157, 168, 171, 173, 176, 180, 181, 182, 204, 226], "image_reg_output": 157, "path_to_static_fil": 157, "path_to_moving_fil": 157, "affine_reg_output": 157, "out_affin": [157, 182, 184, 190, 211], "syn_reg_output": 157, "out_warp": [157, 182, 185], "em": [157, 168, 177, 182, 185], "syn_reg_warp": 157, "transform_typ": [157, 182, 186], "transform_reg_output": 157, "path_to_transform_map_fil": 157, "nb_pt": [157, 168, 177, 182, 211], "sl_reg_output": 157, "stop_fil": 158, "seed_dens": [158, 182, 214, 215], "recon": [158, 219, 228], "pve_wm": 158, "eudx_tracking_output": 158, "det_tracking_output": 158, "det": [158, 168, 170, 176, 182, 214, 220, 221], "prob_tracking_output": 158, "prob": [158, 182, 214, 228], "closest_peaks_output": 158, "prematur": 158, "pft_output": 158, "pve_gm": 158, "pve_csf": 158, "expertis": 159, "didn": 159, "depict": 159, "replic": [161, 170], "tripl": [161, 223], "quot": [161, 223, 226], "alter": [161, 180], "pymvpa": 161, "dtiflow": 162, "lpcaflow": [162, 183], "rumbaflow": 162, "vtp": [162, 174, 234, 235], "dkiflow": 162, "imageregistrationflow": [162, 183], "motioncorrectionflow": [162, 183], "parallelis": 162, "govern": [162, 176, 233], "cli": [162, 228, 230, 231, 232, 233, 234, 235], "10x": 162, "multiplatform": [162, 237], "134": [80, 83, 84, 162, 224, 231], "vtk9": [162, 230], "typographi": 162, "tensorflow": [162, 175, 229], "smarter": 162, "critic": [162, 174, 175], "mtm": [162, 228], "quickbundlesx": [162, 168, 181, 182, 183, 204, 211, 221], "tractometri": [162, 166, 223], "almost": [162, 176, 224], "287": [83, 84, 162, 217, 222], "cvxopt": [162, 220, 226, 228], "reorient": [162, 170, 180, 217, 218, 222], "cleaner": 162, "exhibitor": [162, 163], "ohbm": [162, 163], "massiv": 162, "geodes": [162, 176, 182, 199, 200, 227], "robustli": 162, "novemb": [163, 170], "septemb": 163, "august": 163, "decemb": [163, 170], "octob": [163, 168], "june": [163, 170], "februari": 163, "magazin": 163, "nov": [163, 172, 176, 243], "22nd": 163, "3x": 163, "teach": 163, "fundament": 163, "seminar": 163, "neuroscientist": 163, "qbin": 163, "dont": 163, "creator": 163, "attend": 163, "hbm": [163, 217, 226], "0dev": 163, "win": 163, "took": 163, "mia": 163, "school": 163, "mcgill": [163, 171], "3rd": [163, 177, 180], "sprint": 163, "gui": 166, "unittest": [166, 226], "__version__": 166, "pycpd": 168, "siavashk": 168, "encapsul": 168, "codomain": 168, "parzenjointhistogram": 183, "parzen": 168, "parzen62": 168, "cubic": [168, 176, 180, 182, 185], "annal": 168, "1065": [168, 219], "1076": [80, 168, 219], "1962": [80, 83, 168, 229], "kwd": 168, "enum": [168, 174], "diagnos": 168, "debug": [168, 170, 174, 175, 219], "prealign": 168, "metric_kwarg": 168, "ride": [168, 174], "ndarrai": [168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 231], "dwi_affin": 168, "template_affin": 168, "reg_kwarg": 168, "warped_b0": 168, "fist": 168, "disp": [168, 170], "domain_img": 168, "codomain_img": 168, "between_affin": 168, "ret_metr": 168, "gradual": 168, "boolean": [168, 170, 172, 175, 176, 180, 181, 182], "sampling_proport": 168, "interv": [168, 173, 180], "xopt": [168, 170, 174, 183], "fopt": [168, 170, 174, 183], "isosc": [168, 231, 234], "kwarg": [168, 170, 171, 173, 174, 175, 176, 177, 182, 217, 231, 235], "ref_affin": 168, "b0_ref": 168, "xform_img": 168, "affine_arrai": 168, "n_point": [168, 172, 179, 180, 182, 203, 230], "native_resampl": 168, "sigma2": 168, "low_rank": 168, "num_eig": 168, "max_iter": 168, "arg": [168, 170, 171, 173, 174, 175, 176, 177, 182, 223], "cloud": 168, "nxd": 168, "mxd": 168, "ty": 168, "consecut": [168, 180, 228], "span": [168, 170, 176], "exclus": [73, 168, 180], "absolut": [168, 170, 175, 176, 180, 182, 219, 223, 230, 243], "mxn": 168, "pt1": 168, "nx1": 168, "p1": 168, "mx1": 168, "likelihoo": 168, "lowrank": 168, "get_registration_paramet": [168, 183], "registration_paramet": 168, "transform_point_cloud": [168, 183], "update_transform": [168, 183], "0905": 168, "2635": [83, 168, 235], "update_vari": [168, 183], "eig_fgt": 168, "gauss": [168, 182, 185], "domain_grid_shap": 168, "domain_grid2world": 168, "codomain_grid_shap": 168, "codomain_grid2world": 168, "domain_grid": 168, "codomain_grid": 168, "stream": [168, 180], "get_affin": [168, 183, 219], "set_affin": [168, 183], "affine_inv": 168, "unchang": [168, 170, 176, 178, 180], "image_grid2world": 168, "sampling_grid_shap": 168, "sampling_grid2world": 168, "resample_onli": 168, "domain_shap": 168, "codomain_shap": 168, "drive": 168, "neg_mi": 168, "distance_and_gradi": [168, 183], "neg_mi_grad": 168, "grad": [168, 180], "bfg": [168, 170, 177, 226], "newton": [168, 170, 175, 234], "dogleg": [168, 170], "trust": [168, 170, 176], "ncg": [168, 170], "n_scale": [168, 182, 185], "never": [168, 180], "docstring_addendum": [168, 183], "accomplish": [168, 176, 182], "disp_shap": 168, "disp_grid2world": 168, "compute_inversion_error": [168, 183], "perfect": 168, "comp": [168, 176], "dinv": 168, "expand_field": [168, 183], "expand_factor": 168, "new_shap": 168, "get_backward_field": [168, 183], "is_invers": 168, "get_simplified_transform": [168, 183], "diffeomorh": 168, "interpret_matrix": [168, 183], "shallow_copi": [168, 183], "shallow": 168, "new_map": 168, "image_world2grid": 168, "out_shap": 168, "out_grid2world": 168, "_warp_forward": 168, "_warp_backward": 168, "transform_point": [168, 183], "coord2world": 168, "world2coord": 168, "transform_points_invers": [168, 183], "warp_endomorph": [168, 183], "endomorph": 168, "inherit": [168, 172, 176, 177, 182, 194], "costli": 168, "computation": [168, 176], "simpler": [168, 224], "abstract": [168, 170, 176, 177, 180, 181, 182], "get_map": [168, 183, 231], "upon": [73, 168, 176, 180, 182, 224, 225], "set_level_it": [168, 183], "inv_tol": [168, 182, 185], "static_to_ref": 168, "current_displac": 168, "new_displac": 168, "disp_world2grid": 168, "time_sc": 168, "intend": [168, 175, 181, 182, 202, 235], "d2": [168, 174, 176], "d1": [168, 176], "mean_norm": 168, "csv": [168, 170, 174, 175, 176, 177], "xl": [168, 170, 174, 175, 176, 177], "gnumer": [168, 170, 174, 175, 176, 177], "cater": [168, 170, 174, 175, 176, 177], "hierarchi": [168, 170, 174, 175, 176, 177], "period": [168, 170, 174, 175, 176, 177, 230], "java": [168, 170, 174, 175, 176, 177], "gnu": [168, 170, 174, 175, 176, 177], "charg": [168, 170, 172], "compute_backward": [168, 183], "compute_forward": [168, 183], "free_iter": [168, 183], "registrationoptim": 168, "get_energi": [168, 183], "initialize_iter": [168, 183], "unpract": 168, "set_levels_abov": [168, 183], "set_levels_below": [168, 183], "set_moving_imag": [168, 183], "moving_spac": 168, "moving_direct": 168, "set_static_imag": [168, 183], "static_spac": 168, "static_direct": 168, "use_moving_image_dynam": [168, 183], "original_moving_imag": 168, "diffeomorficmap": 168, "use_static_image_dynam": [168, 183], "original_static_imag": 168, "inner_it": 168, "q_level": 168, "double_gradi": 168, "step_typ": 168, "gauss_newton": [168, 182, 185], "transfer": [168, 223], "seidel": [168, 182, 185], "quantiz": [168, 182, 185], "demon": [168, 182, 185, 221, 222], "schedul": [168, 180, 182, 185, 219], "compute_demons_step": [168, 183], "forward_step": 168, "compute_gauss_newton_step": [168, 183], "bruhn": 168, "weickert": 168, "bruhn05": 168, "andr": 168, "joachim": 168, "ultim": 168, "iccv": 168, "use_double_gradi": 168, "dynam": [168, 173, 177], "originalstaticimag": 168, "vercauteren": 168, "vercauteren09": 168, "tom": [168, 219, 235, 236], "xavier": 168, "pennec": [168, 176], "aymer": 168, "perchant": 168, "nichola": 168, "ayach": [168, 176], "delta_field": 168, "sigma_sq_field": 168, "gradient_field": 168, "lambda_param": 168, "coarser": 168, "infinit": [168, 178, 180, 228], "sigmafield": 168, "cval": [168, 182, 210], "pool": [168, 172, 175, 176, 182, 203, 210, 225], "f_name": 168, "num_level": 168, "input_spac": 168, "sigma_factor": 168, "mask0": 168, "weaker": 168, "from_level": 168, "get_affine_inv": [168, 183], "get_domain_shap": [168, 183], "get_expand_factor": [168, 183], "to_level": 168, "get_imag": [168, 183], "get_scal": [168, 183], "get_sigma": [168, 183], "get_spac": [168, 183], "print_level": [168, 183], "aka": 168, "hungri": [168, 218], "l_bfgs_b": [168, 177], "powel": [168, 170, 177], "mat": [168, 170, 176, 180, 225], "matopt": 168, "matopt_histori": 168, "func": [168, 170, 176, 178, 182], "optimum": [168, 170, 176], "matrix_histori": 168, "matrix1": 168, "matrix2": 168, "block_siz": 168, "min_siz": [168, 177], "default_bound": 168, "rm_small_clust": [168, 182, 211, 236], "maxit": [168, 170, 176], "select_random": 168, "greater_than": [168, 177, 182, 209, 211], "less_than": [168, 176, 177, 182, 209, 211], "qbx_thr": [168, 182, 211], "n_bundl": 168, "lst": 168, "unmatch": 168, "precomput": [168, 176], "ml": [168, 182, 189], "matched_pair": [168, 182], "unitari": [168, 181], "shape_profilen": 168, "stdv": 168, "algebra": 170, "descriptor": 170, "reserv": [170, 175, 177], "redistribut": [170, 177, 182], "permit": [170, 176, 177, 182], "met": [170, 177, 182], "retain": [41, 83, 170, 177, 181, 182], "disclaim": [170, 177, 182], "materi": [170, 177, 182], "endors": [170, 177], "BY": [170, 177, 182], "THE": [170, 177, 182], "holder": 170, "AND": [170, 174, 177, 182], "AS": [170, 177, 182], "OR": [170, 177, 182], "warranti": [170, 171, 177, 182], "BUT": [170, 177, 182], "TO": [170, 177, 182], "OF": [170, 177, 182], "merchant": [170, 177, 182], "FOR": [170, 177, 182], "NO": [170, 177, 182], "shall": [170, 177, 180, 182], "owner": 170, "liabl": [170, 177, 182], "indirect": [170, 177, 182], "incident": [170, 177, 182], "exemplari": [170, 177, 182], "consequenti": [170, 177, 182], "damag": [170, 171, 177, 182], "procur": [170, 177, 182], "substitut": [170, 176, 177, 182], "profit": [170, 177, 182], "busi": [170, 177, 182], "interrupt": [170, 177, 182], "liabil": [170, 177, 182], "contract": [168, 170, 177, 182], "strict": [170, 171, 174, 177, 182], "neglig": [170, 177, 182], "aris": [170, 177, 182], "IF": [170, 177, 182], "SUCH": [170, 177, 182], "declar": [170, 175, 180, 223, 224, 228], "overhead": [170, 176], "untrigg": 170, "raymond": 170, "hetting": 170, "rcn": 170, "htm": 170, "datamodel": 170, "octahedron": [170, 224], "modulu": 170, "singular": [168, 170, 172, 182, 191, 192, 240], "lon": 170, "lat": 170, "parameter": [170, 235], "inclin": [170, 171, 172, 244], "azimuth": [170, 171, 172, 176, 244], "south": [170, 244], "north": [170, 244], "west": [170, 244], "east": [170, 244], "posterior": [170, 173, 174], "anterior": [170, 174], "zenith": [170, 244], "counter": 170, "clockwis": 170, "geograph": 170, "nomenclatur": [170, 229], "latitud": [170, 244], "longitud": [170, 244], "array_lik": [170, 171, 172, 176, 179, 180], "spherical_coordinate_system": 170, "wolfram": 170, "sphericalcoordin": 170, "hypotenus": 170, "sph2cart": [170, 244], "unusu": [170, 228], "trivial": [170, 223], "vec": [170, 176, 180], "nvec": 170, "l2n": 170, "allclos": [170, 176, 180, 224], "keepdim": 170, "flatten": [170, 176, 178, 180], "instabl": 170, "taylor": [170, 178], "tetha": 170, "teta2": 170, "theta2": 170, "ur": 170, "rad2deg": 170, "npd": 170, "niethamm": 170, "estepar": 170, "bouix": 170, "shenton": 170, "cf": [170, 176, 225], "eng": 170, "biol": 170, "2622": [83, 170, 235], "pubm": 170, "17946125": 170, "pmc2791793": 170, "pts1": 170, "pts2": 170, "check_radiu": 170, "broadcast": [170, 176, 177, 180, 228, 235], "5708": 170, "7124": 170, "vecs1": 170, "vecs2": 170, "v_co": 170, "vco": 170, "lambert": 170, "mardia": 170, "jupp": 170, "161": [83, 84, 170, 225], "y_1": 170, "y_2": 170, "annulu": 170, "vice": [170, 230], "versa": [170, 230], "aj": 170, "sxyz": 170, "gohlk": 170, "lfd": [], "uci": [], "yaw": 170, "syxz": 170, "34786452": 170, "383436184": 170, "_axes2tupl": 170, "partit": [170, 180], "persp": 170, "m0": 170, "smallest": [170, 172, 176, 177, 180], "collinear": [170, 180, 217], "furthest": [170, 180], "3x3": [170, 172, 176], "ru": 170, "mat1": 170, "mat2": 170, "matn": 170, "circumfer": 170, "otherw": 170, "psampl": 170, "frame": [170, 173, 180, 182], "a_": [170, 176], "gsoc2015dipydki": [], "blogspot": [], "rnh": [], "is_hemi": 170, "pole": [170, 176, 180], "rstudio": 170, "pub": 170, "s3": [170, 171], "amazonaw": 170, "27121_a22e51b47c544980bad594d5e0bb2d04": 170, "noqa": [115, 170, 171], "qval": [170, 176, 183], "ie": [170, 176, 180], "immut": 170, "factori": [170, 221], "gradient_strength": [170, 183], "bmag": [170, 176], "rbval": 170, "expireddeprecationerror": [170, 174, 176, 180], "log_": [170, 176], "atol": [170, 174], "bo_threshold": 170, "ste": 170, "cte": 170, "cigar": 170, "30m": 170, "10m": 170, "sq2": 170, "gt": [170, 177, 181], "03e": 170, "compens": 170, "leemans2009": 170, "1336": [83, 170, 220], "1349": [83, 170, 220], "bvector": [170, 176, 182, 190, 191, 197, 198, 200, 218], "bmagmax": 170, "bmaxmag": 170, "gap": [170, 176], "regroup": 170, "n_bval": 170, "non_zero": 170, "ztol": 170, "trace": [170, 183, 239], "asymmetri": 170, "bdelta": 170, "b_eta": 170, "topgaard": 170, "valiullin": 170, "ed": [170, 177], "porou": 170, "royal": [170, 180], "chemistri": 170, "ornt1": [170, 174], "ornt2": [170, 174], "orn1": [170, 174], "orn2": [170, 174], "current_ornt": [170, 174], "new_ornt": [170, 174], "stort": [170, 174], "lp": [170, 174], "inferior": [170, 174], "string_ornt": [170, 174], "ornt": [170, 174], "add_nod": [170, 183], "add_edg": [170, 183], "up_short": [170, 183], "wp": 170, "attr": [170, 219], "all_path": [170, 183], "del_nod": [170, 183], "del_node_and_edg": [170, 183], "down_short": [170, 183], "shortest_path": [170, 183], "arr": [170, 172, 176, 180], "num_bin": 170, "janeriksolem": 170, "mixin": 170, "offer": [170, 243], "accessor": [170, 172], "uniformtimeseri": 170, "sampling_r": 170, "sampling_interv": 170, "lose": [170, 233], "circular": [170, 178, 219, 220], "chain": 170, "_no_reset": 170, "protect": [170, 180], "caveat": 170, "emptor": 170, "recomput": 170, "fire": 170, "mostli": [170, 176, 180, 217, 224, 227], "decor": [170, 176, 217, 219, 221, 222, 224, 229, 235], "afterward": 170, "magicprop": 170, "__dict__": 170, "jac": [170, 176], "hess": 170, "hessp": 170, "jacobian": [168, 170, 176, 183], "hessian": 170, "nelder": 170, "mead": 170, "anneal": 170, "tnc": 170, "cobyla": 170, "slsqp": 170, "ineq": 170, "wherea": [170, 176, 180, 182], "xk": [170, 180], "show_opt": 170, "nfev": [170, 183], "nit": [170, 183, 226], "print_summari": [170, 183], "sklearn": [170, 172, 176, 182, 194, 229, 234], "signatur": [170, 176, 227, 236], "coef_": 170, "y_hat": 170, "n_sampl": 170, "n_featur": 170, "a_0": 170, "h_i": 170, "s_j": 170, "slack": 170, "polynomi": [170, 176, 243], "design_matrix": [170, 183, 231], "pipermail": 170, "027700": 170, "momentum": 170, "non_neg": [170, 176], "check_error_it": 170, "max_error_check": 170, "converge_on_ss": 170, "xh": 170, "descent": [168, 170], "persist": [170, 219], "sse": [170, 176], "h_best": 170, "caller": 170, "print_stat": [170, 183], "prin": 170, "1000000": [170, 177, 182], "src": 170, "profiling_tutori": 170, "line_profil": 170, "pstat": 170, "slowest": 170, "function_nam": 170, "ix": 170, "100001": 170, "200002": 170, "iz": 170, "300003": 170, "400004": 170, "wichmann": 170, "hill": 170, "1614": [170, 222], "1622": [75, 80, 170, 222], "9473": 170, "csda": 170, "019": 170, "sciencedirect": 170, "b6v8v": [], "4k7f86w": [], "a3a33291b8264e4c882a8f21b6e43351": [], "r_number": 170, "uniformli": [170, 177], "183": [81, 83, 84, 170, 225], "1982": [80, 83, 170, 229], "rectangularli": 170, "95e": 170, "claim": 170, "30000": 170, "arithmet": 170, "5212632": 170, "s1": [170, 177], "s2": [170, 177], "ecuy": 170, "portabl": 170, "742": [83, 170, 218, 222], "749": [75, 83, 170, 217], "774": [83, 170], "30584e": 170, "unspecifi": [170, 171, 172, 181], "delaunai": [170, 171, 172, 224], "triangul": [170, 171, 172, 181], "find_closest": [170, 172, 183], "vertex": [170, 172, 173, 176, 180, 226], "____": [170, 172], "subdivis": [170, 172], "new_spher": [170, 172], "remap": [170, 171, 172, 228], "classmethod": [170, 172, 173, 180, 182], "from_spher": [170, 172, 183], "__________": 170, "return_invers": 170, "hemi": [170, 172], "const": [170, 172], "felt": [170, 172], "unstabl": [170, 172, 222], "init_pointset": 170, "reimplement": 170, "fmin_slsqp": 170, "number_of_edg": 170, "buffer": [168, 170, 171, 176, 178, 219], "__new__": [170, 176, 178], "expos": [170, 171, 176, 178], "fortran": [170, 176, 178], "c_contigu": [170, 176, 178], "owndata": [170, 176, 178], "writeabl": [170, 176, 178, 226], "flatit": [170, 176, 178], "todo": [170, 176, 178, 219], "imaginari": [170, 176, 178, 243], "items": [170, 176, 178, 180], "nbyte": [170, 176, 178, 183], "contigu": [170, 176, 178, 180], "jump": [170, 176, 178], "ctype": [170, 176, 178], "garbag": [170, 176, 178], "coord": [170, 218], "spherepointpick": 170, "fisher": 170, "lewi": 170, "embleton": 170, "coverag": [170, 219, 226, 228, 233, 234], "b1": [170, 181, 229], "max_mean_cosin": 170, "max_cosine_dist": 170, "7071067811865475": 170, "unimport": 170, "12f": 170, "707106781187": 170, "recursion_level": 170, "n1": [170, 180], "n2": [170, 180], "n3": [170, 223], "perm": 170, "permut": [170, 176], "bank": 170, "n1xn2xn2": 170, "ni": [170, 180, 217, 223], "lowpass": 170, "highpass": 170, "lo": 170, "subband": 170, "synthesi": 170, "n1xn2xn3": 170, "sf1": 170, "sf2": 170, "sf3": 170, "sfi": 170, "af1": 170, "af2": 170, "af3": 170, "afi": 170, "cell": [168, 170, 180, 217], "byte_data": 171, "bytes_or_buff": 171, "handler": 171, "__str__": [171, 233], "repr": [171, 221], "sy": [171, 182], "getdefaultencod": 171, "fib1": 171, "fib0": 171, "fib2": 171, "sv2": 171, "skeleton": [171, 227], "lsc": 171, "c3": 171, "symmetric642": [171, 172], "repulsion100": [171, 172, 176], "repulsion200": [171, 172], "vert": [171, 172, 181], "720": [80, 83, 171, 172, 219, 228, 236], "func_coef": 171, "func_discret": 171, "dwi2sh": 171, "maptlotlib": 171, "model_nam": 171, "unsign": [171, 176, 180, 182, 230], "sdp_constraint": 171, "id_constraint_ord": 171, "fsrc": 171, "fdst": 171, "total_length": 171, "16384": 171, "stored_md5": 171, "md5": [171, 182, 196, 219, 225], "data_s": 171, "checksum": [171, 182, 196], "mb": [28, 31, 43, 49, 62, 66, 96, 104, 116, 120, 129, 133, 140, 171], "fetchererror": 171, "site": [81, 83, 171, 226, 229], "3shell": 171, "evac": [171, 182, 183, 195, 236], "park": [171, 175, 182, 195, 236], "session": 171, "rc": [171, 217], "1993": [83, 171, 180, 229], "mcconnel": 171, "neurolog": 171, "fee": 171, "herebi": 171, "equip": 171, "injuri": 171, "misus": [171, 219], "oneof": 171, "rat": 171, "dde": [73, 171, 176], "cti": [73, 171, 183], "small_101d": [171, 178], "pittsburgh": 171, "competit": 171, "gqi_vector": [171, 227], "small_25": 171, "10x8x2": 171, "test_piesno": 171, "cb_2": 171, "wild": 171, "bruker": 171, "80x160x5": 171, "110x110x500\u03bcm": 171, "spread": [170, 171], "drawn": [171, 180, 181], "subject1_test": 171, "subject1_retest": 171, "subject2_test": 171, "subject2_retest": 171, "with_raw": 171, "meta": 171, "uw": 171, "exp_bundles_map": 171, "renauld": [171, 235], "bernier": 171, "thalamu": 171, "eeg": [171, 223], "submiss": 171, "bundles_list": 171, "ref_anat": 171, "file1": 171, "file2": 171, "arraysequ": [171, 174, 180, 219, 220, 236], "dataset_descript": 171, "json": [171, 182], "bidsvers": 171, "dump": [171, 236], "bid": 171, "hcp_bucket": 171, "openaccess": 171, "profile_nam": 171, "hcp_1200": 171, "aws_access_key_id": 171, "aws_secret_access_kei": 171, "bucket": 171, "aw": 171, "credenti": 171, "xxxxxxxxxxxxxxxx": 171, "publicdata": 171, "gorgolewski": [171, 222], "160044": 171, "ndarek918ec2": 171, "ima": [172, 173, 180], "fimau": 172, "fimao": 172, "5x5": 172, "fima": 172, "vg": [172, 182, 203], "pca_method": [172, 182, 191, 192], "eig": [172, 182, 191, 192], "out_dtyp": 172, "suppress_warn": 172, "svd": [172, 182, 191, 192, 219, 220], "occasion": [172, 182, 191, 192], "tau_": [172, 182, 191], "patch_siz": [172, 235], "patch_radius_sigma": 172, "descoteaux08": [172, 182, 193], "wiest": [172, 182, 193], "daessl\u00e9": [172, 182, 193], "nicola": [172, 182, 193], "christian": [172, 176, 182, 193], "rachid": [172, 182, 193], "itermax": 172, "ep": [172, 176, 177, 180], "realis": 172, "fmri": 172, "repetit": 172, "cord": 172, "floor": [168, 172], "197": [80, 83, 84, 172, 180, 226], "108": [80, 83, 84, 172, 176, 224], "disable_background_mask": 172, "ok": 172, "oversmooth": 172, "un": [172, 221, 226], "inaccuraci": 172, "nonloc": 172, "1x1x1": [172, 177, 182, 208], "lasso": [172, 176, 182, 194], "sklearnlinearsolv": [172, 176, 182, 183, 194], "scikit": [172, 176, 177, 182, 194], "linear_model": [172, 176, 182, 194, 229], "linearregress": [172, 182, 194], "regressormixin": [172, 176, 182, 194], "sphere_ev": 173, "xtol": [173, 176], "finder": [173, 224], "is_symmetr": 173, "descend": [173, 176], "gfa_thr": 173, "sh_basis_typ": 173, "tempfil": [172, 173, 174, 235], "tempdir": [172, 173, 226], "subprocess": [173, 176, 182, 197, 198], "cpu_count": [173, 176, 182, 197, 198], "angelino": [172, 173, 176, 178, 243], "fitzgibbon": [172, 173, 176, 178, 243], "510": [83, 172, 173, 176, 178, 226, 243], "fibernavig": [173, 219], "hdfgroup": 174, "storag": [174, 180], "mkstemp": 174, "temp": [174, 225], "dpy_exampl": 174, "fd": 174, "dpw": 174, "write_track": [174, 183], "dpr": 174, "read_track": [174, 183], "read_tracksi": [174, 183], "as_ndarrai": 174, "arrayproxi": 174, "return_coord": 174, "aff2axcod": 174, "hdr": 174, "peaksandmetr": [174, 176, 181, 183, 219], "fname_shm": 174, "fname_dir": 174, "fname_valu": 174, "fname_indic": 174, "fname_gfa": 174, "reshape_dir": 174, "attach": 174, "fh": 174, "neat": 174, "voxmm": [44, 174, 177, 180, 183], "data_per_point": [44, 174, 183, 234], "data_per_streamlin": [44, 174, 182, 183, 214, 215], "awar": [174, 180, 240], "verif": 174, "sft_1": 174, "sft_2": 174, "compute_bounding_box": [174, 183], "dtype_dict": [174, 183], "from_sft": [174, 183], "get_data_per_point_kei": [174, 183], "get_data_per_streamline_kei": [174, 183], "get_streamlines_copi": [174, 183], "epsilon": [170, 174, 177, 230], "indices_to_remov": 174, "indices_to_keep": 174, "to_cent": [174, 183], "to_origin": [174, 183], "target_origin": 174, "to_spac": [174, 183], "target_spac": 174, "trk_header_check": 174, "ttype": 174, "loader": 174, "saver": 174, "image_data": 174, "intent": 174, "img_orig": 174, "compliant": 174, "incom": [173, 174], "nimh": 174, "gov": 174, "nifti1field": 174, "nifti1fields_pag": 174, "reference_1": 174, "reference_2": 174, "tractogram_typ": 174, "datafram": [174, 179], "panda": 174, "helper": [174, 175, 176, 180], "file_nam": [174, 181], "ply": 174, "stl": 174, "xml": 174, "vtkpolydata": 174, "color_array_nam": 174, "to_lp": 174, "mitkdiffus": 174, "crucial": 175, "advers": 175, "layer": [175, 176, 177, 182, 195, 230], "speech": 175, "relu": 175, "vinci": 175, "booher": 175, "wang": 175, "caron": 175, "wen": 175, "newman": 175, "e0274396": 175, "0274396": 175, "sig_length": 175, "mean_squared_error": 175, "loss_weight": 175, "sgd": 175, "rmsprop": 175, "adagrad": 175, "adadelta": 175, "mean_absolute_error": 175, "mean_absolute_percentage_error": 175, "mean_squared_logarithmic_error": 175, "squared_hing": 175, "hing": 175, "categorical_hing": 175, "logcosh": 175, "categorical_crossentropi": 175, "sparse_categorical_crossentropi": 175, "binary_crossentropi": 175, "kullback_leibler_diverg": 175, "poisson": 175, "binary_accuraci": 175, "categorical_accuraci": 175, "top_k_categorical_accuraci": 175, "sparse_categorical_accuraci": 175, "sparse_top_k_categorical_accuraci": 175, "batch_siz": 175, "max_queue_s": 175, "worker": [175, 176, 180], "use_multiprocess": 175, "return_dict": 175, "silent": 175, "epoch": [73, 175, 176], "queue": [175, 230], "validation_split": 175, "validation_data": 175, "initial_epoch": 175, "steps_per_epoch": 175, "validation_step": 175, "validation_batch_s": 175, "validation_freq": 175, "kera": 175, "x_val": 175, "y_val": 175, "tf": [175, 180], "Its": [175, 176, 178], "load_weight": [175, 183], "save_weight": [175, 183], "textual": 175, "nonetyp": 175, "train_test_split": [175, 183], "test_siz": 175, "train_siz": 175, "random_st": 175, "stratifi": 175, "complement": 175, "glossari": 175, "x_train": 175, "x_test": 175, "y_train": 175, "y_test": 175, "out_channel": 175, "kernel_s": 175, "drop_r": 175, "n_layer": 175, "layer_typ": 175, "invoc": [175, 225, 226], "init_scop": 175, "input_shap": 175, "input_spec": 175, "savedmodel": 175, "ecosystem": 175, "tfmot": 175, "tflite": 175, "came": 175, "crf": [175, 182], "load_model_weight": [175, 183], "weights_path": 175, "voxsiz": 175, "return_affin": 175, "return_prob": 175, "wrapper": [168, 170, 175, 176, 180, 224], "ndarri": [175, 176, 180], "pred_output": 175, "input_data": 175, "model_scal": 175, "fetch_model_weights_path": 175, "histo_resdnn_weight": 175, "mimick": 175, "chunk_siz": 175, "assembl": 175, "nonzero": [175, 176, 177], "pred_sh_coef": 175, "num_hidden": 175, "act_hidden": 175, "dropout": 175, "num_out": 175, "act_out": 175, "softmax": 175, "perceptron": 175, "batchsiz": 175, "testsiz": 175, "outputs": 175, "disco": 175, "alon": 175, "blaber": 175, "landman": 175, "synthes": 175, "cai": 175, "roger": 175, "e0236418": 175, "min_v": 175, "max_v": 175, "new_min": 175, "new_max": 175, "norm_min": 175, "norm_max": 175, "init_shap": 175, "voxelspac": 175, "transformed_img": 175, "recovered_img": 175, "methodologi": 176, "funk": 176, "radon": 176, "bx": 176, "plug": 176, "rewritten": 176, "sh_coef": 176, "mymodel": 176, "mymodelfit": 176, "cache_get": [176, 183], "odf_basis_matrix": 176, "_compute_basis_matrix": 176, "cache_set": [176, 183], "cache_clear": [176, 183], "compute_expensive_matrix": 176, "expens": [176, 180], "expensive_matrix": 176, "cod": 176, "coefficient_of_determin": 176, "model_arg": 176, "model_kwarg": 176, "dwi_respons": 176, "reg_spher": 176, "inject": 176, "knowledg": 176, "tractomet": 176, "pred_sig": 176, "sdtmodel": 176, "csdmodel": 176, "opppos": 176, "roi_cent": [176, 182, 198], "roi_radiu": 176, "fa_cal": 176, "return_number_of_voxel": 176, "fa_oper": [176, 220], "versu": 176, "r2_term": 176, "frt": 176, "dwsignal": 176, "b_reg": 176, "r_rh": 176, "fodf_sh": 176, "num_it": 176, "minimis": 176, "f_n": 176, "xf_n": 176, "h_": 176, "b_": [176, 239, 240], "reg": 176, "hf_": 176, "rightarrow": 176, "2x": 176, "th_": 176, "tx": 176, "regularis": 176, "superresolut": 176, "mu": [176, 177], "qf_n": 176, "choleski": [176, 227], "l_y": 176, "tf_n": 176, "rankn": 176, "f_0": 176, "pf_0": 176, "l_": 176, "h_n": 176, "f_": 176, "donald": 176, "odf_sh": [176, 183], "odfs_sh": [172, 176], "plai": 176, "odfdeconv": [176, 226], "20x20x20": 176, "ull": [176, 182, 199], "wll": 176, "uwll": [176, 182, 199], "lmi": 176, "ardekani": [176, 182, 199], "823": [83, 176, 182, 199], "836": [80, 86, 176, 182, 199, 218], "multi_fit": [176, 183], "dki_param": 176, "fifteen": 176, "min_kurtosi": 176, "42857142857142855": 176, "e1": [176, 178], "1111": [80, 176, 222], "analogi": 176, "barmpouti": 176, "zhuo": 176, "8th": 176, "symposium": 176, "nano": [176, 182, 209], "macro": 176, "262": [80, 83, 84, 176, 225], "265": [83, 84, 93, 176, 225], "5872402": 176, "akc": [176, 183], "adc": [176, 183, 225], "equiv": 176, "_f": 176, "frobeniu": 176, "kmax": [176, 183], "gtol": 176, "4pi": 176, "domega_mathbf": 176, "f_1": 176, "2222": [83, 176, 231], "3333": [83, 176], "f_2": 176, "2233": [83, 176, 231], "1133": [80, 83, 176], "1122": [80, 83, 176, 219], "lambda_2lambda_3": 176, "r_f": 176, "3lambda_1": 176, "lambda_1lambda_2": 176, "lambda_1lambda_3": 176, "r_d": 176, "2lambda_1": 176, "3sqrt": 176, "carlson": 176, "hardin": 176, "1996": [83, 176, 182, 200, 230, 233], "mclaren": 176, "snub": 176, "429": [83, 84, 176, 226], "omega_": 176, "mathnbf": 176, "n_j": 176, "n_l": 176, "tr": 176, "2w_": 176, "medicine69": 176, "388": [80, 84, 176, 226], "2pi": 176, "domega": 176, "_mathbf": 176, "k_": 176, "bot": [176, 217, 221, 222, 226, 228], "g_1": 176, "g_2": 176, "errtol": 176, "incomplet": [176, 217, 219, 220, 221, 222, 223, 228, 229, 230, 232, 233, 234, 235, 236], "infti": [176, 243], "9409227": 176, "min_diffus": [176, 224], "adv": 176, "biologicali": 176, "pluasibl": 176, "advc": 176, "eingenvalu": 176, "max_dir": 176, "inverse_design_matrix": 176, "sunaert": 176, "pitfal": 176, "335": [80, 83, 84, 176, 226], "positivedefiniteleastsquar": [176, 183], "wrot": 176, "hui": 176, "cheung": 176, "qi": 176, "indi": 176, "indj": 176, "indk": 176, "indl": 176, "wre": 176, "ind_i": [176, 178], "ind_j": [176, 178], "ind_k": [176, 178], "ind_l": [176, 178], "k_element": 176, "eigval": 176, "eigvec": 176, "columnar": 176, "kurtosismicrostruturemodel": 176, "ols_fit_dki": 176, "wls_fit_dki": 176, "006": 176, "awf_onli": 176, "optiom": 176, "kurtosismicrostructur": 176, "axonal_diffus": [176, 183], "hindered_ad": [176, 183], "hindered_ev": [176, 183], "hindered_rd": [176, 183], "adc_": 176, "restricted_ev": [176, 183], "rde": 176, "edt": 176, "idt": 176, "r_start": 176, "r_end": 176, "r_step": 176, "nowrap": 176, "eqnarrai": 176, "i2pimathbf": 176, "cdotmathbf": 176, "dmathbf": 176, "sit": 176, "q_space": 176, "han": [176, 180], "dsi_voxel": [176, 183], "gqrid_siz": 176, "generalizedqsampl": 176, "dr_x": 176, "dr_y": 176, "dr_z": 176, "psi_": 176, "rhat": 176, "dr": 176, "2002": [176, 180, 229], "truncat": [176, 243], "p_": [176, 241], "iiintlimits_": 176, "q_": [73, 176], "bigg": 176, "1766": [83, 176, 228], "1775": [83, 176, 228], "qspace": 176, "qgrid": 176, "qtabl": 176, "premultipli": 176, "rradiu": 176, "interp_coord": 176, "diffusionspectrum": 176, "new_data": 176, "new_gtab": 176, "estimated_snr": 176, "qgrid_sampl": 176, "siz_x": 176, "siz_i": 176, "siz_z": 176, "psf": 176, "ifft": 176, "prop": 176, "numit": 176, "acc_factor": 176, "return_s0_hat": 176, "nll": [176, 182, 200, 229], "min_sign": [176, 226, 228], "consumpt": 176, "1e4": 176, "mattiello": [176, 182, 200], "247": [73, 80, 84, 176, 182, 200, 225], "254": [73, 83, 84, 176, 182, 200], "elucid": [176, 182, 200], "219": [83, 84, 176, 182, 200, 225], "lin": [176, 182, 200], "ching": [176, 182, 200], "1095": [80, 83, 176, 182, 200], "cutoff": 176, "dti_param": 176, "model_s0": 176, "s0_hat": [176, 183], "ec": 176, "columnwis": [172, 176], "pele": 176, "gubjartsson": 176, "kikini": 176, "jolesz": 176, "dodf": 176, "scratch": [176, 219, 228], "566": [75, 83, 86, 176, 178, 227], "ftp": 176, "sop": 176, "athena": [176, 219], "descoteaux_thesi": 176, "heta": 176, "infin": [176, 180], "lambda_i": [176, 239, 240], "quad": [73, 176], "lambda_1lambda_2lambda_3": 176, "denomin": 176, "appendix": 176, "batchelor": 176, "moakher": 176, "atkinson": 176, "rigor": 176, "calculu": 176, "221": [83, 84, 176, 225], "225": [83, 84, 86, 176, 224, 225], "newcomb": 176, "1103": [80, 83, 176, 219], "1115": [83, 176, 219], "etal": 176, "thompson": 176, "monozygot": 176, "dizygot": 176, "twin": 176, "943": [81, 83, 176, 219], "946": [80, 83, 176, 219], "arsigni": 176, "fillard": 176, "medecin": 176, "421": [80, 83, 84, 86, 176, 226], "q_form": 176, "a_hat": 176, "daniel": [176, 222], "enni": 176, "kindlmann": 176, "146": [80, 83, 84, 176, 224], "a_squiggl": 176, "widetild": 176, "mo": 176, "orthotropi": 176, "fit_tensor": [176, 217, 219], "counteract": 176, "heteroscedast": 176, "return_lower_triangular": 176, "fail_is_nan": 176, "npar": 176, "gmm": 176, "geman": 176, "mclure": 176, "nlls_param": 176, "n_direct": 176, "5267": [176, 182, 199, 200], "background_nois": [176, 182, 199, 200], "num_vox": 176, "restore_param": 176, "sixth": 176, "dummi": 176, "1994a": 176, "hermitian": 176, "bxx": 176, "byi": 176, "bzz": 176, "bxy": 176, "bxz": 176, "byz": 176, "odf_vertic": [176, 180, 226], "lambda_lb": 176, "lambda_csd": 176, "rho": [176, 239, 241], "po": [176, 225], "tessel": 176, "get_3shell_gtab": [176, 183], "descoteaux07_legacy_msg": 176, "catch_warn": 176, "filterwarn": 176, "pendingdeprecationwarn": 176, "analyticalmodel": 176, "clip_neg": 176, "b_uniqu": 176, "data_norm": 176, "lb_matrix": 176, "fwdti_param": 176, "diso": 176, "sig": 176, "mdreg": 176, "0027": 176, "piter": 176, "md_reg": 176, "inter": 176, "fw_param": 176, "f_transform": 176, "ft": 176, "arcsin": 176, "tensor_el": 176, "cholesky_el": 176, "r0": 176, "r1": 176, "r3": 176, "r4": 176, "r5": 176, "carew": 176, "meyerand": 176, "anomal": 176, "930": [60, 75, 80, 83, 176, 219], "936": [25, 80, 83, 176, 235], "20832": 176, "pg": 176, "1628": [83, 176, 222], "subdivide_octahedron": [176, 183], "create_unit_spher": [176, 183], "gq": 176, "voxel_sign": 176, "max_qa": 176, "nqa": 176, "equatori": 176, "zone": 176, "conjug": [176, 243], "cone": 176, "x_scale": 176, "ftol": 176, "extracellular": 176, "fill_na": 176, "least_squar": 176, "federau": 176, "874": [80, 83, 176, 219], "881": [83, 176, 219, 220], "estimate_f_d_star": [176, 183], "params_f_d_star": 176, "estimate_linear_fit": [176, 183], "split_b": 176, "intercept": 176, "ivim_param": 176, "ivim_sign": 176, "cvx_fit": [176, 183], "f1": 176, "f2": 176, "ivim_mix_cost_on": [176, 183], "stoc_search_cost": [176, 183], "penros": 176, "thorough": 176, "nlls_cost": [176, 183], "x_f": 176, "stationari": 176, "exp_phi1": 176, "x_and_f_to_x_f": [176, 183], "x_f_to_x_and_f": [176, 183], "selector": [176, 220], "eigenvalue_threshold": 176, "dti_scale_estim": 176, "static_diffus": 176, "0007": [176, 178], "eapoc": 176, "ensembl": [176, 178], "ph": [176, 180], "avram": 176, "feasibl": [83, 176], "posiv": 176, "vastli": 176, "golden_direct": 176, "map_model": 176, "mapfit": 176, "mapmri_coef": 176, "lopt": 176, "errorcod": 176, "linalgerror": [176, 218, 222], "fitted_sign": [176, 183], "mapmri_r": [176, 183], "mapmri_coeff": [176, 183], "mapmri_mu": [176, 183], "c13": 176, "gaussiann": 176, "act": [176, 180, 219, 227], "c8": 176, "r_point": 176, "recalcul": 176, "qvals_or_gtab": 176, "qvalu": [176, 226], "c14": 176, "44a": 176, "c11": 176, "mu_squar": 176, "u0": 176, "index_matrix": 176, "q_gradient": 176, "rgrad": 176, "psi": 176, "binomi": 176, "odf_mat": 176, "n_vertic": 176, "n_mapmri_coef": 176, "odf_sh_mat": 176, "n_sh_coef": 176, "c7": 176, "n_coef": 176, "ind_mat": 176, "gridsiz": 176, "radius_max": 176, "tab": [176, 183, 224, 226, 236], "phi_n": 176, "phi_m": 176, "submatric": 176, "s_mat": 176, "t_mat": 176, "u_mat": 176, "weights_arrai": 176, "ncoef": 176, "n_of_weight": 176, "gcv_startpoint": 176, "startpoint": [176, 183], "optimal_lambda": 176, "understand": [168, 176, 241], "coeff": 176, "setter": 176, "warm": 176, "qp": 176, "iso_comp": 176, "osqp": 176, "primal": 176, "002": [140, 141, 176], "multishel": [176, 234], "msdki_param": 176, "diffusit": 176, "intrins": 176, "msignal": 176, "nub": 176, "fit_arrai": 176, "single_voxel_fit": 176, "sum_i": 176, "psi_i": 176, "bracket": [176, 180], "cohen": 176, "adad": 176, "wald": 176, "jmri": 176, "1194": [80, 83, 176, 219], "1208": [83, 176, 219], "ndrrai": 176, "constrain_q0": 176, "10000000000": 176, "eco": 176, "textbf": 176, "sum_k": 176, "ik": 176, "phi_i": 176, "t_k": 176, "c_i": 176, "q0": 176, "uniti": 176, "cham": 176, "qtdmri_coef": 176, "ut": 176, "tau_scal": 176, "cvxpy_solution_optim": 176, "rt_point": 176, "qtdmri_to_mapmri_coef": [176, 183], "convers": [176, 177, 228, 244], "depen": 176, "sparsity_ab": [176, 183], "sparsity_dens": [176, 183], "part1_ut_precomp": 176, "part23_ut_precomp": 176, "part4_ut_precomp": 176, "part1_uq_iso_precomp": 176, "b2": [176, 181], "c4": 176, "0005": 176, "grid_size_r": 176, "max_radius_r": 176, "grid_size_tau": 176, "min_radius_tau": 176, "max_radius_tau": 176, "weight_arrai": 176, "04": [26, 28, 33, 34, 37, 38, 41, 54, 62, 75, 80, 81, 83, 84, 86, 116, 129, 176, 236], "big_delta_start": 176, "big_delta_end": 176, "g_start": 176, "g_end": 176, "bval_isolin": 176, "7500": 176, "14000": 176, "alpha_shad": 176, "shade": 176, "_ols_fit": 176, "_wls_fit": 176, "_sdpdc_fit": 176, "c_": [176, 180], "d_sq": [176, 183], "mean_d_sq": [176, 183], "themselv": 176, "bmatrix": 176, "ig": 176, "bmat": 176, "otimesmathbf": 176, "_notimesmathbf": 176, "alongsid": [176, 180], "f_csf": [176, 183], "f_gm": [176, 183], "fit_vec": 176, "s_i": 176, "f_j": 176, "b_i": 176, "_j": 176, "b_id_": 176, "v_i": 176, "d_j": 176, "hf": 176, "modern": 176, "prod_": 176, "i_": 176, "i_n": 176, "t_n": 176, "gautschi": 176, "slavik": 176, "875": [81, 83, 120, 176, 219], "1090": [83, 176, 219], "s0025": 176, "5718": 176, "0470267": 176, "discontinu": 176, "global_fit": 176, "elsewher": 176, "alpha_": 176, "div": 176, "triangledown": 176, "lvert": 176, "rvert": 176, "biggr": 176, "rvert_": 176, "discrep": [176, 219, 226, 231], "chambol": 176, "boil": 176, "n_vox": 176, "elasticnet": 176, "parallel_backend": 176, "joblib": [176, 234], "parallelbackendbas": 176, "backend": 176, "loki": 176, "bottleneck": 176, "gil": 176, "tensor_matrix": 176, "behrens2007": 176, "stick_matrix": 176, "tej": [176, 219], "berg": 176, "jbabdi": 176, "rushworth": 176, "mf": [176, 178], "woolrich": 176, "mw": 176, "gain": [176, 178, 180], "sampling_matrix": [176, 183], "assume_norm": 176, "qball": [176, 224], "shm_coef": 176, "999": [83, 176, 219], "signal_object": 176, "where_dwi": 176, "residualbootstrapwapp": 176, "rh": 176, "r_sh": 176, "legaci": [172, 173, 176, 220, 221, 228, 234, 236, 243], "dirac": [176, 235], "colatitudin": 176, "use_scipi": 176, "y_mn": 176, "m_n": 176, "sph_harm": [176, 217], "onward": 176, "interchang": 176, "agre": [176, 243], "0_n": 176, "mrtrix3": [172, 176, 228, 243], "real_sh": 176, "raffelt": [172, 176, 243], "tabbara": [172, 176, 243], "dholland": [172, 176, 243], "pietsch": [172, 176, 243], "137": [80, 83, 84, 172, 176, 224, 243], "gadian": 176, "1176": [80, 83, 176, 219, 226], "1185": [83, 176, 219], "m_list": 176, "n_list": 176, "kx1": 176, "lazi": 176, "where_b0": 176, "leverag": 176, "hd": 176, "lcr": 176, "ruturn": 176, "haroon": 176, "return_inv": 176, "n_coeff": 176, "rarrow": 176, "2n": 176, "3l": 176, "8n": 176, "norm_factor": 176, "rectifi": 176, "log_ap": 176, "ixjxkxc": 176, "2l": [73, 176, 243], "ixjxkx6": 176, "lacerda": 176, "catani": 176, "simmon": 176, "full_sh_coeff": 176, "out_sh_coeff": 176, "025330295910584444": [176, 178], "constrain_e0": 176, "positive_constraint": 176, "amongst": 176, "rathi": 176, "20e": 176, "get_isbi2013_2shell_gtab": [176, 183], "shore_coef": 176, "pdf_grid": [176, 183], "shore_coeff": [176, 183], "qtextbf": 176, "nlm": 176, "biggl": 176, "dfrac": 176, "expbiggl": 176, "2zeta": 176, "y_l": [176, 243], "rtab": 176, "sphere_vertic": 176, "bxxxx": 176, "byyyi": 176, "bzzzz": 176, "bxxxy": 176, "bxxxz": 176, "bxyyi": 176, "byyyz": 176, "bxzzz": 176, "byzzz": 176, "bxxyi": 176, "bxxzz": 176, "byyzz": 176, "bxxyz": 176, "bxyyz": 176, "bxyzz": 176, "blogs0": 176, "cluster_map": 177, "evaluate_result": [177, 183], "slr_select": 177, "neirborhood": 177, "ba_valu": 177, "prune": [177, 180, 182, 209], "bmd_valu": 177, "slr_metric": [177, 182, 209], "slr_x0": 177, "slr_bound": 177, "slr_method": 177, "bundlemindistancemetr": [177, 183], "recognized_transf": 177, "recognized_label": 177, "lt": 177, "dtracks0": 177, "dtracks1": 177, "ba": 177, "recognized_bundl": 177, "expert_bundl": 177, "select_randomli": 177, "500000": 177, "refdata": [177, 183], "id_datum": 177, "add_clust": [177, 183], "clusters_s": [177, 183], "get_large_clust": [177, 183], "get_small_clust": [177, 183], "max_siz": 177, "remove_clust": [177, 183], "mdf_12point": 177, "max_nb_clust": 177, "2147483647": 177, "nk": 177, "farther": 177, "exceed": 177, "tradeoff": [177, 180], "garyfallidis16": 177, "million": [177, 180], "singapor": 177, "4187": [83, 177], "quickbundlex": 177, "child": [177, 182], "is_leaf": [177, 183], "return_indic": [176, 177, 183], "get_clust": [177, 183], "wanted_level": 177, "iter_preord": [177, 183], "traverse_postord": [177, 183], "nb_mpt": 177, "bin_siz": 177, "bidirect": 177, "barycent": 177, "use_neg": 177, "nb_sline": 177, "nb_slines_ref": 177, "coo_matrix": [177, 180], "non_zero_id": 177, "nb_non_empty_row": 177, "sline": 177, "nearest_id": 177, "nearest_dist": 177, "nb_non_empty_col": 177, "masked_vol": 177, "npmin": 177, "npmax": 177, "input_volum": [177, 182, 208], "bet": 177, "maskedvolum": 177, "tensor_fit": 177, "r_min": 177, "r_max": 177, "g_min": 177, "g_max": 177, "b_min": 177, "b_max": 177, "coars": 177, "new_cc_mask": 177, "manhattan": [177, 180], "rate": [168, 177], "upperbound": 177, "upper_bound": 177, "save_histori": 177, "posteriori": 177, "rice": 178, "rayleigh": 178, "gudbjartson": 178, "patz": 178, "910": [31, 39, 178, 218], "914": [83, 178, 218], "signal_w_nois": 178, "dx": 178, "dy": 178, "dz": 178, "0004": 178, "00628947": 178, "01257895": 178, "01886842": 178, "0251579": 178, "03144737": 178, "03773685": 178, "04402632": 178, "0503158": 178, "05660527": 178, "06289475": 178, "06918422": 178, "0754737": 178, "08176317": 178, "08805265": 178, "09434212": 178, "1006316": 178, "10692107": 178, "11321055": 178, "11950002": 178, "1257895": 178, "13207897": 178, "13836845": 178, "14465792": 178, "15094739": 178, "15723687": 178, "16352634": 178, "16981582": 178, "17610529": 178, "18239477": 178, "18868424": 178, "19497372": 178, "20126319": 178, "20755267": 178, "21384214": 178, "22013162": 178, "22642109": 178, "23271057": 178, "23900004": 178, "24528952": 178, "25157899": 178, "25786847": 178, "26415794": 178, "27044742": 178, "27673689": 178, "28302637": 178, "28931584": 178, "29560531": 178, "30189479": 178, "30818426": 178, "31447374": 178, "32076321": 178, "32705269": 178, "33334216": 178, "33963164": 178, "34592111": 178, "35221059": 178, "35850006": 178, "36478954": 178, "37107901": 178, "37736849": 178, "38365796": 178, "38994744": 178, "39623691": 178, "40252639": 178, "40881586": 178, "41510534": 178, "42139481": 178, "42768429": 178, "43397376": 178, "44026323": 178, "44655271": 178, "45284218": 178, "45913166": 178, "46542113": 178, "47171061": 178, "47800008": 178, "48428956": 178, "49057903": 178, "49686851": 178, "50315798": 178, "50944746": 178, "51573693": 178, "52202641": 178, "52831588": 178, "53460536": 178, "54089483": 178, "54718431": 178, "55347378": 178, "55976326": 178, "56605273": 178, "57234221": 178, "57863168": 178, "58492115": 178, "59121063": 178, "5975001": 178, "60378958": 178, "61007905": 178, "61636853": 178, "622658": 178, "62894748": 178, "63523695": 178, "64152643": 178, "6478159": 178, "65410538": 178, "66039485": 178, "66668433": 178, "6729738": 178, "67926328": 178, "68555275": 178, "69184223": 178, "6981317": 178, "70442118": 178, "71071065": 178, "71700013": 178, "7232896": 178, "72957907": 178, "73586855": 178, "74215802": 178, "7484475": 178, "75473697": 178, "76102645": 178, "76731592": 178, "7736054": 178, "77989487": 178, "78618435": 178, "79247382": 178, "7987633": 178, "80505277": 178, "81134225": 178, "81763172": 178, "8239212": 178, "83021067": 178, "83650015": 178, "84278962": 178, "8490791": 178, "85536857": 178, "86165805": 178, "86794752": 178, "87423699": 178, "88052647": 178, "88681594": 178, "89310542": 178, "89939489": 178, "90568437": 178, "91197384": 178, "91826332": 178, "92455279": 178, "93084227": 178, "93713174": 178, "94342122": 178, "94971069": 178, "95600017": 178, "96228964": 178, "96857912": 178, "97486859": 178, "98115807": 178, "98744754": 178, "99373702": 178, "00002649": 178, "00631597": 178, "01260544": 178, "01889491": 178, "02518439": 178, "03147386": 178, "03776334": 178, "04405281": 178, "05034229": 178, "05663176": 178, "06292124": 178, "06921071": 178, "07550019": 178, "08178966": 178, "08807914": 178, "09436861": 178, "10065809": 178, "10694756": 178, "11323704": 178, "11952651": 178, "12581599": 178, "13210546": 178, "13839494": 178, "14468441": 178, "15097389": 178, "15726336": 178, "16355283": 178, "16984231": 178, "17613178": 178, "18242126": 178, "18871073": 178, "19500021": 178, "20128968": 178, "20757916": 178, "21386863": 178, "22015811": 178, "22644758": 178, "23273706": 178, "23902653": 178, "24531601": 178, "25160548": 178, "25789496": 178, "26418443": 178, "27047391": 178, "27676338": 178, "28305286": 178, "28934233": 178, "29563181": 178, "30192128": 178, "30821075": 178, "31450023": 178, "3207897": 178, "32707918": 178, "33336865": 178, "33965813": 178, "3459476": 178, "35223708": 178, "35852655": 178, "36481603": 178, "3711055": 178, "37739498": 178, "38368445": 178, "38997393": 178, "3962634": 178, "40255288": 178, "40884235": 178, "41513183": 178, "4214213": 178, "42771078": 178, "43400025": 178, "44028973": 178, "4465792": 178, "45286867": 178, "45915815": 178, "46544762": 178, "4717371": 178, "47802657": 178, "48431605": 178, "49060552": 178, "496895": 178, "50318447": 178, "50947395": 178, "51576342": 178, "5220529": 178, "52834237": 178, "53463185": 178, "54092132": 178, "5472108": 178, "55350027": 178, "55978975": 178, "56607922": 178, "5723687": 178, "57865817": 178, "58494765": 178, "59123712": 178, "59752659": 178, "60381607": 178, "61010554": 178, "61639502": 178, "62268449": 178, "62897397": 178, "63526344": 178, "64155292": 178, "64784239": 178, "65413187": 178, "66042134": 178, "66671082": 178, "67300029": 178, "67928977": 178, "68557924": 178, "69186872": 178, "69815819": 178, "70444767": 178, "71073714": 178, "71702662": 178, "72331609": 178, "72960557": 178, "73589504": 178, "74218451": 178, "74847399": 178, "75476346": 178, "76105294": 178, "76734241": 178, "77363189": 178, "77992136": 178, "78621084": 178, "79250031": 178, "79878979": 178, "80507926": 178, "81136874": 178, "81765821": 178, "82394769": 178, "83023716": 178, "83652664": 178, "84281611": 178, "84910559": 178, "85539506": 178, "86168454": 178, "86797401": 178, "87426349": 178, "88055296": 178, "88684243": 178, "89313191": 178, "89942138": 178, "90571086": 178, "91200033": 178, "91828981": 178, "92457928": 178, "93086876": 178, "93715823": 178, "94344771": 178, "94973718": 178, "95602666": 178, "96231613": 178, "96860561": 178, "97489508": 178, "98118456": 178, "98747403": 178, "99376351": 178, "00005298": 178, "00634246": 178, "01263193": 178, "01892141": 178, "02521088": 178, "03150035": 178, "03778983": 178, "0440793": 178, "05036878": 178, "05665825": 178, "06294773": 178, "0692372": 178, "07552668": 178, "08181615": 178, "08810563": 178, "0943951": 178, "10068458": 178, "10697405": 178, "11326353": 178, "119553": 178, "12584248": 178, "13213195": 178, "13842143": 178, "1447109": 178, "15100038": 178, "15728985": 178, "16357932": 178, "1698688": 178, "17615827": 178, "18244775": 178, "18873722": 178, "1950267": 178, "20131617": 178, "20760565": 178, "21389512": 178, "2201846": 178, "22647407": 178, "23276355": 178, "23905302": 178, "2453425": 178, "25163197": 178, "25792145": 178, "26421092": 178, "2705004": 178, "27678987": 178, "28307935": 178, "28936882": 178, "2956583": 178, "30194777": 178, "30823724": 178, "31452672": 178, "32081619": 178, "32710567": 178, "33339514": 178, "33968462": 178, "34597409": 178, "35226357": 178, "35855304": 178, "36484252": 178, "37113199": 178, "37742147": 178, "38371094": 178, "39000042": 178, "39628989": 178, "40257937": 178, "40886884": 178, "41515832": 178, "42144779": 178, "42773727": 178, "43402674": 178, "44031622": 178, "44660569": 178, "45289516": 178, "45918464": 178, "46547411": 178, "47176359": 178, "47805306": 178, "48434254": 178, "49063201": 178, "49692149": 178, "50321096": 178, "50950044": 178, "51578991": 178, "52207939": 178, "52836886": 178, "53465834": 178, "54094781": 178, "54723729": 178, "55352676": 178, "55981624": 178, "56610571": 178, "57239519": 178, "57868466": 178, "58497414": 178, "59126361": 178, "59755308": 178, "60384256": 178, "61013203": 178, "61642151": 178, "62271098": 178, "62900046": 178, "63528993": 178, "64157941": 178, "64786888": 178, "65415836": 178, "66044783": 178, "66673731": 178, "67302678": 178, "67931626": 178, "68560573": 178, "69189521": 178, "69818468": 178, "70447416": 178, "71076363": 178, "71705311": 178, "72334258": 178, "72963206": 178, "73592153": 178, "742211": 178, "74850048": 178, "75478995": 178, "76107943": 178, "7673689": 178, "77365838": 178, "77994785": 178, "78623733": 178, "7925268": 178, "79881628": 178, "80510575": 178, "81139523": 178, "8176847": 178, "82397418": 178, "83026365": 178, "83655313": 178, "8428426": 178, "84913208": 178, "85542155": 178, "86171103": 178, "8680005": 178, "87428998": 178, "88057945": 178, "88686892": 178, "8931584": 178, "89944787": 178, "90573735": 178, "91202682": 178, "9183163": 178, "92460577": 178, "93089525": 178, "93718472": 178, "9434742": 178, "94976367": 178, "95605315": 178, "96234262": 178, "9686321": 178, "97492157": 178, "98121105": 178, "98750052": 178, "99379": 178, "00007947": 178, "00636895": 178, "01265842": 178, "0189479": 178, "02523737": 178, "03152684": 178, "03781632": 178, "04410579": 178, "05039527": 178, "05668474": 178, "06297422": 178, "06926369": 178, "07555317": 178, "08184264": 178, "08813212": 178, "09442159": 178, "10071107": 178, "10700054": 178, "11329002": 178, "11957949": 178, "12586897": 178, "13215844": 178, "13844792": 178, "14473739": 178, "15102687": 178, "15731634": 178, "16360582": 178, "16989529": 178, "17618476": 178, "18247424": 178, "18876371": 178, "19505319": 178, "20134266": 178, "20763214": 178, "21392161": 178, "22021109": 178, "22650056": 178, "23279004": 178, "23907951": 178, "24536899": 178, "25165846": 178, "25794794": 178, "26423741": 178, "27052689": 178, "27681636": 178, "28310584": 178, "28939531": 178, "29568479": 178, "30197426": 178, "30826374": 178, "31455321": 178, "32084268": 178, "32713216": 178, "33342163": 178, "33971111": 178, "34600058": 178, "35229006": 178, "35857953": 178, "36486901": 178, "37115848": 178, "37744796": 178, "38373743": 178, "39002691": 178, "39631638": 178, "40260586": 178, "40889533": 178, "41518481": 178, "42147428": 178, "42776376": 178, "43405323": 178, "44034271": 178, "44663218": 178, "45292166": 178, "45921113": 178, "4655006": 178, "47179008": 178, "47807955": 178, "48436903": 178, "4906585": 178, "49694798": 178, "50323745": 178, "50952693": 178, "5158164": 178, "52210588": 178, "52839535": 178, "53468483": 178, "5409743": 178, "54726378": 178, "55355325": 178, "55984273": 178, "5661322": 178, "57242168": 178, "57871115": 178, "58500063": 178, "5912901": 178, "59757958": 178, "60386905": 178, "61015852": 178, "616448": 178, "62273747": 178, "62902695": 178, "63531642": 178, "6416059": 178, "64789537": 178, "65418485": 178, "66047432": 178, "6667638": 178, "67305327": 178, "67934275": 178, "68563222": 178, "6919217": 178, "69821117": 178, "70450065": 178, "71079012": 178, "7170796": 178, "72336907": 178, "72965855": 178, "73594802": 178, "7422375": 178, "74852697": 178, "75481644": 178, "76110592": 178, "76739539": 178, "77368487": 178, "77997434": 178, "78626382": 178, "79255329": 178, "79884277": 178, "80513224": 178, "81142172": 178, "81771119": 178, "82400067": 178, "83029014": 178, "83657962": 178, "84286909": 178, "84915857": 178, "85544804": 178, "86173752": 178, "86802699": 178, "87431647": 178, "88060594": 178, "88689542": 178, "89318489": 178, "89947436": 178, "90576384": 178, "91205331": 178, "91834279": 178, "92463226": 178, "93092174": 178, "93721121": 178, "94350069": 178, "94979016": 178, "95607964": 178, "96236911": 178, "96865859": 178, "97494806": 178, "98123754": 178, "98752701": 178, "99381649": 178, "00010596": 178, "00639544": 178, "01268491": 178, "01897439": 178, "02526386": 178, "03155334": 178, "03784281": 178, "04413228": 178, "05042176": 178, "05671123": 178, "06300071": 178, "06929018": 178, "07557966": 178, "08186913": 178, "08815861": 178, "09444808": 178, "10073756": 178, "10702703": 178, "11331651": 178, "11960598": 178, "12589546": 178, "13218493": 178, "13847441": 178, "14476388": 178, "15105336": 178, "15734283": 178, "16363231": 178, "16992178": 178, "17621126": 178, "18250073": 178, "1887902": 178, "19507968": 178, "20136915": 178, "20765863": 178, "2139481": 178, "22023758": 178, "22652705": 178, "23281653": 178, "239106": 178, "24539548": 178, "25168495": 178, "25797443": 178, "2642639": 178, "27055338": 178, "27684285": 178, "28313233": 178, "2894218": 178, "29571128": 178, "30200075": 178, "30829023": 178, "3145797": 178, "32086918": 178, "32715865": 178, "33344812": 178, "3397376": 178, "34602707": 178, "35231655": 178, "35860602": 178, "3648955": 178, "37118497": 178, "37747445": 178, "38376392": 178, "3900534": 178, "39634287": 178, "40263235": 178, "40892182": 178, "4152113": 178, "42150077": 178, "42779025": 178, "43407972": 178, "4403692": 178, "44665867": 178, "45294815": 178, "45923762": 178, "4655271": 178, "47181657": 178, "47810604": 178, "48439552": 178, "49068499": 178, "49697447": 178, "50326394": 178, "50955342": 178, "51584289": 178, "52213237": 178, "52842184": 178, "53471132": 178, "54100079": 178, "54729027": 178, "55357974": 178, "55986922": 178, "56615869": 178, "57244817": 178, "57873764": 178, "58502712": 178, "59131659": 178, "59760607": 178, "60389554": 178, "61018502": 178, "61647449": 178, "62276396": 178, "62905344": 178, "63534291": 178, "64163239": 178, "64792186": 178, "65421134": 178, "66050081": 178, "66679029": 178, "67307976": 178, "67936924": 178, "68565871": 178, "69194819": 178, "69823766": 178, "70452714": 178, "71081661": 178, "71710609": 178, "72339556": 178, "72968504": 178, "73597451": 178, "74226399": 178, "74855346": 178, "75484294": 178, "76113241": 178, "76742188": 178, "77371136": 178, "78000083": 178, "78629031": 178, "79257978": 178, "79886926": 178, "80515873": 178, "81144821": 178, "81773768": 178, "82402716": 178, "83031663": 178, "83660611": 178, "84289558": 178, "84918506": 178, "85547453": 178, "86176401": 178, "86805348": 178, "87434296": 178, "88063243": 178, "88692191": 178, "89321138": 178, "89950086": 178, "90579033": 178, "9120798": 178, "91836928": 178, "92465875": 178, "93094823": 178, "9372377": 178, "94352718": 178, "94981665": 178, "95610613": 178, "9623956": 178, "96868508": 178, "97497455": 178, "98126403": 178, "9875535": 178, "99384298": 178, "00013245": 178, "00642193": 178, "0127114": 178, "01900088": 178, "02529035": 178, "03157983": 178, "0378693": 178, "04415878": 178, "05044825": 178, "05673772": 178, "0630272": 178, "06931667": 178, "07560615": 178, "08189562": 178, "0881851": 178, "09447457": 178, "10076405": 178, "10705352": 178, "113343": 178, "11963247": 178, "12592195": 178, "13221142": 178, "1385009": 178, "14479037": 178, "15107985": 178, "15736932": 178, "1636588": 178, "16994827": 178, "17623775": 178, "18252722": 178, "1888167": 178, "19510617": 178, "20139564": 178, "20768512": 178, "21397459": 178, "22026407": 178, "22655354": 178, "23284302": 178, "23913249": 178, "24542197": 178, "25171144": 178, "25800092": 178, "26429039": 178, "27057987": 178, "27686934": 178, "28315882": 178, "28944829": 178, "29573777": 178, "30202724": 178, "30831672": 178, "31460619": 178, "32089567": 178, "32718514": 178, "33347462": 178, "33976409": 178, "34605356": 178, "35234304": 178, "35863251": 178, "36492199": 178, "37121146": 178, "37750094": 178, "38379041": 178, "39007989": 178, "39636936": 178, "40265884": 178, "40894831": 178, "41523779": 178, "42152726": 178, "42781674": 178, "43410621": 178, "44039569": 178, "44668516": 178, "45297464": 178, "45926411": 178, "46555359": 178, "47184306": 178, "47813254": 178, "48442201": 178, "49071148": 178, "49700096": 178, "50329043": 178, "50957991": 178, "51586938": 178, "52215886": 178, "52844833": 178, "53473781": 178, "54102728": 178, "54731676": 178, "55360623": 178, "55989571": 178, "56618518": 178, "57247466": 178, "57876413": 178, "58505361": 178, "59134308": 178, "59763256": 178, "60392203": 178, "61021151": 178, "61650098": 178, "62279046": 178, "62907993": 178, "6353694": 178, "64165888": 178, "64794835": 178, "65423783": 178, "6605273": 178, "66681678": 178, "67310625": 178, "67939573": 178, "6856852": 178, "69197468": 178, "69826415": 178, "70455363": 178, "7108431": 178, "71713258": 178, "72342205": 178, "72971153": 178, "736001": 178, "74229048": 178, "74857995": 178, "75486943": 178, "7611589": 178, "76744838": 178, "77373785": 178, "78002732": 178, "7863168": 178, "79260627": 178, "79889575": 178, "80518522": 178, "8114747": 178, "81776417": 178, "82405365": 178, "83034312": 178, "8366326": 178, "84292207": 178, "84921155": 178, "85550102": 178, "8617905": 178, "86807997": 178, "87436945": 178, "88065892": 178, "8869484": 178, "89323787": 178, "89952735": 178, "90581682": 178, "9121063": 178, "91839577": 178, "92468524": 178, "93097472": 178, "93726419": 178, "94355367": 178, "94984314": 178, "95613262": 178, "96242209": 178, "96871157": 178, "97500104": 178, "98129052": 178, "98757999": 178, "99386947": 178, "00015894": 178, "00644842": 178, "01273789": 178, "01902737": 178, "02531684": 178, "03160632": 178, "03789579": 178, "04418527": 178, "05047474": 178, "05676422": 178, "06305369": 178, "06934316": 178, "07563264": 178, "08192211": 178, "08821159": 178, "09450106": 178, "10079054": 178, "10708001": 178, "11336949": 178, "11965896": 178, "12594844": 178, "13223791": 178, "13852739": 178, "14481686": 178, "15110634": 178, "15739581": 178, "16368529": 178, "16997476": 178, "17626424": 178, "18255371": 178, "18884319": 178, "19513266": 178, "20142214": 178, "20771161": 178, "21400108": 178, "22029056": 178, "22658003": 178, "23286951": 178, "23915898": 178, "24544846": 178, "25173793": 178, "25802741": 178, "26431688": 178, "27060636": 178, "27689583": 178, "28318531": 178, "datashap": 178, "2026834": 178, "40536679": 178, "60805019": 178, "81073359": 178, "01341699": 178, "21610038": 178, "41878378": 178, "62146718": 178, "82415057": 178, "02683397": 178, "22951737": 178, "43220076": 178, "63488416": 178, "83756756": 178, "04025096": 178, "24293435": 178, "44561775": 178, "64830115": 178, "85098454": 178, "05366794": 178, "25635134": 178, "45903473": 178, "66171813": 178, "86440153": 178, "06708493": 178, "26976832": 178, "47245172": 178, "67513512": 178, "87781851": 178, "08050191": 178, "orbit": 178, "thick": 178, "unweight": [178, 180], "remaind": 178, "cylind": [173, 178, 180], "soderman": 178, "s\u00f6derman": 178, "oll": 178, "bengt": 178, "j\u00f6nsson": 178, "1995": [83, 178, 229], "yaniv": 178, "978": [83, 178, 219], "ten": 178, "nr": 178, "292": [75, 80, 83, 84, 178, 225], "e0": [178, 226, 227], "multicompartment": 178, "imperm": 178, "neglect": [178, 180], "bvals_2": 178, "bvecs_2": 178, "d_comp": 178, "odf_vert": 178, "pdf_point": 178, "pname": 179, "bname": 179, "group_id": [179, 182], "dir_nam": 179, "hd5": 179, "10001": [179, 182], "target_bundl": 179, "return_mahalnobi": 179, "mahalanobi": 179, "return_mahalanobi": 179, "n_streamlin": [179, 180], "profile_stat": 179, "orient_bi": 179, "weights_kwarg": 179, "outlin": 179, "voxel_to_rasmm": [179, 180], "phrase": 180, "tracks1": 180, "tracks2": 180, "nm": 180, "m1": 180, "track2track": 180, "tl": 180, "mam_dist": 183, "indices2": 180, "speedi": 180, "maker": 180, "calc_sign": [180, 183], "reconstmodel": [180, 183], "bunch": [180, 183], "to_fit": 180, "weighted_sign": 180, "relative_sign": 180, "mean_sig": 180, "vox_data": 180, "reconstfit": [180, 183], "interior": 180, "mitig": [173, 180], "n_node": 180, "unique_idx": 180, "v2f": 180, "v2fn": 180, "answer": 180, "minlen": 180, "fixedstep": [173, 180], "random_se": 180, "save_se": [180, 182, 214, 215, 231], "useless": [168, 180], "stepsiz": [180, 236], "pft_max_trial": 180, "back_tracking_dist": [180, 182, 215], "front_tracking_dist": [180, 182, 215], "trial": 180, "triangles_mask": 180, "triangles_weight": 180, "rand_gen": 180, "triangles_indic": 180, "trilinear_coord": 180, "triangles_idx": 180, "trilin_coord": 180, "trilinear_coordin": 180, "vts_valu": 180, "vertices_norm": 180, "vertices_color": 180, "triangles_valu": 180, "expected_len": 180, "len_along": 180, "cumsum": 180, "n_pol": 180, "xyz2": 180, "frenet": 180, "serret": 180, "mathwork": 180, "matlabcentr": 180, "fileexchang": 180, "11169": 180, "parametris": 180, "qquad": 180, "tangent": [173, 180], "binorm": 180, "kappa": 180, "torsion": 180, "helix": 180, "tm": 180, "ic": 180, "longest": [180, 182], "longest_or_indic": 180, "sph_cent": 180, "sph_radiu": 180, "rai": [180, 235], "wasp": [], "uwa": [], "pbourk": [], "spherelin": [], "cpp": 180, "xyzn": 180, "cookbook": 180, "netlib": 180, "fitpack": 180, "dierckx": 180, "datapoint": 180, "knot": 180, "ascend": 180, "spiral": 180, "splprep": 180, "splev": 180, "travel": 180, "va": 180, "51010101": 180, "09883545": 180, "new_streamlin": 180, "inv_shift": 180, "in_plac": 180, "selected_streamlin": 180, "roi1": 180, "roi2": 180, "n_roi": 180, "either_end": 180, "both_end": 180, "mask1": 180, "mask2": 180, "max_mdf": 180, "overrid": [177, 180, 219, 230], "subsamplen": 180, "degrad": 180, "5mm": 180, "jordan17": 180, "as_gener": 180, "ndarrrai": 180, "vol_dim": 180, "image_volum": 180, "indexerror": [180, 228], "label_volum": 180, "defaultdict": 180, "bincount": 180, "new_label": 180, "max_segment_length": 180, "output_streamlin": 180, "seeds_count": 180, "seed_count_per_voxel": 180, "0640051": 180, "47407377": 180, "04966248": 180, "0507979": 180, "20814782": 180, "20909526": 180, "46702984": 180, "04723225": 180, "47268436": 180, "27800683": 180, "37073231": 180, "29328084": 180, "39286015": 180, "16802019": 180, "32122912": 180, "42369171": 180, "27991879": 180, "06159077": 180, "70671916": 180, "48962585": 180, "00187459": 180, "99577329": 180, "target_mask": 180, "whatev": 180, "bresenham5": 180, "bresenham": 180, "jack": 180, "elton": 180, "plotter": 180, "ibm": 180, "houde15": 180, "compress_streamlin": [183, 217, 235], "roi_coord": 180, "region_of_interest": 180, "in_arrai": 180, "f4": 180, "u_return": 180, "tracking_output": 180, "include_roi": 180, "exclude_roi": 180, "aoi": 180, "fill_valu": [180, 183], "seq": 180, "plm": 180, "min_radius_curvatur": [173, 180], "onlinelibrari": [173, 180], "wilei": [173, 180], "22005": [173, 180], "out_png": 181, "recorded_ev": 181, "return_showm": 181, "order_transpar": 181, "buan_color": 181, "roi_imag": [181, 182, 204], "roi_color": [181, 182, 204], "peakandmetr": 181, "pictur": [181, 182, 204], "cababl": 181, "peel": [181, 182, 204], "anti": [181, 182, 204], "alias": [181, 182, 204], "horizon_ismrm19": [181, 182, 204], "juneja": [181, 182, 204, 221], "build_scen": [181, 183], "build_show": [181, 183], "abc": [181, 234], "tab_id": 181, "tab_ui": [181, 183], "win_siz": 181, "reposit": [181, 183], "clusters_visu": 181, "peak_actor": 181, "contour_actor": 181, "slices_visu": 181, "show_manag": 181, "enable_callback": 181, "add_cluster_actor": [181, 183], "tract_idx": 181, "thr": [180, 181], "centroid_actor": [181, 183], "cluster_actor": [181, 183], "recluster_tractogram": [181, 183], "tractogram_clust": [181, 183], "interactor": [181, 219, 220], "change_volum": [181, 183], "prev_idx": 181, "next_idx": 181, "visible_slic": 181, "data_shap": [181, 183], "intensities_rang": [181, 183], "register_picker_callback": [181, 183], "selected_slic": [181, 183], "volume_max": [181, 183], "volume_min": [181, 183], "mem": 181, "fit_kwarg": 181, "fit1": 181, "fit2": 181, "fitnam": 181, "xlimit": 181, "disprang": 181, "shape_profil": 181, "cbar": 181, "basemap_arg": 181, "triang": 181, "xlabel": 181, "ylabel": 181, "ylabl": 181, "img0": 181, "img1": 181, "title0": 181, "title_mid": 181, "title1": 181, "fig_kwarg": [181, 230], "segular": 181, "direct_grid_shap": 181, "direct_grid2world": 181, "inverse_grid_shap": 181, "inverse_grid2world": 181, "show_figur": 181, "warped_forward": 181, "warped_backward": 181, "wouldn": 181, "slice_indic": 181, "slice_typ": 181, "ltitl": 181, "rtitl": 181, "sagit": 181, "c2": 181, "magnitdu": 181, "docscrap": 182, "numpydoc": 182, "mentat": 182, "virtanen": 182, "pav": 182, "iki": 182, "fi": 182, "output_strategi": 182, "get_short_nam": [182, 183], "troubl": 182, "subworkflow": 182, "strongli": 182, "new_vox_s": [182, 210], "out_resl": [182, 210], "new_vox_sz": [182, 210], "static_fil": [182, 189, 211], "moving_fil": [182, 189, 211], "out_mov": [182, 184, 190, 211], "out_stat_centroid": [182, 211], "static_centroid": 182, "out_moving_centroid": [182, 211], "moving_centroid": 182, "out_moved_centroid": [182, 211], "moved_centroid": 182, "static_image_fil": [182, 184, 185, 186], "moving_image_fil": [182, 184, 185, 186], "out_qual": [182, 184], "quality_metr": [182, 184], "transform_map_fil": [182, 186], "overwritten": [182, 186], "prealign_fil": [182, 185], "inv_stat": [182, 185], "mopt_sigma_diff": [182, 185], "mopt_radiu": [182, 185], "mopt_smooth": [182, 185], "mopt_inner_it": [182, 185], "mopt_q_level": [182, 185], "mopt_double_gradi": [182, 185], "mopt_step_typ": [182, 185], "out_inv_stat": [182, 185], "inc_stat": 182, "out_field": [182, 185], "displacement_field": [168, 182], "bvalues_fil": [182, 190, 191, 197, 198, 199, 200, 201], "bvectors_fil": [182, 190, 191, 197, 198, 199, 200, 201], "bvecs_tol": [182, 190, 191, 197, 198, 200, 205], "out_linear_mov": [182, 189], "linearly_mov": 182, "out_nonlinear_mov": [182, 189], "out_warp_transform": [182, 189], "warp_transform": 182, "out_warp_kernel": [182, 189], "warp_kernel": 182, "out_dist": [182, 189], "distance_matrix": [180, 182, 183], "out_matched_pair": [182, 189], "cpd": [182, 183, 189], "treamlin": [182, 189], "prog": 182, "epilog": 182, "formatter_class": 182, "rawtexthelpformatt": 182, "prefix_char": 182, "fromfile_prefix_char": 182, "argument_default": 182, "conflict_handl": 182, "add_help": 182, "argumentpars": 182, "augment": 182, "argv": 182, "helpformatt": 182, "charact": [182, 219, 221, 225, 226], "add_descript": [182, 183], "add_epilogu": [182, 183], "add_sub_flow_arg": [182, 183], "sub_flow": 182, "introspect": 182, "sub_flow_opt": 182, "add_workflow": [182, 183], "arpars": 182, "get_flow_arg": [182, 183], "optional_paramet": [182, 183], "output_paramet": [182, 183], "positional_paramet": [182, 183], "show_argu": [182, 183], "dest": 182, "update_argu": [182, 183], "karg": 182, "get_opt": [182, 183], "get_sub_run": [182, 183], "set_sub_flows_opt": [182, 183], "_option": 182, "bval_fil": [182, 194], "dwi_patch2self": [182, 194], "globe": [182, 193, 194, 199, 200, 201, 208, 244], "dwi_nlmean": 182, "dwi_mppca": 182, "out_sigma": [182, 192], "dwi_sigma": 182, "out_unr": [182, 203], "dwi_unr": 182, "eof": [182, 183], "is_empti": [182, 183], "peek": [182, 183], "read_to_condit": [182, 183], "condition_func": 182, "read_to_next_empty_lin": [182, 183], "read_to_next_unindented_lin": [182, 183], "seek_next_non_empty_lin": [182, 183], "deindent": 182, "lvl": 182, "bshell_thr": [182, 205], "load_modul": [182, 183], "module_path": 182, "reload": [182, 219], "data_nam": [182, 196], "out_split": [182, 213], "lb": [182, 207, 236], "ub": [182, 207], "out_fnam": 182, "create_directori": [182, 183], "create_output": [182, 183], "file_existence_check": [182, 183], "set_input": [182, 183], "set_out_dir": [182, 183], "set_out_fnam": [182, 183], "set_output_kei": [182, 183], "sa": [180, 182], "sb": [180, 182], "substr": 182, "dir_str": 182, "prepend": 182, "multi_input": 182, "out_kei": 182, "fnc": 182, "frameobject": 182, "save_mask": [182, 195, 208], "dwi_mask": 182, "park2022": [182, 195], "data_fil": [182, 202, 212], "out_rtop": [182, 202], "out_lapnorm": [182, 202], "lapnorm": [182, 202], "out_msd": [182, 202], "out_qiv": [182, 202], "out_rtap": [182, 202], "out_rtpp": [182, 202], "out_ng": [182, 202], "out_perng": [182, 202], "perng": [182, 202], "out_parng": [182, 202], "parng": [182, 202], "laplacian_sign": [182, 202], "get_fitted_tensor": [182, 183], "optional_arg": 182, "mask_fil": [182, 197, 198, 199, 200, 201, 212], "out_fa": [182, 199, 200], "out_ga": [182, 199, 200], "out_rgb": [182, 199, 200], "out_md": [182, 199, 200], "out_ad": [182, 199, 200], "out_rd": [182, 199, 200], "out_mod": [182, 199, 200], "out_evec": [182, 199, 200], "out_ev": [182, 199, 200], "nifti_tensor": [182, 200], "hung": [182, 200], "frf": [182, 198], "odf_to_sh_ord": [182, 197, 198], "out_pam": [182, 197, 198], "out_shm": [182, 197, 198], "out_peaks_dir": [182, 197, 198], "peaks_dir": 182, "out_peaks_valu": [182, 197, 198], "peaks_valu": 182, "out_peaks_indic": [182, 197, 198], "peaks_indic": 182, "out_gfa": [182, 197, 198], "peak_from_model": [182, 197, 198, 225], "out_dt_tensor": [182, 199], "out_dk_tensor": [182, 199], "dki_tensor": 182, "out_mk": [182, 199], "out_ak": [182, 199], "out_rk": [182, 199], "joseph": [182, 199], "anita": [182, 199], "hanzhang": [182, 199], "kyle": [182, 199], "get_fitted_ivim": [182, 183], "out_s0_predict": [182, 201], "out_perfusion_fract": [182, 201], "out_d_star": [182, 201], "out_d": [182, 201], "sphere_nam": 182, "streamline_fil": [182, 206, 209], "model_bundle_fil": [182, 209], "no_slr": [182, 209], "slr_matrix": [182, 209], "r_reduction_thr": [182, 209], "r_pruning_thr": [182, 209], "no_r_slr": [182, 209], "out_recognized_transf": [182, 209], "out_recognized_label": [182, 209], "tini": [182, 209], "labels_fil": [182, 206], "out_bundl": [182, 206], "recognized_orig": 182, "bbox_threshold": [182, 212], "out_mask_cc": [182, 212], "out_mask_nois": [182, 212], "model_bundle_fold": [182, 188], "subject_fold": [182, 188], "get_metric_nam": [182, 183], "af_l_fa": 182, "h5_file": [182, 187], "save_lmm_plot": [182, 183], "plot_fil": 182, "bundle_nam": 182, "log10": 182, "bundle_fold": 182, "orig_bundle_fold": 182, "metric_fold": 182, "orig_fold": 182, "pam_fil": [182, 214, 215], "stopping_fil": [182, 214], "seeding_fil": [182, 214, 215], "use_binary_mask": [182, 214], "stopping_thr": [182, 214], "binar": [182, 214], "regularli": [182, 214, 215, 230], "closestpeak": [182, 214, 223], "wm_file": [182, 215], "gm_file": [182, 215], "csf_file": [182, 215], "pft_back": [182, 215], "pft_front": [182, 215], "pft_count": [182, 215], "cmc": [180, 182, 215], "100000000": 182, "icbm_2009a": [182, 204], "emerg": [182, 204], "icbm_2009c": [182, 204], "manage_output_overwrit": [182, 183], "_force_overwrit": 182, "outcom": 182, "liter": [182, 230, 231], "subpackag": 183, "get_info": [183, 217, 218], "_public": [183, 232], "scalespac": 183, "verbositylevel": 183, "syn_registr": [183, 226], "write_map": [183, 235], "read_map": 183, "_method_dict": 183, "register_dwi_seri": 183, "deformableregistr": 183, "gaussian_kernel": 183, "low_rank_eigen": 183, "initialize_sigma2": 183, "lowrankq": 183, "affineinversionerror": 183, "affineinvalidvalueserror": 183, "_transform_method": 183, "transform_geometric_cent": 183, "diffeomorphicregistr": [183, 228], "logger": [183, 235], "mult_aff": 183, "get_direction_and_spac": 183, "similaritymetr": 183, "emmetr": 183, "v_cycle_2d": 183, "v_cycle_3d": 183, "isotropicscalespac": 183, "streamlinedistancemetr": 183, "bundlemindistancematrixmetr": 183, "bundlemindistanceasymmetricmetr": 183, "bundlesumdistancematrixmetr": 183, "jointbundlemindistancemetr": 183, "streamlineregistrationmap": 183, "jointstreamlineregistrationmap": 183, "bundle_sum_dist": 183, "bundle_min_dist": 183, "bundle_min_distance_fast": 183, "bundle_min_distance_asymmetric_fast": 183, "remove_clusters_by_s": 183, "progressive_slr": 183, "slr_with_qbx": [183, 236], "get_unique_pair": 183, "compose_matrix44": 183, "decompose_matrix44": 183, "average_bundle_length": 183, "find_miss": 183, "onetim": 183, "sphere_stat": [183, 225, 226], "_tuple2ax": 183, "sphere2cart": [183, 224, 244], "cart2spher": [183, 224, 227], "sph2latlon": 183, "normalized_vector": 183, "vector_norm": [183, 224], "rodrigues_axis_rot": 183, "nearest_pos_semi_def": 183, "sphere_dist": 183, "cart_dist": 183, "vector_cosin": 183, "lambert_equal_area_projection_polar": 183, "lambert_equal_area_projection_cart": 183, "euler_matrix": 183, "compose_matrix": [183, 226], "decompose_matrix": 183, "circumradiu": 183, "vec2vec_rotmat": [183, 217, 233], "compose_transform": 183, "perpendicular_direct": 183, "dist_to_corn": 183, "is_hemispher": [183, 228], "gradient_table_from_bvals_bvec": 183, "gradient_table_from_qvals_bvec": 183, "gradient_table_from_gradient_strength_bvec": 183, "reorient_bvec": [183, 230], "generate_bvec": 183, "round_bval": 183, "get_bval_indic": 183, "check_multi_b": 183, "btens_to_param": 183, "params_to_bten": 183, "ornt_map": 183, "reorient_vector": 183, "reorient_on_axi": 183, "orientation_from_str": 183, "orientation_to_str": 183, "resetmixin": 183, "onetimeproperti": 183, "auto_attr": [183, 226], "nonnegativeleastsquar": 183, "sparse_nnl": 183, "wichmannhill2006": 183, "wichmannhill1982": 183, "lecuy": 183, "faces_from_sphere_vertic": 183, "unique_edg": 183, "unique_set": 183, "disperse_charges_alt": 183, "euler_characteristic_check": 183, "octahedron_vertic": 183, "octahedron_fac": 183, "icosahedron_vertic": 183, "icosahedron_fac": 183, "unit_octahedron": 183, "unit_icosahedron": 183, "hemi_icosahedron": 183, "random_uniform_on_spher": [183, 225, 226], "eigenstat": 183, "compare_orientation_set": 183, "angular_similar": 183, "create_unit_hemispher": 183, "cshift3d": 183, "permutationinvers": 183, "afb3d_a": 183, "sfb3d_a": 183, "sfb3d": 183, "afb3d": 183, "dwt3d": 183, "idwt3d": 183, "dataerror": [172, 183], "loads_compat": 183, "data_dir": 183, "get_sim_voxel": 183, "get_skeleton": 183, "get_gtab_taiwan_dsi": 183, "dsi_deconv_voxel": 183, "mrtrix_spherical_funct": 183, "get_cmap": [183, 226], "matlab_life_result": 183, "load_sdp_constraint": 183, "copyfileobj_withprogress": 183, "check_md5": 183, "fetch_data": 183, "fetch_stanford_label": 183, "fetch_resdnn_weight": 183, "fetch_synb0_weight": 183, "fetch_synb0_test": 183, "fetch_evac_weight": 183, "fetch_evac_test": 183, "fetch_stanford_t1": 183, "fetch_taiwan_ntu_dsi": 183, "fetch_scil_b0": 183, "fetch_cfin_multib": 183, "fetch_gold_standard_io": [183, 230], "fetch_qte_lte_pt": 183, "fetch_cti_rat1": 183, "fetch_fury_surfac": 183, "fetch_dib_70_lte_pte_st": 183, "fetch_dib_217_lte_pte_st": 183, "fetch_ptt_minimal_dataset": 183, "read_scil_b0": 183, "read_siemens_scil_b0": 183, "read_isbi2013_2shel": 183, "read_sherbrooke_3shel": 183, "read_stanford_label": 183, "read_stanford_hardi": 183, "read_stanford_t1": 183, "read_stanford_pve_map": 183, "read_taiwan_ntu_dsi": 183, "read_syn_data": 183, "fetch_tissue_data": 183, "read_tissue_data": 183, "fetch_cenir_multib": 183, "read_cfin_dwi": 183, "read_cfin_t1": 183, "read_qte_lte_pt": 183, "extract_example_tract": 183, "to_bids_descript": 183, "fetch_hcp": 183, "peak_directions_nl": 183, "reshape_peaks_for_visu": 183, "read_bvec_fil": 183, "save_qa_metr": 183, "load_peak": [183, 229], "save_peak": 183, "peaks_to_nifti": 183, "set_sft_logger_level": 183, "load_gener": 183, "save_gener": 183, "load_vtk": 183, "load_vtp": 183, "load_fib": 183, "load_dpi": 183, "save_vtk": 183, "save_vtp": 183, "save_fib": 183, "save_dpi": 183, "nifti1_symmat": 183, "make5d": 183, "decfa": [183, 223, 228], "decfa_to_float": 183, "is_reference_info_valid": 183, "save_buan_profiles_hdf5": 183, "read_img_arr_or_path": 183, "save_polydata": 183, "save_vtk_streamlin": [183, 230], "load_vtk_streamlin": [183, 230], "cnn_1d_denois": 183, "cnn1ddenois": 183, "channelsum": 183, "evacplu": 183, "prepare_img": 183, "init_model": 183, "singlelayerperceptron": 183, "multiplelayerpercepton": 183, "encoderblock": 183, "decoderblock": 183, "unet3d": 183, "unnorm": 183, "set_logger_level": 183, "transform_img": 183, "recover_img": 183, "multi_voxel": [183, 224, 230], "coeff_of_determin": 183, "axsymshrespons": 183, "constrainedsdtmodel": 183, "estimate_respons": 183, "forward_sdt_deconv_mat": 183, "odf_deconv": 183, "fa_trace_to_lambda": 183, "carlson_rf": 183, "carlson_rd": 183, "directional_diffus": 183, "directional_diffusion_vari": 183, "directional_kurtosi": 183, "apparent_kurtosis_coef": 183, "radial_kurtosi": 183, "kurtosis_maximum": 183, "mean_kurtosis_tensor": 183, "kurtosis_fractional_anisotropi": 183, "dki_predict": 183, "params_to_dki_param": 183, "ls_fit_dki": 183, "cls_fit_dki": 183, "wrotat": 183, "wrotate_el": 183, "wcon": 183, "split_dki_param": 183, "kurtosismicrostructuralfit": 183, "axonal_water_fract": 183, "diffusion_compon": 183, "dkimicro_predict": 183, "diffusionspectrumfit": 183, "diffusionspectrumdeconvfit": 183, "create_qspac": 183, "create_qt": 183, "hanning_filt": 183, "pdf_interp_coord": 183, "pdf_odf": [183, 224], "half_to_full_qspac": 183, "project_hemisph_bvec": 183, "threshold_propag": 183, "gen_psf": 183, "lr_deconv": 183, "geodesic_anisotropi": 183, "axial_diffus": 183, "radial_diffus": 183, "deviator": 183, "apparent_diffusion_coef": 183, "tensor_predict": 183, "iter_fit_tensor": [183, 217], "wls_fit_tensor": 183, "ols_fit_tensor": 183, "nlls_fit_tensor": 183, "restore_fit_tensor": 183, "_lt_indic": 183, "_lt_row": 183, "_lt_col": 183, "quantize_evec": [183, 219, 230], "eig_from_lo_tri": [183, 226], "forecastfit": 183, "find_signal_mean": 183, "forecast_error_func": 183, "psi_l": 183, "forecast_matrix": 183, "rho_matrix": 183, "lb_forecast": 183, "fwdti_predict": 183, "wls_iter": 183, "nls_iter": 183, "nls_fit_tensor": 183, "lower_triangular_to_choleski": 183, "cholesky_to_lower_triangular": 183, "generalizedqsamplingfit": 183, "normalize_qa": 183, "squared_radial_compon": 183, "npa": 183, "equatorial_zone_vertic": 183, "polar_zone_vertic": 183, "upper_hemi_map": 183, "equatorial_maximum": 183, "patch_vertic": 183, "patch_maximum": 183, "odf_sum": 183, "patch_sum": 183, "triple_odf_maxima": 183, "ivimmodeltrr": 183, "ivimmodelvp": 183, "ivim_predict": 183, "f_d_star_predict": 183, "f_d_star_error": 183, "ivim_model_selector": 183, "mapmrifit": 183, "isotropic_scale_factor": 183, "mapmri_index_matrix": 183, "b_mat": 183, "b_mat_isotrop": 183, "mapmri_phi_1d": 183, "mapmri_phi_matrix": 183, "mapmri_psi_1d": 183, "mapmri_psi_matrix": 183, "mapmri_odf_matrix": 183, "mapmri_isotropic_phi_matrix": 183, "mapmri_isotropic_radial_signal_basi": 183, "mapmri_isotropic_m_mu_independ": 183, "mapmri_isotropic_m_mu_depend": 183, "mapmri_isotropic_psi_matrix": 183, "mapmri_isotropic_radial_pdf_basi": 183, "mapmri_isotropic_k_mu_independ": 183, "mapmri_isotropic_k_mu_depend": 183, "binomialfloat": 183, "mapmri_isotropic_odf_matrix": 183, "mapmri_isotropic_odf_sh_matrix": 183, "mapmri_isotropic_laplacian_reg_matrix": 183, "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix": 183, "mapmri_isotropic_index_matrix": 183, "create_rspac": 183, "map_laplace_u": 183, "map_laplace_t": 183, "map_laplace_": 183, "mapmri_stu_reg_matric": 183, "mapmri_laplacian_reg_matrix": 183, "generalized_crossvalidation_arrai": 183, "generalized_crossvalid": 183, "gcv_cost_funct": 183, "msdeconvfit": 183, "qpfitter": 183, "multi_tissue_basi": 183, "solve_qp": [183, 231, 236], "meandiffusionkurtosisfit": 183, "mean_signal_bvalu": 183, "msk_from_awf": 183, "awf_from_msk": 183, "msdki_predict": 183, "wls_fit_msdki": 183, "multivoxelfit": 183, "callablearrai": 183, "multi_voxel_fit": [183, 234], "odfmodel": 183, "odffit": 183, "minmax_norm": [183, 225, 228], "qtdmrifit": 183, "qtdmri_to_mapmri_matrix": 183, "qtdmri_isotropic_to_mapmri_matrix": 183, "qtdmri_temporal_norm": 183, "qtdmri_mapmri_norm": 183, "qtdmri_mapmri_isotropic_norm": 183, "qtdmri_signal_matrix_": 183, "qtdmri_signal_matrix": 183, "qtdmri_eap_matrix": 183, "qtdmri_isotropic_signal_matrix_": 183, "qtdmri_isotropic_signal_matrix": 183, "qtdmri_eap_matrix_": 183, "qtdmri_isotropic_eap_matrix_": 183, "qtdmri_isotropic_eap_matrix": 183, "radial_basis_opt": 183, "angular_basis_opt": 183, "radial_basis_eap_opt": 183, "angular_basis_eap_opt": 183, "temporal_basi": 183, "qtdmri_index_matrix": 183, "qtdmri_isotropic_index_matrix": 183, "qtdmri_laplacian_reg_matrix": 183, "qtdmri_isotropic_laplacian_reg_matrix": 183, "part23_reg_matrix_q": 183, "part23_iso_reg_matrix_q": 183, "part4_reg_matrix_q": 183, "part4_iso_reg_matrix_q": 183, "part1_reg_matrix_tau": 183, "part23_reg_matrix_tau": 183, "part4_reg_matrix_tau": 183, "qtdmri_isotropic_sc": 183, "qtdmri_anisotropic_sc": 183, "design_matrix_spati": 183, "create_rt_space_grid": 183, "qtdmri_number_of_coeffici": 183, "l1_crossvalid": 183, "elastic_crossvalid": 183, "from_3x3_to_6x1": 183, "from_6x1_to_3x3": 183, "from_6x6_to_21x1": 183, "from_21x1_to_6x6": 183, "cvxpy_1x6_to_3x3": 183, "cvxpy_1x21_to_6x6": 183, "dtd_covari": 183, "qti_sign": 183, "rumba_deconv": 183, "mbessel_ratio": 183, "generate_kernel": 183, "rumba_deconv_glob": 183, "isotropicmodel": 183, "isotropicfit": 183, "exponentialisotropicmodel": 183, "exponentialisotropicfit": 183, "sparsefasciclefit": 183, "sfm_design_matrix": 183, "sphharmmodel": [183, 225], "qballbasemodel": [183, 228], "sphharmfit": [183, 225], "opdtmodel": 183, "residualbootstrapwrapp": 183, "forward_sdeconv_mat": 183, "sh_to_rh": 183, "gen_dirac": 183, "spherical_harmon": 183, "real_sph_harm": [183, 219], "real_sh_tournier_from_index": 183, "real_sh_descoteaux_from_index": 183, "real_sh_tourni": 183, "real_sh_descoteaux": [173, 183], "real_sym_sh_mrtrix": 183, "real_sym_sh_basi": 183, "sph_harm_ind_list": 183, "order_from_ncoef": 183, "smooth_pinv": 183, "lazy_index": 183, "normalize_data": 183, "lcr_matrix": 183, "bootstrap_data_arrai": 183, "bootstrap_data_voxel": 183, "calculate_max_ord": [183, 222], "convert_sh_to_full_basi": 183, "convert_sh_from_legaci": 183, "convert_sh_to_legaci": [183, 235], "shorefit": 183, "shore_matrix": 183, "shore_matrix_pdf": 183, "shore_matrix_odf": 183, "l_shore": 183, "n_shore": 183, "shore_indic": 183, "shore_ord": 183, "dki_design_matrix": 183, "check_rang": 183, "bundle_adjac": 183, "ba_analysi": 183, "cluster_bundl": 183, "clustercentroid": 183, "treeclust": 183, "treeclustermap": 183, "qbx_and_merg": 183, "nearest_from_matrix_col": 183, "applymask": 183, "clean_cc_mask": 183, "mean_manhattan_dist": 183, "mean_euclidean_dist": 183, "upper_bound_by_r": 183, "upper_bound_by_perc": 183, "diff2eigenvector": 183, "orbital_phantom": 183, "diffusion_ev": 183, "callaghan_perpendicular": 183, "gaussian_parallel": 183, "cylinders_and_ball_soderman": 183, "kurtosis_el": 183, "dki_sign": [183, 219], "all_tensor_evec": [183, 227], "single_tensor_rtop": 183, "multi_tensor_rtop": 183, "single_tensor_pdf": 183, "multi_tensor_pdf": 183, "single_tensor_msd": 183, "multi_tensor_msd": 183, "detect_corresponding_track": 183, "detect_corresponding_tracks_plu": 183, "lifesignalmak": 183, "streamline_sign": 183, "streamline_gradi": 183, "grad_tensor": 183, "streamline_tensor": 183, "triangles_area": 183, "vertices_to_triangles_valu": 183, "wind": [183, 219], "midpoint": 183, "frenet_serret": 183, "mean_curvatur": 183, "mean_orient": 183, "generate_combin": 183, "longest_track_bundl": 183, "intersect_spher": 183, "inside_spher": 183, "inside_sphere_point": 183, "arbitrarypoint": 183, "principal_compon": 183, "midpoint2point": 183, "relist_streamlin": 183, "center_streamlin": 183, "ndbincount": 183, "reduce_label": 183, "subseg": 183, "streamline_near_roi": [183, 234], "unique_row": [183, 226], "transform_tracking_output": 183, "reduce_roi": [183, 234], "max_angle_from_curvatur": 183, "min_radius_curvature_from_angl": 183, "gmem": 183, "app": 183, "globalhorizon": 183, "horizontab": 183, "tabmanag": 183, "color_single_slid": 183, "color_double_slid": 183, "clusterstab": 183, "peakstab": 183, "roistab": 183, "slicestab": 183, "clustersvisu": 183, "slicesvisu": 183, "slicer_panel": 183, "bundle_shape_profil": 183, "sph_project": [183, 224, 226], "simple_plot": 183, "draw_lattice_2d": 183, "plot_slic": 183, "docstring_pars": 183, "multi_io": [183, 220, 222], "resliceflow": 183, "slrwithqbxflow": 183, "applytransformflow": 183, "synregistrationflow": [183, 236], "bundlewarpflow": 183, "check_dimens": 183, "introspectiveargumentpars": 183, "get_args_default": 183, "none_or_dtyp": 183, "patch2selfflow": 183, "mppcaflow": 183, "gibbsringingflow": 183, "numpydocstr": 183, "dedent_lin": 183, "get_level": 183, "ioinfoflow": 183, "splitflow": [183, 229], "maskflow": 183, "common_start": 183, "slash_to_und": 183, "connect_output_path": 183, "concatenate_input": 183, "basename_without_extens": 183, "io_iter": 183, "io_iterator_": 183, "evacplusflow": 183, "reconstmapmriflow": 183, "reconstdtiflow": 183, "reconstcsdflow": 183, "reconstcsaflow": 183, "reconstdkiflow": 183, "reconstivimflow": 183, "reconstrumbaflow": 183, "recobundlesflow": 183, "labelsbundlesflow": 183, "snrinccflow": 183, "bundleanalysistractometryflow": 183, "linearmixedmodelsflow": 183, "bundleshapeanalysi": 183, "buan_bundle_profil": 183, "localfibertrackingpamflow": 183, "pftrackingpamflow": 183, "horizonflow": 183, "andgaryfallidi": [188, 209], "forinvestig": [188, 209], "acrosspopul": [188, 209], "randommatrix": [191, 228], "noisemap": [191, 192], "inmedicin": 191, "matrixtheori": 192, "andprima": 193, "onhardi": 193, "featurecrf": 195, "mridata": 203, "ringingartifact": 203, "2016doi": 203, "linearregistr": 211, "ofstreamlin": 211, "fiberbundl": 211, "matterbundl": 211, "registrationand": 211, "towardsquantit": 215, "alphabet": 217, "1022": [80, 83, 217, 219, 228], "qixiang": 217, "chen": [168, 217], "gonzalo": 217, "232": [83, 84, 217, 225], "github_stat": [217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "769": [80, 217], "altogeth": 217, "772": [80, 83, 217], "xvfb": 217, "headless": 217, "754": [80, 83, 217], "car": 217, "gitter": [217, 218, 221, 230, 238], "chat": [217, 218, 221], "753": [80, 83, 217], "tst": [217, 218, 219, 221, 222, 224, 226, 229, 230, 231], "767": [80, 81, 217], "offscreen": 217, "test_slic": 217, "768": [80, 83, 217], "766": [80, 83, 217], "751": [83, 93, 217], "765": [80, 217], "757": [80, 83, 217], "587": [75, 83, 86, 217], "pr1": [217, 227], "748": 217, "_to_voxel_toler": 217, "678": [80, 86, 217], "714": [75, 80, 86, 217], "739": [83, 217], "733": [75, 80, 83, 217], "743": [80, 83, 217], "memleak": 217, "sinkpoint": 217, "741": [80, 217], "727": [80, 83, 217], "726": [80, 83, 217], "729": [75, 80, 83, 217], "736": [129, 217], "tk": 217, "735": [80, 83, 217], "732": [80, 86, 217], "wip": [217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236], "731": [80, 83, 217], "640": [80, 86, 217], "682": [75, 80, 86, 217], "716": [80, 83, 217], "699": [83, 217], "712": [80, 83, 217], "gh707": 217, "713": [80, 82, 83, 217], "677": [80, 83, 86, 217], "pr3": 217, "721": [80, 83, 86, 217], "572": [75, 83, 86, 217], "708": [80, 217], "707": [80, 83, 217, 228], "709": [80, 83, 128, 129, 217], "703": [80, 81, 83, 217], "705": [83, 217], "702": [75, 80, 217], "689": [75, 80, 217], "681": [75, 80, 83, 217], "da": [217, 234], "696": [80, 83, 86, 217], "691": [75, 80, 83, 86, 217], "661": [75, 80, 83, 217], "690": [75, 83, 94, 217], "segfault": [217, 222, 225], "667": [80, 217], "sourceforg": 217, "makefil": 217, "gh": [217, 226], "upl": 217, "676": [75, 80, 86, 217, 222], "infrastructur": 217, "533": [75, 80, 83, 217], "mrg": [217, 218, 219, 220, 221, 225, 226], "686": [80, 86, 217], "pyhon26": 217, "683": [80, 83, 217], "654": [75, 80, 83, 86, 217], "684": [75, 80, 83, 86, 217], "674": [80, 86, 217], "679": [80, 83, 217], "680": [75, 80, 217], "664": [80, 83, 217], "pr2": 217, "671": [75, 80, 83, 217], "663": [75, 80, 86, 217], "usherbrook": 217, "648": [75, 83, 86, 217], "582": [75, 80, 86, 93, 217], "660": [75, 80, 217], "612": [75, 80, 83, 217], "wrt": 217, "651": [80, 83, 86, 217], "659": [31, 38, 75, 80, 83, 86, 217], "658": [75, 80, 83, 86, 217], "resav": 217, "657": [75, 80, 83, 217], "628": [75, 83, 86, 217], "637": [75, 83, 86, 217], "639": [75, 83, 86, 217], "614": [75, 80, 83, 86, 217], "633": [75, 83, 86, 217], "tissuetyp": 217, "632": [80, 83, 217], "627": [83, 86, 217], "miss": [180, 217, 219, 220, 221, 222, 224, 226, 228, 229, 231, 233, 235], "626": [75, 80, 83, 86, 217], "loosevers": 217, "625": [75, 80, 83, 86, 217], "624": [75, 80, 86, 217], "619": [75, 80, 83, 86, 217], "618": [75, 80, 83, 86, 217], "616": [75, 80, 83, 86, 217], "576": [75, 83, 86, 217], "387": [83, 84, 217, 222], "610": [75, 83, 86, 217], "609": [75, 80, 86, 217], "607": [75, 80, 83, 86, 217], "606": [66, 75, 80, 86, 217], "605": [75, 83, 86, 217], "594": [75, 86, 217, 227], "771": 217, "761": [80, 81, 83, 217], "dconn": 217, "723": [80, 83, 217], "738": [80, 217], "tkinter": 217, "752": [80, 83, 217], "mesa": 217, "763": [80, 217], "overflow": [180, 217, 222, 226], "764": [80, 83, 217], "404": [80, 83, 84, 217, 227, 229], "286": [83, 84, 217], "cleanup": [217, 219, 224, 225, 226, 227, 230, 233, 234], "755": [80, 83, 217], "test_shm": 217, "test_sf_to_sh": 217, "typeerror": [217, 225, 226, 236], "same_kind": 217, "737": [80, 83, 86, 217], "672": [80, 86, 217], "730": 217, "734": [80, 217], "688": [80, 83, 217], "cento": [217, 222], "python2": 217, "725": [80, 83, 217], "611": [75, 80, 83, 86, 217], "715": [83, 217], "719": [80, 83, 217], "693": [75, 80, 83, 217], "694": [33, 75, 80, 83, 86, 217], "timeout": [217, 226, 231, 234], "697": [83, 217], "test_spher": 217, "test_interp_rbf": 217, "649": [80, 83, 217], "656": [81, 83, 217], "701": [83, 217], "704": [75, 80, 86, 217], "hyp1f1": 217, "622": [80, 83, 86, 217], "233": [80, 83, 84, 217, 226], "652": [75, 86, 217], "653": [75, 80, 83, 217], "revisit": [217, 225], "cuba": 217, "655": [54, 75, 80, 83, 86, 217], "638": [80, 86, 217], "630": [57, 62, 75, 83, 86, 217], "623": [75, 83, 217], "604": [75, 80, 83, 86, 217], "arm": 217, "613": [75, 80, 86, 217], "test_vector_field": [217, 219], "test_reorient_vector_field_2d": 217, "icon": [217, 222], "nanmean": [217, 227], "271": [80, 83, 84, 218], "933": [81, 218, 219], "925": [81, 218], "915": [80, 83, 218], "dipy_quickbundl": 218, "922": [62, 63, 81, 83, 218], "921": [80, 218], "918": [80, 83, 218], "test_expectmax": 218, "917": [81, 83, 218], "916": [80, 83, 218], "908": 218, "911": [80, 81, 83, 218], "904": [81, 218], "851": [80, 81, 83, 218], "upcom": [218, 220, 226, 228, 229, 233, 236], "856": [83, 218], "room": 218, "762": [80, 83, 218], "816": [80, 83, 218], "811": [83, 218], "853": [80, 83, 218], "miscellan": [218, 234, 235], "849": [83, 218], "850": [81, 218], "848": [83, 218], "847": [83, 218], "845": [83, 218], "examples_index": 218, "846": [80, 81, 218], "826": [83, 218], "841": [80, 83, 218], "839": [80, 83, 218], "819": [80, 218], "843": [83, 218], "838": [80, 81, 218], "833": [83, 218], "817": 218, "695": [80, 83, 218], "829": [80, 83, 218], "813": [83, 218, 219], "830": 218, "825": [80, 83, 218], "toollib": 218, "802": [80, 83, 218], "760": [80, 218], "824": [83, 218], "815": [50, 81, 83, 218], "anymor": [218, 222, 224, 226, 231, 235], "669": [80, 83, 86, 218], "moco": 218, "809": [83, 218], "821": [83, 218], "revert": [218, 219, 222, 224, 226], "commit_info": 218, "818": [83, 218], "797": 218, "806": [80, 83, 218], "814": [80, 218, 225], "745": [80, 218], "807": [83, 218], "shebang": [218, 219], "801": [81, 83, 218], "886": [54, 110, 116, 218], "863": [80, 218], "919": 218, "896": [81, 218, 219], "906": [81, 83, 218], "890": [80, 218], "905": [80, 81, 83, 218], "broken": [218, 219, 220, 221, 222, 223, 226, 228, 229, 230, 236], "898": [83, 218], "891": [83, 218, 219], "892": [80, 81, 218], "894": [86, 218], "895": [55, 75, 80, 81, 83, 218], "893": [83, 104, 107, 218], "860": [80, 83, 218], "badg": [218, 219, 220, 221, 222, 234], "692": [80, 218], "quickstart": [218, 222], "822": [80, 218], "me": 218, "urlerror": 218, "urlopen": 218, "errno": 218, "10060": 218, "840": [80, 218], "855": [80, 81, 218], "3rc": 218, "153": [71, 80, 83, 84, 218, 233], "665": [51, 62, 75, 80, 86, 218], "macosx": 218, "758": [80, 218], "842": [80, 218], "pip": [218, 219, 226], "805": [83, 218], "812": [80, 218], "685": [80, 83, 218, 232], "pr5": [218, 232], "666": [83, 218], "747": [80, 83, 218], "631": [75, 83, 218], "820": [83, 218], "hash": [218, 222], "810": [81, 218], "_voxel2stream": 218, "803": [81, 83, 218], "vm": 218, "1491": [80, 83, 219, 221], "antonio": 219, "ossa": 219, "etienn": [219, 233, 236], "julio": 219, "villalon": 219, "manu": 219, "sharma": [219, 222, 223], "gonzalez": 219, "riddhish": 219, "bhalodia": 219, "sourav": 219, "singh": [219, 221], "stong": 219, "guillaum": [219, 220, 222], "theaud": [219, 220, 222], "tingyi": 219, "wanyan": 219, "wright": 219, "vibhatha": 219, "abeykoon": 219, "theaveragegui": 219, "511": [80, 219, 226], "342": [83, 84, 219, 231], "1273": 219, "1272": [83, 219], "1269": [80, 83, 219], "1271": [80, 83, 219], "tut": 219, "1268": [83, 219], "1243": [80, 219], "1223": 219, "1270": [83, 219], "1263": 219, "1254": [72, 80, 83, 219], "1261": 219, "1255": 219, "1260": [80, 83, 219], "1241": [80, 219], "1250": [80, 83, 86, 219], "1244": [83, 219], "1235": [80, 83, 219], "1233": [80, 83, 219], "dipy_hom": 219, "1234": [168, 219], "ascii": [219, 221, 225, 226], "1222": [80, 83, 219], "lightweight": [219, 220, 222], "1228": [80, 83, 219], "1227": 219, "1226": [80, 81, 83, 219], "1229": [83, 219], "1225": 219, "1219": 219, "dropbox": 219, "1221": [83, 219], "1212": [83, 219], "1217": [83, 219], "1205": [83, 219], "1166": [80, 83, 219], "1216": [80, 219], "1214": 219, "clarif": 219, "simplify_warp_funcion_3d": 219, "1206": [83, 219], "1204": [83, 219], "1196": [80, 83, 219], "1199": [83, 219], "1202": [80, 83, 219], "1198": [80, 83, 219], "1201": [83, 219], "cla": 219, "1052": 219, "1183": 219, "textbox": 219, "1186": [80, 83, 219], "wheelhous": 219, "1195": [83, 219], "assert_arrays_equ": 219, "1193": [83, 219], "accent": [219, 228], "anticip": 219, "1140": [75, 83, 219], "1171": [80, 219], "int64": 219, "1123": 219, "1174": [80, 83, 219], "1162": [83, 219], "1147": [80, 219], "1050": 219, "denspe": [183, 219], "1082": [80, 219], "1153": [80, 219], "1159": 219, "1157": [80, 219], "get_head": 219, "1160": [80, 83, 219], "1158": [80, 83, 219], "1151": [80, 219], "fmin": 219, "studio": 219, "1149": [80, 219], "1137": 219, "942": [80, 83, 219], "1141": [80, 219], "benchmark": [183, 219, 224], "1098": [80, 219], "1136": [80, 83, 219], "1113": [80, 83, 219], "1134": [83, 219], "993": [80, 83, 219], "1064": [80, 83, 219], "1114": [83, 219], "pathlength": 219, "1132": [81, 83, 219], "1125": 219, "1130": [83, 86, 219], "minor": [219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232], "1092": [83, 219], "1129": 219, "1127": 219, "1034": [83, 219], "1060": [83, 219], "1124": [83, 219], "1110": [83, 219], "1120": [83, 219], "1119": [83, 219], "1075": [80, 83, 219], "drop26": 219, "835": [75, 80, 81, 83, 219], "1046": [80, 83, 219], "nbr_process": 219, "1049": 219, "1087": [80, 83, 219], "1112": [83, 219], "1106": 219, "1066": [83, 219], "1091": [80, 83, 219], "1105": [80, 83, 219], "imp": 219, "1102": 219, "py35": 219, "1100": 219, "1094": 219, "1059": [83, 219], "1061": [80, 219], "1089": [80, 83, 219], "1079": [80, 83, 219], "1080": 219, "828": 219, "1072": [83, 86, 219], "1025": [80, 83, 219], "1077": [80, 83, 219], "1069": [80, 219], "1068": [83, 219], "test_shor": 219, "1067": [80, 219], "1062": [83, 219], "1056": [83, 219], "1028": [26, 83, 219], "1041": [83, 219], "1039": [80, 83, 219], "1019": [80, 83, 219], "heavi": 219, "1018": [80, 83, 219], "1035": 219, "974": [83, 219], "1021": [75, 83, 219], "1024": [83, 219], "981": 219, "979": [80, 83, 219], "958": [80, 83, 219], "1005": [80, 83, 219], "951": [83, 219], "1015": [80, 83, 219], "progressbar": [219, 231], "992": 219, "1003": [83, 219], "1004": [25, 219], "pkg_info": 219, "1006": 219, "1010": 219, "929": [56, 62, 219], "941": [81, 219], "976": [83, 219], "956": [80, 83, 219, 226], "955": [83, 86, 219], "952": [83, 219], "982": [80, 83, 219], "972": [83, 219, 224], "901": [83, 133, 134, 219], "971": 219, "989": [80, 83, 219], "977": 219, "957": [52, 62, 83, 219], "959": [83, 219], "967": [80, 219], "954": [54, 83, 88, 219], "948": [80, 83, 219], "test_sumsqdiff": 219, "test_scalespac": 219, "964": [83, 86, 96, 219], "test_imaffin": 219, "963": [80, 83, 219], "947": [83, 219], "897": [80, 83, 219], "926": [31, 37, 80, 81, 83, 219], "937": [81, 219], "clamp": 219, "907": [80, 83, 219], "mathjax": 219, "932": [80, 83, 94, 219], "931": 219, "927": 219, "test_bvectxt": 219, "913": [80, 81, 83, 219], "935": 219, "934": [80, 81, 83, 219], "todai": 219, "1143": [80, 219], "1246": [80, 83, 219], "1265": 219, "test_nlmeans_4d_3dsigma_and_thread": 219, "1251": 219, "1238": 219, "cryptic": 219, "1242": [83, 219], "intermittenli": 219, "1252": [83, 219], "revamp": 219, "1179": 219, "1253": 219, "1001": [83, 219], "1258": [80, 83, 219], "369": [80, 83, 84, 219], "1155": [80, 83, 219], "1070": [83, 219], "711": [80, 83, 219], "api_chang": 219, "321": [80, 84, 219], "994": 219, "608": [75, 83, 86, 219], "test_imwarp": 219, "591": [75, 80, 83, 86, 219], "seed_from_mask": [219, 228], "518": [75, 80, 83, 86, 219], "328": [84, 219], "incompat": [219, 226, 235, 236], "1210": [83, 219], "1209": [83, 219], "909": [80, 81, 83, 219], "inconsist": [219, 226, 231, 232], "1182": [80, 83, 219], "1211": 219, "1027": [80, 83, 219], "1218": [80, 83, 219], "1215": [83, 219], "tracking_quick_start": [219, 220, 226], "1213": [80, 83, 219], "simplify_warp_function_3d": [183, 219], "1191": [80, 83, 219], "1207": [83, 219], "1107": [80, 83, 219], "swallow": [219, 230], "rework": [219, 224, 226], "1188": [80, 83, 219], "1187": [83, 219], "1170": [80, 83, 219], "1086": 219, "1173": [80, 219], "1190": [83, 219], "test_peaksfrommodelparallel": 219, "1189": [83, 219], "np1": 219, "1139": [80, 219], "nearestneighbor_interpol": [183, 219], "1142": [83, 219], "streamlines_format": 219, "1097": [80, 83, 219], "1163": 219, "940": [80, 83, 219], "1040": [83, 219], "1118": [80, 83, 168, 219], "ivim_linear": 219, "1128": [83, 219], "1138": [83, 219], "1148": [83, 219], "740": [83, 219], "1045": 219, "1154": [83, 219], "1145": 219, "827": [80, 83, 219], "1051": [83, 219], "673": [75, 80, 83, 219], "859": [80, 83, 219], "983": [83, 219], "884": [80, 219], "984": 219, "1009": [80, 83, 219], "1036": [83, 219], "anaconda": [219, 220, 222, 231], "973": 219, "1121": [83, 219], "1083": [83, 219], "332": [83, 84, 219], "nipyp": [219, 234], "1116": [80, 83, 219], "bufferediobas": 219, "351": [75, 83, 84, 219], "912": [81, 83, 219], "1104": 219, "367": [83, 84, 219, 226], "1101": [83, 219], "1085": [80, 83, 219], "1081": [75, 80, 83, 219], "1031": [83, 219], "1071": [80, 83, 219], "1037": [80, 81, 83, 219], "1078": [80, 83, 219], "953": [80, 219], "883": [83, 219], "1011": [80, 83, 219], "1055": [83, 219], "1057": [83, 219], "workaround": [219, 225], "slowadcopdfmodel": 219, "1054": 219, "1043": [83, 219], "899": [81, 83, 219], "991": [80, 83, 219], "footer": 219, "1008": 219, "charm": 219, "1033": [80, 219], "1032": [83, 219], "1029": [80, 83, 219], "1014": [80, 83, 86, 219], "1013": [80, 83, 219], "make_fetch": 219, "1020": [80, 219], "1023": [80, 83, 219], "882": [80, 219], "885": [83, 219], "902": [81, 83, 219], "997": [80, 83, 219], "675": [80, 83, 219], "stabilis": 219, "1012": [83, 219], "996": 219, "998": 219, "1007": [80, 83, 219], "980": [83, 219], "1017": [83, 219], "877": [83, 219], "887": [80, 83, 219], "995": [80, 83, 219], "344": [80, 83, 84, 219], "970": [83, 219], "986": 219, "pip3": [219, 230], "990": 219, "988": 219, "975": 219, "517": [80, 219], "960": [75, 83, 219], "961": [83, 219], "880": [219, 220], "962": [83, 96, 219], "889": [81, 83, 219], "866": [81, 83, 219], "test_metr": 219, "867": [81, 219], "test_parzenhist": 219, "868": [83, 219], "869": 219, "870": [80, 83, 219], "test_transform": 219, "871": 219, "864": [80, 81, 83, 219], "862": [80, 83, 219], "test_crosscorr": 219, "873": [81, 83, 219], "831": [80, 83, 219], "weird": 219, "876": [80, 81, 83, 219], "968": [83, 219], "872": [80, 83, 219], "966": [83, 219], "920": [80, 83, 219], "950": [80, 83, 219], "949": [83, 219], "878": [80, 219], "939": 219, "945": 219, "indent": 219, "unus": [219, 226, 228, 229, 234, 236], "streamlinespe": [183, 219, 226], "924": [80, 83, 219], "879": [83, 219], "938": [80, 83, 219], "212": [83, 84, 104, 220, 225], "bennet": [220, 221], "fauber": [220, 221], "saber": 220, "sheybani": 220, "1367": [83, 220], "1361": [83, 220], "1316": 220, "1360": [54, 80, 83, 220], "1348": [80, 83, 220], "1357": [80, 220], "1332": [80, 83, 220], "1239": [80, 220], "1356": [83, 220], "1351": 220, "1353": 220, "epilogu": 220, "1262": [75, 80, 83, 220], "1352": [83, 220], "1314": [86, 220], "1345": [80, 83, 220], "1330": [80, 83, 220], "1315": [80, 83, 220], "gpl": [220, 226, 232], "1328": [80, 220], "1329": [83, 220], "1335": [80, 83, 220], "test_csdeconv": 220, "1319": [80, 83, 220], "1297": [83, 220], "eigh": 220, "1298": [80, 220], "textactor2d": 220, "1312": [80, 220], "1285": [80, 83, 220], "1307": [83, 220], "1310": [80, 220], "1308": [80, 220], "1304": 220, "1303": [80, 83, 220], "reciproc": [220, 239], "1289": [83, 220], "1288": 220, "1290": 220, "1279": 220, "1287": [80, 83, 220], "1286": [80, 83, 220], "1284": [80, 83, 220], "1278": [80, 83, 220], "viz_ui": 220, "1366": [80, 83, 220], "1146": [83, 220], "1084": 220, "1248": [80, 83, 220], "1359": [83, 220], "1324": 220, "1334": [80, 83, 220], "1344": [83, 220], "1346": [83, 220], "1333": [80, 83, 220], "clinicalgraph": 220, "1044": [80, 83, 220], "1247": 220, "1337": [83, 220], "coveral": 220, "baggi": 220, "1341": [80, 83, 220], "activeax": [220, 221], "1325": [80, 83, 220], "1323": [80, 83, 220], "1042": [80, 83, 220], "1317": [80, 83, 220], "1313": [81, 83, 220], "vtkcommoncor": 220, "1318": [83, 220], "func_mul": 220, "1167": 220, "1180": [83, 220], "375": [83, 84, 220], "directiion": 220, "ppc": [220, 226, 231], "804": [41, 80, 81, 220], "662": [75, 80, 83, 220], "1306": 220, "1309": [83, 220], "step_help": 220, "1293": [83, 220], "1292": 220, "570": [75, 83, 86, 220], "1169": 220, "645": [75, 80, 83, 86, 221, 222], "conor": 221, "corbin": 221, "jiri": [221, 222], "borovec": [221, 222, 230], "mendoza": 221, "karandeep": [221, 222], "kumar": 221, "ashutosh": 221, "pradeep": 221, "reddi": 221, "raamana": 221, "ricci": [221, 222, 229], "woo": [221, 222, 229], "aman": 221, "arya": 221, "215": [83, 84, 221], "1504": [80, 221], "test_whole_brain_slr": 221, "1503": [80, 83, 221], "1424": [80, 83, 221], "1502": 221, "1498": [83, 221], "1431": [83, 221], "1443": [83, 221], "1398": 221, "1447": 221, "1423": 221, "1493": [83, 221], "vtk8": 221, "1497": [83, 221], "1496": [80, 83, 221], "1495": [83, 221], "sfm_reconst": 221, "1494": [80, 83, 221], "1474": [83, 221], "1471": 221, "1457": 221, "1468": [83, 221], "1484": [80, 221], "punctuat": 221, "1475": 221, "_iter": 221, "1482": [80, 83, 221], "test_mapmri": 221, "1460": [83, 221], "diskslid": 221, "1452": [80, 83, 221], "1466": [83, 221], "logo": [221, 226], "1464": [83, 221], "banner": [221, 226], "1465": 221, "progit": 221, "1451": 221, "1379": [83, 221], "1445": [75, 83, 221], "1450": [80, 83, 221], "delimit": 221, "1425": [83, 221], "1446": [80, 83, 221], "hyperlink": [221, 223], "1437": [83, 221], "mdfmetric": 221, "qbx": [221, 236], "1428": [80, 83, 221], "1385": [83, 221], "textblock": 221, "1422": [80, 83, 221], "1434": [80, 221], "1430": [80, 221], "1421": [83, 221], "1416": [80, 83, 221], "1413": [80, 83, 221], "getargspec": 221, "1393": [83, 221], "1294": 221, "1419": [83, 221], "rcond": [221, 231], "1384": [75, 221], "1411": [83, 221], "eddy_rotated_bvec": 221, "1407": [25, 80, 83, 221], "1408": 221, "1406": 221, "assert_tru": 221, "assert_equ": [221, 224, 230], "1347": [83, 221], "1322": [75, 221], "1326": [80, 221], "1399": [80, 83, 221], "1391": [83, 221], "1331": [80, 83, 221], "1386": 221, "1165": [90, 221], "1300": 221, "ravel_multi_index": [221, 226], "1381": [80, 83, 221], "1375": [83, 221], "1342": [83, 221], "whatnot": 221, "1378": 221, "1377": [83, 86, 221], "1374": 221, "1368": 221, "affili": [221, 222], "1370": 221, "1369": [83, 221], "1418": [80, 83, 221, 235], "parallel_voxel_fit": [221, 222, 235], "1291": [83, 221], "644": [75, 86, 221], "1490": [83, 221], "1469": [80, 221], "1485": [83, 221], "1483": [83, 221], "1479": [83, 221], "1477": [80, 83, 221], "1448": [80, 83, 221], "1481": 221, "globalimmediatemoderenderingon": 221, "1454": [80, 83, 221], "1467": 221, "1488": [81, 83, 221], "1478": [83, 221], "1476": [83, 221], "1470": [83, 221], "1458": [83, 221], "1438": [83, 86, 221], "1473": 221, "1462": [83, 221], "1461": 221, "1463": 221, "1455": [80, 221], "pyautogui": 221, "monitor": [221, 237], "1456": [80, 83, 221], "1453": 221, "1339": [83, 221], "1441": [80, 83, 221], "1449": [54, 221], "1362": [80, 83, 221], "1395": [81, 83, 221], "1436": [83, 221], "1417": [83, 221], "1435": [83, 221], "1439": 221, "memview": 221, "struct": [221, 234], "1184": [83, 221], "1380": 221, "1429": [83, 221], "syntaxerror": 221, "xe2": [221, 225], "596": [31, 34, 75, 86, 221, 227], "1390": [80, 221], "coding_style_guidelin": 221, "1427": [83, 221], "1426": [80, 83, 221], "987": [80, 83, 133, 137, 221], "faq": [221, 224, 230], "1327": [80, 83, 221], "1181": [80, 221], "1150": [83, 221], "streamline_map": [183, 221], "1409": [83, 221], "1415": [83, 221], "1117": [83, 221], "1412": [83, 221], "791": [80, 83, 221], "1410": 221, "1403": [83, 221], "jet": 221, "1387": [83, 221], "1405": [80, 83, 221], "1402": [80, 221], "rint": 221, "1321": [80, 83, 221], "1161": [80, 221], "1394": [80, 221], "misc": [221, 222, 234], "1382": 221, "1350": [83, 221], "1392": 221, "chrome": 221, "1388": 221, "1340": [83, 221], "1383": [83, 221], "mmriflow": 221, "1299": [83, 221], "test_rmi": [221, 226], "1301": [83, 221], "1376": 221, "1343": [80, 83, 221], "1282": [83, 221], "filo": 222, "albai": 222, "parichit": [222, 223], "chandan": 222, "gangwar": 222, "enrico": 222, "cahal": 222, "hunt": 222, "194": [80, 83, 84, 222], "1684": [75, 80, 222], "1686": 222, "1685": [83, 222], "1663": [80, 83, 222], "1681": [80, 83, 222], "1680": [80, 222], "1683": [83, 222], "1667": 222, "1677": [83, 222], "msg": 222, "1678": [80, 83, 222], "1676": [80, 83, 222], "1283": [80, 83, 222], "1670": [80, 222], "1669": [83, 222], "1659": [83, 222], "1621": [37, 83, 222], "1657": [83, 222], "1660": [83, 222], "1658": [80, 83, 222], "honor": 222, "1281": [80, 83, 222], "1651": [83, 222], "1656": [80, 222], "neurostar": [222, 238], "1624": [83, 222], "1655": [83, 222], "1650": [80, 94, 222], "codecov": [222, 233, 236], "1649": [83, 222], "1556": [83, 222], "1645": [80, 83, 222], "1647": [83, 222], "1644": 222, "1643": [80, 83, 222], "787": [80, 83, 222], "starter": 222, "1642": 222, "1641": [83, 222], "evenly_distributed_sphere_642": 222, "1564": [75, 222], "listbox2d": 222, "1636": [83, 222], "1584": [83, 222], "1554": 222, "1528": [83, 222], "timer": [183, 222], "imread": 222, "1526": [83, 222], "1623": [83, 222], "1626": 222, "1619": [83, 222], "1592": [83, 222], "1559": [80, 83, 222], "checkbox": 222, "radiobutton": 222, "1583": [80, 81, 222], "1602": [83, 222], "1609": [83, 222], "1560": 222, "1593": [80, 222], "1597": [80, 83, 222], "1601": 222, "nosetest": [222, 236], "1515": 222, "1590": [83, 222], "1570": [83, 222], "1589": [80, 83, 222], "1580": [83, 222], "1533": [80, 222], "1523": 222, "1543": [80, 83, 222], "out_strategi": 222, "1547": [83, 222], "1561": [80, 83, 222], "1578": [83, 222], "1563": [80, 83, 222], "major_vers": 222, "1557": [80, 83, 222], "button2d": 222, "1555": [80, 83, 222], "1522": [80, 83, 222], "1355": 222, "listbox": 222, "1540": [83, 222], "1548": 222, "1542": 222, "1546": 222, "1545": [83, 222], "1492": [83, 222], "mistakenli": 222, "1536": [83, 222], "1537": [80, 222], "1530": [83, 222], "1529": 222, "1520": [80, 83, 222], "1524": [83, 222], "1521": [80, 222], "1518": [80, 83, 222], "1517": 222, "1516": [80, 83, 222], "1514": [80, 83, 222], "pep8speak": [222, 229], "1513": [26, 222], "1510": [80, 83, 222], "1508": [80, 83, 222], "appeas": 222, "1506": [25, 80, 83, 222], "1679": [41, 83, 222], "1220": [80, 83, 222], "746": [80, 83, 222], "1637": 222, "1673": [81, 222], "1338": [80, 83, 222], "1682": [80, 83, 222], "634": [75, 80, 222], "944": [80, 83, 222], "1099": [80, 83, 222], "1544": 222, "643": [48, 49, 80, 83, 222], "1674": [80, 83, 222], "1397": [83, 222], "1668": [80, 83, 222], "1662": [83, 222], "1296": [80, 222], "ana": 222, "mini": 222, "1653": [80, 83, 222], "1654": 222, "1414": [83, 94, 222], "1093": [80, 83, 222], "1611": [83, 222], "preload": 222, "1615": [80, 83, 222], "1631": [83, 222], "1638": [83, 222], "noddix": 222, "1618": 222, "filemenu2d": 222, "1569": [83, 222], "listboxitem2d": 222, "1532": [83, 222], "sierra": 222, "ananoda": 222, "1420": [80, 83, 222], "1396": 222, "1295": [83, 222], "1232": 222, "disappear": 222, "928": [80, 83, 222], "854": [83, 222], "759": [83, 222], "vtk6": [222, 225, 226], "voxsz": 222, "646": [75, 83, 222], "353": [80, 83, 84, 222], "1203": 222, "1156": [80, 83, 222], "642": [80, 86, 120, 122, 222], "1135": 222, "442": [84, 222], "558": [75, 81, 86, 222], "1236": 222, "1389": [83, 222], "1519": [80, 222], "1596": [83, 222], "gsoc": [222, 223], "noddix_pr": 222, "1576": [80, 83, 222], "1568": [80, 222], "1108": [83, 222], "1629": 222, "userwarn": [83, 101, 222, 228], "1591": [80, 83, 222], "1582": [83, 222], "1575": [83, 222], "1620": [80, 222], "1598": [83, 222], "1595": [80, 83, 222], "1588": [83, 222], "1608": [80, 222], "1610": [80, 222], "tortois": 222, "1607": [83, 222], "1586": [83, 222], "1585": [80, 222], "1594": [83, 222], "1577": [83, 222], "1571": [80, 83, 222], "1579": [80, 222], "1433": [83, 222], "mess": 222, "1541": [80, 83, 222], "1573": [83, 222], "test_ui_listbox_2d": 222, "1566": [80, 83, 222], "1572": [83, 222], "1567": [83, 222], "1551": [83, 222], "1549": [83, 222], "1562": 222, "1550": 222, "1527": 222, "1534": [83, 222], "1487": [83, 222], "check_scratch": 222, "1486": [80, 222], "1539": [80, 222], "1535": [80, 222], "1507": [83, 222], "1512": [80, 83, 222], "1511": 222, "exaampl": 222, "1509": 222, "361": [80, 83, 84, 223, 226], "cl\u00e9ment": 223, "zotti": 223, "katrin": 223, "leinweb": 223, "yijun": 223, "liu": [223, 233], "1755": [80, 83, 223], "1748": [80, 83, 223], "1714": 223, "1726": 223, "1753": [80, 83, 223], "1751": [80, 83, 223], "1743": [83, 223], "1749": [83, 223], "1739": [83, 223], "1695": [80, 83, 223], "1741": [83, 223], "1742": [83, 223], "1745": [80, 83, 223], "1746": [83, 223], "sponsor": 223, "1735": [83, 223], "1738": 223, "1740": [83, 223], "1730": [80, 83, 223], "1666": [83, 223], "1737": [83, 223], "1733": [80, 83, 223], "1732": [83, 223], "maiincrement": 223, "1716": 223, "1640": [80, 83, 223], "1652": 223, "1720": 223, "1719": [83, 223], "1715": [80, 83, 223], "bullet": 223, "1706": [80, 223], "liner": 223, "1705": [83, 86, 223], "random_integ": 223, "1704": 223, "1701": [83, 223], "1707": [83, 223], "pendingdeprec": 223, "1703": [83, 223], "blank": [223, 226], "1708": [80, 223], "1710": 223, "1702": 223, "1697": [80, 83, 223], "1696": 223, "1690": 223, "1693": [80, 83, 223], "1757": [80, 223], "sensor": 223, "acsept": 223, "deprecationwarn": 223, "usersranjianaconda3libsit": 223, "packagesipykernel_launch": 223, "imsav": 223, "imageio": 223, "imwrit": 223, "1616": 223, "1605": [80, 83, 223], "1661": [80, 83, 223], "1604": [83, 223, 234], "1734": [83, 223], "1565": [83, 223], "1729": 223, "n4": 223, "1280": [80, 83, 223], "1727": [83, 223], "1723": [83, 223], "1718": [223, 228], "1717": [80, 83, 223], "1664": [83, 223], "1633": [38, 83, 223], "1698": 223, "1691": [80, 83, 223], "1692": 223, "1632": 223, "mdesco": 224, "141": [80, 83, 84, 224], "sf2sh": 224, "dsi_deconv": 224, "133": [80, 83, 84, 224], "132": [83, 84, 224], "130": [80, 83, 84, 224, 229], "127": [80, 83, 84, 103, 106, 224], "rbf": [170, 224], "result_typ": 224, "getitem": [224, 236], "_squash": 224, "vec_val_vect": [183, 224], "109": [41, 44, 80, 83, 84, 180, 224], "einsum": 224, "110": [80, 83, 84, 103, 224], "xp": 224, "sty": 224, "multivoxel": 224, "remove_similar_vertic": [183, 224], "ip": 224, "yai": 224, "l2norm": 224, "suit": [224, 226], "e1381s6_edcor": 224, "optional_trait": 224, "brought": 224, "_filter": 224, "reduce_antipod": 224, "preview": 224, "_filter_peak": 224, "unique_vertic": [176, 224], "optionalimporterror": 224, "trait": 224, "gitwash": 224, "frontpag": 224, "longest_track_len": 224, "mayavi": 224, "83": [26, 33, 34, 37, 41, 54, 75, 80, 83, 84, 86, 180, 224], "refacotor": 224, "tb": 224, "hap": 224, "triangle_subdivid": 224, "badrequest": 224, "erik": 225, "279": [80, 84, 225], "257": [83, 84, 225], "274": [83, 84, 225], "275": [80, 83, 84, 225], "261": [43, 44, 80, 83, 84, 225], "273": [80, 81, 83, 84, 225], "autopep8": 225, "shmfit": 225, "260": [80, 83, 84, 225], "peaks_from_model_parallel": 225, "sdeconv": 225, "253": [80, 83, 84, 225, 226], "263": [83, 84, 225], "252": [80, 83, 84, 225], "243": [80, 83, 84, 225], "240": [83, 84, 225], "245": [80, 83, 84, 225], "230": [75, 80, 83, 84, 225], "229": [80, 83, 84, 225], "brainextract": 225, "226": [80, 83, 84, 225], "setinput": 225, "vtk5": 225, "setinputdata": 225, "223": [83, 84, 94, 225], "222": [80, 83, 84, 225], "mask_voxel_s": 225, "promote_dtyp": 225, "wi": 225, "211": [73, 80, 83, 84, 176, 225], "213": [80, 83, 84, 225], "207": [83, 84, 225], "205": [83, 84, 225], "173": [76, 83, 84, 101, 104, 225], "tensor_": 225, "201": [83, 84, 225], "testfail": 225, "189": [80, 83, 84, 225], "probabilisticodfweightedtrack": 225, "190": [80, 83, 84, 225], "182": [80, 84, 225], "soureforg": 225, "py3": 225, "supersed": 225, "174": [54, 62, 75, 78, 80, 84, 225], "172": [31, 75, 80, 84, 123, 129, 225], "stamp": 225, "166": [80, 83, 84, 225], "pyc": 225, "archiv": 225, "164": [80, 83, 84, 225, 230], "163": [80, 83, 84, 225, 230], "544": [75, 80, 86, 226], "propspe": [183, 226], "543": [75, 80, 83, 86, 226], "plot_2d": 226, "537": [80, 83, 226], "534": [75, 86, 226], "536": [75, 86, 226], "535": [80, 83, 86, 226], "527": [83, 86, 226], "npymath": 226, "528": [80, 86, 226], "530": [80, 86, 226], "ugli": 226, "msvc": 226, "529": [83, 226], "526": [80, 86, 226], "523": [75, 80, 83, 86, 226], "522": [75, 80, 83, 86, 226], "521": [75, 80, 226], "520": [75, 80, 83, 226], "519": [80, 86, 226], "christma": 226, "513": [31, 35, 75, 80, 226], "reinstat": 226, "508": [83, 226], "516": [75, 83, 226], "495": [75, 226], "509": [80, 83, 226], "460": [80, 84, 226], "499": [75, 83, 226], "501": [80, 83, 86, 226], "507": [80, 83, 226], "mergsort": 226, "494": [80, 81, 83, 226], "503": [75, 80, 83, 226], "471": [80, 83, 84, 226], "importlib": 226, "__import__": 226, "419": [28, 75, 83, 84, 226], "489": [83, 226], "484": [83, 226], "490": [80, 226], "341": [84, 226], "traco": 226, "redesign": 226, "483": [83, 86, 226], "485": 226, "482": [75, 80, 83, 86, 226], "479": [80, 226], "481": [80, 226], "476": [80, 83, 226], "478": [80, 83, 226], "477": [80, 116, 226], "474": [80, 83, 84, 226], "virtualenv": 226, "473": [80, 84, 96, 226], "469": [72, 75, 80, 84, 226], "463": [83, 84, 226], "466": [53, 84, 226], "465": [75, 80, 83, 84, 226], "433": [83, 84, 226], "458": [80, 83, 84, 226], "crosscorr": [183, 226], "npy_math": 226, "447": [80, 83, 84, 226], "439": [80, 83, 84, 226], "443": [80, 83, 84, 226], "456": [54, 80, 84, 226], "454": [80, 84, 92, 226], "checker": 226, "453": [83, 84, 226], "446": [84, 226], "445": [83, 84, 226], "pxi": 226, "var": [177, 226, 230, 235], "440": [84, 226], "431": [83, 84, 226], "408": [80, 83, 84, 226], "438": [84, 226, 241], "405": [83, 84, 226], "418": [47, 49, 80, 83, 84, 226], "437": [80, 83, 84, 226], "435": [83, 84, 226], "434": [80, 84, 226], "430": [84, 226], "427": [83, 84, 226], "422": [84, 226], "415": [83, 84, 226], "420": [84, 112, 116, 226], "413": [54, 80, 83, 84, 226], "memory_leak": 226, "test_strealin": 226, "417": [25, 28, 83, 84, 226], "409": [83, 84, 226], "pipe": 226, "396": [80, 84, 226], "407": [83, 84, 226], "omarocegueda": 226, "402": [80, 84, 226], "ae": 226, "test_peak_directions_thorough": 226, "401": [83, 84, 226], "skiptest": 226, "340": [83, 84, 226], "397": [80, 83, 84, 226], "393": [83, 84, 180, 226], "382": [80, 84, 226], "386": [80, 84, 226], "352": [80, 84, 226], "odf_sh_sharpen": 226, "374": [80, 84, 226], "bumpi": 226, "380": [84, 226], "378": [84, 226], "379": [80, 83, 84, 226], "339": [80, 83, 84, 226], "373": [83, 84, 226], "371": [83, 84, 226], "fopenmp": 226, "372": [80, 84, 226], "crossplatform": 226, "337": [80, 83, 84, 226], "370": [81, 84, 226], "tone": 226, "364": [84, 226], "368": [84, 226], "363": [41, 83, 84, 88, 226], "355": [80, 83, 84, 226], "357": [80, 83, 84, 226], "sent": 226, "356": [80, 84, 226], "349": [83, 84, 226], "348": [80, 83, 84, 226], "347": [83, 84, 226], "338": [80, 83, 84, 226], "334": [80, 83, 84, 90, 96, 226], "vec2vec": 226, "324": [83, 84, 226], "331": [80, 83, 84, 226], "326": [84, 226], "327": [80, 83, 84, 226], "319": [80, 83, 84, 226], "318": [83, 84, 226], "316": [83, 84, 103, 104, 226], "315": [80, 83, 84, 226], "305": [80, 83, 84, 226], "311": [80, 83, 84, 226], "309": [83, 84, 226], "pep": 226, "stuf": 226, "303": [80, 83, 84, 226], "304": [80, 83, 84, 226], "302": [80, 83, 84, 226], "298": [80, 83, 84, 126, 129, 226], "290": [80, 83, 84, 226], "540": [80, 83, 226], "542": [75, 80, 86, 226], "538": [75, 86, 226], "449": [83, 84, 226], "512": [75, 83, 226], "467": [80, 83, 84, 226], "464": [81, 84, 226], "wheezi": [226, 227], "argsort": 226, "mergesort": 226, "506": 226, "383": [83, 84, 226], "350": [80, 83, 84, 226], "424": [84, 226], "493": 226, "dpy_math": 226, "hyp2f1": 226, "502": [25, 83, 226], "492": [75, 83, 226], "410": [80, 83, 84, 226], "487": [86, 226], "428": [84, 226], "travis": 226, "475": [80, 84, 226], "tmp_file": 226, "470": [83, 84, 226], "461": [83, 84, 226], "432": [83, 84, 226], "450": [80, 84, 86, 226], "matrix44": 226, "452": [80, 83, 84, 226], "398": [83, 84, 226], "444": [84, 226], "mkl": 226, "nlmeans_3d": [183, 226], "412": [80, 83, 84, 180, 226], "pow": 226, "391": [83, 84, 226], "16gb": 226, "wasn": 226, "385": [83, 84, 226], "376": [80, 84, 226], "demianw": 226, "358": [75, 84, 226], "343": [83, 84, 226], "277": [80, 84, 226], "336": [80, 83, 84, 226], "235": [80, 83, 84, 226, 227], "329": [31, 80, 83, 84, 100, 104, 108, 116, 129, 130, 226], "330": [84, 226], "312": [84, 226], "quicki": 226, "307": [80, 83, 84, 226], "241": [80, 83, 84, 226], "248": [80, 83, 84, 226], "peaksfrommodel": 226, "282": [80, 83, 84, 226], "incomprehens": 226, "228": [80, 83, 84, 226], "dipy_fit_tensor": 226, "brittl": 226, "171": [80, 83, 84, 226], "runtimewarn": [41, 76, 81, 83, 88, 90, 226, 230], "create_half_unit_spher": 226, "306": [83, 84, 226], "310": [83, 84, 226], "575": [75, 80, 83, 86, 227], "595": [75, 80, 83, 86, 227], "599": [75, 83, 86, 227], "dpy_rint": 227, "test_center_of_mass": 227, "601": [75, 83, 86, 227], "598": [75, 80, 86, 227], "undetect": 227, "593": [75, 80, 83, 86, 227], "588": [75, 83, 86, 227], "565": [75, 79, 80, 83, 86, 227], "589": [75, 80, 83, 86, 227], "typograph": 227, "584": [75, 83, 86, 227], "568": [75, 83, 86, 227], "quickbundles2": 227, "559": [75, 83, 86, 227], "586": [75, 83, 86, 227], "574": [75, 83, 86, 227], "581": [75, 80, 83, 86, 227], "580": [75, 80, 83, 86, 227], "579": [75, 80, 86, 227], "577": [75, 80, 83, 86, 227], "553": [75, 80, 86, 91, 227], "552": [75, 83, 227], "571": [75, 80, 83, 86, 227], "557": [75, 80, 83, 86, 227], "563": [75, 80, 83, 86, 227], "564": [75, 86, 227], "561": [75, 80, 83, 86, 227], "francopestilli": 227, "556": [75, 86, 227], "550": [75, 83, 86, 227], "551": [80, 83, 86, 227], "549": [75, 83, 86, 227], "602": [75, 80, 83, 86, 227], "test_feature_center_of_mass": 227, "597": [75, 83, 86, 227], "585": [75, 80, 83, 86, 227], "amico": 227, "567": [75, 80, 83, 86, 227], "414": [80, 83, 84, 227], "560": [75, 86, 227], "three_shells_voxel": 227, "555": [75, 80, 83, 86, 227], "chatroom": 227, "354": [80, 84, 227], "532": [75, 227], "sparc": 227, "antoin": 228, "theberg": 228, "clint": 228, "1946": [80, 83, 228], "1947": [54, 86, 228], "1942": [83, 228], "1917": 228, "1940": [80, 83, 228], "1909": [80, 228], "1931": 228, "1944": [80, 83, 228], "1939": 228, "1943": 228, "1941": 228, "1926": [80, 83, 228], "1935": 228, "1903": [83, 228], "endian": 228, "s390x": 228, "1892": [86, 228], "1804": [80, 83, 228], "1937": 228, "1928": [80, 83, 228], "1925": [75, 228], "1927": 228, "1923": 228, "1894": 228, "1812": [83, 228], "stateful": 228, "1922": [80, 83, 228], "1885": [80, 83, 94, 228], "1913": 228, "1915": 228, "1630": [83, 86, 228], "1896": [80, 228], "1912": [80, 83, 228], "1916": [80, 83, 228], "1918": [83, 228], "1881": [80, 83, 228], "python_requir": 228, "1914": [83, 228], "1907": [83, 228], "1908": [83, 228], "1887": [80, 83, 228], "1905": [83, 228], "1849": [80, 228], "1902": [83, 228], "1904": 228, "1771": [80, 83, 228], "1899": [83, 228], "1898": [83, 228], "1897": [83, 228], "1893": [80, 83, 228], "1891": [80, 83, 228], "test_refine_rb": 228, "test_bundl": 228, "1888": 228, "1879": [83, 228], "1884": 228, "1875": 228, "1882": 228, "1880": 228, "1878": [25, 228], "numpy_less_0": 228, "1877": [80, 83, 228], "scipy_less_0": 228, "1876": [80, 83, 228], "1874": [80, 83, 228], "oversight": 228, "1858": [80, 81, 83, 228], "1843": 228, "1866": [80, 83, 228], "1850": [83, 228], "1855": 228, "statsmodel": 228, "1835": [80, 228], "1836": [83, 228], "1792": 228, "1851": [80, 228], "1842": [54, 83, 228], "tput": 228, "1830": [83, 228], "1821": [83, 228], "1816": [83, 228], "1818": [83, 228], "1827": 228, "1824": [83, 228], "1819": [83, 228], "diffeormorph": 228, "1823": [80, 228], "1814": [83, 228], "1815": 228, "1813": 228, "1772": [83, 228], "1810": [83, 228], "1806": [83, 228], "1789": [83, 228], "1770": [83, 86, 228], "1796": [83, 228], "1795": [80, 83, 228], "1768": [81, 83, 228], "1788": 228, "1769": [80, 83, 228], "1767": [80, 228], "1759": 228, "1230": 228, "1798": [80, 83, 228], "1817": [83, 228], "1774": [83, 228], "1587": [80, 228], "1890": 228, "1933": [83, 228], "985": [80, 83, 228], "1558": [83, 86, 228], "389": [83, 84, 228], "peaks_direct": 228, "590": [75, 83, 86, 228], "1722": 228, "1832": [83, 228], "728": [80, 228], "1920": [83, 228], "bedpostx": 228, "1779": 228, "1906": 228, "1901": [83, 228], "1747": 228, "1839": 228, "583": [75, 83, 86, 228], "1694": 228, "test_streamlin": 228, "1724": [228, 230], "844": 228, "1752": 228, "1856": [80, 83, 228], "1807": [80, 228], "1889": [80, 83, 228], "1713": [83, 228], "668": [75, 83, 86, 228], "592": [75, 86, 228], "shouldn": [228, 234], "nodirect": 228, "1811": 228, "1831": [86, 228], "1857": 228, "1863": 228, "1781": 228, "1869": [83, 228], "1844": [80, 83, 228], "1865": [75, 228], "1860": [80, 83, 228], "1168": [80, 83, 228], "1854": [80, 83, 228], "1764": [83, 228], "1731": [83, 228], "1845": 228, "1829": 228, "reco": 228, "1606": 228, "1837": 228, "1786": 228, "1828": [80, 83, 228], "infeas": 228, "1833": [80, 83, 228], "1834": [83, 228], "1721": [83, 228], "b0slice": 228, "implicit": 228, "1499": [80, 83, 86, 228], "dii": 228, "1822": [83, 228], "1825": 228, "1048": [83, 228], "1797": [83, 228], "1802": [75, 80, 83, 228], "1787": [80, 83, 228], "1763": [80, 228], "1756": [83, 228], "1761": [80, 228], "795": [80, 228], "620": [75, 80, 83, 86, 228], "436": [83, 84, 228], "1758": [83, 228], "1808": [83, 228], "1794": 228, "dettrackpamflow": 228, "1801": 228, "1803": [83, 228], "1809": 228, "1799": [83, 228], "nifiti": 228, "1712": [80, 228], "initial_direct": [173, 176, 180, 183, 228], "3075": [83, 228], "1783": [80, 83, 228], "trilinear_interpolate4d": [183, 228], "1784": 228, "1790": 228, "operand": 228, "1782": 228, "1320": 228, "1245": 228, "1240": [41, 83, 228], "1237": [80, 83, 228], "flesh": 228, "1192": [83, 86, 228], "1096": [80, 228], "832": [80, 81, 228], "578": [75, 83, 86, 228], "behnel": 228, "1780": [83, 228], "1126": [83, 228], "1603": [80, 83, 228], "392": [80, 84, 180, 229, 231], "2030": 229, "2029": [83, 229], "proxi": 229, "dead": [229, 234], "1862": [80, 83, 229], "1952": [80, 81, 83, 229], "1998": [83, 229], "1975": [83, 229], "1711": [83, 229], "1989": [26, 80, 83, 229], "1987": [83, 229], "1986": [83, 229], "1977": [83, 229], "1983": 229, "1981": [83, 229], "1980": [80, 83, 229], "1979": [83, 229], "1956": [80, 83, 229], "stateful_tractogram_post_1": 229, "0_fix": 229, "1971": [80, 83, 229], "1970": 229, "1929": 229, "reloc": 229, "sim_respons": 229, "1966": [80, 229], "1967": [80, 83, 229], "1961": [83, 229], "1963": 229, "1948": [80, 83, 229], "1951": [83, 229], "1958": [80, 83, 229], "1197": [83, 229], "1959": 229, "1777": [83, 229], "read_": 229, "1634": 229, "1949": [83, 229], "1870": [80, 83, 229], "1953": 229, "184": [80, 83, 84, 229], "1976": [80, 229], "785": [80, 229], "1859": 229, "1950": 229, "statefulltractogram": 229, "1930": [80, 83, 229], "ioerror": 229, "1968": 229, "1960": [80, 83, 229], "1867": [83, 229], "circleci": 229, "1954": [80, 83, 229], "1964": [80, 83, 229], "1840": [83, 229], "1841": 229, "1955": 229, "intersphinx": 229, "inventori": 229, "1401": [83, 229], "1442": 229, "1791": [83, 229], "aryansh": 230, "omrai": 230, "charl": [230, 231, 236], "poirier": [230, 231, 236], "fabio": 230, "neri": 230, "jirka": 230, "leevi": [230, 234], "kerkela": [230, 234], "leon": [230, 234], "wening": [230, 234], "martijn": 230, "nagtega": 230, "sarath": 230, "chandra": 230, "shrishti": 230, "hore": 230, "shubham": 230, "shaswat": 230, "taki": 230, "panagopoulo": 230, "tashrif": 230, "billah": 230, "kunal": 230, "mehta": 230, "svabhishek29": 230, "areesha": [230, 231, 232], "tariq": [230, 231, 232], "karan": [230, 231, 232], "2191": [83, 230], "2212": [80, 83, 230], "2207": 230, "shader": 230, "2208": [83, 230], "2157": [80, 230], "uniniti": 230, "2205": 230, "2204": [83, 230], "2183": [83, 230], "_streamlines_in_mask": 230, "2203": [80, 230], "2142": [80, 81, 83, 230], "2195": [80, 83, 230], "2161": [83, 230], "2163": [80, 83, 230], "2174": 230, "2168": [83, 230], "2178": [80, 83, 230], "2193": [83, 230], "buan_flow": 230, "2196": 230, "2188": 230, "2176": [83, 230], "2173": [83, 230], "ssl": 230, "certif": 230, "2171": [83, 230], "2154": [83, 230], "2162": [83, 230], "2156": [83, 230], "2160": [80, 83, 230], "assert_": 230, "2158": [83, 230], "2155": 230, "2147": [80, 83, 230], "2148": [83, 230], "2150": 230, "2149": [80, 83, 230], "2145": [83, 230], "2152": [83, 230], "2146": 230, "2134": [83, 230], "2135": [83, 230], "2141": [83, 230], "2136": [80, 83, 230], "2140": [80, 83, 230], "rag": 230, "2139": 230, "2108": [75, 83, 230], "2121": [86, 230], "initialis": 230, "2129": [80, 230], "2133": [80, 83, 230], "2125": [41, 230], "2124": [80, 83, 230], "2033": [80, 83, 230], "2111": 230, "2086": [83, 230], "2091": [83, 230], "2057": [80, 230], "2103": [80, 230], "grammar": [230, 235], "2088": [83, 230], "2120": [83, 230], "2113": [80, 230], "cigar_tensor": 230, "2116": [80, 83, 230], "2100": [80, 83, 230], "grammat": 230, "2101": 230, "2095": 230, "2099": 230, "2102": [83, 230], "2055": [83, 230], "2097": [80, 230], "sform": 230, "get_best_affin": 230, "2104": [83, 230], "2065": 230, "2090": [83, 230], "2067": [83, 230], "2093": 230, "2077": [80, 83, 230], "2071": [80, 83, 230], "2084": [83, 230], "kunakl07": 230, "2085": [83, 230], "2068": [83, 230], "2069": [80, 83, 230], "2063": [83, 230], "2045": [83, 230], "2060": [83, 230], "2058": [83, 230], "2059": [80, 230], "2056": [83, 230], "2053": [80, 83, 230], "_gibbs_removal_2d": 230, "2043": [80, 83, 230], "2047": [80, 83, 230], "2044": 230, "2041": [80, 83, 230], "2039": [83, 230], "2042": 230, "2040": 230, "2038": 230, "2037": [80, 83, 230], "fw": 230, "2028": [80, 230], "2035": [80, 83, 230], "2114": [83, 230], "1793": [83, 230], "wf": 230, "2061": 230, "colab": 230, "kaggl": 230, "2070": 230, "2107": [80, 230], "2153": 230, "2138": [80, 83, 230], "2194": 230, "2177": [83, 230], "maco": 230, "2182": [83, 230], "tp_print": 230, "2199": 230, "2175": [80, 83, 230], "2190": [94, 230, 231], "2051": [80, 83, 230], "2172": [83, 230], "2169": [83, 230], "2170": [83, 230], "2144": [80, 230], "2159": 230, "2151": [83, 230], "2130": [83, 230], "2131": [80, 230], "elementwis": 230, "2128": [83, 230], "1765": [80, 83, 230], "2122": [80, 83, 230], "2127": [80, 230], "2126": [83, 230], "2096": [83, 230], "2118": [83, 94, 230], "1861": 230, "2024": [83, 230], "winter": 230, "2094": [83, 230], "friendli": 230, "regn": 230, "2078": [83, 230], "1305": [80, 83, 230], "polici": 230, "2089": [83, 230], "2072": [83, 230], "2073": [80, 83, 230], "old_highlight": 230, "2074": [83, 230], "2075": [80, 83, 230], "maintainer_workflow": 230, "2076": [83, 230], "2079": [83, 230], "2080": [83, 230], "2081": [83, 230], "2082": 230, "2083": [83, 230], "2066": [80, 83, 230], "1363": [83, 230], "1871": 230, "2052": [83, 230], "1785": [80, 83, 230], "gifti": 230, "1728": [83, 230], "1699": [80, 83, 230], "1671": [83, 230], "1552": [80, 230], "1373": [83, 230], "troubleshoot": 230, "1152": [83, 230], "1047": 230, "2049": [80, 83, 230], "2048": [75, 81, 230], "218": [80, 83, 84, 230], "313": [80, 83, 84, 230], "1848": [83, 230], "hub": 230, "2034": 230, "backlog": 230, "1864": [80, 83, 230], "basil": 231, "pinsard": 231, "jaewon": 231, "siddharth": 231, "kapoor": 231, "2181": [80, 83, 231], "2223": [80, 231], "2238": [80, 83, 231], "2265": [83, 231], "2206": [80, 83, 231], "2266": 231, "2255": [83, 231], "2271": [83, 231], "2263": [83, 231], "part2": 231, "2259": [83, 231], "2264": 231, "2268": 231, "2267": [83, 231], "2262": 231, "2244": [83, 231], "2119": [80, 231], "2260": 231, "2258": 231, "2257": [83, 231], "2261": [83, 231], "1919": [80, 231], "2256": 231, "2253": [83, 231], "2240": [80, 83, 231], "2198": [83, 231], "btensor": 231, "2025": 231, "2197": [83, 231], "2227": [80, 83, 231], "2250": 231, "2252": 231, "2248": [80, 86, 231], "2249": [83, 231], "2247": [83, 231], "2246": 231, "backtick": 231, "2239": [81, 83, 231], "2242": [83, 231], "2241": [83, 86, 231], "2235": [83, 231], "2234": [80, 83, 231], "2231": [83, 231], "2221": [80, 83, 231], "robustifi": 231, "solvererror": 231, "2226": [83, 94, 231], "2225": [80, 231], "rackspac": 231, "nightli": [231, 234], "2224": [83, 231], "xfail": 231, "assert_rais": 231, "2220": [83, 231], "2218": [80, 83, 231], "2217": [83, 86, 231], "lstsq": 231, "2211": 231, "2272": [80, 231], "2180": [83, 231], "2054": [83, 231], "unr": 231, "2046": [83, 231], "2132": [83, 231], "1266": [83, 231], "test_mapmri_isotropic_static_scale_factor": 231, "1264": [80, 83, 231], "2117": 231, "2202": [83, 231], "2115": 231, "1744": [75, 83, 231], "1489": [80, 83, 231], "2192": [80, 231], "2201": 231, "2232": [80, 231], "somesuch": 231, "2219": [83, 231], "2236": [75, 80, 83, 231], "2254": [80, 231], "2251": [80, 83, 231], "2243": [83, 231], "2237": 231, "2245": [83, 231], "verbatim": 231, "2230": [83, 231], "2228": [83, 231], "2109": 231, "spring": [231, 234], "2214": [80, 83, 231], "2216": [80, 83, 231], "test_multi_shell_fiber_respons": 231, "2185": [80, 83, 86, 231], "2215": [83, 231], "1762": [83, 231], "1354": [83, 231], "325": [80, 83, 84, 231], "2318": [83, 232], "p2": [232, 233], "2317": [80, 94, 232], "2315": [80, 83, 232], "weekli": 232, "2307": [83, 232], "2278": [80, 232], "2275": [80, 83, 94, 232], "2277": [83, 232], "2289": [80, 83, 232], "2292": 232, "2296": [83, 232], "2294": 232, "2291": [80, 83, 94, 232], "2295": [80, 83, 232], "2280": 232, "2287": [83, 94, 232], "doctstr": 232, "2286": 232, "2284": 232, "doctsr": 232, "2283": [80, 83, 232], "2282": 232, "2210": [83, 232], "arclength": 232, "722": [83, 232], "2328": [80, 83, 232], "2323": 232, "2229": [80, 83, 232], "2098": [83, 232], "2303": 232, "2279": [83, 94, 232], "felix": 233, "kruper": 233, "2367": [80, 233], "2387": 233, "2386": [80, 83, 233], "2375": 233, "2382": [80, 83, 233], "2385": 233, "2384": [80, 83, 233], "2351": [83, 94, 233], "2381": 233, "2371": 233, "2352": [83, 233], "2373": 233, "2372": [80, 83, 233], "2348": [83, 233], "2363": 233, "2365": 233, "2349": [80, 83, 233], "2350": 233, "size_t": 233, "2346": [83, 233], "mnt": [233, 234], "wherev": [233, 234], "2347": [80, 94, 233], "2340": [83, 233], "reactiv": 233, "2344": [83, 233], "2339": [80, 233], "1648": 233, "2337": 233, "2333": [54, 233], "2335": 233, "2332": [81, 83, 233], "1973": [83, 233], "2377": 233, "2380": [80, 83, 233], "2300": [83, 233], "2320": [80, 83, 94, 233], "2341": [83, 233], "2353": [83, 233], "1311": [83, 233], "1302": 233, "366": [84, 233], "1672": [80, 83, 233], "fault": 233, "1444": [80, 83, 233], "562": [75, 86, 233], "2324": [80, 83, 233], "vr": 233, "2345": [80, 233], "423": [80, 83, 84, 233], "837": [80, 83, 233], "636": [75, 80, 83, 86, 233], "861": [83, 233], "1895": [83, 233], "545": [83, 86, 233], "1847": [80, 233], "1872": [80, 83, 233], "1646": 233, "1635": [83, 233], "2309": [83, 233], "2334": [83, 233], "aphys": 233, "1873": 233, "2343": [94, 233], "2311": [83, 233], "2274": 233, "1675": [83, 233], "2316": [83, 233], "translationtransform2d": [183, 233], "2331": 233, "573": [65, 66, 75, 80, 83, 86, 234], "dan": 234, "franci": 234, "jerom": 234, "giulia": 234, "bert\u00f2": 234, "joshua": 234, "kenji": 234, "marshal": 234, "luca": 234, "costa": 234, "sam": [234, 235, 236], "covenei": [234, 235, 236], "2561": [83, 234], "2520": [83, 234], "2558": [80, 234], "errant": 234, "2557": [83, 234], "2556": 234, "2554": 234, "2555": [83, 234], "2539": 234, "embarrassingli": 234, "2545": [80, 83, 234], "2548": [33, 83, 234], "concurr": 234, "gha": 234, "2549": [80, 83, 234], "2550": [83, 234], "2551": [83, 234], "2536": [75, 80, 83, 234], "2533": 234, "underlin": 234, "2342": [80, 83, 234], "2512": [83, 234], "2526": [83, 234], "2534": [83, 234], "2532": [83, 234], "2529": [83, 234], "2528": [83, 234], "2527": 234, "2493": [83, 234], "2522": [80, 83, 234], "2521": 234, "2420": 234, "2482": [80, 83, 234], "2423": [81, 83, 234], "2518": [83, 234], "2515": 234, "2513": [81, 234], "2506": [83, 234], "2510": [80, 83, 234], "reboot": 234, "2487": [83, 234], "2442": 234, "2470": 234, "2485": [83, 234], "2481": [86, 234], "2480": [80, 83, 234], "2478": [80, 83, 234], "2479": [26, 234], "2475": [83, 234], "2476": [80, 83, 234], "2472": 234, "2471": [80, 83, 234], "2468": [80, 83, 234], "2467": [83, 234], "2466": [83, 234], "2453": [83, 234], "2413": [80, 83, 234], "2447": [83, 234], "bitwis": 234, "2444": [80, 83, 234], "2434": [83, 234], "2435": 234, "2436": [83, 234], "2438": [83, 234], "misplac": 234, "2374": [80, 83, 234], "2390": [83, 234], "2417": [80, 83, 234], "2419": [80, 83, 234], "2406": [83, 234], "2411": [83, 234], "c_compress_streamlin": 234, "2416": 234, "2415": [80, 83, 234], "2410": [80, 234], "2409": [83, 234], "2405": [80, 83, 234], "2407": [83, 234], "2392": [83, 234], "2389": 234, "bundles_distances_mdf": [183, 234], "2368": [83, 234], "_local_track": 234, "generate_streamlin": [173, 183, 234], "2123": 234, "2489": [83, 234], "2525": [80, 234], "2509": 234, "2543": [83, 234], "2546": [83, 234], "2542": [83, 234], "2477": 234, "2541": [83, 234], "2507": [80, 83, 234], "2422": 234, "1969": [83, 234], "2456": [83, 234], "2524": [83, 234], "2449": [83, 234], "nonsens": 234, "2179": [83, 86, 234], "2492": [83, 234], "reusabl": 234, "2497": 234, "2495": [83, 234], "2305": [83, 234], "2499": [83, 234], "2488": [83, 234], "footprint": 234, "2504": [83, 234], "fwdwi": 234, "2502": [83, 234], "2490": [83, 234], "2402": [83, 234], "dipy_to_nipype_interfac": 234, "2486": [80, 234], "2484": [80, 83, 234], "2483": 234, "2463": [80, 83, 234], "2460": [75, 83, 234], "2429": [83, 234], "2461": 234, "2464": [83, 234], "homepag": 234, "2457": 234, "2454": [83, 234], "2446": 234, "bitwise_or": 234, "2443": [54, 83, 234], "2441": [83, 234], "2430": [80, 234], "2431": [83, 234], "2432": [83, 234], "2314": [75, 83, 234], "1805": 234, "2418": 234, "365": [83, 84, 234], "2404": [83, 234], "2209": [80, 234], "_pytest": 234, "pathlib": 234, "importpathmismatcherror": 234, "1934": [80, 83, 234], "2312": [83, 234], "2383": 234, "dcperror": 234, "2391": [75, 234], "2393": 234, "probtrackx2": 234, "fmrib": 234, "toolbox": 234, "2310": [80, 83, 234], "deneb": 235, "jacob": 235, "malinda": 235, "dilhara": 235, "2710": [83, 235], "2711": [83, 235], "2702": [80, 83, 235], "2704": [83, 235], "2701": [83, 235], "progbar": 235, "2700": 235, "2694": 235, "2697": [83, 235], "2692": [83, 235], "2693": [80, 83, 235], "2687": [83, 235], "2690": [80, 83, 235], "2688": [83, 235], "2683": [83, 235], "2668": [83, 235], "2674": [83, 235], "2670": [83, 86, 235], "2672": [80, 83, 235], "2669": 235, "inaccur": 235, "2664": 235, "2553": [83, 235], "2369": 235, "diffeormorphicmap": 235, "2631": [83, 235], "2630": [83, 235], "2629": [83, 235], "2618": [83, 235], "multi_dot": 235, "2606": 235, "2531": 235, "2589": [37, 83, 235], "intemporarydirectori": 235, "tmpfile": 235, "2577": 235, "2595": [83, 235], "2591": [83, 235], "mutabl": 235, "2592": [83, 235], "2579": [83, 235], "2584": 235, "2566": 235, "2581": [83, 235], "2580": 235, "2576": [80, 83, 235], "2568": 235, "2709": [83, 235], "2708": 235, "2699": [83, 235], "noreg": 235, "redux": 235, "2696": 235, "port": [172, 235], "pyafq": 235, "2679": [83, 235], "2676": [83, 235], "2673": 235, "2667": [83, 235], "2662": 235, "cmd_line": 235, "2658": [80, 235], "chanc": 235, "arm64": 235, "2659": [83, 235], "2649": [83, 235], "2424": 235, "2327": 235, "2313": [80, 83, 235], "wholebrain": 235, "2616": [83, 235], "2627": [83, 235], "tvis_hdr": 235, "nii_aff": 235, "2634": [80, 235], "2559": [83, 235], "2564": 235, "2572": [80, 83, 235], "2617": 235, "2602": 235, "dear": 235, "expert": 235, "2603": [83, 235], "dti_peak": 235, "2587": [83, 235], "safeti": 235, "concern": 235, "relianc": 235, "tmpdir": 235, "2450": 235, "2594": 235, "2573": 235, "2567": [80, 83, 235], "2565": [83, 235], "dogu": 236, "baran": 236, "jong": 236, "sung": 236, "martino": 236, "pilia": 236, "mitesh": 236, "gulecha": 236, "rahul": 236, "ubal": 236, "shilpi": 236, "karp2601": 236, "ujjwal": 236, "shekhar": 236, "2765": [80, 83, 236], "2788": [83, 236], "2768": 236, "2749": [83, 236], "2744": [75, 236], "2785": 236, "2540": [83, 236], "2609": [38, 236], "2596": [80, 236], "2740": [83, 236], "2773": [81, 83, 236], "2783": 236, "test_roi_imag": 236, "2782": [80, 83, 236], "mtn": 236, "2780": [83, 236], "pmfgendirectiongett": [183, 236], "2778": [83, 236], "2767": [80, 83, 236], "fast_numpi": 236, "2626": [83, 236], "2763": [83, 236], "2751": [83, 236], "2762": [80, 236], "2753": [83, 236], "2722": [83, 236], "2741": [83, 236], "2739": [83, 236], "codespel": 236, "2590": [80, 83, 236], "2733": 236, "2648": 236, "2723": [83, 236], "trx": 236, "2727": 236, "extras_requir": 236, "2725": [80, 83, 236], "2716": 236, "2717": [80, 83, 236], "2628": [83, 236], "2713": [80, 83, 236], "2625": [83, 236], "2537": 236, "1778": [80, 83, 236], "1990": 236, "1073": [80, 236], "2530": [83, 236], "2756": 236, "2754": 236, "2775": 236, "2770": [80, 236], "2750": [80, 236], "2745": [83, 236], "2742": [80, 83, 236], "2729": 236, "attributeerror": 236, "2726": [83, 236], "2707": [83, 236], "fixdenois": 236, "2575": 236, "2414": 236, "2599": [83, 236], "broader": 238, "respond": 238, "privat": [239, 240], "req": [239, 240], "g_x": [239, 240], "g_y": [239, 240], "g_z": [239, 240], "supposedli": [239, 240], "envelop": 239, "int_0": 239, "matiello": 239, "onset": 239, "g_i": 239, "g_j": 239, "direcrt": 239, "trse": [239, 240], "ramp": [239, 240], "2b_": [239, 240], "_2": [239, 240], "_3": [239, 240], "dft": [239, 240], "callaghan": 239, "eccl": 239, "xia": 239, "narrow": [239, 241], "mysteri": 239, "loos": [180, 239], "exposit": 240, "clearer": 240, "frank": 241, "calaghan": 241, "transit": 241, "orthonorm": 243, "p_l": 243, "legendr": 243, "overlin": [176, 243], "a_l": 243, "m_l": 243, "formal": 243, "leq": 243, "Their": 243, "foral": 243, "omiss": 243, "motiv": 243, "jorg": 244, "stolfi": 244, "atan2": 244, "cart2sph": 244, "__config__": [24, 183], "sphx_glr_examples_built_reconstruction_histology_resdnn": [45, 69, 96], "examples_built_python": 45, "examples_built_jupyt": 45, "opm_get_num_proc": [168, 172, 180], "streamlines_a": 168, "streamlines_b": 168, "grad_mov": 168, "avants2008": 168, "avants08": 168, "grad_stat": 168, "pointwis": [168, 177], "sq": 168, "ocegueda2016": 168, "gradient_mov": 168, "sigma_sq_x": 168, "arce14": 168, "sigma_i": 168, "sigma_x": 168, "demons_step": 168, "santana": 168, "campo": 168, "delgado": 168, "viguera": 168, "multimod": 168, "168140": 168, "suppl": 168, "s61": 168, "040": 168, "num_label": 168, "undefin": [168, 180], "secial": 168, "ti": 168, "_joint_pdf_gradient_dense_2d": 168, "_joint_pdf_gradient_dense_3d": 168, "bin_index": [168, 183], "xnorm": 168, "bin_normalize_mov": [168, 183], "mmin": 168, "mmax": 168, "bin_normalize_stat": [168, 183], "smin": 168, "smax": 168, "smask": 168, "mmask": 168, "ones_lik": 168, "update_gradient_dens": [168, 183], "grid2world": 168, "mgradient": 168, "joint_grad": 168, "update_gradient_spars": [168, 183], "sval": 168, "mval": 168, "sample_point": 168, "sampled_point": 168, "update_pdfs_dens": [168, 183], "smargin": 168, "mmargin": 168, "update_pdfs_spars": [168, 183], "joint_gradi": 168, "mi_gradi": 168, "total_voxel": 168, "lexicograph": 168, "perturb": 168, "increasingli": 168, "total_pixel": 168, "isampl": 168, "greedi": 168, "sigmasq_field": 168, "max_displac": 168, "mx": 168, "2x2": 168, "is_singular": 168, "_jacobian": 168, "_get_identity_paramet": 168, "_param_to_matrix": 168, "get_dim": [168, 183], "get_identity_paramet": [168, 183], "get_number_of_paramet": [168, 183], "param_to_matrix": [168, 183], "premult_index": 168, "premult_disp": 168, "sinv": 168, "cancel": 168, "standard_devi": 168, "iff": 168, "ruchala": 168, "olivera": 168, "2816107": 168, "nslice": 168, "from_shap": 168, "from_grid2world": 168, "to_shap": 168, "to_grid2world": 168, "int_field": 168, "ceil": [168, 183], "img_world2grid": 168, "img_spac": 168, "d_world2grid": 168, "affine_idx_in": 168, "affine_idx_out": 168, "affine_disp": 168, "rinv": 168, "cinv": 168, "pinv": 168, "tinv": 168, "ref_shap": 168, "bilinear": [168, 170], "necessarili": 168, "bi": 168, "in2world": 168, "world2out": 168, "field_world2grid": 168, "dipycor": 170, "bench": [170, 176, 177, 180], "svv": [170, 176, 177, 180], "ini": [170, 176, 177, 180], "duration_in_second": [170, 183], "init_hemispher": 170, "num_iter": 170, "sphere_origin": 170, "sphere_target": 170, "multiquadr": 170, "_interpolate_scalar_2d": 170, "map_coordin": 170, "_interpolate_scalar_3d": 170, "_interpolate_scalar_nn_2d": 170, "_interpolate_scalar_nn_3d": 170, "_interpolate_vector_2d": 170, "_interpolate_vector_3d": 170, "data_strid": 170, "len_point": 170, "dim_siz": 172, "force_recomput": 172, "meesters2016_ismrm": 172, "duitsandfranken_ijcv": 172, "evaluate_kernel": [172, 183], "kernel_valu": 172, "get_lookup_t": [172, 183], "upfirdn": 172, "image_as_sampl": 172, "sigma_corr": 172, "stacklevel": [172, 180], "odfs_sf": 172, "trekker": 173, "max_attempt": 173, "get_pmf": [173, 183], "get_pmf_no_boot": [173, 183], "shcoeff": 173, "pmf_gen": 173, "cylinder": 173, "k1": 173, "max_curvatur": 173, "probe_radiu": 173, "harder": 173, "intric": 173, "erod": 173, "probe_qu": 173, "probe_count": 173, "data_support_expon": 173, "datasupportexpon": 173, "dir": 173, "stream_statu": [173, 180], "dire": 176, "summat": 176, "ang_thr": [176, 180, 183], "qa_thr": [176, 180, 183], "total_weight": [176, 180, 183], "obj_arr": 176, "adj_ind": 176, "adj_indic": 176, "unrol": 176, "vertex_ind": 176, "vertind": 176, "adj_count": 176, "uint32": 176, "odfn": 176, "radiusn": 176, "anglesn": 176, "return_index": 176, "remove_antipod": 176, "relative_threshold": 176, "intp": 176, "outn": 176, "ellid": 176, "dipyseg": 177, "features1": 177, "features2": 177, "clusters_list": 177, "centroid_shap": 177, "get_cluster_map": [177, 183], "get_stat": [177, 183], "get_tree_cluster_map": [177, 183], "datum_idx": 177, "nb_dimens": 177, "c_infer_shap": 177, "c_dist": 177, "c_are_compat": 177, "datum1": 177, "datum2": 177, "data1": 177, "spawn": 177, "llist": 177, "mu_": 177, "sigma_": 177, "eta_": 177, "initialize_param_uniform": [177, 183], "negloglikelihood": [177, 183], "sigmasq": 177, "nloglik": 177, "prob_imag": [177, 183], "p_l_n": 177, "prob_neighborhood": [177, 183], "p_l_y": 177, "seg_stat": [177, 183], "seg_imag": 177, "update_param": [177, 183], "jan": 177, "mu_upd": 177, "var_upd": 177, "icm_is": [177, 183], "seg": 177, "pott": 177, "Ising": 177, "potts_model": 177, "new_seg": 177, "initialize_maximum_likelihood": [177, 183], "loglikelihood": 177, "neglog": 177, "likelihhood": 177, "stan": 177, "pln": 177, "dipytrack": 180, "distanch": 180, "nb_streamlin": 180, "min_nb_point": 180, "max_nb_point": 180, "get_direct": [180, 183], "vec1": 180, "vec2": 180, "rougher": 180, "decahexagon": 180, "7853": 180, "octagon": 180, "characteristic_point": 180, "xyza": 180, "tracksa": 180, "tracksb": 180, "hit": 180, "rcd": 180, "refx": 180, "bundlex": 180, "70710683": 180, "70710677": 180, "collis": 180, "ericson": 180, "reassign": 180, "distant": 180, "sqd_thr": 180, "larch_fast_split": 180, "3track": 180, "sqd_trh": 180, "trh": 180, "rep3": 180, "start0": 180, "end0": 180, "start1": 180, "end1": 180, "whang": 180, "sigmod07": 180, "angle_dist": 180, "l_0": 180, "l_1": 180, "cos_theta_squar": 180, "perpendicular_dist": 180, "l0": 180, "k0": 180, "u1": 180, "u2": 180, "pe": 180, "lperp1": 180, "lperp2": 180, "6f": 180, "787888": 180, "d_thr": 180, "t_1": 180, "t_2": 180, "fo": 180, "xyz1": 180, "laidlaw": 180, "ieeexplor": 180, "xpl": 180, "freeabs_al": 180, "jsp": 180, "arnumb": 180, "4479455": 180, "coroug": 180, "avg_mcd": 180, "average_mean_closest_dist": 180, "min_mcd": 180, "minimum_mean_closest_dist": 180, "max_mcd": 180, "maximum_mean_closest_dist": 180, "minab": 180, "minba": 180, "avg_minab": 180, "avg_minba": 180, "min_minab": 180, "min_minba": 180, "vagu": 180, "tracks_combinations_of_2": 180, "mean_closest_dist": 180, "mcd_i": 180, "mcd_j": 180, "vec_out": 180, "sq_dist_thr": 180, "sq_distanc": 180, "tracka": 180, "trackb": 180, "3pt": 180, "721573": 180, "min_fiberlength": 180, "minimum_length": 180, "max_windows": 180, "meesters2016_hbm": 180, "stress": 180, "leafsiz": 180, "compact_nod": 180, "copy_data": 180, "balanced_tre": 180, "boxsiz": 180, "ckdtree": 180, "kd": 180, "rapidli": 180, "bogu": 180, "brute": 180, "hyperrectangl": 180, "queri": [180, 183], "toroid": 180, "x_i": 180, "l_i": 180, "maneewongvatana": 180, "mount": 180, "count_neighbor": [180, 183], "nearbi": 180, "minkowski": 180, "cosmologi": 180, "assembli": 180, "landi": 180, "szalai": 180, "xi": 180, "redshift": 180, "sky": 180, "astro": 180, "0012333": 180, "astrophys": 180, "adsab": 180, "harvard": 180, "1993apj": 180, "64l": 180, "sheth": 180, "connolli": 180, "skibba": 180, "galaxi": 180, "0511773": 180, "hawkin": 180, "2df": 180, "survei": [83, 180], "peculiar": 180, "veloc": 180, "monthli": 180, "astronom": 180, "2003mnra": 180, "78h": 180, "5647": 180, "default_rng": 180, "points1": 180, "points2": 180, "kd_tree1": 180, "kd_tree2": 180, "query_ball_tre": [180, 183], "innernod": [180, 183], "ckdtreenod": 180, "split_dim": [180, 183], "leafnod": [180, 183], "ckdtree_nod": 180, "distance_upper_bound": 180, "kth": 180, "query_ball_point": [180, 183], "mgrid": 180, "dd": 180, "sep": 180, "2236068": 180, "unsqueez": 180, "23606798": 180, "80622577": 180, "return_sort": 180, "return_length": 180, "nearer": 180, "indici": 180, "nearby_point": 180, "markers": 180, "og": 180, "query_pair": [180, 183], "output_typ": 180, "kd_tree": 180, "sparse_distance_matrix": [180, 183], "max_dist": 180, "dok_matrix": 180, "sdm": 180, "toarrai": 180, "12295571": 180, "28942611": 180, "2333084": 180, "24617575": 180, "29571802": 180, "26836782": 180, "56906522": 180, "39923701": 180, "8658745": 180, "79428925": 180, "37327919": 180, "7225693": 180, "87665969": 180, "32580855": 180, "75679479": 180, "30088013": 180, "6395831": 180, "33630734": 180, "31994999": 180, "72658602": 180, "71124834": 180, "55396483": 180, "90785663": 180, "57714465": 180, "6473269": 180, "bounds_error": 180, "assume_sort": 180, "_interpolator1d": 180, "npoint": 180, "slinear": 180, "zeroth": 180, "x_new": 180, "monoton": 180, "__call__": 180, "splrep": 180, "univariatesplin": 180, "interp2d": 180, "xnew": 180, "ynew": 180, "streamlines_length": 180, "streamline_scor": 180, "streamlines_scor": 180, "seed_po": 180, "first_step": 180, "workhors": 180, "prev_dir": 180, "fixed_step": 180, "pft_max_nbr_back_step": 180, "pft_max_nbr_front_step": 180, "particle_path": 180, "particle_dir": 180, "particle_weight": 180, "particle_step": 180, "particle_stream_status": 180, "pft_max_step": 180, "step_sz": 180, "max_point": 180, "lenind": 180, "types": 180, "interp_out_doubl": 180, "interp_out_view": 180, "wm_map": 180, "gm_map": 180, "csf_map": 180, "kw": 180, "get_exclud": [180, 183], "get_includ": [180, 183], "correction_factor": 180, "check_point": [180, 183], "intflag": 180, "pyerror": [180, 183], "pxd": 180, "tol_error": 180, "presseau15": 180, "rheault15": 180, "01mm": 180, "probabilit": 180, "compressed_streamlin": 180, "wiggl": 180, "c_streamlin": 180, "presseau": 180, "common_shap": 180, "expected_length": 180, "modified_streamlin": 180, "return_el": 180, "trackviz": 180, "tc": 180, "vox_track0": 180, "vox_track1": 180, "vox_dim": 180, "bundlemin": 183, "expectmax": 183, "parzenhist": 183, "sumsqdiff": 183, "determine_num_thread": 183, "distance_matrix_mdf": 183, "compute_cc_backward_step_2d": 183, "compute_cc_backward_step_3d": 183, "compute_cc_forward_step_2d": 183, "compute_cc_forward_step_3d": 183, "precompute_cc_factors_2d": 183, "precompute_cc_factors_2d_test": 183, "precompute_cc_factors_3d": 183, "precompute_cc_factors_3d_test": 183, "compute_em_demons_step_2d": 183, "compute_em_demons_step_3d": 183, "compute_masked_class_stats_2d": 183, "compute_masked_class_stats_3d": 183, "quantize_positive_2d": 183, "quantize_positive_3d": 183, "compute_parzen_mi": 183, "cubic_splin": 183, "cubic_spline_deriv": 183, "sample_domain_regular": 183, "compute_energy_ssd_2d": 183, "compute_energy_ssd_3d": 183, "compute_residual_displacement_field_ssd_2d": 183, "compute_residual_displacement_field_ssd_3d": 183, "compute_ssd_demons_step_2d": 183, "compute_ssd_demons_step_3d": 183, "iterate_residual_displacement_field_ssd_2d": 183, "iterate_residual_displacement_field_ssd_3d": 183, "solve_2d_symmetric_positive_definit": 183, "solve_3d_symmetric_positive_definit": 183, "affinetransform2d": 183, "rigidisoscalingtransform2d": 183, "rigidisoscalingtransform3d": 183, "rigidscalingtransform2d": 183, "rigidscalingtransform3d": 183, "rigidtransform2d": 183, "rotationtransform2d": 183, "rotationtransform3d": 183, "scalingtransform2d": 183, "scalingtransform3d": 183, "compose_vector_fields_2d": 183, "compose_vector_fields_3d": 183, "create_circl": 183, "create_harmonic_fields_2d": 183, "create_harmonic_fields_3d": 183, "create_random_displacement_2d": 183, "create_random_displacement_3d": 183, "create_spher": 183, "downsample_displacement_field_2d": 183, "downsample_displacement_field_3d": 183, "downsample_scalar_field_2d": 183, "downsample_scalar_field_3d": 183, "invert_vector_field_fixed_point_2d": 183, "invert_vector_field_fixed_point_3d": 183, "is_valid_affin": 183, "reorient_vector_field_2d": 183, "reorient_vector_field_3d": 183, "resample_displacement_field_2d": 183, "resample_displacement_field_3d": 183, "simplify_warp_function_2d": 183, "sparse_gradi": 183, "warp_2d": 183, "warp_2d_nn": 183, "warp_3d": 183, "warp_3d_nn": 183, "warp_coordinates_2d": 183, "warp_coordinates_3d": 183, "bench_spher": 183, "func_minimize_adhoc": 183, "func_minimize_scipi": 183, "bench_disperse_charges_alt": 183, "nearestneighborinterpol": 183, "trilinearinterpol": 183, "interpolate_scalar_2d": 183, "interpolate_scalar_3d": 183, "interpolate_scalar_nn_2d": 183, "interpolate_scalar_nn_3d": 183, "interpolate_vector_2d": 183, "interpolate_vector_3d": 183, "map_coordinates_trilinear_iso": 183, "trilinear_interp": 183, "nlmeans_block": 183, "add_padding_reflect": 183, "correspond_indic": 183, "remove_pad": 183, "gettempdir": 183, "firdn": 183, "upfir": 183, "convolve_sf": 183, "bootstrap_direction_gett": 183, "ptt_direction_gett": 183, "bootpmfgen": 183, "shcoeffpmfgen": 183, "simplepmfgen": 183, "bench_bounding_box": 183, "bench_csd": 183, "bench_peak": 183, "bench_squash": 183, "bench_vec_val_sum": 183, "quick_squash": 183, "recspe": 183, "vec_val_sum": 183, "num_grad": 183, "bench_csdeconv": 183, "bench_local_maxima": 183, "old_squash": 183, "bench_quick_squash": 183, "bench_vec_val_vect": 183, "adj_to_countarr": 183, "argmax_from_adj": 183, "argmax_from_countarr": 183, "le_to_odf": 183, "local_maxima": 183, "proc_reco_arg": 183, "search_descend": 183, "sum_on_blocks_1d": 183, "bench_quickbundl": 183, "clustering_algorithm": 183, "clusteringspe": 183, "cythonutil": 183, "mdfpy": 183, "clusters_centroid2clustermap_centroid": 183, "clusterscentroid": 183, "evaluate_aabb_check": 183, "cythonfeatur": 183, "cythonmetr": 183, "minimumaveragedirectflipmetr": 183, "constantobservationmodel": 183, "iteratedconditionalmod": 183, "bench_streamlin": 183, "vox2track": 183, "bench_set_number_of_point": 183, "bench_length": 183, "bench_compress_streamlin": 183, "add_3vec": 183, "approximate_mdl_trajectori": 183, "bundles_distances_mam": 183, "cut_plan": 183, "inner_3vec": 183, "intersect_segment_cylind": 183, "larch_3merg": 183, "larch_3split": 183, "lee_angle_dist": 183, "lee_perpendicular_dist": 183, "local_skeleton_clust": 183, "local_skeleton_clustering_3pt": 183, "minimum_closest_dist": 183, "most_similar_track_mam": 183, "mul_3vec": 183, "norm_3vec": 183, "normalized_3vec": 183, "point_segment_sq_dist": 183, "point_track_sq_distance_check": 183, "sub_3vec": 183, "track_dist_3pt": 183, "track_roi_intersection_check": 183, "kdtree": 183, "interp1d": 183, "compute_rfbc": 183, "min_moving_averag": 183, "pft_tracker": 183, "eudx_both_direct": 183, "ndarray_offset": 183, "track_count": 183, "3087": [25, 83], "5019": [25, 41, 83], "81it": [25, 26, 33, 37, 75, 80, 83, 84, 86], "4988": [25, 54, 83], "76it": [25, 26, 38, 41, 54, 75, 80, 81, 83, 84, 86], "5002": [25, 54], "79it": [25, 26, 33, 34, 37, 54, 75, 80, 83, 84, 86], "5012": [25, 41, 83], "09it": [25, 34, 38, 41, 54, 75, 80, 83, 84, 86], "2511": 25, "4973": [25, 26, 41, 54, 83], "82it": [25, 26, 37, 54, 75, 80, 81, 83, 84, 86], "3009": [25, 83], "4909": [25, 83], "98it": [25, 26, 34, 41, 54, 75, 80, 83, 84, 86], "4936": [25, 54], "96it": [25, 26, 37, 38, 54, 75, 80, 83, 84, 86], "468": [25, 83, 84], "4678": [25, 80, 83], "55it": [25, 26, 33, 38, 54, 75, 80, 83, 84, 86], "4596": [25, 83], "75it": [25, 26, 37, 41, 75, 80, 83, 84, 86], "4647": [25, 83], "33it": [25, 26, 33, 54, 75, 80, 83, 84, 86, 94], "4669": [25, 83], "91it": [25, 26, 37, 41, 54, 75, 80, 81, 83, 84, 86], "2364": [25, 80, 83], "4733": [25, 82, 83], "11it": [25, 26, 37, 38, 41, 75, 80, 83, 84, 86], "2844": [25, 80, 83], "4752": [25, 75, 83], "97it": [25, 26, 33, 34, 38, 41, 54, 75, 80, 81, 83, 84, 86], "4728": [25, 26, 83], "69795": 26, "5137": 26, "90it": [26, 33, 37, 38, 41, 54, 75, 77, 80, 81, 83, 84, 86], "4835": 26, "14it": [26, 33, 34, 38, 41, 54, 75, 80, 83, 84, 86], "4744": [26, 41, 80], "49it": [26, 33, 38, 41, 54, 75, 80, 81, 83, 84, 86], "4697": [26, 80, 83], "35it": [26, 41, 54, 75, 80, 83, 84, 86, 94], "4767": [26, 80], "65it": [26, 33, 41, 54, 75, 80, 83, 84, 86], "2990": [26, 80, 83], "4879": [26, 80, 83], "3479": [26, 75], "4797": 26, "71it": [26, 33, 41, 75, 80, 83, 84, 86], "3960": [26, 83], "4796": [26, 83], "4441": [26, 80, 83], "4725": [26, 80, 83], "92it": [26, 37, 38, 41, 54, 75, 80, 81, 83, 84, 86], "4926": [26, 54, 80], "4761": [26, 54, 80], "94it": [26, 33, 34, 37, 38, 41, 54, 75, 80, 83, 84, 86], "5421": 26, "4816": [26, 83], "25it": [26, 54, 75, 80, 83, 84, 86], "5903": 26, "4771": [26, 83], "86it": [26, 33, 34, 37, 41, 54, 75, 80, 81, 83, 84, 86], "6381": 26, "4717": 26, "72it": [26, 34, 37, 41, 54, 75, 80, 81, 83, 84, 86], "6854": 26, "4715": 26, "44it": [26, 33, 34, 37, 41, 54, 75, 80, 81, 83, 84, 86], "7327": 26, "4719": [26, 83], "18it": [26, 37, 41, 54, 75, 80, 83, 84, 86], "7811": 26, "4751": [26, 80, 86], "29it": [26, 34, 37, 41, 54, 75, 80, 81, 83, 84, 86], "8304": 26, "4803": 26, "04it": [26, 34, 41, 54, 75, 80, 81, 83, 84, 86], "8785": 26, "60it": [26, 41, 54, 75, 77, 80, 81, 83, 84, 86], "9276": 26, "9766": 26, "4828": [26, 41, 83], "48it": [26, 34, 37, 38, 41, 54, 75, 80, 83, 84, 86], "10253": 26, "4840": [26, 83], "74it": [26, 33, 38, 41, 54, 75, 80, 81, 83, 84, 86], "10755": 26, "4892": [26, 41, 80], "45it": [26, 33, 34, 41, 54, 75, 80, 83, 84, 86], "11245": 26, "4798": [26, 83], "11726": 26, "4794": [26, 83], "78it": [26, 34, 37, 38, 41, 54, 75, 80, 81, 83, 84, 86], "12206": 26, "4782": [26, 83], "83it": [26, 37, 38, 41, 54, 75, 80, 83, 84, 86], "12685": 26, "4770": [26, 80, 83], "10it": [26, 37, 41, 54, 75, 80, 81, 83, 84, 86], "13186": 26, "61it": [26, 37, 41, 54, 75, 80, 81, 83, 84, 86], "13671": 26, "4826": [26, 83], "54it": [26, 41, 54, 75, 80, 83, 84, 86, 94], "14156": 26, "4831": 26, "52it": [26, 37, 41, 54, 75, 80, 83, 84, 86], "14641": 26, "4833": [26, 80], "16it": [26, 33, 34, 37, 38, 41, 54, 75, 80, 81, 83, 84, 86], "15125": 26, "4819": 26, "46it": [26, 33, 34, 37, 41, 54, 75, 80, 81, 83, 84, 86], "15607": 26, "4788": [26, 83], "20it": [26, 34, 38, 41, 54, 75, 77, 80, 83, 84, 86], "16086": 26, "4730": 26, "37it": [26, 33, 34, 38, 41, 54, 75, 80, 83, 84, 86], "16564": 26, "4743": [26, 83], "02it": [26, 33, 37, 38, 41, 75, 80, 81, 83, 84, 86, 94], "17053": 26, "4785": [26, 80], "17540": 26, "4809": [26, 41], "24it": [26, 34, 41, 75, 80, 83, 84, 86, 94], "18022": 26, "18510": 26, "4813": 26, "15it": [26, 34, 37, 41, 54, 75, 80, 81, 83, 84, 86], "19001": 26, "4841": [26, 80, 83], "38it": [26, 37, 38, 54, 75, 80, 81, 83, 84, 86], "19492": 26, "4859": [26, 54, 83], "19987": [26, 41], "4886": [26, 83], "84it": [26, 33, 34, 38, 41, 54, 75, 80, 83, 84, 86], "20476": 26, "4882": [26, 41, 83], "00it": [26, 33, 41, 54, 75, 80, 83, 84, 86], "20969": 26, "21459": 26, "4821": [26, 80], "80it": [26, 33, 41, 54, 75, 80, 83, 84, 86], "21942": 26, "4811": [26, 41], "68it": [26, 33, 34, 37, 41, 54, 75, 80, 81, 83, 84, 86], "22439": 26, "4858": [26, 80], "22925": 26, "4847": [26, 80], "23421": 26, "4880": [26, 83], "23910": 26, "4827": 26, "24393": 26, "24867": 26, "4690": [26, 83], "53it": [26, 38, 41, 54, 75, 80, 83, 84, 86], "25337": 26, "4637": [26, 80, 83], "25818": 26, "4686": [26, 83], "21it": [26, 37, 38, 41, 54, 75, 80, 83, 84, 86], "26305": 26, "4737": [26, 80, 83], "26780": 26, "4720": [26, 41, 80], "27253": 26, "4723": [26, 83], "08it": [26, 33, 37, 41, 54, 75, 80, 81, 83, 84, 86], "27733": 26, "28218": 26, "4775": 26, "64it": [26, 38, 41, 54, 75, 77, 80, 81, 83, 84, 86], "28709": 26, "93it": [26, 33, 37, 38, 41, 54, 75, 80, 83, 84, 86], "29191": 26, "4780": [26, 80, 83], "29670": 26, "4722": [26, 83], "30162": 26, "4778": [26, 83], "30648": 26, "4801": [26, 54], "67it": [26, 34, 37, 41, 54, 75, 80, 81, 82, 83, 84, 86, 94], "31129": 26, "28it": [26, 37, 54, 75, 80, 83, 84, 86, 94], "31610": 26, "32087": 26, "4665": [26, 83], "22it": [26, 33, 37, 38, 41, 54, 75, 80, 83, 84, 86, 94], "32568": 26, "4707": [26, 80, 83], "33072": 26, "33553": 26, "4799": 26, "85it": [26, 33, 34, 37, 41, 54, 75, 80, 83, 84, 86], "34041": 26, "58it": [26, 34, 37, 38, 41, 54, 75, 80, 81, 83, 84, 86], "34524": 26, "12it": [26, 33, 41, 54, 75, 80, 81, 83, 84, 86], "35023": 26, "4864": 26, "35536": 26, "4942": [26, 41, 54], "34it": [26, 34, 41, 54, 75, 80, 83, 84, 86], "36031": 26, "36520": 26, "4871": [26, 83], "37008": 26, "4837": 26, "95it": [26, 34, 41, 54, 75, 80, 83, 84, 86, 94], "37497": 26, "4852": [26, 83], "37990": 26, "4875": [26, 83], "30it": [26, 33, 34, 38, 41, 54, 75, 80, 83, 84, 86], "38478": 26, "4851": [26, 80, 83], "38964": 26, "4832": [26, 83], "39it": [26, 37, 41, 75, 80, 81, 83, 84, 86], "39448": 26, "4786": [26, 83], "39927": 26, "4742": [26, 80, 83], "40426": 26, "4815": 26, "26it": [26, 34, 37, 38, 41, 75, 80, 81, 83, 84, 86], "40918": 26, "4843": [26, 80], "41403": 26, "41896": 26, "4866": [26, 83], "42383": 26, "4784": [26, 83], "42888": 26, "4861": [26, 80, 83], "43393": 26, "4915": [26, 41, 54, 80], "43900": 26, "4960": [26, 54, 83], "44401": 26, "07it": [26, 34, 38, 41, 54, 75, 80, 81, 83, 84, 86], "44899": 26, "41it": [26, 33, 37, 41, 75, 80, 81, 83, 84, 86], "45401": 26, "47it": [26, 37, 38, 41, 54, 75, 80, 83, 84, 86], "45911": 26, "4946": [26, 54, 83], "46407": 26, "4929": [26, 54, 83], "73it": [26, 37, 38, 41, 54, 75, 80, 81, 83, 84, 86], "46907": 26, "4947": [26, 41, 54, 83], "47403": 26, "4845": [26, 80], "47895": 26, "48401": 26, "4923": [26, 80, 83], "59it": [26, 38, 41, 54, 75, 80, 81, 83, 84, 86], "48909": 26, "4969": [26, 54, 80, 83], "49407": 26, "4951": [26, 41, 54, 80], "49903": 26, "4869": [26, 83], "50391": 26, "4800": [26, 83], "50882": 26, "66it": [26, 33, 38, 41, 54, 75, 80, 81, 83, 84, 86], "51369": 26, "51866": 26, "4876": [26, 41, 54, 80, 83], "52354": 26, "4806": [26, 54, 83], "31it": [26, 33, 34, 38, 41, 54, 75, 80, 81, 83, 84, 86], "52835": 26, "4766": [26, 83], "03it": [26, 34, 38, 41, 54, 75, 80, 81, 83, 84, 86], "53329": 26, "05it": [26, 33, 41, 54, 75, 80, 83, 84, 86], "53823": 26, "4849": [26, 80], "54311": 26, "4857": [26, 83], "54797": 26, "55280": 26, "4713": [26, 72, 80, 83], "55752": 26, "4680": [26, 80], "56237": 26, "4727": [26, 83], "43it": [26, 33, 38, 41, 54, 75, 80, 83, 84, 86], "56730": 26, "06it": [26, 33, 38, 41, 54, 75, 80, 83, 84, 86], "57209": 26, "99it": [26, 33, 34, 37, 41, 54, 72, 75, 80, 83, 84, 86], "57687": 26, "58157": 26, "4631": 26, "58641": 26, "59111": 26, "4681": [26, 54, 83], "59606": 26, "4758": [26, 83], "60088": 26, "60566": 26, "4650": [26, 80, 83], "13it": [26, 33, 34, 37, 38, 41, 54, 75, 80, 81, 83, 84, 86], "61032": 26, "4630": [26, 83], "61507": 26, "4664": [26, 80, 83], "61976": 26, "4671": [26, 83, 86], "62479": 26, "4776": [26, 83], "01it": [26, 33, 41, 54, 75, 80, 83, 84, 86], "62957": 26, "63432": 26, "4688": [26, 41, 83], "17it": [26, 33, 34, 41, 54, 75, 80, 81, 83, 84, 86, 93], "63902": 26, "4670": 26, "88it": [26, 33, 41, 54, 75, 77, 80, 81, 83, 84, 86], "64372": 26, "4677": [26, 83], "64874": 26, "4777": 26, "65352": 26, "4749": [26, 83], "65828": 26, "4702": [26, 83], "66302": 26, "4712": [26, 41, 83], "27it": [26, 33, 34, 37, 38, 41, 54, 75, 80, 81, 83, 84, 86], "66794": 26, "4773": 26, "56it": [26, 33, 37, 38, 41, 54, 75, 80, 81, 83, 84, 86], "67283": 26, "4805": [26, 83], "67769": 26, "4820": [26, 83], "68252": 26, "4675": [26, 83], "68721": 26, "69204": 26, "4703": [26, 80, 83], "69683": 26, "4726": [26, 83], "4792": [26, 83], "examples_built_contextual_enhanc": 28, "examples_built_fiber_track": 31, "969": [31, 109, 116], "096": [31, 32], "58788": [33, 34, 37, 38], "6937": 33, "1599": 33, "8177": 33, "8772": 33, "3463": [33, 80, 83], "8919": 33, "4414": [33, 80], "9128": 33, "5369": 33, "9270": 33, "50it": [33, 34, 38, 41, 54, 75, 80, 83, 84, 86], "6341": 33, "9416": 33, "7305": 33, "9486": 33, "8274": 33, "9547": [33, 37, 86], "9229": 33, "9539": 33, "10183": 33, "9492": 33, "11133": 33, "9441": 33, "12107": 33, "9530": [33, 37], "13071": 33, "9562": 33, "14028": [33, 86], "9548": 33, "15016": 33, "9644": 33, "15982": 33, "9648": [33, 37], "16947": 33, "9627": 33, "17940": [33, 41], "9714": [33, 37], "18912": 33, "9663": 33, "23it": [33, 34, 41, 54, 75, 80, 83, 84, 86, 93], "19879": 33, "69it": [33, 54, 75, 80, 83, 84, 86], "20846": 33, "9639": 33, "21814": 33, "9650": [33, 37], "22780": 33, "9629": 33, "23761": 33, "9681": 33, "24730": 33, "9680": 33, "32it": [33, 34, 38, 54, 75, 80, 81, 83, 84, 86], "25699": 33, "9633": 33, "26663": 33, "9583": 33, "27622": 33, "9584": 33, "28581": 33, "9475": 33, "29529": 33, "9386": 33, "30468": 33, "9359": 33, "31405": 33, "9324": 33, "32359": 33, "9387": 33, "33319": 33, "9447": 33, "34281": 33, "9496": [33, 37], "35231": 33, "9493": 33, "36201": 33, "9554": 33, "37160": 33, "9565": 33, "38135": 33, "9618": 33, "39117": 33, "9677": [33, 34, 38], "40099": 33, "9717": [33, 34, 37, 54], "41080": 33, "9743": 33, "42069": 33, "9785": [33, 86], "43048": 33, "9738": 33, "44028": 33, "9755": 33, "45004": 33, "9744": 33, "45979": 33, "9682": 33, "46956": 33, "9706": 33, "47942": 33, "9751": 33, "48918": 33, "49892": 33, "50875": 33, "9765": 33, "51852": 33, "9688": 33, "52821": 33, "9669": 33, "53789": 33, "54755": 33, "89it": [33, 37, 38, 54, 75, 80, 83, 84, 86], "55720": 33, "9574": 33, "56678": 33, "9489": 33, "57628": 33, "9412": 33, "58570": 33, "9238": 33, "9494": 33, "718": [34, 38, 80, 83], "7178": 34, "1627": [34, 80, 83], "8301": 34, "2598": [34, 41], "8942": 34, "3535": [34, 80, 83], "9110": 34, "4515": [34, 80], "9357": 34, "5490": 34, "9490": [34, 86], "62it": [34, 41, 54, 75, 80, 81, 83, 84, 86], "6475": 34, "9607": 34, "7471": [34, 86], "8470": [34, 75], "9802": 34, "51it": [34, 41, 54, 75, 80, 81, 83, 84, 86], "9464": 34, "9843": 34, "10449": 34, "9819": 34, "11431": 34, "12400": 34, "9661": 34, "13399": 34, "9758": 34, "40it": [34, 38, 41, 54, 75, 80, 81, 83, 84, 86, 94], "14376": 34, "9749": 34, "15352": 34, "9747": 34, "16362": 34, "9851": [34, 38], "17348": 34, "9850": [34, 38], "18338": 34, "9863": [34, 38], "19325": 34, "9864": 34, "20317": 34, "9880": [34, 37, 38], "21306": 34, "9824": 34, "22322": 34, "9921": 34, "23315": 34, "24318": 34, "9923": 34, "25320": 34, "9950": [34, 38], "26316": 34, "9830": 34, "27300": 34, "9803": 34, "28281": 34, "9761": 34, "29258": 34, "9671": 34, "30226": 34, "9551": 34, "31182": 34, "9546": 34, "32137": 34, "9479": 34, "33125": 34, "9595": 34, "34107": 34, "9660": 34, "35074": 34, "9630": [34, 75], "36060": 34, "9696": 34, "37044": 34, "9739": 34, "38027": 34, "9764": [34, 38], "39008": 34, "9777": 34, "39999": 34, "9816": 34, "41007": 34, "9894": 34, "42021": 34, "9966": [34, 38], "43018": 34, "9887": 34, "44024": [34, 54], "9938": 34, "45019": 34, "9936": 34, "46013": 34, "9897": 34, "47011": 34, "9919": 34, "48006": 34, "9926": [34, 54], "48999": 34, "9901": 34, "49999": 34, "9929": 34, "50994": 34, "9933": 34, "51988": [34, 54], "9932": 34, "52982": 34, "53972": 34, "9835": [34, 38], "54956": 34, "9784": 34, "55935": 34, "9711": 34, "56912": 34, "9727": 34, "57885": 34, "9550": 34, "9686": 34, "706": [37, 80], "7055": 37, "8285": 37, "8920": 37, "3517": [37, 80, 83], "9061": 37, "4489": [37, 83], "9296": 37, "5461": 37, "9436": 37, "6435": 37, "9535": 37, "7413": 37, "9612": 37, "8408": 37, "9381": 37, "9719": 37, "10354": 37, "9720": 37, "11329": 37, "9729": [37, 38], "12330": [37, 86], "9811": [37, 38], "13331": 37, "9868": 37, "14318": 37, "9839": 37, "15302": 37, "9799": 37, "16314": 37, "9893": 37, "17307": 37, "9902": 37, "18298": 37, "19287": 37, "9881": 37, "20276": 37, "9837": 37, "21260": 37, "9809": 37, "22252": 37, "23237": 37, "9790": [37, 38], "24224": 37, "9812": [37, 38], "25220": 37, "9854": 37, "26206": 37, "9782": 37, "27185": 37, "9718": [37, 38], "28157": 37, "87it": [37, 41, 54, 75, 80, 81, 83, 84, 86], "29123": 37, "9524": 37, "30076": 37, "9425": 37, "31024": 37, "9439": 37, "31975": 37, "9456": 37, "32935": 37, "33897": 37, "34873": 37, "9593": 37, "35853": 37, "9653": 37, "36820": 37, "9657": 37, "37805": 37, "38788": [37, 86], "9746": 37, "39777": 37, "9788": 37, "40770": 37, "9829": 37, "70it": [37, 38, 41, 72, 75, 80, 83, 84, 86], "41763": 37, "9856": [37, 38], "42749": 37, "9805": 37, "43731": 37, "9808": 37, "44712": 37, "9741": [37, 75], "45688": 37, "57it": [37, 54, 75, 80, 83, 84, 86], "46690": 37, "9826": 37, "47673": 37, "9807": [37, 38], "48654": 37, "9770": 37, "49648": 37, "9818": 37, "50630": 37, "9795": 37, "51610": 37, "9762": 37, "52587": 37, "9705": 37, "53563": 37, "9721": 37, "54536": [37, 86], "9707": 37, "55517": 37, "9735": 37, "56491": 37, "57457": 37, "58413": 37, "9423": 37, "9622": 37, "7177": 38, "8333": 38, "8982": 38, "3529": [38, 83, 86], "9067": 38, "4511": 38, "9336": 38, "36it": [38, 54, 75, 80, 83, 84, 86], "5503": 38, "9531": 38, "6496": 38, "9658": 38, "7484": 38, "8477": 38, "9791": 38, "9471": 38, "10463": 38, "9860": 38, "11454": 38, "9874": 38, "12444": 38, "9882": 38, "19it": [38, 41, 54, 75, 80, 83, 84, 86], "13455": 38, "14451": 38, "9895": 38, "15441": 38, "16470": 38, "9980": 38, "17471": 38, "9987": 38, "18470": 38, "9988": 38, "19469": 38, "9937": 38, "20463": 38, "9853": 38, "21449": 38, "22451": 38, "23437": 38, "9821": 38, "24434": 38, "25421": 38, "9848": 38, "26406": 38, "9844": 38, "27391": 38, "28368": 38, "9673": 38, "29336": 38, "9521": 38, "30289": 38, "9511": 38, "31241": 38, "9499": 38, "32211": 38, "9556": 38, "33176": 38, "9582": 38, "34156": 38, "9647": 38, "35121": 38, "9626": 38, "36107": 38, "9694": 38, "37077": 38, "9695": 38, "38086": 38, "39103": 38, "9917": 38, "40117": 38, "9982": 38, "41116": 38, "9979": 38, "42119": 38, "9994": 38, "43119": 38, "9964": 38, "44116": 38, "9915": [38, 75], "45124": 38, "9963": 38, "46122": 38, "47127": 38, "9990": 38, "48142": 38, "10037": 38, "49146": 38, "10006": 38, "50147": 38, "9972": [38, 75], "51145": 38, "9925": 38, "52138": 38, "53127": 38, "9847": [38, 86], "54114": 38, "55100": 38, "56082": 38, "57064": 38, "58033": 38, "9564": 38, "77848": 41, "3572": [41, 83], "4061": [41, 83], "4194": [41, 83], "4270": [41, 83], "4337": [41, 83], "4468": [41, 83], "3047": [41, 83], "4473": 41, "4490": 41, "3968": [41, 83], "4548": [41, 80, 83], "4423": [41, 80], "4485": [41, 83, 86], "4924": [41, 54], "4643": [41, 80, 83], "5389": 41, "4623": [41, 80, 83], "5882": 41, "6357": 41, "63it": [41, 54, 75, 76, 80, 81, 83, 84, 86], "6830": 41, "4704": 41, "7314": 41, "77it": [41, 54, 75, 80, 83, 84, 86], "7789": 41, "8308": 41, "4836": [41, 54, 80, 83], "8801": 41, "4860": 41, "9288": 41, "4830": [41, 83], "9792": 41, "4891": [41, 83], "10282": 41, "10797": 41, "4922": [41, 54, 83], "11297": 41, "11792": 41, "4897": [41, 83], "12320": 41, "5008": [41, 54], "12829": 41, "5030": [41, 83], "13333": 41, "4944": [41, 54, 83], "13862": 41, "5045": [41, 83], "14385": 41, "5098": [41, 83], "14896": 41, "5017": [41, 83], "15416": 41, "5068": [41, 83], "15924": 41, "5060": 41, "16431": 41, "5049": 41, "16937": 41, "4965": [41, 54], "17441": 41, "4984": [41, 54, 80, 83], "4966": [41, 54, 80, 83], "18437": 41, "18963": 41, "4987": [41, 54, 80], "19471": 41, "5013": [41, 80, 83], "5056": [41, 80], "20493": 41, "21004": 41, "5064": [41, 83], "21514": 41, "5074": [41, 83], "22022": 41, "5001": [41, 54, 83], "22542": 41, "23063": 41, "5103": [41, 80, 83], "23574": 41, "5072": [41, 83], "24082": 41, "4979": [41, 83], "24615": 41, "5082": [41, 80, 83], "25133": 41, "5110": [41, 83], "25645": 41, "4999": [41, 54, 83], "26146": 41, "26685": 41, "5078": [41, 80, 83], "27195": 41, "5084": 41, "27704": 41, "28211": 41, "4990": [41, 54, 80, 83], "28733": [41, 86], "29240": 41, "5048": [41, 83], "29746": 41, "5039": 41, "30251": 41, "4981": [41, 54, 80, 83], "30767": 41, "5033": [41, 83], "31279": 41, "31785": 41, "5054": 41, "32301": 41, "5085": [41, 80, 83], "32810": 41, "5047": [41, 83], "33324": 41, "5073": [41, 80, 83], "33841": 41, "5101": [41, 83], "34352": 41, "5075": [41, 80, 83], "34860": 41, "35380": 41, "35889": 41, "5083": 41, "36403": 41, "5096": [41, 83], "36918": 41, "37430": 41, "5087": [41, 80, 83, 86], "37939": 41, "5079": [41, 83], "38447": 41, "5044": [41, 83], "38952": 41, "5041": [41, 83], "39457": 41, "5014": [41, 54, 83], "39968": [41, 75], "5042": [41, 80, 83], "40473": 41, "40976": 41, "42it": [41, 54, 75, 80, 81, 83, 84, 86, 94], "41473": 41, "4900": [41, 54, 83], "41973": 41, "4927": [41, 54, 83], "42466": 41, "4914": [41, 54, 83], "42959": 41, "4918": [41, 54, 80, 83], "43451": 41, "43942": 41, "4872": [41, 54, 80], "44431": 41, "44922": 41, "4885": [41, 80, 83], "45411": 41, "4846": [41, 83], "45896": 41, "4838": [41, 54, 83], "46380": 41, "46862": 41, "4789": [41, 54, 80, 83], "47379": 41, "4899": [41, 54, 80, 83], "47877": 41, "4921": [41, 54, 80], "48370": 41, "4888": 41, "48860": 41, "49350": 41, "49835": 41, "4834": [41, 83], "50335": 41, "50824": 41, "4850": [41, 54, 83], "51319": 41, "4877": [41, 83], "51812": 41, "52302": 41, "4887": [41, 80, 83], "52791": 41, "4862": 41, "53306": 41, "4945": [41, 54, 83], "53818": 41, "4996": [41, 54, 83], "54318": 41, "4968": [41, 54, 83], "54817": 41, "55333": 41, "5027": [41, 83], "55850": 41, "5069": 41, "56358": 41, "5026": [41, 83], "56874": 41, "57381": 41, "5040": [41, 83], "57915": 41, "5129": [41, 83], "58429": 41, "58938": 41, "5076": [41, 83], "59446": 41, "5063": [41, 80, 83], "59956": 41, "60472": 41, "5097": [41, 80, 83], "60982": 41, "61497": 41, "5050": [41, 80, 83], "62003": 41, "4994": [41, 54, 75], "62548": 41, "5127": [41, 83], "63069": 41, "5151": [41, 83], "63585": 41, "5140": [41, 83], "64106": 41, "5160": [41, 83], "64623": 41, "5144": [41, 83], "65161": 41, "5213": [41, 86], "65683": 41, "5178": [41, 83], "66207": 41, "5195": 41, "66727": 41, "5071": [41, 81, 83], "67282": 41, "5210": 41, "67804": 41, "5200": [41, 83], "68325": 41, "5150": [41, 83, 86], "68841": 41, "5089": [41, 83], "69376": 41, "5163": [41, 83], "69909": 41, "70431": 41, "70948": 41, "5162": [41, 83], "71465": 41, "5100": [41, 80, 83], "71986": 41, "5130": [41, 83], "72500": 41, "73009": 41, "5057": [41, 83], "73525": 41, "74044": 41, "5112": 41, "74556": 41, "5108": [41, 83], "75067": 41, "4986": [41, 54, 83], "75608": 41, "5107": [41, 83], "76120": 41, "5099": [41, 83], "76631": 41, "5052": [41, 83], "77137": 41, "4964": [41, 54, 83], "77701": 41, "5158": [41, 83], "78218it": 41, "5116": [41, 83], "78731it": 41, "5086": 41, "79241it": 41, "5011": [41, 54], "79810it": 41, "5206": 41, "80332it": 41, "5139": [41, 80], "80847it": 41, "5125": [41, 83], "81360it": 41, "5043": [41, 83], "81906it": 41, "82423it": 41, "82934it": 41, "5066": [41, 80, 83], "83455it": 41, "5106": [41, 83], "83966it": 41, "5092": [41, 83], "84476it": 41, "84982it": 41, "85496it": 41, "5036": [41, 83], "86000it": 41, "4998": [41, 54, 83], "86501it": 41, "4954": [41, 54, 80, 83], "87026it": 41, "87531it": 41, "4908": [41, 54], "88038it": 41, "88545it": 41, "89045it": 41, "4863": [41, 54, 83], "89547it": 41, "4907": [41, 54, 80, 83], "90039it": 41, "90548it": 41, "4905": [41, 83], "91040it": 41, "4853": [41, 83], "91547it": 41, "92040it": 41, "92522it": 41, "93004it": 41, "4769": 41, "93482it": 41, "4724": 41, "93955it": 41, "4674": [41, 80, 83], "94423it": 41, "4652": [41, 80, 83], "94889it": 41, "4597": [41, 80, 83], "95355it": 41, "4615": [41, 83], "95817it": 41, "4535": [41, 83], "96271it": 41, "4460": [41, 80], "96718it": 41, "4422": [41, 83, 86], "96989it": 41, "skoudoro": [41, 65, 76, 83, 88, 90, 101, 134], "examples_revamp": [41, 83], "fiber_track": 41, "rcparam": [41, 83], "max_open_warn": [41, 83], "examples_built_file_format": 43, "998783": 44, "041415": 44, "026771": 44, "003548": 44, "044491": 44, "990912": 44, "126939": 44, "781647": 44, "021270": 44, "127975": 44, "991549": 44, "033348": 44, "streamline_count": 44, "6276": 44, "point_count": 44, "205884": 44, "9878335e": 44, "1415159e": 44, "6770778e": 44, "0900355e": 44, "4491168e": 44, "9091226e": 44, "2693870e": 44, "2678165e": 44, "1270305e": 44, "2797531e": 44, "9154925e": 44, "7033348e": 44, "0000000e": 44, "410614013671875": 47, "23120999336243": 47, "5160187226539936": 47, "247523069381714": 48, "786135911941528": 48, "065306012244982": 48, "061": [49, 133, 136], "examples_built_multiprocess": 49, "1698808670043945": 51, "8697910308837891": 53, "3449993133545": 53, "046": [53, 62], "0189471244812": 54, "57345": 54, "4123": [54, 80, 83, 86], "4478": [54, 83], "4594": [54, 83], "2823": [54, 80], "3313": [54, 80], "4295": 54, "4870": 54, "4889": [54, 83], "5284": 54, "4906": [54, 83], "5776": 54, "6267": 54, "6763": 54, "7256": [54, 75], "7748": 54, "4912": [54, 83], "8240": 54, "4901": [54, 80, 83], "8731": 54, "4903": [54, 83], "9222": 54, "4904": [54, 83], "10209": 54, "4911": [54, 83], "10706": 54, "11200": 54, "11693": 54, "4925": [54, 83], "12187": 54, "12680": 54, "4916": [54, 83], "13176": [54, 86], "4928": [54, 80, 83], "13673": 54, "4938": [54, 80], "14168": 54, "4941": [54, 80, 83], "14663": 54, "15158": 54, "4943": [54, 80, 83], "15653": 54, "16148": 54, "4937": [54, 83], "16642": 54, "4932": [54, 83], "17142": 54, "4950": [54, 83], "17638": 54, "18135": 54, "18631": 54, "4949": [54, 83], "19126": 54, "4930": [54, 83], "19621": 54, "4934": [54, 75, 83], "20115": 54, "20609": 54, "21602": 54, "22099": 54, "22595": 54, "23092": 54, "23589": 54, "4953": 54, "24085": 54, "4940": 54, "24583": 54, "25081": 54, "4956": [54, 83], "25577": 54, "26073": 54, "4957": [54, 83], "26569": 54, "27064": 54, "27557": 54, "28050": 54, "28547": [54, 86], "4933": [54, 83], "29041": 54, "4931": [54, 83], "29535": 54, "30033": 54, "30531": 54, "31027": 54, "31526": 54, "32023": 54, "4958": [54, 80, 83, 86], "32520": 54, "4961": 54, "33019": [54, 86], "4967": 54, "33516": 54, "4963": 54, "34014": 54, "34511": 54, "35006": 54, "35502": 54, "35997": 54, "36492": 54, "36989": 54, "37484": 54, "37978": 54, "38472": 54, "38966": 54, "39464": 54, "39959": 54, "40455": 54, "40950": 54, "41448": 54, "41945": 54, "4955": 54, "42443": 54, "42940": 54, "43437": 54, "43934": 54, "44430": 54, "44926": 54, "45424": 54, "45920": 54, "46419": 54, "46915": 54, "47410": 54, "47904": 54, "48398": 54, "48891": 54, "49381": 54, "4854": [54, 83], "49873": 54, "50364": 54, "4881": [54, 80, 83], "50859": 54, "51355": 54, "51847": 54, "52341": 54, "52834": 54, "53327": 54, "4873": [54, 83], "53815": 54, "54303": 54, "54792": 54, "55284": 54, "55780": 54, "56277": 54, "4920": [54, 83], "56772": 54, "57274": 54, "4952": [54, 83], "4556": 54, "4865": [54, 83], "2939": [54, 80, 83], "3435": [54, 80, 83], "3933": [54, 83], "4434": [54, 80], "4978": [54, 80, 83], "5432": 54, "5929": 54, "6427": 54, "6927": 54, "4975": [54, 80, 81, 83], "7428": 54, "4983": [54, 83], "7927": 54, "4977": [54, 83], "8427": 54, "4982": [54, 83], "8926": 54, "4976": [54, 83], "9426": 54, "10426": 54, "4989": [54, 83], "10928": 54, "4997": [54, 83], "11428": 54, "11929": 54, "4993": [54, 83], "12429": 54, "4992": [54, 80, 83], "12929": 54, "4991": [54, 83], "13429": 54, "13929": 54, "14434": 54, "14937": 54, "5009": [54, 83], "15439": 54, "15945": 54, "5025": [54, 80, 83], "16448": 54, "16950": 54, "5006": [54, 80, 83], "17451": [54, 75], "5007": [54, 83], "17952": 54, "18454": 54, "18955": 54, "19458": 54, "5004": [54, 83], "19959": 54, "20460": 54, "20963": 54, "21466": [54, 86], "21969": 54, "5016": [54, 83], "22471": 54, "22971": [54, 103], "4980": [54, 83], "23471": 54, "23970": 54, "4974": [54, 83], "24470": 54, "24972": 54, "25472": 54, "25972": 54, "26473": 54, "26974": 54, "27476": 54, "5003": [54, 80, 83], "27977": 54, "28478": 54, "28979": 54, "29479": 54, "29982": 54, "30483": [54, 75], "30984": 54, "31484": 54, "31984": 54, "32484": 54, "32983": 54, "33484": 54, "33988": 54, "34489": 54, "4995": [54, 83], "34990": 54, "35496": 54, "35998": 54, "36503": 54, "5024": [54, 83], "37007": 54, "37510": 54, "38012": [54, 86], "38514": 54, "39015": 54, "39516": 54, "40018": 54, "40523": 54, "41024": 54, "41525": 54, "42027": 54, "42527": 54, "43027": 54, "43526": 54, "4972": [54, 80, 83], "44519": 54, "45020": 54, "45516": 54, "46014": 54, "46516": 54, "47014": 54, "47512": 54, "48012": 54, "48513": 54, "49012": 54, "49510": 54, "50003": 54, "50496": 54, "4913": [54, 83], "50990": 54, "51490": 54, "52484": 54, "52980": 54, "53475": 54, "53971": 54, "54468": 54, "54964": [54, 75], "55460": 54, "55956": 54, "56452": 54, "56951": 54, "6833844": 54, "56180377412377": 54, "6397178173065186": 55, "15648148e": 57, "96653949e": 57, "61992976e": 57, "92500873e": 57, "96146650e": 57, "33141189e": 57, "40950862e": 57, "42065561e": 57, "15351148e": 57, "81424084e": 57, "01045073e": 57, "78199977e": 57, "89130944e": 57, "49575968e": 57, "92392283e": 57, "89783100e": 57, "13774682e": 57, "22714803e": 57, "81423596e": 57, "70696898e": 57, "44279264e": 57, "42099735e": 57, "97981663e": 57, "06339054e": 57, "23235494e": 57, "45938553e": 57, "51485692e": 57, "85273506e": 57, "85712224e": 57, "66241563e": 57, "68230772e": 57, "06019564e": 57, "65669104e": 57, "92058858e": 57, "61326543e": 57, "74347555e": 57, "11628880e": 57, "53574085e": 57, "08871570e": 57, "03390712e": 57, "93681525e": 57, "91824605e": 57, "24988505e": 57, "55542284e": 57, "34660195e": 57, "80632225e": 57, "85819050e": 57, "12966289e": 57, "32356007e": 57, "22782138e": 57, "40054148e": 57, "98992178e": 57, "46941922e": 57, "84770195e": 57, "43204317e": 57, "48937322e": 57, "35158623e": 57, "47082419e": 57, "71041827e": 57, "05168859e": 57, "15488883e": 57, "55585770e": 57, "41418633e": 57, "58244550e": 57, "13618976e": 57, "89179859e": 57, "76564778e": 57, "93552695e": 57, "55779820e": 57, "77725800e": 57, "17958100e": 57, "83233661e": 57, "05255621e": 57, "51391513e": 57, "27121140e": 57, "58566010e": 57, "78290675e": 57, "08728633e": 57, "06917064e": 57, "52503687e": 57, "27563920e": 57, "63024349e": 57, "79882937e": 57, "72841697e": 57, "30609142e": 57, "05050926e": 57, "70486057e": 57, "09488103e": 57, "97963095e": 57, "88389091e": 57, "31527195e": 57, "13363567e": 57, "56717925e": 57, "16209588e": 57, "76366604e": 57, "37506982e": 57, "77359884e": 57, "47561074e": 57, "09743721e": 57, "31221703e": 57, "11530800e": 57, "17730845e": 57, "40161873e": 57, "76965999e": 57, "58130709e": 57, "27252533e": 57, "63327780e": 57, "84547184e": 57, "80683390e": 57, "17978461e": 57, "20573605e": 57, "93145071e": 57, "51942054e": 57, "37700037e": 57, "87800384e": 57, "76254055e": 57, "16981263e": 57, "77895613e": 57, "97589989e": 57, "43818288e": 57, "26651926e": 57, "40283700e": 57, "81762736e": 57, "78157655e": 57, "46853663e": 57, "08904088e": 57, "49647159e": 57, "10481889e": 57, "32094051e": 57, "37974339e": 57, "13738787e": 57, "47553761e": 57, "30915122e": 57, "62291294e": 57, "27198063e": 57, "59985848e": 57, "49737818e": 57, "61950172e": 57, "03151996e": 57, "52933543e": 57, "06568106e": 57, "87195476e": 57, "00176605e": 57, "14671877e": 57, "67732722e": 57, "40695880e": 57, "65159767e": 57, "35699903e": 57, "37876826e": 57, "54622493e": 57, "14432233e": 57, "59488631e": 57, "45076292e": 57, "00599752e": 57, "23990746e": 57, "82382062e": 57, "78176177e": 57, "93635874e": 57, "24416581e": 57, "91224709e": 57, "12781330e": 57, "17360433e": 57, "48567167e": 57, "62230854e": 57, "31284426e": 57, "90664681e": 57, "74729365e": 57, "13012808e": 57, "83803293e": 57, "32727396e": 57, "60388303e": 57, "66641835e": 57, "22643594e": 57, "83355655e": 57, "33993474e": 57, "76825167e": 57, "78926291e": 57, "70548142e": 57, "23753076e": 57, "90195785e": 57, "38148408e": 57, "43712808e": 57, "96594945e": 57, "00768071e": 57, "12452894e": 57, "94846390e": 57, "62504123e": 57, "07032932e": 57, "00453919e": 57, "18714655e": 57, "82819862e": 57, "82543529e": 57, "263329": 60, "933178": 60, "5934806": 60, "708311737182022": 60, "060": 61, "examples_built_preprocess": 62, "17113266785504": 63, "366354266706736": 63, "918432129721111": 63, "72068171809924": 63, "592653853373644": 63, "38475": 65, "0b735e8f16695a37bfbd66aab136eb66": 65, "e9b9bb56252503ea49d31fb30a0ac637": 65, "0c83f7e8b917cd677ad58a078658ebb7": 65, "examples_built_quick_start": 66, "714u": 68, "758u": 68, "766u": 68, "689u": 68, "700u": 68, "685u": 68, "688u": 68, "676u": 68, "746u": 68, "883u": 68, "814u": 68, "692u": 68, "705u": 68, "696u": 68, "634u": 68, "664u": 68, "644u": 68, "695u": 68, "624u": 68, "698u": 68, "704u": 68, "731u": 68, "656u": 68, "709u": 68, "678u": 68, "639u": 68, "710u": 68, "648u": 68, "668u": 68, "646u": 68, "732u": 68, "697u": 68, "687u": 68, "671u": 68, "655u": 68, "670u": 68, "703u": 68, "733u": 68, "659u": 68, "693u": 68, "718u": 68, "728u": 68, "682u": 68, "684u": 68, "725u": 68, "672u": 68, "690u": 68, "739u": 68, "629u": 68, "720u": 68, "723u": 68, "686u": 68, "694u": 68, "711u": 68, "679u": 68, "651u": 68, "691u": 68, "707u": 68, "681u": 68, "749u": 68, "699u": 68, "680u": 68, "734u": 68, "643u": 68, "716u": 68, "726u": 68, "632u": 68, "654u": 68, "729u": 68, "683u": 68, "730u": 68, "713u": 68, "701u": 68, "667u": 68, "898u": 68, "971u": 68, "712u": 68, "727u": 68, "658u": 68, "674u": 68, "662u": 68, "721u": 68, "717u": 68, "657u": 68, "677u": 68, "7828795917128741": 70, "8051656184264849": 70, "43192536287529": 70, "6038698891074241": 70, "770": [70, 83], "21491283972219535": 72, "4689": [72, 80, 83], "076": 72, "3121": [80, 83], "158": [80, 84], "1131": [], "1256": [80, 83], "2396": [80, 83], "2517": [80, 83], "2633": 83, "2752": [], "2810": 80, "2876": 83, "2936": 83, "2998": 83, "3056": 75, "3118": [], "156": [83, 84], "186": [80, 83, 84, 133], "272": [83, 84], "457": [83, 84], "773": [80, 81], "778": [83, 86], "783": [80, 81], "788": 83, "793": [80, 83], "798": 83, "1178": [80, 83], "1505": [75, 80, 83], "1525": [], "1625": [80, 83], "1689": [80, 83], "1709": 83, "1820": [80, 83], "1868": [80, 83], "1883": 83, "2143": 83, "2213": [], "2273": 83, "2299": [80, 83, 86], "2325": [], "2330": 83, "2355": [], "2361": [80, 86], "2366": 83, "2376": [80, 83], "2401": 80, "2421": [83, 86], "2426": [], "2452": [], "2547": 83, "2552": 83, "2562": [], "2582": [], "2597": 83, "2607": [75, 80], "2612": 83, "2632": 83, "2637": 83, "2642": [], "2647": [80, 83], "2652": [], "2657": 83, "2677": [75, 83], "2698": 80, "2703": [], "2718": [], "2724": 83, "2734": [80, 83], "2759": 83, "2764": [], "2774": 83, "2779": 80, "2784": [80, 83], "2794": 83, "2799": 83, "2804": 83, "2809": [75, 83], "2814": 83, "2819": [], "2824": 83, "2829": [80, 83], "2834": [], "2839": [80, 83], "2849": 80, "2854": 83, "2859": 83, "2864": [80, 83], "2869": 83, "2874": 83, "2879": 83, "2884": [], "2889": [80, 83], "2894": 83, "2899": [], "2904": 83, "2909": [], "2914": 83, "2919": 80, "2924": 83, "2929": 83, "2934": [75, 83], "2944": 83, "2949": 83, "2954": 80, "2959": 83, "2964": 83, "2969": [], "2974": 83, "2979": [], "2984": 83, "2989": [], "2995": [75, 83], "3005": 83, "3010": 83, "3015": [], "3020": [80, 83], "3025": [80, 83], "3030": [], "3035": [80, 83], "3040": [], "3045": 83, "3050": [], "3055": 83, "3060": [], "3065": 83, "3070": 83, "3076": [], "3081": [], "3086": 83, "3091": 83, "3096": 80, "3101": 86, "3106": 83, "3111": [], "3116": 80, "784": 83, "548": [80, 97, 104], "1531": [], "2297": [80, 83], "2356": 83, "2474": 80, "2771": 83, "2830": [], "2948": 80, "3006": [80, 83], "3061": 83, "3117": [75, 83], "homebrew": [81, 83], "caskroom": [81, 83], "miniforg": [81, 83], "env": [81, 83], "x86": [81, 83], "optimal_inaccur": [], "157": [83, 84], "269": [83, 84], "276": [83, 84], "294": [80, 83, 84], "395": [80, 83, 84], "756": [80, 81], "776": [80, 83], "781": [80, 83], "786": 83, "796": [80, 83], "1172": [80, 83, 94], "1404": [], "1687": [80, 83], "1852": 83, "1932": 83, "1957": 83, "2027": 83, "2032": [], "2062": 83, "2087": 83, "2092": [80, 83], "2137": 83, "2167": 83, "2187": [80, 83], "2302": 83, "2322": [80, 83], "2357": 80, "2362": 83, "2397": [], "2412": [], "2427": 83, "2437": 83, "2640": [], "2645": 83, "2650": [], "2655": [80, 83], "2660": 80, "2665": 83, "2675": [80, 83], "2680": 81, "2685": 83, "2695": 83, "2705": [], "2715": 83, "2720": [], "2730": 83, "2735": 83, "2755": [80, 83], "2760": 80, "2790": 83, "2795": 83, "2805": 83, "2815": [], "2820": [80, 83], "2825": 80, "2835": [80, 83], "2840": [], "2845": 80, "2850": 83, "2855": 80, "2860": 83, "2865": 81, "2870": 83, "2875": [80, 83], "2880": [80, 83], "2885": 83, "2890": 83, "2895": 83, "2900": 83, "2906": 83, "2913": 80, "2994": [80, 83], "2999": 80, "3004": [], "3014": 83, "3019": [], "3024": 83, "3029": [80, 83], "3034": 83, "3039": [83, 86], "3044": 83, "3049": [80, 81, 83], "3054": [], "3057": 83, "3062": 83, "3067": 80, "3072": 83, "3082": [80, 83], "3085": [], "3105": 80, "3108": 83, "3113": 83, "3114": 80, "3115": 83, "57580": [75, 86], "775": [75, 80], "1985": 75, "2165": [75, 83], "2873": [75, 80, 83], "3177": [75, 83], "3237": [75, 83], "3299": [75, 83], "3359": [75, 80], "3419": [75, 83], "3540": [75, 80, 83], "3599": 75, "3665": [75, 83], "3726": 75, "3788": 75, "3849": [75, 80], "3909": 75, "3970": [75, 83], "4030": [75, 83], "4088": 75, "4148": [75, 83], "4209": [75, 80, 83], "4268": [75, 83], "4332": [75, 83], "4392": [75, 83], "4453": [75, 80, 83], "4513": 75, "4573": [75, 80, 83], "4632": [75, 83], "4691": [75, 83], "4812": [75, 80, 83], "4874": 75, "5058": 75, "5119": [75, 83], "5182": [75, 83], "5243": 75, "5303": 75, "5364": 75, "5425": 75, "5485": 75, "5545": 75, "5616": 75, "5692": 75, "5769": 75, "5839": 75, "5907": 75, "5972": 75, "6036": 75, "6097": 75, "6158": 75, "6219": 75, "6281": 75, "6342": 75, "6405": 75, "6465": 75, "6524": 75, "6584": 75, "6646": 75, "6706": 75, "6767": 75, "6828": 75, "6892": 75, "6953": 75, "7014": 75, "7074": 75, "7135": 75, "7195": 75, "7316": 75, "7376": 75, "7437": 75, "7498": 75, "7563": 75, "7625": 75, "7686": 75, "7746": 75, "7806": 75, "7867": 75, "7929": 75, "7989": 75, "8048": 75, "8109": 75, "8169": 75, "8230": 75, "8290": 75, "8349": 75, "8410": 75, "8531": 75, "8591": 75, "8653": 75, "8713": 75, "8776": 75, "8836": 75, "8907": 75, "8975": 75, "9037": 75, "9097": 75, "9156": 75, "547": [75, 80, 83, 86], "9213": 75, "9272": 75, "9333": 75, "9392": 75, "9450": 75, "9507": 75, "9571": 75, "9683": 75, "9797": 75, "9858": 75, "10034": 75, "10094": 75, "10153": 75, "10212": 75, "10272": 75, "10332": 75, "10392": 75, "10510": 75, "10569": 75, "10633": [75, 86], "10696": 75, "10757": 75, "10817": 75, "10879": 75, "10943": 75, "11004": 75, "11062": 75, "11122": 75, "11177": 75, "11237": 75, "11296": 75, "11353": 75, "11411": 75, "11472": [75, 86], "11531": 75, "11593": 75, "11653": 75, "11712": 75, "11772": 75, "11831": 75, "11909": 75, "11985": 75, "12062": 75, "12132": 75, "12199": 75, "12265": 75, "12329": 75, "12392": 75, "12454": 75, "12517": 75, "12577": 75, "12636": 75, "12698": 75, "12757": 75, "12816": 75, "12875": [75, 86], "12935": [75, 86], "12995": 75, "13055": 75, "13115": 75, "13174": 75, "13233": 75, "13292": 75, "13354": 75, "13413": 75, "13471": 75, "13532": 75, "13593": 75, "13653": 75, "13717": 75, "13778": 75, "13840": 75, "13901": 75, "13964": 75, "14025": 75, "14085": 75, "14147": 75, "14208": 75, "14271": 75, "14333": 75, "14395": 75, "14456": 75, "14516": 75, "14576": 75, "14636": 75, "14695": 75, "14754": 75, "14818": [75, 86], "14878": 75, "14940": [75, 86], "15001": 75, "15062": 75, "15121": 75, "15190": 75, "15263": 75, "15326": 75, "15387": 75, "15447": 75, "15506": 75, "15568": 75, "15629": 75, "15688": 75, "15748": 75, "15807": 75, "15866": 75, "15929": 75, "15989": 75, "16049": 75, "16109": 75, "16169": 75, "16228": 75, "16290": 75, "16350": 75, "16411": 75, "16472": 75, "16534": 75, "16597": 75, "16658": 75, "16719": 75, "16782": 75, "16843": 75, "16903": 75, "16963": 75, "17024": 75, "17084": 75, "17144": 75, "17206": 75, "17269": 75, "17330": 75, "17391": 75, "17511": 75, "17571": 75, "17629": 75, "17687": 75, "17746": 75, "17807": 75, "17866": 75, "17926": 75, "17986": 75, "18045": 75, "18105": 75, "18164": 75, "18225": 75, "18301": 75, "18378": 75, "18449": 75, "18518": 75, "18584": 75, "18648": 75, "18711": 75, "18773": 75, "18833": 75, "18895": 75, "18956": 75, "19016": 75, "19076": 75, "19136": 75, "19196": 75, "19255": 75, "19318": 75, "19378": 75, "19437": 75, "19498": 75, "19557": 75, "19618": 75, "19679": 75, "19742": 75, "19803": 75, "19865": 75, "19925": 75, "19985": 75, "20048": 75, "20107": 75, "20167": 75, "20229": 75, "20289": 75, "20353": 75, "20414": 75, "20475": 75, "20536": 75, "20596": 75, "20655": 75, "20714": 75, "20773": 75, "20833": 75, "20892": 75, "20951": 75, "21012": 75, "21074": 75, "21134": 75, "21194": 75, "21252": 75, "21317": 75, "21381": 75, "21442": 75, "21498": 75, "21572": 75, "21633": 75, "21694": 75, "21754": 75, "21815": 75, "21879": 75, "21940": 75, "22003": 75, "22064": 75, "22125": 75, "22185": 75, "22246": 75, "22305": 75, "22366": 75, "22425": 75, "22485": 75, "22549": 75, "22609": 75, "22669": 75, "22731": 75, "22791": 75, "22850": 75, "22909": 75, "22969": 75, "23029": 75, "23091": 75, "23152": 75, "23214": 75, "23275": 75, "23337": 75, "23401": 75, "23463": 75, "23524": 75, "23584": 75, "23644": 75, "23705": 75, "23765": 75, "23824": 75, "23887": 75, "23947": 75, "24009": 75, "24069": 75, "24129": 75, "24189": 75, "24249": 75, "24309": 75, "24370": 75, "24429": 75, "24492": 75, "24553": 75, "24614": 75, "24683": 75, "24758": 75, "24836": 75, "24911": 75, "24983": 75, "25051": 75, "25116": 75, "25179": 75, "25241": 75, "25302": 75, "25363": 75, "25424": 75, "25485": 75, "25549": 75, "25610": 75, "25671": 75, "25732": 75, "25792": 75, "25854": 75, "25914": 75, "25973": 75, "26035": 75, "26095": 75, "26154": 75, "26213": 75, "26272": 75, "26335": 75, "26395": 75, "26454": 75, "26513": 75, "26576": 75, "26636": 75, "26695": 75, "26753": 75, "26811": 75, "26870": 75, "26928": 75, "26989": 75, "27048": 75, "27109": 75, "27168": 75, "27230": 75, "27290": 75, "27350": 75, "27410": 75, "27472": 75, "27534": 75, "27595": 75, "27655": 75, "27715": 75, "27775": 75, "27834": 75, "27893": [75, 86], "27968": 75, "28043": 75, "28110": 75, "28177": 75, "28241": 75, "28303": 75, "28365": 75, "28427": 75, "28488": 75, "28549": 75, "28610": 75, "28670": [75, 86], "28729": 75, "28789": 75, "28848": 75, "28912": 75, "28972": 75, "29032": 75, "29092": 75, "29151": 75, "29210": 75, "29272": 75, "29332": 75, "29390": 75, "29448": 75, "29508": 75, "29566": 75, "29628": 75, "29692": 75, "29753": 75, "29814": 75, "29875": 75, "29935": 75, "29995": 75, "30059": 75, "30120": 75, "30181": 75, "30241": 75, "30302": 75, "30362": 75, "30423": 75, "30546": 75, "30607": 75, "30667": 75, "30727": 75, "30788": [75, 86], "30848": 75, "30909": 75, "30970": 75, "31030": 75, "31090": 75, "31145": 75, "31222": 75, "31291": 75, "31355": 75, "31418": [75, 86], "31480": 75, "31542": 75, "31605": 75, "31666": 75, "31727": 75, "31788": 75, "31850": 75, "31911": 75, "31973": 75, "32034": 75, "32097": 75, "32158": 75, "32220": 75, "32281": 75, "32343": 75, "32405": 75, "32466": 75, "32527": 75, "32587": 75, "32647": 75, "32706": 75, "32767": 75, "32827": 75, "32888": 75, "32948": 75, "33009": 75, "33069": 75, "33129": 75, "33190": 75, "33250": 75, "33310": 75, "33369": 75, "33430": 75, "33489": 75, "33548": 75, "33607": 75, "33666": 75, "33725": 75, "33786": 75, "33845": 75, "33904": 75, "33963": 75, "34026": 75, "34088": 75, "34148": 75, "34207": 75, "34266": 75, "34341": 75, "34418": 75, "34491": 75, "34560": 75, "34626": 75, "34690": 75, "34753": 75, "34814": 75, "34874": 75, "34934": 75, "34994": 75, "35056": 75, "35116": 75, "35177": 75, "35237": 75, "35298": 75, "35358": 75, "35417": 75, "35476": 75, "35539": 75, "35601": 75, "35662": 75, "35723": 75, "35785": 75, "35846": 75, "35907": 75, "35967": 75, "36029": 75, "36089": 75, "36153": [75, 86], "36217": 75, "36278": 75, "36339": 75, "36400": 75, "36461": 75, "36521": 75, "36582": 75, "36642": 75, "36704": 75, "36764": 75, "36824": 75, "36884": 75, "36945": 75, "37006": 75, "37068": 75, "37128": 75, "37192": 75, "37256": 75, "37318": 75, "37381": 75, "37442": 75, "37502": 75, "37559": 75, "37633": 75, "37704": 75, "37774": 75, "37839": 75, "37903": 75, "37966": 75, "38029": 75, "38091": 75, "38153": 75, "38215": 75, "38276": 75, "38337": 75, "38398": 75, "38457": 75, "38516": 75, "38578": 75, "38637": 75, "38697": 75, "38756": 75, "38816": 75, "38880": 75, "38940": 75, "39000": 75, "39059": 75, "39122": 75, "39185": 75, "39245": 75, "39305": 75, "39368": 75, "39429": 75, "39489": 75, "39549": 75, "39608": 75, "39667": 75, "39727": 75, "39787": 75, "39846": 75, "39905": 75, "40032": 75, "40094": 75, "40154": 75, "40214": 75, "40274": 75, "40334": 75, "40396": 75, "40457": 75, "40518": 75, "40580": 75, "40641": 75, "40702": 75, "40762": 75, "40836": 75, "40913": 75, "40987": [75, 86], "41057": 75, "41125": 75, "41191": 75, "41256": 75, "41319": 75, "41381": 75, "41441": 75, "41502": 75, "41566": 75, "41626": 75, "41686": 75, "41745": 75, "41805": 75, "41866": 75, "41926": 75, "41986": 75, "42044": 75, "42103": 75, "42165": 75, "42224": 75, "42283": 75, "42342": 75, "42401": 75, "42463": 75, "42522": 75, "42584": 75, "42646": 75, "42706": 75, "42767": 75, "42827": 75, "42887": 75, "42945": 75, "43004": 75, "43062": 75, "43120": 75, "43179": 75, "43240": 75, "43302": 75, "43363": 75, "43423": 75, "43483": 75, "43545": 75, "43605": 75, "43664": 75, "43723": 75, "43781": 75, "43839": 75, "43897": 75, "43956": [75, 86], "44014": 75, "44088": 75, "44156": 75, "44218": 75, "44280": 75, "44341": 75, "44402": 75, "44461": 75, "44522": 75, "44584": 75, "44644": 75, "44706": 75, "44766": 75, "44826": 75, "44881": 75, "44940": 75, "45001": 75, "45060": 75, "45120": 75, "45181": 75, "45244": 75, "45306": 75, "45366": 75, "45425": 75, "45485": 75, "45548": 75, "45608": 75, "45669": 75, "45729": 75, "45789": 75, "45849": 75, "45909": 75, "45967": 75, "46032": 75, "46092": 75, "46151": 75, "46211": 75, "46275": 75, "46336": 75, "46398": 75, "46459": 75, "46520": 75, "46582": 75, "46643": 75, "46704": 75, "46765": 75, "46825": 75, "46885": 75, "46945": 75, "47007": 75, "47067": 75, "47139": 75, "47213": 75, "47285": 75, "47353": 75, "47419": 75, "47483": 75, "47546": 75, "47607": 75, "47668": 75, "47729": 75, "47791": 75, "47852": 75, "47911": 75, "47969": 75, "48030": 75, "48092": 75, "48153": 75, "48212": 75, "48271": 75, "48329": 75, "48387": 75, "48447": 75, "48505": 75, "48563": 75, "48628": 75, "48688": 75, "48748": 75, "48810": 75, "48871": 75, "48931": 75, "48990": 75, "49049": 75, "49108": 75, "49167": 75, "49226": 75, "49286": 75, "49345": 75, "49405": 75, "49464": 75, "49528": 75, "49590": 75, "49650": 75, "49710": 75, "49770": 75, "49829": 75, "49888": 75, "49950": 75, "50012": 75, "50072": 75, "50132": 75, "50191": 75, "50252": 75, "50328": 75, "50406": 75, "50480": 75, "50550": 75, "50617": 75, "50681": 75, "50743": 75, "50807": 75, "50868": 75, "50928": 75, "50988": 75, "51050": 75, "51110": 75, "51172": 75, "51233": 75, "51293": 75, "51353": 75, "51415": 75, "51476": 75, "51536": 75, "51599": 75, "51662": 75, "51724": 75, "51785": 75, "51846": 75, "51905": 75, "51965": 75, "52023": 75, "52088": 75, "52149": [75, 86], "52209": 75, "52270": 75, "52330": 75, "52390": 75, "52450": 75, "52509": 75, "52568": 75, "52626": 75, "52685": 75, "52744": 75, "52803": 75, "52860": 75, "52920": 75, "52978": 75, "53036": 75, "53093": 75, "53150": 75, "53211": 75, "53270": 75, "53331": 75, "53394": 75, "53455": 75, "53531": 75, "53608": 75, "53677": 75, "53744": 75, "53807": 75, "53869": 75, "53930": 75, "53991": 75, "54054": 75, "54115": 75, "54176": 75, "54236": 75, "54295": 75, "54354": 75, "54413": 75, "54473": 75, "54537": 75, "54598": 75, "54661": [75, 86], "54722": 75, "54783": 75, "54844": 75, "54904": 75, "55023": 75, "55084": 75, "55146": 75, "55208": 75, "55269": 75, "55329": 75, "55388": 75, "55447": 75, "55506": 75, "55565": 75, "55625": 75, "55685": 75, "55750": 75, "55811": 75, "55873": 75, "55934": 75, "55994": 75, "56054": 75, "56114": 75, "56174": 75, "56236": 75, "56299": 75, "56360": 75, "56423": 75, "56484": 75, "56545": 75, "56605": 75, "56665": 75, "56719": 75, "56796": 75, "56872": 75, "56947": 75, "57027": 75, "57107": 75, "57187": [75, 86], "57263": 75, "57337": 75, "57407": 75, "57472": 75, "57536": 75, "9216": 76, "560757": 76, "095": [76, 83], "552487": 77, "567372": 77, "597479": 77, "593463": 77, "596134": 77, "5148": [80, 81, 83], "165": [80, 83, 84], "195": [80, 83, 84], "236": [80, 84], "244": [80, 83, 84], "281": [80, 83, 84], "546": [80, 86], "687": [80, 83], "750": [80, 81, 83], "777": 80, "789": [80, 83], "834": 80, "903": [80, 81, 83], "1026": [80, 83], "1164": [80, 83], "1175": 80, "1224": [80, 83], "1274": [80, 83], "1276": [80, 83], "1501": [80, 83], "1665": [80, 83], "1736": 80, "1776": 80, "1826": [80, 83], "2031": [80, 83], "2110": [80, 83], "2269": [80, 83], "2281": [80, 83], "2285": [80, 83], "2293": [80, 83], "2301": [80, 83, 94], "2304": [80, 83], "2306": [80, 83], "2308": [80, 83], "2326": [80, 83], "2370": [80, 83], "2388": [80, 83], "2394": [80, 83], "2398": [80, 83], "2403": 80, "2433": [80, 83], "2455": 80, "2459": 80, "2503": [80, 83], "2563": [80, 83], "2570": [80, 83], "2574": [80, 83], "2578": 80, "2593": [80, 83], "2604": 80, "2615": 80, "2639": [80, 83], "2643": [80, 83], "2651": [80, 83], "2666": 80, "2678": 80, "2681": [80, 83], "2721": [80, 83], "2728": [80, 83], "2731": [80, 86], "2736": [80, 83], "2747": [80, 83], "2758": 80, "2772": 80, "2787": [80, 83], "2806": [80, 83], "2816": [80, 83], "2827": 80, "2833": [80, 83], "2837": [80, 83], "2841": [80, 83], "2842": 80, "2843": [80, 83], "2851": [80, 83, 86], "2853": [80, 83], "2857": 80, "2866": [80, 83], "2871": [80, 83], "2896": [80, 83], "2903": [80, 83], "2907": 80, "2910": [80, 83], "2916": [80, 83], "2921": 80, "2930": [80, 83], "2933": 80, "2935": 80, "2937": [80, 83], "2941": [80, 83], "2943": [80, 83], "2945": [80, 83], "2947": [80, 83], "2956": [80, 81], "2958": [80, 83], "2960": [80, 83], "2978": [80, 83], "2985": 80, "3003": [80, 83], "3008": [80, 83], "3011": [80, 83], "3016": [80, 83], "3018": [80, 93], "3023": [80, 83], "3027": 80, "3031": [80, 83], "3033": [80, 83], "3042": [80, 83], "3046": [80, 83], "3051": [80, 83], "3071": 80, "3074": 80, "3080": [80, 83], "3084": [80, 83], "3088": [80, 83], "3090": [80, 83], "3092": [80, 83], "3094": [80, 83], "3099": 80, "3103": 80, "3109": 80, "3112": [80, 83], "3119": [80, 83], "3123": [80, 83], "3125": [80, 83], "3132": [80, 83], "3134": [80, 83], "3136": [80, 83], "3140": [80, 83], "3157": [80, 83], "3161": [80, 83], "3164": [80, 83, 86], "3167": 80, "3171": [80, 83], "3173": [80, 83], "3178": [80, 83], "3181": [80, 83], "3183": 80, "3185": [80, 83], "3188": [80, 83], "3192": [80, 83], "3196": [80, 83], "3201": 80, "3204": [80, 83], "3209": 80, "3212": [80, 83], "3214": [80, 83], "3216": [80, 83], "3222": [80, 83], "3224": [80, 83], "3226": [80, 83, 86], "3228": [80, 83], "3246": [80, 83], "3253": [80, 83], "3258": 80, "3263": [80, 83], "3270": 80, "3274": 80, "3277": [80, 83], "3280": 80, "3282": 80, "3284": [80, 83], "3288": [80, 86], "3294": 80, "3309": [80, 83], "3316": [80, 83], "3319": [80, 83], "3322": 80, "3327": 80, "3338": 80, "3341": [80, 83], "3344": [80, 83], "3347": [80, 83], "3350": [80, 83], "3352": [80, 83], "3354": [80, 83], "3366": [80, 83], "3369": [80, 83], "3372": 80, "3377": [80, 83], "3380": 80, "3395": 80, "3401": 80, "3405": 80, "3408": 80, "3411": [80, 83], "3426": [80, 83], "3430": [80, 83], "3438": [80, 83], "3441": [80, 83], "3445": [80, 83], "3448": 80, "3452": 80, "3456": 80, "3459": [80, 83], "3461": [80, 83], "3465": [80, 83], "3467": [80, 83], "3469": 80, "3471": 80, "3472": [80, 83], "3473": 80, "3488": [80, 83], "3491": [80, 83], "3495": [80, 83], "3498": [80, 83], "3514": [80, 83], "3520": [80, 83], "3523": 80, "3528": [80, 83], "3532": [80, 83], "3538": [80, 83], "3544": 80, "3546": [80, 83], "3548": [80, 83], "3550": [80, 83], "3555": [80, 83], "3559": [80, 83], "3577": [80, 83], "3581": [80, 83], "3584": [80, 83], "3589": [80, 83], "3600": [80, 83], "3604": [80, 83], "3607": [80, 83], "3611": [80, 81, 83], "3614": [80, 83], "3617": [80, 83], "3619": [80, 83], "3621": [80, 83], "3623": 80, "3630": 80, "3633": [80, 83], "3635": [80, 83], "3638": 80, "3642": 80, "3648": 80, "3651": [80, 83], "3655": [80, 83], "3658": 80, "3662": 80, "3666": [80, 83], "3669": [80, 83], "3672": [80, 83], "3674": [80, 83], "3686": 80, "3689": [80, 83], "3699": [80, 83], "3703": [80, 83], "3706": [80, 86], "3709": [80, 83], "3714": [80, 83], "3717": [80, 83], "3719": [80, 83], "3721": [80, 83], "3723": [80, 83], "3725": [80, 83], "3727": [80, 83], "3730": 80, "3732": 80, "3734": [80, 83], "3736": 80, "3742": 80, "3744": 80, "3749": [80, 83], "3751": [80, 83], "3756": [80, 83], "3759": [80, 83], "3761": [80, 83], "3763": [80, 83], "3767": [80, 83], "3769": 80, "3773": 80, "3783": [80, 83], "3789": [80, 83], "3793": [80, 83], "3796": [80, 83], "3800": [80, 83], "3803": 80, "3807": 80, "3810": [80, 83], "3811": [80, 83], "3812": [80, 83], "3814": [80, 83], "3815": 80, "3816": [80, 83], "3817": 80, "3818": [80, 83], "3820": [80, 83], "3822": [80, 83], "3835": [80, 83], "3838": [80, 83], "3840": [80, 83], "3842": [80, 83], "3844": [80, 83], "3853": 80, "3859": 80, "3861": 80, "3864": 80, "3872": [80, 83], "3876": 80, "3879": [80, 83], "3885": [80, 83], "3888": [80, 83], "3891": [80, 83], "3894": 80, "3896": 80, "3898": [80, 83], "3900": [80, 83], "3903": 80, "3905": 80, "3911": [80, 83], "3913": 80, "3920": 80, "3924": 80, "3927": [80, 83], "3929": [80, 83], "3936": [80, 83], "3939": 80, "3948": 80, "3954": 80, "3957": [80, 81, 83], "3969": [80, 83], "3973": [80, 83], "3976": [80, 83], "3979": 80, "3982": [80, 83], "3985": 80, "3988": [80, 83], "3990": [80, 83], "4002": [80, 83], "4006": 80, "4009": 80, "4012": [80, 83], "4016": [80, 83], "4018": [80, 83], "4020": [80, 83], "4033": [80, 83], "4036": 80, "4051": 80, "4055": 80, "4059": [80, 83], "4062": [80, 83], "4064": [80, 83, 86], "4066": [80, 83], "4068": [80, 83], "4070": [80, 83], "4078": 80, "4081": [80, 83], "4083": [80, 83], "4089": [80, 83], "4092": [80, 83], "4095": [80, 83], "4098": 80, "4100": 80, "4102": [80, 83], "4105": 80, "4107": [80, 83], "4109": [80, 83], "4114": 80, "4117": [80, 83], "4119": [80, 83], "4121": [80, 83], "4128": 80, "4132": 80, "4134": 80, "4137": [80, 83], "4139": [80, 83], "4142": [80, 83], "4145": 80, "4149": [80, 83], "4152": [80, 83], "4154": [80, 83], "4156": [80, 83], "4158": [80, 83], "4160": [80, 83], "4163": 80, "4165": [80, 83], "4167": [80, 83], "4169": [80, 83], "4171": [80, 83], "4181": [80, 83], "4184": [80, 83], "4190": [80, 83], "4195": 80, "4213": 80, "4216": 80, "4219": [80, 83], "4224": 80, "4233": [80, 83], "4237": [80, 83], "4240": 80, "4242": 80, "4245": [80, 83], "4250": 80, "4253": [80, 83], "4258": [80, 83], "4261": 80, "4263": [80, 83], "4271": 80, "4277": 80, "4280": 80, "4283": [80, 83], "4285": 80, "4287": 80, "4289": [80, 83], "4291": [80, 83], "4293": 80, "4298": [80, 83], "4300": [80, 83, 86], "4302": [80, 83], "4304": [80, 83], "4312": [80, 83], "4315": 80, "4323": [80, 83], "4326": [80, 83], "4329": 80, "4331": 80, "4333": [80, 83], "4336": 80, "4338": [80, 83], "4340": [80, 83], "4346": [80, 83], "4348": [80, 83], "4351": 80, "4353": 80, "4355": 80, "4357": 80, "4359": 80, "4361": [80, 83], "4363": 80, "4365": [80, 83], "4367": [80, 83], "4369": [80, 83], "4371": [80, 83], "4372": [80, 83], "4373": 80, "4374": [80, 83], "4375": 80, "4381": [80, 83], "4383": [80, 83], "4393": [80, 83], "4397": 80, "4400": [80, 83], "4403": 80, "4405": 80, "4407": 80, "4409": 80, "4412": [80, 83], "4420": [80, 83], "4426": [80, 83], "4428": [80, 83], "4430": 80, "4432": 80, "4436": 80, "4437": [80, 83], "4443": [80, 83], "4445": [80, 83], "4447": [80, 83], "4449": [80, 83], "4451": [80, 83], "4455": 80, "4457": 80, "4459": [80, 83], "4466": [80, 83], "4472": [80, 83], "4475": [80, 83], "4477": 80, "4479": 80, "4483": [80, 83], "4486": 80, "4491": [80, 83], "4494": 80, "4497": [80, 83], "4499": [80, 83], "4501": [80, 83], "4503": 80, "4505": 80, "4508": [80, 83], "4510": [80, 83], "4512": [80, 81, 83], "4522": [80, 83], "4525": 80, "4527": 80, "4529": [80, 83], "4531": [80, 83], "4543": [80, 83], "4552": [80, 83], "4555": [80, 83], "4558": 80, "4560": 80, "4562": 80, "4564": 80, "4566": 80, "4569": [80, 83], "4571": [80, 83], "4575": [80, 83], "4577": [80, 83], "4579": [80, 83], "4581": [80, 83], "4583": [80, 83], "4585": 80, "4586": [80, 83], "4593": [80, 83], "4595": [80, 83], "4599": [80, 83], "4601": [80, 83], "4603": [80, 83], "4606": [80, 83], "4608": [80, 83], "4610": [80, 83, 86], "4618": 80, "4621": [80, 83], "4627": [80, 83], "4629": [80, 83], "4633": [80, 83], "4635": [80, 83], "4639": [80, 83], "4641": [80, 83], "4646": [80, 83], "4648": 80, "4658": [80, 83], "4660": [80, 83], "4662": [80, 83], "4668": 80, "4672": 80, "4676": [80, 83], "4685": [80, 83], "4687": 80, "4692": 80, "4694": [80, 83], "4699": [80, 83], "4701": [80, 83], "4705": [80, 83], "4709": [80, 83], "4711": [80, 83], "4716": [80, 83], "4718": [80, 83], "4731": [80, 83], "4734": [80, 83], "4740": [80, 83], "4753": 80, "4755": 80, "4764": [80, 83], "4772": [80, 83], "4774": [80, 83], "4783": [80, 83], "4787": 80, "4791": [80, 81, 83], "4793": 80, "4804": [80, 83], "4825": [80, 86], "4829": [80, 83], "4839": 80, "4883": [80, 83], "4890": 80, "4895": [80, 83], "4910": [80, 83], "4935": [80, 83], "5010": [80, 83], "5015": [80, 83], "5020": [80, 83], "5023": [80, 86], "5037": 80, "5046": [80, 83], "5053": [80, 83], "5059": [80, 83], "5070": [80, 83], "5105": [80, 83], "5109": [80, 83], "5111": [80, 83], "5131": 80, "5135": 80, "5142": [80, 83], "5145": 80, "_minpack_pi": 81, "maxfev": 81, "2601": 81, "3141": 81, "3234": [81, 83], "3328": [81, 83], "3422": 81, "3518": [81, 83], "3704": 81, "3791": 81, "3873": [81, 83], "4050": [81, 83], "4140": [81, 83], "4231": [81, 83], "4324": 81, "4419": [81, 83], "4607": [81, 83], "4700": 81, "4884": [81, 83], "510797": 82, "bounds_warn": 83, "leastsq": 83, "warningmsg": 83, "unfeas": 83, "214": [83, 84], "154": [83, 84, 116, 117], "198": [83, 84], "2319": 83, "2360": 83, "2798": 83, "2821": 83, "2955": 83, "2987": 83, "3066": 83, "3144": 83, "3225": 83, "3275": 83, "3361": 83, "3397": 83, "291": [83, 84], "3433": 83, "3496": 83, "3525": 83, "3574": 83, "3596": 83, "3616": 83, "3641": 83, "3660": 83, "3678": 83, "3695": 83, "3750": 83, "3766": 83, "3827": 83, "3843": 83, "3908": 83, "3926": 83, "3953": 83, "3971": 83, "3987": 83, "4001": 83, "4029": 83, "4047": 83, "4063": 83, "4077": 83, "4112": 83, "4127": 83, "4141": 83, "4170": 83, "4197": 83, "4210": 83, "4222": 83, "4234": 83, "4252": 83, "4269": 83, "4297": 83, "4310": 83, "4322": 83, "4342": 83, "4356": 83, "4382": 83, "4394": 83, "4410": 83, "4424": 83, "4450": 83, "4461": 83, "4484": 83, "4507": 83, "4521": 83, "4561": 83, "4598": 83, "4612": 83, "4625": 83, "4638": 83, "4714": 83, "4738": 83, "4760": 83, "4817": 83, "4917": 83, "5005": 83, "5029": 83, "5141": 83, "5152": 83, "5174": 83, "5185": 83, "5196": 83, "97863113e": 83, "69394176e": 83, "71052305e": 83, "_lsq": 83, "trf": 83, "scale_inv": 83, "min_step": 83, "147": [83, 84], "delta_new": 83, "744": 83, "780": 83, "782": 83, "790": 83, "792": 83, "1074": 83, "1144": 83, "1365": 83, "1553": 83, "1613": 83, "1617": 83, "1725": 83, "1838": 83, "1936": 83, "1991": 83, "2026": 83, "2050": 83, "2064": [83, 86], "2106": 83, "2166": 83, "2184": 83, "2189": 83, "2298": 83, "2336": 83, "2338": 83, "2354": 83, "2358": 83, "2378": 83, "2425": 83, "2439": 83, "2440": 83, "2445": 83, "2451": 83, "2458": 83, "2465": 83, "2469": 83, "2473": 83, "2494": 83, "2496": 83, "2498": 83, "2501": 83, "2505": 83, "2508": 83, "2514": 83, "2516": 83, "2538": 83, "2544": [83, 86], "2569": 83, "2571": 83, "2583": 83, "2585": 83, "2605": 83, "2608": [83, 86], "2610": 83, "2614": 83, "2620": 83, "2621": 83, "2623": 83, "2624": 83, "2641": 83, "2653": 83, "2661": 83, "2663": 83, "2682": 83, "2706": 83, "2714": 83, "2719": 83, "2732": 83, "2738": 83, "2743": 83, "2746": 83, "2748": 83, "2757": 83, "2761": 83, "2776": 83, "2777": 83, "2786": 83, "2791": [83, 86], "2793": 83, "2797": 83, "2801": 83, "2802": 83, "2807": 83, "2808": 83, "2812": 83, "2817": 83, "2818": 83, "2822": 83, "2826": 83, "2828": 83, "2831": 83, "2846": 83, "2848": 83, "2852": 83, "2856": 83, "2858": 83, "2861": 83, "2862": 83, "2867": 83, "2868": 83, "2872": 83, "2877": 83, "2878": 83, "2881": 83, "2882": 83, "2883": 83, "2886": 83, "2887": 83, "2888": 83, "2892": 83, "2893": 83, "2897": 83, "2898": 83, "2902": 83, "2908": 83, "2912": 83, "2918": 83, "2920": 83, "2922": 83, "2926": 83, "2928": 83, "2931": 83, "2932": 83, "2940": 83, "2942": 83, "2951": [83, 93], "2953": 83, "2957": 83, "2961": 83, "2962": 83, "2966": 83, "2967": 83, "2968": 83, "2970": 83, "2972": 83, "2976": 83, "2980": 83, "2982": 83, "2986": 83, "2988": 83, "2992": 83, "2993": 83, "2996": 83, "2997": 83, "3002": 83, "3012": 83, "3013": 83, "3017": 83, "3021": 83, "3026": 83, "3028": 83, "3032": 83, "3036": 83, "3037": 83, "3038": 83, "3041": 83, "3043": 83, "3048": 83, "3053": 83, "3059": 83, "3063": 83, "3064": 83, "3068": 83, "3073": 83, "3079": 83, "3089": 83, "3093": 83, "3095": 83, "3097": 83, "3100": 83, "3102": 83, "3104": 83, "3110": 83, "3127": 83, "3128": 83, "3129": 83, "3130": 83, "3131": 83, "3133": 83, "3138": 83, "3142": 83, "3143": 83, "3145": 83, "3147": 83, "3148": 83, "3149": 83, "3151": 83, "3152": 83, "3153": 83, "3155": 83, "3156": 83, "3158": 83, "3159": 83, "3163": 83, "3165": 83, "3166": 83, "3168": 83, "3169": 83, "3170": 83, "3172": 83, "3176": 83, "3180": 83, "3182": 83, "3184": 83, "3186": 83, "3190": 83, "3191": 83, "3194": 83, "3198": 83, "3200": 83, "3202": 83, "3206": 83, "3208": 83, "3210": 83, "3218": 83, "3220": 83, "3229": 83, "3231": 83, "3233": 83, "3235": 83, "3236": 83, "3238": 83, "3239": 83, "3241": 83, "3242": 83, "3243": 83, "3244": 83, "3245": 83, "3247": 83, "3249": 83, "3250": 83, "3251": 83, "3252": 83, "3254": 83, "3255": 83, "3256": 83, "3257": 83, "3259": 83, "3260": 83, "3262": 83, "3265": 83, "3267": 83, "3269": 83, "3273": 83, "3279": 83, "3281": 83, "3283": 83, "3285": 83, "3287": 83, "3289": 83, "3291": 83, "3293": 83, "3295": 83, "3297": 83, "3301": 83, "3303": 83, "3304": 83, "3306": 83, "3308": 83, "3310": 83, "3312": 83, "3314": 83, "3317": 83, "3321": 83, "3323": 83, "3325": 83, "3326": 83, "3329": 83, "3331": 83, "3334": 83, "3335": 83, "3337": 83, "3339": 83, "3343": 83, "3345": 83, "3346": 83, "3349": [83, 86], "3355": 83, "3356": 83, "3358": 83, "3360": 83, "3362": 83, "3364": 83, "3368": 83, "3371": 83, "3373": 83, "3375": 83, "3379": 83, "3381": 83, "3386": 83, "3391": 83, "3394": 83, "3396": 83, "3398": 83, "3400": 83, "3402": 83, "3404": 83, "3406": 83, "3407": 83, "3409": 83, "3413": 83, "3415": 83, "3417": 83, "3421": 83, "3423": 83, "3425": 83, "3427": 83, "3428": 83, "3431": 83, "3432": 83, "3434": 83, "3437": 83, "3439": 83, "3440": 83, "3443": 83, "3447": 83, "3449": 83, "3451": 83, "3453": 83, "3455": 83, "3457": 83, "3462": 83, "3464": 83, "3466": 83, "3468": 83, "3470": [83, 86], "3474": 83, "3475": 83, "3476": 83, "3477": 83, "3478": 83, "3480": 83, "3481": 83, "3482": 83, "3483": 83, "3484": 83, "3485": 83, "3486": 83, "3490": 83, "3492": 83, "3493": 83, "3494": 83, "3497": 83, "3499": 83, "3501": 83, "3502": 83, "3504": 83, "3505": 83, "3506": 83, "3507": 83, "3508": 83, "3509": 83, "3511": 83, "3513": 83, "3516": 83, "3519": 83, "3521": 83, "3522": 83, "3524": 83, "3527": 83, "3530": 83, "3531": 83, "3533": 83, "3534": 83, "3537": 83, "3541": 83, "3542": 83, "3543": 83, "3545": 83, "3554": 83, "3556": 83, "3557": 83, "3561": 83, "3562": 83, "3563": 83, "3564": 83, "3566": 83, "3568": 83, "3570": 83, "3571": 83, "3573": 83, "3575": 83, "3576": 83, "3578": 83, "3579": 83, "3580": 83, "3582": 83, "3583": 83, "3586": 83, "3587": 83, "3588": [83, 86], "3591": 83, "3593": 83, "3594": 83, "3595": 83, "3598": 83, "3601": 83, "3603": 83, "3605": 83, "3609": 83, "3613": 83, "3615": 83, "3618": 83, "3620": 83, "3622": 83, "3624": 83, "3625": 83, "3627": 83, "3629": 83, "3631": 83, "3637": 83, "3639": 83, "3643": 83, "3645": 83, "3647": [83, 86], "3649": 83, "3653": 83, "3657": 83, "3659": 83, "3661": 83, "3663": 83, "3664": 83, "3667": 83, "3668": 83, "3670": 83, "3671": 83, "3673": 83, "3675": 83, "3676": 83, "3677": 83, "3679": 83, "3681": 83, "3683": 83, "3685": 83, "3687": 83, "3691": 83, "3693": 83, "3696": 83, "3697": 83, "3698": 83, "3700": 83, "3701": 83, "3705": 83, "3707": 83, "3711": 83, "3713": 83, "3715": 83, "3716": 83, "3718": 83, "3729": 83, "3731": 83, "3733": 83, "3735": 83, "3737": 83, "3739": 83, "3741": 83, "3743": 83, "3745": 83, "3746": 83, "3747": 83, "3748": 83, "3752": 83, "3754": 83, "3755": 83, "3757": 83, "3758": 83, "3760": 83, "3762": 83, "3764": 83, "3765": [83, 86], "3768": 83, "3770": 83, "3772": 83, "3774": 83, "3775": 83, "3776": 83, "3777": 83, "3778": 83, "3780": 83, "3781": 83, "3785": 83, "3786": 83, "3787": 83, "3790": 83, "3792": 83, "3794": 83, "3795": 83, "3797": 83, "3798": 83, "3802": 83, "3804": 83, "3808": 83, "3821": 83, "3823": 83, "3824": 83, "3825": [83, 86], "3829": 83, "3830": 83, "3832": 83, "3834": 83, "3836": 83, "3837": 83, "3839": 83, "3841": 83, "3846": 83, "3848": 83, "3852": 83, "3854": 83, "3855": 83, "3856": 83, "3857": 83, "3858": 83, "3860": 83, "3862": 83, "3863": 83, "3865": 83, "3866": 83, "3868": 83, "3869": 83, "3871": 83, "3875": 83, "3877": 83, "3881": 83, "3883": 83, "3884": [83, 86], "3886": 83, "3887": 83, "3889": 83, "3890": 83, "3893": 83, "3895": 83, "3897": 83, "3899": 83, "3902": 83, "3904": 83, "3906": 83, "3910": 83, "3912": 83, "3914": 83, "3915": 83, "3916": 83, "3917": 83, "3918": 83, "3919": 83, "3921": 83, "3923": 83, "3925": 83, "3931": 83, "3935": 83, "3937": 83, "3938": 83, "3940": 83, "3942": 83, "3943": 83, "3945": [83, 86], "3947": 83, "3949": 83, "3951": 83, "3955": 83, "3959": 83, "3961": 83, "3962": 83, "3964": 83, "3965": 83, "3966": 83, "3967": 83, "3972": 83, "3974": 83, "3978": 83, "3980": 83, "3984": 83, "3986": 83, "3989": 83, "3992": 83, "3994": 83, "3995": 83, "3996": 83, "3997": 83, "3998": 83, "3999": 83, "4003": 83, "4004": 83, "4005": [83, 86], "4007": 83, "4010": 83, "4014": 83, "4015": 83, "4022": 83, "4023": 83, "4024": 83, "4025": 83, "4027": 83, "4028": 83, "4031": 83, "4032": 83, "4035": 83, "4038": 83, "4040": 83, "4041": 83, "4043": 83, "4044": 83, "4046": 83, "4048": 83, "4052": 83, "4054": 83, "4056": 83, "4057": 83, "4058": 83, "4067": 83, "4069": 83, "4071": 83, "4072": 83, "4074": 83, "4075": 83, "4076": 83, "4079": 83, "4085": 83, "4087": 83, "4091": 83, "4093": 83, "4094": 83, "4097": 83, "4099": 83, "4101": 83, "4103": 83, "4104": 83, "4106": 83, "4108": 83, "4110": 83, "4111": 83, "4113": 83, "4115": 83, "4125": 83, "4129": 83, "4131": 83, "4133": 83, "4135": 83, "4143": 83, "4144": 83, "4146": 83, "4147": 83, "4150": 83, "4151": 83, "4153": 83, "4162": 83, "4173": 83, "4174": 83, "4175": 83, "4176": 83, "4178": 83, "4180": 83, "4183": 83, "4185": 83, "4186": 83, "4189": 83, "4192": 83, "4196": 83, "4198": 83, "4200": 83, "4202": 83, "4203": 83, "4204": 83, "4205": 83, "4207": 83, "4208": 83, "4211": 83, "4212": 83, "4214": 83, "4215": 83, "4217": 83, "4218": 83, "4220": 83, "4223": 83, "4225": 83, "4227": 83, "4229": 83, "4235": 83, "4239": 83, "4241": [83, 86], "4243": 83, "4247": 83, "4249": 83, "4251": 83, "4255": 83, "4256": 83, "4260": 83, "4262": 83, "4264": 83, "4266": 83, "4272": 83, "4274": 83, "4276": 83, "4278": 83, "4279": 83, "4281": 83, "4282": 83, "4284": 83, "4286": 83, "4288": 83, "4290": 83, "4292": 83, "4294": 83, "4296": 83, "4299": 83, "4301": 83, "4303": 83, "4305": 83, "4306": 83, "4307": 83, "4308": 83, "4311": 83, "4314": 83, "4316": 83, "4318": 83, "4319": 83, "4321": 83, "4325": 83, "4327": 83, "4328": 83, "4330": 83, "4334": 83, "4335": 83, "4339": 83, "4341": 83, "4343": 83, "4344": 83, "4345": 83, "4347": 83, "4350": 83, "4352": 83, "4354": 83, "4358": 83, "4360": [83, 86], "4362": 83, "4364": 83, "4366": 83, "4368": 83, "4370": 83, "4376": 83, "4377": 83, "4378": 83, "4379": 83, "4385": 83, "4386": 83, "4387": 83, "4388": 83, "4389": 83, "4390": 83, "4391": 83, "4395": 83, "4396": 83, "4398": 83, "4402": 83, "4404": 83, "4406": 83, "4408": 83, "4411": 83, "4413": 83, "4415": 83, "4417": 83, "4418": 83, "4421": 83, "4425": 83, "4427": 83, "4429": 83, "4431": 83, "4433": 83, "4435": 83, "4439": 83, "4446": 83, "4448": 83, "4452": 83, "4454": 83, "4456": 83, "4458": 83, "4462": 83, "4463": 83, "4464": 83, "4470": 83, "4474": 83, "4476": 83, "4481": 83, "4487": 83, "4493": 83, "4495": 83, "4500": 83, "4502": 83, "4504": 83, "4506": 83, "4514": 83, "4516": 83, "4518": 83, "4520": 83, "4524": 83, "4526": 83, "4528": 83, "4530": 83, "4532": 83, "4533": 83, "4534": 83, "4536": 83, "4537": 83, "4539": 83, "4541": 83, "4544": 83, "4545": 83, "4546": [83, 86], "4547": 83, "4549": 83, "4550": 83, "4553": 83, "4554": 83, "4557": 83, "4559": 83, "4563": 83, "4565": 83, "4567": 83, "4568": 83, "4572": 83, "4576": 83, "4580": 83, "4582": 83, "4584": 83, "4588": 83, "4590": 83, "4592": 83, "4605": 83, "4609": 83, "4613": 83, "4614": 83, "4616": 83, "4617": 83, "4619": 83, "4645": 83, "4649": 83, "4651": 83, "4653": 83, "4654": 83, "4655": 83, "4656": 83, "4657": 83, "4659": 83, "4661": 83, "4663": 83, "4667": 83, "4673": 83, "4679": 83, "4682": 83, "4683": 83, "4693": 83, "4695": 83, "4696": 83, "4706": 83, "4708": 83, "4710": 83, "4721": 83, "4729": 83, "4735": 83, "4736": 83, "4739": 83, "4741": 83, "4746": 83, "4748": 83, "4750": 83, "4754": 83, "4756": 83, "4762": 83, "4768": 83, "4779": 83, "4790": 83, "4795": 83, "4802": 83, "4808": 83, "4810": 83, "4814": 83, "4818": 83, "4822": 83, "4824": 83, "4842": 83, "4844": 83, "4848": 83, "4855": 83, "4856": 83, "4867": 83, "4878": 83, "4893": [83, 86], "4894": 83, "4898": 83, "4902": 83, "4919": 83, "4939": 83, "4948": 83, "4962": 83, "4970": 83, "4971": 83, "4985": 83, "5018": 83, "5021": 83, "5022": 83, "5031": 83, "5032": 83, "5034": 83, "5035": 83, "5038": 83, "5051": 83, "5055": 83, "5061": 83, "5062": 83, "5077": 83, "5080": 83, "5081": 83, "5091": 83, "5093": 83, "5094": 83, "5095": 83, "5102": 83, "5104": 83, "5113": 83, "5114": 83, "5117": 83, "5118": 83, "5120": 83, "5121": 83, "5122": 83, "5123": 83, "5124": 83, "5126": 83, "5128": 83, "5132": 83, "5134": 83, "5136": 83, "5138": 83, "5146": 83, "5147": 83, "5149": 83, "5153": 83, "5154": 83, "5155": 83, "5156": 83, "5157": 83, "5159": 83, "5161": 83, "5165": 83, "5166": 83, "5167": 83, "5168": 83, "5169": 83, "5170": 83, "5171": 83, "5172": 83, "5173": 83, "5175": 83, "5176": 83, "5177": 83, "5179": 83, "5180": 83, "5184": 83, "5186": 83, "5188": 83, "5189": 83, "5190": 83, "5191": 83, "5192": 83, "5193": 83, "5194": 83, "5197": 83, "5198": 83, "5199": 83, "15609783e": 83, "09732577e": 83, "86659301e": 83, "19170291e": 83, "295": 84, "thetax": [], "msg_bval": [], "56692320e": [], "46085143e": [], "62131485e": [], "34276461e": [], "52534556e": [], "71997238e": [], "03193240e": [], "83911565e": [], "84828549e": [], "24057454e": [], "48173768e": [], "33583578e": [], "54048426e": [], "19247972e": [], "03434085e": [], "70814058e": [], "99497542e": [], "66589967e": [], "37647490e": [], "22844899e": [], "02876747e": [], "64284096e": [], "90155949e": [], "05450074e": [], "52760292e": [], "33298612e": [], "19461602e": [], "31346774e": [], "09567957e": [], "48548376e": [], "2448": [], "2613": [], "2905": [], "3124": [], "3137": [], "3160": [], "3195": [], "3221": [], "3240": [], "3290": [], "3307": [], "3311": [], "3315": [], "3330": [], "3367": [], "3376": [], "3412": [], "3487": [], "3510": [], "3526": [], "3551": [], "3585": [], "3597": [], "3606": [], "3608": [], "3610": [], "3628": [], "3634": [], "3688": [], "3708": [], "3720": [], "3779": [], "3874": [], "3880": [], "3932": [], "3944": [], "3983": [], "3993": [], "4008": [], "4045": [], "4053": [], "4082": [], "4084": [], "4090": [], "4096": [], "4118": [], "4159": [], "4166": [], "4172": [], "4177": [], "4179": [], "4191": [], "4221": [], "4248": [], "4257": [], "4273": [], "4275": [], "4380": [], "4384": [], "4465": [], "4482": [], "4542": [], "4551": [], "4578": [], "4602": [], "4624": [], "5115": [], "5143": [], "5164": [], "5204": [], "5215": [], "5220": [], "5224": [], "5228": [], "5231": [], "5234": [], "5237": [], "5240": [], "5242": [], "5247": [], "5250": [], "5253": [], "5256": [], "5259": [], "5261": [], "5263": [], "5265": [], "5277": [], "5289": [], "5296": [], "5309": [], "5313": [], "5317": [], "5321": [], "5324": [], "5327": [], "5330": [], "5333": [], "5336": [], "5339": [], "5342": [], "5344": [], "5346": [], "5348": [], "5350": [], "5352": [], "5353": [], "5354": [], "5356": [], "5360": [], "5370": [], "5382": [], "5390": [], "5397": [], "5402": [], "5406": [], "5410": [], "5415": [], "5419": [], "5422": [], "5428": [], "5431": [], "5434": [], "5437": [], "5439": [], "5441": [], "5443": [], "5445": [], "5447": [], "5449": [], "5451": [], "5453": [], "5455": [], "5462": [], "5475": [], "5486": [], "5493": [], "5499": [], "5504": [], "5508": [], "5512": [], "5516": [], "5519": [], "5522": 86, "5525": [], "5528": [], "5531": [], "5534": [], "5537": [], "5539": [], "5541": [], "5543": [], "5547": [], "5549": [], "5551": [], "5559": [], "5572": [], "5583": 86, "5591": [], "5597": [], "5602": [], "5608": [], "5612": [], "5619": [], "5622": [], "5625": [], "5628": [], "5630": [], "5632": [], "5634": [], "5636": [], "5638": [], "5640": [], "5642": [], "5644": [], "5648": [], "5661": [], "5674": [], "5682": [], "5688": [], "5693": [], "5698": [], "5702": 86, "5706": [], "5709": [], "5712": [], "5715": [], "5720": [], "5722": [], "5724": [], "5727": [], "5729": [], "5731": [], "5733": [], "5735": [], "5738": [], "5740": [], "5746": [], "5759": [], "5772": [], "5780": [], "5786": [], "5791": [], "5795": [], "5799": [], "5802": [], "5805": [], "5807": [], "5809": [], "5811": [], "5813": [], "5815": [], "5818": [], "5821": [], "5824": [], "5826": [], "5828": [], "5830": [], "5832": [], "5835": [], "5844": [], "5857": [], "5870": [], "5879": [], "5886": [], "5891": [], "5895": [], "5899": [], "5902": [], "5905": [], "5908": [], "5912": [], "5916": [], "5919": [], "5922": [], "5925": [], "5928": [], "5931": [], "5941": [], "5954": [], "5967": [], "5976": [], "5983": [], "5988": [], "5992": [], "5996": [], "5999": [], "6002": [], "6005": 86, "6010": [], "6015": [], "6019": [], "6022": [], "6025": [], "6028": [], "6040": [], "6053": [], "6065": 86, "6074": [], "6081": [], "6086": [], "6090": [], "6094": [], "6098": [], "6102": [], "6106": [], "6110": [], "6114": [], "6117": [], "6120": [], "6123": 86, "6125": [], "6138": [], "6151": [], "6162": [], "6170": [], "6176": [], "6181": 86, "6185": [], "6189": [], "6194": [], "6198": [], "6202": [], "6206": [], "6209": [], "6212": [], "6215": [], "6218": [], "6228": [], "6241": [], "6254": [], "6263": [], "6271": [], "6277": [], "6282": [], "6287": [], "6292": [], "6296": [], "6300": [], "6304": [], "6307": [], "6310": [], "6315": [], "6328": [], "6354": [], "6364": [], "6372": [], "6378": [], "6383": [], "6388": [], "6392": [], "6396": [], "6399": [], "6402": [], "6404": [], "6406": [], "6414": [], "6440": [], "6453": [], "6463": [], "6471": [], "6477": [], "6482": [], "6486": [], "6490": [], "6493": [], "6499": [], "6503": [], "6513": [], "6526": [], "6539": [], "6551": [], "6561": [], "6569": [], "6575": [], "6581": [], "6586": [], "6590": [], "6594": [], "6598": [], "6605": [], "6618": [], "6631": [], "6644": [], "6654": [], "6662": [], "6668": [], "6675": [], "6681": [], "6686": [], "6691": [], "6701": [], "6714": [], "6727": [], "6740": [], "6751": [], "6761": [], "6768": [], "6774": [], "6780": [], "6785": [], "6789": [], "6802": [], "6815": [], "6841": [], "6852": 86, "6860": [], "6866": [], "6872": [], "6877": [], "6882": [], "6895": [], "6908": [], "6921": [], "6934": [], "6945": [], "6956": [], "6964": [], "6971": [], "6984": [], "6997": [], "7010": [], "7023": [], "7036": [], "7048": [], "7058": [], "7067": [], "7080": [], "7093": [], "7106": [], "7119": [], "7132": [], "7144": [], "7155": [], "7168": [], "7181": [], "7194": [], "7207": [], "7220": [], "7233": [], "7246": [], "7259": [], "7272": [], "7285": [], "7298": [], "7311": [], "7324": [], "7337": [], "7350": [], "7363": [], "7389": [], "7402": [], "7415": [], "7441": [], "7454": [], "7467": [], "7480": [], "7493": [], "7506": [], "7519": [], "7532": [], "7545": [], "7558": [], "7571": [], "7584": [], "7597": [], "7610": [], "7623": [], "7636": [], "7649": [], "7662": [], "7675": [], "7688": [], "7701": [], "7714": [], "7727": [], "7740": [], "7753": [], "7766": [], "7779": [], "7792": [], "7805": [], "7818": [], "7831": [], "7844": [], "7857": [], "7870": [], "7883": [], "7896": [], "7909": [], "7922": [], "7935": [], "7948": [], "7961": 86, "7974": [], "7987": [], "8000": [], "8013": [], "8026": [], "8039": [], "8052": [], "8065": [], "8078": [], "8091": [], "8104": [], "8117": [], "8130": [], "8143": [], "8156": [], "8182": [], "8195": [], "8208": [], "8221": [], "8234": [], "8247": [], "8260": [], "8273": [], "8286": [], "8299": [], "8312": [], "8325": [], "8338": [], "8351": [], "8364": [], "8377": [], "8390": [], "8403": [], "8416": [], "8429": [], "8442": [], "8455": [], "8468": [], "8481": [], "8494": [], "8507": [], "8520": [], "8533": [], "8546": [], "8559": [], "8572": [], "8585": [], "8598": [], "8611": [], "8624": [], "8637": [], "8650": [], "8663": [], "8676": [], "8689": [], "8702": [], "8715": [], "8728": [], "8741": [], "8754": [], "8767": 86, "8780": [], "8793": [], "8806": [], "8819": [], "8832": [], "8845": [], "8858": [], "8871": [], "8884": [], "8897": [], "8910": [], "8923": [], "8936": [], "8949": [], "8962": [], "8988": [], "9001": [], "9014": [], "9027": [], "9040": [], "9053": [], "9066": [], "9079": [], "9092": [], "9105": [], "9118": [], "9131": 86, "9144": [], "9157": [], "9170": [], "9183": [], "9196": [], "9209": [], "07825714e": [], "48320688e": [], "86296574e": [], "78587170e": [], "13735690e": [], "90413144e": [], "91231786e": [], "78762352e": [], "98478870e": [], "62344531e": [], "17122629e": [], "22765485e": [], "38664442e": [], "01082781e": [], "16166084e": [], "06773266e": [], "41480505e": [], "65267032e": [], "38412226e": [], "35372242e": [], "67682855e": [], "33196727e": [], "37010673e": [], "26876858e": [], "69441781e": [], "45155684e": [], "79924130e": [], "77920204e": [], "30414334e": [], "04371319e": [], "12873011e": [], "58197594e": [], "04074927e": [], "23541599e": [], "53194270e": [], "99136992e": [], "66444502e": [], "10730689e": [], "39150785e": [], "84296018e": [], "67754591e": [], "53366214e": [], "37294028e": [], "11570872e": [], "04505730e": [], "97962172e": [], "41602185e": [], "40733046e": [], "15893785e": [], "28407355e": [], "98608252e": [], "42820604e": [], "33807225e": [], "95418963e": [], "73769172e": [], "12470030e": [], "61559671e": [], "29336264e": [], "62753571e": [], "59015145e": [], "00676680e": [], "11111760e": [], "20283855e": [], "52107559e": [], "07375854e": [], "29958882e": [], "87700865e": [], "55472608e": [], "42076050e": [], "96028375e": [], "09408894e": [], "07250667e": [], "60013139e": [], "08099370e": [], "87255730e": [], "04596989e": [], "93302298e": [], "46639760e": [], "88176082e": [], "67566968e": [], "08017508e": [], "69246541e": [], "03389847e": [], "06214708e": [], "97455817e": [], "01074331e": [], "83107191e": [], "05432765e": [], "29875192e": [], "50743469e": [], "69107948e": [], "72161258e": [], "71912972e": [], "02315620e": [], "61453459e": [], "72171800e": [], "70710508e": [], "20540576e": [], "80871371e": [], "74810860e": [], "37481277e": [], "04012366e": [], "76952950e": [], "88628982e": [], "98581560e": [], "11698750e": [], "16370265e": [], "02031598e": [], "15078161e": [], "34125626e": [], "57636814e": [], "87057751e": [], "08372530e": [], "73156134e": [], "23466158e": [], "42254193e": [], "16393361e": [], "97176333e": [], "89462386e": [], "01111645e": [], "44506317e": [], "44825417e": [], "17301579e": [], "25120845e": [], "88156543e": [], "43064774e": [], "60591938e": [], "65014580e": [], "62778847e": [], "22901817e": [], "12828243e": [], "80152378e": [], "11872383e": [], "74946717e": [], "21786048e": [], "36295168e": [], "99807838e": [], "15505101e": [], "70146711e": [], "41700758e": [], "26276630e": [], "32720643e": [], "28680221e": [], "38750248e": [], "78389703e": [], "13442956e": [], "47154094e": [], "56322265e": [], "83758020e": [], "77165982e": [], "97217733e": [], "26284263e": [], "84276583e": [], "62880666e": [], "03669802e": [], "04120838e": [], "54014665e": [], "45846373e": [], "01404115e": [], "09567480e": [], "53773308e": [], "48612768e": [], "38566743e": [], "18646811e": [], "19626835e": [], "43518929e": [], "50190348e": [], "42733094e": [], "41860290e": [], "33033575e": [], "62874065e": [], "10453134e": [], "68331457e": [], "71118430e": [], "43995453e": [], "39594177e": [], "78945359e": [], "73880579e": [], "33509989e": [], "02294699e": [], "02849534e": [], "29218291e": [], "81699502e": [], "01333399e": [], "40521983e": [], "21620846e": [], "74911001e": [], "81117988e": [], "05512944e": [], "39219383e": [], "33589970e": [], "94852606e": [], "97354508e": [], "70845545e": [], "36840692e": [], "44512043e": [], "18406153e": [], "12789423e": [], "50548952e": [], "25164556e": [], "07545195e": [], "44507819e": [], "95032378e": [], "10790142e": [], "53192098e": [], "05477408e": [], "42565078e": [], "28451785e": [], "63248989e": [], "45732303e": [], "24078865e": [], "35111453e": [], "89079865e": [], "81911446e": [], "00037849e": [], "98130298e": [], "64082879e": [], "95458303e": [], "06277180e": [], "48686190e": [], "63461534e": [], "62134858e": [], "61983453e": [], "00689115e": [], "80014854e": [], "02479403e": [], "63986776e": [], "19701223e": [], "12828761e": [], "04013277e": [], "31057955e": [], "02732914e": [], "00853583e": [], "63258297e": [], "32776999e": [], "45073241e": [], "48253675e": [], "24362168e": [], "11416894e": [], "55594227e": [], "66211961e": [], "66886607e": [], "88707047e": [], "61079769e": [], "48963962e": [], "50954495e": [], "06762823e": [], "62260204e": [], "05394052e": [], "57027962e": [], "19017156e": [], "53315878e": [], "93977986e": [], "00634246e": [], "04843097e": [], "22854463e": [], "29006140e": [], "35060517e": [], "25226224e": [], "55946751e": [], "97190232e": [], "38455423e": [], "30405431e": [], "29341975e": [], "74269074e": [], "73567857e": [], "98495256e": [], "77695478e": [], "76407017e": [], "37220435e": [], "90821002e": [], "25568377e": [], "27628010e": [], "25484024e": [], "30601546e": [], "83352609e": [], "39557189e": [], "03764614e": [], "02919100e": [], "60554893e": [], "71033953e": [], "54295431e": [], "17083871e": [], "58058228e": [], "33512713e": [], "51400640e": [], "60319120e": [], "99770887e": [], "82553416e": [], "44161611e": [], "13505427e": [], "07856758e": [], "09364381e": [], "87529083e": [], "75690864e": [], "18739736e": [], "57024130e": [], "79057318e": [], "09783747e": [], "45253011e": [], "85215762e": [], "51340946e": [], "20780614e": [], "84502352e": [], "66357823e": [], "13090933e": [], "16813681e": [], "43923789e": [], "49644586e": [], "33582602e": [], "62862393e": [], "59266012e": [], "14100138e": [], "27178993e": [], "17189219e": [], "94850871e": [], "09268151e": [], "61374828e": [], "80829657e": [], "55534409e": [], "38498453e": [], "84362522e": [], "10932934e": [], "72180943e": [], "07894493e": [], "27947146e": [], "26764599e": [], "83527206e": [], "54044597e": [], "66744918e": [], "42317391e": [], "12562647e": [], "83840281e": [], "57695119e": [], "48376096e": [], "04471758e": [], "09779280e": [], "60482926e": [], "72692458e": [], "45709255e": [], "54483280e": [], "70784301e": [], "52923050e": [], "17282803e": [], "58778170e": [], "10633216e": [], "06985422e": [], "70202356e": [], "25659716e": [], "15013999e": [], "35414498e": [], "99825768e": [], "17744343e": [], "64915308e": [], "12219560e": [], "90813033e": [], "60830121e": [], "51522181e": [], "26438843e": [], "78209872e": [], "35279596e": [], "46778239e": [], "2911": 86, "2975": 86, "3410": 86, "4182": 86, "5276": 86, "5338": 86, "5398": 86, "5458": 86, "5643": 86, "5764": 86, "5825": 86, "5885": 86, "5945": 86, "6243": 86, "6303": 86, "6366": 86, "6428": 86, "6489": 86, "6548": 86, "6610": 86, "6672": 86, "6732": 86, "6792": 86, "6913": 86, "6976": 86, "7037": 86, "7099": 86, "7159": 86, "7219": 86, "7283": 86, "7345": 86, "7408": 86, "7533": 86, "7595": 86, "7656": 86, "7715": 86, "7774": 86, "7835": 86, "7894": 86, "8035": 86, "8097": 86, "8158": 86, "8219": 86, "8278": 86, "8342": 86, "8402": 86, "8463": 86, "8523": 86, "8583": 86, "8643": 86, "8703": 86, "8828": 86, "8890": 86, "8950": 86, "9011": 86, "9071": 86, "9191": 86, "9253": 86, "9313": 86, "9372": 86, "9431": 86, "9604": 86, "9666": 86, "9725": 86, "9908": 86, "9968": 86, "10028": 86, "10090": 86, "10151": 86, "10216": 86, "10278": 86, "10338": 86, "10398": 86, "10457": 86, "10517": 86, "10576": 86, "10690": 86, "10746": 86, "10804": 86, "10864": 86, "10926": 86, "10985": 86, "11063": 86, "11142": 86, "11210": 86, "11278": 86, "11343": 86, "11408": 86, "11535": 86, "11599": 86, "11661": 86, "11722": 86, "11782": 86, "11841": 86, "11900": 86, "11960": 86, "12021": 86, "12083": 86, "12146": 86, "12208": 86, "12269": 86, "12390": 86, "12451": 86, "12513": 86, "12572": 86, "12631": 86, "12688": 86, "12753": 86, "12814": 86, "12996": 86, "13056": 86, "13116": 86, "13240": 86, "13301": 86, "13363": 86, "13425": 86, "13485": 86, "13545": 86, "13606": 86, "13666": 86, "13725": 86, "13787": 86, "13847": 86, "13906": 86, "13968": 86, "14088": 86, "14145": 86, "14202": 86, "14257": 86, "14319": 86, "14386": 86, "14449": 86, "14510": 86, "14571": 86, "14637": 86, "14699": 86, "14760": 86, "14881": 86, "14998": 86, "15059": 86, "15119": 86, "15180": 86, "15240": 86, "15300": 86, "15360": 86, "15418": 86, "15476": 86, "15539": 86, "15597": 86, "15658": 86, "15720": 86, "15780": 86, "15840": 86, "15901": 86, "15960": 86, "16021": 86, "16082": 86, "16142": 86, "16202": 86, "16261": 86, "16320": 86, "16378": 86, "16436": 86, "16496": 86, "16554": 86, "16610": 86, "16670": 86, "16729": 86, "16790": 86, "16852": 86, "16914": 86, "16977": 86, "17038": 86, "17098": 86, "17157": 86, "17223": 86, "17288": 86, "17352": 86, "17428": 86, "17506": 86, "17576": 86, "17645": 86, "17710": 86, "17774": 86, "17837": 86, "17899": 86, "17960": 86, "18021": 86, "18082": 86, "18143": 86, "18203": 86, "18263": 86, "18322": 86, "18382": 86, "18440": 86, "18498": 86, "18558": 86, "18623": 86, "18682": 86, "18741": 86, "18801": 86, "18862": 86, "18925": 86, "18985": 86, "19047": 86, "19109": 86, "19170": 86, "19231": 86, "19292": 86, "19353": 86, "19414": 86, "19473": 86, "19531": 86, "19588": 86, "19647": 86, "19703": 86, "19764": 86, "19827": 86, "19888": 86, "19947": 86, "20005": 86, "20065": 86, "20124": 86, "20186": 86, "20247": 86, "20309": 86, "20369": 86, "20429": 86, "20489": 86, "20561": 86, "20642": 86, "20716": 86, "20786": 86, "20854": 86, "20918": 86, "20980": 86, "21041": 86, "21103": 86, "21164": 86, "21225": 86, "21285": 86, "21348": 86, "21408": 86, "21523": 86, "21584": 86, "21642": 86, "21699": 86, "21760": 86, "21822": 86, "21885": 86, "21945": 86, "22004": 86, "22062": 86, "22120": 86, "22181": 86, "22240": 86, "22299": 86, "22353": 86, "22414": 86, "22469": 86, "22529": 86, "22586": 86, "22648": 86, "22713": 86, "22773": 86, "22833": 86, "22893": 86, "22958": 86, "23020": 86, "23083": 86, "23145": 86, "23206": 86, "23266": 86, "23326": 86, "23386": 86, "23446": 86, "23505": 86, "23563": 86, "23621": 86, "23678": 86, "23756": 86, "23825": 86, "23888": 86, "23951": 86, "24013": 86, "24074": 86, "24139": 86, "24200": 86, "24260": 86, "24321": 86, "24381": 86, "24439": 86, "24501": 86, "24560": 86, "24616": 86, "24678": 86, "24737": 86, "24795": 86, "24860": 86, "24920": 86, "24981": 86, "25043": 86, "25104": 86, "25167": 86, "25228": 86, "25290": 86, "25350": 86, "25411": 86, "25471": 86, "25530": 86, "25589": 86, "25648": 86, "25710": 86, "25770": 86, "25830": 86, "25889": 86, "25948": 86, "26007": 86, "26071": 86, "26131": 86, "26190": 86, "26253": 86, "26314": 86, "26374": 86, "26437": 86, "26497": 86, "26560": 86, "26621": 86, "26683": 86, "26745": 86, "26806": 86, "26880": 86, "26957": 86, "27025": 86, "27092": 86, "27158": 86, "27222": 86, "27284": 86, "27344": 86, "27404": 86, "27466": 86, "27526": 86, "27586": 86, "27649": 86, "27709": 86, "27769": 86, "27832": 86, "27954": 86, "28014": 86, "28073": 86, "28132": 86, "28190": 86, "28250": 86, "28308": 86, "28367": 86, "28424": 86, "28485": 86, "28606": 86, "28794": 86, "28852": 86, "28910": 86, "28970": 86, "29034": 86, "29094": 86, "29154": 86, "29213": 86, "29277": 86, "29337": 86, "29397": 86, "29456": 86, "29515": 86, "29575": 86, "29636": 86, "29697": 86, "29757": 86, "29816": 86, "29874": 86, "29932": 86, "29990": 86, "30048": 86, "30107": 86, "30189": 86, "30267": 86, "30347": 86, "30424": 86, "30502": 86, "30577": 86, "30651": 86, "30721": 86, "30857": 86, "30924": 86, "30990": 86, "31053": 86, "31115": 86, "31177": 86, "31238": 86, "31298": 86, "31358": 86, "31477": 86, "31536": 86, "31597": 86, "31656": 86, "31717": 86, "31777": 86, "31834": 86, "31893": 86, "31951": 86, "32009": 86, "32066": 86, "32125": 86, "32184": 86, "32244": 86, "32303": 86, "32362": 86, "32420": 86, "32478": 86, "32536": 86, "32595": 86, "32653": 86, "32714": 86, "32775": 86, "32835": 86, "32895": 86, "32955": 86, "33079": 86, "33139": 86, "33198": 86, "33259": 86, "33322": 86, "33382": 86, "33442": 86, "33502": 86, "33561": 86, "33625": 86, "33686": 86, "33748": 86, "33809": 86, "33869": 86, "33932": 86, "34010": 86, "34085": 86, "34153": 86, "34221": 86, "34284": 86, "34346": 86, "34406": 86, "34465": 86, "34526": 86, "34589": 86, "34650": 86, "34712": 86, "34773": 86, "34832": 86, "34891": 86, "34950": 86, "35011": 86, "35070": 86, "35129": 86, "35189": 86, "35248": 86, "35307": 86, "35368": 86, "35427": 86, "35488": 86, "35547": 86, "35608": 86, "35670": 86, "35731": 86, "35792": 86, "35852": 86, "35911": 86, "35971": 86, "36035": 86, "36095": 86, "36211": 86, "36268": 86, "36330": 86, "36388": 86, "36447": 86, "36505": 86, "36567": 86, "36630": 86, "36690": 86, "36749": 86, "36814": 86, "36875": 86, "36936": 86, "36997": 86, "37057": 86, "37114": 86, "37168": 86, "37219": 86, "37285": 86, "37344": 86, "37403": 86, "37465": 86, "37528": 86, "37588": 86, "37647": 86, "37708": 86, "37768": 86, "37828": 86, "37890": 86, "37950": 86, "38073": 86, "38134": 86, "38193": 86, "38252": 86, "38310": 86, "38368": 86, "38427": 86, "38485": 86, "38546": 86, "38607": 86, "38666": 86, "38728": 86, "38848": 86, "38912": 86, "38972": 86, "39032": 86, "39094": 86, "39157": 86, "39218": 86, "39279": 86, "39342": 86, "39404": 86, "39465": 86, "39526": 86, "39587": 86, "39647": 86, "39707": 86, "39769": 86, "39830": 86, "39891": 86, "39952": 86, "40010": 86, "40072": 86, "40131": 86, "40189": 86, "40255": 86, "40333": 86, "40412": 86, "40481": 86, "40549": 86, "40615": 86, "40679": 86, "40742": 86, "40804": 86, "40865": 86, "40926": 86, "41050": 86, "41112": 86, "41174": 86, "41234": 86, "41297": 86, "41358": 86, "41417": 86, "41476": 86, "41538": 86, "41598": 86, "41658": 86, "41718": 86, "41778": 86, "41837": 86, "41897": 86, "41956": 86, "42018": 86, "42077": 86, "42138": 86, "42199": 86, "42258": 86, "42318": 86, "42377": 86, "42437": 86, "42500": 86, "42561": 86, "42621": 86, "42681": 86, "42741": 86, "42800": 86, "42861": 86, "42921": 86, "42981": 86, "43041": 86, "43100": 86, "43159": 86, "43216": 86, "43273": 86, "43332": 86, "43394": 86, "43453": 86, "43510": 86, "43590": 86, "43652": 86, "43714": 86, "43775": 86, "43835": 86, "43895": 86, "44016": 86, "44076": 86, "44135": 86, "44198": 86, "44258": 86, "44321": 86, "44384": 86, "44445": 86, "44509": 86, "44572": 86, "44634": 86, "44695": 86, "44753": 86, "44813": 86, "44873": 86, "44931": 86, "44990": 86, "45051": 86, "45110": 86, "45171": 86, "45232": 86, "45292": 86, "45351": 86, "45415": 86, "45476": 86, "45537": 86, "45597": 86, "45656": 86, "45717": 86, "45777": 86, "45836": 86, "45894": 86, "45956": 86, "46015": 86, "46073": 86, "46131": 86, "46190": 86, "46252": 86, "46314": 86, "46376": 86, "46436": 86, "46496": 86, "46556": 86, "46628": 86, "46708": 86, "46789": 86, "46861": 86, "46929": 86, "46995": 86, "47059": 86, "47121": 86, "47182": 86, "47242": 86, "47300": 86, "47358": 86, "47417": 86, "47475": 86, "47533": 86, "47595": 86, "47654": 86, "47715": 86, "47775": 86, "47834": 86, "47897": 86, "47957": 86, "48017": 86, "48077": 86, "48136": 86, "48197": 86, "48256": 86, "48318": 86, "48378": 86, "48441": 86, "48501": 86, "48559": 86, "48617": 86, "48682": 86, "48743": 86, "48803": 86, "48864": 86, "48923": 86, "48982": 86, "49043": 86, "49105": 86, "49165": 86, "49225": 86, "49287": 86, "49348": 86, "49408": 86, "49465": 86, "49523": 86, "49583": 86, "49641": 86, "49702": 86, "49761": 86, "49816": 86, "49896": 86, "49971": 86, "50036": 86, "50098": 86, "50160": 86, "50221": 86, "50282": 86, "50342": 86, "50401": 86, "50463": 86, "50523": 86, "50582": 86, "50644": 86, "50707": 86, "50768": 86, "50829": 86, "50892": 86, "50953": 86, "51013": 86, "51072": 86, "51133": 86, "51192": 86, "51253": 86, "51312": 86, "51371": 86, "51434": 86, "51494": 86, "51554": 86, "51614": 86, "51673": 86, "51732": 86, "51791": 86, "51850": 86, "51908": 86, "51966": 86, "52028": 86, "52087": 86, "52210": 86, "52272": 86, "52332": 86, "52393": 86, "52453": 86, "52515": 86, "52575": 86, "52635": 86, "52695": 86, "52755": 86, "52814": 86, "52877": 86, "52937": 86, "53014": 86, "53096": 86, "53170": 86, "53241": 86, "53308": 86, "53372": 86, "53435": 86, "53497": 86, "53559": 86, "53620": 86, "53681": 86, "53739": 86, "53798": 86, "53859": 86, "53921": 86, "53982": 86, "54047": 86, "54108": 86, "54168": 86, "54230": 86, "54292": 86, "54355": 86, "54416": 86, "54475": 86, "54600": 86, "54721": 86, "54781": 86, "54840": 86, "54899": 86, "54959": 86, "55018": 86, "55078": 86, "55139": 86, "55200": 86, "55259": 86, "55320": 86, "55382": 86, "55441": 86, "55501": 86, "55559": 86, "55618": 86, "55684": 86, "55748": 86, "55813": 86, "55875": 86, "55938": 86, "55999": 86, "56060": 86, "56120": 86, "56187": 86, "56259": 86, "56329": 86, "56394": 86, "56457": 86, "56517": 86, "56577": 86, "56637": 86, "56696": 86, "56755": 86, "56816": 86, "56876": 86, "56939": 86, "57001": 86, "57062": 86, "57126": 86, "57250": 86, "57314": 86, "57376": 86, "57438": 86, "57499": 86, "57559": 86, "single_peak_mask": 90, "2646": 93, "063": 94, "examples_built_reconstruct": 96, "640x480": [97, 98, 105, 106, 107], "998363733291626": 101, "6401262283325195": 101, "38399": 103, "57997": 103, "46935": 103, "357605": 103, "70613": 103, "00001": [103, 106], "511505": 103, "32039": 103, "232216": 103, "77921": 103, "14425": 103, "19761": 103, "96389": 103, "99999": [103, 106], "195205": 103, "391754": 103, "773254": 103, "26481": 103, "818726": 103, "945564": 103, "12815": 103, "529335": 103, "99735": 103, "59097": 103, "39428": 103, "35901": 103, "08593": 103, "9184668": 103, "04836": 103, "811745": 103, "813194": 103, "31409": 103, "539505": 103, "62846": 103, "748116": 103, "96909": 103, "10664": 103, "97683": 103, "18689": 103, "738045": 103, "76541": 103, "99135": 103, "97298": 103, "17303": 103, "87969": 103, "326607": 103, "examples_built_registr": 104, "87221": 106, "88522": 106, "86069": 106, "99708": 106, "999725": 106, "99444": 106, "0x2a610ddf0": 113, "0x2a580dd30": 113, "0x2c4c13b50": [], "83774": [], "9259": [], "322784": [], "108505": [], "84363": [], "91885": [], "40357": [], "25677": [], "7293": [], "48337": [], "60328": [], "137825": [], "238976": [], "51007": [], "29447": [], "04564": [], "460205": [], "542404": [], "6024": [], "14851": [], "84209": [], "98937": [], "57682": [], "63652": [], "72344": [], "60828": [], "939186": [], "40846": [], "158745": [], "745346": [], "002625": [], "82582": [], "02451": [], "06974": [], "examples_built_segment": 116, "78566002845764": 117, "examples_built_simul": 120, "073": [120, 121], "094": [124, 129], "6833333333333333": 125, "9583333333333333": 125, "examples_built_streamline_analysi": 129, "012": [129, 131], "examples_built_visu": 133, "tar": 134, "38477": 134, "97756fbef11ce2df31f1bedf1fc7aac7": 134, "examples_built_workflow": 140, "netohe2020": [73, 176], "k_aniso": [73, 176, 183], "k_iso": [73, 176, 183], "k_micro": [73, 176, 183], "novellol2022": 73, "alvesr2022": 73, "correlationtensormodel": [73, 183], "diffusionkurtosistensorfit": 73, "necess": 73, "e_": 73, "q_1": 73, "q_2": 73, "1i": 73, "1j": 73, "2i": 73, "2j": 73, "1k": 73, "1l": 73, "2k": 73, "z_": 73, "4th": 73, "diffusionkurtosi": 73, "netohe2021": 73, "fbvals1": 73, "fbvecs1": 73, "fbvals2": 73, "fbvecs2": 73, "cti_rat1": 73, "bvals1": 73, "bvecs1": 73, "bvals2": 73, "bvecs2": 73, "filefdata": 73, "bvec1": 73, "bvec2": 73, "gtab1": [73, 176], "gtab2": [73, 176], "mask_affin": 73, "ctimodel": 73, "ctifit": 73, "correlationtensorfit": [73, 183], "inher": 73, "kiso_map": 73, "kaniso_map": 73, "kmicro_map": 73, "slice_idx": 73, "kiso": 73, "kaniso": 73, "kmicro": 73, "116605": [73, 176], "novello": 73, "ianu": 73, "feiweier": 73, "jovicich": 73, "119137": 73, "alv": 73, "kerkel\u00e4": 73, "chavarr\u00eda": 73, "deciph": 73, "stroke": 73, "118833": 73, "nethe2021": 73, "28938": 73, "reconst_cti": 73, "e501": 115, "cgohlk": 170, "rkern": 170, "pii": 170, "s0167947306001836": 170, "cti_param": 176, "twenti": 176, "aniso": 176, "d_c": 176, "rangl": 176, "k_total": [176, 183], "excess": 176, "2d_": 176, "plu": 176, "ccti": 176, "paulbourk": 180, "circlespher": 180, "readthedoc": 180, "from_qte_to_cti": 183, "multi_gaussian_k_from_c": 183, "split_cti_param": 183, "cti_predict": 183, "params_to_cti_param": 183, "ls_fit_cti": 183, "cti_design_matrix": 183, "bdg": [45, 164], "danger": [45, 164]}, "objects": {"": [[166, 0, 0, "-", "dipy"]], "dipy": [[167, 0, 0, "-", "__config__"], [168, 0, 0, "-", "align"], [169, 0, 0, "-", "boots"], [170, 0, 0, "-", "core"], [171, 0, 0, "-", "data"], [172, 0, 0, "-", "denoise"], [173, 0, 0, "-", "direction"], [166, 3, 1, "", "get_info"], [174, 0, 0, "-", "io"], [175, 0, 0, "-", "nn"], [176, 0, 0, "-", "reconst"], [177, 0, 0, "-", "segment"], [178, 0, 0, "-", "sims"], [179, 0, 0, "-", "stats"], [180, 0, 0, "-", "tracking"], [181, 0, 0, "-", "viz"], [182, 0, 0, "-", "workflows"]], "dipy.align": [[168, 1, 1, "", "Bunch"], [168, 3, 1, "", "VerbosityLevels"], [168, 0, 0, "-", "_public"], [168, 0, 0, "-", "bundlemin"], [168, 0, 0, "-", "cpd"], [168, 0, 0, "-", "crosscorr"], [168, 0, 0, "-", "expectmax"], [168, 0, 0, "-", "imaffine"], [168, 0, 0, "-", "imwarp"], [168, 0, 0, "-", "metrics"], [168, 0, 0, "-", "parzenhist"], [168, 0, 0, "-", "reslice"], [168, 0, 0, "-", "scalespace"], [168, 0, 0, "-", "streamlinear"], [168, 0, 0, "-", "streamwarp"], [168, 0, 0, "-", "sumsqdiff"], [168, 0, 0, "-", "transforms"], [168, 0, 0, "-", "vector_fields"]], "dipy.align.Bunch": [[168, 2, 1, "", "__init__"]], "dipy.align._public": [[168, 3, 1, "", "_METHOD_DICT"], [168, 3, 1, "", "affine"], [168, 3, 1, "", "affine_registration"], [168, 3, 1, "", "center_of_mass"], [168, 3, 1, "", "motion_correction"], [168, 3, 1, "", "read_mapping"], [168, 3, 1, "", "register_dwi_series"], [168, 3, 1, "", "register_dwi_to_template"], [168, 3, 1, "", "register_series"], [168, 3, 1, "", "resample"], [168, 3, 1, "", "rigid"], [168, 3, 1, "", "rigid_isoscaling"], [168, 3, 1, "", "rigid_scaling"], [168, 3, 1, "", "streamline_registration"], [168, 3, 1, "", "syn_registration"], [168, 3, 1, "", "translation"], [168, 3, 1, "", "write_mapping"]], "dipy.align.bundlemin": [[168, 3, 1, "", "determine_num_threads"], [168, 3, 1, "", "distance_matrix_mdf"]], "dipy.align.cpd": [[168, 1, 1, "", "DeformableRegistration"], [168, 3, 1, "", "gaussian_kernel"], [168, 3, 1, "", "initialize_sigma2"], [168, 3, 1, "", "low_rank_eigen"], [168, 3, 1, "", "lowrankQS"]], "dipy.align.cpd.DeformableRegistration": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "expectation"], [168, 2, 1, "", "get_registration_parameters"], [168, 2, 1, "", "iterate"], [168, 2, 1, "", "maximization"], [168, 2, 1, "", "register"], [168, 2, 1, "", "transform_point_cloud"], [168, 2, 1, "", "update_transform"], [168, 2, 1, "", "update_variance"]], "dipy.align.crosscorr": [[168, 3, 1, "", "compute_cc_backward_step_2d"], [168, 3, 1, "", "compute_cc_backward_step_3d"], [168, 3, 1, "", "compute_cc_forward_step_2d"], [168, 3, 1, "", "compute_cc_forward_step_3d"], [168, 3, 1, "", "precompute_cc_factors_2d"], [168, 3, 1, "", "precompute_cc_factors_2d_test"], [168, 3, 1, "", "precompute_cc_factors_3d"], [168, 3, 1, "", "precompute_cc_factors_3d_test"]], "dipy.align.expectmax": [[168, 3, 1, "", "compute_em_demons_step_2d"], [168, 3, 1, "", "compute_em_demons_step_3d"], [168, 3, 1, "", "compute_masked_class_stats_2d"], [168, 3, 1, "", "compute_masked_class_stats_3d"], [168, 3, 1, "", "quantize_positive_2d"], [168, 3, 1, "", "quantize_positive_3d"]], "dipy.align.imaffine": [[168, 1, 1, "", "AffineInvalidValuesError"], [168, 1, 1, "", "AffineInversionError"], [168, 1, 1, "", "AffineMap"], [168, 1, 1, "", "AffineRegistration"], [168, 1, 1, "", "MutualInformationMetric"], [168, 3, 1, "", "_transform_method"], [168, 3, 1, "", "transform_centers_of_mass"], [168, 3, 1, "", "transform_geometric_centers"], [168, 3, 1, "", "transform_origins"]], "dipy.align.imaffine.AffineInvalidValuesError": [[168, 2, 1, "", "__init__"]], "dipy.align.imaffine.AffineInversionError": [[168, 2, 1, "", "__init__"]], "dipy.align.imaffine.AffineMap": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "get_affine"], [168, 2, 1, "", "set_affine"], [168, 2, 1, "", "transform"], [168, 2, 1, "", "transform_inverse"]], "dipy.align.imaffine.AffineRegistration": [[168, 2, 1, "", "__init__"], [168, 4, 1, "", "docstring_addendum"], [168, 2, 1, "", "optimize"]], "dipy.align.imaffine.MutualInformationMetric": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "distance"], [168, 2, 1, "", "distance_and_gradient"], [168, 2, 1, "", "gradient"], [168, 2, 1, "", "setup"]], "dipy.align.imwarp": [[168, 1, 1, "", "DiffeomorphicMap"], [168, 1, 1, "", "DiffeomorphicRegistration"], [168, 3, 1, "", "RegistrationStages"], [168, 1, 1, "", "SymmetricDiffeomorphicRegistration"], [168, 3, 1, "", "get_direction_and_spacings"], [168, 3, 1, "", "logger"], [168, 3, 1, "", "mult_aff"]], "dipy.align.imwarp.DiffeomorphicMap": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "allocate"], [168, 2, 1, "", "compute_inversion_error"], [168, 2, 1, "", "expand_fields"], [168, 2, 1, "", "get_backward_field"], [168, 2, 1, "", "get_forward_field"], [168, 2, 1, "", "get_simplified_transform"], [168, 2, 1, "", "interpret_matrix"], [168, 2, 1, "", "inverse"], [168, 2, 1, "", "shallow_copy"], [168, 2, 1, "", "transform"], [168, 2, 1, "", "transform_inverse"], [168, 2, 1, "", "transform_points"], [168, 2, 1, "", "transform_points_inverse"], [168, 2, 1, "", "warp_endomorphism"]], "dipy.align.imwarp.DiffeomorphicRegistration": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "get_map"], [168, 2, 1, "", "optimize"], [168, 2, 1, "", "set_level_iters"]], "dipy.align.imwarp.SymmetricDiffeomorphicRegistration": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "get_map"], [168, 2, 1, "", "optimize"], [168, 2, 1, "", "update"]], "dipy.align.metrics": [[168, 1, 1, "", "CCMetric"], [168, 1, 1, "", "EMMetric"], [168, 1, 1, "", "SSDMetric"], [168, 1, 1, "", "SimilarityMetric"], [168, 3, 1, "", "v_cycle_2d"], [168, 3, 1, "", "v_cycle_3d"]], "dipy.align.metrics.CCMetric": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "compute_backward"], [168, 2, 1, "", "compute_forward"], [168, 2, 1, "", "free_iteration"], [168, 2, 1, "", "get_energy"], [168, 2, 1, "", "initialize_iteration"]], "dipy.align.metrics.EMMetric": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "compute_backward"], [168, 2, 1, "", "compute_demons_step"], [168, 2, 1, "", "compute_forward"], [168, 2, 1, "", "compute_gauss_newton_step"], [168, 2, 1, "", "free_iteration"], [168, 2, 1, "", "get_energy"], [168, 2, 1, "", "initialize_iteration"], [168, 2, 1, "", "use_moving_image_dynamics"], [168, 2, 1, "", "use_static_image_dynamics"]], "dipy.align.metrics.SSDMetric": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "compute_backward"], [168, 2, 1, "", "compute_demons_step"], [168, 2, 1, "", "compute_forward"], [168, 2, 1, "", "compute_gauss_newton_step"], [168, 2, 1, "", "free_iteration"], [168, 2, 1, "", "get_energy"], [168, 2, 1, "", "initialize_iteration"]], "dipy.align.metrics.SimilarityMetric": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "compute_backward"], [168, 2, 1, "", "compute_forward"], [168, 2, 1, "", "free_iteration"], [168, 2, 1, "", "get_energy"], [168, 2, 1, "", "initialize_iteration"], [168, 2, 1, "", "set_levels_above"], [168, 2, 1, "", "set_levels_below"], [168, 2, 1, "", "set_moving_image"], [168, 2, 1, "", "set_static_image"], [168, 2, 1, "", "use_moving_image_dynamics"], [168, 2, 1, "", "use_static_image_dynamics"]], "dipy.align.parzenhist": [[168, 1, 1, "", "ParzenJointHistogram"], [168, 3, 1, "", "compute_parzen_mi"], [168, 3, 1, "", "cubic_spline"], [168, 3, 1, "", "cubic_spline_derivative"], [168, 3, 1, "", "sample_domain_regular"]], "dipy.align.parzenhist.ParzenJointHistogram": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "bin_index"], [168, 2, 1, "", "bin_normalize_moving"], [168, 2, 1, "", "bin_normalize_static"], [168, 2, 1, "", "setup"], [168, 2, 1, "", "update_gradient_dense"], [168, 2, 1, "", "update_gradient_sparse"], [168, 2, 1, "", "update_pdfs_dense"], [168, 2, 1, "", "update_pdfs_sparse"]], "dipy.align.reslice": [[168, 3, 1, "", "reslice"]], "dipy.align.scalespace": [[168, 1, 1, "", "IsotropicScaleSpace"], [168, 1, 1, "", "ScaleSpace"], [168, 3, 1, "", "logger"]], "dipy.align.scalespace.IsotropicScaleSpace": [[168, 2, 1, "", "__init__"]], "dipy.align.scalespace.ScaleSpace": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "get_affine"], [168, 2, 1, "", "get_affine_inv"], [168, 2, 1, "", "get_domain_shape"], [168, 2, 1, "", "get_expand_factors"], [168, 2, 1, "", "get_image"], [168, 2, 1, "", "get_scaling"], [168, 2, 1, "", "get_sigmas"], [168, 2, 1, "", "get_spacing"], [168, 2, 1, "", "print_level"]], "dipy.align.streamlinear": [[168, 1, 1, "", "BundleMinDistanceAsymmetricMetric"], [168, 1, 1, "", "BundleMinDistanceMatrixMetric"], [168, 1, 1, "", "BundleMinDistanceMetric"], [168, 1, 1, "", "BundleSumDistanceMatrixMetric"], [168, 1, 1, "", "JointBundleMinDistanceMetric"], [168, 1, 1, "", "JointStreamlineRegistrationMap"], [168, 1, 1, "", "StreamlineDistanceMetric"], [168, 1, 1, "", "StreamlineLinearRegistration"], [168, 1, 1, "", "StreamlineRegistrationMap"], [168, 3, 1, "", "bundle_min_distance"], [168, 3, 1, "", "bundle_min_distance_asymmetric_fast"], [168, 3, 1, "", "bundle_min_distance_fast"], [168, 3, 1, "", "bundle_sum_distance"], [168, 3, 1, "", "compose_matrix44"], [168, 3, 1, "", "decompose_matrix44"], [168, 3, 1, "", "get_unique_pairs"], [168, 3, 1, "", "groupwise_slr"], [168, 3, 1, "", "logger"], [168, 3, 1, "", "progressive_slr"], [168, 3, 1, "", "remove_clusters_by_size"], [168, 3, 1, "", "slr_with_qbx"]], "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "distance"]], "dipy.align.streamlinear.BundleMinDistanceMatrixMetric": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "distance"], [168, 2, 1, "", "setup"]], "dipy.align.streamlinear.BundleMinDistanceMetric": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "distance"], [168, 2, 1, "", "setup"]], "dipy.align.streamlinear.BundleSumDistanceMatrixMetric": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "distance"]], "dipy.align.streamlinear.JointBundleMinDistanceMetric": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "distance"], [168, 2, 1, "", "setup"]], "dipy.align.streamlinear.JointStreamlineRegistrationMap": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "transform"]], "dipy.align.streamlinear.StreamlineDistanceMetric": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "distance"], [168, 2, 1, "", "setup"]], "dipy.align.streamlinear.StreamlineLinearRegistration": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "optimize"]], "dipy.align.streamlinear.StreamlineRegistrationMap": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "transform"]], "dipy.align.streamwarp": [[168, 3, 1, "", "average_bundle_length"], [168, 3, 1, "", "bundlewarp"], [168, 3, 1, "", "bundlewarp_shape_analysis"], [168, 3, 1, "", "bundlewarp_vector_filed"], [168, 3, 1, "", "find_missing"]], "dipy.align.sumsqdiff": [[168, 3, 1, "", "compute_energy_ssd_2d"], [168, 3, 1, "", "compute_energy_ssd_3d"], [168, 3, 1, "", "compute_residual_displacement_field_ssd_2d"], [168, 3, 1, "", "compute_residual_displacement_field_ssd_3d"], [168, 3, 1, "", "compute_ssd_demons_step_2d"], [168, 3, 1, "", "compute_ssd_demons_step_3d"], [168, 3, 1, "", "iterate_residual_displacement_field_ssd_2d"], [168, 3, 1, "", "iterate_residual_displacement_field_ssd_3d"], [168, 3, 1, "", "solve_2d_symmetric_positive_definite"], [168, 3, 1, "", "solve_3d_symmetric_positive_definite"]], "dipy.align.transforms": [[168, 1, 1, "", "AffineTransform2D"], [168, 1, 1, "", "AffineTransform3D"], [168, 1, 1, "", "RigidIsoScalingTransform2D"], [168, 1, 1, "", "RigidIsoScalingTransform3D"], [168, 1, 1, "", "RigidScalingTransform2D"], [168, 1, 1, "", "RigidScalingTransform3D"], [168, 1, 1, "", "RigidTransform2D"], [168, 1, 1, "", "RigidTransform3D"], [168, 1, 1, "", "RotationTransform2D"], [168, 1, 1, "", "RotationTransform3D"], [168, 1, 1, "", "ScalingTransform2D"], [168, 1, 1, "", "ScalingTransform3D"], [168, 1, 1, "", "Transform"], [168, 1, 1, "", "TranslationTransform2D"], [168, 1, 1, "", "TranslationTransform3D"]], "dipy.align.transforms.AffineTransform2D": [[168, 2, 1, "", "__init__"]], "dipy.align.transforms.AffineTransform3D": [[168, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidIsoScalingTransform2D": [[168, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidIsoScalingTransform3D": [[168, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidScalingTransform2D": [[168, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidScalingTransform3D": [[168, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidTransform2D": [[168, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidTransform3D": [[168, 2, 1, "", "__init__"]], "dipy.align.transforms.RotationTransform2D": [[168, 2, 1, "", "__init__"]], "dipy.align.transforms.RotationTransform3D": [[168, 2, 1, "", "__init__"]], "dipy.align.transforms.ScalingTransform2D": [[168, 2, 1, "", "__init__"]], "dipy.align.transforms.ScalingTransform3D": [[168, 2, 1, "", "__init__"]], "dipy.align.transforms.Transform": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "get_dim"], [168, 2, 1, "", "get_identity_parameters"], [168, 2, 1, "", "get_number_of_parameters"], [168, 2, 1, "", "jacobian"], [168, 2, 1, "", "param_to_matrix"]], "dipy.align.transforms.TranslationTransform2D": [[168, 2, 1, "", "__init__"]], "dipy.align.transforms.TranslationTransform3D": [[168, 2, 1, "", "__init__"]], "dipy.align.vector_fields": [[168, 3, 1, "", "compose_vector_fields_2d"], [168, 3, 1, "", "compose_vector_fields_3d"], [168, 3, 1, "", "create_circle"], [168, 3, 1, "", "create_harmonic_fields_2d"], [168, 3, 1, "", "create_harmonic_fields_3d"], [168, 3, 1, "", "create_random_displacement_2d"], [168, 3, 1, "", "create_random_displacement_3d"], [168, 3, 1, "", "create_sphere"], [168, 3, 1, "", "downsample_displacement_field_2d"], [168, 3, 1, "", "downsample_displacement_field_3d"], [168, 3, 1, "", "downsample_scalar_field_2d"], [168, 3, 1, "", "downsample_scalar_field_3d"], [168, 3, 1, "", "gradient"], [168, 3, 1, "", "invert_vector_field_fixed_point_2d"], [168, 3, 1, "", "invert_vector_field_fixed_point_3d"], [168, 3, 1, "", "is_valid_affine"], [168, 3, 1, "", "reorient_vector_field_2d"], [168, 3, 1, "", "reorient_vector_field_3d"], [168, 3, 1, "", "resample_displacement_field_2d"], [168, 3, 1, "", "resample_displacement_field_3d"], [168, 3, 1, "", "simplify_warp_function_2d"], [168, 3, 1, "", "simplify_warp_function_3d"], [168, 3, 1, "", "sparse_gradient"], [168, 3, 1, "", "transform_2d_affine"], [168, 3, 1, "", "transform_2d_affine_nn"], [168, 3, 1, "", "transform_3d_affine"], [168, 3, 1, "", "transform_3d_affine_nn"], [168, 3, 1, "", "warp_2d"], [168, 3, 1, "", "warp_2d_nn"], [168, 3, 1, "", "warp_3d"], [168, 3, 1, "", "warp_3d_nn"], [168, 3, 1, "", "warp_coordinates_2d"], [168, 3, 1, "", "warp_coordinates_3d"]], "dipy.core": [[170, 0, 0, "-", "benchmarks"], [170, 0, 0, "-", "geometry"], [170, 0, 0, "-", "gradients"], [170, 0, 0, "-", "graph"], [170, 0, 0, "-", "histeq"], [170, 0, 0, "-", "interpolation"], [170, 0, 0, "-", "ndindex"], [170, 0, 0, "-", "onetime"], [170, 0, 0, "-", "optimize"], [170, 0, 0, "-", "profile"], [170, 0, 0, "-", "rng"], [170, 0, 0, "-", "sphere"], [170, 0, 0, "-", "sphere_stats"], [170, 0, 0, "-", "subdivide_octahedron"], [170, 0, 0, "-", "wavelet"]], "dipy.core.benchmarks": [[170, 0, 0, "-", "bench_sphere"]], "dipy.core.benchmarks.bench_sphere": [[170, 1, 1, "", "Timer"], [170, 3, 1, "", "bench_disperse_charges_alt"], [170, 3, 1, "", "func_minimize_adhoc"], [170, 3, 1, "", "func_minimize_scipy"]], "dipy.core.benchmarks.bench_sphere.Timer": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "duration_in_seconds"]], "dipy.core.geometry": [[170, 3, 1, "", "_TUPLE2AXES"], [170, 3, 1, "", "cart2sphere"], [170, 3, 1, "", "cart_distance"], [170, 3, 1, "", "circumradius"], [170, 3, 1, "", "compose_matrix"], [170, 3, 1, "", "compose_transformations"], [170, 3, 1, "", "decompose_matrix"], [170, 3, 1, "", "dist_to_corner"], [170, 3, 1, "", "euler_matrix"], [170, 3, 1, "", "is_hemispherical"], [170, 3, 1, "", "lambert_equal_area_projection_cart"], [170, 3, 1, "", "lambert_equal_area_projection_polar"], [170, 3, 1, "", "nearest_pos_semi_def"], [170, 3, 1, "", "normalized_vector"], [170, 3, 1, "", "perpendicular_directions"], [170, 3, 1, "", "rodrigues_axis_rotation"], [170, 3, 1, "", "sph2latlon"], [170, 3, 1, "", "sphere2cart"], [170, 3, 1, "", "sphere_distance"], [170, 3, 1, "", "vec2vec_rotmat"], [170, 3, 1, "", "vector_cosine"], [170, 3, 1, "", "vector_norm"]], "dipy.core.gradients": [[170, 1, 1, "", "GradientTable"], [170, 3, 1, "", "btens_to_params"], [170, 3, 1, "", "check_multi_b"], [170, 3, 1, "", "generate_bvecs"], [170, 3, 1, "", "get_bval_indices"], [170, 3, 1, "", "gradient_table"], [170, 3, 1, "", "gradient_table_from_bvals_bvecs"], [170, 3, 1, "", "gradient_table_from_gradient_strength_bvecs"], [170, 3, 1, "", "gradient_table_from_qvals_bvecs"], [170, 3, 1, "", "logger"], [170, 3, 1, "", "orientation_from_string"], [170, 3, 1, "", "orientation_to_string"], [170, 3, 1, "", "ornt_mapping"], [170, 3, 1, "", "params_to_btens"], [170, 3, 1, "", "reorient_bvecs"], [170, 3, 1, "", "reorient_on_axis"], [170, 3, 1, "", "reorient_vectors"], [170, 3, 1, "", "round_bvals"], [170, 3, 1, "", "unique_bvals"], [170, 3, 1, "", "unique_bvals_magnitude"], [170, 3, 1, "", "unique_bvals_tolerance"]], "dipy.core.gradients.GradientTable": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "b0s_mask"], [170, 2, 1, "", "bvals"], [170, 2, 1, "", "bvecs"], [170, 2, 1, "", "gradient_strength"], [170, 5, 1, "", "info"], [170, 2, 1, "", "qvals"], [170, 2, 1, "", "tau"]], "dipy.core.graph": [[170, 1, 1, "", "Graph"]], "dipy.core.graph.Graph": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "add_edge"], [170, 2, 1, "", "add_node"], [170, 2, 1, "", "all_paths"], [170, 2, 1, "", "children"], [170, 2, 1, "", "del_node"], [170, 2, 1, "", "del_node_and_edges"], [170, 2, 1, "", "down"], [170, 2, 1, "", "down_short"], [170, 2, 1, "", "parents"], [170, 2, 1, "", "shortest_path"], [170, 2, 1, "", "up"], [170, 2, 1, "", "up_short"]], "dipy.core.histeq": [[170, 3, 1, "", "histeq"]], "dipy.core.interpolation": [[170, 1, 1, "", "Interpolator"], [170, 1, 1, "", "NearestNeighborInterpolator"], [170, 1, 1, "", "OutsideImage"], [170, 1, 1, "", "TriLinearInterpolator"], [170, 3, 1, "", "interp_rbf"], [170, 3, 1, "", "interpolate_scalar_2d"], [170, 3, 1, "", "interpolate_scalar_3d"], [170, 3, 1, "", "interpolate_scalar_nn_2d"], [170, 3, 1, "", "interpolate_scalar_nn_3d"], [170, 3, 1, "", "interpolate_vector_2d"], [170, 3, 1, "", "interpolate_vector_3d"], [170, 3, 1, "", "map_coordinates_trilinear_iso"], [170, 3, 1, "", "nearestneighbor_interpolate"], [170, 3, 1, "", "trilinear_interp"], [170, 3, 1, "", "trilinear_interpolate4d"]], "dipy.core.interpolation.Interpolator": [[170, 2, 1, "", "__init__"]], "dipy.core.interpolation.NearestNeighborInterpolator": [[170, 2, 1, "", "__init__"]], "dipy.core.interpolation.OutsideImage": [[170, 2, 1, "", "__init__"]], "dipy.core.interpolation.TriLinearInterpolator": [[170, 2, 1, "", "__init__"]], "dipy.core.ndindex": [[170, 3, 1, "", "ndindex"]], "dipy.core.onetime": [[170, 1, 1, "", "OneTimeProperty"], [170, 1, 1, "", "ResetMixin"], [170, 3, 1, "", "auto_attr"]], "dipy.core.onetime.OneTimeProperty": [[170, 2, 1, "", "__init__"]], "dipy.core.onetime.ResetMixin": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "reset"]], "dipy.core.optimize": [[170, 1, 1, "", "NonNegativeLeastSquares"], [170, 1, 1, "", "Optimizer"], [170, 1, 1, "", "PositiveDefiniteLeastSquares"], [170, 1, 1, "", "SKLearnLinearSolver"], [170, 3, 1, "", "sparse_nnls"], [170, 3, 1, "", "spdot"]], "dipy.core.optimize.NonNegativeLeastSquares": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"]], "dipy.core.optimize.Optimizer": [[170, 2, 1, "", "__init__"], [170, 5, 1, "", "evolution"], [170, 5, 1, "", "fopt"], [170, 5, 1, "", "message"], [170, 5, 1, "", "nfev"], [170, 5, 1, "", "nit"], [170, 2, 1, "", "print_summary"], [170, 5, 1, "", "xopt"]], "dipy.core.optimize.PositiveDefiniteLeastSquares": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "solve"]], "dipy.core.optimize.SKLearnLinearSolver": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fit"], [170, 2, 1, "", "predict"]], "dipy.core.profile": [[170, 1, 1, "", "Profiler"]], "dipy.core.profile.Profiler": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "print_stats"]], "dipy.core.rng": [[170, 3, 1, "", "LEcuyer"], [170, 3, 1, "", "WichmannHill1982"], [170, 3, 1, "", "WichmannHill2006"]], "dipy.core.sphere": [[170, 1, 1, "", "HemiSphere"], [170, 1, 1, "", "Sphere"], [170, 3, 1, "", "disperse_charges"], [170, 3, 1, "", "disperse_charges_alt"], [170, 3, 1, "", "euler_characteristic_check"], [170, 3, 1, "", "faces_from_sphere_vertices"], [170, 3, 1, "", "hemi_icosahedron"], [170, 3, 1, "", "icosahedron_faces"], [170, 3, 1, "", "icosahedron_vertices"], [170, 3, 1, "", "octahedron_faces"], [170, 3, 1, "", "octahedron_vertices"], [170, 3, 1, "", "unique_edges"], [170, 3, 1, "", "unique_sets"], [170, 3, 1, "", "unit_icosahedron"], [170, 3, 1, "", "unit_octahedron"]], "dipy.core.sphere.HemiSphere": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "faces"], [170, 2, 1, "", "find_closest"], [170, 2, 1, "", "from_sphere"], [170, 2, 1, "", "mirror"], [170, 2, 1, "", "subdivide"]], "dipy.core.sphere.Sphere": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "edges"], [170, 2, 1, "", "faces"], [170, 2, 1, "", "find_closest"], [170, 2, 1, "", "subdivide"], [170, 2, 1, "", "vertices"], [170, 5, 1, "", "x"], [170, 5, 1, "", "y"], [170, 5, 1, "", "z"]], "dipy.core.sphere_stats": [[170, 3, 1, "", "angular_similarity"], [170, 3, 1, "", "compare_orientation_sets"], [170, 3, 1, "", "eigenstats"], [170, 3, 1, "", "random_uniform_on_sphere"]], "dipy.core.subdivide_octahedron": [[170, 3, 1, "", "create_unit_hemisphere"], [170, 3, 1, "", "create_unit_sphere"]], "dipy.core.wavelet": [[170, 3, 1, "", "afb3D"], [170, 3, 1, "", "afb3D_A"], [170, 3, 1, "", "cshift3D"], [170, 3, 1, "", "dwt3D"], [170, 3, 1, "", "idwt3D"], [170, 3, 1, "", "permutationinverse"], [170, 3, 1, "", "sfb3D"], [170, 3, 1, "", "sfb3D_A"]], "dipy.data": [[171, 3, 1, "", "DATA_DIR"], [171, 1, 1, "", "DataError"], [171, 3, 1, "", "default_sphere"], [171, 3, 1, "", "dsi_deconv_voxels"], [171, 3, 1, "", "dsi_voxels"], [171, 0, 0, "-", "fetcher"], [171, 3, 1, "", "get_3shell_gtab"], [171, 3, 1, "", "get_cmap"], [171, 3, 1, "", "get_gtab_taiwan_dsi"], [171, 3, 1, "", "get_isbi2013_2shell_gtab"], [171, 3, 1, "", "get_sim_voxels"], [171, 3, 1, "", "get_skeleton"], [171, 3, 1, "", "get_sphere"], [171, 3, 1, "", "load_sdp_constraints"], [171, 3, 1, "", "loads_compat"], [171, 3, 1, "", "matlab_life_results"], [171, 3, 1, "", "mrtrix_spherical_functions"], [171, 3, 1, "", "small_sphere"], [171, 3, 1, "", "two_cingulum_bundles"]], "dipy.data.DataError": [[171, 2, 1, "", "__init__"]], "dipy.data.fetcher": [[171, 3, 1, "", "check_md5"], [171, 3, 1, "", "copyfileobj_withprogress"], [171, 3, 1, "", "extract_example_tracts"], [171, 3, 1, "", "fetch_DiB_217_lte_pte_ste"], [171, 3, 1, "", "fetch_DiB_70_lte_pte_ste"], [171, 3, 1, "", "fetch_bundle_atlas_hcp842"], [171, 3, 1, "", "fetch_bundle_fa_hcp"], [171, 3, 1, "", "fetch_bundle_warp_dataset"], [171, 3, 1, "", "fetch_bundles_2_subjects"], [171, 3, 1, "", "fetch_cenir_multib"], [171, 3, 1, "", "fetch_cfin_multib"], [171, 3, 1, "", "fetch_cti_rat1"], [171, 3, 1, "", "fetch_data"], [171, 3, 1, "", "fetch_evac_test"], [171, 3, 1, "", "fetch_evac_weights"], [171, 3, 1, "", "fetch_file_formats"], [171, 3, 1, "", "fetch_fury_surface"], [171, 3, 1, "", "fetch_gold_standard_io"], [171, 3, 1, "", "fetch_hbn"], [171, 3, 1, "", "fetch_hcp"], [171, 3, 1, "", "fetch_isbi2013_2shell"], [171, 3, 1, "", "fetch_ivim"], [171, 3, 1, "", "fetch_mni_template"], [171, 3, 1, "", "fetch_ptt_minimal_dataset"], [171, 3, 1, "", "fetch_qtdMRI_test_retest_2subjects"], [171, 3, 1, "", "fetch_qte_lte_pte"], [171, 3, 1, "", "fetch_resdnn_weights"], [171, 3, 1, "", "fetch_scil_b0"], [171, 3, 1, "", "fetch_sherbrooke_3shell"], [171, 3, 1, "", "fetch_stanford_hardi"], [171, 3, 1, "", "fetch_stanford_labels"], [171, 3, 1, "", "fetch_stanford_pve_maps"], [171, 3, 1, "", "fetch_stanford_t1"], [171, 3, 1, "", "fetch_stanford_tracks"], [171, 3, 1, "", "fetch_syn_data"], [171, 3, 1, "", "fetch_synb0_test"], [171, 3, 1, "", "fetch_synb0_weights"], [171, 3, 1, "", "fetch_taiwan_ntu_dsi"], [171, 3, 1, "", "fetch_target_tractogram_hcp"], [171, 3, 1, "", "fetch_tissue_data"], [171, 3, 1, "", "get_bundle_atlas_hcp842"], [171, 3, 1, "", "get_file_formats"], [171, 3, 1, "", "get_fnames"], [171, 3, 1, "", "get_target_tractogram_hcp"], [171, 3, 1, "", "get_two_hcp842_bundles"], [171, 3, 1, "", "read_DiB_217_lte_pte_ste"], [171, 3, 1, "", "read_DiB_70_lte_pte_ste"], [171, 3, 1, "", "read_bundles_2_subjects"], [171, 3, 1, "", "read_cenir_multib"], [171, 3, 1, "", "read_cfin_dwi"], [171, 3, 1, "", "read_cfin_t1"], [171, 3, 1, "", "read_five_af_bundles"], [171, 3, 1, "", "read_isbi2013_2shell"], [171, 3, 1, "", "read_ivim"], [171, 3, 1, "", "read_mni_template"], [171, 3, 1, "", "read_qtdMRI_test_retest_2subjects"], [171, 3, 1, "", "read_qte_lte_pte"], [171, 3, 1, "", "read_scil_b0"], [171, 3, 1, "", "read_sherbrooke_3shell"], [171, 3, 1, "", "read_siemens_scil_b0"], [171, 3, 1, "", "read_stanford_hardi"], [171, 3, 1, "", "read_stanford_labels"], [171, 3, 1, "", "read_stanford_pve_maps"], [171, 3, 1, "", "read_stanford_t1"], [171, 3, 1, "", "read_syn_data"], [171, 3, 1, "", "read_taiwan_ntu_dsi"], [171, 3, 1, "", "read_tissue_data"], [171, 3, 1, "", "to_bids_description"]], "dipy.denoise": [[172, 0, 0, "-", "adaptive_soft_matching"], [172, 0, 0, "-", "denspeed"], [172, 0, 0, "-", "enhancement_kernel"], [172, 0, 0, "-", "gibbs"], [172, 0, 0, "-", "localpca"], [172, 0, 0, "-", "nlmeans"], [172, 0, 0, "-", "nlmeans_block"], [172, 0, 0, "-", "noise_estimate"], [172, 0, 0, "-", "non_local_means"], [172, 0, 0, "-", "patch2self"], [172, 0, 0, "-", "pca_noise_estimate"], [172, 0, 0, "-", "shift_twist_convolution"]], "dipy.denoise.adaptive_soft_matching": [[172, 3, 1, "", "adaptive_soft_matching"]], "dipy.denoise.denspeed": [[172, 3, 1, "", "add_padding_reflection"], [172, 3, 1, "", "correspond_indices"], [172, 3, 1, "", "determine_num_threads"], [172, 3, 1, "", "nlmeans_3d"], [172, 3, 1, "", "remove_padding"]], "dipy.denoise.enhancement_kernel": [[172, 1, 1, "", "EnhancementKernel"], [172, 1, 1, "", "HemiSphere"], [172, 1, 1, "", "Sphere"], [172, 3, 1, "", "ceil"], [172, 3, 1, "", "disperse_charges"], [172, 3, 1, "", "get_sphere"], [172, 3, 1, "", "gettempdir"]], "dipy.denoise.enhancement_kernel.EnhancementKernel": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "evaluate_kernel"], [172, 2, 1, "", "get_lookup_table"], [172, 2, 1, "", "get_orientations"], [172, 2, 1, "", "get_sphere"]], "dipy.denoise.enhancement_kernel.HemiSphere": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "faces"], [172, 2, 1, "", "find_closest"], [172, 2, 1, "", "from_sphere"], [172, 2, 1, "", "mirror"], [172, 2, 1, "", "subdivide"]], "dipy.denoise.enhancement_kernel.Sphere": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "edges"], [172, 2, 1, "", "faces"], [172, 2, 1, "", "find_closest"], [172, 2, 1, "", "subdivide"], [172, 2, 1, "", "vertices"], [172, 5, 1, "", "x"], [172, 5, 1, "", "y"], [172, 5, 1, "", "z"]], "dipy.denoise.gibbs": [[172, 3, 1, "", "gibbs_removal"]], "dipy.denoise.localpca": [[172, 3, 1, "", "genpca"], [172, 3, 1, "", "localpca"], [172, 3, 1, "", "mppca"]], "dipy.denoise.nlmeans": [[172, 3, 1, "", "nlmeans"]], "dipy.denoise.nlmeans_block": [[172, 3, 1, "", "firdn"], [172, 3, 1, "", "nlmeans_block"], [172, 3, 1, "", "upfir"]], "dipy.denoise.noise_estimate": [[172, 3, 1, "", "estimate_sigma"], [172, 3, 1, "", "piesno"]], "dipy.denoise.non_local_means": [[172, 3, 1, "", "non_local_means"]], "dipy.denoise.patch2self": [[172, 3, 1, "", "patch2self"]], "dipy.denoise.pca_noise_estimate": [[172, 3, 1, "", "pca_noise_estimate"], [172, 3, 1, "", "warn"]], "dipy.denoise.shift_twist_convolution": [[172, 3, 1, "", "convolve"], [172, 3, 1, "", "convolve_sf"], [172, 3, 1, "", "determine_num_threads"], [172, 3, 1, "", "sf_to_sh"], [172, 3, 1, "", "sh_to_sf"]], "dipy.direction": [[173, 0, 0, "-", "bootstrap_direction_getter"], [173, 0, 0, "-", "closest_peak_direction_getter"], [173, 0, 0, "-", "peaks"], [173, 0, 0, "-", "pmf"], [173, 0, 0, "-", "probabilistic_direction_getter"], [173, 0, 0, "-", "ptt_direction_getter"]], "dipy.direction.bootstrap_direction_getter": [[173, 1, 1, "", "BootDirectionGetter"], [173, 1, 1, "", "BootPmfGen"]], "dipy.direction.bootstrap_direction_getter.BootDirectionGetter": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "from_data"]], "dipy.direction.bootstrap_direction_getter.BootPmfGen": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_pmf"], [173, 2, 1, "", "get_pmf_no_boot"]], "dipy.direction.closest_peak_direction_getter": [[173, 1, 1, "", "BaseDirectionGetter"], [173, 1, 1, "", "BasePmfDirectionGetter"], [173, 1, 1, "", "ClosestPeakDirectionGetter"], [173, 1, 1, "", "PmfGenDirectionGetter"], [173, 3, 1, "", "peak_directions"]], "dipy.direction.closest_peak_direction_getter.BaseDirectionGetter": [[173, 2, 1, "", "__init__"]], "dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "initial_direction"]], "dipy.direction.closest_peak_direction_getter.ClosestPeakDirectionGetter": [[173, 2, 1, "", "__init__"]], "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "from_pmf"], [173, 2, 1, "", "from_shcoeff"]], "dipy.direction.peaks": [[173, 1, 1, "", "PeaksAndMetrics"], [173, 3, 1, "", "peak_directions"], [173, 3, 1, "", "peak_directions_nl"], [173, 3, 1, "", "peaks_from_model"], [173, 3, 1, "", "reshape_peaks_for_visualization"]], "dipy.direction.peaks.PeaksAndMetrics": [[173, 2, 1, "", "__init__"]], "dipy.direction.pmf": [[173, 1, 1, "", "BootPmfGen"], [173, 1, 1, "", "PmfGen"], [173, 1, 1, "", "SHCoeffPmfGen"], [173, 1, 1, "", "SimplePmfGen"]], "dipy.direction.pmf.BootPmfGen": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_pmf"], [173, 2, 1, "", "get_pmf_no_boot"]], "dipy.direction.pmf.PmfGen": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_pmf"], [173, 2, 1, "", "get_pmf_value"]], "dipy.direction.pmf.SHCoeffPmfGen": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_pmf"]], "dipy.direction.pmf.SimplePmfGen": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "get_pmf"], [173, 2, 1, "", "get_pmf_value"]], "dipy.direction.probabilistic_direction_getter": [[173, 1, 1, "", "DeterministicMaximumDirectionGetter"], [173, 1, 1, "", "ProbabilisticDirectionGetter"], [173, 3, 1, "", "random"]], "dipy.direction.probabilistic_direction_getter.DeterministicMaximumDirectionGetter": [[173, 2, 1, "", "__init__"]], "dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter": [[173, 2, 1, "", "__init__"]], "dipy.direction.ptt_direction_getter": [[173, 1, 1, "", "PTTDirectionGetter"], [173, 3, 1, "", "min_radius_curvature_from_angle"]], "dipy.direction.ptt_direction_getter.PTTDirectionGetter": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "generate_streamline"]], "dipy.io": [[174, 0, 0, "-", "bvectxt"], [174, 0, 0, "-", "dpy"], [174, 0, 0, "-", "gradients"], [174, 0, 0, "-", "image"], [174, 0, 0, "-", "peaks"], [174, 0, 0, "-", "pickles"], [174, 0, 0, "-", "stateful_tractogram"], [174, 0, 0, "-", "streamline"], [174, 0, 0, "-", "utils"], [174, 0, 0, "-", "vtk"]], "dipy.io.bvectxt": [[174, 3, 1, "", "orientation_from_string"], [174, 3, 1, "", "orientation_to_string"], [174, 3, 1, "", "ornt_mapping"], [174, 3, 1, "", "read_bvec_file"], [174, 3, 1, "", "reorient_on_axis"], [174, 3, 1, "", "reorient_vectors"]], "dipy.io.dpy": [[174, 1, 1, "", "Dpy"]], "dipy.io.dpy.Dpy": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "close"], [174, 2, 1, "", "read_track"], [174, 2, 1, "", "read_tracks"], [174, 2, 1, "", "read_tracksi"], [174, 2, 1, "", "version"], [174, 2, 1, "", "write_track"], [174, 2, 1, "", "write_tracks"]], "dipy.io.gradients": [[174, 3, 1, "", "read_bvals_bvecs"]], "dipy.io.image": [[174, 3, 1, "", "load_nifti"], [174, 3, 1, "", "load_nifti_data"], [174, 3, 1, "", "save_nifti"], [174, 3, 1, "", "save_qa_metric"]], "dipy.io.peaks": [[174, 3, 1, "", "load_peaks"], [174, 3, 1, "", "peaks_to_niftis"], [174, 3, 1, "", "save_peaks"]], "dipy.io.pickles": [[174, 3, 1, "", "load_pickle"], [174, 3, 1, "", "save_pickle"]], "dipy.io.stateful_tractogram": [[174, 1, 1, "", "Origin"], [174, 1, 1, "", "Space"], [174, 1, 1, "", "StatefulTractogram"], [174, 3, 1, "", "logger"], [174, 3, 1, "", "set_sft_logger_level"]], "dipy.io.stateful_tractogram.Origin": [[174, 4, 1, "", "NIFTI"], [174, 4, 1, "", "TRACKVIS"], [174, 2, 1, "", "__init__"]], "dipy.io.stateful_tractogram.Space": [[174, 4, 1, "", "RASMM"], [174, 4, 1, "", "VOX"], [174, 4, 1, "", "VOXMM"], [174, 2, 1, "", "__init__"]], "dipy.io.stateful_tractogram.StatefulTractogram": [[174, 2, 1, "", "__init__"], [174, 5, 1, "", "affine"], [174, 2, 1, "", "are_compatible"], [174, 2, 1, "", "compute_bounding_box"], [174, 5, 1, "", "data_per_point"], [174, 5, 1, "", "data_per_streamline"], [174, 5, 1, "", "dimensions"], [174, 5, 1, "", "dtype_dict"], [174, 2, 1, "", "from_sft"], [174, 2, 1, "", "get_data_per_point_keys"], [174, 2, 1, "", "get_data_per_streamline_keys"], [174, 2, 1, "", "get_streamlines_copy"], [174, 2, 1, "", "is_bbox_in_vox_valid"], [174, 5, 1, "", "origin"], [174, 2, 1, "", "remove_invalid_streamlines"], [174, 5, 1, "", "space"], [174, 5, 1, "", "space_attributes"], [174, 5, 1, "", "streamlines"], [174, 2, 1, "", "to_center"], [174, 2, 1, "", "to_corner"], [174, 2, 1, "", "to_origin"], [174, 2, 1, "", "to_rasmm"], [174, 2, 1, "", "to_space"], [174, 2, 1, "", "to_vox"], [174, 2, 1, "", "to_voxmm"], [174, 5, 1, "", "voxel_order"], [174, 5, 1, "", "voxel_sizes"]], "dipy.io.streamline": [[174, 3, 1, "", "load_dpy"], [174, 3, 1, "", "load_fib"], [174, 3, 1, "", "load_generator"], [174, 3, 1, "", "load_tck"], [174, 3, 1, "", "load_tractogram"], [174, 3, 1, "", "load_trk"], [174, 3, 1, "", "load_vtk"], [174, 3, 1, "", "load_vtp"], [174, 3, 1, "", "save_dpy"], [174, 3, 1, "", "save_fib"], [174, 3, 1, "", "save_generator"], [174, 3, 1, "", "save_tck"], [174, 3, 1, "", "save_tractogram"], [174, 3, 1, "", "save_trk"], [174, 3, 1, "", "save_vtk"], [174, 3, 1, "", "save_vtp"]], "dipy.io.utils": [[174, 3, 1, "", "create_nifti_header"], [174, 3, 1, "", "create_tractogram_header"], [174, 3, 1, "", "decfa"], [174, 3, 1, "", "decfa_to_float"], [174, 3, 1, "", "get_reference_info"], [174, 3, 1, "", "is_header_compatible"], [174, 3, 1, "", "is_reference_info_valid"], [174, 3, 1, "", "make5d"], [174, 3, 1, "", "nifti1_symmat"], [174, 3, 1, "", "read_img_arr_or_path"], [174, 3, 1, "", "save_buan_profiles_hdf5"]], "dipy.io.vtk": [[174, 3, 1, "", "load_polydata"], [174, 3, 1, "", "load_vtk_streamlines"], [174, 3, 1, "", "save_polydata"], [174, 3, 1, "", "save_vtk_streamlines"]], "dipy.nn": [[175, 0, 0, "-", "cnn_1d_denoising"], [175, 0, 0, "-", "evac"], [175, 0, 0, "-", "histo_resdnn"], [175, 0, 0, "-", "model"], [175, 0, 0, "-", "synb0"], [175, 0, 0, "-", "utils"]], "dipy.nn.cnn_1d_denoising": [[175, 1, 1, "", "Cnn1DDenoiser"]], "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "compile"], [175, 2, 1, "", "evaluate"], [175, 2, 1, "", "fit"], [175, 2, 1, "", "load_weights"], [175, 2, 1, "", "predict"], [175, 2, 1, "", "save_weights"], [175, 2, 1, "", "summary"], [175, 2, 1, "", "train_test_split"]], "dipy.nn.evac": [[175, 1, 1, "", "Block"], [175, 1, 1, "", "ChannelSum"], [175, 1, 1, "", "EVACPlus"], [175, 3, 1, "", "init_model"], [175, 3, 1, "", "logger"], [175, 3, 1, "", "prepare_img"]], "dipy.nn.evac.Block": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "call"]], "dipy.nn.evac.ChannelSum": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "call"]], "dipy.nn.evac.EVACPlus": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "fetch_default_weights"], [175, 2, 1, "", "load_model_weights"], [175, 2, 1, "", "predict"]], "dipy.nn.histo_resdnn": [[175, 1, 1, "", "HistoResDNN"], [175, 3, 1, "", "logger"]], "dipy.nn.histo_resdnn.HistoResDNN": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "fetch_default_weights"], [175, 2, 1, "", "load_model_weights"], [175, 2, 1, "", "predict"]], "dipy.nn.model": [[175, 1, 1, "", "MultipleLayerPercepton"], [175, 1, 1, "", "SingleLayerPerceptron"]], "dipy.nn.model.MultipleLayerPercepton": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "evaluate"], [175, 2, 1, "", "fit"], [175, 2, 1, "", "predict"], [175, 2, 1, "", "summary"]], "dipy.nn.model.SingleLayerPerceptron": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "evaluate"], [175, 2, 1, "", "fit"], [175, 2, 1, "", "predict"], [175, 2, 1, "", "summary"]], "dipy.nn.synb0": [[175, 1, 1, "id69", "DecoderBlock"], [175, 1, 1, "id0", "EncoderBlock"], [175, 1, 1, "", "Synb0"], [175, 3, 1, "id90", "UNet3D"], [175, 3, 1, "", "logger"], [175, 3, 1, "", "normalize"], [175, 3, 1, "", "unnormalize"]], "dipy.nn.synb0.DecoderBlock": [[175, 2, 1, "id70", "__init__"], [175, 2, 1, "id71", "call"]], "dipy.nn.synb0.EncoderBlock": [[175, 2, 1, "id62", "__init__"], [175, 2, 1, "id63", "call"]], "dipy.nn.synb0.Synb0": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "fetch_default_weights"], [175, 2, 1, "", "load_model_weights"], [175, 2, 1, "", "predict"]], "dipy.nn.utils": [[175, 3, 1, "", "normalize"], [175, 3, 1, "", "recover_img"], [175, 3, 1, "", "set_logger_level"], [175, 3, 1, "", "transform_img"], [175, 3, 1, "", "unnormalize"]], "dipy.reconst": [[176, 0, 0, "-", "base"], [176, 0, 0, "-", "benchmarks"], [176, 0, 0, "-", "cache"], [176, 0, 0, "-", "cross_validation"], [176, 0, 0, "-", "csdeconv"], [176, 0, 0, "-", "cti"], [176, 0, 0, "-", "dki"], [176, 0, 0, "-", "dki_micro"], [176, 0, 0, "-", "dsi"], [176, 0, 0, "-", "dti"], [176, 0, 0, "-", "eudx_direction_getter"], [176, 0, 0, "-", "forecast"], [176, 0, 0, "-", "fwdti"], [176, 0, 0, "-", "gqi"], [176, 0, 0, "-", "ivim"], [176, 0, 0, "-", "mapmri"], [176, 0, 0, "-", "mcsd"], [176, 0, 0, "-", "msdki"], [176, 0, 0, "-", "multi_voxel"], [176, 0, 0, "-", "odf"], [176, 0, 0, "-", "qtdmri"], [176, 0, 0, "-", "qti"], [176, 0, 0, "-", "quick_squash"], [176, 0, 0, "-", "recspeed"], [176, 0, 0, "-", "rumba"], [176, 0, 0, "-", "sfm"], [176, 0, 0, "-", "shm"], [176, 0, 0, "-", "shore"], [176, 0, 0, "-", "utils"], [176, 0, 0, "-", "vec_val_sum"]], "dipy.reconst.base": [[176, 1, 1, "", "ReconstFit"], [176, 1, 1, "", "ReconstModel"]], "dipy.reconst.base.ReconstFit": [[176, 2, 1, "", "__init__"]], "dipy.reconst.base.ReconstModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fit"]], "dipy.reconst.benchmarks": [[176, 0, 0, "-", "bench_bounding_box"], [176, 0, 0, "-", "bench_csd"], [176, 0, 0, "-", "bench_peaks"], [176, 0, 0, "-", "bench_squash"], [176, 0, 0, "-", "bench_vec_val_sum"]], "dipy.reconst.benchmarks.bench_bounding_box": [[176, 3, 1, "", "bench_bounding_box"]], "dipy.reconst.benchmarks.bench_csd": [[176, 3, 1, "", "bench_csdeconv"], [176, 3, 1, "", "num_grad"]], "dipy.reconst.benchmarks.bench_peaks": [[176, 3, 1, "", "bench_local_maxima"]], "dipy.reconst.benchmarks.bench_squash": [[176, 3, 1, "", "bench_quick_squash"], [176, 3, 1, "", "old_squash"]], "dipy.reconst.benchmarks.bench_vec_val_sum": [[176, 3, 1, "", "bench_vec_val_vect"]], "dipy.reconst.cache": [[176, 1, 1, "", "Cache"]], "dipy.reconst.cache.Cache": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "cache_clear"], [176, 2, 1, "", "cache_get"], [176, 2, 1, "", "cache_set"]], "dipy.reconst.cross_validation": [[176, 3, 1, "", "coeff_of_determination"], [176, 3, 1, "", "kfold_xval"]], "dipy.reconst.csdeconv": [[176, 1, 1, "", "AxSymShResponse"], [176, 1, 1, "", "ConstrainedSDTModel"], [176, 1, 1, "", "ConstrainedSphericalDeconvModel"], [176, 3, 1, "", "auto_response"], [176, 3, 1, "", "auto_response_ssst"], [176, 3, 1, "", "csdeconv"], [176, 3, 1, "", "estimate_response"], [176, 3, 1, "", "fa_trace_to_lambdas"], [176, 3, 1, "", "forward_sdt_deconv_mat"], [176, 3, 1, "", "mask_for_response_ssst"], [176, 3, 1, "", "odf_deconv"], [176, 3, 1, "", "odf_sh_to_sharp"], [176, 3, 1, "", "recursive_response"], [176, 3, 1, "", "response_from_mask"], [176, 3, 1, "", "response_from_mask_ssst"]], "dipy.reconst.csdeconv.AxSymShResponse": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "basis"], [176, 2, 1, "", "on_sphere"]], "dipy.reconst.csdeconv.ConstrainedSDTModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fit"]], "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fit"], [176, 2, 1, "", "predict"]], "dipy.reconst.cti": [[176, 1, 1, "", "CorrelationTensorFit"], [176, 1, 1, "", "CorrelationTensorModel"], [176, 3, 1, "", "cti_prediction"], [176, 3, 1, "", "from_qte_to_cti"], [176, 3, 1, "", "ls_fit_cti"], [176, 3, 1, "", "multi_gaussian_k_from_c"], [176, 3, 1, "", "params_to_cti_params"], [176, 3, 1, "", "split_cti_params"]], "dipy.reconst.cti.CorrelationTensorFit": [[176, 5, 1, "", "K_aniso"], [176, 5, 1, "", "K_iso"], [176, 5, 1, "", "K_micro"], [176, 2, 1, "", "K_total"], [176, 2, 1, "", "__init__"], [176, 5, 1, "", "ct"], [176, 2, 1, "", "predict"]], "dipy.reconst.cti.CorrelationTensorModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fit"], [176, 2, 1, "", "predict"]], "dipy.reconst.dki": [[176, 1, 1, "", "DiffusionKurtosisFit"], [176, 1, 1, "", "DiffusionKurtosisModel"], [176, 3, 1, "", "Wcons"], [176, 3, 1, "", "Wrotate"], [176, 3, 1, "", "Wrotate_element"], [176, 3, 1, "", "apparent_kurtosis_coef"], [176, 3, 1, "", "axial_kurtosis"], [176, 3, 1, "", "carlson_rd"], [176, 3, 1, "", "carlson_rf"], [176, 3, 1, "", "cls_fit_dki"], [176, 3, 1, "", "directional_diffusion"], [176, 3, 1, "", "directional_diffusion_variance"], [176, 3, 1, "", "directional_kurtosis"], [176, 3, 1, "", "dki_prediction"], [176, 3, 1, "", "kurtosis_fractional_anisotropy"], [176, 3, 1, "", "kurtosis_maximum"], [176, 3, 1, "", "ls_fit_dki"], [176, 3, 1, "", "mean_kurtosis"], [176, 3, 1, "", "mean_kurtosis_tensor"], [176, 3, 1, "", "params_to_dki_params"], [176, 3, 1, "", "radial_kurtosis"], [176, 3, 1, "", "split_dki_param"]], "dipy.reconst.dki.DiffusionKurtosisFit": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "ak"], [176, 2, 1, "", "akc"], [176, 5, 1, "", "kfa"], [176, 2, 1, "", "kmax"], [176, 5, 1, "", "kt"], [176, 2, 1, "", "mk"], [176, 2, 1, "", "mkt"], [176, 2, 1, "", "predict"], [176, 2, 1, "", "rk"]], "dipy.reconst.dki.DiffusionKurtosisModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fit"], [176, 2, 1, "", "multi_fit"], [176, 2, 1, "", "predict"]], "dipy.reconst.dki_micro": [[176, 1, 1, "", "KurtosisMicrostructuralFit"], [176, 1, 1, "", "KurtosisMicrostructureModel"], [176, 3, 1, "", "axonal_water_fraction"], [176, 3, 1, "", "diffusion_components"], [176, 3, 1, "", "dkimicro_prediction"], [176, 3, 1, "", "tortuosity"]], "dipy.reconst.dki_micro.KurtosisMicrostructuralFit": [[176, 2, 1, "", "__init__"], [176, 5, 1, "", "awf"], [176, 5, 1, "", "axonal_diffusivity"], [176, 5, 1, "", "hindered_ad"], [176, 5, 1, "", "hindered_evals"], [176, 5, 1, "", "hindered_rd"], [176, 2, 1, "", "predict"], [176, 5, 1, "", "restricted_evals"], [176, 5, 1, "", "tortuosity"]], "dipy.reconst.dki_micro.KurtosisMicrostructureModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fit"], [176, 2, 1, "", "predict"]], "dipy.reconst.dsi": [[176, 1, 1, "", "DiffusionSpectrumDeconvFit"], [176, 1, 1, "", "DiffusionSpectrumDeconvModel"], [176, 1, 1, "", "DiffusionSpectrumFit"], [176, 1, 1, "", "DiffusionSpectrumModel"], [176, 3, 1, "", "LR_deconv"], [176, 3, 1, "", "create_qspace"], [176, 3, 1, "", "create_qtable"], [176, 3, 1, "", "gen_PSF"], [176, 3, 1, "", "half_to_full_qspace"], [176, 3, 1, "", "hanning_filter"], [176, 3, 1, "", "pdf_interp_coords"], [176, 3, 1, "", "pdf_odf"], [176, 3, 1, "", "project_hemisph_bvecs"], [176, 3, 1, "", "threshold_propagator"]], "dipy.reconst.dsi.DiffusionSpectrumDeconvFit": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "pdf"]], "dipy.reconst.dsi.DiffusionSpectrumDeconvModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fit"]], "dipy.reconst.dsi.DiffusionSpectrumFit": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "msd_discrete"], [176, 2, 1, "", "odf"], [176, 2, 1, "", "pdf"], [176, 2, 1, "", "rtop_pdf"], [176, 2, 1, "", "rtop_signal"]], "dipy.reconst.dsi.DiffusionSpectrumModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fit"]], "dipy.reconst.dti": [[176, 1, 1, "", "TensorFit"], [176, 1, 1, "", "TensorModel"], [176, 3, 1, "", "_lt_cols"], [176, 3, 1, "", "_lt_indices"], [176, 3, 1, "", "_lt_rows"], [176, 3, 1, "", "apparent_diffusion_coef"], [176, 3, 1, "", "axial_diffusivity"], [176, 3, 1, "", "color_fa"], [176, 3, 1, "", "decompose_tensor"], [176, 3, 1, "", "design_matrix"], [176, 3, 1, "", "determinant"], [176, 3, 1, "", "deviatoric"], [176, 3, 1, "", "eig_from_lo_tri"], [176, 3, 1, "", "fractional_anisotropy"], [176, 3, 1, "", "from_lower_triangular"], [176, 3, 1, "", "geodesic_anisotropy"], [176, 3, 1, "", "isotropic"], [176, 3, 1, "", "iter_fit_tensor"], [176, 3, 1, "", "linearity"], [176, 3, 1, "", "lower_triangular"], [176, 3, 1, "", "mean_diffusivity"], [176, 3, 1, "", "mode"], [176, 3, 1, "", "nlls_fit_tensor"], [176, 3, 1, "", "norm"], [176, 3, 1, "", "ols_fit_tensor"], [176, 3, 1, "", "planarity"], [176, 3, 1, "", "quantize_evecs"], [176, 3, 1, "", "radial_diffusivity"], [176, 3, 1, "", "restore_fit_tensor"], [176, 3, 1, "", "sphericity"], [176, 3, 1, "", "tensor_prediction"], [176, 3, 1, "", "trace"], [176, 3, 1, "", "wls_fit_tensor"]], "dipy.reconst.dti.TensorFit": [[176, 5, 1, "", "S0_hat"], [176, 2, 1, "", "__init__"], [176, 2, 1, "", "ad"], [176, 2, 1, "", "adc"], [176, 2, 1, "", "color_fa"], [176, 5, 1, "", "directions"], [176, 5, 1, "", "evals"], [176, 5, 1, "", "evecs"], [176, 2, 1, "", "fa"], [176, 2, 1, "", "ga"], [176, 2, 1, "", "linearity"], [176, 2, 1, "", "lower_triangular"], [176, 2, 1, "", "md"], [176, 2, 1, "", "mode"], [176, 2, 1, "", "odf"], [176, 2, 1, "", "planarity"], [176, 2, 1, "", "predict"], [176, 5, 1, "", "quadratic_form"], [176, 2, 1, "", "rd"], [176, 5, 1, "", "shape"], [176, 2, 1, "", "sphericity"], [176, 2, 1, "", "trace"]], "dipy.reconst.dti.TensorModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fit"], [176, 2, 1, "", "predict"]], "dipy.reconst.eudx_direction_getter": [[176, 1, 1, "", "EuDXDirectionGetter"]], "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter": [[176, 2, 1, "", "__init__"], [176, 4, 1, "", "ang_thr"], [176, 2, 1, "", "initial_direction"], [176, 4, 1, "", "qa_thr"], [176, 4, 1, "", "total_weight"]], "dipy.reconst.forecast": [[176, 1, 1, "", "ForecastFit"], [176, 1, 1, "", "ForecastModel"], [176, 3, 1, "", "find_signal_means"], [176, 3, 1, "", "forecast_error_func"], [176, 3, 1, "", "forecast_matrix"], [176, 3, 1, "", "lb_forecast"], [176, 3, 1, "", "psi_l"], [176, 3, 1, "", "rho_matrix"]], "dipy.reconst.forecast.ForecastFit": [[176, 2, 1, "", "__init__"], [176, 5, 1, "", "dpar"], [176, 5, 1, "", "dperp"], [176, 2, 1, "", "fractional_anisotropy"], [176, 2, 1, "", "mean_diffusivity"], [176, 2, 1, "", "odf"], [176, 2, 1, "", "predict"], [176, 5, 1, "", "sh_coeff"]], "dipy.reconst.forecast.ForecastModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fit"]], "dipy.reconst.fwdti": [[176, 1, 1, "", "FreeWaterTensorFit"], [176, 1, 1, "", "FreeWaterTensorModel"], [176, 3, 1, "", "cholesky_to_lower_triangular"], [176, 3, 1, "", "fwdti_prediction"], [176, 3, 1, "", "lower_triangular_to_cholesky"], [176, 3, 1, "", "nls_fit_tensor"], [176, 3, 1, "", "nls_iter"], [176, 3, 1, "", "wls_fit_tensor"], [176, 3, 1, "", "wls_iter"]], "dipy.reconst.fwdti.FreeWaterTensorFit": [[176, 2, 1, "", "__init__"], [176, 5, 1, "", "f"], [176, 2, 1, "", "predict"]], "dipy.reconst.fwdti.FreeWaterTensorModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fit"], [176, 2, 1, "", "predict"]], "dipy.reconst.gqi": [[176, 1, 1, "", "GeneralizedQSamplingFit"], [176, 1, 1, "", "GeneralizedQSamplingModel"], [176, 3, 1, "", "equatorial_maximum"], [176, 3, 1, "", "equatorial_zone_vertices"], [176, 3, 1, "", "normalize_qa"], [176, 3, 1, "", "npa"], [176, 3, 1, "", "odf_sum"], [176, 3, 1, "", "patch_maximum"], [176, 3, 1, "", "patch_sum"], [176, 3, 1, "", "patch_vertices"], [176, 3, 1, "", "polar_zone_vertices"], [176, 3, 1, "", "squared_radial_component"], [176, 3, 1, "", "triple_odf_maxima"], [176, 3, 1, "", "upper_hemi_map"]], "dipy.reconst.gqi.GeneralizedQSamplingFit": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "odf"]], "dipy.reconst.gqi.GeneralizedQSamplingModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fit"]], "dipy.reconst.ivim": [[176, 1, 1, "", "IvimFit"], [176, 1, 1, "", "IvimModelTRR"], [176, 1, 1, "", "IvimModelVP"], [176, 3, 1, "", "f_D_star_error"], [176, 3, 1, "", "f_D_star_prediction"], [176, 3, 1, "", "ivim_model_selector"], [176, 3, 1, "", "ivim_prediction"]], "dipy.reconst.ivim.IvimFit": [[176, 5, 1, "", "D"], [176, 5, 1, "", "D_star"], [176, 5, 1, "", "S0_predicted"], [176, 2, 1, "", "__init__"], [176, 5, 1, "", "perfusion_fraction"], [176, 2, 1, "", "predict"], [176, 5, 1, "", "shape"]], "dipy.reconst.ivim.IvimModelTRR": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "estimate_f_D_star"], [176, 2, 1, "", "estimate_linear_fit"], [176, 2, 1, "", "fit"], [176, 2, 1, "", "predict"]], "dipy.reconst.ivim.IvimModelVP": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "cvx_fit"], [176, 2, 1, "", "fit"], [176, 2, 1, "", "ivim_mix_cost_one"], [176, 2, 1, "", "nlls_cost"], [176, 2, 1, "", "phi"], [176, 2, 1, "", "stoc_search_cost"], [176, 2, 1, "", "x_and_f_to_x_f"], [176, 2, 1, "", "x_f_to_x_and_f"]], "dipy.reconst.mapmri": [[176, 1, 1, "", "MapmriFit"], [176, 1, 1, "", "MapmriModel"], [176, 3, 1, "", "b_mat"], [176, 3, 1, "", "b_mat_isotropic"], [176, 3, 1, "", "binomialfloat"], [176, 3, 1, "", "create_rspace"], [176, 3, 1, "", "delta"], [176, 3, 1, "", "gcv_cost_function"], [176, 3, 1, "", "generalized_crossvalidation"], [176, 3, 1, "", "generalized_crossvalidation_array"], [176, 3, 1, "", "isotropic_scale_factor"], [176, 3, 1, "", "map_laplace_s"], [176, 3, 1, "", "map_laplace_t"], [176, 3, 1, "", "map_laplace_u"], [176, 3, 1, "", "mapmri_STU_reg_matrices"], [176, 3, 1, "", "mapmri_index_matrix"], [176, 3, 1, "", "mapmri_isotropic_K_mu_dependent"], [176, 3, 1, "", "mapmri_isotropic_K_mu_independent"], [176, 3, 1, "", "mapmri_isotropic_M_mu_dependent"], [176, 3, 1, "", "mapmri_isotropic_M_mu_independent"], [176, 3, 1, "", "mapmri_isotropic_index_matrix"], [176, 3, 1, "", "mapmri_isotropic_laplacian_reg_matrix"], [176, 3, 1, "", "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix"], [176, 3, 1, "", "mapmri_isotropic_odf_matrix"], [176, 3, 1, "", "mapmri_isotropic_odf_sh_matrix"], [176, 3, 1, "", "mapmri_isotropic_phi_matrix"], [176, 3, 1, "", "mapmri_isotropic_psi_matrix"], [176, 3, 1, "", "mapmri_isotropic_radial_pdf_basis"], [176, 3, 1, "", "mapmri_isotropic_radial_signal_basis"], [176, 3, 1, "", "mapmri_laplacian_reg_matrix"], [176, 3, 1, "", "mapmri_odf_matrix"], [176, 3, 1, "", "mapmri_phi_1d"], [176, 3, 1, "", "mapmri_phi_matrix"], [176, 3, 1, "", "mapmri_psi_1d"], [176, 3, 1, "", "mapmri_psi_matrix"]], "dipy.reconst.mapmri.MapmriFit": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fitted_signal"], [176, 5, 1, "", "mapmri_R"], [176, 5, 1, "", "mapmri_coeff"], [176, 5, 1, "", "mapmri_mu"], [176, 2, 1, "", "msd"], [176, 2, 1, "", "ng"], [176, 2, 1, "", "ng_parallel"], [176, 2, 1, "", "ng_perpendicular"], [176, 2, 1, "", "norm_of_laplacian_signal"], [176, 2, 1, "", "odf"], [176, 2, 1, "", "odf_sh"], [176, 2, 1, "", "pdf"], [176, 2, 1, "", "predict"], [176, 2, 1, "", "qiv"], [176, 2, 1, "", "rtap"], [176, 2, 1, "", "rtop"], [176, 2, 1, "", "rtpp"]], "dipy.reconst.mapmri.MapmriModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fit"]], "dipy.reconst.mcsd": [[176, 1, 1, "", "MSDeconvFit"], [176, 1, 1, "", "MultiShellDeconvModel"], [176, 1, 1, "", "MultiShellResponse"], [176, 1, 1, "", "QpFitter"], [176, 3, 1, "", "auto_response_msmt"], [176, 3, 1, "", "mask_for_response_msmt"], [176, 3, 1, "", "multi_shell_fiber_response"], [176, 3, 1, "", "multi_tissue_basis"], [176, 3, 1, "", "response_from_mask_msmt"], [176, 3, 1, "", "solve_qp"]], "dipy.reconst.mcsd.MSDeconvFit": [[176, 2, 1, "", "__init__"], [176, 5, 1, "", "all_shm_coeff"], [176, 5, 1, "", "shm_coeff"], [176, 5, 1, "", "volume_fractions"]], "dipy.reconst.mcsd.MultiShellDeconvModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fit"], [176, 2, 1, "", "predict"]], "dipy.reconst.mcsd.MultiShellResponse": [[176, 2, 1, "", "__init__"], [176, 5, 1, "", "iso"]], "dipy.reconst.mcsd.QpFitter": [[176, 2, 1, "", "__init__"]], "dipy.reconst.msdki": [[176, 1, 1, "", "MeanDiffusionKurtosisFit"], [176, 1, 1, "", "MeanDiffusionKurtosisModel"], [176, 3, 1, "", "awf_from_msk"], [176, 3, 1, "", "design_matrix"], [176, 3, 1, "", "mean_signal_bvalue"], [176, 3, 1, "", "msdki_prediction"], [176, 3, 1, "", "msk_from_awf"], [176, 3, 1, "", "wls_fit_msdki"]], "dipy.reconst.msdki.MeanDiffusionKurtosisFit": [[176, 5, 1, "", "S0_hat"], [176, 2, 1, "", "__init__"], [176, 2, 1, "", "msd"], [176, 2, 1, "", "msk"], [176, 2, 1, "", "predict"], [176, 2, 1, "", "smt2di"], [176, 2, 1, "", "smt2f"], [176, 2, 1, "", "smt2uFA"]], "dipy.reconst.msdki.MeanDiffusionKurtosisModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fit"], [176, 2, 1, "", "predict"]], "dipy.reconst.multi_voxel": [[176, 1, 1, "", "CallableArray"], [176, 1, 1, "", "MultiVoxelFit"], [176, 3, 1, "", "multi_voxel_fit"]], "dipy.reconst.multi_voxel.CallableArray": [[176, 2, 1, "", "__init__"]], "dipy.reconst.multi_voxel.MultiVoxelFit": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "predict"], [176, 5, 1, "", "shape"]], "dipy.reconst.odf": [[176, 1, 1, "", "OdfFit"], [176, 1, 1, "", "OdfModel"], [176, 3, 1, "", "gfa"], [176, 3, 1, "", "minmax_normalize"]], "dipy.reconst.odf.OdfFit": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "odf"]], "dipy.reconst.odf.OdfModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fit"]], "dipy.reconst.qtdmri": [[176, 3, 1, "", "GCV_cost_function"], [176, 3, 1, "", "H"], [176, 1, 1, "", "QtdmriFit"], [176, 1, 1, "", "QtdmriModel"], [176, 3, 1, "", "angular_basis_EAP_opt"], [176, 3, 1, "", "angular_basis_opt"], [176, 3, 1, "", "create_rt_space_grid"], [176, 3, 1, "", "design_matrix_spatial"], [176, 3, 1, "", "elastic_crossvalidation"], [176, 3, 1, "", "generalized_crossvalidation"], [176, 3, 1, "", "l1_crossvalidation"], [176, 3, 1, "", "part1_reg_matrix_tau"], [176, 3, 1, "", "part23_iso_reg_matrix_q"], [176, 3, 1, "", "part23_reg_matrix_q"], [176, 3, 1, "", "part23_reg_matrix_tau"], [176, 3, 1, "", "part4_iso_reg_matrix_q"], [176, 3, 1, "", "part4_reg_matrix_q"], [176, 3, 1, "", "part4_reg_matrix_tau"], [176, 3, 1, "", "qtdmri_anisotropic_scaling"], [176, 3, 1, "", "qtdmri_eap_matrix"], [176, 3, 1, "", "qtdmri_eap_matrix_"], [176, 3, 1, "", "qtdmri_index_matrix"], [176, 3, 1, "", "qtdmri_isotropic_eap_matrix"], [176, 3, 1, "", "qtdmri_isotropic_eap_matrix_"], [176, 3, 1, "", "qtdmri_isotropic_index_matrix"], [176, 3, 1, "", "qtdmri_isotropic_laplacian_reg_matrix"], [176, 3, 1, "", "qtdmri_isotropic_scaling"], [176, 3, 1, "", "qtdmri_isotropic_signal_matrix"], [176, 3, 1, "", "qtdmri_isotropic_signal_matrix_"], [176, 3, 1, "", "qtdmri_isotropic_to_mapmri_matrix"], [176, 3, 1, "", "qtdmri_laplacian_reg_matrix"], [176, 3, 1, "", "qtdmri_mapmri_isotropic_normalization"], [176, 3, 1, "", "qtdmri_mapmri_normalization"], [176, 3, 1, "", "qtdmri_number_of_coefficients"], [176, 3, 1, "", "qtdmri_signal_matrix"], [176, 3, 1, "", "qtdmri_signal_matrix_"], [176, 3, 1, "", "qtdmri_temporal_normalization"], [176, 3, 1, "", "qtdmri_to_mapmri_matrix"], [176, 3, 1, "", "radial_basis_EAP_opt"], [176, 3, 1, "", "radial_basis_opt"], [176, 3, 1, "", "temporal_basis"], [176, 3, 1, "", "visualise_gradient_table_G_Delta_rainbow"]], "dipy.reconst.qtdmri.QtdmriFit": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fitted_signal"], [176, 2, 1, "", "msd"], [176, 2, 1, "", "norm_of_laplacian_signal"], [176, 2, 1, "", "odf"], [176, 2, 1, "", "odf_sh"], [176, 2, 1, "", "pdf"], [176, 2, 1, "", "predict"], [176, 2, 1, "", "qiv"], [176, 2, 1, "", "qtdmri_to_mapmri_coef"], [176, 2, 1, "", "rtap"], [176, 2, 1, "", "rtop"], [176, 2, 1, "", "rtpp"], [176, 2, 1, "", "sparsity_abs"], [176, 2, 1, "", "sparsity_density"]], "dipy.reconst.qtdmri.QtdmriModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fit"]], "dipy.reconst.qti": [[176, 1, 1, "", "QtiFit"], [176, 1, 1, "", "QtiModel"], [176, 3, 1, "", "cvxpy_1x21_to_6x6"], [176, 3, 1, "", "cvxpy_1x6_to_3x3"], [176, 3, 1, "", "design_matrix"], [176, 3, 1, "", "dtd_covariance"], [176, 3, 1, "", "from_21x1_to_6x6"], [176, 3, 1, "", "from_3x3_to_6x1"], [176, 3, 1, "", "from_6x1_to_3x3"], [176, 3, 1, "", "from_6x6_to_21x1"], [176, 3, 1, "", "qti_signal"]], "dipy.reconst.qti.QtiFit": [[176, 2, 1, "", "S0_hat"], [176, 2, 1, "", "__init__"], [176, 2, 1, "", "c_c"], [176, 2, 1, "", "c_m"], [176, 2, 1, "", "c_md"], [176, 2, 1, "", "c_mu"], [176, 2, 1, "", "d_sq"], [176, 2, 1, "", "fa"], [176, 2, 1, "", "k_bulk"], [176, 2, 1, "", "k_mu"], [176, 2, 1, "", "k_shear"], [176, 2, 1, "", "md"], [176, 2, 1, "", "mean_d_sq"], [176, 2, 1, "", "mk"], [176, 2, 1, "", "predict"], [176, 2, 1, "", "ufa"], [176, 2, 1, "", "v_iso"], [176, 2, 1, "", "v_md"], [176, 2, 1, "", "v_shear"]], "dipy.reconst.qti.QtiModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fit"], [176, 2, 1, "", "predict"]], "dipy.reconst.quick_squash": [[176, 3, 1, "", "quick_squash"], [176, 3, 1, "", "reduce"]], "dipy.reconst.recspeed": [[176, 3, 1, "", "adj_to_countarrs"], [176, 3, 1, "", "argmax_from_adj"], [176, 3, 1, "", "argmax_from_countarrs"], [176, 3, 1, "", "le_to_odf"], [176, 3, 1, "", "local_maxima"], [176, 3, 1, "", "proc_reco_args"], [176, 3, 1, "", "remove_similar_vertices"], [176, 3, 1, "", "search_descending"], [176, 3, 1, "", "sum_on_blocks_1d"]], "dipy.reconst.rumba": [[176, 1, 1, "", "RumbaFit"], [176, 1, 1, "", "RumbaSDModel"], [176, 3, 1, "", "generate_kernel"], [176, 3, 1, "", "logger"], [176, 3, 1, "", "mbessel_ratio"], [176, 3, 1, "", "rumba_deconv"], [176, 3, 1, "", "rumba_deconv_global"]], "dipy.reconst.rumba.RumbaFit": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "combined_odf_iso"], [176, 2, 1, "", "f_csf"], [176, 2, 1, "", "f_gm"], [176, 2, 1, "", "f_iso"], [176, 2, 1, "", "f_wm"], [176, 2, 1, "", "odf"], [176, 2, 1, "", "predict"]], "dipy.reconst.rumba.RumbaSDModel": [[176, 2, 1, "", "__init__"]], "dipy.reconst.sfm": [[176, 1, 1, "", "ExponentialIsotropicFit"], [176, 1, 1, "", "ExponentialIsotropicModel"], [176, 1, 1, "", "IsotropicFit"], [176, 1, 1, "", "IsotropicModel"], [176, 1, 1, "", "SparseFascicleFit"], [176, 1, 1, "", "SparseFascicleModel"], [176, 3, 1, "", "sfm_design_matrix"]], "dipy.reconst.sfm.ExponentialIsotropicFit": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "predict"]], "dipy.reconst.sfm.ExponentialIsotropicModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fit"]], "dipy.reconst.sfm.IsotropicFit": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "predict"]], "dipy.reconst.sfm.IsotropicModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fit"]], "dipy.reconst.sfm.SparseFascicleFit": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "odf"], [176, 2, 1, "", "predict"]], "dipy.reconst.sfm.SparseFascicleModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "design_matrix"], [176, 2, 1, "", "fit"]], "dipy.reconst.shm": [[176, 1, 1, "", "CsaOdfModel"], [176, 1, 1, "", "OpdtModel"], [176, 1, 1, "", "QballBaseModel"], [176, 1, 1, "", "QballModel"], [176, 1, 1, "", "ResidualBootstrapWrapper"], [176, 1, 1, "", "SphHarmFit"], [176, 1, 1, "", "SphHarmModel"], [176, 3, 1, "", "anisotropic_power"], [176, 3, 1, "", "bootstrap_data_array"], [176, 3, 1, "", "bootstrap_data_voxel"], [176, 3, 1, "", "calculate_max_order"], [176, 3, 1, "", "convert_sh_from_legacy"], [176, 3, 1, "", "convert_sh_to_full_basis"], [176, 3, 1, "", "convert_sh_to_legacy"], [176, 3, 1, "", "forward_sdeconv_mat"], [176, 3, 1, "", "gen_dirac"], [176, 3, 1, "", "hat"], [176, 3, 1, "", "lazy_index"], [176, 3, 1, "", "lcr_matrix"], [176, 3, 1, "", "normalize_data"], [176, 3, 1, "", "order_from_ncoef"], [176, 3, 1, "", "real_sh_descoteaux"], [176, 3, 1, "", "real_sh_descoteaux_from_index"], [176, 3, 1, "", "real_sh_tournier"], [176, 3, 1, "", "real_sh_tournier_from_index"], [176, 3, 1, "", "real_sph_harm"], [176, 3, 1, "", "real_sym_sh_basis"], [176, 3, 1, "", "real_sym_sh_mrtrix"], [176, 3, 1, "", "sf_to_sh"], [176, 3, 1, "", "sh_to_rh"], [176, 3, 1, "", "sh_to_sf"], [176, 3, 1, "", "sh_to_sf_matrix"], [176, 3, 1, "", "smooth_pinv"], [176, 3, 1, "", "sph_harm_ind_list"], [176, 3, 1, "", "spherical_harmonics"]], "dipy.reconst.shm.CsaOdfModel": [[176, 2, 1, "", "__init__"], [176, 4, 1, "", "max"], [176, 4, 1, "", "min"]], "dipy.reconst.shm.OpdtModel": [[176, 2, 1, "", "__init__"]], "dipy.reconst.shm.QballBaseModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fit"]], "dipy.reconst.shm.QballModel": [[176, 2, 1, "", "__init__"]], "dipy.reconst.shm.ResidualBootstrapWrapper": [[176, 2, 1, "", "__init__"]], "dipy.reconst.shm.SphHarmFit": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "gfa"], [176, 2, 1, "", "odf"], [176, 2, 1, "", "predict"], [176, 5, 1, "", "shape"], [176, 5, 1, "", "shm_coeff"]], "dipy.reconst.shm.SphHarmModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "sampling_matrix"]], "dipy.reconst.shore": [[176, 1, 1, "", "ShoreFit"], [176, 1, 1, "", "ShoreModel"], [176, 3, 1, "", "create_rspace"], [176, 3, 1, "", "l_shore"], [176, 3, 1, "", "n_shore"], [176, 3, 1, "", "shore_indices"], [176, 3, 1, "", "shore_matrix"], [176, 3, 1, "", "shore_matrix_odf"], [176, 3, 1, "", "shore_matrix_pdf"], [176, 3, 1, "", "shore_order"]], "dipy.reconst.shore.ShoreFit": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fitted_signal"], [176, 2, 1, "", "msd"], [176, 2, 1, "", "odf"], [176, 2, 1, "", "odf_sh"], [176, 2, 1, "", "pdf"], [176, 2, 1, "", "pdf_grid"], [176, 2, 1, "", "rtop_pdf"], [176, 2, 1, "", "rtop_signal"], [176, 5, 1, "", "shore_coeff"]], "dipy.reconst.shore.ShoreModel": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "fit"]], "dipy.reconst.utils": [[176, 3, 1, "", "cti_design_matrix"], [176, 3, 1, "", "dki_design_matrix"]], "dipy.reconst.vec_val_sum": [[176, 3, 1, "", "vec_val_vect"]], "dipy.segment": [[177, 0, 0, "-", "benchmarks"], [177, 0, 0, "-", "bundles"], [177, 0, 0, "-", "clustering"], [177, 0, 0, "-", "clustering_algorithms"], [177, 0, 0, "-", "clusteringspeed"], [177, 0, 0, "-", "cythonutils"], [177, 0, 0, "-", "featurespeed"], [177, 0, 0, "-", "fss"], [177, 0, 0, "-", "mask"], [177, 0, 0, "-", "metric"], [177, 0, 0, "-", "metricspeed"], [177, 0, 0, "-", "mrf"], [177, 0, 0, "-", "threshold"], [177, 0, 0, "-", "tissue"]], "dipy.segment.benchmarks": [[177, 0, 0, "-", "bench_quickbundles"]], "dipy.segment.benchmarks.bench_quickbundles": [[177, 1, 1, "", "MDFpy"], [177, 3, 1, "", "bench_quickbundles"]], "dipy.segment.benchmarks.bench_quickbundles.MDFpy": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "are_compatible"], [177, 2, 1, "", "dist"]], "dipy.segment.bundles": [[177, 1, 1, "", "RecoBundles"], [177, 3, 1, "", "ba_analysis"], [177, 3, 1, "", "bundle_adjacency"], [177, 3, 1, "", "bundle_shape_similarity"], [177, 3, 1, "", "check_range"], [177, 3, 1, "", "cluster_bundle"], [177, 3, 1, "", "logger"]], "dipy.segment.bundles.RecoBundles": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "evaluate_results"], [177, 2, 1, "", "recognize"], [177, 2, 1, "", "refine"]], "dipy.segment.clustering": [[177, 1, 1, "", "Cluster"], [177, 1, 1, "", "ClusterCentroid"], [177, 1, 1, "", "ClusterMap"], [177, 1, 1, "", "ClusterMapCentroid"], [177, 1, 1, "", "Clustering"], [177, 1, 1, "", "Identity"], [177, 1, 1, "", "QuickBundles"], [177, 1, 1, "", "QuickBundlesX"], [177, 1, 1, "", "TreeCluster"], [177, 1, 1, "", "TreeClusterMap"], [177, 3, 1, "", "logger"], [177, 3, 1, "", "qbx_and_merge"]], "dipy.segment.clustering.Cluster": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "assign"]], "dipy.segment.clustering.ClusterCentroid": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "assign"], [177, 2, 1, "", "update"]], "dipy.segment.clustering.ClusterMap": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "add_cluster"], [177, 2, 1, "", "clear"], [177, 5, 1, "", "clusters"], [177, 2, 1, "", "clusters_sizes"], [177, 2, 1, "", "get_large_clusters"], [177, 2, 1, "", "get_small_clusters"], [177, 5, 1, "", "refdata"], [177, 2, 1, "", "remove_cluster"], [177, 2, 1, "", "size"]], "dipy.segment.clustering.ClusterMapCentroid": [[177, 2, 1, "", "__init__"], [177, 5, 1, "", "centroids"]], "dipy.segment.clustering.Clustering": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "cluster"]], "dipy.segment.clustering.Identity": [[177, 2, 1, "", "__init__"]], "dipy.segment.clustering.QuickBundles": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "cluster"]], "dipy.segment.clustering.QuickBundlesX": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "cluster"]], "dipy.segment.clustering.TreeCluster": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "add"], [177, 5, 1, "", "is_leaf"], [177, 2, 1, "", "return_indices"]], "dipy.segment.clustering.TreeClusterMap": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_clusters"], [177, 2, 1, "", "iter_preorder"], [177, 5, 1, "", "refdata"], [177, 2, 1, "", "traverse_postorder"]], "dipy.segment.clustering_algorithms": [[177, 1, 1, "", "ClusterCentroid"], [177, 1, 1, "", "ClusterMapCentroid"], [177, 4, 1, "", "DTYPE"], [177, 3, 1, "", "clusters_centroid2clustermap_centroid"], [177, 3, 1, "", "peek"], [177, 3, 1, "", "quickbundles"], [177, 3, 1, "", "quickbundlesx"]], "dipy.segment.clustering_algorithms.ClusterCentroid": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "assign"], [177, 2, 1, "", "update"]], "dipy.segment.clustering_algorithms.ClusterMapCentroid": [[177, 2, 1, "", "__init__"], [177, 5, 1, "", "centroids"]], "dipy.segment.clusteringspeed": [[177, 1, 1, "", "ClusterCentroid"], [177, 1, 1, "", "ClusterMapCentroid"], [177, 1, 1, "", "Clusters"], [177, 1, 1, "", "ClustersCentroid"], [177, 4, 1, "", "DTYPE"], [177, 1, 1, "", "QuickBundles"], [177, 1, 1, "", "QuickBundlesX"], [177, 1, 1, "", "TreeCluster"], [177, 1, 1, "", "TreeClusterMap"], [177, 3, 1, "", "evaluate_aabb_checks"]], "dipy.segment.clusteringspeed.ClusterCentroid": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "assign"], [177, 2, 1, "", "update"]], "dipy.segment.clusteringspeed.ClusterMapCentroid": [[177, 2, 1, "", "__init__"], [177, 5, 1, "", "centroids"]], "dipy.segment.clusteringspeed.Clusters": [[177, 2, 1, "", "__init__"]], "dipy.segment.clusteringspeed.ClustersCentroid": [[177, 2, 1, "", "__init__"]], "dipy.segment.clusteringspeed.QuickBundles": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_cluster_map"], [177, 2, 1, "", "get_stats"]], "dipy.segment.clusteringspeed.QuickBundlesX": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_stats"], [177, 2, 1, "", "get_tree_cluster_map"], [177, 2, 1, "", "insert"]], "dipy.segment.clusteringspeed.TreeCluster": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "add"], [177, 5, 1, "", "is_leaf"], [177, 2, 1, "", "return_indices"]], "dipy.segment.clusteringspeed.TreeClusterMap": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_clusters"], [177, 2, 1, "", "iter_preorder"], [177, 5, 1, "", "refdata"], [177, 2, 1, "", "traverse_postorder"]], "dipy.segment.featurespeed": [[177, 1, 1, "", "ArcLengthFeature"], [177, 1, 1, "", "CenterOfMassFeature"], [177, 1, 1, "", "CythonFeature"], [177, 1, 1, "", "Feature"], [177, 1, 1, "", "IdentityFeature"], [177, 1, 1, "", "MidpointFeature"], [177, 1, 1, "", "ResampleFeature"], [177, 1, 1, "", "VectorOfEndpointsFeature"], [177, 3, 1, "", "extract"], [177, 3, 1, "", "infer_shape"]], "dipy.segment.featurespeed.ArcLengthFeature": [[177, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.CenterOfMassFeature": [[177, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.CythonFeature": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "extract"], [177, 2, 1, "", "infer_shape"]], "dipy.segment.featurespeed.Feature": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "extract"], [177, 2, 1, "", "infer_shape"], [177, 4, 1, "", "is_order_invariant"]], "dipy.segment.featurespeed.IdentityFeature": [[177, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.MidpointFeature": [[177, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.ResampleFeature": [[177, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.VectorOfEndpointsFeature": [[177, 2, 1, "", "__init__"]], "dipy.segment.fss": [[177, 1, 1, "", "FastStreamlineSearch"], [177, 3, 1, "", "nearest_from_matrix_col"], [177, 3, 1, "", "nearest_from_matrix_row"]], "dipy.segment.fss.FastStreamlineSearch": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "radius_search"]], "dipy.segment.mask": [[177, 3, 1, "", "applymask"], [177, 3, 1, "", "bounding_box"], [177, 3, 1, "", "clean_cc_mask"], [177, 3, 1, "", "crop"], [177, 3, 1, "", "median_otsu"], [177, 3, 1, "", "multi_median"], [177, 3, 1, "", "segment_from_cfa"]], "dipy.segment.metric": [[177, 3, 1, "", "mdf"], [177, 3, 1, "", "mean_euclidean_distance"], [177, 3, 1, "", "mean_manhattan_distance"]], "dipy.segment.metricspeed": [[177, 1, 1, "", "AveragePointwiseEuclideanMetric"], [177, 1, 1, "", "CosineMetric"], [177, 1, 1, "", "CythonMetric"], [177, 1, 1, "", "Metric"], [177, 1, 1, "", "MinimumAverageDirectFlipMetric"], [177, 1, 1, "", "SumPointwiseEuclideanMetric"], [177, 3, 1, "", "dist"], [177, 3, 1, "", "distance_matrix"]], "dipy.segment.metricspeed.AveragePointwiseEuclideanMetric": [[177, 2, 1, "", "__init__"]], "dipy.segment.metricspeed.CosineMetric": [[177, 2, 1, "", "__init__"]], "dipy.segment.metricspeed.CythonMetric": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "are_compatible"], [177, 2, 1, "", "dist"]], "dipy.segment.metricspeed.Metric": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "are_compatible"], [177, 2, 1, "", "dist"], [177, 4, 1, "", "feature"], [177, 4, 1, "", "is_order_invariant"]], "dipy.segment.metricspeed.MinimumAverageDirectFlipMetric": [[177, 2, 1, "", "__init__"], [177, 4, 1, "", "is_order_invariant"]], "dipy.segment.metricspeed.SumPointwiseEuclideanMetric": [[177, 2, 1, "", "__init__"]], "dipy.segment.mrf": [[177, 1, 1, "", "ConstantObservationModel"], [177, 1, 1, "", "IteratedConditionalModes"]], "dipy.segment.mrf.ConstantObservationModel": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "initialize_param_uniform"], [177, 2, 1, "", "negloglikelihood"], [177, 2, 1, "", "prob_image"], [177, 2, 1, "", "seg_stats"], [177, 2, 1, "", "update_param"]], "dipy.segment.mrf.IteratedConditionalModes": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "icm_ising"], [177, 2, 1, "", "initialize_maximum_likelihood"], [177, 2, 1, "", "prob_neighborhood"]], "dipy.segment.threshold": [[177, 3, 1, "", "otsu"], [177, 3, 1, "", "upper_bound_by_percent"], [177, 3, 1, "", "upper_bound_by_rate"]], "dipy.segment.tissue": [[177, 1, 1, "", "TissueClassifierHMRF"]], "dipy.segment.tissue.TissueClassifierHMRF": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "classify"]], "dipy.sims": [[178, 0, 0, "-", "phantom"], [178, 0, 0, "-", "voxel"]], "dipy.sims.phantom": [[178, 3, 1, "", "add_noise"], [178, 3, 1, "", "diff2eigenvectors"], [178, 3, 1, "", "orbital_phantom"]], "dipy.sims.voxel": [[178, 3, 1, "", "add_noise"], [178, 3, 1, "", "all_tensor_evecs"], [178, 3, 1, "", "callaghan_perpendicular"], [178, 3, 1, "", "cylinders_and_ball_soderman"], [178, 3, 1, "", "diffusion_evals"], [178, 3, 1, "", "dki_signal"], [178, 3, 1, "", "gaussian_parallel"], [178, 3, 1, "", "kurtosis_element"], [178, 3, 1, "", "multi_tensor"], [178, 3, 1, "", "multi_tensor_dki"], [178, 3, 1, "", "multi_tensor_msd"], [178, 3, 1, "", "multi_tensor_odf"], [178, 3, 1, "", "multi_tensor_pdf"], [178, 3, 1, "", "multi_tensor_rtop"], [178, 3, 1, "", "single_tensor"], [178, 3, 1, "", "single_tensor_msd"], [178, 3, 1, "", "single_tensor_odf"], [178, 3, 1, "", "single_tensor_pdf"], [178, 3, 1, "", "single_tensor_rtop"], [178, 3, 1, "", "sticks_and_ball"]], "dipy.stats": [[179, 0, 0, "-", "analysis"]], "dipy.stats.analysis": [[179, 3, 1, "", "afq_profile"], [179, 3, 1, "", "anatomical_measures"], [179, 3, 1, "", "assignment_map"], [179, 3, 1, "", "gaussian_weights"], [179, 3, 1, "", "peak_values"]], "dipy.tracking": [[180, 0, 0, "-", "_utils"], [180, 0, 0, "-", "benchmarks"], [180, 0, 0, "-", "direction_getter"], [180, 0, 0, "-", "distances"], [180, 0, 0, "-", "fbcmeasures"], [180, 0, 0, "-", "learning"], [180, 0, 0, "-", "life"], [180, 0, 0, "-", "local_tracking"], [180, 0, 0, "-", "localtrack"], [180, 0, 0, "-", "mesh"], [180, 0, 0, "-", "metrics"], [180, 0, 0, "-", "propspeed"], [180, 0, 0, "-", "stopping_criterion"], [180, 0, 0, "-", "streamline"], [180, 0, 0, "-", "streamlinespeed"], [180, 0, 0, "-", "utils"], [180, 0, 0, "-", "vox2track"]], "dipy.tracking.benchmarks": [[180, 0, 0, "-", "bench_streamline"]], "dipy.tracking.benchmarks.bench_streamline": [[180, 3, 1, "", "bench_compress_streamlines"], [180, 3, 1, "", "bench_length"], [180, 3, 1, "", "bench_set_number_of_points"], [180, 3, 1, "", "generate_streamlines"], [180, 3, 1, "", "setup"]], "dipy.tracking.direction_getter": [[180, 1, 1, "", "DirectionGetter"]], "dipy.tracking.direction_getter.DirectionGetter": [[180, 2, 1, "", "__init__"], [180, 2, 1, "", "generate_streamline"], [180, 2, 1, "", "get_direction"], [180, 2, 1, "", "initial_direction"]], "dipy.tracking.distances": [[180, 3, 1, "", "add_3vecs"], [180, 3, 1, "", "approx_polygon_track"], [180, 3, 1, "", "approximate_mdl_trajectory"], [180, 3, 1, "", "bundles_distances_mam"], [180, 3, 1, "", "bundles_distances_mdf"], [180, 3, 1, "", "cut_plane"], [180, 3, 1, "", "inner_3vecs"], [180, 3, 1, "", "intersect_segment_cylinder"], [180, 3, 1, "", "larch_3merge"], [180, 3, 1, "", "larch_3split"], [180, 3, 1, "", "lee_angle_distance"], [180, 3, 1, "", "lee_perpendicular_distance"], [180, 3, 1, "", "local_skeleton_clustering"], [180, 3, 1, "", "local_skeleton_clustering_3pts"], [180, 3, 1, "", "mam_distances"], [180, 3, 1, "", "minimum_closest_distance"], [180, 3, 1, "", "most_similar_track_mam"], [180, 3, 1, "", "mul_3vec"], [180, 3, 1, "", "mul_3vecs"], [180, 3, 1, "", "norm_3vec"], [180, 3, 1, "", "normalized_3vec"], [180, 3, 1, "", "point_segment_sq_distance"], [180, 3, 1, "", "point_track_sq_distance_check"], [180, 3, 1, "", "sub_3vecs"], [180, 3, 1, "", "track_dist_3pts"], [180, 3, 1, "", "track_roi_intersection_check"], [180, 3, 1, "", "warn"]], "dipy.tracking.fbcmeasures": [[180, 1, 1, "", "FBCMeasures"], [180, 1, 1, "", "KDTree"], [180, 3, 1, "", "compute_rfbc"], [180, 3, 1, "", "determine_num_threads"], [180, 1, 1, "", "interp1d"], [180, 3, 1, "", "min_moving_average"]], "dipy.tracking.fbcmeasures.FBCMeasures": [[180, 2, 1, "", "__init__"], [180, 2, 1, "", "get_points_rfbc_thresholded"]], "dipy.tracking.fbcmeasures.KDTree": [[180, 2, 1, "", "__init__"], [180, 2, 1, "", "count_neighbors"], [180, 1, 1, "", "innernode"], [180, 1, 1, "", "leafnode"], [180, 1, 1, "", "node"], [180, 2, 1, "", "query"], [180, 2, 1, "", "query_ball_point"], [180, 2, 1, "", "query_ball_tree"], [180, 2, 1, "", "query_pairs"], [180, 2, 1, "", "sparse_distance_matrix"], [180, 5, 1, "", "tree"]], "dipy.tracking.fbcmeasures.KDTree.innernode": [[180, 5, 1, "", "children"], [180, 5, 1, "", "split"], [180, 5, 1, "", "split_dim"]], "dipy.tracking.fbcmeasures.KDTree.leafnode": [[180, 5, 1, "", "children"], [180, 5, 1, "", "idx"]], "dipy.tracking.fbcmeasures.interp1d": [[180, 2, 1, "", "__init__"], [180, 4, 1, "", "dtype"], [180, 5, 1, "", "fill_value"]], "dipy.tracking.learning": [[180, 3, 1, "", "detect_corresponding_tracks"], [180, 3, 1, "", "detect_corresponding_tracks_plus"]], "dipy.tracking.life": [[180, 1, 1, "", "FiberFit"], [180, 1, 1, "", "FiberModel"], [180, 1, 1, "", "LifeSignalMaker"], [180, 3, 1, "", "grad_tensor"], [180, 3, 1, "", "gradient"], [180, 3, 1, "", "streamline_gradients"], [180, 3, 1, "", "streamline_signal"], [180, 3, 1, "", "streamline_tensors"], [180, 3, 1, "", "voxel2streamline"]], "dipy.tracking.life.FiberFit": [[180, 2, 1, "", "__init__"], [180, 2, 1, "", "predict"]], "dipy.tracking.life.FiberModel": [[180, 2, 1, "", "__init__"], [180, 2, 1, "", "fit"], [180, 2, 1, "", "setup"]], "dipy.tracking.life.LifeSignalMaker": [[180, 2, 1, "", "__init__"], [180, 2, 1, "", "calc_signal"], [180, 2, 1, "", "streamline_signal"]], "dipy.tracking.local_tracking": [[180, 1, 1, "", "LocalTracking"], [180, 1, 1, "", "ParticleFilteringTracking"]], "dipy.tracking.local_tracking.LocalTracking": [[180, 2, 1, "", "__init__"]], "dipy.tracking.local_tracking.ParticleFilteringTracking": [[180, 2, 1, "", "__init__"]], "dipy.tracking.localtrack": [[180, 3, 1, "", "local_tracker"], [180, 3, 1, "", "pft_tracker"], [180, 3, 1, "", "random"]], "dipy.tracking.mesh": [[180, 3, 1, "", "random_coordinates_from_surface"], [180, 3, 1, "", "seeds_from_surface_coordinates"], [180, 3, 1, "", "triangles_area"], [180, 3, 1, "", "vertices_to_triangles_values"]], "dipy.tracking.metrics": [[180, 3, 1, "", "arbitrarypoint"], [180, 3, 1, "", "bytes"], [180, 3, 1, "", "center_of_mass"], [180, 3, 1, "", "downsample"], [180, 3, 1, "", "endpoint"], [180, 3, 1, "", "frenet_serret"], [180, 3, 1, "", "generate_combinations"], [180, 3, 1, "", "inside_sphere"], [180, 3, 1, "", "inside_sphere_points"], [180, 3, 1, "", "intersect_sphere"], [180, 3, 1, "", "length"], [180, 3, 1, "", "longest_track_bundle"], [180, 3, 1, "", "magn"], [180, 3, 1, "", "mean_curvature"], [180, 3, 1, "", "mean_orientation"], [180, 3, 1, "", "midpoint"], [180, 3, 1, "", "midpoint2point"], [180, 3, 1, "", "principal_components"], [180, 3, 1, "", "spline"], [180, 3, 1, "", "startpoint"], [180, 3, 1, "", "winding"]], "dipy.tracking.propspeed": [[180, 3, 1, "", "eudx_both_directions"], [180, 3, 1, "", "ndarray_offset"]], "dipy.tracking.stopping_criterion": [[180, 1, 1, "", "ActStoppingCriterion"], [180, 1, 1, "", "AnatomicalStoppingCriterion"], [180, 1, 1, "", "BinaryStoppingCriterion"], [180, 1, 1, "", "CmcStoppingCriterion"], [180, 1, 1, "", "StoppingCriterion"], [180, 1, 1, "", "StreamlineStatus"], [180, 1, 1, "", "ThresholdStoppingCriterion"]], "dipy.tracking.stopping_criterion.ActStoppingCriterion": [[180, 2, 1, "", "__init__"]], "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion": [[180, 2, 1, "", "__init__"], [180, 2, 1, "", "from_pve"], [180, 2, 1, "", "get_exclude"], [180, 2, 1, "", "get_include"]], "dipy.tracking.stopping_criterion.BinaryStoppingCriterion": [[180, 2, 1, "", "__init__"]], "dipy.tracking.stopping_criterion.CmcStoppingCriterion": [[180, 2, 1, "", "__init__"]], "dipy.tracking.stopping_criterion.StoppingCriterion": [[180, 2, 1, "", "__init__"], [180, 2, 1, "", "check_point"]], "dipy.tracking.stopping_criterion.StreamlineStatus": [[180, 4, 1, "", "ENDPOINT"], [180, 4, 1, "", "INVALIDPOINT"], [180, 4, 1, "", "OUTSIDEIMAGE"], [180, 4, 1, "", "PYERROR"], [180, 4, 1, "", "TRACKPOINT"], [180, 2, 1, "", "__init__"]], "dipy.tracking.stopping_criterion.ThresholdStoppingCriterion": [[180, 2, 1, "", "__init__"]], "dipy.tracking.streamline": [[180, 3, 1, "", "center_streamlines"], [180, 3, 1, "", "cluster_confidence"], [180, 3, 1, "", "deform_streamlines"], [180, 3, 1, "", "nbytes"], [180, 3, 1, "", "orient_by_rois"], [180, 3, 1, "", "orient_by_streamline"], [180, 3, 1, "", "relist_streamlines"], [180, 3, 1, "", "select_by_rois"], [180, 3, 1, "", "select_random_set_of_streamlines"], [180, 3, 1, "", "transform_streamlines"], [180, 3, 1, "", "unlist_streamlines"], [180, 3, 1, "", "values_from_volume"]], "dipy.tracking.streamlinespeed": [[180, 4, 1, "", "Streamlines"], [180, 3, 1, "", "compress_streamlines"], [180, 3, 1, "", "length"], [180, 3, 1, "", "set_number_of_points"]], "dipy.tracking.utils": [[180, 3, 1, "", "connectivity_matrix"], [180, 3, 1, "", "density_map"], [180, 3, 1, "", "length"], [180, 3, 1, "", "max_angle_from_curvature"], [180, 3, 1, "", "min_radius_curvature_from_angle"], [180, 3, 1, "", "ndbincount"], [180, 3, 1, "", "near_roi"], [180, 3, 1, "", "path_length"], [180, 3, 1, "", "random_seeds_from_mask"], [180, 3, 1, "", "reduce_labels"], [180, 3, 1, "", "reduce_rois"], [180, 3, 1, "", "seeds_from_mask"], [180, 3, 1, "", "streamline_near_roi"], [180, 3, 1, "", "subsegment"], [180, 3, 1, "", "target"], [180, 3, 1, "", "target_line_based"], [180, 3, 1, "", "transform_tracking_output"], [180, 3, 1, "", "unique_rows"]], "dipy.tracking.vox2track": [[180, 3, 1, "", "streamline_mapping"], [180, 3, 1, "", "track_counts"]], "dipy.viz": [[181, 0, 0, "-", "gmem"], [181, 0, 0, "-", "horizon"], [181, 0, 0, "-", "panel"], [181, 0, 0, "-", "plotting"], [181, 0, 0, "-", "projections"], [181, 0, 0, "-", "regtools"], [181, 0, 0, "-", "streamline"]], "dipy.viz.gmem": [[181, 1, 1, "", "GlobalHorizon"]], "dipy.viz.gmem.GlobalHorizon": [[181, 2, 1, "", "__init__"]], "dipy.viz.horizon": [[181, 0, 0, "-", "app"], [181, 0, 0, "-", "tab"], [181, 0, 0, "-", "visualizer"]], "dipy.viz.horizon.app": [[181, 1, 1, "", "Horizon"], [181, 3, 1, "", "horizon"]], "dipy.viz.horizon.app.Horizon": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "build_scene"], [181, 2, 1, "", "build_show"]], "dipy.viz.horizon.tab": [[181, 0, 0, "-", "base"], [181, 0, 0, "-", "cluster"], [181, 0, 0, "-", "peak"], [181, 0, 0, "-", "roi"], [181, 0, 0, "-", "slice"]], "dipy.viz.horizon.tab.base": [[181, 1, 1, "", "HorizonTab"], [181, 1, 1, "", "TabManager"], [181, 3, 1, "", "build_label"], [181, 3, 1, "", "color_double_slider"], [181, 3, 1, "", "color_single_slider"]], "dipy.viz.horizon.tab.base.HorizonTab": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "build"], [181, 5, 1, "", "name"]], "dipy.viz.horizon.tab.base.TabManager": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "reposition"], [181, 5, 1, "", "tab_ui"]], "dipy.viz.horizon.tab.cluster": [[181, 1, 1, "", "ClustersTab"]], "dipy.viz.horizon.tab.cluster.ClustersTab": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "build"], [181, 5, 1, "", "name"]], "dipy.viz.horizon.tab.peak": [[181, 1, 1, "", "PeaksTab"]], "dipy.viz.horizon.tab.peak.PeaksTab": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "build"], [181, 5, 1, "", "name"]], "dipy.viz.horizon.tab.roi": [[181, 1, 1, "", "ROIsTab"]], "dipy.viz.horizon.tab.roi.ROIsTab": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "build"], [181, 5, 1, "", "name"]], "dipy.viz.horizon.tab.slice": [[181, 1, 1, "", "SlicesTab"]], "dipy.viz.horizon.tab.slice.SlicesTab": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "build"], [181, 5, 1, "", "name"]], "dipy.viz.horizon.visualizer": [[181, 0, 0, "-", "cluster"], [181, 0, 0, "-", "slice"]], "dipy.viz.horizon.visualizer.cluster": [[181, 1, 1, "", "ClustersVisualizer"]], "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "add_cluster_actors"], [181, 5, 1, "", "centroid_actors"], [181, 5, 1, "", "cluster_actors"], [181, 5, 1, "", "lengths"], [181, 2, 1, "", "recluster_tractograms"], [181, 5, 1, "", "sizes"], [181, 5, 1, "", "tractogram_clusters"]], "dipy.viz.horizon.visualizer.slice": [[181, 1, 1, "", "SlicesVisualizer"]], "dipy.viz.horizon.visualizer.slice.SlicesVisualizer": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "change_volume"], [181, 5, 1, "", "data_shape"], [181, 5, 1, "", "intensities_range"], [181, 2, 1, "", "register_picker_callback"], [181, 5, 1, "", "selected_slices"], [181, 5, 1, "", "slice_actors"], [181, 5, 1, "", "volume_max"], [181, 5, 1, "", "volume_min"]], "dipy.viz.panel": [[181, 3, 1, "", "build_label"], [181, 3, 1, "", "slicer_panel"]], "dipy.viz.plotting": [[181, 3, 1, "", "bundle_shape_profile"], [181, 3, 1, "", "compare_maps"], [181, 3, 1, "", "compare_qti_maps"]], "dipy.viz.projections": [[181, 3, 1, "", "sph_project"]], "dipy.viz.regtools": [[181, 3, 1, "", "draw_lattice_2d"], [181, 3, 1, "", "overlay_images"], [181, 3, 1, "", "overlay_slices"], [181, 3, 1, "", "plot_2d_diffeomorphic_map"], [181, 3, 1, "", "plot_slices"], [181, 3, 1, "", "simple_plot"]], "dipy.viz.streamline": [[181, 3, 1, "", "show_bundles"], [181, 3, 1, "", "viz_displacement_mag"], [181, 3, 1, "", "viz_two_bundles"], [181, 3, 1, "", "viz_vector_field"]], "dipy.workflows": [[182, 0, 0, "-", "align"], [182, 0, 0, "-", "base"], [182, 0, 0, "-", "combined_workflow"], [182, 0, 0, "-", "denoise"], [182, 0, 0, "-", "docstring_parser"], [182, 0, 0, "-", "flow_runner"], [182, 0, 0, "-", "io"], [182, 0, 0, "-", "mask"], [182, 0, 0, "-", "multi_io"], [182, 0, 0, "-", "nn"], [182, 0, 0, "-", "reconst"], [182, 0, 0, "-", "segment"], [182, 0, 0, "-", "stats"], [182, 0, 0, "-", "tracking"], [182, 0, 0, "-", "viz"], [182, 0, 0, "-", "workflow"]], "dipy.workflows.align": [[182, 1, 1, "", "ApplyTransformFlow"], [182, 1, 1, "", "BundleWarpFlow"], [182, 1, 1, "", "ImageRegistrationFlow"], [182, 1, 1, "", "MotionCorrectionFlow"], [182, 1, 1, "", "ResliceFlow"], [182, 1, 1, "", "SlrWithQbxFlow"], [182, 1, 1, "", "SynRegistrationFlow"], [182, 3, 1, "", "check_dimensions"]], "dipy.workflows.align.ApplyTransformFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "run"]], "dipy.workflows.align.BundleWarpFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.align.ImageRegistrationFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "run"]], "dipy.workflows.align.MotionCorrectionFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "run"]], "dipy.workflows.align.ResliceFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.align.SlrWithQbxFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.align.SynRegistrationFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "run"]], "dipy.workflows.base": [[182, 1, 1, "", "IntrospectiveArgumentParser"], [182, 3, 1, "", "get_args_default"], [182, 3, 1, "", "none_or_dtype"]], "dipy.workflows.base.IntrospectiveArgumentParser": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "add_description"], [182, 2, 1, "", "add_epilogue"], [182, 2, 1, "", "add_sub_flow_args"], [182, 2, 1, "", "add_workflow"], [182, 2, 1, "", "get_flow_args"], [182, 5, 1, "", "optional_parameters"], [182, 5, 1, "", "output_parameters"], [182, 5, 1, "", "positional_parameters"], [182, 2, 1, "", "show_argument"], [182, 2, 1, "", "update_argument"]], "dipy.workflows.combined_workflow": [[182, 1, 1, "", "CombinedWorkflow"]], "dipy.workflows.combined_workflow.CombinedWorkflow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_optionals"], [182, 2, 1, "", "get_sub_runs"], [182, 2, 1, "", "run_sub_flow"], [182, 2, 1, "", "set_sub_flows_optionals"]], "dipy.workflows.denoise": [[182, 1, 1, "", "GibbsRingingFlow"], [182, 1, 1, "", "LPCAFlow"], [182, 1, 1, "", "MPPCAFlow"], [182, 1, 1, "", "NLMeansFlow"], [182, 1, 1, "", "Patch2SelfFlow"]], "dipy.workflows.denoise.GibbsRingingFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.denoise.LPCAFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.denoise.MPPCAFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.denoise.NLMeansFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.denoise.Patch2SelfFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.docstring_parser": [[182, 1, 1, "", "NumpyDocString"], [182, 1, 1, "", "Reader"], [182, 3, 1, "", "dedent_lines"]], "dipy.workflows.docstring_parser.NumpyDocString": [[182, 2, 1, "", "__init__"]], "dipy.workflows.docstring_parser.Reader": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "eof"], [182, 2, 1, "", "is_empty"], [182, 2, 1, "", "peek"], [182, 2, 1, "", "read"], [182, 2, 1, "", "read_to_condition"], [182, 2, 1, "", "read_to_next_empty_line"], [182, 2, 1, "", "read_to_next_unindented_line"], [182, 2, 1, "", "reset"], [182, 2, 1, "", "seek_next_non_empty_line"]], "dipy.workflows.flow_runner": [[182, 3, 1, "", "get_level"], [182, 3, 1, "", "run_flow"]], "dipy.workflows.io": [[182, 1, 1, "", "FetchFlow"], [182, 1, 1, "", "IoInfoFlow"], [182, 1, 1, "", "SplitFlow"]], "dipy.workflows.io.FetchFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_fetcher_datanames"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "load_module"], [182, 2, 1, "", "run"]], "dipy.workflows.io.IoInfoFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.io.SplitFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.mask": [[182, 1, 1, "", "MaskFlow"]], "dipy.workflows.mask.MaskFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.multi_io": [[182, 1, 1, "", "IOIterator"], [182, 3, 1, "", "basename_without_extension"], [182, 3, 1, "", "common_start"], [182, 3, 1, "", "concatenate_inputs"], [182, 3, 1, "", "connect_output_paths"], [182, 3, 1, "", "io_iterator"], [182, 3, 1, "", "io_iterator_"], [182, 3, 1, "", "slash_to_under"]], "dipy.workflows.multi_io.IOIterator": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "create_directories"], [182, 2, 1, "", "create_outputs"], [182, 2, 1, "", "file_existence_check"], [182, 2, 1, "", "set_inputs"], [182, 2, 1, "", "set_out_dir"], [182, 2, 1, "", "set_out_fnames"], [182, 2, 1, "", "set_output_keys"]], "dipy.workflows.nn": [[182, 1, 1, "", "EVACPlusFlow"]], "dipy.workflows.nn.EVACPlusFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.reconst": [[182, 1, 1, "", "ReconstCSAFlow"], [182, 1, 1, "", "ReconstCSDFlow"], [182, 1, 1, "", "ReconstDkiFlow"], [182, 1, 1, "", "ReconstDtiFlow"], [182, 1, 1, "", "ReconstIvimFlow"], [182, 1, 1, "", "ReconstMAPMRIFlow"], [182, 1, 1, "", "ReconstRUMBAFlow"]], "dipy.workflows.reconst.ReconstCSAFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstCSDFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstDkiFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_fitted_tensor"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstDtiFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_fitted_tensor"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstIvimFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_fitted_ivim"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstMAPMRIFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstRUMBAFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.segment": [[182, 1, 1, "", "LabelsBundlesFlow"], [182, 1, 1, "", "MedianOtsuFlow"], [182, 1, 1, "", "RecoBundlesFlow"]], "dipy.workflows.segment.LabelsBundlesFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.segment.MedianOtsuFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.segment.RecoBundlesFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.stats": [[182, 1, 1, "", "BundleAnalysisTractometryFlow"], [182, 1, 1, "", "BundleShapeAnalysis"], [182, 1, 1, "", "LinearMixedModelsFlow"], [182, 1, 1, "", "SNRinCCFlow"], [182, 3, 1, "", "buan_bundle_profiles"]], "dipy.workflows.stats.BundleAnalysisTractometryFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.stats.BundleShapeAnalysis": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.stats.LinearMixedModelsFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_metric_name"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"], [182, 2, 1, "", "save_lmm_plot"]], "dipy.workflows.stats.SNRinCCFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.tracking": [[182, 1, 1, "", "LocalFiberTrackingPAMFlow"], [182, 1, 1, "", "PFTrackingPAMFlow"]], "dipy.workflows.tracking.LocalFiberTrackingPAMFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.tracking.PFTrackingPAMFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.viz": [[182, 1, 1, "", "HorizonFlow"]], "dipy.workflows.viz.HorizonFlow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "run"]], "dipy.workflows.workflow": [[182, 1, 1, "", "Workflow"]], "dipy.workflows.workflow.Workflow": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "get_io_iterator"], [182, 2, 1, "", "get_short_name"], [182, 2, 1, "", "get_sub_runs"], [182, 2, 1, "", "manage_output_overwrite"], [182, 2, 1, "", "run"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"api": [0, 183], "chang": [0, 8, 17], "dipi": [0, 5, 11, 16, 20, 22, 65, 151, 154, 159, 166, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "1": [0, 33, 72, 90, 228, 229, 230, 231, 232, 233, 234, 235, 236], "7": [0, 225, 236], "0": [0, 63, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228], "6": [0, 224, 235], "5": [0, 234], "4": [0, 232, 233], "3": [0, 231], "2": [0, 33, 45, 72, 90, 164, 230], "16": [0, 223], "15": [0, 222], "14": [0, 221], "13": [0, 220], "12": [0, 219], "10": [0, 217], "9": [0, 227], "8": [0, 226], "between": [0, 59, 86, 112, 155], "cross": [25, 70, 80], "preserv": 25, "contextu": [25, 27, 45], "enhanc": [25, 27, 45, 114], "refer": [5, 25, 26, 30, 32, 33, 35, 36, 38, 39, 40, 41, 51, 52, 54, 55, 56, 57, 59, 60, 63, 67, 68, 70, 71, 72, 73, 74, 75, 79, 80, 81, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 99, 100, 101, 105, 106, 107, 109, 110, 113, 114, 121, 123, 124, 125, 126, 128, 134, 147, 149, 150, 152, 153, 155, 156, 157, 158, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 243], "fiber": [26, 29, 45, 72, 80, 90, 109, 158], "bundl": [26, 99, 100, 101, 109, 123, 124, 125, 135, 148, 149, 150, 177], "coher": 26, "measur": 26, "acknowledg": 26, "track": [29, 35, 39, 40, 45, 67, 158, 180, 182], "linear": [30, 149, 176], "fascicl": [30, 40, 91], "evalu": 30, "life": [30, 180], "surfac": [32, 136], "seed": 32, "tractographi": [32, 36, 38, 41, 112, 113, 115], "displai": 32, "gener": [32, 82], "list": 32, "posit": [32, 89, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "bootstrap": 33, "closest": [33, 158], "peak": [33, 158, 173, 174, 181], "direct": [33, 34, 37, 63, 100, 173], "getter": [33, 34, 37], "exampl": [33, 45, 88, 89, 99, 161, 168, 170, 171, 172, 174, 176, 178, 180, 181], "csd": [33, 48, 85, 156], "model": [33, 39, 40, 70, 73, 74, 75, 79, 80, 81, 84, 90, 91, 93, 175], "an": [34, 37, 135], "introduct": [14, 21, 34, 35, 37, 67, 147], "determinist": [34, 158], "maximum": 34, "basic": [35, 67], "particl": [36, 158], "filter": [36, 158], "cmc": 36, "act": [36, 41], "stop": [36, 41], "criterion": [36, 41], "probabilist": [37, 158], "parallel": [38, 47, 48], "transport": 38, "robust": [39, 90, 95], "unbias": [39, 90], "base": [39, 77, 90, 105, 149, 157, 172, 176, 181, 182, 243], "spheric": [39, 72, 90, 92, 156, 176, 243, 244], "deconvolut": [39, 72, 78, 90, 119, 156], "rumba": [39, 176], "sd": 39, "spars": [40, 91], "us": [5, 41, 47, 48, 51, 53, 54, 55, 60, 68, 81, 86, 87, 92, 95, 146, 152, 175], "variou": 41, "threshold": [41, 53, 177], "binari": [22, 41, 103], "note": [1, 41, 146, 161, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "file": [42, 44, 45], "format": [42, 45], "read": 44, "write": 44, "streamlin": [44, 45, 105, 110, 127, 130, 135, 136, 149, 157, 174, 180, 181], "overview": [7, 8, 13, 18, 19, 44, 59, 61, 152, 158, 237], "content": [2, 45], "quick": [45, 64, 237], "start": [45, 64, 65, 145], "preprocess": [45, 58], "reconstruct": [45, 47, 48, 68, 69, 71, 72, 73, 74, 75, 76, 79, 82, 85, 86, 88, 90, 91, 92, 156], "analysi": [45, 127, 179], "connect": [45, 127, 131], "registr": [45, 97, 98, 99, 100, 101, 102, 103, 106, 107, 149, 150, 157], "segment": [45, 50, 108, 111, 123, 149, 177, 182], "simul": [45, 118, 121, 122], "multiprocess": [45, 46], "visual": [45, 132, 134, 135, 136, 181], "workflow": [8, 15, 17, 45, 138, 139, 141, 154, 182], "q": [47, 71, 82, 87, 88, 89, 239, 241], "ball": [47, 71], "brain": [50, 108], "median_otsu": [50, 108, 177], "denois": [51, 53, 54, 55, 56, 152, 172, 175, 182], "imag": [51, 53, 54, 55, 63, 76, 82, 86, 88, 89, 103, 105, 117, 145, 156, 157, 166, 174, 175, 241], "adapt": 51, "soft": 51, "coeffici": 51, "match": 51, "ascm": 51, "suppress": [52, 153], "gibb": [52, 153, 172], "oscil": [52, 153], "local": [10, 53, 55, 68, 152, 158, 172], "pca": [53, 54, 152, 172], "via": [53, 56], "empir": 53, "estim": [53, 54, 60, 63, 72, 87, 90, 172], "nois": [53, 54, 60, 172], "standard": [53, 54], "deviat": [53, 54], "perform": 53, "localpca": [53, 172], "function": [53, 72, 80, 90], "marcenko": [54, 152], "pastur": [54, 152], "algorithm": [54, 95], "non": 55, "mean": [55, 74, 86, 156], "nlmean": [55, 152, 172], "patch2self": [56, 172], "self": 56, "supervis": 56, "statist": 56, "independ": 56, "gradient": [57, 168, 170, 174, 180], "sphere": [57, 170, 172], "volum": [59, 135, 137, 155], "motion": [59, 83, 155, 156], "correct": [59, 155], "dwi": 59, "dataset": [2, 59, 61, 148, 151], "piesno": [60, 172], "reslic": [61, 168], "diffus": [61, 63, 73, 74, 75, 76, 79, 84, 86, 87, 93, 145, 152, 156, 166, 175], "snr": 63, "weight": [63, 117, 175], "b": [63, 239, 240], "i": [63, 159], "42": 63, "0695455758": 63, "57": 63, "05039": 63, "99871": 63, "0054406": 63, "23": 63, "9329492871": 63, "get": [10, 65, 145, 146], "histolog": 68, "resdnn": 68, "k": 70, "fold": 70, "valid": 70, "comparison": [70, 148], "constant": [71, 156], "solid": [71, 156], "angl": [71, 156], "constrain": [72, 74, 156], "step": [72, 90, 145], "respons": [72, 80, 90], "fodf": [72, 90], "signal": [73, 74, 75, 79, 84, 86, 92, 93], "kurtosi": [74, 86, 156], "tensor": [73, 74, 79, 95, 156], "optim": [74, 170], "dki": [74, 121, 156, 176], "fraction": 74, "anisotropi": 74, "wmti": 75, "spectrum": 76, "calcul": [77, 94, 126, 128], "dsi": [77, 78, 119, 176], "scalar": [77, 94], "map": [77, 84, 94, 124, 128, 131, 156], "v": [78, 119], "invari": 80, "forecast": [80, 176], "free": 81, "water": 81, "elimin": 81, "remov": 81, "dti": [81, 156, 176], "contamin": 81, "sampl": [82, 241], "intravoxel": [83, 156], "incoher": [83, 156], "continu": [84, 93], "analyt": [84, 93, 148], "mri": [84, 156], "multi": 85, "shell": 85, "tissu": [85, 117, 177], "msdki": [86, 176], "test": [45, 86, 146, 164], "synthet": 86, "data": [2, 86, 171, 175], "relationship": 86, "smt2": 86, "time": [28, 31, 43, 49, 62, 66, 87, 96, 104, 116, 120, 129, 133, 140], "depend": [4, 87], "space": [87, 88, 89, 174], "indic": 87, "qt": 87, "dmri": 87, "trajectori": [88, 89], "qti": [88, 89, 176], "theori": [88, 89, 242], "usag": [88, 89, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "appli": [89, 105, 157], "constraint": 89, "instal": [13, 89, 146], "harmon": [92, 243], "3d": [93, 97, 107], "shore": [93, 94, 176], "restor": 95, "fit": 95, "affin": [97, 98, 168], "mask": [98, 177, 182], "groupwis": 99, "how": 99, "work": [1, 16, 99], "extend": [99, 114], "capabl": 99, "nonrigid": [101, 150], "bundlewarp": [101, 150, 168], "diffeomorph": [103, 106, 107, 157], "fuzzi": 103, "deform": [105, 150], "symmetr": [106, 107, 157], "2d": 106, "automat": 109, "extract": [109, 123, 177], "recobundl": [109, 149, 177], "fast": 110, "search": 110, "cluster": [112, 113, 114, 115, 126, 177, 181], "avail": [112, 113], "featur": [8, 112, 114, 177, 237], "ident": [112, 177], "resampl": [112, 168], "center": 112, "mass": 112, "midpoint": [112, 180], "arclength": 112, "vector": 112, "endpoint": [112, 180], "metric": [113, 114, 135, 168, 177, 180], "averag": 113, "pointwis": 113, "euclidean": 113, "sum": 113, "cosin": 113, "quickbundl": [114, 115, 177], "differ": [9, 114, 135], "framework": [114, 148], "classif": 117, "t1": [117, 137], "structur": [117, 152], "multitensor": [121, 122], "afq": 123, "tract": 123, "profil": [123, 148, 170], "from": [8, 18, 123, 135, 137, 146], "buan": [124, 125, 148], "assign": 124, "creation": 124, "shape": [125, 148], "similar": [125, 148], "score": 125, "outlier": 126, "confid": 126, "index": 126, "path": 128, "length": [128, 130, 180], "size": 130, "reduct": 130, "matric": 131, "roi": [131, 136, 181], "intersect": 131, "densiti": 131, "advanc": [15, 134], "interact": 134, "show": 135, "everi": 135, "orient": 135, "color": 135, "point": 135, "valu": [5, 135, 137], "default": 135, "colormap": [135, 137], "your": [8, 11, 19, 135, 137], "specif": [135, 137, 148], "render": [136, 137], "simpl": 137, "slice": [137, 181], "rang": 137, "fa": 137, "creat": [11, 137, 138, 141], "mosaic": 137, "new": [8, 138, 141], "combin": 138, "public": 1, "A": [1, 17, 22, 161, 237], "cite": 1, "our": 1, "code": [5, 6, 10, 16], "style": 5, "guidelin": 5, "import": [5, 180], "cython": 5, "variabl": 5, "declar": 5, "c": 5, "librari": 5, "error": 5, "return": [5, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "pointer": 5, "cast": 5, "loop": 5, "document": [5, 24, 146], "commit": [6, 8, 17], "messag": 6, "configur": [7, 11], "git": [7, 12, 13, 15], "In": [7, 8, 13, 18, 19, 145], "detail": [7, 8, 13, 18, 19], "user": 7, "name": 7, "email": 7, "alias": 7, "editor": 7, "merg": [7, 8], "fanci": 7, "log": 7, "output": [7, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "develop": [8, 12, 18, 20, 23], "summari": [8, 15], "consid": 8, "delet": 8, "master": 8, "branch": 8, "updat": [8, 10], "mirror": 8, "trunk": [8, 17], "make": [8, 11, 18, 22], "The": [8, 239, 240, 244], "edit": 8, "more": 8, "ask": [8, 142], "review": 8, "some": 8, "other": [8, 22, 170], "thing": 8, "you": 8, "might": 8, "want": 8, "do": [8, 22], "github": [8, 11], "sever": 8, "peopl": 8, "share": 8, "singl": 8, "repositori": [8, 19], "explor": 8, "rebas": 8, "recov": 8, "mess": 8, "up": [8, 11, 19], "rewrit": 8, "histori": [8, 17], "two": 9, "three": 9, "dot": 9, "spec": 9, "follow": 10, "latest": 10, "sourc": [10, 16, 146], "copi": [10, 11], "own": 11, "fork": [11, 19], "set": [11, 19], "account": 11, "resourc": 15, "tutori": 15, "manual": 15, "page": 15, "onlin": 15, "maintain": 17, "integr": 17, "few": 17, "long": 17, "seri": 17, "check": 17, "push": 17, "patch": 18, "move": 18, "clone": 19, "link": 19, "upstream": 19, "repo": 19, "guid": 22, "releas": [22, 146, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "checklist": 22, "upload": 22, "build": [22, 146], "stuff": [22, 239], "need": 22, "keep": [], "compat": [], "python": [145, 146, 166], "futur": [], "print": [], "divis": [], "modul": [168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "xrang": [], "reduc": 176, "string": [], "next": 145, "except": [], "dictionari": [], "frequent": 142, "question": 142, "theoret": 142, "practic": 142, "gimbal": 143, "lock": 143, "mathemat": [143, 244], "glossari": 144, "highlight": [145, 162], "announc": [145, 163], "support": [145, 146, 237], "anaconda": 146, "packag": 146, "window": 146, "osx": 146, "linux": 146, "pip": 146, "contact": 146, "u": 146, "common": 146, "problem": 146, "multipl": 146, "altern": 146, "memori": 146, "issu": 146, "version": [146, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "all": 146, "oper": 146, "system": [146, 237], "unix": 146, "e": 146, "g": 146, "ubuntu": 146, "debian": 146, "fedora": 146, "mandriva": 146, "mayb": 146, "redhat": 146, "openmp": 146, "under": 146, "homebrew": 146, "org": 146, "onli": 146, "tip": 146, "troubleshoot": 146, "command": [147, 216], "line": [147, 216], "interfac": [147, 154], "group": 148, "across": 148, "popul": 148, "reproduc": 148, "result": 148, "larger": 148, "white": [149, 150], "matter": [149, 150], "partial": 150, "fulli": 150, "download": 151, "overcomplet": 152, "method": [152, 158, 168, 180], "unring": 153, "appar": 156, "propag": 156, "csa": 156, "ivim": [156, 176], "transform": [157, 168], "eudx": 158, "pft": 158, "what": [159, 239], "mission": 160, "statement": 160, "about": [161, 239], "older": 162, "past": 163, "subpackag": 166, "util": [166, 174, 175, 176, 180, 216], "get_info": 166, "align": [168, 182], "_public": 168, "cpd": 168, "imaffin": 168, "imwarp": 168, "scalespac": 168, "streamlinear": 168, "streamwarp": 168, "bunch": 168, "verbositylevel": 168, "syn_registr": 168, "paramet": [168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "register_dwi_to_templ": 168, "write_map": 168, "read_map": 168, "affine_registr": 168, "center_of_mass": [168, 180], "translat": 168, "rigid": 168, "rigid_isosc": 168, "rigid_sc": 168, "_method_dict": 168, "register_seri": 168, "register_dwi_seri": 168, "motion_correct": 168, "streamline_registr": 168, "deformableregistr": 168, "attribut": [168, 170, 176, 178, 180], "gaussian_kernel": 168, "low_rank_eigen": 168, "initialize_sigma2": 168, "lowrankq": 168, "affineinversionerror": 168, "affineinvalidvalueserror": 168, "affinemap": 168, "mutualinformationmetr": 168, "affineregistr": 168, "_transform_method": 168, "transform_centers_of_mass": 168, "transform_geometric_cent": 168, "transform_origin": 168, "diffeomorphicmap": 168, "diffeomorphicregistr": 168, "symmetricdiffeomorphicregistr": 168, "registrationstag": 168, "logger": [168, 170, 174, 175, 176, 177], "mult_aff": 168, "get_direction_and_spac": 168, "similaritymetr": 168, "ccmetric": 168, "emmetr": 168, "ssdmetric": 168, "v_cycle_2d": 168, "v_cycle_3d": 168, "isotropicscalespac": 168, "streamlinedistancemetr": 168, "bundlemindistancemetr": 168, "bundlemindistancematrixmetr": 168, "bundlemindistanceasymmetricmetr": 168, "bundlesumdistancematrixmetr": 168, "jointbundlemindistancemetr": 168, "streamlinelinearregistr": 168, "streamlineregistrationmap": 168, "jointstreamlineregistrationmap": 168, "bundle_sum_dist": 168, "bundle_min_dist": 168, "bundle_min_distance_fast": 168, "bundle_min_distance_asymmetric_fast": 168, "remove_clusters_by_s": 168, "progressive_slr": 168, "slr_with_qbx": 168, "groupwise_slr": 168, "get_unique_pair": 168, "compose_matrix44": 168, "decompose_matrix44": 168, "average_bundle_length": 168, "find_miss": 168, "bundlewarp_vector_fil": 168, "bundlewarp_shape_analysi": 168, "boot": 169, "core": 170, "geometri": 170, "graph": 170, "histeq": 170, "ndindex": 170, "onetim": 170, "rng": 170, "sphere_stat": 170, "subdivide_octahedron": 170, "wavelet": 170, "_tuple2ax": 170, "sphere2cart": 170, "cart2spher": 170, "sph2latlon": 170, "normalized_vector": 170, "vector_norm": 170, "rodrigues_axis_rot": 170, "nearest_pos_semi_def": 170, "sphere_dist": 170, "see": [170, 171, 172, 173, 174, 176, 178, 180], "also": [170, 171, 172, 173, 174, 176, 178, 180], "cart_dist": 170, "vector_cosin": 170, "lambert_equal_area_projection_polar": 170, "lambert_equal_area_projection_cart": 170, "euler_matrix": 170, "compose_matrix": 170, "decompose_matrix": 170, "rais": [170, 171, 176, 180], "circumradiu": 170, "vec2vec_rotmat": 170, "compose_transform": 170, "perpendicular_direct": 170, "dist_to_corn": 170, "is_hemispher": 170, "gradientt": 170, "unique_bv": 170, "gradient_table_from_bvals_bvec": 170, "gradient_table_from_qvals_bvec": 170, "gradient_table_from_gradient_strength_bvec": 170, "gradient_t": 170, "reorient_bvec": 170, "generate_bvec": 170, "round_bval": 170, "unique_bvals_toler": 170, "get_bval_indic": 170, "unique_bvals_magnitud": 170, "check_multi_b": 170, "btens_to_param": 170, "params_to_bten": 170, "ornt_map": [170, 174], "reorient_vector": [170, 174], "reorient_on_axi": [170, 174], "orientation_from_str": [170, 174], "orientation_to_str": [170, 174], "resetmixin": 170, "onetimeproperti": 170, "auto_attr": 170, "sklearnlinearsolv": 170, "nonnegativeleastsquar": 170, "positivedefiniteleastsquar": 170, "spdot": 170, "sparse_nnl": 170, "wichmannhill2006": 170, "wichmannhill1982": 170, "lecuy": 170, "hemispher": [170, 172], "faces_from_sphere_vertic": 170, "unique_edg": 170, "unique_set": 170, "disperse_charg": [170, 172], "disperse_charges_alt": 170, "euler_characteristic_check": 170, "octahedron_vertic": 170, "octahedron_fac": 170, "icosahedron_vertic": 170, "icosahedron_fac": 170, "unit_octahedron": 170, "unit_icosahedron": 170, "hemi_icosahedron": 170, "random_uniform_on_spher": 170, "eigenstat": 170, "compare_orientation_set": 170, "angular_similar": 170, "create_unit_spher": 170, "create_unit_hemispher": 170, "cshift3d": 170, "permutationinvers": 170, "afb3d_a": 170, "sfb3d_a": 170, "sfb3d": 170, "afb3d": 170, "dwt3d": 170, "idwt3d": 170, "fetcher": 171, "dataerror": 171, "loads_compat": 171, "data_dir": 171, "get_sim_voxel": 171, "get_skeleton": 171, "get_spher": [171, 172], "default_spher": 171, "small_spher": 171, "get_3shell_gtab": 171, "get_isbi2013_2shell_gtab": 171, "get_gtab_taiwan_dsi": 171, "dsi_voxel": 171, "dsi_deconv_voxel": 171, "mrtrix_spherical_funct": 171, "get_cmap": 171, "two_cingulum_bundl": 171, "matlab_life_result": 171, "load_sdp_constraint": 171, "copyfileobj_withprogress": 171, "check_md5": 171, "fetch_data": 171, "fetch_isbi2013_2shel": 171, "fetch_stanford_label": 171, "fetch_sherbrooke_3shel": 171, "fetch_stanford_hardi": 171, "fetch_resdnn_weight": 171, "fetch_synb0_weight": 171, "fetch_synb0_test": 171, "fetch_evac_weight": 171, "fetch_evac_test": 171, "fetch_stanford_t1": 171, "fetch_stanford_pve_map": 171, "fetch_stanford_track": 171, "fetch_taiwan_ntu_dsi": 171, "fetch_syn_data": 171, "fetch_mni_templ": 171, "fetch_scil_b0": 171, "fetch_bundles_2_subject": 171, "fetch_ivim": 171, "fetch_cfin_multib": 171, "fetch_file_format": 171, "fetch_bundle_atlas_hcp842": 171, "fetch_target_tractogram_hcp": 171, "fetch_bundle_fa_hcp": 171, "fetch_qtdmri_test_retest_2subject": 171, "fetch_gold_standard_io": 171, "fetch_qte_lte_pt": 171, "fetch_cti_rat1": 171, "fetch_fury_surfac": 171, "fetch_dib_70_lte_pte_st": 171, "fetch_dib_217_lte_pte_st": 171, "fetch_ptt_minimal_dataset": 171, "fetch_bundle_warp_dataset": 171, "get_fnam": 171, "read_qtdmri_test_retest_2subject": 171, "read_scil_b0": 171, "read_siemens_scil_b0": 171, "read_isbi2013_2shel": 171, "read_sherbrooke_3shel": 171, "read_stanford_label": 171, "read_stanford_hardi": 171, "read_stanford_t1": 171, "read_stanford_pve_map": 171, "read_taiwan_ntu_dsi": 171, "read_syn_data": 171, "fetch_tissue_data": 171, "read_tissue_data": 171, "read_mni_templ": 171, "fetch_cenir_multib": 171, "read_cenir_multib": 171, "read_bundles_2_subject": 171, "read_ivim": 171, "read_cfin_dwi": 171, "read_cfin_t1": 171, "get_file_format": 171, "get_bundle_atlas_hcp842": 171, "get_two_hcp842_bundl": 171, "get_target_tractogram_hcp": 171, "read_qte_lte_pt": 171, "read_dib_70_lte_pte_st": 171, "read_dib_217_lte_pte_st": 171, "extract_example_tract": 171, "read_five_af_bundl": 171, "to_bids_descript": 171, "fetch_hcp": 171, "fetch_hbn": 171, "adaptive_soft_match": 172, "noise_estim": 172, "non_local_mean": 172, "gibbs_remov": 172, "genpca": 172, "mppca": 172, "estimate_sigma": 172, "peaksandmetr": 173, "peak_directions_nl": 173, "peak_direct": 173, "peaks_from_model": 173, "reshape_peaks_for_visu": 173, "io": [174, 182], "bvectxt": 174, "dpy": 174, "pickl": 174, "stateful_tractogram": 174, "vtk": 174, "read_bvec_fil": 174, "read_bvals_bvec": 174, "load_nifti_data": 174, "load_nifti": 174, "save_nifti": 174, "save_qa_metr": 174, "load_peak": 174, "save_peak": 174, "peaks_to_nifti": 174, "save_pickl": 174, "load_pickl": 174, "origin": 174, "statefultractogram": 174, "set_sft_logger_level": 174, "save_tractogram": 174, "load_tractogram": 174, "load_gener": 174, "save_gener": 174, "load_trk": 174, "load_tck": 174, "load_vtk": 174, "load_vtp": 174, "load_fib": 174, "load_dpi": 174, "save_trk": 174, "save_tck": 174, "save_vtk": 174, "save_vtp": 174, "save_fib": 174, "save_dpi": 174, "nifti1_symmat": 174, "make5d": 174, "decfa": 174, "decfa_to_float": 174, "is_reference_info_valid": 174, "get_reference_info": 174, "is_header_compat": 174, "create_tractogram_head": 174, "create_nifti_head": 174, "save_buan_profiles_hdf5": 174, "read_img_arr_or_path": 174, "load_polydata": 174, "save_polydata": 174, "save_vtk_streamlin": 174, "load_vtk_streamlin": 174, "nn": [175, 182], "cnn_1d_denois": 175, "titl": [45, 164, 175], "cnn": 175, "evac": 175, "histo_resdnn": 175, "synb0": 175, "cnn1ddenois": 175, "block": 175, "channelsum": 175, "evacplu": 175, "prepare_img": 175, "init_model": 175, "historesdnn": 175, "singlelayerperceptron": 175, "multiplelayerpercepton": 175, "encoderblock": 175, "decoderblock": 175, "unet3d": 175, "normal": 175, "unnorm": 175, "set_logger_level": 175, "transform_img": 175, "recover_img": 175, "reconst": [176, 182], "cach": 176, "cross_valid": 176, "csdeconv": 176, "dki_micro": 176, "fwdti": 176, "gqi": 176, "mapmri": 176, "mcsd": 176, "multi_voxel": 176, "odf": 176, "qtdmri": 176, "sfm": 176, "shm": 176, "reconstmodel": 176, "reconstfit": 176, "coeff_of_determin": 176, "kfold_xval": 176, "axsymshrespons": 176, "constrainedsphericaldeconvmodel": 176, "constrainedsdtmodel": 176, "auto_respons": 176, "response_from_mask": 176, "estimate_respons": 176, "forward_sdt_deconv_mat": 176, "odf_deconv": 176, "odf_sh_to_sharp": 176, "mask_for_response_ssst": 176, "response_from_mask_ssst": 176, "auto_response_ssst": 176, "recursive_respons": 176, "fa_trace_to_lambda": 176, "diffusionkurtosismodel": 176, "diffusionkurtosisfit": 176, "carlson_rf": 176, "carlson_rd": 176, "directional_diffus": 176, "directional_diffusion_vari": 176, "directional_kurtosi": 176, "apparent_kurtosis_coef": 176, "mean_kurtosi": 176, "radial_kurtosi": 176, "axial_kurtosi": 176, "kurtosis_maximum": 176, "mean_kurtosis_tensor": 176, "kurtosis_fractional_anisotropi": 176, "dki_predict": 176, "params_to_dki_param": 176, "ls_fit_dki": 176, "cls_fit_dki": 176, "wrotat": 176, "wrotate_el": 176, "wcon": 176, "split_dki_param": 176, "kurtosismicrostructuremodel": 176, "kurtosismicrostructuralfit": 176, "axonal_water_fract": 176, "diffusion_compon": 176, "dkimicro_predict": 176, "tortuos": 176, "diffusionspectrummodel": 176, "diffusionspectrumfit": 176, "diffusionspectrumdeconvmodel": 176, "diffusionspectrumdeconvfit": 176, "create_qspac": 176, "create_qt": 176, "hanning_filt": 176, "pdf_interp_coord": 176, "pdf_odf": 176, "half_to_full_qspac": 176, "project_hemisph_bvec": 176, "threshold_propag": 176, "gen_psf": 176, "lr_deconv": 176, "tensormodel": 176, "tensorfit": 176, "fractional_anisotropi": 176, "geodesic_anisotropi": 176, "mean_diffus": 176, "axial_diffus": 176, "radial_diffus": 176, "trace": 176, "color_fa": 176, "determin": 176, "isotrop": 176, "deviator": 176, "norm": 176, "mode": 176, "planar": 176, "apparent_diffusion_coef": 176, "tensor_predict": 176, "iter_fit_tensor": 176, "wls_fit_tensor": 176, "ols_fit_tensor": 176, "nlls_fit_tensor": 176, "restore_fit_tensor": 176, "_lt_indic": 176, "from_lower_triangular": 176, "_lt_row": 176, "_lt_col": 176, "lower_triangular": 176, "decompose_tensor": 176, "design_matrix": 176, "quantize_evec": 176, "eig_from_lo_tri": 176, "forecastmodel": 176, "forecastfit": 176, "find_signal_mean": 176, "forecast_error_func": 176, "psi_l": 176, "forecast_matrix": 176, "rho_matrix": 176, "lb_forecast": 176, "freewatertensormodel": 176, "freewatertensorfit": 176, "fwdti_predict": 176, "wls_iter": 176, "nls_iter": 176, "nls_fit_tensor": 176, "lower_triangular_to_choleski": 176, "cholesky_to_lower_triangular": 176, "generalizedqsamplingmodel": 176, "generalizedqsamplingfit": 176, "normalize_qa": 176, "squared_radial_compon": 176, "npa": 176, "equatorial_zone_vertic": 176, "polar_zone_vertic": 176, "upper_hemi_map": 176, "equatorial_maximum": 176, "patch_vertic": 176, "patch_maximum": 176, "odf_sum": 176, "patch_sum": 176, "triple_odf_maxima": 176, "ivimmodeltrr": 176, "ivimmodelvp": 176, "ivimfit": 176, "ivim_predict": 176, "f_d_star_predict": 176, "f_d_star_error": 176, "ivim_model_selector": 176, "mapmrimodel": 176, "mapmrifit": 176, "isotropic_scale_factor": 176, "mapmri_index_matrix": 176, "b_mat": 176, "b_mat_isotrop": 176, "mapmri_phi_1d": 176, "mapmri_phi_matrix": 176, "mapmri_psi_1d": 176, "mapmri_psi_matrix": 176, "mapmri_odf_matrix": 176, "mapmri_isotropic_phi_matrix": 176, "mapmri_isotropic_radial_signal_basi": 176, "mapmri_isotropic_m_mu_independ": 176, "mapmri_isotropic_m_mu_depend": 176, "mapmri_isotropic_psi_matrix": 176, "mapmri_isotropic_radial_pdf_basi": 176, "mapmri_isotropic_k_mu_independ": 176, "mapmri_isotropic_k_mu_depend": 176, "binomialfloat": 176, "mapmri_isotropic_odf_matrix": 176, "mapmri_isotropic_odf_sh_matrix": 176, "mapmri_isotropic_laplacian_reg_matrix": 176, "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix": 176, "mapmri_isotropic_index_matrix": 176, "create_rspac": 176, "delta": 176, "map_laplace_u": 176, "map_laplace_t": 176, "map_laplace_": 176, "mapmri_stu_reg_matric": 176, "mapmri_laplacian_reg_matrix": 176, "generalized_crossvalidation_arrai": 176, "generalized_crossvalid": 176, "gcv_cost_funct": 176, "multishellrespons": 176, "multishelldeconvmodel": 176, "msdeconvfit": 176, "qpfitter": 176, "multi_tissue_basi": 176, "solve_qp": 176, "multi_shell_fiber_respons": 176, "mask_for_response_msmt": 176, "response_from_mask_msmt": 176, "auto_response_msmt": 176, "meandiffusionkurtosismodel": 176, "meandiffusionkurtosisfit": 176, "mean_signal_bvalu": 176, "msk_from_awf": 176, "awf_from_msk": 176, "msdki_predict": 176, "wls_fit_msdki": 176, "multivoxelfit": 176, "callablearrai": 176, "multi_voxel_fit": 176, "odfmodel": 176, "odffit": 176, "gfa": 176, "minmax_norm": 176, "qtdmrimodel": 176, "qtdmrifit": 176, "qtdmri_to_mapmri_matrix": 176, "qtdmri_isotropic_to_mapmri_matrix": 176, "qtdmri_temporal_norm": 176, "qtdmri_mapmri_norm": 176, "qtdmri_mapmri_isotropic_norm": 176, "qtdmri_signal_matrix_": 176, "qtdmri_signal_matrix": 176, "qtdmri_eap_matrix": 176, "qtdmri_isotropic_signal_matrix_": 176, "qtdmri_isotropic_signal_matrix": 176, "qtdmri_eap_matrix_": 176, "qtdmri_isotropic_eap_matrix_": 176, "qtdmri_isotropic_eap_matrix": 176, "radial_basis_opt": 176, "angular_basis_opt": 176, "radial_basis_eap_opt": 176, "angular_basis_eap_opt": 176, "temporal_basi": 176, "qtdmri_index_matrix": 176, "qtdmri_isotropic_index_matrix": 176, "qtdmri_laplacian_reg_matrix": 176, "qtdmri_isotropic_laplacian_reg_matrix": 176, "part23_reg_matrix_q": 176, "part23_iso_reg_matrix_q": 176, "part4_reg_matrix_q": 176, "part4_iso_reg_matrix_q": 176, "part1_reg_matrix_tau": 176, "part23_reg_matrix_tau": 176, "part4_reg_matrix_tau": 176, "h": 176, "qtdmri_isotropic_sc": 176, "qtdmri_anisotropic_sc": 176, "design_matrix_spati": 176, "create_rt_space_grid": 176, "qtdmri_number_of_coeffici": 176, "l1_crossvalid": 176, "elastic_crossvalid": 176, "visualise_gradient_table_g_delta_rainbow": 176, "qtimodel": 176, "qtifit": 176, "from_3x3_to_6x1": 176, "from_6x1_to_3x3": 176, "from_6x6_to_21x1": 176, "from_21x1_to_6x6": 176, "cvxpy_1x6_to_3x3": 176, "cvxpy_1x21_to_6x6": 176, "dtd_covari": 176, "qti_sign": 176, "rumbasdmodel": 176, "rumbafit": 176, "rumba_deconv": 176, "mbessel_ratio": 176, "generate_kernel": 176, "rumba_deconv_glob": 176, "isotropicmodel": 176, "isotropicfit": 176, "exponentialisotropicmodel": 176, "exponentialisotropicfit": 176, "sparsefasciclemodel": 176, "sparsefasciclefit": 176, "sfm_design_matrix": 176, "sphharmmodel": 176, "qballbasemodel": 176, "sphharmfit": 176, "csaodfmodel": 176, "opdtmodel": 176, "qballmodel": 176, "residualbootstrapwrapp": 176, "forward_sdeconv_mat": 176, "sh_to_rh": 176, "gen_dirac": 176, "spherical_harmon": 176, "real_sph_harm": 176, "real_sh_tournier_from_index": 176, "real_sh_descoteaux_from_index": 176, "real_sh_tourni": 176, "real_sh_descoteaux": 176, "real_sym_sh_mrtrix": 176, "real_sym_sh_basi": 176, "sph_harm_ind_list": 176, "order_from_ncoef": 176, "smooth_pinv": 176, "lazy_index": 176, "normalize_data": 176, "hat": 176, "lcr_matrix": 176, "bootstrap_data_arrai": 176, "bootstrap_data_voxel": 176, "sf_to_sh": [172, 176], "sh_to_sf": [172, 176], "sh_to_sf_matrix": 176, "calculate_max_ord": 176, "anisotropic_pow": 176, "convert_sh_to_full_basi": 176, "convert_sh_from_legaci": 176, "convert_sh_to_legaci": 176, "shoremodel": 176, "shorefit": 176, "shore_matrix": 176, "shore_matrix_pdf": 176, "shore_matrix_odf": 176, "l_shore": 176, "n_shore": 176, "shore_indic": 176, "shore_ord": 176, "dki_design_matrix": 176, "fss": 177, "check_rang": 177, "bundle_adjac": 177, "ba_analysi": 177, "cluster_bundl": 177, "bundle_shape_similar": 177, "clustercentroid": 177, "clustermap": 177, "clustermapcentroid": 177, "quickbundlesx": 177, "treeclust": 177, "treeclustermap": 177, "qbx_and_merg": 177, "faststreamlinesearch": 177, "nearest_from_matrix_row": 177, "nearest_from_matrix_col": 177, "multi_median": 177, "applymask": 177, "bounding_box": 177, "crop": 177, "segment_from_cfa": 177, "clean_cc_mask": 177, "mdf": 177, "mean_manhattan_dist": 177, "mean_euclidean_dist": 177, "otsu": 177, "upper_bound_by_r": 177, "upper_bound_by_perc": 177, "tissueclassifierhmrf": 177, "sim": 178, "phantom": 178, "voxel": 178, "add_nois": 178, "diff2eigenvector": 178, "orbital_phantom": 178, "diffusion_ev": 178, "sticks_and_bal": 178, "callaghan_perpendicular": 178, "gaussian_parallel": 178, "cylinders_and_ball_soderman": 178, "single_tensor": 178, "multi_tensor": 178, "multi_tensor_dki": 178, "kurtosis_el": 178, "dki_sign": 178, "single_tensor_odf": 178, "all_tensor_evec": 178, "multi_tensor_odf": 178, "single_tensor_rtop": 178, "multi_tensor_rtop": 178, "single_tensor_pdf": 178, "multi_tensor_pdf": 178, "single_tensor_msd": 178, "multi_tensor_msd": 178, "stat": [179, 182], "peak_valu": 179, "anatomical_measur": 179, "assignment_map": 179, "gaussian_weight": 179, "afq_profil": 179, "_util": 180, "learn": 180, "local_track": 180, "mesh": 180, "detect_corresponding_track": 180, "detect_corresponding_tracks_plu": 180, "lifesignalmak": 180, "fibermodel": 180, "fiberfit": 180, "streamline_gradi": 180, "grad_tensor": 180, "streamline_tensor": 180, "streamline_sign": 180, "voxel2streamlin": 180, "localtrack": 180, "particlefilteringtrack": 180, "random_coordinates_from_surfac": 180, "seeds_from_surface_coordin": 180, "triangles_area": 180, "vertices_to_triangles_valu": 180, "wind": 180, "byte": 180, "downsampl": 180, "magn": 180, "frenet_serret": 180, "mean_curvatur": 180, "mean_orient": 180, "generate_combin": 180, "longest_track_bundl": 180, "intersect_spher": 180, "inside_spher": 180, "inside_sphere_point": 180, "spline": 180, "startpoint": 180, "arbitrarypoint": 180, "principal_compon": 180, "midpoint2point": 180, "unlist_streamlin": 180, "relist_streamlin": 180, "center_streamlin": 180, "deform_streamlin": 180, "transform_streamlin": 180, "select_random_set_of_streamlin": 180, "select_by_roi": 180, "cluster_confid": 180, "orient_by_roi": 180, "orient_by_streamlin": 180, "values_from_volum": 180, "nbyte": 180, "density_map": 180, "connectivity_matrix": 180, "ndbincount": 180, "reduce_label": 180, "subseg": 180, "seeds_from_mask": 180, "random_seeds_from_mask": 180, "target": 180, "target_line_bas": 180, "streamline_near_roi": 180, "near_roi": 180, "unique_row": 180, "transform_tracking_output": 180, "reduce_roi": 180, "path_length": 180, "max_angle_from_curvatur": 180, "min_radius_curvature_from_angl": [173, 180], "viz": [181, 182], "gmem": 181, "horizon": 181, "app": 181, "tab": 181, "panel": 181, "plot": 181, "project": 181, "regtool": 181, "globalhorizon": 181, "horizontab": 181, "tabmanag": 181, "build_label": 181, "color_single_slid": 181, "color_double_slid": 181, "clusterstab": 181, "peakstab": 181, "roistab": 181, "slicestab": 181, "clustersvisu": 181, "slicesvisu": 181, "slicer_panel": 181, "compare_map": 181, "compare_qti_map": 181, "bundle_shape_profil": 181, "sph_project": 181, "simple_plot": 181, "overlay_imag": 181, "draw_lattice_2d": 181, "plot_2d_diffeomorphic_map": 181, "plot_slic": 181, "overlay_slic": 181, "show_bundl": 181, "viz_two_bundl": 181, "viz_vector_field": 181, "viz_displacement_mag": 181, "combined_workflow": 182, "docstring_pars": 182, "flow_runn": 182, "multi_io": 182, "resliceflow": 182, "slrwithqbxflow": 182, "imageregistrationflow": 182, "applytransformflow": 182, "synregistrationflow": 182, "motioncorrectionflow": 182, "bundlewarpflow": 182, "check_dimens": 182, "introspectiveargumentpars": 182, "get_args_default": 182, "none_or_dtyp": 182, "combinedworkflow": 182, "patch2selfflow": 182, "nlmeansflow": 182, "lpcaflow": 182, "mppcaflow": 182, "gibbsringingflow": 182, "reader": 182, "numpydocstr": 182, "dedent_lin": 182, "get_level": 182, "run_flow": 182, "ioinfoflow": 182, "fetchflow": 182, "splitflow": 182, "maskflow": 182, "ioiter": 182, "common_start": 182, "slash_to_und": 182, "connect_output_path": 182, "concatenate_input": 182, "basename_without_extens": 182, "io_iter": 182, "io_iterator_": 182, "evacplusflow": 182, "reconstmapmriflow": 182, "reconstdtiflow": 182, "reconstcsdflow": 182, "reconstcsaflow": 182, "reconstdkiflow": 182, "reconstivimflow": 182, "reconstrumbaflow": 182, "medianotsuflow": 182, "recobundlesflow": 182, "labelsbundlesflow": 182, "snrinccflow": 182, "bundleanalysistractometryflow": 182, "linearmixedmodelsflow": 182, "bundleshapeanalysi": 182, "buan_bundle_profil": 182, "localfibertrackingpamflow": 182, "pftrackingpamflow": 182, "horizonflow": 182, "dipy_align_affin": 184, "argument": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "option": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215], "dipy_align_syn": 185, "dipy_apply_transform": 186, "dipy_buan_lmm": 187, "dipy_buan_profil": 188, "dipy_bundlewarp": 189, "dipy_correct_mot": 190, "dipy_denoise_lpca": 191, "dipy_denoise_mppca": 192, "dipy_denoise_nlmean": 193, "dipy_denoise_patch2self": 194, "dipy_evac_plu": 195, "dipy_fetch": 196, "dipy_fit_csa": 197, "dipy_fit_csd": 198, "dipy_fit_dki": 199, "dipy_fit_dti": 200, "dipy_fit_ivim": 201, "dipy_fit_mapmri": 202, "dipy_gibbs_ring": 203, "dipy_horizon": 204, "dipy_info": 205, "dipy_labelsbundl": 206, "dipy_mask": 207, "dipy_median_otsu": 208, "dipy_recobundl": 209, "dipy_reslic": 210, "dipy_slr": 211, "dipy_snr_in_cc": 212, "dipy_split": 213, "dipy_track": 214, "dipy_track_pft": 215, "11": 218, "subscrib": 238, "dii": 239, "matrix": [239, 240], "siemen": [239, 240], "dicom": [239, 240], "generalis": 241, "concept": 242, "coordin": 244, "term": 244, "physic": 244, "convent": 244, "matlab": 244, "__config__": 167, "bundlemin": 168, "crosscorr": 168, "expectmax": 168, "parzenhist": 168, "sumsqdiff": 168, "vector_field": 168, "determine_num_thread": [168, 172, 180], "distance_matrix_mdf": 168, "compute_cc_backward_step_2d": 168, "compute_cc_backward_step_3d": 168, "compute_cc_forward_step_2d": 168, "compute_cc_forward_step_3d": 168, "precompute_cc_factors_2d": 168, "precompute_cc_factors_2d_test": 168, "precompute_cc_factors_3d": 168, "precompute_cc_factors_3d_test": 168, "compute_em_demons_step_2d": 168, "compute_em_demons_step_3d": 168, "compute_masked_class_stats_2d": 168, "compute_masked_class_stats_3d": 168, "quantize_positive_2d": 168, "quantize_positive_3d": 168, "parzenjointhistogram": 168, "compute_parzen_mi": 168, "cubic_splin": 168, "cubic_spline_deriv": 168, "sample_domain_regular": 168, "compute_energy_ssd_2d": 168, "compute_energy_ssd_3d": 168, "compute_residual_displacement_field_ssd_2d": 168, "compute_residual_displacement_field_ssd_3d": 168, "compute_ssd_demons_step_2d": 168, "compute_ssd_demons_step_3d": 168, "iterate_residual_displacement_field_ssd_2d": 168, "iterate_residual_displacement_field_ssd_3d": 168, "solve_2d_symmetric_positive_definit": 168, "solve_3d_symmetric_positive_definit": 168, "affinetransform2d": 168, "affinetransform3d": 168, "rigidisoscalingtransform2d": 168, "rigidisoscalingtransform3d": 168, "rigidscalingtransform2d": 168, "rigidscalingtransform3d": 168, "rigidtransform2d": 168, "rigidtransform3d": 168, "rotationtransform2d": 168, "rotationtransform3d": 168, "scalingtransform2d": 168, "scalingtransform3d": 168, "translationtransform2d": 168, "translationtransform3d": 168, "compose_vector_fields_2d": 168, "compose_vector_fields_3d": 168, "create_circl": 168, "create_harmonic_fields_2d": 168, "create_harmonic_fields_3d": 168, "create_random_displacement_2d": 168, "create_random_displacement_3d": 168, "create_spher": 168, "downsample_displacement_field_2d": 168, "downsample_displacement_field_3d": 168, "downsample_scalar_field_2d": 168, "downsample_scalar_field_3d": 168, "invert_vector_field_fixed_point_2d": 168, "invert_vector_field_fixed_point_3d": 168, "is_valid_affin": 168, "reorient_vector_field_2d": 168, "reorient_vector_field_3d": 168, "resample_displacement_field_2d": 168, "resample_displacement_field_3d": 168, "simplify_warp_function_2d": 168, "simplify_warp_function_3d": 168, "sparse_gradi": 168, "transform_2d_affin": 168, "transform_2d_affine_nn": 168, "transform_3d_affin": 168, "transform_3d_affine_nn": 168, "warp_2d": 168, "warp_2d_nn": 168, "warp_3d": 168, "warp_3d_nn": 168, "warp_coordinates_2d": 168, "warp_coordinates_3d": 168, "benchmark": [170, 176, 177, 180], "bench_spher": 170, "interpol": 170, "timer": 170, "func_minimize_adhoc": 170, "func_minimize_scipi": 170, "bench_disperse_charges_alt": 170, "nearestneighborinterpol": 170, "outsideimag": 170, "trilinearinterpol": 170, "interp_rbf": 170, "interpolate_scalar_2d": 170, "interpolate_scalar_3d": 170, "interpolate_scalar_nn_2d": 170, "interpolate_scalar_nn_3d": 170, "interpolate_vector_2d": 170, "interpolate_vector_3d": 170, "map_coordinates_trilinear_iso": 170, "nearestneighbor_interpol": 170, "trilinear_interp": 170, "trilinear_interpolate4d": 170, "denspe": 172, "enhancement_kernel": 172, "nlmeans_block": 172, "pca_noise_estim": 172, "shift_twist_convolut": 172, "add_padding_reflect": 172, "correspond_indic": 172, "nlmeans_3d": 172, "remove_pad": 172, "enhancementkernel": 172, "ceil": 172, "gettempdir": 172, "firdn": 172, "upfir": 172, "warn": [172, 180], "convolv": 172, "convolve_sf": 172, "bootstrap_direction_gett": 173, "closest_peak_direction_gett": 173, "pmf": 173, "probabilistic_direction_gett": 173, "ptt_direction_gett": 173, "bootdirectiongett": 173, "bootpmfgen": 173, "basedirectiongett": 173, "basepmfdirectiongett": 173, "closestpeakdirectiongett": 173, "pmfgendirectiongett": 173, "pmfgen": 173, "shcoeffpmfgen": 173, "simplepmfgen": 173, "deterministicmaximumdirectiongett": 173, "probabilisticdirectiongett": 173, "random": [173, 180], "pttdirectiongett": 173, "bench_bounding_box": 176, "bench_csd": 176, "bench_peak": 176, "bench_squash": 176, "bench_vec_val_sum": 176, "eudx_direction_gett": 176, "quick_squash": 176, "recspe": 176, "vec_val_sum": 176, "num_grad": 176, "bench_csdeconv": 176, "bench_local_maxima": 176, "old_squash": 176, "bench_quick_squash": 176, "bench_vec_val_vect": 176, "eudxdirectiongett": 176, "adj_to_countarr": 176, "argmax_from_adj": 176, "argmax_from_countarr": 176, "le_to_odf": 176, "local_maxima": 176, "proc_reco_arg": 176, "remove_similar_vertic": 176, "search_descend": 176, "sum_on_blocks_1d": 176, "vec_val_vect": 176, "bench_quickbundl": 177, "clustering_algorithm": 177, "clusteringspe": 177, "cythonutil": 177, "featurespe": 177, "metricspe": 177, "mrf": 177, "mdfpy": 177, "dtype": 177, "clusters_centroid2clustermap_centroid": 177, "peek": 177, "clusterscentroid": 177, "evaluate_aabb_check": 177, "arclengthfeatur": 177, "centerofmassfeatur": 177, "cythonfeatur": 177, "identityfeatur": 177, "midpointfeatur": 177, "resamplefeatur": 177, "vectorofendpointsfeatur": 177, "infer_shap": 177, "averagepointwiseeuclideanmetr": 177, "cosinemetr": 177, "cythonmetr": 177, "minimumaveragedirectflipmetr": 177, "sumpointwiseeuclideanmetr": 177, "dist": 177, "distance_matrix": 177, "constantobservationmodel": 177, "iteratedconditionalmod": 177, "bench_streamlin": 180, "direction_gett": 180, "distanc": 180, "fbcmeasur": 180, "propspe": 180, "stopping_criterion": 180, "streamlinespe": 180, "vox2track": 180, "setup": 180, "generate_streamlin": 180, "bench_set_number_of_point": 180, "bench_length": 180, "bench_compress_streamlin": 180, "directiongett": 180, "add_3vec": 180, "approx_polygon_track": 180, "approximate_mdl_trajectori": 180, "bundles_distances_mam": 180, "bundles_distances_mdf": 180, "cut_plan": 180, "inner_3vec": 180, "intersect_segment_cylind": 180, "larch_3merg": 180, "larch_3split": 180, "lee_angle_dist": 180, "lee_perpendicular_dist": 180, "local_skeleton_clust": 180, "local_skeleton_clustering_3pt": 180, "mam_dist": 180, "minimum_closest_dist": 180, "most_similar_track_mam": 180, "mul_3vec": 180, "norm_3vec": 180, "normalized_3vec": 180, "point_segment_sq_dist": 180, "point_track_sq_distance_check": 180, "sub_3vec": 180, "track_dist_3pt": 180, "track_roi_intersection_check": 180, "kdtree": 180, "interp1d": 180, "compute_rfbc": 180, "min_moving_averag": 180, "pft_tracker": 180, "eudx_both_direct": 180, "ndarray_offset": 180, "actstoppingcriterion": 180, "anatomicalstoppingcriterion": 180, "binarystoppingcriterion": 180, "cmcstoppingcriterion": 180, "stoppingcriterion": 180, "streamlinestatu": 180, "thresholdstoppingcriterion": 180, "compress_streamlin": 180, "set_number_of_point": 180, "streamline_map": 180, "track_count": 180, "tabl": [], "comput": [28, 31, 43, 49, 62, 66, 96, 104, 116, 120, 129, 133, 140], "correl": 73, "cti": 176, "correlationtensormodel": 176, "correlationtensorfit": 176, "from_qte_to_cti": 176, "multi_gaussian_k_from_c": 176, "split_cti_param": 176, "cti_predict": 176, "params_to_cti_param": 176, "ls_fit_cti": 176, "cti_design_matrix": 176}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"API changes": [[0, "api-changes"]], "DIPY 1.7.0 changes": [[0, "dipy-1-7-0-changes"]], "DIPY 1.6.0 changes": [[0, "dipy-1-6-0-changes"]], "DIPY 1.5.0 changes": [[0, "dipy-1-5-0-changes"]], "DIPY 1.4.1 changes": [[0, "dipy-1-4-1-changes"]], "DIPY 1.4.0 changes": [[0, "dipy-1-4-0-changes"]], "DIPY 1.3.0 changes": [[0, "dipy-1-3-0-changes"]], "DIPY 1.2.0 changes": [[0, "dipy-1-2-0-changes"]], "DIPY 1.1.1 changes": [[0, "dipy-1-1-1-changes"]], "DIPY 1.0.0 changes": [[0, "dipy-1-0-0-changes"]], "DIPY 0.16 Changes": [[0, "dipy-0-16-changes"]], "DIPY 0.15 Changes": [[0, "dipy-0-15-changes"]], "DIPY 0.14 Changes": [[0, "dipy-0-14-changes"]], "DIPY 0.13 Changes": [[0, "dipy-0-13-changes"]], "DIPY 0.12 Changes": [[0, "dipy-0-12-changes"]], "DIPY 0.10 Changes": [[0, "dipy-0-10-changes"]], "DIPY 0.9 Changes": [[0, "dipy-0-9-changes"]], "DIPY 0.8 Changes": [[0, "dipy-0-8-changes"]], "Changes between 0.7.1 and 0.6": [[0, "changes-between-0-7-1-and-0-6"]], "Dependencies": [[4, "dependencies"]], "Configure git": [[7, "configure-git"]], "Overview": [[7, "overview"], [13, "overview"], [18, "overview"], [19, "overview"], [44, "overview"], [59, "overview"], [61, "overview"], [8, "overview"]], "In detail": [[7, "in-detail"], [13, "in-detail"], [18, "in-detail"], [19, "in-detail"]], "user.name and user.email": [[7, "user-name-and-user-email"]], "Aliases": [[7, "aliases"]], "Editor": [[7, "editor"]], "Merging": [[7, "merging"]], "Fancy log output": [[7, "fancy-log-output"]], "Two and three dots in difference specs": [[9, "two-and-three-dots-in-difference-specs"]], "Following the latest source": [[10, "following-the-latest-source"]], "Get the local copy of the code": [[10, "get-the-local-copy-of-the-code"]], "Updating the code": [[10, "updating-the-code"]], "Making your own copy (fork) of DIPY": [[11, "making-your-own-copy-fork-of-dipy"]], "Set up and configure a github account": [[11, "set-up-and-configure-a-github-account"]], "Create your own forked copy of DIPY": [[11, "create-your-own-forked-copy-of-dipy"]], "Git for development": [[12, "git-for-development"]], "Install git": [[13, "install-git"]], "Introduction": [[14, "introduction"], [21, "introduction"]], "git resources": [[15, "git-resources"]], "Tutorials and summaries": [[15, "tutorials-and-summaries"]], "Advanced git workflow": [[15, "advanced-git-workflow"]], "Manual pages online": [[15, "manual-pages-online"]], "Working with DIPY source code": [[16, "working-with-dipy-source-code"]], "Maintainer workflow": [[17, "maintainer-workflow"]], "Integrating changes": [[17, "integrating-changes"]], "A few commits": [[17, "a-few-commits"]], "A long series of commits": [[17, "a-long-series-of-commits"]], "Check the history": [[17, "check-the-history"]], "Push to trunk": [[17, "push-to-trunk"]], "Making a patch": [[18, "making-a-patch"]], "Making patches": [[18, "making-patches"]], "Moving from patching to development": [[18, "moving-from-patching-to-development"]], "Set up your fork": [[19, "set-up-your-fork"]], "Clone your fork": [[19, "clone-your-fork"]], "Linking your repository to the upstream repo": [[19, "linking-your-repository-to-the-upstream-repo"]], "A guide to making a DIPY release": [[22, "a-guide-to-making-a-dipy-release"]], "Release checklist": [[22, "release-checklist"]], "Doing the release": [[22, "doing-the-release"]], "Uploading binary builds for the release": [[22, "uploading-binary-builds-for-the-release"]], "Other stuff that needs doing for the release": [[22, "other-stuff-that-needs-doing-for-the-release"]], "Developers": [[23, "developers"]], "Documentation": [[24, "documentation"], [5, "documentation"]], "File Formats": [[42, "file-formats"], [45, "file-formats"]], "Multiprocessing": [[46, "multiprocessing"], [45, "multiprocessing"]], "Workflows": [[139, "workflows"], [45, "workflows"]], "Glossary": [[144, "glossary"]], "Diffusion Imaging In Python": [[145, "diffusion-imaging-in-python"]], "Highlights": [[145, "highlights"]], "Announcements": [[145, "announcements"]], "Getting Started": [[145, "getting-started"]], "Next Steps": [[145, "next-steps"]], "Support": [[145, "support"], [146, "support"]], "Installation": [[146, "installation"], [89, "installation"]], "Installing a release": [[146, "installing-a-release"]], "Using Anaconda:": [[146, "using-anaconda"]], "Using packages:": [[146, "using-packages"]], "Windows": [[146, "windows"], [146, "id2"]], "OSX": [[146, "osx"], [146, "id3"]], "Linux": [[146, "linux"]], "Using pip:": [[146, "using-pip"]], "Contact us:": [[146, "contact-us"]], "Common problems:": [[146, "common-problems"]], "Multiple installations": [[146, "multiple-installations"]], "Alternatives to Anaconda": [[146, "alternatives-to-anaconda"]], "Memory issues": [[146, "memory-issues"]], "Note on python versions": [[146, "note-on-python-versions"]], "Installing from source": [[146, "installing-from-source"]], "Getting the source": [[146, "getting-the-source"]], "Building and installing": [[146, "building-and-installing"], [146, "id4"]], "Install from source (all operating systems)": [[146, "install-from-source-all-operating-systems"]], "Install from source for Unix (e.g Linux, OSX)": [[146, "install-from-source-for-unix-e-g-linux-osx"]], "Ubuntu/Debian": [[146, "ubuntu-debian"]], "Fedora / Mandriva maybe Redhat": [[146, "fedora-mandriva-maybe-redhat"]], "OpenMP with OSX": [[146, "openmp-with-osx"]], "Under Anaconda": [[146, "under-anaconda"]], "Under Homebrew Python or python.org Python": [[146, "under-homebrew-python-or-python-org-python"]], "Testing": [[146, "testing"]], "Documentation (Unix only)": [[146, "documentation-unix-only"]], "Tip": [[146, "tip"]], "Troubleshooting": [[146, "troubleshooting"]], "Introduction to command line interfaces": [[147, "introduction-to-command-line-interfaces"]], "References": [[147, "references"], [149, "references"], [150, "references"], [152, "references"], [155, "references"], [156, "references"], [158, "references"], [243, "references"], [59, "references"], [88, "references"], [89, "references"], [101, "references"], [5, "references"], [73, "references"], [153, "references"], [157, "references"], [25, "references"], [26, "references"], [30, "references"], [32, "references"], [33, "references"], [35, "references"], [36, "references"], [38, "references"], [39, "references"], [40, "references"], [41, "references"], [51, "references"], [52, "references"], [54, "references"], [55, "references"], [56, "references"], [57, "references"], [60, "references"], [63, "references"], [67, "references"], [68, "references"], [70, "references"], [71, "references"], [72, "references"], [74, "references"], [75, "references"], [79, "references"], [80, "references"], [81, "references"], [84, "references"], [85, "references"], [86, "references"], [90, "references"], [91, "references"], [93, "references"], [94, "references"], [95, "references"], [99, "references"], [100, "references"], [105, "references"], [106, "references"], [107, "references"], [109, "references"], [110, "references"], [113, "references"], [114, "references"], [121, "references"], [123, "references"], [124, "references"], [125, "references"], [126, "references"], [128, "references"], [134, "references"], [168, "references"], [168, "id42"], [168, "id47"], [168, "id55"], [168, "id60"], [168, "id65"], [168, "id71"], [168, "id147"], [168, "id153"], [168, "id158"], [168, "id162"], [168, "id203"], [168, "id228"], [168, "id251"], [168, "id256"], [168, "id260"], [168, "id274"], [168, "id287"], [168, "id290"], [168, "id293"], [168, "id296"], [170, "references"], [170, "id17"], [170, "id52"], [170, "id76"], [170, "id90"], [170, "id134"], [171, "references"], [172, "references"], [172, "id7"], [172, "id25"], [172, "id31"], [172, "id43"], [172, "id50"], [172, "id55"], [172, "id59"], [172, "id64"], [172, "id72"], [172, "id77"], [172, "id81"], [172, "id90"], [172, "id94"], [172, "id102"], [172, "id109"], [173, "references"], [173, "id27"], [174, "references"], [175, "references"], [175, "id30"], [175, "id77"], [176, "references"], [176, "id94"], [176, "id105"], [176, "id117"], [176, "id125"], [176, "id148"], [176, "id153"], [176, "id161"], [176, "id184"], [176, "id197"], [176, "id215"], [176, "id226"], [176, "id233"], [176, "id241"], [176, "id247"], [176, "id253"], [176, "id271"], [176, "id284"], [176, "id296"], [176, "id305"], [176, "id309"], [176, "id314"], [176, "id318"], [176, "id329"], [176, "id335"], [176, "id340"], [176, "id344"], [176, "id347"], [176, "id351"], [176, "id355"], [176, "id359"], [176, "id363"], [176, "id368"], [176, "id373"], [176, "id380"], [176, "id396"], [176, "id419"], [176, "id430"], [176, "id441"], [176, "id450"], [176, "id457"], [176, "id494"], [176, "id507"], [176, "id513"], [176, "id519"], [176, "id529"], [176, "id536"], [176, "id544"], [176, "id573"], [176, "id592"], [176, "id597"], [176, "id609"], [176, "id614"], [176, "id620"], [176, "id633"], [176, "id642"], [176, "id654"], [176, "id682"], [176, "id703"], [176, "id714"], [176, "id719"], [176, "id724"], [176, "id729"], [176, "id733"], [176, "id737"], [176, "id741"], [176, "id746"], [176, "id751"], [176, "id756"], [176, "id761"], [176, "id766"], [176, "id771"], [176, "id776"], [176, "id781"], [176, "id785"], [176, "id789"], [176, "id793"], [176, "id797"], [176, "id801"], [176, "id805"], [176, "id809"], [176, "id813"], [176, "id817"], [176, "id824"], [176, "id832"], [176, "id838"], [176, "id843"], [176, "id848"], [176, "id855"], [176, "id860"], [176, "id865"], [176, "id870"], [176, "id875"], [176, "id882"], [176, "id890"], [176, "id915"], [176, "id918"], [176, "id925"], [176, "id933"], [176, "id941"], [176, "id948"], [176, "id956"], [176, "id962"], [176, "id975"], [176, "id979"], [176, "id983"], [176, "id989"], [176, "id995"], [176, "id1000"], [176, "id1005"], [176, "id1011"], [176, "id1017"], [176, "id1021"], [176, "id1024"], [176, "id1030"], [176, "id1032"], [176, "id1034"], [176, "id1036"], [176, "id1038"], [176, "id1040"], [176, "id1042"], [176, "id1044"], [176, "id1046"], [176, "id1049"], [176, "id1052"], [176, "id1056"], [176, "id1062"], [176, "id1126"], [176, "id1188"], [176, "id1192"], [176, "id1197"], [176, "id1207"], [176, "id1227"], [176, "id1234"], [176, "id1241"], [176, "id1248"], [176, "id1260"], [176, "id1268"], [176, "id1279"], [176, "id1282"], [176, "id1287"], [176, "id1291"], [177, "references"], [177, "id19"], [177, "id25"], [177, "id29"], [177, "id32"], [177, "id36"], [177, "id40"], [177, "id73"], [177, "id80"], [177, "id95"], [177, "id100"], [177, "id139"], [177, "id144"], [177, "id168"], [178, "references"], [178, "id20"], [178, "id26"], [178, "id31"], [178, "id39"], [178, "id44"], [178, "id54"], [178, "id60"], [178, "id64"], [178, "id68"], [178, "id77"], [178, "id81"], [178, "id85"], [178, "id89"], [178, "id93"], [178, "id97"], [179, "references"], [179, "id7"], [180, "references"], [180, "id144"], [180, "id217"], [180, "id221"], [180, "id243"], [180, "id264"], [180, "id297"], [180, "id317"], [180, "id320"], [181, "references"], [181, "id3"], [182, "references"], [182, "id12"], [182, "id19"], [182, "id21"], [182, "id25"], [182, "id31"], [182, "id35"], [182, "id53"], [182, "id57"], [182, "id64"], [182, "id67"], [182, "id71"], [182, "id76"], [182, "id79"], [182, "id83"], [182, "id86"], [182, "id90"], [182, "id96"], [182, "id99"], [182, "id102"], [182, "id104"], [182, "id106"], [184, "references"], [185, "references"], [186, "references"], [187, "references"], [188, "references"], [189, "references"], [190, "references"], [191, "references"], [192, "references"], [193, "references"], [194, "references"], [195, "references"], [196, "references"], [197, "references"], [198, "references"], [199, "references"], [200, "references"], [201, "references"], [202, "references"], [203, "references"], [204, "references"], [205, "references"], [206, "references"], [207, "references"], [208, "references"], [209, "references"], [210, "references"], [211, "references"], [212, "references"], [213, "references"], [214, "references"], [215, "references"]], "BUndle ANalytics (BUAN) framework": [[148, "bundle-analytics-buan-framework"]], "Group Comparison of Bundle Profiles": [[148, "group-comparison-of-bundle-profiles"]], "Shape similarity of specific bundles across the populations": [[148, "shape-similarity-of-specific-bundles-across-the-populations"]], "Reproducing results on larger dataset:": [[148, "reproducing-results-on-larger-dataset"]], "White Matter Bundle Segmentation with RecoBundles": [[149, "white-matter-bundle-segmentation-with-recobundles"]], "Streamline-Based Linear Registration": [[149, "streamline-based-linear-registration"]], "RecoBundles": [[149, "recobundles"], [177, "recobundles"]], "Nonrigid White Matter Bundle Registration with BundleWarp": [[150, "nonrigid-white-matter-bundle-registration-with-bundlewarp"]], "Partially Deformable BundleWarp Registration": [[150, "partially-deformable-bundlewarp-registration"]], "Fully Deformable BundleWarp Registration": [[150, "fully-deformable-bundlewarp-registration"]], "Downloading DIPY datasets": [[151, "downloading-dipy-datasets"]], "Denoising": [[152, "denoising"]], "Denoising using Overcomplete Local PCA": [[152, "denoising-using-overcomplete-local-pca"]], "Denoising using Marcenko-Pastur PCA": [[152, "denoising-using-marcenko-pastur-pca"]], "Denoising using NLMEANS": [[152, "denoising-using-nlmeans"]], "Overview of Denoising Methods": [[152, "overview-of-denoising-methods"]], "Diffusion": [[152, "diffusion"]], "Structural": [[152, "structural"]], "DIPY Workflows Interfaces": [[154, "dipy-workflows-interfaces"]], "Between-Volumes Motion Correction": [[155, "between-volumes-motion-correction"]], "Motion Correction": [[155, "motion-correction"]], "Reconstruction": [[156, "reconstruction"], [69, "reconstruction"], [45, "reconstruction"]], "Constrained Spherical Deconvolution (CSD)": [[156, "constrained-spherical-deconvolution-csd"]], "Mean Apparent Propagator (MAP)-MRI": [[156, "mean-apparent-propagator-map-mri"]], "Diffusion Tensor Imaging (DTI)": [[156, "diffusion-tensor-imaging-dti"]], "Diffusion Kurtosis Imaging (DKI)": [[156, "diffusion-kurtosis-imaging-dki"]], "Constant Solid Angle (CSA)": [[156, "constant-solid-angle-csa"]], "Intravoxel Incoherent Motion (IVIM)": [[156, "intravoxel-incoherent-motion-ivim"]], "Tracking": [[158, "tracking"]], "Local Fiber Tracking": [[158, "local-fiber-tracking"]], "EuDX Tracking": [[158, "eudx-tracking"]], "Deterministic Tracking": [[158, "deterministic-tracking"]], "Probabilistic Tracking": [[158, "probabilistic-tracking"]], "Closest Peaks Tracking": [[158, "closest-peaks-tracking"]], "Particle Filtering Tracking (PFT)": [[158, "particle-filtering-tracking-pft"]], "Overview of Fiber Tracking Methods": [[158, "overview-of-fiber-tracking-methods"]], "What is DIPY?": [[159, "what-is-dipy"]], "Mission statement": [[160, "mission-statement"]], "A note about the examples": [[161, "a-note-about-the-examples"]], "Older Highlights": [[162, "older-highlights"]], "Release notes for DIPY version 0.10": [[217, "release-notes-for-dipy-version-0-10"]], "Release notes for DIPY version 0.11": [[218, "release-notes-for-dipy-version-0-11"]], "Release notes for DIPY version 0.12": [[219, "release-notes-for-dipy-version-0-12"]], "Release notes for DIPY version 0.13": [[220, "release-notes-for-dipy-version-0-13"]], "Release notes for DIPY version 0.14": [[221, "release-notes-for-dipy-version-0-14"]], "Release notes for DIPY version 0.15": [[222, "release-notes-for-dipy-version-0-15"]], "Release notes for DIPY version 0.16": [[223, "release-notes-for-dipy-version-0-16"]], "Release notes for DIPY version 0.6": [[224, "release-notes-for-dipy-version-0-6"]], "Release notes for DIPY version 0.7": [[225, "release-notes-for-dipy-version-0-7"]], "Release notes for DIPY version 0.8": [[226, "release-notes-for-dipy-version-0-8"]], "Release notes for DIPY version 0.9": [[227, "release-notes-for-dipy-version-0-9"]], "Release notes for DIPY version 1.0": [[228, "release-notes-for-dipy-version-1-0"]], "Release notes for DIPY version 1.1": [[229, "release-notes-for-dipy-version-1-1"]], "Release notes for DIPY version 1.2": [[230, "release-notes-for-dipy-version-1-2"]], "Release notes for DIPY version 1.3": [[231, "release-notes-for-dipy-version-1-3"]], "Release notes for DIPY version 1.4": [[232, "release-notes-for-dipy-version-1-4"]], "Release notes for DIPY version 1.4.1": [[233, "release-notes-for-dipy-version-1-4-1"]], "Release notes for DIPY version 1.5": [[234, "release-notes-for-dipy-version-1-5"]], "Release notes for DIPY version 1.6": [[235, "release-notes-for-dipy-version-1-6"]], "Release notes for DIPY version 1.7": [[236, "release-notes-for-dipy-version-1-7"]], "A quick overview of features": [[237, "a-quick-overview-of-features"]], "Systems supported": [[237, "systems-supported"]], "Subscribe": [[238, "subscribe"]], "DIY Stuff about b and q": [[239, "diy-stuff-about-b-and-q"]], "The B matrix and Siemens DICOM": [[239, "the-b-matrix-and-siemens-dicom"], [240, "the-b-matrix-and-siemens-dicom"]], "\u2026 and what about \u2018q\u2019?": [[239, "and-what-about-q"]], "Generalised Q-Sampling Imaging": [[241, "generalised-q-sampling-imaging"]], "Spherical Harmonic bases": [[243, "spherical-harmonic-bases"]], "Contextual Enhancement": [[27, "contextual-enhancement"], [45, "contextual-enhancement"]], "Computation times": [[28, "computation-times"], [31, "computation-times"], [43, "computation-times"], [49, "computation-times"], [62, "computation-times"], [66, "computation-times"], [96, "computation-times"], [104, "computation-times"], [116, "computation-times"], [120, "computation-times"], [129, "computation-times"], [133, "computation-times"], [140, "computation-times"]], "Fiber Tracking": [[29, "fiber-tracking"], [45, "fiber-tracking"]], "Read/Write streamline files": [[44, "read-write-streamline-files"]], "Parallel reconstruction using Q-Ball": [[47, "parallel-reconstruction-using-q-ball"]], "Parallel reconstruction using CSD": [[48, "parallel-reconstruction-using-csd"]], "Preprocessing": [[58, "preprocessing"], [45, "preprocessing"]], "Between-volumes Motion Correction on DWI datasets": [[59, "between-volumes-motion-correction-on-dwi-datasets"]], "Reslice diffusion datasets": [[61, "reslice-diffusion-datasets"]], "Quick Start": [[64, "quick-start"], [45, "quick-start"]], "Reconstruct with Generalized Q-Sampling Imaging": [[82, "reconstruct-with-generalized-q-sampling-imaging"]], "Reconstruct with Q-space Trajectory Imaging (QTI)": [[88, "reconstruct-with-q-space-trajectory-imaging-qti"]], "Theory": [[88, "theory"], [89, "theory"]], "Usage example": [[88, "usage-example"], [89, "usage-example"]], "Applying positivity constraints to Q-space Trajectory Imaging (QTI+)": [[89, "applying-positivity-constraints-to-q-space-trajectory-imaging-qti"]], "Nonrigid Bundle Registration with BundleWarp": [[101, "nonrigid-bundle-registration-with-bundlewarp"]], "Registration": [[102, "registration"], [157, "registration"], [45, "registration"]], "Segmentation": [[111, "segmentation"], [45, "segmentation"]], "Simulation": [[118, "simulation"], [45, "simulation"]], "Streamlines Analysis and Connectivity": [[127, "streamlines-analysis-and-connectivity"], [45, "streamlines-analysis-and-connectivity"]], "Visualization": [[132, "visualization"], [45, "visualization"]], "Creating a new combined workflow": [[138, "creating-a-new-combined-workflow"]], "Creating a new workflow.": [[141, "creating-a-new-workflow"]], "Publications": [[1, "publications"]], "A note on citing our work": [[1, "a-note-on-citing-our-work"]], "Data": [[2, "data"]], "Contents": [[2, "contents"], [45, "contents"]], "Datasets": [[2, "datasets"]], "DIPY Coding Style Guideline": [[5, "dipy-coding-style-guideline"]], "Coding style": [[5, "coding-style"]], "Imports": [[5, "imports"], [5, "id1"]], "Cython coding style": [[5, "cython-coding-style"]], "Variable declaration": [[5, "variable-declaration"]], "Using C libraries": [[5, "using-c-libraries"]], "Error return values": [[5, "error-return-values"]], "Pointers and references": [[5, "pointers-and-references"]], "Casting": [[5, "casting"]], "Loops": [[5, "loops"]], "Commit message codes": [[6, "commit-message-codes"]], "Development workflow": [[8, "development-workflow"]], "Workflow summary": [[8, "workflow-summary"]], "Consider deleting your master branch": [[8, "consider-deleting-your-master-branch"]], "Update the mirror of trunk": [[8, "update-the-mirror-of-trunk"]], "Make a new feature branch": [[8, "make-a-new-feature-branch"]], "The editing workflow": [[8, "the-editing-workflow"]], "In more detail": [[8, "in-more-detail"]], "Ask for your changes to be reviewed or merged": [[8, "ask-for-your-changes-to-be-reviewed-or-merged"]], "Some other things you might want to do": [[8, "some-other-things-you-might-want-to-do"]], "Delete a branch on github": [[8, "delete-a-branch-on-github"]], "Several people sharing a single repository": [[8, "several-people-sharing-a-single-repository"]], "Explore your repository": [[8, "explore-your-repository"]], "Rebasing on trunk": [[8, "rebasing-on-trunk"]], "Recovering from mess-ups": [[8, "recovering-from-mess-ups"]], "Rewriting commit history": [[8, "rewriting-commit-history"]], "DIPY development": [[20, "dipy-development"]], "Reconstruction of the diffusion signal with the correlation tensor model": [[73, "reconstruction-of-the-diffusion-signal-with-the-correlation-tensor-model"]], "Frequently Asked Questions": [[142, "frequently-asked-questions"]], "Theoretical": [[142, "theoretical"]], "Practical": [[142, "practical"]], "Gibbs Unringing": [[153, "gibbs-unringing"]], "Suppress Gibbs Oscillations": [[153, "suppress-gibbs-oscillations"]], "Image Registration": [[157, "image-registration"]], "Symmetric Diffeomorphic Registration": [[157, "symmetric-diffeomorphic-registration"]], "Apply a Transformation": [[157, "apply-a-transformation"]], "Streamline-based Registration": [[157, "streamline-based-registration"]], "Past Announcements": [[163, "past-announcements"]], "Theory and concepts": [[242, "theory-and-concepts"]], "Spherical coordinates": [[244, "spherical-coordinates"]], "Terms": [[244, "terms"]], "The physics convention": [[244, "the-physics-convention"]], "The mathematics convention": [[244, "the-mathematics-convention"]], "Matlab convention": [[244, "matlab-convention"]], "Crossing-preserving contextual enhancement": [[25, "crossing-preserving-contextual-enhancement"]], "Fiber to bundle coherence measures": [[26, "fiber-to-bundle-coherence-measures"]], "Acknowledgments": [[26, "acknowledgments"]], "Linear fascicle evaluation (LiFE)": [[30, "linear-fascicle-evaluation-life"]], "Surface seeding for tractography": [[32, "surface-seeding-for-tractography"]], "Display the surface": [[32, "display-the-surface"]], "Generate a list of seeding positions": [[32, "generate-a-list-of-seeding-positions"]], "Bootstrap and Closest Peak Direction Getters Example": [[33, "bootstrap-and-closest-peak-direction-getters-example"]], "Example #1: Bootstrap direction getter with CSD Model": [[33, "example-1-bootstrap-direction-getter-with-csd-model"]], "Example #2: Closest peak direction getter with CSD Model": [[33, "example-2-closest-peak-direction-getter-with-csd-model"]], "An introduction to the Deterministic Maximum Direction Getter": [[34, "an-introduction-to-the-deterministic-maximum-direction-getter"]], "Introduction to Basic Tracking": [[35, "introduction-to-basic-tracking"], [67, "introduction-to-basic-tracking"]], "Particle Filtering Tractography": [[36, "particle-filtering-tractography"], [36, "id4"]], "CMC/ACT Stopping Criterion": [[36, "cmc-act-stopping-criterion"]], "An introduction to the Probabilistic Direction Getter": [[37, "an-introduction-to-the-probabilistic-direction-getter"]], "Parallel Transport Tractography": [[38, "parallel-transport-tractography"]], "Tracking with Robust Unbiased Model-BAsed Spherical Deconvolution (RUMBA-SD)": [[39, "tracking-with-robust-unbiased-model-based-spherical-deconvolution-rumba-sd"]], "Tracking with the Sparse Fascicle Model": [[40, "tracking-with-the-sparse-fascicle-model"]], "Using Various Stopping Criterion for Tractography": [[41, "using-various-stopping-criterion-for-tractography"]], "Threshold Stopping Criterion": [[41, "threshold-stopping-criterion"]], "Binary Stopping Criterion": [[41, "binary-stopping-criterion"]], "ACT Stopping Criterion": [[41, "act-stopping-criterion"]], "Notes": [[41, "notes"], [168, "notes"], [168, "id8"], [168, "id11"], [168, "id16"], [168, "id54"], [168, "id88"], [168, "id108"], [168, "id116"], [168, "id119"], [168, "id122"], [168, "id163"], [168, "id207"], [168, "id209"], [168, "id213"], [168, "id217"], [168, "id221"], [168, "id225"], [168, "id235"], [168, "id246"], [168, "id254"], [168, "id281"], [168, "id284"], [168, "id306"], [168, "id331"], [168, "id334"], [168, "id343"], [168, "id346"], [168, "id351"], [168, "id354"], [168, "id357"], [168, "id360"], [168, "id363"], [168, "id366"], [168, "id369"], [168, "id372"], [170, "notes"], [170, "id28"], [170, "id47"], [170, "id55"], [170, "id64"], [170, "id68"], [170, "id72"], [170, "id85"], [170, "id89"], [170, "id112"], [170, "id162"], [170, "id168"], [170, "id173"], [170, "id178"], [170, "id183"], [171, "notes"], [171, "id15"], [171, "id19"], [171, "id43"], [171, "id48"], [171, "id51"], [171, "id67"], [171, "id71"], [172, "notes"], [172, "id24"], [172, "id63"], [172, "id69"], [172, "id86"], [173, "notes"], [173, "id12"], [174, "notes"], [174, "id23"], [174, "id66"], [174, "id69"], [176, "notes"], [176, "id93"], [176, "id121"], [176, "id124"], [176, "id146"], [176, "id152"], [176, "id157"], [176, "id160"], [176, "id193"], [176, "id213"], [176, "id222"], [176, "id232"], [176, "id237"], [176, "id267"], [176, "id280"], [176, "id294"], [176, "id313"], [176, "id317"], [176, "id333"], [176, "id338"], [176, "id342"], [176, "id349"], [176, "id353"], [176, "id357"], [176, "id361"], [176, "id366"], [176, "id378"], [176, "id414"], [176, "id416"], [176, "id429"], [176, "id437"], [176, "id440"], [176, "id444"], [176, "id449"], [176, "id453"], [176, "id456"], [176, "id460"], [176, "id463"], [176, "id474"], [176, "id477"], [176, "id480"], [176, "id483"], [176, "id486"], [176, "id492"], [176, "id500"], [176, "id506"], [176, "id512"], [176, "id518"], [176, "id522"], [176, "id528"], [176, "id535"], [176, "id548"], [176, "id555"], [176, "id560"], [176, "id577"], [176, "id623"], [176, "id631"], [176, "id648"], [176, "id653"], [176, "id659"], [176, "id905"], [176, "id908"], [176, "id911"], [176, "id923"], [176, "id931"], [176, "id939"], [176, "id946"], [176, "id954"], [176, "id1073"], [176, "id1075"], [176, "id1079"], [176, "id1081"], [176, "id1083"], [176, "id1085"], [176, "id1088"], [176, "id1091"], [176, "id1094"], [176, "id1097"], [176, "id1100"], [176, "id1103"], [176, "id1118"], [176, "id1161"], [176, "id1177"], [177, "notes"], [177, "id44"], [177, "id49"], [177, "id85"], [177, "id105"], [177, "id117"], [177, "id120"], [177, "id123"], [177, "id125"], [177, "id138"], [177, "id143"], [177, "id158"], [177, "id177"], [177, "id180"], [177, "id183"], [177, "id185"], [178, "notes"], [178, "id12"], [178, "id17"], [178, "id52"], [178, "id58"], [179, "notes"], [180, "notes"], [180, "id17"], [180, "id24"], [180, "id28"], [180, "id32"], [180, "id39"], [180, "id42"], [180, "id45"], [180, "id48"], [180, "id67"], [180, "id71"], [180, "id88"], [180, "id102"], [180, "id112"], [180, "id116"], [180, "id119"], [180, "id131"], [180, "id137"], [180, "id190"], [180, "id235"], [180, "id237"], [180, "id251"], [180, "id262"], [180, "id274"], [180, "id281"], [180, "id312"], [181, "notes"], [182, "notes"]], "Examples": [[45, "examples"], [168, "examples"], [168, "id182"], [170, "examples"], [170, "id10"], [170, "id13"], [170, "id16"], [170, "id21"], [170, "id25"], [170, "id31"], [170, "id34"], [170, "id37"], [170, "id42"], [170, "id63"], [170, "id67"], [170, "id71"], [170, "id86"], [170, "id92"], [170, "id116"], [170, "id117"], [170, "id120"], [170, "id133"], [170, "id138"], [170, "id141"], [170, "id144"], [170, "id169"], [170, "id174"], [170, "id179"], [170, "id184"], [170, "id191"], [170, "id194"], [171, "examples"], [171, "id7"], [171, "id10"], [171, "id28"], [171, "id42"], [172, "examples"], [174, "examples"], [174, "id17"], [174, "id21"], [176, "examples"], [176, "id91"], [176, "id549"], [176, "id556"], [176, "id561"], [176, "id626"], [176, "id710"], [176, "id1109"], [176, "id1122"], [176, "id1174"], [176, "id1304"], [178, "examples"], [178, "id9"], [178, "id13"], [178, "id23"], [178, "id49"], [178, "id53"], [178, "id74"], [180, "examples"], [180, "id18"], [180, "id19"], [180, "id25"], [180, "id29"], [180, "id33"], [180, "id38"], [180, "id53"], [180, "id56"], [180, "id59"], [180, "id62"], [180, "id82"], [180, "id85"], [180, "id89"], [180, "id92"], [180, "id95"], [180, "id98"], [180, "id103"], [180, "id111"], [180, "id115"], [180, "id130"], [180, "id166"], [180, "id171"], [180, "id176"], [180, "id179"], [180, "id184"], [180, "id187"], [180, "id193"], [180, "id197"], [180, "id200"], [180, "id203"], [180, "id206"], [180, "id209"], [180, "id214"], [180, "id240"], [180, "id246"], [180, "id261"], [180, "id268"], [180, "id271"], [180, "id278"], [180, "id282"], [180, "id286"], [180, "id290"], [180, "id323"], [180, "id326"], [181, "examples"]], "Title": [[45, "id2"], [164, "id1"]], "TESTING 2": [[45, "testing-2"], [164, "testing-2"]], "Brain segmentation with median_otsu": [[50, "brain-segmentation-with-median-otsu"], [108, "brain-segmentation-with-median-otsu"]], "Denoise images using Adaptive Soft Coefficient Matching (ASCM)": [[51, "denoise-images-using-adaptive-soft-coefficient-matching-ascm"]], "Suppress Gibbs oscillations": [[52, "suppress-gibbs-oscillations"]], "Denoise images using Local PCA via empirical thresholds": [[53, "denoise-images-using-local-pca-via-empirical-thresholds"]], "Estimate the noise standard deviation": [[53, "estimate-the-noise-standard-deviation"]], "Perform the localPCA using the function localpca": [[53, "perform-the-localpca-using-the-function-localpca"]], "Denoise images using the Marcenko-Pastur PCA algorithm": [[54, "denoise-images-using-the-marcenko-pastur-pca-algorithm"]], "Noise standard deviation estimation using the Marcenko-Pastur PCA algorithm": [[54, "noise-standard-deviation-estimation-using-the-marcenko-pastur-pca-algorithm"]], "Denoise images using Non-Local Means (NLMEANS)": [[55, "denoise-images-using-non-local-means-nlmeans"]], "Patch2Self: Self-Supervised Denoising via Statistical Independence": [[56, "patch2self-self-supervised-denoising-via-statistical-independence"]], "Gradients and Spheres": [[57, "gradients-and-spheres"]], "Noise estimation using PIESNO": [[60, "noise-estimation-using-piesno"]], "SNR estimation for Diffusion-Weighted Images": [[63, "snr-estimation-for-diffusion-weighted-images"]], "SNR for the b=0 image is : \u2018\u201942.0695455758\u2019\u2019": [[63, "snr-for-the-b-0-image-is-42-0695455758"]], "SNR for direction 57  [-0.05039  0.99871  0.0054406] is : \u2018\u201923.9329492871\u2019\u2019": [[63, "snr-for-direction-57-0-05039-0-99871-0-0054406-is-23-9329492871"]], "Getting started with DIPY": [[65, "getting-started-with-dipy"]], "Local reconstruction using the Histological ResDNN": [[68, "local-reconstruction-using-the-histological-resdnn"]], "K-fold cross-validation for model comparison": [[70, "k-fold-cross-validation-for-model-comparison"]], "Reconstruct with Constant Solid Angle (Q-Ball)": [[71, "reconstruct-with-constant-solid-angle-q-ball"]], "Reconstruction with Constrained Spherical Deconvolution": [[72, "reconstruction-with-constrained-spherical-deconvolution"]], "Step 1. Estimation of the fiber response function": [[72, "step-1-estimation-of-the-fiber-response-function"], [90, "step-1-estimation-of-the-fiber-response-function"]], "Step 2. fODF reconstruction": [[72, "step-2-fodf-reconstruction"]], "Reconstruction of the diffusion signal with the kurtosis tensor model": [[74, "reconstruction-of-the-diffusion-signal-with-the-kurtosis-tensor-model"]], "Constrained optimization for DKI": [[74, "constrained-optimization-for-dki"]], "Mean kurtosis tensor and kurtosis fractional anisotropy": [[74, "mean-kurtosis-tensor-and-kurtosis-fractional-anisotropy"]], "Reconstruction of the diffusion signal with the WMTI model": [[75, "reconstruction-of-the-diffusion-signal-with-the-wmti-model"]], "Reconstruct with Diffusion Spectrum Imaging": [[76, "reconstruct-with-diffusion-spectrum-imaging"]], "Calculate DSI-based scalar maps": [[77, "calculate-dsi-based-scalar-maps"]], "DSI Deconvolution vs DSI": [[78, "dsi-deconvolution-vs-dsi"], [119, "dsi-deconvolution-vs-dsi"]], "Reconstruction of the diffusion signal with the Tensor model": [[79, "reconstruction-of-the-diffusion-signal-with-the-tensor-model"]], "Crossing invariant fiber response function with FORECAST model": [[80, "crossing-invariant-fiber-response-function-with-forecast-model"]], "Using the free water elimination model to remove DTI free water contamination": [[81, "using-the-free-water-elimination-model-to-remove-dti-free-water-contamination"]], "Intravoxel incoherent motion": [[83, "intravoxel-incoherent-motion"]], "Continuous and analytical diffusion signal modelling with MAP-MRI": [[84, "continuous-and-analytical-diffusion-signal-modelling-with-map-mri"]], "Reconstruction with Multi-Shell Multi-Tissue CSD": [[85, "reconstruction-with-multi-shell-multi-tissue-csd"]], "Mean signal diffusion kurtosis imaging (MSDKI)": [[86, "mean-signal-diffusion-kurtosis-imaging-msdki"]], "Testing MSDKI in synthetic data": [[86, "testing-msdki-in-synthetic-data"]], "Reconstructing diffusion data using MSDKI": [[86, "reconstructing-diffusion-data-using-msdki"]], "Relationship between MSDKI and SMT2": [[86, "relationship-between-msdki-and-smt2"]], "Estimating diffusion time dependent q-space indices using qt-dMRI": [[87, "estimating-diffusion-time-dependent-q-space-indices-using-qt-dmri"]], "Reconstruction with Robust and Unbiased Model-BAsed Spherical Deconvolution": [[90, "reconstruction-with-robust-and-unbiased-model-based-spherical-deconvolution"]], "Step 2. fODF Reconstruction": [[90, "step-2-fodf-reconstruction"]], "Reconstruction with the Sparse Fascicle Model": [[91, "reconstruction-with-the-sparse-fascicle-model"]], "Signal Reconstruction Using Spherical Harmonics": [[92, "signal-reconstruction-using-spherical-harmonics"]], "Continuous and analytical diffusion signal modelling with 3D-SHORE": [[93, "continuous-and-analytical-diffusion-signal-modelling-with-3d-shore"]], "Calculate SHORE scalar maps": [[94, "calculate-shore-scalar-maps"]], "Using the RESTORE algorithm for robust tensor fitting": [[95, "using-the-restore-algorithm-for-robust-tensor-fitting"]], "Affine Registration in 3D": [[97, "affine-registration-in-3d"]], "Affine Registration with Masks": [[98, "affine-registration-with-masks"]], "Groupwise Bundle Registration": [[99, "groupwise-bundle-registration"]], "How it works": [[99, "how-it-works"]], "Example": [[99, "example"]], "Extended capabilities": [[99, "extended-capabilities"]], "Direct Bundle Registration": [[100, "direct-bundle-registration"]], "Diffeomorphic Registration with binary and fuzzy images": [[103, "diffeomorphic-registration-with-binary-and-fuzzy-images"]], "Applying image-based deformations to streamlines": [[105, "applying-image-based-deformations-to-streamlines"]], "Symmetric Diffeomorphic Registration in 2D": [[106, "symmetric-diffeomorphic-registration-in-2d"]], "Symmetric Diffeomorphic Registration in 3D": [[107, "symmetric-diffeomorphic-registration-in-3d"]], "Automatic Fiber Bundle Extraction with RecoBundles": [[109, "automatic-fiber-bundle-extraction-with-recobundles"]], "Fast Streamline Search": [[110, "fast-streamline-search"]], "Tractography Clustering - Available Features": [[112, "tractography-clustering-available-features"]], "Available Features": [[112, "available-features"]], "Identity Feature": [[112, "clustering-examples-identityfeature"]], "Resample Feature": [[112, "resample-feature"]], "Center of Mass Feature": [[112, "center-of-mass-feature"]], "Midpoint Feature": [[112, "midpoint-feature"]], "ArcLength Feature": [[112, "arclength-feature"]], "Vector Between Endpoints Feature": [[112, "vector-between-endpoints-feature"]], "Tractography Clustering - Available Metrics": [[113, "tractography-clustering-available-metrics"]], "Available Metrics": [[113, "available-metrics"]], "Average of Pointwise Euclidean Metric": [[113, "average-of-pointwise-euclidean-metric"]], "Sum of Pointwise Euclidean Metric": [[113, "sum-of-pointwise-euclidean-metric"]], "Cosine Metric": [[113, "cosine-metric"]], "Enhancing QuickBundles with different metrics and features": [[114, "enhancing-quickbundles-with-different-metrics-and-features"]], "Clustering framework": [[114, "clustering-framework"]], "Extending Feature": [[114, "extending-feature"]], "Extending Metric": [[114, "extending-metric"]], "Tractography Clustering with QuickBundles": [[115, "tractography-clustering-with-quickbundles"]], "Tissue Classification of a T1-weighted Structural Image": [[117, "tissue-classification-of-a-t1-weighted-structural-image"]], "DKI MultiTensor Simulation": [[121, "dki-multitensor-simulation"]], "MultiTensor Simulation": [[122, "multitensor-simulation"]], "Extracting AFQ tract profiles from segmented bundles": [[123, "extracting-afq-tract-profiles-from-segmented-bundles"]], "BUAN Bundle Assignment Maps Creation": [[124, "buan-bundle-assignment-maps-creation"]], "BUAN Bundle Shape Similarity Score": [[125, "buan-bundle-shape-similarity-score"]], "Calculation of Outliers with Cluster Confidence Index": [[126, "calculation-of-outliers-with-cluster-confidence-index"]], "Calculate Path Length Map": [[128, "calculate-path-length-map"]], "Streamline length and size reduction": [[130, "streamline-length-and-size-reduction"]], "Connectivity Matrices, ROI Intersections and Density Maps": [[131, "connectivity-matrices-roi-intersections-and-density-maps"]], "Advanced interactive visualization": [[134, "advanced-interactive-visualization"]], "Visualize bundles and metrics on bundles": [[135, "visualize-bundles-and-metrics-on-bundles"]], "Show every streamline with an orientation color": [[135, "show-every-streamline-with-an-orientation-color"]], "Show every point with a value from a volume with default colormap": [[135, "show-every-point-with-a-value-from-a-volume-with-default-colormap"]], "Show every point with a value from a volume with your colormap": [[135, "show-every-point-with-a-value-from-a-volume-with-your-colormap"]], "Show every bundle with a specific color": [[135, "show-every-bundle-with-a-specific-color"]], "Show every streamline of a bundle with a different color": [[135, "show-every-streamline-of-a-bundle-with-a-different-color"]], "Show every point of every streamline with a different color": [[135, "show-every-point-of-every-streamline-with-a-different-color"]], "Visualization of ROI Surface Rendered with Streamlines": [[136, "visualization-of-roi-surface-rendered-with-streamlines"]], "Simple volume slicing": [[137, "simple-volume-slicing"]], "Render slices from T1 with a specific value range": [[137, "render-slices-from-t1-with-a-specific-value-range"]], "Render slices from FA with your colormap": [[137, "render-slices-from-fa-with-your-colormap"]], "Create a mosaic": [[137, "create-a-mosaic"]], "Gimbal lock": [[143, "gimbal-lock"]], "Mathematics of gimbal lock": [[143, "mathematics-of-gimbal-lock"]], "dipy": [[166, "module-dipy"]], "Diffusion Imaging in Python": [[166, "diffusion-imaging-in-python"]], "Subpackages": [[166, "subpackages"]], "Utilities": [[166, "utilities"]], "get_info": [[166, "get-info"]], "__config__": [[167, "module-dipy.__config__"]], "align": [[168, "module-dipy.align"]], "Module: align._public": [[168, "module-dipy.align._public"]], "Module: align.bundlemin": [[168, "module-dipy.align.bundlemin"]], "Module: align.cpd": [[168, "module-dipy.align.cpd"]], "Note": [[168, "note"]], "Module: align.crosscorr": [[168, "module-dipy.align.crosscorr"]], "Module: align.expectmax": [[168, "module-dipy.align.expectmax"]], "Module: align.imaffine": [[168, "module-dipy.align.imaffine"]], "Module: align.imwarp": [[168, "module-dipy.align.imwarp"]], "Module: align.metrics": [[168, "module-dipy.align.metrics"]], "Module: align.parzenhist": [[168, "module-dipy.align.parzenhist"]], "Module: align.reslice": [[168, "module-dipy.align.reslice"]], "Module: align.scalespace": [[168, "module-dipy.align.scalespace"]], "Module: align.streamlinear": [[168, "module-dipy.align.streamlinear"]], "Module: align.streamwarp": [[168, "module-dipy.align.streamwarp"]], "Module: align.sumsqdiff": [[168, "module-dipy.align.sumsqdiff"]], "Module: align.transforms": [[168, "module-dipy.align.transforms"]], "Module: align.vector_fields": [[168, "module-dipy.align.vector_fields"]], "Bunch": [[168, "bunch"]], "VerbosityLevels": [[168, "verbositylevels"]], "syn_registration": [[168, "syn-registration"]], "Parameters": [[168, "parameters"], [168, "id5"], [168, "id7"], [168, "id9"], [168, "id12"], [168, "id14"], [168, "id19"], [168, "id21"], [168, "id23"], [168, "id25"], [168, "id27"], [168, "id28"], [168, "id31"], [168, "id33"], [168, "id35"], [168, "id37"], [168, "id40"], [168, "id45"], [168, "id52"], [168, "id58"], [168, "id63"], [168, "id69"], [168, "id72"], [168, "id74"], [168, "id76"], [168, "id78"], [168, "id80"], [168, "id82"], [168, "id83"], [168, "id85"], [168, "id87"], [168, "id89"], [168, "id91"], [168, "id93"], [168, "id95"], [168, "id96"], [168, "id100"], [168, "id102"], [168, "id104"], [168, "id106"], [168, "id109"], [168, "id110"], [168, "id114"], [168, "id117"], [168, "id120"], [168, "id123"], [168, "id124"], [168, "id125"], [168, "id126"], [168, "id128"], [168, "id130"], [168, "id132"], [168, "id134"], [168, "id135"], [168, "id136"], [168, "id137"], [168, "id138"], [168, "id139"], [168, "id140"], [168, "id141"], [168, "id142"], [168, "id143"], [168, "id145"], [168, "id148"], [168, "id149"], [168, "id150"], [168, "id151"], [168, "id154"], [168, "id156"], [168, "id159"], [168, "id161"], [168, "id164"], [168, "id166"], [168, "id168"], [168, "id170"], [168, "id171"], [168, "id172"], [168, "id173"], [168, "id174"], [168, "id175"], [168, "id176"], [168, "id177"], [168, "id178"], [168, "id180"], [168, "id183"], [168, "id185"], [168, "id187"], [168, "id189"], [168, "id191"], [168, "id193"], [168, "id195"], [168, "id197"], [168, "id199"], [168, "id200"], [168, "id202"], [168, "id204"], [168, "id205"], [168, "id206"], [168, "id210"], [168, "id211"], [168, "id212"], [168, "id214"], [168, "id215"], [168, "id218"], [168, "id219"], [168, "id222"], [168, "id223"], [168, "id224"], [168, "id227"], [168, "id230"], [168, "id232"], [168, "id233"], [168, "id236"], [168, "id237"], [168, "id240"], [168, "id242"], [168, "id244"], [168, "id247"], [168, "id250"], [168, "id253"], [168, "id259"], [168, "id263"], [168, "id264"], [168, "id266"], [168, "id268"], [168, "id270"], [168, "id272"], [168, "id275"], [168, "id277"], [168, "id279"], [168, "id282"], [168, "id285"], [168, "id288"], [168, "id291"], [168, "id294"], [168, "id298"], [168, "id300"], [168, "id302"], [168, "id304"], [168, "id307"], [168, "id309"], [168, "id311"], [168, "id313"], [168, "id315"], [168, "id317"], [168, "id319"], [168, "id321"], [168, "id323"], [168, "id325"], [168, "id327"], [168, "id329"], [168, "id332"], [168, "id335"], [168, "id336"], [168, "id337"], [168, "id339"], [168, "id341"], [168, "id344"], [168, "id347"], [168, "id349"], [168, "id352"], [168, "id355"], [168, "id358"], [168, "id361"], [168, "id364"], [168, "id367"], [168, "id370"], [168, "id373"], [168, "id374"], [170, "parameters"], [170, "id6"], [170, "id8"], [170, "id11"], [170, "id14"], [170, "id19"], [170, "id22"], [170, "id26"], [170, "id29"], [170, "id32"], [170, "id35"], [170, "id38"], [170, "id40"], [170, "id43"], [170, "id45"], [170, "id48"], [170, "id50"], [170, "id53"], [170, "id56"], [170, "id61"], [170, "id65"], [170, "id69"], [170, "id74"], [170, "id77"], [170, "id79"], [170, "id81"], [170, "id83"], [170, "id87"], [170, "id93"], [170, "id95"], [170, "id98"], [170, "id100"], [170, "id102"], [170, "id104"], [170, "id106"], [170, "id108"], [170, "id110"], [170, "id113"], [170, "id115"], [170, "id118"], [170, "id119"], [170, "id121"], [170, "id123"], [170, "id125"], [170, "id127"], [170, "id129"], [170, "id131"], [170, "id135"], [170, "id136"], [170, "id139"], [170, "id142"], [170, "id145"], [170, "id146"], [170, "id148"], [170, "id150"], [170, "id152"], [170, "id154"], [170, "id156"], [170, "id158"], [170, "id160"], [170, "id163"], [170, "id165"], [170, "id170"], [170, "id175"], [170, "id180"], [170, "id185"], [170, "id186"], [170, "id187"], [170, "id189"], [170, "id192"], [170, "id195"], [170, "id197"], [170, "id199"], [170, "id201"], [170, "id203"], [170, "id205"], [170, "id207"], [170, "id209"], [171, "parameters"], [171, "id5"], [171, "id8"], [171, "id11"], [171, "id12"], [171, "id17"], [171, "id21"], [171, "id22"], [171, "id26"], [171, "id38"], [171, "id40"], [171, "id47"], [171, "id49"], [171, "id62"], [171, "id65"], [171, "id69"], [172, "parameters"], [172, "id3"], [172, "id4"], [172, "id6"], [172, "id8"], [172, "id10"], [172, "id11"], [172, "id13"], [172, "id14"], [172, "id16"], [172, "id18"], [172, "id20"], [172, "id22"], [172, "id27"], [172, "id36"], [172, "id47"], [172, "id53"], [172, "id56"], [172, "id57"], [172, "id60"], [172, "id61"], [172, "id67"], [172, "id75"], [172, "id79"], [172, "id82"], [172, "id92"], [172, "id95"], [172, "id98"], [172, "id99"], [172, "id106"], [173, "parameters"], [173, "id1"], [173, "id2"], [173, "id3"], [173, "id5"], [173, "id7"], [173, "id10"], [173, "id13"], [173, "id19"], [173, "id22"], [173, "id24"], [173, "id25"], [174, "parameters"], [174, "id3"], [174, "id4"], [174, "id5"], [174, "id7"], [174, "id10"], [174, "id12"], [174, "id13"], [174, "id15"], [174, "id16"], [174, "id19"], [174, "id22"], [174, "id25"], [174, "id27"], [174, "id29"], [174, "id30"], [174, "id32"], [174, "id34"], [174, "id36"], [174, "id38"], [174, "id40"], [174, "id42"], [174, "id44"], [174, "id46"], [174, "id48"], [174, "id50"], [174, "id52"], [174, "id54"], [174, "id56"], [174, "id58"], [174, "id60"], [174, "id62"], [174, "id64"], [174, "id67"], [174, "id70"], [174, "id72"], [174, "id74"], [174, "id76"], [174, "id77"], [174, "id79"], [174, "id81"], [174, "id82"], [174, "id83"], [175, "parameters"], [175, "id1"], [175, "id2"], [175, "id3"], [175, "id5"], [175, "id6"], [175, "id8"], [175, "id10"], [175, "id20"], [175, "id22"], [175, "id23"], [175, "id25"], [175, "id27"], [175, "id29"], [175, "id33"], [175, "id34"], [175, "id37"], [175, "id38"], [175, "id40"], [175, "id42"], [175, "id45"], [175, "id46"], [175, "id48"], [175, "id50"], [175, "id76"], [175, "id80"], [175, "id81"], [175, "id82"], [175, "id85"], [175, "id87"], [175, "id92"], [175, "id95"], [175, "id97"], [175, "id98"], [175, "id100"], [176, "parameters"], [176, "id87"], [176, "id88"], [176, "id90"], [176, "id92"], [176, "id96"], [176, "id101"], [176, "id110"], [176, "id114"], [176, "id119"], [176, "id122"], [176, "id127"], [176, "id144"], [176, "id150"], [176, "id155"], [176, "id158"], [176, "id163"], [176, "id164"], [176, "id166"], [176, "id169"], [176, "id171"], [176, "id173"], [176, "id175"], [176, "id177"], [176, "id179"], [176, "id187"], [176, "id188"], [176, "id190"], [176, "id204"], [176, "id210"], [176, "id219"], [176, "id230"], [176, "id235"], [176, "id239"], [176, "id244"], [176, "id250"], [176, "id264"], [176, "id277"], [176, "id288"], [176, "id291"], [176, "id303"], [176, "id307"], [176, "id311"], [176, "id315"], [176, "id319"], [176, "id321"], [176, "id324"], [176, "id331"], [176, "id332"], [176, "id337"], [176, "id371"], [176, "id376"], [176, "id385"], [176, "id389"], [176, "id394"], [176, "id400"], [176, "id403"], [176, "id404"], [176, "id406"], [176, "id408"], [176, "id410"], [176, "id411"], [176, "id412"], [176, "id415"], [176, "id417"], [176, "id423"], [176, "id434"], [176, "id435"], [176, "id461"], [176, "id472"], [176, "id475"], [176, "id478"], [176, "id481"], [176, "id484"], [176, "id487"], [176, "id490"], [176, "id498"], [176, "id504"], [176, "id510"], [176, "id516"], [176, "id521"], [176, "id523"], [176, "id525"], [176, "id532"], [176, "id538"], [176, "id541"], [176, "id546"], [176, "id550"], [176, "id552"], [176, "id557"], [176, "id562"], [176, "id564"], [176, "id566"], [176, "id568"], [176, "id570"], [176, "id579"], [176, "id580"], [176, "id581"], [176, "id582"], [176, "id585"], [176, "id594"], [176, "id596"], [176, "id599"], [176, "id606"], [176, "id611"], [176, "id619"], [176, "id628"], [176, "id629"], [176, "id632"], [176, "id636"], [176, "id638"], [176, "id640"], [176, "id646"], [176, "id651"], [176, "id657"], [176, "id660"], [176, "id662"], [176, "id664"], [176, "id666"], [176, "id668"], [176, "id669"], [176, "id671"], [176, "id673"], [176, "id675"], [176, "id677"], [176, "id701"], [176, "id711"], [176, "id736"], [176, "id764"], [176, "id769"], [176, "id774"], [176, "id779"], [176, "id784"], [176, "id788"], [176, "id792"], [176, "id796"], [176, "id800"], [176, "id804"], [176, "id808"], [176, "id812"], [176, "id816"], [176, "id822"], [176, "id830"], [176, "id836"], [176, "id841"], [176, "id846"], [176, "id850"], [176, "id853"], [176, "id858"], [176, "id863"], [176, "id868"], [176, "id873"], [176, "id878"], [176, "id880"], [176, "id884"], [176, "id889"], [176, "id894"], [176, "id895"], [176, "id896"], [176, "id897"], [176, "id899"], [176, "id901"], [176, "id903"], [176, "id906"], [176, "id909"], [176, "id913"], [176, "id944"], [176, "id952"], [176, "id960"], [176, "id965"], [176, "id967"], [176, "id969"], [176, "id971"], [176, "id974"], [176, "id982"], [176, "id988"], [176, "id994"], [176, "id999"], [176, "id1004"], [176, "id1010"], [176, "id1016"], [176, "id1020"], [176, "id1023"], [176, "id1054"], [176, "id1058"], [176, "id1060"], [176, "id1065"], [176, "id1067"], [176, "id1069"], [176, "id1076"], [176, "id1086"], [176, "id1089"], [176, "id1092"], [176, "id1095"], [176, "id1098"], [176, "id1101"], [176, "id1107"], [176, "id1110"], [176, "id1112"], [176, "id1114"], [176, "id1116"], [176, "id1120"], [176, "id1125"], [176, "id1129"], [176, "id1135"], [176, "id1137"], [176, "id1143"], [176, "id1148"], [176, "id1149"], [176, "id1151"], [176, "id1152"], [176, "id1153"], [176, "id1154"], [176, "id1156"], [176, "id1157"], [176, "id1158"], [176, "id1165"], [176, "id1167"], [176, "id1168"], [176, "id1170"], [176, "id1172"], [176, "id1180"], [176, "id1181"], [176, "id1183"], [176, "id1185"], [176, "id1187"], [176, "id1190"], [176, "id1195"], [176, "id1199"], [176, "id1201"], [176, "id1202"], [176, "id1204"], [176, "id1209"], [176, "id1222"], [176, "id1225"], [176, "id1231"], [176, "id1238"], [176, "id1245"], [176, "id1254"], [176, "id1257"], [176, "id1265"], [176, "id1275"], [176, "id1286"], [176, "id1290"], [176, "id1294"], [176, "id1296"], [176, "id1298"], [176, "id1300"], [176, "id1302"], [177, "parameters"], [177, "id9"], [177, "id12"], [177, "id13"], [177, "id15"], [177, "id21"], [177, "id27"], [177, "id30"], [177, "id34"], [177, "id38"], [177, "id43"], [177, "id45"], [177, "id48"], [177, "id50"], [177, "id52"], [177, "id53"], [177, "id57"], [177, "id59"], [177, "id61"], [177, "id64"], [177, "id65"], [177, "id69"], [177, "id71"], [177, "id75"], [177, "id78"], [177, "id84"], [177, "id86"], [177, "id89"], [177, "id90"], [177, "id93"], [177, "id98"], [177, "id104"], [177, "id106"], [177, "id109"], [177, "id110"], [177, "id116"], [177, "id118"], [177, "id121"], [177, "id124"], [177, "id126"], [177, "id128"], [177, "id132"], [177, "id134"], [177, "id137"], [177, "id141"], [177, "id146"], [177, "id148"], [177, "id150"], [177, "id152"], [177, "id154"], [177, "id156"], [177, "id161"], [177, "id163"], [177, "id166"], [177, "id170"], [177, "id172"], [177, "id176"], [177, "id178"], [177, "id181"], [177, "id184"], [177, "id186"], [177, "id188"], [177, "id194"], [177, "id196"], [177, "id198"], [177, "id200"], [177, "id202"], [177, "id204"], [177, "id206"], [177, "id208"], [177, "id210"], [177, "id212"], [177, "id214"], [177, "id216"], [177, "id218"], [177, "id220"], [178, "parameters"], [178, "id7"], [178, "id10"], [178, "id15"], [178, "id24"], [178, "id29"], [178, "id33"], [178, "id37"], [178, "id42"], [178, "id47"], [178, "id50"], [178, "id56"], [178, "id62"], [178, "id66"], [178, "id70"], [178, "id72"], [178, "id75"], [178, "id79"], [178, "id83"], [178, "id87"], [178, "id91"], [178, "id95"], [179, "parameters"], [179, "id1"], [179, "id2"], [179, "id3"], [179, "id5"], [180, "parameters"], [180, "id8"], [180, "id10"], [180, "id12"], [180, "id15"], [180, "id20"], [180, "id22"], [180, "id26"], [180, "id30"], [180, "id36"], [180, "id40"], [180, "id43"], [180, "id46"], [180, "id49"], [180, "id51"], [180, "id54"], [180, "id57"], [180, "id60"], [180, "id63"], [180, "id64"], [180, "id66"], [180, "id69"], [180, "id83"], [180, "id86"], [180, "id90"], [180, "id93"], [180, "id96"], [180, "id99"], [180, "id104"], [180, "id106"], [180, "id107"], [180, "id109"], [180, "id113"], [180, "id118"], [180, "id121"], [180, "id122"], [180, "id124"], [180, "id125"], [180, "id126"], [180, "id128"], [180, "id132"], [180, "id134"], [180, "id135"], [180, "id138"], [180, "id139"], [180, "id141"], [180, "id143"], [180, "id146"], [180, "id148"], [180, "id150"], [180, "id153"], [180, "id156"], [180, "id159"], [180, "id162"], [180, "id164"], [180, "id167"], [180, "id169"], [180, "id172"], [180, "id174"], [180, "id177"], [180, "id180"], [180, "id182"], [180, "id185"], [180, "id188"], [180, "id191"], [180, "id195"], [180, "id198"], [180, "id201"], [180, "id204"], [180, "id207"], [180, "id210"], [180, "id212"], [180, "id219"], [180, "id223"], [180, "id225"], [180, "id227"], [180, "id229"], [180, "id231"], [180, "id233"], [180, "id236"], [180, "id241"], [180, "id244"], [180, "id247"], [180, "id249"], [180, "id258"], [180, "id266"], [180, "id269"], [180, "id272"], [180, "id275"], [180, "id277"], [180, "id279"], [180, "id283"], [180, "id287"], [180, "id291"], [180, "id295"], [180, "id299"], [180, "id301"], [180, "id304"], [180, "id306"], [180, "id308"], [180, "id310"], [180, "id313"], [180, "id315"], [180, "id318"], [180, "id321"], [180, "id324"], [181, "parameters"], [181, "id2"], [181, "id5"], [181, "id7"], [181, "id9"], [181, "id11"], [181, "id12"], [181, "id13"], [181, "id14"], [181, "id16"], [181, "id17"], [181, "id18"], [181, "id20"], [181, "id22"], [181, "id23"], [181, "id24"], [181, "id25"], [181, "id26"], [181, "id27"], [182, "parameters"], [182, "id3"], [182, "id5"], [182, "id6"], [182, "id9"], [182, "id10"], [182, "id11"], [182, "id13"], [182, "id14"], [182, "id15"], [182, "id16"], [182, "id18"], [182, "id20"], [182, "id22"], [182, "id29"], [182, "id34"], [182, "id38"], [182, "id40"], [182, "id42"], [182, "id43"], [182, "id44"], [182, "id45"], [182, "id47"], [182, "id50"], [182, "id52"], [182, "id54"], [182, "id55"], [182, "id63"], [182, "id66"], [182, "id69"], [182, "id75"], [182, "id78"], [182, "id81"], [182, "id82"], [182, "id85"], [182, "id88"], [182, "id89"], [182, "id92"], [182, "id93"], [182, "id94"], [182, "id95"], [182, "id98"], [182, "id101"], [182, "id103"], [182, "id105"]], "Returns": [[168, "returns"], [168, "id6"], [168, "id10"], [168, "id13"], [168, "id15"], [168, "id20"], [168, "id22"], [168, "id24"], [168, "id26"], [168, "id29"], [168, "id30"], [168, "id32"], [168, "id34"], [168, "id36"], [168, "id41"], [168, "id46"], [168, "id53"], [168, "id59"], [168, "id64"], [168, "id70"], [168, "id73"], [168, "id75"], [168, "id77"], [168, "id79"], [168, "id81"], [168, "id84"], [168, "id86"], [168, "id90"], [168, "id92"], [168, "id94"], [168, "id97"], [168, "id101"], [168, "id103"], [168, "id105"], [168, "id107"], [168, "id111"], [168, "id112"], [168, "id113"], [168, "id115"], [168, "id118"], [168, "id121"], [168, "id127"], [168, "id129"], [168, "id131"], [168, "id133"], [168, "id144"], [168, "id146"], [168, "id152"], [168, "id155"], [168, "id157"], [168, "id160"], [168, "id165"], [168, "id167"], [168, "id169"], [168, "id179"], [168, "id181"], [168, "id184"], [168, "id186"], [168, "id188"], [168, "id190"], [168, "id192"], [168, "id194"], [168, "id196"], [168, "id198"], [168, "id231"], [168, "id234"], [168, "id238"], [168, "id241"], [168, "id243"], [168, "id245"], [168, "id248"], [168, "id265"], [168, "id267"], [168, "id269"], [168, "id271"], [168, "id273"], [168, "id276"], [168, "id278"], [168, "id280"], [168, "id283"], [168, "id286"], [168, "id289"], [168, "id292"], [168, "id295"], [168, "id297"], [168, "id299"], [168, "id301"], [168, "id303"], [168, "id305"], [168, "id308"], [168, "id310"], [168, "id312"], [168, "id314"], [168, "id316"], [168, "id318"], [168, "id320"], [168, "id322"], [168, "id324"], [168, "id326"], [168, "id328"], [168, "id330"], [168, "id333"], [168, "id338"], [168, "id340"], [168, "id342"], [168, "id345"], [168, "id348"], [168, "id350"], [168, "id353"], [168, "id356"], [168, "id359"], [168, "id362"], [168, "id365"], [168, "id368"], [168, "id371"], [170, "returns"], [170, "id5"], [170, "id7"], [170, "id9"], [170, "id12"], [170, "id15"], [170, "id20"], [170, "id23"], [170, "id27"], [170, "id30"], [170, "id33"], [170, "id36"], [170, "id39"], [170, "id41"], [170, "id44"], [170, "id46"], [170, "id49"], [170, "id51"], [170, "id59"], [170, "id62"], [170, "id66"], [170, "id70"], [170, "id75"], [170, "id78"], [170, "id80"], [170, "id82"], [170, "id84"], [170, "id88"], [170, "id94"], [170, "id96"], [170, "id99"], [170, "id101"], [170, "id103"], [170, "id105"], [170, "id107"], [170, "id109"], [170, "id111"], [170, "id114"], [170, "id124"], [170, "id128"], [170, "id130"], [170, "id137"], [170, "id140"], [170, "id143"], [170, "id147"], [170, "id149"], [170, "id153"], [170, "id155"], [170, "id157"], [170, "id159"], [170, "id161"], [170, "id164"], [170, "id190"], [170, "id193"], [170, "id196"], [170, "id198"], [170, "id200"], [170, "id202"], [170, "id204"], [170, "id206"], [170, "id208"], [170, "id210"], [171, "returns"], [171, "id6"], [171, "id9"], [171, "id14"], [171, "id18"], [171, "id27"], [171, "id31"], [171, "id32"], [171, "id33"], [171, "id34"], [171, "id35"], [171, "id36"], [171, "id37"], [171, "id39"], [171, "id41"], [171, "id50"], [171, "id52"], [171, "id53"], [171, "id54"], [171, "id55"], [171, "id56"], [171, "id57"], [171, "id58"], [171, "id59"], [171, "id60"], [171, "id61"], [171, "id63"], [171, "id66"], [171, "id70"], [172, "returns"], [172, "id5"], [172, "id9"], [172, "id12"], [172, "id15"], [172, "id17"], [172, "id19"], [172, "id21"], [172, "id23"], [172, "id30"], [172, "id42"], [172, "id49"], [172, "id54"], [172, "id58"], [172, "id62"], [172, "id68"], [172, "id76"], [172, "id80"], [172, "id85"], [172, "id93"], [172, "id96"], [172, "id101"], [172, "id108"], [173, "returns"], [173, "id6"], [173, "id8"], [173, "id11"], [173, "id16"], [173, "id20"], [173, "id26"], [174, "returns"], [174, "id6"], [174, "id8"], [174, "id11"], [174, "id14"], [174, "id20"], [174, "id24"], [174, "id26"], [174, "id28"], [174, "id31"], [174, "id33"], [174, "id35"], [174, "id37"], [174, "id39"], [174, "id41"], [174, "id43"], [174, "id45"], [174, "id47"], [174, "id49"], [174, "id51"], [174, "id53"], [174, "id55"], [174, "id57"], [174, "id59"], [174, "id61"], [174, "id63"], [174, "id65"], [174, "id68"], [174, "id71"], [174, "id73"], [174, "id75"], [174, "id78"], [174, "id80"], [174, "id84"], [175, "returns"], [175, "id4"], [175, "id7"], [175, "id9"], [175, "id11"], [175, "id24"], [175, "id26"], [175, "id28"], [175, "id35"], [175, "id39"], [175, "id41"], [175, "id43"], [175, "id44"], [175, "id47"], [175, "id49"], [175, "id51"], [175, "id52"], [175, "id83"], [175, "id86"], [175, "id88"], [175, "id93"], [175, "id96"], [175, "id99"], [175, "id101"], [176, "returns"], [176, "id89"], [176, "id111"], [176, "id120"], [176, "id123"], [176, "id128"], [176, "id145"], [176, "id151"], [176, "id156"], [176, "id159"], [176, "id165"], [176, "id168"], [176, "id170"], [176, "id172"], [176, "id174"], [176, "id176"], [176, "id178"], [176, "id192"], [176, "id205"], [176, "id212"], [176, "id221"], [176, "id231"], [176, "id236"], [176, "id240"], [176, "id246"], [176, "id252"], [176, "id266"], [176, "id279"], [176, "id289"], [176, "id293"], [176, "id304"], [176, "id308"], [176, "id312"], [176, "id316"], [176, "id320"], [176, "id322"], [176, "id372"], [176, "id377"], [176, "id386"], [176, "id395"], [176, "id401"], [176, "id405"], [176, "id407"], [176, "id409"], [176, "id413"], [176, "id436"], [176, "id438"], [176, "id443"], [176, "id447"], [176, "id452"], [176, "id454"], [176, "id459"], [176, "id462"], [176, "id473"], [176, "id476"], [176, "id479"], [176, "id482"], [176, "id485"], [176, "id488"], [176, "id491"], [176, "id499"], [176, "id505"], [176, "id511"], [176, "id517"], [176, "id526"], [176, "id533"], [176, "id539"], [176, "id543"], [176, "id551"], [176, "id563"], [176, "id565"], [176, "id567"], [176, "id569"], [176, "id571"], [176, "id583"], [176, "id595"], [176, "id600"], [176, "id607"], [176, "id613"], [176, "id630"], [176, "id637"], [176, "id639"], [176, "id641"], [176, "id647"], [176, "id652"], [176, "id658"], [176, "id661"], [176, "id663"], [176, "id665"], [176, "id667"], [176, "id670"], [176, "id672"], [176, "id674"], [176, "id676"], [176, "id765"], [176, "id770"], [176, "id775"], [176, "id780"], [176, "id823"], [176, "id831"], [176, "id837"], [176, "id842"], [176, "id847"], [176, "id851"], [176, "id854"], [176, "id859"], [176, "id864"], [176, "id869"], [176, "id874"], [176, "id881"], [176, "id898"], [176, "id900"], [176, "id902"], [176, "id904"], [176, "id907"], [176, "id910"], [176, "id914"], [176, "id917"], [176, "id922"], [176, "id930"], [176, "id938"], [176, "id945"], [176, "id953"], [176, "id961"], [176, "id966"], [176, "id970"], [176, "id1055"], [176, "id1066"], [176, "id1068"], [176, "id1070"], [176, "id1071"], [176, "id1072"], [176, "id1074"], [176, "id1077"], [176, "id1078"], [176, "id1080"], [176, "id1082"], [176, "id1084"], [176, "id1087"], [176, "id1090"], [176, "id1093"], [176, "id1096"], [176, "id1099"], [176, "id1102"], [176, "id1108"], [176, "id1111"], [176, "id1113"], [176, "id1115"], [176, "id1117"], [176, "id1121"], [176, "id1130"], [176, "id1131"], [176, "id1132"], [176, "id1133"], [176, "id1134"], [176, "id1136"], [176, "id1138"], [176, "id1144"], [176, "id1150"], [176, "id1155"], [176, "id1164"], [176, "id1166"], [176, "id1169"], [176, "id1171"], [176, "id1173"], [176, "id1182"], [176, "id1186"], [176, "id1203"], [176, "id1205"], [176, "id1211"], [176, "id1223"], [176, "id1226"], [176, "id1233"], [176, "id1240"], [176, "id1247"], [176, "id1255"], [176, "id1259"], [176, "id1267"], [176, "id1295"], [176, "id1297"], [176, "id1299"], [176, "id1301"], [176, "id1303"], [177, "returns"], [177, "id10"], [177, "id14"], [177, "id18"], [177, "id24"], [177, "id28"], [177, "id31"], [177, "id35"], [177, "id39"], [177, "id51"], [177, "id56"], [177, "id58"], [177, "id60"], [177, "id66"], [177, "id70"], [177, "id76"], [177, "id79"], [177, "id87"], [177, "id91"], [177, "id94"], [177, "id99"], [177, "id107"], [177, "id119"], [177, "id122"], [177, "id127"], [177, "id129"], [177, "id133"], [177, "id135"], [177, "id142"], [177, "id147"], [177, "id149"], [177, "id151"], [177, "id153"], [177, "id155"], [177, "id157"], [177, "id162"], [177, "id164"], [177, "id167"], [177, "id171"], [177, "id173"], [177, "id179"], [177, "id182"], [177, "id187"], [177, "id189"], [177, "id195"], [177, "id197"], [177, "id199"], [177, "id201"], [177, "id203"], [177, "id205"], [177, "id207"], [177, "id209"], [177, "id211"], [177, "id213"], [177, "id215"], [177, "id217"], [177, "id219"], [177, "id221"], [178, "returns"], [178, "id8"], [178, "id16"], [178, "id25"], [178, "id30"], [178, "id34"], [178, "id38"], [178, "id43"], [178, "id48"], [178, "id51"], [178, "id57"], [178, "id63"], [178, "id67"], [178, "id71"], [178, "id73"], [178, "id76"], [178, "id80"], [178, "id84"], [178, "id88"], [178, "id92"], [178, "id96"], [179, "returns"], [179, "id6"], [180, "returns"], [180, "id9"], [180, "id11"], [180, "id13"], [180, "id16"], [180, "id21"], [180, "id23"], [180, "id27"], [180, "id31"], [180, "id37"], [180, "id41"], [180, "id44"], [180, "id47"], [180, "id50"], [180, "id52"], [180, "id55"], [180, "id58"], [180, "id61"], [180, "id65"], [180, "id70"], [180, "id84"], [180, "id87"], [180, "id91"], [180, "id94"], [180, "id97"], [180, "id105"], [180, "id108"], [180, "id110"], [180, "id114"], [180, "id123"], [180, "id127"], [180, "id129"], [180, "id133"], [180, "id136"], [180, "id140"], [180, "id147"], [180, "id149"], [180, "id151"], [180, "id154"], [180, "id157"], [180, "id160"], [180, "id163"], [180, "id165"], [180, "id168"], [180, "id170"], [180, "id173"], [180, "id175"], [180, "id178"], [180, "id181"], [180, "id183"], [180, "id186"], [180, "id189"], [180, "id192"], [180, "id196"], [180, "id199"], [180, "id202"], [180, "id205"], [180, "id208"], [180, "id211"], [180, "id213"], [180, "id224"], [180, "id226"], [180, "id228"], [180, "id230"], [180, "id232"], [180, "id234"], [180, "id238"], [180, "id242"], [180, "id245"], [180, "id248"], [180, "id250"], [180, "id260"], [180, "id267"], [180, "id270"], [180, "id273"], [180, "id276"], [180, "id280"], [180, "id292"], [180, "id296"], [180, "id300"], [180, "id302"], [180, "id305"], [180, "id307"], [180, "id309"], [180, "id311"], [180, "id314"], [180, "id316"], [180, "id319"], [180, "id322"], [180, "id325"], [181, "returns"], [181, "id8"], [181, "id10"], [181, "id15"], [181, "id19"], [181, "id21"], [182, "returns"], [182, "id17"], [182, "id39"], [182, "id41"], [182, "id46"], [182, "id48"], [182, "id51"]], "register_dwi_to_template": [[168, "register-dwi-to-template"]], "write_mapping": [[168, "write-mapping"]], "read_mapping": [[168, "read-mapping"]], "resample": [[168, "resample"]], "affine_registration": [[168, "affine-registration"]], "center_of_mass": [[168, "center-of-mass"], [180, "center-of-mass"]], "translation": [[168, "translation"]], "rigid": [[168, "rigid"]], "rigid_isoscaling": [[168, "rigid-isoscaling"]], "rigid_scaling": [[168, "rigid-scaling"]], "affine": [[168, "affine"]], "_METHOD_DICT": [[168, "method-dict"]], "register_series": [[168, "register-series"]], "register_dwi_series": [[168, "register-dwi-series"]], "motion_correction": [[168, "motion-correction"]], "streamline_registration": [[168, "streamline-registration"]], "determine_num_threads": [[168, "determine-num-threads"], [172, "determine-num-threads"], [172, "id97"], [180, "determine-num-threads"]], "distance_matrix_mdf": [[168, "distance-matrix-mdf"]], "DeformableRegistration": [[168, "deformableregistration"]], "Attributes": [[168, "attributes"], [170, "attributes"], [170, "id132"], [170, "id166"], [170, "id171"], [170, "id176"], [170, "id181"], [176, "attributes"], [176, "id553"], [176, "id558"], [178, "attributes"], [180, "attributes"], [180, "id100"]], "gaussian_kernel": [[168, "gaussian-kernel"]], "low_rank_eigen": [[168, "low-rank-eigen"]], "initialize_sigma2": [[168, "initialize-sigma2"]], "lowrankQS": [[168, "lowrankqs"]], "compute_cc_backward_step_2d": [[168, "compute-cc-backward-step-2d"]], "compute_cc_backward_step_3d": [[168, "compute-cc-backward-step-3d"]], "compute_cc_forward_step_2d": [[168, "compute-cc-forward-step-2d"]], "compute_cc_forward_step_3d": [[168, "compute-cc-forward-step-3d"]], "precompute_cc_factors_2d": [[168, "precompute-cc-factors-2d"]], "precompute_cc_factors_2d_test": [[168, "precompute-cc-factors-2d-test"]], "precompute_cc_factors_3d": [[168, "precompute-cc-factors-3d"]], "precompute_cc_factors_3d_test": [[168, "precompute-cc-factors-3d-test"]], "compute_em_demons_step_2d": [[168, "compute-em-demons-step-2d"]], "compute_em_demons_step_3d": [[168, "compute-em-demons-step-3d"]], "compute_masked_class_stats_2d": [[168, "compute-masked-class-stats-2d"]], "compute_masked_class_stats_3d": [[168, "compute-masked-class-stats-3d"]], "quantize_positive_2d": [[168, "quantize-positive-2d"]], "quantize_positive_3d": [[168, "quantize-positive-3d"]], "AffineInversionError": [[168, "affineinversionerror"]], "AffineInvalidValuesError": [[168, "affineinvalidvalueserror"]], "AffineMap": [[168, "affinemap"]], "MutualInformationMetric": [[168, "mutualinformationmetric"]], "AffineRegistration": [[168, "affineregistration"]], "_transform_method": [[168, "transform-method"]], "transform_centers_of_mass": [[168, "transform-centers-of-mass"]], "transform_geometric_centers": [[168, "transform-geometric-centers"]], "transform_origins": [[168, "transform-origins"]], "DiffeomorphicMap": [[168, "diffeomorphicmap"]], "DiffeomorphicRegistration": [[168, "diffeomorphicregistration"]], "SymmetricDiffeomorphicRegistration": [[168, "symmetricdiffeomorphicregistration"]], "RegistrationStages": [[168, "registrationstages"]], "logger": [[168, "logger"], [168, "id201"], [168, "id239"], [170, "logger"], [174, "logger"], [175, "logger"], [175, "id36"], [175, "id84"], [176, "logger"], [177, "logger"], [177, "id77"]], "mult_aff": [[168, "mult-aff"]], "get_direction_and_spacings": [[168, "get-direction-and-spacings"]], "SimilarityMetric": [[168, "similaritymetric"]], "CCMetric": [[168, "ccmetric"]], "EMMetric": [[168, "emmetric"]], "SSDMetric": [[168, "ssdmetric"]], "v_cycle_2d": [[168, "v-cycle-2d"]], "v_cycle_3d": [[168, "v-cycle-3d"]], "ParzenJointHistogram": [[168, "parzenjointhistogram"]], "compute_parzen_mi": [[168, "compute-parzen-mi"]], "cubic_spline": [[168, "cubic-spline"]], "cubic_spline_derivative": [[168, "cubic-spline-derivative"]], "sample_domain_regular": [[168, "sample-domain-regular"]], "reslice": [[168, "reslice"]], "ScaleSpace": [[168, "scalespace"]], "IsotropicScaleSpace": [[168, "isotropicscalespace"]], "StreamlineDistanceMetric": [[168, "streamlinedistancemetric"]], "BundleMinDistanceMetric": [[168, "bundlemindistancemetric"]], "Methods": [[168, "methods"], [168, "id208"], [168, "id216"], [168, "id220"], [180, "methods"]], "BundleMinDistanceMatrixMetric": [[168, "bundlemindistancematrixmetric"]], "BundleMinDistanceAsymmetricMetric": [[168, "bundlemindistanceasymmetricmetric"]], "BundleSumDistanceMatrixMetric": [[168, "bundlesumdistancematrixmetric"]], "JointBundleMinDistanceMetric": [[168, "jointbundlemindistancemetric"]], "StreamlineLinearRegistration": [[168, "streamlinelinearregistration"]], "StreamlineRegistrationMap": [[168, "streamlineregistrationmap"]], "JointStreamlineRegistrationMap": [[168, "jointstreamlineregistrationmap"]], "bundle_sum_distance": [[168, "bundle-sum-distance"]], "bundle_min_distance": [[168, "bundle-min-distance"]], "bundle_min_distance_fast": [[168, "bundle-min-distance-fast"]], "bundle_min_distance_asymmetric_fast": [[168, "bundle-min-distance-asymmetric-fast"]], "remove_clusters_by_size": [[168, "remove-clusters-by-size"]], "progressive_slr": [[168, "progressive-slr"]], "slr_with_qbx": [[168, "slr-with-qbx"]], "groupwise_slr": [[168, "groupwise-slr"]], "get_unique_pairs": [[168, "get-unique-pairs"]], "compose_matrix44": [[168, "compose-matrix44"]], "decompose_matrix44": [[168, "decompose-matrix44"]], "average_bundle_length": [[168, "average-bundle-length"]], "find_missing": [[168, "find-missing"]], "bundlewarp": [[168, "bundlewarp"]], "bundlewarp_vector_filed": [[168, "bundlewarp-vector-filed"]], "bundlewarp_shape_analysis": [[168, "bundlewarp-shape-analysis"]], "compute_energy_ssd_2d": [[168, "compute-energy-ssd-2d"]], "compute_energy_ssd_3d": [[168, "compute-energy-ssd-3d"]], "compute_residual_displacement_field_ssd_2d": [[168, "compute-residual-displacement-field-ssd-2d"]], "compute_residual_displacement_field_ssd_3d": [[168, "compute-residual-displacement-field-ssd-3d"]], "compute_ssd_demons_step_2d": [[168, "compute-ssd-demons-step-2d"]], "compute_ssd_demons_step_3d": [[168, "compute-ssd-demons-step-3d"]], "iterate_residual_displacement_field_ssd_2d": [[168, "iterate-residual-displacement-field-ssd-2d"]], "iterate_residual_displacement_field_ssd_3d": [[168, "iterate-residual-displacement-field-ssd-3d"]], "solve_2d_symmetric_positive_definite": [[168, "solve-2d-symmetric-positive-definite"]], "solve_3d_symmetric_positive_definite": [[168, "solve-3d-symmetric-positive-definite"]], "AffineTransform2D": [[168, "affinetransform2d"]], "AffineTransform3D": [[168, "affinetransform3d"]], "RigidIsoScalingTransform2D": [[168, "rigidisoscalingtransform2d"]], "RigidIsoScalingTransform3D": [[168, "rigidisoscalingtransform3d"]], "RigidScalingTransform2D": [[168, "rigidscalingtransform2d"]], "RigidScalingTransform3D": [[168, "rigidscalingtransform3d"]], "RigidTransform2D": [[168, "rigidtransform2d"]], "RigidTransform3D": [[168, "rigidtransform3d"]], "RotationTransform2D": [[168, "rotationtransform2d"]], "RotationTransform3D": [[168, "rotationtransform3d"]], "ScalingTransform2D": [[168, "scalingtransform2d"]], "ScalingTransform3D": [[168, "scalingtransform3d"]], "Transform": [[168, "transform"]], "TranslationTransform2D": [[168, "translationtransform2d"]], "TranslationTransform3D": [[168, "translationtransform3d"]], "compose_vector_fields_2d": [[168, "compose-vector-fields-2d"]], "compose_vector_fields_3d": [[168, "compose-vector-fields-3d"]], "create_circle": [[168, "create-circle"]], "create_harmonic_fields_2d": [[168, "create-harmonic-fields-2d"]], "create_harmonic_fields_3d": [[168, "create-harmonic-fields-3d"]], "create_random_displacement_2d": [[168, "create-random-displacement-2d"]], "create_random_displacement_3d": [[168, "create-random-displacement-3d"]], "create_sphere": [[168, "create-sphere"]], "downsample_displacement_field_2d": [[168, "downsample-displacement-field-2d"]], "downsample_displacement_field_3d": [[168, "downsample-displacement-field-3d"]], "downsample_scalar_field_2d": [[168, "downsample-scalar-field-2d"]], "downsample_scalar_field_3d": [[168, "downsample-scalar-field-3d"]], "gradient": [[168, "gradient"], [180, "gradient"]], "invert_vector_field_fixed_point_2d": [[168, "invert-vector-field-fixed-point-2d"]], "invert_vector_field_fixed_point_3d": [[168, "invert-vector-field-fixed-point-3d"]], "is_valid_affine": [[168, "is-valid-affine"]], "reorient_vector_field_2d": [[168, "reorient-vector-field-2d"]], "reorient_vector_field_3d": [[168, "reorient-vector-field-3d"]], "resample_displacement_field_2d": [[168, "resample-displacement-field-2d"]], "resample_displacement_field_3d": [[168, "resample-displacement-field-3d"]], "simplify_warp_function_2d": [[168, "simplify-warp-function-2d"]], "simplify_warp_function_3d": [[168, "simplify-warp-function-3d"]], "sparse_gradient": [[168, "sparse-gradient"]], "transform_2d_affine": [[168, "transform-2d-affine"]], "transform_2d_affine_nn": [[168, "transform-2d-affine-nn"]], "transform_3d_affine": [[168, "transform-3d-affine"]], "transform_3d_affine_nn": [[168, "transform-3d-affine-nn"]], "warp_2d": [[168, "warp-2d"]], "warp_2d_nn": [[168, "warp-2d-nn"]], "warp_3d": [[168, "warp-3d"]], "warp_3d_nn": [[168, "warp-3d-nn"]], "warp_coordinates_2d": [[168, "warp-coordinates-2d"]], "warp_coordinates_3d": [[168, "warp-coordinates-3d"]], "boots": [[169, "module-dipy.boots"]], "core": [[170, "module-dipy.core"]], "Module: core.benchmarks": [[170, "module-dipy.core.benchmarks"]], "Module: core.benchmarks.bench_sphere": [[170, "module-dipy.core.benchmarks.bench_sphere"]], "Module: core.geometry": [[170, "module-dipy.core.geometry"]], "Module: core.gradients": [[170, "module-dipy.core.gradients"]], "Module: core.graph": [[170, "module-dipy.core.graph"]], "Module: core.histeq": [[170, "module-dipy.core.histeq"]], "Module: core.interpolation": [[170, "module-dipy.core.interpolation"]], "Module: core.ndindex": [[170, "module-dipy.core.ndindex"]], "Module: core.onetime": [[170, "module-dipy.core.onetime"]], "Module: core.optimize": [[170, "module-dipy.core.optimize"]], "Module: core.profile": [[170, "module-dipy.core.profile"]], "Module: core.rng": [[170, "module-dipy.core.rng"]], "Module: core.sphere": [[170, "module-dipy.core.sphere"]], "Module: core.sphere_stats": [[170, "module-dipy.core.sphere_stats"]], "Module: core.subdivide_octahedron": [[170, "module-dipy.core.subdivide_octahedron"]], "Module: core.wavelet": [[170, "module-dipy.core.wavelet"]], "Timer": [[170, "timer"]], "func_minimize_adhoc": [[170, "func-minimize-adhoc"]], "func_minimize_scipy": [[170, "func-minimize-scipy"]], "bench_disperse_charges_alt": [[170, "bench-disperse-charges-alt"]], "_TUPLE2AXES": [[170, "tuple2axes"]], "sphere2cart": [[170, "sphere2cart"]], "cart2sphere": [[170, "cart2sphere"]], "sph2latlon": [[170, "sph2latlon"]], "normalized_vector": [[170, "normalized-vector"]], "vector_norm": [[170, "vector-norm"]], "rodrigues_axis_rotation": [[170, "rodrigues-axis-rotation"]], "nearest_pos_semi_def": [[170, "nearest-pos-semi-def"]], "sphere_distance": [[170, "sphere-distance"]], "See Also": [[170, "see-also"], [170, "id24"], [170, "id54"], [170, "id60"], [170, "id97"], [170, "id122"], [170, "id151"], [170, "id167"], [170, "id172"], [170, "id177"], [170, "id182"], [170, "id188"], [171, "see-also"], [171, "id13"], [172, "see-also"], [173, "see-also"], [173, "id4"], [173, "id23"], [174, "see-also"], [174, "id9"], [174, "id18"], [176, "see-also"], [176, "id527"], [176, "id534"], [176, "id547"], [176, "id554"], [176, "id559"], [176, "id627"], [176, "id1119"], [176, "id1184"], [176, "id1191"], [176, "id1196"], [176, "id1200"], [176, "id1206"], [176, "id1210"], [176, "id1224"], [178, "see-also"], [178, "id11"], [180, "see-also"], [180, "id14"], [180, "id101"], [180, "id117"], [180, "id152"], [180, "id155"], [180, "id158"], [180, "id161"], [180, "id194"], [180, "id284"], [180, "id288"], [180, "id294"], [180, "id298"]], "cart_distance": [[170, "cart-distance"]], "vector_cosine": [[170, "vector-cosine"]], "lambert_equal_area_projection_polar": [[170, "lambert-equal-area-projection-polar"]], "lambert_equal_area_projection_cart": [[170, "lambert-equal-area-projection-cart"]], "euler_matrix": [[170, "euler-matrix"]], "compose_matrix": [[170, "compose-matrix"]], "decompose_matrix": [[170, "decompose-matrix"]], "Raises": [[170, "raises"], [171, "raises"], [176, "raises"], [180, "raises"], [180, "id285"], [180, "id289"], [180, "id293"]], "circumradius": [[170, "circumradius"]], "vec2vec_rotmat": [[170, "vec2vec-rotmat"]], "compose_transformations": [[170, "compose-transformations"]], "perpendicular_directions": [[170, "perpendicular-directions"]], "dist_to_corner": [[170, "dist-to-corner"]], "is_hemispherical": [[170, "is-hemispherical"]], "GradientTable": [[170, "gradienttable"]], "unique_bvals": [[170, "unique-bvals"]], "gradient_table_from_bvals_bvecs": [[170, "gradient-table-from-bvals-bvecs"]], "Other Parameters": [[170, "other-parameters"]], "gradient_table_from_qvals_bvecs": [[170, "gradient-table-from-qvals-bvecs"]], "gradient_table_from_gradient_strength_bvecs": [[170, "gradient-table-from-gradient-strength-bvecs"]], "gradient_table": [[170, "gradient-table"]], "reorient_bvecs": [[170, "reorient-bvecs"]], "generate_bvecs": [[170, "generate-bvecs"]], "round_bvals": [[170, "round-bvals"]], "unique_bvals_tolerance": [[170, "unique-bvals-tolerance"]], "get_bval_indices": [[170, "get-bval-indices"]], "unique_bvals_magnitude": [[170, "unique-bvals-magnitude"]], "check_multi_b": [[170, "check-multi-b"]], "btens_to_params": [[170, "btens-to-params"]], "params_to_btens": [[170, "params-to-btens"]], "ornt_mapping": [[170, "ornt-mapping"], [174, "ornt-mapping"]], "reorient_vectors": [[170, "reorient-vectors"], [174, "reorient-vectors"]], "reorient_on_axis": [[170, "reorient-on-axis"], [174, "reorient-on-axis"]], "orientation_from_string": [[170, "orientation-from-string"], [174, "orientation-from-string"]], "orientation_to_string": [[170, "orientation-to-string"], [174, "orientation-to-string"]], "Graph": [[170, "graph"]], "histeq": [[170, "histeq"]], "Interpolator": [[170, "interpolator"]], "NearestNeighborInterpolator": [[170, "nearestneighborinterpolator"]], "OutsideImage": [[170, "outsideimage"]], "TriLinearInterpolator": [[170, "trilinearinterpolator"]], "interp_rbf": [[170, "interp-rbf"]], "interpolate_scalar_2d": [[170, "interpolate-scalar-2d"]], "interpolate_scalar_3d": [[170, "interpolate-scalar-3d"]], "interpolate_scalar_nn_2d": [[170, "interpolate-scalar-nn-2d"]], "interpolate_scalar_nn_3d": [[170, "interpolate-scalar-nn-3d"]], "interpolate_vector_2d": [[170, "interpolate-vector-2d"]], "interpolate_vector_3d": [[170, "interpolate-vector-3d"]], "map_coordinates_trilinear_iso": [[170, "map-coordinates-trilinear-iso"]], "nearestneighbor_interpolate": [[170, "nearestneighbor-interpolate"]], "trilinear_interp": [[170, "trilinear-interp"]], "trilinear_interpolate4d": [[170, "trilinear-interpolate4d"]], "ndindex": [[170, "ndindex"]], "ResetMixin": [[170, "resetmixin"]], "OneTimeProperty": [[170, "onetimeproperty"]], "auto_attr": [[170, "auto-attr"]], "Optimizer": [[170, "optimizer"]], "SKLearnLinearSolver": [[170, "sklearnlinearsolver"]], "NonNegativeLeastSquares": [[170, "nonnegativeleastsquares"]], "PositiveDefiniteLeastSquares": [[170, "positivedefiniteleastsquares"]], "spdot": [[170, "spdot"]], "sparse_nnls": [[170, "sparse-nnls"]], "Profiler": [[170, "profiler"]], "WichmannHill2006": [[170, "wichmannhill2006"]], "WichmannHill1982": [[170, "wichmannhill1982"]], "LEcuyer": [[170, "lecuyer"]], "Sphere": [[170, "sphere"], [172, "sphere"]], "HemiSphere": [[170, "hemisphere"], [172, "hemisphere"]], "faces_from_sphere_vertices": [[170, "faces-from-sphere-vertices"]], "unique_edges": [[170, "unique-edges"]], "unique_sets": [[170, "unique-sets"]], "disperse_charges": [[170, "disperse-charges"], [172, "disperse-charges"]], "disperse_charges_alt": [[170, "disperse-charges-alt"]], "euler_characteristic_check": [[170, "euler-characteristic-check"]], "octahedron_vertices": [[170, "octahedron-vertices"]], "octahedron_faces": [[170, "octahedron-faces"]], "icosahedron_vertices": [[170, "icosahedron-vertices"]], "icosahedron_faces": [[170, "icosahedron-faces"]], "unit_octahedron": [[170, "unit-octahedron"]], "unit_icosahedron": [[170, "unit-icosahedron"]], "hemi_icosahedron": [[170, "hemi-icosahedron"]], "random_uniform_on_sphere": [[170, "random-uniform-on-sphere"]], "eigenstats": [[170, "eigenstats"]], "compare_orientation_sets": [[170, "compare-orientation-sets"]], "angular_similarity": [[170, "angular-similarity"]], "create_unit_sphere": [[170, "create-unit-sphere"]], "create_unit_hemisphere": [[170, "create-unit-hemisphere"]], "cshift3D": [[170, "cshift3d"]], "permutationinverse": [[170, "permutationinverse"]], "afb3D_A": [[170, "afb3d-a"]], "sfb3D_A": [[170, "sfb3d-a"]], "sfb3D": [[170, "sfb3d"]], "afb3D": [[170, "afb3d"]], "dwt3D": [[170, "dwt3d"]], "idwt3D": [[170, "idwt3d"]], "data": [[171, "module-dipy.data"]], "Module: data.fetcher": [[171, "module-dipy.data.fetcher"]], "DataError": [[171, "dataerror"]], "loads_compat": [[171, "loads-compat"]], "DATA_DIR": [[171, "data-dir"]], "get_sim_voxels": [[171, "get-sim-voxels"]], "get_skeleton": [[171, "get-skeleton"]], "get_sphere": [[171, "get-sphere"], [172, "get-sphere"]], "default_sphere": [[171, "default-sphere"]], "small_sphere": [[171, "small-sphere"]], "get_3shell_gtab": [[171, "get-3shell-gtab"]], "get_isbi2013_2shell_gtab": [[171, "get-isbi2013-2shell-gtab"]], "get_gtab_taiwan_dsi": [[171, "get-gtab-taiwan-dsi"]], "dsi_voxels": [[171, "dsi-voxels"]], "dsi_deconv_voxels": [[171, "dsi-deconv-voxels"]], "mrtrix_spherical_functions": [[171, "mrtrix-spherical-functions"]], "get_cmap": [[171, "get-cmap"]], "two_cingulum_bundles": [[171, "two-cingulum-bundles"]], "matlab_life_results": [[171, "matlab-life-results"]], "load_sdp_constraints": [[171, "load-sdp-constraints"]], "copyfileobj_withprogress": [[171, "copyfileobj-withprogress"]], "check_md5": [[171, "check-md5"]], "fetch_data": [[171, "fetch-data"]], "fetch_isbi2013_2shell": [[171, "fetch-isbi2013-2shell"]], "fetch_stanford_labels": [[171, "fetch-stanford-labels"]], "fetch_sherbrooke_3shell": [[171, "fetch-sherbrooke-3shell"]], "fetch_stanford_hardi": [[171, "fetch-stanford-hardi"]], "fetch_resdnn_weights": [[171, "fetch-resdnn-weights"]], "fetch_synb0_weights": [[171, "fetch-synb0-weights"]], "fetch_synb0_test": [[171, "fetch-synb0-test"]], "fetch_evac_weights": [[171, "fetch-evac-weights"]], "fetch_evac_test": [[171, "fetch-evac-test"]], "fetch_stanford_t1": [[171, "fetch-stanford-t1"]], "fetch_stanford_pve_maps": [[171, "fetch-stanford-pve-maps"]], "fetch_stanford_tracks": [[171, "fetch-stanford-tracks"]], "fetch_taiwan_ntu_dsi": [[171, "fetch-taiwan-ntu-dsi"]], "fetch_syn_data": [[171, "fetch-syn-data"]], "fetch_mni_template": [[171, "fetch-mni-template"]], "fetch_scil_b0": [[171, "fetch-scil-b0"]], "fetch_bundles_2_subjects": [[171, "fetch-bundles-2-subjects"]], "fetch_ivim": [[171, "fetch-ivim"]], "fetch_cfin_multib": [[171, "fetch-cfin-multib"]], "fetch_file_formats": [[171, "fetch-file-formats"]], "fetch_bundle_atlas_hcp842": [[171, "fetch-bundle-atlas-hcp842"]], "fetch_target_tractogram_hcp": [[171, "fetch-target-tractogram-hcp"]], "fetch_bundle_fa_hcp": [[171, "fetch-bundle-fa-hcp"]], "fetch_qtdMRI_test_retest_2subjects": [[171, "fetch-qtdmri-test-retest-2subjects"]], "fetch_gold_standard_io": [[171, "fetch-gold-standard-io"]], "fetch_qte_lte_pte": [[171, "fetch-qte-lte-pte"]], "fetch_cti_rat1": [[171, "fetch-cti-rat1"]], "fetch_fury_surface": [[171, "fetch-fury-surface"]], "fetch_DiB_70_lte_pte_ste": [[171, "fetch-dib-70-lte-pte-ste"]], "fetch_DiB_217_lte_pte_ste": [[171, "fetch-dib-217-lte-pte-ste"]], "fetch_ptt_minimal_dataset": [[171, "fetch-ptt-minimal-dataset"]], "fetch_bundle_warp_dataset": [[171, "fetch-bundle-warp-dataset"]], "get_fnames": [[171, "get-fnames"]], "read_qtdMRI_test_retest_2subjects": [[171, "read-qtdmri-test-retest-2subjects"]], "read_scil_b0": [[171, "read-scil-b0"]], "read_siemens_scil_b0": [[171, "read-siemens-scil-b0"]], "read_isbi2013_2shell": [[171, "read-isbi2013-2shell"]], "read_sherbrooke_3shell": [[171, "read-sherbrooke-3shell"]], "read_stanford_labels": [[171, "read-stanford-labels"]], "read_stanford_hardi": [[171, "read-stanford-hardi"]], "read_stanford_t1": [[171, "read-stanford-t1"]], "read_stanford_pve_maps": [[171, "read-stanford-pve-maps"]], "read_taiwan_ntu_dsi": [[171, "read-taiwan-ntu-dsi"]], "read_syn_data": [[171, "read-syn-data"]], "fetch_tissue_data": [[171, "fetch-tissue-data"]], "read_tissue_data": [[171, "read-tissue-data"]], "read_mni_template": [[171, "read-mni-template"]], "fetch_cenir_multib": [[171, "fetch-cenir-multib"]], "read_cenir_multib": [[171, "read-cenir-multib"]], "read_bundles_2_subjects": [[171, "read-bundles-2-subjects"]], "read_ivim": [[171, "read-ivim"]], "read_cfin_dwi": [[171, "read-cfin-dwi"]], "read_cfin_t1": [[171, "read-cfin-t1"]], "get_file_formats": [[171, "get-file-formats"]], "get_bundle_atlas_hcp842": [[171, "get-bundle-atlas-hcp842"]], "get_two_hcp842_bundles": [[171, "get-two-hcp842-bundles"]], "get_target_tractogram_hcp": [[171, "get-target-tractogram-hcp"]], "read_qte_lte_pte": [[171, "read-qte-lte-pte"]], "read_DiB_70_lte_pte_ste": [[171, "read-dib-70-lte-pte-ste"]], "read_DiB_217_lte_pte_ste": [[171, "read-dib-217-lte-pte-ste"]], "extract_example_tracts": [[171, "extract-example-tracts"]], "read_five_af_bundles": [[171, "read-five-af-bundles"]], "to_bids_description": [[171, "to-bids-description"]], "fetch_hcp": [[171, "fetch-hcp"]], "fetch_hbn": [[171, "fetch-hbn"]], "denoise": [[172, "module-dipy.denoise"]], "Module: denoise.adaptive_soft_matching": [[172, "module-dipy.denoise.adaptive_soft_matching"]], "Module: denoise.denspeed": [[172, "module-dipy.denoise.denspeed"]], "Module: denoise.enhancement_kernel": [[172, "module-dipy.denoise.enhancement_kernel"]], "Module: denoise.gibbs": [[172, "module-dipy.denoise.gibbs"]], "Module: denoise.localpca": [[172, "module-dipy.denoise.localpca"]], "Module: denoise.nlmeans": [[172, "module-dipy.denoise.nlmeans"]], "Module: denoise.nlmeans_block": [[172, "module-dipy.denoise.nlmeans_block"]], "Module: denoise.noise_estimate": [[172, "module-dipy.denoise.noise_estimate"]], "Module: denoise.non_local_means": [[172, "module-dipy.denoise.non_local_means"]], "Module: denoise.patch2self": [[172, "module-dipy.denoise.patch2self"]], "Module: denoise.pca_noise_estimate": [[172, "module-dipy.denoise.pca_noise_estimate"]], "PCA Based Local Noise Estimation": [[172, "pca-based-local-noise-estimation"]], "Module: denoise.shift_twist_convolution": [[172, "module-dipy.denoise.shift_twist_convolution"]], "adaptive_soft_matching": [[172, "adaptive-soft-matching"]], "add_padding_reflection": [[172, "add-padding-reflection"]], "correspond_indices": [[172, "correspond-indices"]], "nlmeans_3d": [[172, "nlmeans-3d"]], "remove_padding": [[172, "remove-padding"]], "EnhancementKernel": [[172, "enhancementkernel"]], "ceil": [[172, "ceil"]], "gettempdir": [[172, "gettempdir"]], "gibbs_removal": [[172, "gibbs-removal"]], "genpca": [[172, "genpca"]], "localpca": [[172, "localpca"]], "mppca": [[172, "mppca"]], "nlmeans": [[172, "nlmeans"]], "firdn": [[172, "firdn"]], "nlmeans_block": [[172, "nlmeans-block"]], "upfir": [[172, "upfir"]], "piesno": [[172, "piesno"]], "estimate_sigma": [[172, "estimate-sigma"]], "non_local_means": [[172, "non-local-means"]], "patch2self": [[172, "patch2self"]], "pca_noise_estimate": [[172, "pca-noise-estimate"]], "warn": [[172, "warn"], [180, "warn"]], "convolve": [[172, "convolve"]], "convolve_sf": [[172, "convolve-sf"]], "sf_to_sh": [[172, "sf-to-sh"], [176, "sf-to-sh"]], "sh_to_sf": [[172, "sh-to-sf"], [176, "sh-to-sf"]], "direction": [[173, "module-dipy.direction"]], "Module: direction.bootstrap_direction_getter": [[173, "module-dipy.direction.bootstrap_direction_getter"]], "Module: direction.closest_peak_direction_getter": [[173, "module-dipy.direction.closest_peak_direction_getter"]], "Module: direction.peaks": [[173, "module-dipy.direction.peaks"]], "Module: direction.pmf": [[173, "module-dipy.direction.pmf"]], "Module: direction.probabilistic_direction_getter": [[173, "module-dipy.direction.probabilistic_direction_getter"]], "Module: direction.ptt_direction_getter": [[173, "module-dipy.direction.ptt_direction_getter"]], "BootDirectionGetter": [[173, "bootdirectiongetter"]], "BootPmfGen": [[173, "bootpmfgen"], [173, "id21"]], "BaseDirectionGetter": [[173, "basedirectiongetter"]], "BasePmfDirectionGetter": [[173, "basepmfdirectiongetter"]], "ClosestPeakDirectionGetter": [[173, "closestpeakdirectiongetter"]], "PmfGenDirectionGetter": [[173, "pmfgendirectiongetter"]], "peak_directions": [[173, "peak-directions"], [173, "id9"]], "PeaksAndMetrics": [[173, "peaksandmetrics"]], "peak_directions_nl": [[173, "peak-directions-nl"]], "peaks_from_model": [[173, "peaks-from-model"]], "reshape_peaks_for_visualization": [[173, "reshape-peaks-for-visualization"]], "PmfGen": [[173, "pmfgen"]], "SHCoeffPmfGen": [[173, "shcoeffpmfgen"]], "SimplePmfGen": [[173, "simplepmfgen"]], "DeterministicMaximumDirectionGetter": [[173, "deterministicmaximumdirectiongetter"]], "ProbabilisticDirectionGetter": [[173, "probabilisticdirectiongetter"]], "random": [[173, "random"], [180, "random"]], "PTTDirectionGetter": [[173, "pttdirectiongetter"]], "min_radius_curvature_from_angle": [[173, "min-radius-curvature-from-angle"], [180, "min-radius-curvature-from-angle"]], "io": [[174, "module-dipy.io"]], "Module: io.bvectxt": [[174, "module-dipy.io.bvectxt"]], "Module: io.dpy": [[174, "module-dipy.io.dpy"]], "Module: io.gradients": [[174, "module-dipy.io.gradients"]], "Module: io.image": [[174, "module-dipy.io.image"]], "Module: io.peaks": [[174, "module-dipy.io.peaks"]], "Module: io.pickles": [[174, "module-dipy.io.pickles"]], "Module: io.stateful_tractogram": [[174, "module-dipy.io.stateful_tractogram"]], "Module: io.streamline": [[174, "module-dipy.io.streamline"]], "Module: io.utils": [[174, "module-dipy.io.utils"]], "Module: io.vtk": [[174, "module-dipy.io.vtk"]], "read_bvec_file": [[174, "read-bvec-file"]], "Dpy": [[174, "dpy"]], "read_bvals_bvecs": [[174, "read-bvals-bvecs"]], "load_nifti_data": [[174, "load-nifti-data"]], "load_nifti": [[174, "load-nifti"]], "save_nifti": [[174, "save-nifti"]], "save_qa_metric": [[174, "save-qa-metric"]], "load_peaks": [[174, "load-peaks"]], "save_peaks": [[174, "save-peaks"]], "peaks_to_niftis": [[174, "peaks-to-niftis"]], "save_pickle": [[174, "save-pickle"]], "load_pickle": [[174, "load-pickle"]], "Space": [[174, "space"]], "Origin": [[174, "origin"]], "StatefulTractogram": [[174, "statefultractogram"]], "set_sft_logger_level": [[174, "set-sft-logger-level"]], "save_tractogram": [[174, "save-tractogram"]], "load_tractogram": [[174, "load-tractogram"]], "load_generator": [[174, "load-generator"]], "save_generator": [[174, "save-generator"]], "load_trk": [[174, "load-trk"]], "load_tck": [[174, "load-tck"]], "load_vtk": [[174, "load-vtk"]], "load_vtp": [[174, "load-vtp"]], "load_fib": [[174, "load-fib"]], "load_dpy": [[174, "load-dpy"]], "save_trk": [[174, "save-trk"]], "save_tck": [[174, "save-tck"]], "save_vtk": [[174, "save-vtk"]], "save_vtp": [[174, "save-vtp"]], "save_fib": [[174, "save-fib"]], "save_dpy": [[174, "save-dpy"]], "nifti1_symmat": [[174, "nifti1-symmat"]], "make5d": [[174, "make5d"]], "decfa": [[174, "decfa"]], "decfa_to_float": [[174, "decfa-to-float"]], "is_reference_info_valid": [[174, "is-reference-info-valid"]], "get_reference_info": [[174, "get-reference-info"]], "is_header_compatible": [[174, "is-header-compatible"]], "create_tractogram_header": [[174, "create-tractogram-header"]], "create_nifti_header": [[174, "create-nifti-header"]], "save_buan_profiles_hdf5": [[174, "save-buan-profiles-hdf5"]], "read_img_arr_or_path": [[174, "read-img-arr-or-path"]], "load_polydata": [[174, "load-polydata"]], "save_polydata": [[174, "save-polydata"]], "save_vtk_streamlines": [[174, "save-vtk-streamlines"]], "load_vtk_streamlines": [[174, "load-vtk-streamlines"]], "nn": [[175, "module-dipy.nn"]], "Module: nn.cnn_1d_denoising": [[175, "module-dipy.nn.cnn_1d_denoising"]], "Title : Denoising diffusion weighted imaging data using CNN": [[175, "title-denoising-diffusion-weighted-imaging-data-using-cnn"]], "Reference": [[175, "reference"]], "Module: nn.evac": [[175, "module-dipy.nn.evac"]], "Module: nn.histo_resdnn": [[175, "module-dipy.nn.histo_resdnn"]], "Module: nn.model": [[175, "module-dipy.nn.model"]], "Module: nn.synb0": [[175, "module-dipy.nn.synb0"]], "Module: nn.utils": [[175, "module-dipy.nn.utils"]], "Cnn1DDenoiser": [[175, "cnn1ddenoiser"]], "Block": [[175, "block"]], "ChannelSum": [[175, "channelsum"]], "EVACPlus": [[175, "evacplus"]], "prepare_img": [[175, "prepare-img"]], "init_model": [[175, "init-model"]], "HistoResDNN": [[175, "historesdnn"]], "SingleLayerPerceptron": [[175, "singlelayerperceptron"]], "MultipleLayerPercepton": [[175, "multiplelayerpercepton"]], "EncoderBlock": [[175, "encoderblock"], [175, "id61"]], "DecoderBlock": [[175, "decoderblock"], [175, "id68"]], "Synb0": [[175, "synb0"]], "UNet3D": [[175, "unet3d"], [175, "id89"]], "normalize": [[175, "normalize"], [175, "id91"]], "unnormalize": [[175, "unnormalize"], [175, "id94"]], "set_logger_level": [[175, "set-logger-level"]], "transform_img": [[175, "transform-img"]], "recover_img": [[175, "recover-img"]], "reconst": [[176, "module-dipy.reconst"]], "Module: reconst.base": [[176, "module-dipy.reconst.base"]], "Module: reconst.benchmarks": [[176, "module-dipy.reconst.benchmarks"]], "Module: reconst.benchmarks.bench_bounding_box": [[176, "module-dipy.reconst.benchmarks.bench_bounding_box"]], "Module: reconst.benchmarks.bench_csd": [[176, "module-dipy.reconst.benchmarks.bench_csd"]], "Module: reconst.benchmarks.bench_peaks": [[176, "module-dipy.reconst.benchmarks.bench_peaks"]], "Module: reconst.benchmarks.bench_squash": [[176, "module-dipy.reconst.benchmarks.bench_squash"]], "Module: reconst.benchmarks.bench_vec_val_sum": [[176, "module-dipy.reconst.benchmarks.bench_vec_val_sum"]], "Module: reconst.cache": [[176, "module-dipy.reconst.cache"]], "Module: reconst.cross_validation": [[176, "module-dipy.reconst.cross_validation"]], "Module: reconst.csdeconv": [[176, "module-dipy.reconst.csdeconv"]], "Module: reconst.cti": [[176, "module-dipy.reconst.cti"]], "Module: reconst.dki": [[176, "module-dipy.reconst.dki"]], "Module: reconst.dki_micro": [[176, "module-dipy.reconst.dki_micro"]], "Module: reconst.dsi": [[176, "module-dipy.reconst.dsi"]], "Module: reconst.dti": [[176, "module-dipy.reconst.dti"]], "Module: reconst.eudx_direction_getter": [[176, "module-dipy.reconst.eudx_direction_getter"]], "Module: reconst.forecast": [[176, "module-dipy.reconst.forecast"]], "Module: reconst.fwdti": [[176, "module-dipy.reconst.fwdti"]], "Module: reconst.gqi": [[176, "module-dipy.reconst.gqi"]], "Module: reconst.ivim": [[176, "module-dipy.reconst.ivim"]], "Module: reconst.mapmri": [[176, "module-dipy.reconst.mapmri"]], "Module: reconst.mcsd": [[176, "module-dipy.reconst.mcsd"]], "Module: reconst.msdki": [[176, "module-dipy.reconst.msdki"]], "Module: reconst.multi_voxel": [[176, "module-dipy.reconst.multi_voxel"]], "Module: reconst.odf": [[176, "module-dipy.reconst.odf"]], "Module: reconst.qtdmri": [[176, "module-dipy.reconst.qtdmri"]], "Module: reconst.qti": [[176, "module-dipy.reconst.qti"]], "Module: reconst.quick_squash": [[176, "module-dipy.reconst.quick_squash"]], "Module: reconst.recspeed": [[176, "module-dipy.reconst.recspeed"]], "Module: reconst.rumba": [[176, "module-dipy.reconst.rumba"]], "Module: reconst.sfm": [[176, "module-dipy.reconst.sfm"]], "Module: reconst.shm": [[176, "module-dipy.reconst.shm"]], "Module: reconst.shore": [[176, "module-dipy.reconst.shore"]], "Module: reconst.utils": [[176, "module-dipy.reconst.utils"]], "Module: reconst.vec_val_sum": [[176, "module-dipy.reconst.vec_val_sum"]], "ReconstModel": [[176, "reconstmodel"]], "ReconstFit": [[176, "reconstfit"]], "bench_bounding_box": [[176, "bench-bounding-box"]], "num_grad": [[176, "num-grad"]], "bench_csdeconv": [[176, "bench-csdeconv"]], "bench_local_maxima": [[176, "bench-local-maxima"]], "old_squash": [[176, "old-squash"]], "bench_quick_squash": [[176, "bench-quick-squash"]], "bench_vec_val_vect": [[176, "bench-vec-val-vect"]], "Cache": [[176, "cache"]], "coeff_of_determination": [[176, "coeff-of-determination"]], "kfold_xval": [[176, "kfold-xval"]], "AxSymShResponse": [[176, "axsymshresponse"]], "ConstrainedSphericalDeconvModel": [[176, "constrainedsphericaldeconvmodel"]], "ConstrainedSDTModel": [[176, "constrainedsdtmodel"]], "auto_response": [[176, "auto-response"]], "response_from_mask": [[176, "response-from-mask"]], "estimate_response": [[176, "estimate-response"]], "forward_sdt_deconv_mat": [[176, "forward-sdt-deconv-mat"]], "csdeconv": [[176, "csdeconv"]], "odf_deconv": [[176, "odf-deconv"]], "odf_sh_to_sharp": [[176, "odf-sh-to-sharp"]], "mask_for_response_ssst": [[176, "mask-for-response-ssst"]], "response_from_mask_ssst": [[176, "response-from-mask-ssst"]], "auto_response_ssst": [[176, "auto-response-ssst"]], "recursive_response": [[176, "recursive-response"]], "fa_trace_to_lambdas": [[176, "fa-trace-to-lambdas"]], "CorrelationTensorModel": [[176, "correlationtensormodel"]], "CorrelationTensorFit": [[176, "correlationtensorfit"]], "Parameters:": [[176, "id167"]], "from_qte_to_cti": [[176, "from-qte-to-cti"]], "multi_gaussian_k_from_c": [[176, "multi-gaussian-k-from-c"]], "split_cti_params": [[176, "split-cti-params"]], "cti_prediction": [[176, "cti-prediction"]], "params_to_cti_params": [[176, "params-to-cti-params"]], "ls_fit_cti": [[176, "ls-fit-cti"]], "DiffusionKurtosisModel": [[176, "diffusionkurtosismodel"]], "DiffusionKurtosisFit": [[176, "diffusionkurtosisfit"]], "carlson_rf": [[176, "carlson-rf"]], "carlson_rd": [[176, "carlson-rd"]], "directional_diffusion": [[176, "directional-diffusion"]], "directional_diffusion_variance": [[176, "directional-diffusion-variance"]], "directional_kurtosis": [[176, "directional-kurtosis"]], "apparent_kurtosis_coef": [[176, "apparent-kurtosis-coef"]], "mean_kurtosis": [[176, "mean-kurtosis"]], "radial_kurtosis": [[176, "radial-kurtosis"]], "axial_kurtosis": [[176, "axial-kurtosis"]], "kurtosis_maximum": [[176, "kurtosis-maximum"]], "mean_kurtosis_tensor": [[176, "mean-kurtosis-tensor"]], "kurtosis_fractional_anisotropy": [[176, "kurtosis-fractional-anisotropy"]], "dki_prediction": [[176, "dki-prediction"]], "params_to_dki_params": [[176, "params-to-dki-params"]], "ls_fit_dki": [[176, "ls-fit-dki"]], "cls_fit_dki": [[176, "cls-fit-dki"]], "Wrotate": [[176, "wrotate"]], "Wrotate_element": [[176, "wrotate-element"]], "Wcons": [[176, "wcons"]], "split_dki_param": [[176, "split-dki-param"]], "KurtosisMicrostructureModel": [[176, "kurtosismicrostructuremodel"]], "KurtosisMicrostructuralFit": [[176, "kurtosismicrostructuralfit"]], "axonal_water_fraction": [[176, "axonal-water-fraction"]], "diffusion_components": [[176, "diffusion-components"]], "dkimicro_prediction": [[176, "dkimicro-prediction"]], "tortuosity": [[176, "tortuosity"]], "DiffusionSpectrumModel": [[176, "diffusionspectrummodel"]], "DiffusionSpectrumFit": [[176, "diffusionspectrumfit"]], "DiffusionSpectrumDeconvModel": [[176, "diffusionspectrumdeconvmodel"]], "DiffusionSpectrumDeconvFit": [[176, "diffusionspectrumdeconvfit"]], "create_qspace": [[176, "create-qspace"]], "create_qtable": [[176, "create-qtable"]], "hanning_filter": [[176, "hanning-filter"]], "pdf_interp_coords": [[176, "pdf-interp-coords"]], "pdf_odf": [[176, "pdf-odf"]], "half_to_full_qspace": [[176, "half-to-full-qspace"]], "project_hemisph_bvecs": [[176, "project-hemisph-bvecs"]], "threshold_propagator": [[176, "threshold-propagator"]], "gen_PSF": [[176, "gen-psf"]], "LR_deconv": [[176, "lr-deconv"]], "TensorModel": [[176, "tensormodel"]], "TensorFit": [[176, "tensorfit"]], "fractional_anisotropy": [[176, "fractional-anisotropy"]], "geodesic_anisotropy": [[176, "geodesic-anisotropy"]], "mean_diffusivity": [[176, "mean-diffusivity"]], "axial_diffusivity": [[176, "axial-diffusivity"]], "radial_diffusivity": [[176, "radial-diffusivity"]], "trace": [[176, "trace"]], "color_fa": [[176, "color-fa"]], "determinant": [[176, "determinant"]], "isotropic": [[176, "isotropic"]], "deviatoric": [[176, "deviatoric"]], "norm": [[176, "norm"]], "mode": [[176, "mode"]], "linearity": [[176, "linearity"]], "planarity": [[176, "planarity"]], "sphericity": [[176, "sphericity"]], "apparent_diffusion_coef": [[176, "apparent-diffusion-coef"]], "tensor_prediction": [[176, "tensor-prediction"]], "iter_fit_tensor": [[176, "iter-fit-tensor"]], "wls_fit_tensor": [[176, "wls-fit-tensor"], [176, "id602"]], "ols_fit_tensor": [[176, "ols-fit-tensor"]], "nlls_fit_tensor": [[176, "nlls-fit-tensor"]], "restore_fit_tensor": [[176, "restore-fit-tensor"]], "_lt_indices": [[176, "lt-indices"]], "from_lower_triangular": [[176, "from-lower-triangular"]], "_lt_rows": [[176, "lt-rows"]], "_lt_cols": [[176, "lt-cols"]], "lower_triangular": [[176, "lower-triangular"]], "decompose_tensor": [[176, "decompose-tensor"]], "design_matrix": [[176, "design-matrix"], [176, "id964"], [176, "id1106"]], "quantize_evecs": [[176, "quantize-evecs"]], "eig_from_lo_tri": [[176, "eig-from-lo-tri"]], "EuDXDirectionGetter": [[176, "eudxdirectiongetter"]], "ForecastModel": [[176, "forecastmodel"]], "ForecastFit": [[176, "forecastfit"]], "find_signal_means": [[176, "find-signal-means"]], "forecast_error_func": [[176, "forecast-error-func"]], "psi_l": [[176, "psi-l"]], "forecast_matrix": [[176, "forecast-matrix"]], "rho_matrix": [[176, "rho-matrix"]], "lb_forecast": [[176, "lb-forecast"]], "FreeWaterTensorModel": [[176, "freewatertensormodel"]], "FreeWaterTensorFit": [[176, "freewatertensorfit"]], "fwdti_prediction": [[176, "fwdti-prediction"]], "wls_iter": [[176, "wls-iter"]], "nls_iter": [[176, "nls-iter"]], "nls_fit_tensor": [[176, "nls-fit-tensor"]], "lower_triangular_to_cholesky": [[176, "lower-triangular-to-cholesky"]], "cholesky_to_lower_triangular": [[176, "cholesky-to-lower-triangular"]], "GeneralizedQSamplingModel": [[176, "generalizedqsamplingmodel"]], "GeneralizedQSamplingFit": [[176, "generalizedqsamplingfit"]], "normalize_qa": [[176, "normalize-qa"]], "squared_radial_component": [[176, "squared-radial-component"]], "npa": [[176, "npa"]], "equatorial_zone_vertices": [[176, "equatorial-zone-vertices"]], "polar_zone_vertices": [[176, "polar-zone-vertices"]], "upper_hemi_map": [[176, "upper-hemi-map"]], "equatorial_maximum": [[176, "equatorial-maximum"]], "patch_vertices": [[176, "patch-vertices"]], "patch_maximum": [[176, "patch-maximum"]], "odf_sum": [[176, "odf-sum"]], "patch_sum": [[176, "patch-sum"]], "triple_odf_maxima": [[176, "triple-odf-maxima"]], "IvimModelTRR": [[176, "ivimmodeltrr"]], "IvimModelVP": [[176, "ivimmodelvp"]], "IvimFit": [[176, "ivimfit"]], "ivim_prediction": [[176, "ivim-prediction"]], "f_D_star_prediction": [[176, "f-d-star-prediction"]], "f_D_star_error": [[176, "f-d-star-error"]], "ivim_model_selector": [[176, "ivim-model-selector"]], "MapmriModel": [[176, "mapmrimodel"]], "MapmriFit": [[176, "mapmrifit"]], "isotropic_scale_factor": [[176, "isotropic-scale-factor"]], "mapmri_index_matrix": [[176, "mapmri-index-matrix"]], "b_mat": [[176, "b-mat"]], "b_mat_isotropic": [[176, "b-mat-isotropic"]], "mapmri_phi_1d": [[176, "mapmri-phi-1d"]], "mapmri_phi_matrix": [[176, "mapmri-phi-matrix"]], "mapmri_psi_1d": [[176, "mapmri-psi-1d"]], "mapmri_psi_matrix": [[176, "mapmri-psi-matrix"]], "mapmri_odf_matrix": [[176, "mapmri-odf-matrix"]], "mapmri_isotropic_phi_matrix": [[176, "mapmri-isotropic-phi-matrix"]], "mapmri_isotropic_radial_signal_basis": [[176, "mapmri-isotropic-radial-signal-basis"]], "mapmri_isotropic_M_mu_independent": [[176, "mapmri-isotropic-m-mu-independent"]], "mapmri_isotropic_M_mu_dependent": [[176, "mapmri-isotropic-m-mu-dependent"]], "mapmri_isotropic_psi_matrix": [[176, "mapmri-isotropic-psi-matrix"]], "mapmri_isotropic_radial_pdf_basis": [[176, "mapmri-isotropic-radial-pdf-basis"]], "mapmri_isotropic_K_mu_independent": [[176, "mapmri-isotropic-k-mu-independent"]], "mapmri_isotropic_K_mu_dependent": [[176, "mapmri-isotropic-k-mu-dependent"]], "binomialfloat": [[176, "binomialfloat"]], "mapmri_isotropic_odf_matrix": [[176, "mapmri-isotropic-odf-matrix"]], "mapmri_isotropic_odf_sh_matrix": [[176, "mapmri-isotropic-odf-sh-matrix"]], "mapmri_isotropic_laplacian_reg_matrix": [[176, "mapmri-isotropic-laplacian-reg-matrix"]], "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix": [[176, "mapmri-isotropic-laplacian-reg-matrix-from-index-matrix"]], "mapmri_isotropic_index_matrix": [[176, "mapmri-isotropic-index-matrix"]], "create_rspace": [[176, "create-rspace"], [176, "id1293"]], "delta": [[176, "delta"]], "map_laplace_u": [[176, "map-laplace-u"]], "map_laplace_t": [[176, "map-laplace-t"]], "map_laplace_s": [[176, "map-laplace-s"]], "mapmri_STU_reg_matrices": [[176, "mapmri-stu-reg-matrices"]], "mapmri_laplacian_reg_matrix": [[176, "mapmri-laplacian-reg-matrix"]], "generalized_crossvalidation_array": [[176, "generalized-crossvalidation-array"]], "generalized_crossvalidation": [[176, "generalized-crossvalidation"], [176, "id1048"]], "gcv_cost_function": [[176, "gcv-cost-function"]], "MultiShellResponse": [[176, "multishellresponse"]], "MultiShellDeconvModel": [[176, "multishelldeconvmodel"]], "MSDeconvFit": [[176, "msdeconvfit"]], "QpFitter": [[176, "qpfitter"]], "multi_tissue_basis": [[176, "multi-tissue-basis"]], "solve_qp": [[176, "solve-qp"]], "multi_shell_fiber_response": [[176, "multi-shell-fiber-response"]], "mask_for_response_msmt": [[176, "mask-for-response-msmt"]], "response_from_mask_msmt": [[176, "response-from-mask-msmt"]], "auto_response_msmt": [[176, "auto-response-msmt"]], "MeanDiffusionKurtosisModel": [[176, "meandiffusionkurtosismodel"]], "MeanDiffusionKurtosisFit": [[176, "meandiffusionkurtosisfit"]], "mean_signal_bvalue": [[176, "mean-signal-bvalue"]], "msk_from_awf": [[176, "msk-from-awf"]], "awf_from_msk": [[176, "awf-from-msk"]], "msdki_prediction": [[176, "msdki-prediction"]], "wls_fit_msdki": [[176, "wls-fit-msdki"]], "MultiVoxelFit": [[176, "multivoxelfit"]], "CallableArray": [[176, "callablearray"]], "multi_voxel_fit": [[176, "multi-voxel-fit"]], "OdfModel": [[176, "odfmodel"]], "OdfFit": [[176, "odffit"]], "gfa": [[176, "gfa"]], "minmax_normalize": [[176, "minmax-normalize"]], "QtdmriModel": [[176, "qtdmrimodel"]], "QtdmriFit": [[176, "qtdmrifit"]], "qtdmri_to_mapmri_matrix": [[176, "qtdmri-to-mapmri-matrix"]], "qtdmri_isotropic_to_mapmri_matrix": [[176, "qtdmri-isotropic-to-mapmri-matrix"]], "qtdmri_temporal_normalization": [[176, "qtdmri-temporal-normalization"]], "qtdmri_mapmri_normalization": [[176, "qtdmri-mapmri-normalization"]], "qtdmri_mapmri_isotropic_normalization": [[176, "qtdmri-mapmri-isotropic-normalization"]], "qtdmri_signal_matrix_": [[176, "qtdmri-signal-matrix"]], "qtdmri_signal_matrix": [[176, "id1026"]], "qtdmri_eap_matrix": [[176, "qtdmri-eap-matrix"]], "qtdmri_isotropic_signal_matrix_": [[176, "qtdmri-isotropic-signal-matrix"]], "qtdmri_isotropic_signal_matrix": [[176, "id1027"]], "qtdmri_eap_matrix_": [[176, "id1028"]], "qtdmri_isotropic_eap_matrix_": [[176, "qtdmri-isotropic-eap-matrix"]], "qtdmri_isotropic_eap_matrix": [[176, "id1029"]], "radial_basis_opt": [[176, "radial-basis-opt"]], "angular_basis_opt": [[176, "angular-basis-opt"]], "radial_basis_EAP_opt": [[176, "radial-basis-eap-opt"]], "angular_basis_EAP_opt": [[176, "angular-basis-eap-opt"]], "temporal_basis": [[176, "temporal-basis"]], "qtdmri_index_matrix": [[176, "qtdmri-index-matrix"]], "qtdmri_isotropic_index_matrix": [[176, "qtdmri-isotropic-index-matrix"]], "qtdmri_laplacian_reg_matrix": [[176, "qtdmri-laplacian-reg-matrix"]], "qtdmri_isotropic_laplacian_reg_matrix": [[176, "qtdmri-isotropic-laplacian-reg-matrix"]], "part23_reg_matrix_q": [[176, "part23-reg-matrix-q"]], "part23_iso_reg_matrix_q": [[176, "part23-iso-reg-matrix-q"]], "part4_reg_matrix_q": [[176, "part4-reg-matrix-q"]], "part4_iso_reg_matrix_q": [[176, "part4-iso-reg-matrix-q"]], "part1_reg_matrix_tau": [[176, "part1-reg-matrix-tau"]], "part23_reg_matrix_tau": [[176, "part23-reg-matrix-tau"]], "part4_reg_matrix_tau": [[176, "part4-reg-matrix-tau"]], "H": [[176, "h"]], "GCV_cost_function": [[176, "id1051"]], "qtdmri_isotropic_scaling": [[176, "qtdmri-isotropic-scaling"]], "qtdmri_anisotropic_scaling": [[176, "qtdmri-anisotropic-scaling"]], "design_matrix_spatial": [[176, "design-matrix-spatial"]], "create_rt_space_grid": [[176, "create-rt-space-grid"]], "qtdmri_number_of_coefficients": [[176, "qtdmri-number-of-coefficients"]], "l1_crossvalidation": [[176, "l1-crossvalidation"]], "elastic_crossvalidation": [[176, "elastic-crossvalidation"]], "visualise_gradient_table_G_Delta_rainbow": [[176, "visualise-gradient-table-g-delta-rainbow"]], "QtiModel": [[176, "qtimodel"]], "QtiFit": [[176, "qtifit"]], "from_3x3_to_6x1": [[176, "from-3x3-to-6x1"]], "from_6x1_to_3x3": [[176, "from-6x1-to-3x3"]], "from_6x6_to_21x1": [[176, "from-6x6-to-21x1"]], "from_21x1_to_6x6": [[176, "from-21x1-to-6x6"]], "cvxpy_1x6_to_3x3": [[176, "cvxpy-1x6-to-3x3"]], "cvxpy_1x21_to_6x6": [[176, "cvxpy-1x21-to-6x6"]], "dtd_covariance": [[176, "dtd-covariance"]], "qti_signal": [[176, "qti-signal"]], "quick_squash": [[176, "quick-squash"]], "reduce": [[176, "reduce"]], "adj_to_countarrs": [[176, "adj-to-countarrs"]], "argmax_from_adj": [[176, "argmax-from-adj"]], "argmax_from_countarrs": [[176, "argmax-from-countarrs"]], "le_to_odf": [[176, "le-to-odf"]], "local_maxima": [[176, "local-maxima"]], "proc_reco_args": [[176, "proc-reco-args"]], "remove_similar_vertices": [[176, "remove-similar-vertices"]], "search_descending": [[176, "search-descending"]], "sum_on_blocks_1d": [[176, "sum-on-blocks-1d"]], "RumbaSDModel": [[176, "rumbasdmodel"]], "RumbaFit": [[176, "rumbafit"]], "rumba_deconv": [[176, "rumba-deconv"]], "mbessel_ratio": [[176, "mbessel-ratio"]], "generate_kernel": [[176, "generate-kernel"]], "rumba_deconv_global": [[176, "rumba-deconv-global"]], "IsotropicModel": [[176, "isotropicmodel"]], "IsotropicFit": [[176, "isotropicfit"]], "ExponentialIsotropicModel": [[176, "exponentialisotropicmodel"]], "ExponentialIsotropicFit": [[176, "exponentialisotropicfit"]], "SparseFascicleModel": [[176, "sparsefasciclemodel"]], "SparseFascicleFit": [[176, "sparsefasciclefit"]], "sfm_design_matrix": [[176, "sfm-design-matrix"]], "SphHarmModel": [[176, "sphharmmodel"]], "QballBaseModel": [[176, "qballbasemodel"]], "SphHarmFit": [[176, "sphharmfit"]], "CsaOdfModel": [[176, "csaodfmodel"]], "OpdtModel": [[176, "opdtmodel"]], "QballModel": [[176, "qballmodel"]], "ResidualBootstrapWrapper": [[176, "residualbootstrapwrapper"]], "forward_sdeconv_mat": [[176, "forward-sdeconv-mat"]], "sh_to_rh": [[176, "sh-to-rh"]], "gen_dirac": [[176, "gen-dirac"]], "spherical_harmonics": [[176, "spherical-harmonics"]], "real_sph_harm": [[176, "real-sph-harm"]], "real_sh_tournier_from_index": [[176, "real-sh-tournier-from-index"]], "real_sh_descoteaux_from_index": [[176, "real-sh-descoteaux-from-index"]], "real_sh_tournier": [[176, "real-sh-tournier"]], "real_sh_descoteaux": [[176, "real-sh-descoteaux"]], "real_sym_sh_mrtrix": [[176, "real-sym-sh-mrtrix"]], "real_sym_sh_basis": [[176, "real-sym-sh-basis"]], "sph_harm_ind_list": [[176, "sph-harm-ind-list"]], "order_from_ncoef": [[176, "order-from-ncoef"]], "smooth_pinv": [[176, "smooth-pinv"]], "lazy_index": [[176, "lazy-index"]], "normalize_data": [[176, "normalize-data"]], "hat": [[176, "hat"]], "lcr_matrix": [[176, "lcr-matrix"]], "bootstrap_data_array": [[176, "bootstrap-data-array"]], "bootstrap_data_voxel": [[176, "bootstrap-data-voxel"]], "sh_to_sf_matrix": [[176, "sh-to-sf-matrix"]], "calculate_max_order": [[176, "calculate-max-order"]], "anisotropic_power": [[176, "anisotropic-power"]], "convert_sh_to_full_basis": [[176, "convert-sh-to-full-basis"]], "convert_sh_from_legacy": [[176, "convert-sh-from-legacy"]], "convert_sh_to_legacy": [[176, "convert-sh-to-legacy"]], "ShoreModel": [[176, "shoremodel"]], "ShoreFit": [[176, "shorefit"]], "shore_matrix": [[176, "shore-matrix"]], "shore_matrix_pdf": [[176, "shore-matrix-pdf"]], "shore_matrix_odf": [[176, "shore-matrix-odf"]], "l_shore": [[176, "l-shore"]], "n_shore": [[176, "n-shore"]], "shore_indices": [[176, "shore-indices"]], "shore_order": [[176, "shore-order"]], "dki_design_matrix": [[176, "dki-design-matrix"]], "cti_design_matrix": [[176, "cti-design-matrix"]], "vec_val_vect": [[176, "vec-val-vect"]], "segment": [[177, "module-dipy.segment"]], "Module: segment.benchmarks": [[177, "module-dipy.segment.benchmarks"]], "Module: segment.benchmarks.bench_quickbundles": [[177, "module-dipy.segment.benchmarks.bench_quickbundles"]], "Module: segment.bundles": [[177, "module-dipy.segment.bundles"]], "Module: segment.clustering": [[177, "module-dipy.segment.clustering"]], "Module: segment.clustering_algorithms": [[177, "module-dipy.segment.clustering_algorithms"]], "Module: segment.clusteringspeed": [[177, "module-dipy.segment.clusteringspeed"]], "Module: segment.cythonutils": [[177, "module-dipy.segment.cythonutils"]], "Module: segment.featurespeed": [[177, "module-dipy.segment.featurespeed"]], "Module: segment.fss": [[177, "module-dipy.segment.fss"]], "Module: segment.mask": [[177, "module-dipy.segment.mask"]], "Module: segment.metric": [[177, "module-dipy.segment.metric"]], "Module: segment.metricspeed": [[177, "module-dipy.segment.metricspeed"]], "Module: segment.mrf": [[177, "module-dipy.segment.mrf"]], "Module: segment.threshold": [[177, "module-dipy.segment.threshold"]], "Module: segment.tissue": [[177, "module-dipy.segment.tissue"]], "MDFpy": [[177, "mdfpy"]], "bench_quickbundles": [[177, "bench-quickbundles"]], "check_range": [[177, "check-range"]], "bundle_adjacency": [[177, "bundle-adjacency"]], "ba_analysis": [[177, "ba-analysis"]], "cluster_bundle": [[177, "cluster-bundle"]], "bundle_shape_similarity": [[177, "bundle-shape-similarity"]], "Identity": [[177, "identity"]], "Cluster": [[177, "cluster"]], "ClusterCentroid": [[177, "clustercentroid"], [177, "id83"], [177, "id103"]], "ClusterMap": [[177, "clustermap"]], "ClusterMapCentroid": [[177, "clustermapcentroid"], [177, "id88"], [177, "id108"]], "Clustering": [[177, "clustering"]], "QuickBundles": [[177, "quickbundles"], [177, "id112"]], "QuickBundlesX": [[177, "quickbundlesx"], [177, "id113"]], "TreeCluster": [[177, "treecluster"], [177, "id114"]], "TreeClusterMap": [[177, "treeclustermap"], [177, "id115"]], "qbx_and_merge": [[177, "qbx-and-merge"]], "DTYPE": [[177, "dtype"], [177, "id111"]], "clusters_centroid2clustermap_centroid": [[177, "clusters-centroid2clustermap-centroid"]], "peek": [[177, "peek"]], "quickbundles": [[177, "id92"]], "quickbundlesx": [[177, "id97"]], "Clusters": [[177, "clusters"]], "ClustersCentroid": [[177, "clusterscentroid"]], "evaluate_aabb_checks": [[177, "evaluate-aabb-checks"]], "ArcLengthFeature": [[177, "arclengthfeature"]], "CenterOfMassFeature": [[177, "centerofmassfeature"]], "CythonFeature": [[177, "cythonfeature"]], "Feature": [[177, "feature"]], "IdentityFeature": [[177, "identityfeature"]], "MidpointFeature": [[177, "midpointfeature"]], "ResampleFeature": [[177, "resamplefeature"]], "VectorOfEndpointsFeature": [[177, "vectorofendpointsfeature"]], "extract": [[177, "extract"]], "infer_shape": [[177, "infer-shape"]], "FastStreamlineSearch": [[177, "faststreamlinesearch"]], "nearest_from_matrix_row": [[177, "nearest-from-matrix-row"]], "nearest_from_matrix_col": [[177, "nearest-from-matrix-col"]], "multi_median": [[177, "multi-median"]], "applymask": [[177, "applymask"]], "bounding_box": [[177, "bounding-box"]], "crop": [[177, "crop"]], "median_otsu": [[177, "median-otsu"]], "segment_from_cfa": [[177, "segment-from-cfa"]], "clean_cc_mask": [[177, "clean-cc-mask"]], "mdf": [[177, "mdf"]], "mean_manhattan_distance": [[177, "mean-manhattan-distance"]], "mean_euclidean_distance": [[177, "mean-euclidean-distance"]], "AveragePointwiseEuclideanMetric": [[177, "averagepointwiseeuclideanmetric"]], "CosineMetric": [[177, "cosinemetric"]], "CythonMetric": [[177, "cythonmetric"]], "Metric": [[177, "metric"]], "MinimumAverageDirectFlipMetric": [[177, "minimumaveragedirectflipmetric"]], "SumPointwiseEuclideanMetric": [[177, "sumpointwiseeuclideanmetric"]], "dist": [[177, "dist"]], "distance_matrix": [[177, "distance-matrix"]], "ConstantObservationModel": [[177, "constantobservationmodel"]], "IteratedConditionalModes": [[177, "iteratedconditionalmodes"]], "otsu": [[177, "otsu"]], "upper_bound_by_rate": [[177, "upper-bound-by-rate"]], "upper_bound_by_percent": [[177, "upper-bound-by-percent"]], "TissueClassifierHMRF": [[177, "tissueclassifierhmrf"]], "sims": [[178, "module-dipy.sims"]], "Module: sims.phantom": [[178, "module-dipy.sims.phantom"]], "Module: sims.voxel": [[178, "module-dipy.sims.voxel"]], "add_noise": [[178, "add-noise"], [178, "id14"]], "diff2eigenvectors": [[178, "diff2eigenvectors"]], "orbital_phantom": [[178, "orbital-phantom"]], "diffusion_evals": [[178, "diffusion-evals"]], "sticks_and_ball": [[178, "sticks-and-ball"]], "callaghan_perpendicular": [[178, "callaghan-perpendicular"]], "gaussian_parallel": [[178, "gaussian-parallel"]], "cylinders_and_ball_soderman": [[178, "cylinders-and-ball-soderman"]], "single_tensor": [[178, "single-tensor"]], "multi_tensor": [[178, "multi-tensor"]], "multi_tensor_dki": [[178, "multi-tensor-dki"]], "kurtosis_element": [[178, "kurtosis-element"]], "dki_signal": [[178, "dki-signal"]], "single_tensor_odf": [[178, "single-tensor-odf"]], "all_tensor_evecs": [[178, "all-tensor-evecs"]], "multi_tensor_odf": [[178, "multi-tensor-odf"]], "single_tensor_rtop": [[178, "single-tensor-rtop"]], "multi_tensor_rtop": [[178, "multi-tensor-rtop"]], "single_tensor_pdf": [[178, "single-tensor-pdf"]], "multi_tensor_pdf": [[178, "multi-tensor-pdf"]], "single_tensor_msd": [[178, "single-tensor-msd"]], "multi_tensor_msd": [[178, "multi-tensor-msd"]], "stats": [[179, "module-dipy.stats"]], "Module: stats.analysis": [[179, "module-dipy.stats.analysis"]], "peak_values": [[179, "peak-values"]], "anatomical_measures": [[179, "anatomical-measures"]], "assignment_map": [[179, "assignment-map"]], "gaussian_weights": [[179, "gaussian-weights"]], "afq_profile": [[179, "afq-profile"]], "tracking": [[180, "module-dipy.tracking"]], "Module: tracking._utils": [[180, "module-dipy.tracking._utils"]], "Module: tracking.benchmarks": [[180, "module-dipy.tracking.benchmarks"]], "Module: tracking.benchmarks.bench_streamline": [[180, "module-dipy.tracking.benchmarks.bench_streamline"]], "Module: tracking.direction_getter": [[180, "module-dipy.tracking.direction_getter"]], "Module: tracking.distances": [[180, "module-dipy.tracking.distances"]], "Module: tracking.fbcmeasures": [[180, "module-dipy.tracking.fbcmeasures"]], "Module: tracking.learning": [[180, "module-dipy.tracking.learning"]], "Module: tracking.life": [[180, "module-dipy.tracking.life"]], "Module: tracking.local_tracking": [[180, "module-dipy.tracking.local_tracking"]], "Module: tracking.localtrack": [[180, "module-dipy.tracking.localtrack"]], "Module: tracking.mesh": [[180, "module-dipy.tracking.mesh"]], "Module: tracking.metrics": [[180, "module-dipy.tracking.metrics"]], "Module: tracking.propspeed": [[180, "module-dipy.tracking.propspeed"]], "Module: tracking.stopping_criterion": [[180, "module-dipy.tracking.stopping_criterion"]], "Module: tracking.streamline": [[180, "module-dipy.tracking.streamline"]], "Module: tracking.streamlinespeed": [[180, "module-dipy.tracking.streamlinespeed"]], "Module: tracking.utils": [[180, "module-dipy.tracking.utils"]], "Important Notes": [[180, "important-notes"]], "Module: tracking.vox2track": [[180, "module-dipy.tracking.vox2track"]], "setup": [[180, "setup"]], "generate_streamlines": [[180, "generate-streamlines"]], "bench_set_number_of_points": [[180, "bench-set-number-of-points"]], "bench_length": [[180, "bench-length"]], "bench_compress_streamlines": [[180, "bench-compress-streamlines"]], "DirectionGetter": [[180, "directiongetter"]], "add_3vecs": [[180, "add-3vecs"]], "approx_polygon_track": [[180, "approx-polygon-track"]], "approximate_mdl_trajectory": [[180, "approximate-mdl-trajectory"]], "bundles_distances_mam": [[180, "bundles-distances-mam"]], "bundles_distances_mdf": [[180, "bundles-distances-mdf"]], "cut_plane": [[180, "cut-plane"]], "inner_3vecs": [[180, "inner-3vecs"]], "intersect_segment_cylinder": [[180, "intersect-segment-cylinder"]], "larch_3merge": [[180, "larch-3merge"]], "larch_3split": [[180, "larch-3split"]], "lee_angle_distance": [[180, "lee-angle-distance"]], "lee_perpendicular_distance": [[180, "lee-perpendicular-distance"]], "local_skeleton_clustering": [[180, "local-skeleton-clustering"]], "local_skeleton_clustering_3pts": [[180, "local-skeleton-clustering-3pts"]], "mam_distances": [[180, "mam-distances"]], "minimum_closest_distance": [[180, "minimum-closest-distance"]], "most_similar_track_mam": [[180, "most-similar-track-mam"]], "mul_3vec": [[180, "mul-3vec"]], "mul_3vecs": [[180, "mul-3vecs"]], "norm_3vec": [[180, "norm-3vec"]], "normalized_3vec": [[180, "normalized-3vec"]], "point_segment_sq_distance": [[180, "point-segment-sq-distance"]], "point_track_sq_distance_check": [[180, "point-track-sq-distance-check"]], "sub_3vecs": [[180, "sub-3vecs"]], "track_dist_3pts": [[180, "track-dist-3pts"]], "track_roi_intersection_check": [[180, "track-roi-intersection-check"]], "FBCMeasures": [[180, "fbcmeasures"]], "KDTree": [[180, "kdtree"]], "interp1d": [[180, "interp1d"]], "compute_rfbc": [[180, "compute-rfbc"]], "min_moving_average": [[180, "min-moving-average"]], "detect_corresponding_tracks": [[180, "detect-corresponding-tracks"]], "detect_corresponding_tracks_plus": [[180, "detect-corresponding-tracks-plus"]], "LifeSignalMaker": [[180, "lifesignalmaker"]], "FiberModel": [[180, "fibermodel"]], "FiberFit": [[180, "fiberfit"]], "streamline_gradients": [[180, "streamline-gradients"]], "grad_tensor": [[180, "grad-tensor"]], "streamline_tensors": [[180, "streamline-tensors"]], "streamline_signal": [[180, "streamline-signal"]], "voxel2streamline": [[180, "voxel2streamline"]], "LocalTracking": [[180, "localtracking"]], "ParticleFilteringTracking": [[180, "particlefilteringtracking"]], "local_tracker": [[180, "local-tracker"]], "pft_tracker": [[180, "pft-tracker"]], "random_coordinates_from_surface": [[180, "random-coordinates-from-surface"]], "seeds_from_surface_coordinates": [[180, "seeds-from-surface-coordinates"]], "triangles_area": [[180, "triangles-area"]], "vertices_to_triangles_values": [[180, "vertices-to-triangles-values"]], "winding": [[180, "winding"]], "length": [[180, "length"], [180, "id265"], [180, "id303"]], "bytes": [[180, "bytes"]], "midpoint": [[180, "midpoint"]], "downsample": [[180, "downsample"]], "magn": [[180, "magn"]], "frenet_serret": [[180, "frenet-serret"]], "mean_curvature": [[180, "mean-curvature"]], "mean_orientation": [[180, "mean-orientation"]], "generate_combinations": [[180, "generate-combinations"]], "longest_track_bundle": [[180, "longest-track-bundle"]], "intersect_sphere": [[180, "intersect-sphere"]], "inside_sphere": [[180, "inside-sphere"]], "inside_sphere_points": [[180, "inside-sphere-points"]], "spline": [[180, "spline"]], "startpoint": [[180, "startpoint"]], "endpoint": [[180, "endpoint"]], "arbitrarypoint": [[180, "arbitrarypoint"]], "principal_components": [[180, "principal-components"]], "midpoint2point": [[180, "midpoint2point"]], "eudx_both_directions": [[180, "eudx-both-directions"]], "ndarray_offset": [[180, "ndarray-offset"]], "ActStoppingCriterion": [[180, "actstoppingcriterion"]], "AnatomicalStoppingCriterion": [[180, "anatomicalstoppingcriterion"]], "BinaryStoppingCriterion": [[180, "binarystoppingcriterion"]], "CmcStoppingCriterion": [[180, "cmcstoppingcriterion"]], "StoppingCriterion": [[180, "stoppingcriterion"]], "StreamlineStatus": [[180, "streamlinestatus"]], "ThresholdStoppingCriterion": [[180, "thresholdstoppingcriterion"]], "unlist_streamlines": [[180, "unlist-streamlines"]], "relist_streamlines": [[180, "relist-streamlines"]], "center_streamlines": [[180, "center-streamlines"]], "deform_streamlines": [[180, "deform-streamlines"]], "transform_streamlines": [[180, "transform-streamlines"]], "select_random_set_of_streamlines": [[180, "select-random-set-of-streamlines"]], "select_by_rois": [[180, "select-by-rois"]], "See also": [[180, "id239"]], "cluster_confidence": [[180, "cluster-confidence"]], "orient_by_rois": [[180, "orient-by-rois"]], "orient_by_streamline": [[180, "orient-by-streamline"]], "values_from_volume": [[180, "values-from-volume"]], "nbytes": [[180, "nbytes"]], "Streamlines": [[180, "streamlines"]], "compress_streamlines": [[180, "compress-streamlines"]], "set_number_of_points": [[180, "set-number-of-points"]], "density_map": [[180, "density-map"]], "connectivity_matrix": [[180, "connectivity-matrix"]], "ndbincount": [[180, "ndbincount"]], "reduce_labels": [[180, "reduce-labels"]], "subsegment": [[180, "subsegment"]], "seeds_from_mask": [[180, "seeds-from-mask"]], "random_seeds_from_mask": [[180, "random-seeds-from-mask"]], "target": [[180, "target"]], "target_line_based": [[180, "target-line-based"]], "streamline_near_roi": [[180, "streamline-near-roi"]], "near_roi": [[180, "near-roi"]], "unique_rows": [[180, "unique-rows"]], "transform_tracking_output": [[180, "transform-tracking-output"]], "reduce_rois": [[180, "reduce-rois"]], "path_length": [[180, "path-length"]], "max_angle_from_curvature": [[180, "max-angle-from-curvature"]], "streamline_mapping": [[180, "streamline-mapping"]], "track_counts": [[180, "track-counts"]], "viz": [[181, "module-dipy.viz"]], "Module: viz.gmem": [[181, "module-dipy.viz.gmem"]], "Module: viz.horizon": [[181, "module-dipy.viz.horizon"]], "Module: viz.horizon.app": [[181, "module-dipy.viz.horizon.app"]], "Module: viz.horizon.tab": [[181, "module-dipy.viz.horizon.tab"]], "Module: viz.horizon.tab.base": [[181, "module-dipy.viz.horizon.tab.base"]], "Module: viz.horizon.tab.cluster": [[181, "module-dipy.viz.horizon.tab.cluster"]], "Module: viz.horizon.tab.peak": [[181, "module-dipy.viz.horizon.tab.peak"]], "Module: viz.horizon.tab.roi": [[181, "module-dipy.viz.horizon.tab.roi"]], "Module: viz.horizon.tab.slice": [[181, "module-dipy.viz.horizon.tab.slice"]], "Module: viz.horizon.visualizer": [[181, "module-dipy.viz.horizon.visualizer"]], "Module: viz.horizon.visualizer.cluster": [[181, "module-dipy.viz.horizon.visualizer.cluster"]], "Module: viz.horizon.visualizer.slice": [[181, "module-dipy.viz.horizon.visualizer.slice"]], "Module: viz.panel": [[181, "module-dipy.viz.panel"]], "Module: viz.plotting": [[181, "module-dipy.viz.plotting"]], "Module: viz.projections": [[181, "module-dipy.viz.projections"]], "Module: viz.regtools": [[181, "module-dipy.viz.regtools"]], "Module: viz.streamline": [[181, "module-dipy.viz.streamline"]], "GlobalHorizon": [[181, "globalhorizon"]], "Horizon": [[181, "horizon"]], "horizon": [[181, "id1"]], "HorizonTab": [[181, "horizontab"]], "TabManager": [[181, "tabmanager"]], "build_label": [[181, "build-label"], [181, "id6"]], "color_single_slider": [[181, "color-single-slider"]], "color_double_slider": [[181, "color-double-slider"]], "ClustersTab": [[181, "clusterstab"]], "PeaksTab": [[181, "peakstab"]], "ROIsTab": [[181, "roistab"]], "SlicesTab": [[181, "slicestab"]], "ClustersVisualizer": [[181, "clustersvisualizer"]], "SlicesVisualizer": [[181, "slicesvisualizer"]], "slicer_panel": [[181, "slicer-panel"]], "compare_maps": [[181, "compare-maps"]], "compare_qti_maps": [[181, "compare-qti-maps"]], "bundle_shape_profile": [[181, "bundle-shape-profile"]], "sph_project": [[181, "sph-project"]], "simple_plot": [[181, "simple-plot"]], "overlay_images": [[181, "overlay-images"]], "draw_lattice_2d": [[181, "draw-lattice-2d"]], "plot_2d_diffeomorphic_map": [[181, "plot-2d-diffeomorphic-map"]], "plot_slices": [[181, "plot-slices"]], "overlay_slices": [[181, "overlay-slices"]], "show_bundles": [[181, "show-bundles"]], "viz_two_bundles": [[181, "viz-two-bundles"]], "viz_vector_field": [[181, "viz-vector-field"]], "viz_displacement_mag": [[181, "viz-displacement-mag"]], "workflows": [[182, "module-dipy.workflows"]], "Module: workflows.align": [[182, "module-dipy.workflows.align"]], "Module: workflows.base": [[182, "module-dipy.workflows.base"]], "Module: workflows.combined_workflow": [[182, "module-dipy.workflows.combined_workflow"]], "Module: workflows.denoise": [[182, "module-dipy.workflows.denoise"]], "Module: workflows.docstring_parser": [[182, "module-dipy.workflows.docstring_parser"]], "Module: workflows.flow_runner": [[182, "module-dipy.workflows.flow_runner"]], "Module: workflows.io": [[182, "module-dipy.workflows.io"]], "Module: workflows.mask": [[182, "module-dipy.workflows.mask"]], "Module: workflows.multi_io": [[182, "module-dipy.workflows.multi_io"]], "Module: workflows.nn": [[182, "module-dipy.workflows.nn"]], "Module: workflows.reconst": [[182, "module-dipy.workflows.reconst"]], "Module: workflows.segment": [[182, "module-dipy.workflows.segment"]], "Module: workflows.stats": [[182, "module-dipy.workflows.stats"]], "Module: workflows.tracking": [[182, "module-dipy.workflows.tracking"]], "Module: workflows.viz": [[182, "module-dipy.workflows.viz"]], "Module: workflows.workflow": [[182, "module-dipy.workflows.workflow"]], "ResliceFlow": [[182, "resliceflow"]], "SlrWithQbxFlow": [[182, "slrwithqbxflow"]], "ImageRegistrationFlow": [[182, "imageregistrationflow"]], "ApplyTransformFlow": [[182, "applytransformflow"]], "SynRegistrationFlow": [[182, "synregistrationflow"]], "MotionCorrectionFlow": [[182, "motioncorrectionflow"]], "BundleWarpFlow": [[182, "bundlewarpflow"]], "check_dimensions": [[182, "check-dimensions"]], "IntrospectiveArgumentParser": [[182, "introspectiveargumentparser"]], "get_args_default": [[182, "get-args-default"]], "none_or_dtype": [[182, "none-or-dtype"]], "CombinedWorkflow": [[182, "combinedworkflow"]], "Patch2SelfFlow": [[182, "patch2selfflow"]], "NLMeansFlow": [[182, "nlmeansflow"]], "LPCAFlow": [[182, "lpcaflow"]], "MPPCAFlow": [[182, "mppcaflow"]], "GibbsRingingFlow": [[182, "gibbsringingflow"]], "Reader": [[182, "reader"]], "NumpyDocString": [[182, "numpydocstring"]], "dedent_lines": [[182, "dedent-lines"]], "get_level": [[182, "get-level"]], "run_flow": [[182, "run-flow"]], "IoInfoFlow": [[182, "ioinfoflow"]], "FetchFlow": [[182, "fetchflow"]], "SplitFlow": [[182, "splitflow"]], "MaskFlow": [[182, "maskflow"]], "IOIterator": [[182, "ioiterator"]], "common_start": [[182, "common-start"]], "slash_to_under": [[182, "slash-to-under"]], "connect_output_paths": [[182, "connect-output-paths"]], "concatenate_inputs": [[182, "concatenate-inputs"]], "basename_without_extension": [[182, "basename-without-extension"]], "io_iterator": [[182, "io-iterator"]], "io_iterator_": [[182, "id49"]], "EVACPlusFlow": [[182, "evacplusflow"]], "ReconstMAPMRIFlow": [[182, "reconstmapmriflow"]], "ReconstDtiFlow": [[182, "reconstdtiflow"]], "ReconstCSDFlow": [[182, "reconstcsdflow"]], "ReconstCSAFlow": [[182, "reconstcsaflow"]], "ReconstDkiFlow": [[182, "reconstdkiflow"]], "ReconstIvimFlow": [[182, "reconstivimflow"]], "ReconstRUMBAFlow": [[182, "reconstrumbaflow"]], "MedianOtsuFlow": [[182, "medianotsuflow"]], "RecoBundlesFlow": [[182, "recobundlesflow"]], "LabelsBundlesFlow": [[182, "labelsbundlesflow"]], "SNRinCCFlow": [[182, "snrinccflow"]], "BundleAnalysisTractometryFlow": [[182, "bundleanalysistractometryflow"]], "LinearMixedModelsFlow": [[182, "linearmixedmodelsflow"]], "BundleShapeAnalysis": [[182, "bundleshapeanalysis"]], "buan_bundle_profiles": [[182, "buan-bundle-profiles"]], "LocalFiberTrackingPAMFlow": [[182, "localfibertrackingpamflow"]], "PFTrackingPAMFlow": [[182, "pftrackingpamflow"]], "HorizonFlow": [[182, "horizonflow"]], "Workflow": [[182, "workflow"]], "API Reference": [[183, "api-reference"]], "dipy_align_affine": [[184, "dipy-align-affine"]], "Usage": [[184, "usage"], [185, "usage"], [186, "usage"], [187, "usage"], [188, "usage"], [189, "usage"], [190, "usage"], [191, "usage"], [192, "usage"], [193, "usage"], [194, "usage"], [195, "usage"], [196, "usage"], [197, "usage"], [198, "usage"], [199, "usage"], [200, "usage"], [201, "usage"], [202, "usage"], [203, "usage"], [204, "usage"], [205, "usage"], [206, "usage"], [207, "usage"], [208, "usage"], [209, "usage"], [210, "usage"], [211, "usage"], [212, "usage"], [213, "usage"], [214, "usage"], [215, "usage"]], "Positional Arguments": [[184, "positional-arguments"], [185, "positional-arguments"], [186, "positional-arguments"], [187, "positional-arguments"], [188, "positional-arguments"], [189, "positional-arguments"], [190, "positional-arguments"], [191, "positional-arguments"], [192, "positional-arguments"], [193, "positional-arguments"], [194, "positional-arguments"], [195, "positional-arguments"], [196, "positional-arguments"], [197, "positional-arguments"], [198, "positional-arguments"], [199, "positional-arguments"], [200, "positional-arguments"], [201, "positional-arguments"], [202, "positional-arguments"], [203, "positional-arguments"], [204, "positional-arguments"], [205, "positional-arguments"], [206, "positional-arguments"], [207, "positional-arguments"], [208, "positional-arguments"], [209, "positional-arguments"], [210, "positional-arguments"], [211, "positional-arguments"], [212, "positional-arguments"], [213, "positional-arguments"], [214, "positional-arguments"], [215, "positional-arguments"]], "Optional Arguments": [[184, "optional-arguments"], [185, "optional-arguments"], [186, "optional-arguments"], [187, "optional-arguments"], [188, "optional-arguments"], [189, "optional-arguments"], [190, "optional-arguments"], [191, "optional-arguments"], [192, "optional-arguments"], [193, "optional-arguments"], [194, "optional-arguments"], [195, "optional-arguments"], [196, "optional-arguments"], [197, "optional-arguments"], [198, "optional-arguments"], [199, "optional-arguments"], [200, "optional-arguments"], [201, "optional-arguments"], [202, "optional-arguments"], [203, "optional-arguments"], [204, "optional-arguments"], [205, "optional-arguments"], [206, "optional-arguments"], [207, "optional-arguments"], [208, "optional-arguments"], [209, "optional-arguments"], [210, "optional-arguments"], [211, "optional-arguments"], [212, "optional-arguments"], [213, "optional-arguments"], [214, "optional-arguments"], [215, "optional-arguments"]], "Output Arguments(Optional)": [[184, "output-arguments-optional"], [185, "output-arguments-optional"], [186, "output-arguments-optional"], [187, "output-arguments-optional"], [188, "output-arguments-optional"], [189, "output-arguments-optional"], [190, "output-arguments-optional"], [191, "output-arguments-optional"], [192, "output-arguments-optional"], [193, "output-arguments-optional"], [194, "output-arguments-optional"], [195, "output-arguments-optional"], [196, "output-arguments-optional"], [197, "output-arguments-optional"], [198, "output-arguments-optional"], [199, "output-arguments-optional"], [200, "output-arguments-optional"], [201, "output-arguments-optional"], [202, "output-arguments-optional"], [203, "output-arguments-optional"], [204, "output-arguments-optional"], [206, "output-arguments-optional"], [207, "output-arguments-optional"], [208, "output-arguments-optional"], [209, "output-arguments-optional"], [210, "output-arguments-optional"], [211, "output-arguments-optional"], [212, "output-arguments-optional"], [213, "output-arguments-optional"], [214, "output-arguments-optional"], [215, "output-arguments-optional"]], "dipy_align_syn": [[185, "dipy-align-syn"]], "dipy_apply_transform": [[186, "dipy-apply-transform"]], "dipy_buan_lmm": [[187, "dipy-buan-lmm"]], "dipy_buan_profiles": [[188, "dipy-buan-profiles"]], "dipy_bundlewarp": [[189, "dipy-bundlewarp"]], "dipy_correct_motion": [[190, "dipy-correct-motion"]], "dipy_denoise_lpca": [[191, "dipy-denoise-lpca"]], "dipy_denoise_mppca": [[192, "dipy-denoise-mppca"]], "dipy_denoise_nlmeans": [[193, "dipy-denoise-nlmeans"]], "dipy_denoise_patch2self": [[194, "dipy-denoise-patch2self"]], "dipy_evac_plus": [[195, "dipy-evac-plus"]], "dipy_fetch": [[196, "dipy-fetch"]], "dipy_fit_csa": [[197, "dipy-fit-csa"]], "dipy_fit_csd": [[198, "dipy-fit-csd"]], "dipy_fit_dki": [[199, "dipy-fit-dki"]], "dipy_fit_dti": [[200, "dipy-fit-dti"]], "dipy_fit_ivim": [[201, "dipy-fit-ivim"]], "dipy_fit_mapmri": [[202, "dipy-fit-mapmri"]], "dipy_gibbs_ringing": [[203, "dipy-gibbs-ringing"]], "dipy_horizon": [[204, "dipy-horizon"]], "dipy_info": [[205, "dipy-info"]], "dipy_labelsbundles": [[206, "dipy-labelsbundles"]], "dipy_mask": [[207, "dipy-mask"]], "dipy_median_otsu": [[208, "dipy-median-otsu"]], "dipy_recobundles": [[209, "dipy-recobundles"]], "dipy_reslice": [[210, "dipy-reslice"]], "dipy_slr": [[211, "dipy-slr"]], "dipy_snr_in_cc": [[212, "dipy-snr-in-cc"]], "dipy_split": [[213, "dipy-split"]], "dipy_track": [[214, "dipy-track"]], "dipy_track_pft": [[215, "dipy-track-pft"]], "Command Line Utilities Reference": [[216, "command-line-utilities-reference"]]}, "indexentries": {"affine matrix": [[144, "term-Affine-matrix"]], "affine transformation": [[144, "term-Affine-transformation"]], "axis angle": [[144, "term-Axis-angle"]], "euclidean norm": [[144, "term-Euclidean-norm"]], "euler angles": [[144, "term-Euler-angles"]], "gimbal lock": [[144, "term-Gimbal-lock"]], "homogeneous coordinates": [[144, "term-Homogeneous-coordinates"]], "linear transformation": [[144, "term-Linear-transformation"]], "quaternion": [[144, "term-Quaternion"]], "reflection": [[144, "term-Reflection"]], "rotation matrix": [[144, "term-Rotation-matrix"]], "rotation vector": [[144, "term-Rotation-vector"]], "shear matrix": [[144, "term-Shear-matrix"]], "unit vector": [[144, "term-Unit-vector"]], "dipy": [[166, "module-dipy"]], "get_info() (in module dipy)": [[166, "dipy.get_info"]], "module": [[166, "module-dipy"], [167, "module-dipy.__config__"], [168, "module-dipy.align"], [168, "module-dipy.align._public"], [168, "module-dipy.align.bundlemin"], [168, "module-dipy.align.cpd"], [168, "module-dipy.align.crosscorr"], [168, "module-dipy.align.expectmax"], [168, "module-dipy.align.imaffine"], [168, "module-dipy.align.imwarp"], [168, "module-dipy.align.metrics"], [168, "module-dipy.align.parzenhist"], [168, "module-dipy.align.reslice"], [168, "module-dipy.align.scalespace"], [168, "module-dipy.align.streamlinear"], [168, "module-dipy.align.streamwarp"], [168, "module-dipy.align.sumsqdiff"], [168, "module-dipy.align.transforms"], [168, "module-dipy.align.vector_fields"], [169, "module-dipy.boots"], [170, "module-dipy.core"], [170, "module-dipy.core.benchmarks"], [170, "module-dipy.core.benchmarks.bench_sphere"], [170, "module-dipy.core.geometry"], [170, "module-dipy.core.gradients"], [170, "module-dipy.core.graph"], [170, "module-dipy.core.histeq"], [170, "module-dipy.core.interpolation"], [170, "module-dipy.core.ndindex"], [170, "module-dipy.core.onetime"], [170, "module-dipy.core.optimize"], [170, "module-dipy.core.profile"], [170, "module-dipy.core.rng"], [170, "module-dipy.core.sphere"], [170, "module-dipy.core.sphere_stats"], [170, "module-dipy.core.subdivide_octahedron"], [170, "module-dipy.core.wavelet"], [171, "module-dipy.data"], [171, "module-dipy.data.fetcher"], [172, "module-dipy.denoise"], [172, "module-dipy.denoise.adaptive_soft_matching"], [172, "module-dipy.denoise.denspeed"], [172, "module-dipy.denoise.enhancement_kernel"], [172, "module-dipy.denoise.gibbs"], [172, "module-dipy.denoise.localpca"], [172, "module-dipy.denoise.nlmeans"], [172, "module-dipy.denoise.nlmeans_block"], [172, "module-dipy.denoise.noise_estimate"], [172, "module-dipy.denoise.non_local_means"], [172, "module-dipy.denoise.patch2self"], [172, "module-dipy.denoise.pca_noise_estimate"], [172, "module-dipy.denoise.shift_twist_convolution"], [173, "module-dipy.direction"], [173, "module-dipy.direction.bootstrap_direction_getter"], [173, "module-dipy.direction.closest_peak_direction_getter"], [173, "module-dipy.direction.peaks"], [173, "module-dipy.direction.pmf"], [173, "module-dipy.direction.probabilistic_direction_getter"], [173, "module-dipy.direction.ptt_direction_getter"], [174, "module-dipy.io"], [174, "module-dipy.io.bvectxt"], [174, "module-dipy.io.dpy"], [174, "module-dipy.io.gradients"], [174, "module-dipy.io.image"], [174, "module-dipy.io.peaks"], [174, "module-dipy.io.pickles"], [174, "module-dipy.io.stateful_tractogram"], [174, "module-dipy.io.streamline"], [174, "module-dipy.io.utils"], [174, "module-dipy.io.vtk"], [175, "module-dipy.nn"], [175, "module-dipy.nn.cnn_1d_denoising"], [175, "module-dipy.nn.evac"], [175, "module-dipy.nn.histo_resdnn"], [175, "module-dipy.nn.model"], [175, "module-dipy.nn.synb0"], [175, "module-dipy.nn.utils"], [176, "module-dipy.reconst"], [176, "module-dipy.reconst.base"], [176, "module-dipy.reconst.benchmarks"], [176, "module-dipy.reconst.benchmarks.bench_bounding_box"], [176, "module-dipy.reconst.benchmarks.bench_csd"], [176, "module-dipy.reconst.benchmarks.bench_peaks"], [176, "module-dipy.reconst.benchmarks.bench_squash"], [176, "module-dipy.reconst.benchmarks.bench_vec_val_sum"], [176, "module-dipy.reconst.cache"], [176, "module-dipy.reconst.cross_validation"], [176, "module-dipy.reconst.csdeconv"], [176, "module-dipy.reconst.cti"], [176, "module-dipy.reconst.dki"], [176, "module-dipy.reconst.dki_micro"], [176, "module-dipy.reconst.dsi"], [176, "module-dipy.reconst.dti"], [176, "module-dipy.reconst.eudx_direction_getter"], [176, "module-dipy.reconst.forecast"], [176, "module-dipy.reconst.fwdti"], [176, "module-dipy.reconst.gqi"], [176, "module-dipy.reconst.ivim"], [176, "module-dipy.reconst.mapmri"], [176, "module-dipy.reconst.mcsd"], [176, "module-dipy.reconst.msdki"], [176, "module-dipy.reconst.multi_voxel"], [176, "module-dipy.reconst.odf"], [176, "module-dipy.reconst.qtdmri"], [176, "module-dipy.reconst.qti"], [176, "module-dipy.reconst.quick_squash"], [176, "module-dipy.reconst.recspeed"], [176, "module-dipy.reconst.rumba"], [176, "module-dipy.reconst.sfm"], [176, "module-dipy.reconst.shm"], [176, "module-dipy.reconst.shore"], [176, "module-dipy.reconst.utils"], [176, "module-dipy.reconst.vec_val_sum"], [177, "module-dipy.segment"], [177, "module-dipy.segment.benchmarks"], [177, "module-dipy.segment.benchmarks.bench_quickbundles"], [177, "module-dipy.segment.bundles"], [177, "module-dipy.segment.clustering"], [177, "module-dipy.segment.clustering_algorithms"], [177, "module-dipy.segment.clusteringspeed"], [177, "module-dipy.segment.cythonutils"], [177, "module-dipy.segment.featurespeed"], [177, "module-dipy.segment.fss"], [177, "module-dipy.segment.mask"], [177, "module-dipy.segment.metric"], [177, "module-dipy.segment.metricspeed"], [177, "module-dipy.segment.mrf"], [177, "module-dipy.segment.threshold"], [177, "module-dipy.segment.tissue"], [178, "module-dipy.sims"], [178, "module-dipy.sims.phantom"], [178, "module-dipy.sims.voxel"], [179, "module-dipy.stats"], [179, "module-dipy.stats.analysis"], [180, "module-dipy.tracking"], [180, "module-dipy.tracking._utils"], [180, "module-dipy.tracking.benchmarks"], [180, "module-dipy.tracking.benchmarks.bench_streamline"], [180, "module-dipy.tracking.direction_getter"], [180, "module-dipy.tracking.distances"], [180, "module-dipy.tracking.fbcmeasures"], [180, "module-dipy.tracking.learning"], [180, "module-dipy.tracking.life"], [180, "module-dipy.tracking.local_tracking"], [180, "module-dipy.tracking.localtrack"], [180, "module-dipy.tracking.mesh"], [180, "module-dipy.tracking.metrics"], [180, "module-dipy.tracking.propspeed"], [180, "module-dipy.tracking.stopping_criterion"], [180, "module-dipy.tracking.streamline"], [180, "module-dipy.tracking.streamlinespeed"], [180, "module-dipy.tracking.utils"], [180, "module-dipy.tracking.vox2track"], [181, "module-dipy.viz"], [181, "module-dipy.viz.gmem"], [181, "module-dipy.viz.horizon"], [181, "module-dipy.viz.horizon.app"], [181, "module-dipy.viz.horizon.tab"], [181, "module-dipy.viz.horizon.tab.base"], [181, "module-dipy.viz.horizon.tab.cluster"], [181, "module-dipy.viz.horizon.tab.peak"], [181, "module-dipy.viz.horizon.tab.roi"], [181, "module-dipy.viz.horizon.tab.slice"], [181, "module-dipy.viz.horizon.visualizer"], [181, "module-dipy.viz.horizon.visualizer.cluster"], [181, "module-dipy.viz.horizon.visualizer.slice"], [181, "module-dipy.viz.panel"], [181, "module-dipy.viz.plotting"], [181, "module-dipy.viz.projections"], [181, "module-dipy.viz.regtools"], [181, "module-dipy.viz.streamline"], [182, "module-dipy.workflows"], [182, "module-dipy.workflows.align"], [182, "module-dipy.workflows.base"], [182, "module-dipy.workflows.combined_workflow"], [182, "module-dipy.workflows.denoise"], [182, "module-dipy.workflows.docstring_parser"], [182, "module-dipy.workflows.flow_runner"], [182, "module-dipy.workflows.io"], [182, "module-dipy.workflows.mask"], [182, "module-dipy.workflows.multi_io"], [182, "module-dipy.workflows.nn"], [182, "module-dipy.workflows.reconst"], [182, "module-dipy.workflows.segment"], [182, "module-dipy.workflows.stats"], [182, "module-dipy.workflows.tracking"], [182, "module-dipy.workflows.viz"], [182, "module-dipy.workflows.workflow"]], "dipy.__config__": [[167, "module-dipy.__config__"]], "affineinvalidvalueserror (class in dipy.align.imaffine)": [[168, "dipy.align.imaffine.AffineInvalidValuesError"]], "affineinversionerror (class in dipy.align.imaffine)": [[168, "dipy.align.imaffine.AffineInversionError"]], "affinemap (class in dipy.align.imaffine)": [[168, "dipy.align.imaffine.AffineMap"]], "affineregistration (class in dipy.align.imaffine)": [[168, "dipy.align.imaffine.AffineRegistration"]], "affinetransform2d (class in dipy.align.transforms)": [[168, "dipy.align.transforms.AffineTransform2D"]], "affinetransform3d (class in dipy.align.transforms)": [[168, "dipy.align.transforms.AffineTransform3D"]], "bunch (class in dipy.align)": [[168, "dipy.align.Bunch"]], "bundlemindistanceasymmetricmetric (class in dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric"]], "bundlemindistancematrixmetric (class in dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric"]], "bundlemindistancemetric (class in dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.BundleMinDistanceMetric"]], "bundlesumdistancematrixmetric (class in dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.BundleSumDistanceMatrixMetric"]], "ccmetric (class in dipy.align.metrics)": [[168, "dipy.align.metrics.CCMetric"]], "deformableregistration (class in dipy.align.cpd)": [[168, "dipy.align.cpd.DeformableRegistration"]], "diffeomorphicmap (class in dipy.align.imwarp)": [[168, "dipy.align.imwarp.DiffeomorphicMap"]], "diffeomorphicregistration (class in dipy.align.imwarp)": [[168, "dipy.align.imwarp.DiffeomorphicRegistration"]], "emmetric (class in dipy.align.metrics)": [[168, "dipy.align.metrics.EMMetric"]], "isotropicscalespace (class in dipy.align.scalespace)": [[168, "dipy.align.scalespace.IsotropicScaleSpace"]], "jointbundlemindistancemetric (class in dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.JointBundleMinDistanceMetric"]], "jointstreamlineregistrationmap (class in dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.JointStreamlineRegistrationMap"]], "mutualinformationmetric (class in dipy.align.imaffine)": [[168, "dipy.align.imaffine.MutualInformationMetric"]], "parzenjointhistogram (class in dipy.align.parzenhist)": [[168, "dipy.align.parzenhist.ParzenJointHistogram"]], "registrationstages() (in module dipy.align.imwarp)": [[168, "dipy.align.imwarp.RegistrationStages"]], "rigidisoscalingtransform2d (class in dipy.align.transforms)": [[168, "dipy.align.transforms.RigidIsoScalingTransform2D"]], "rigidisoscalingtransform3d (class in dipy.align.transforms)": [[168, "dipy.align.transforms.RigidIsoScalingTransform3D"]], "rigidscalingtransform2d (class in dipy.align.transforms)": [[168, "dipy.align.transforms.RigidScalingTransform2D"]], "rigidscalingtransform3d (class in dipy.align.transforms)": [[168, "dipy.align.transforms.RigidScalingTransform3D"]], "rigidtransform2d (class in dipy.align.transforms)": [[168, "dipy.align.transforms.RigidTransform2D"]], "rigidtransform3d (class in dipy.align.transforms)": [[168, "dipy.align.transforms.RigidTransform3D"]], "rotationtransform2d (class in dipy.align.transforms)": [[168, "dipy.align.transforms.RotationTransform2D"]], "rotationtransform3d (class in dipy.align.transforms)": [[168, "dipy.align.transforms.RotationTransform3D"]], "ssdmetric (class in dipy.align.metrics)": [[168, "dipy.align.metrics.SSDMetric"]], "scalespace (class in dipy.align.scalespace)": [[168, "dipy.align.scalespace.ScaleSpace"]], "scalingtransform2d (class in dipy.align.transforms)": [[168, "dipy.align.transforms.ScalingTransform2D"]], "scalingtransform3d (class in dipy.align.transforms)": [[168, "dipy.align.transforms.ScalingTransform3D"]], "similaritymetric (class in dipy.align.metrics)": [[168, "dipy.align.metrics.SimilarityMetric"]], "streamlinedistancemetric (class in dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.StreamlineDistanceMetric"]], "streamlinelinearregistration (class in dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.StreamlineLinearRegistration"]], "streamlineregistrationmap (class in dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.StreamlineRegistrationMap"]], "symmetricdiffeomorphicregistration (class in dipy.align.imwarp)": [[168, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration"]], "transform (class in dipy.align.transforms)": [[168, "dipy.align.transforms.Transform"]], "translationtransform2d (class in dipy.align.transforms)": [[168, "dipy.align.transforms.TranslationTransform2D"]], "translationtransform3d (class in dipy.align.transforms)": [[168, "dipy.align.transforms.TranslationTransform3D"]], "verbositylevels() (in module dipy.align)": [[168, "dipy.align.VerbosityLevels"]], "_method_dict() (in module dipy.align._public)": [[168, "dipy.align._public._METHOD_DICT"]], "__init__() (dipy.align.bunch method)": [[168, "dipy.align.Bunch.__init__"]], "__init__() (dipy.align.cpd.deformableregistration method)": [[168, "dipy.align.cpd.DeformableRegistration.__init__"]], "__init__() (dipy.align.imaffine.affineinvalidvalueserror method)": [[168, "dipy.align.imaffine.AffineInvalidValuesError.__init__"]], "__init__() (dipy.align.imaffine.affineinversionerror method)": [[168, "dipy.align.imaffine.AffineInversionError.__init__"]], "__init__() (dipy.align.imaffine.affinemap method)": [[168, "dipy.align.imaffine.AffineMap.__init__"]], "__init__() (dipy.align.imaffine.affineregistration method)": [[168, "dipy.align.imaffine.AffineRegistration.__init__"]], "__init__() (dipy.align.imaffine.mutualinformationmetric method)": [[168, "dipy.align.imaffine.MutualInformationMetric.__init__"]], "__init__() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.__init__"]], "__init__() (dipy.align.imwarp.diffeomorphicregistration method)": [[168, "dipy.align.imwarp.DiffeomorphicRegistration.__init__"]], "__init__() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[168, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.__init__"]], "__init__() (dipy.align.metrics.ccmetric method)": [[168, "dipy.align.metrics.CCMetric.__init__"]], "__init__() (dipy.align.metrics.emmetric method)": [[168, "dipy.align.metrics.EMMetric.__init__"]], "__init__() (dipy.align.metrics.ssdmetric method)": [[168, "dipy.align.metrics.SSDMetric.__init__"]], "__init__() (dipy.align.metrics.similaritymetric method)": [[168, "dipy.align.metrics.SimilarityMetric.__init__"]], "__init__() (dipy.align.parzenhist.parzenjointhistogram method)": [[168, "dipy.align.parzenhist.ParzenJointHistogram.__init__"]], "__init__() (dipy.align.scalespace.isotropicscalespace method)": [[168, "dipy.align.scalespace.IsotropicScaleSpace.__init__"]], "__init__() (dipy.align.scalespace.scalespace method)": [[168, "dipy.align.scalespace.ScaleSpace.__init__"]], "__init__() (dipy.align.streamlinear.bundlemindistanceasymmetricmetric method)": [[168, "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric.__init__"]], "__init__() (dipy.align.streamlinear.bundlemindistancematrixmetric method)": [[168, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric.__init__"]], "__init__() (dipy.align.streamlinear.bundlemindistancemetric method)": [[168, "dipy.align.streamlinear.BundleMinDistanceMetric.__init__"]], "__init__() (dipy.align.streamlinear.bundlesumdistancematrixmetric method)": [[168, "dipy.align.streamlinear.BundleSumDistanceMatrixMetric.__init__"]], "__init__() (dipy.align.streamlinear.jointbundlemindistancemetric method)": [[168, "dipy.align.streamlinear.JointBundleMinDistanceMetric.__init__"]], "__init__() (dipy.align.streamlinear.jointstreamlineregistrationmap method)": [[168, "dipy.align.streamlinear.JointStreamlineRegistrationMap.__init__"]], "__init__() (dipy.align.streamlinear.streamlinedistancemetric method)": [[168, "dipy.align.streamlinear.StreamlineDistanceMetric.__init__"]], "__init__() (dipy.align.streamlinear.streamlinelinearregistration method)": [[168, "dipy.align.streamlinear.StreamlineLinearRegistration.__init__"]], "__init__() (dipy.align.streamlinear.streamlineregistrationmap method)": [[168, "dipy.align.streamlinear.StreamlineRegistrationMap.__init__"]], "__init__() (dipy.align.transforms.affinetransform2d method)": [[168, "dipy.align.transforms.AffineTransform2D.__init__"]], "__init__() (dipy.align.transforms.affinetransform3d method)": [[168, "dipy.align.transforms.AffineTransform3D.__init__"]], "__init__() (dipy.align.transforms.rigidisoscalingtransform2d method)": [[168, "dipy.align.transforms.RigidIsoScalingTransform2D.__init__"]], "__init__() (dipy.align.transforms.rigidisoscalingtransform3d method)": [[168, "dipy.align.transforms.RigidIsoScalingTransform3D.__init__"]], "__init__() (dipy.align.transforms.rigidscalingtransform2d method)": [[168, "dipy.align.transforms.RigidScalingTransform2D.__init__"]], "__init__() (dipy.align.transforms.rigidscalingtransform3d method)": [[168, "dipy.align.transforms.RigidScalingTransform3D.__init__"]], "__init__() (dipy.align.transforms.rigidtransform2d method)": [[168, "dipy.align.transforms.RigidTransform2D.__init__"]], "__init__() (dipy.align.transforms.rigidtransform3d method)": [[168, "dipy.align.transforms.RigidTransform3D.__init__"]], "__init__() (dipy.align.transforms.rotationtransform2d method)": [[168, "dipy.align.transforms.RotationTransform2D.__init__"]], "__init__() (dipy.align.transforms.rotationtransform3d method)": [[168, "dipy.align.transforms.RotationTransform3D.__init__"]], "__init__() (dipy.align.transforms.scalingtransform2d method)": [[168, "dipy.align.transforms.ScalingTransform2D.__init__"]], "__init__() (dipy.align.transforms.scalingtransform3d method)": [[168, "dipy.align.transforms.ScalingTransform3D.__init__"]], "__init__() (dipy.align.transforms.transform method)": [[168, "dipy.align.transforms.Transform.__init__"]], "__init__() (dipy.align.transforms.translationtransform2d method)": [[168, "dipy.align.transforms.TranslationTransform2D.__init__"]], "__init__() (dipy.align.transforms.translationtransform3d method)": [[168, "dipy.align.transforms.TranslationTransform3D.__init__"]], "_transform_method() (in module dipy.align.imaffine)": [[168, "dipy.align.imaffine._transform_method"]], "affine() (in module dipy.align._public)": [[168, "dipy.align._public.affine"]], "affine_registration() (in module dipy.align._public)": [[168, "dipy.align._public.affine_registration"]], "allocate() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.allocate"]], "average_bundle_length() (in module dipy.align.streamwarp)": [[168, "dipy.align.streamwarp.average_bundle_length"]], "bin_index() (dipy.align.parzenhist.parzenjointhistogram method)": [[168, "dipy.align.parzenhist.ParzenJointHistogram.bin_index"]], "bin_normalize_moving() (dipy.align.parzenhist.parzenjointhistogram method)": [[168, "dipy.align.parzenhist.ParzenJointHistogram.bin_normalize_moving"]], "bin_normalize_static() (dipy.align.parzenhist.parzenjointhistogram method)": [[168, "dipy.align.parzenhist.ParzenJointHistogram.bin_normalize_static"]], "bundle_min_distance() (in module dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.bundle_min_distance"]], "bundle_min_distance_asymmetric_fast() (in module dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.bundle_min_distance_asymmetric_fast"]], "bundle_min_distance_fast() (in module dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.bundle_min_distance_fast"]], "bundle_sum_distance() (in module dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.bundle_sum_distance"]], "bundlewarp() (in module dipy.align.streamwarp)": [[168, "dipy.align.streamwarp.bundlewarp"]], "bundlewarp_shape_analysis() (in module dipy.align.streamwarp)": [[168, "dipy.align.streamwarp.bundlewarp_shape_analysis"]], "bundlewarp_vector_filed() (in module dipy.align.streamwarp)": [[168, "dipy.align.streamwarp.bundlewarp_vector_filed"]], "center_of_mass() (in module dipy.align._public)": [[168, "dipy.align._public.center_of_mass"]], "compose_matrix44() (in module dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.compose_matrix44"]], "compose_vector_fields_2d() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.compose_vector_fields_2d"]], "compose_vector_fields_3d() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.compose_vector_fields_3d"]], "compute_backward() (dipy.align.metrics.ccmetric method)": [[168, "dipy.align.metrics.CCMetric.compute_backward"]], "compute_backward() (dipy.align.metrics.emmetric method)": [[168, "dipy.align.metrics.EMMetric.compute_backward"]], "compute_backward() (dipy.align.metrics.ssdmetric method)": [[168, "dipy.align.metrics.SSDMetric.compute_backward"]], "compute_backward() (dipy.align.metrics.similaritymetric method)": [[168, "dipy.align.metrics.SimilarityMetric.compute_backward"]], "compute_cc_backward_step_2d() (in module dipy.align.crosscorr)": [[168, "dipy.align.crosscorr.compute_cc_backward_step_2d"]], "compute_cc_backward_step_3d() (in module dipy.align.crosscorr)": [[168, "dipy.align.crosscorr.compute_cc_backward_step_3d"]], "compute_cc_forward_step_2d() (in module dipy.align.crosscorr)": [[168, "dipy.align.crosscorr.compute_cc_forward_step_2d"]], "compute_cc_forward_step_3d() (in module dipy.align.crosscorr)": [[168, "dipy.align.crosscorr.compute_cc_forward_step_3d"]], "compute_demons_step() (dipy.align.metrics.emmetric method)": [[168, "dipy.align.metrics.EMMetric.compute_demons_step"]], "compute_demons_step() (dipy.align.metrics.ssdmetric method)": [[168, "dipy.align.metrics.SSDMetric.compute_demons_step"]], "compute_em_demons_step_2d() (in module dipy.align.expectmax)": [[168, "dipy.align.expectmax.compute_em_demons_step_2d"]], "compute_em_demons_step_3d() (in module dipy.align.expectmax)": [[168, "dipy.align.expectmax.compute_em_demons_step_3d"]], "compute_energy_ssd_2d() (in module dipy.align.sumsqdiff)": [[168, "dipy.align.sumsqdiff.compute_energy_ssd_2d"]], "compute_energy_ssd_3d() (in module dipy.align.sumsqdiff)": [[168, "dipy.align.sumsqdiff.compute_energy_ssd_3d"]], "compute_forward() (dipy.align.metrics.ccmetric method)": [[168, "dipy.align.metrics.CCMetric.compute_forward"]], "compute_forward() (dipy.align.metrics.emmetric method)": [[168, "dipy.align.metrics.EMMetric.compute_forward"]], "compute_forward() (dipy.align.metrics.ssdmetric method)": [[168, "dipy.align.metrics.SSDMetric.compute_forward"]], "compute_forward() (dipy.align.metrics.similaritymetric method)": [[168, "dipy.align.metrics.SimilarityMetric.compute_forward"]], "compute_gauss_newton_step() (dipy.align.metrics.emmetric method)": [[168, "dipy.align.metrics.EMMetric.compute_gauss_newton_step"]], "compute_gauss_newton_step() (dipy.align.metrics.ssdmetric method)": [[168, "dipy.align.metrics.SSDMetric.compute_gauss_newton_step"]], "compute_inversion_error() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.compute_inversion_error"]], "compute_masked_class_stats_2d() (in module dipy.align.expectmax)": [[168, "dipy.align.expectmax.compute_masked_class_stats_2d"]], "compute_masked_class_stats_3d() (in module dipy.align.expectmax)": [[168, "dipy.align.expectmax.compute_masked_class_stats_3d"]], "compute_parzen_mi() (in module dipy.align.parzenhist)": [[168, "dipy.align.parzenhist.compute_parzen_mi"]], "compute_residual_displacement_field_ssd_2d() (in module dipy.align.sumsqdiff)": [[168, "dipy.align.sumsqdiff.compute_residual_displacement_field_ssd_2d"]], "compute_residual_displacement_field_ssd_3d() (in module dipy.align.sumsqdiff)": [[168, "dipy.align.sumsqdiff.compute_residual_displacement_field_ssd_3d"]], "compute_ssd_demons_step_2d() (in module dipy.align.sumsqdiff)": [[168, "dipy.align.sumsqdiff.compute_ssd_demons_step_2d"]], "compute_ssd_demons_step_3d() (in module dipy.align.sumsqdiff)": [[168, "dipy.align.sumsqdiff.compute_ssd_demons_step_3d"]], "create_circle() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.create_circle"]], "create_harmonic_fields_2d() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.create_harmonic_fields_2d"]], "create_harmonic_fields_3d() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.create_harmonic_fields_3d"]], "create_random_displacement_2d() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.create_random_displacement_2d"]], "create_random_displacement_3d() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.create_random_displacement_3d"]], "create_sphere() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.create_sphere"]], "cubic_spline() (in module dipy.align.parzenhist)": [[168, "dipy.align.parzenhist.cubic_spline"]], "cubic_spline_derivative() (in module dipy.align.parzenhist)": [[168, "dipy.align.parzenhist.cubic_spline_derivative"]], "decompose_matrix44() (in module dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.decompose_matrix44"]], "determine_num_threads() (in module dipy.align.bundlemin)": [[168, "dipy.align.bundlemin.determine_num_threads"]], "dipy.align": [[168, "module-dipy.align"]], "dipy.align._public": [[168, "module-dipy.align._public"]], "dipy.align.bundlemin": [[168, "module-dipy.align.bundlemin"]], "dipy.align.cpd": [[168, "module-dipy.align.cpd"]], "dipy.align.crosscorr": [[168, "module-dipy.align.crosscorr"]], "dipy.align.expectmax": [[168, "module-dipy.align.expectmax"]], "dipy.align.imaffine": [[168, "module-dipy.align.imaffine"]], "dipy.align.imwarp": [[168, "module-dipy.align.imwarp"]], "dipy.align.metrics": [[168, "module-dipy.align.metrics"]], "dipy.align.parzenhist": [[168, "module-dipy.align.parzenhist"]], "dipy.align.reslice": [[168, "module-dipy.align.reslice"]], "dipy.align.scalespace": [[168, "module-dipy.align.scalespace"]], "dipy.align.streamlinear": [[168, "module-dipy.align.streamlinear"]], "dipy.align.streamwarp": [[168, "module-dipy.align.streamwarp"]], "dipy.align.sumsqdiff": [[168, "module-dipy.align.sumsqdiff"]], "dipy.align.transforms": [[168, "module-dipy.align.transforms"]], "dipy.align.vector_fields": [[168, "module-dipy.align.vector_fields"]], "distance() (dipy.align.imaffine.mutualinformationmetric method)": [[168, "dipy.align.imaffine.MutualInformationMetric.distance"]], "distance() (dipy.align.streamlinear.bundlemindistanceasymmetricmetric method)": [[168, "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric.distance"]], "distance() (dipy.align.streamlinear.bundlemindistancematrixmetric method)": [[168, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric.distance"]], "distance() (dipy.align.streamlinear.bundlemindistancemetric method)": [[168, "dipy.align.streamlinear.BundleMinDistanceMetric.distance"]], "distance() (dipy.align.streamlinear.bundlesumdistancematrixmetric method)": [[168, "dipy.align.streamlinear.BundleSumDistanceMatrixMetric.distance"]], "distance() (dipy.align.streamlinear.jointbundlemindistancemetric method)": [[168, "dipy.align.streamlinear.JointBundleMinDistanceMetric.distance"]], "distance() (dipy.align.streamlinear.streamlinedistancemetric method)": [[168, "dipy.align.streamlinear.StreamlineDistanceMetric.distance"]], "distance_and_gradient() (dipy.align.imaffine.mutualinformationmetric method)": [[168, "dipy.align.imaffine.MutualInformationMetric.distance_and_gradient"]], "distance_matrix_mdf() (in module dipy.align.bundlemin)": [[168, "dipy.align.bundlemin.distance_matrix_mdf"]], "docstring_addendum (dipy.align.imaffine.affineregistration attribute)": [[168, "dipy.align.imaffine.AffineRegistration.docstring_addendum"]], "downsample_displacement_field_2d() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.downsample_displacement_field_2d"]], "downsample_displacement_field_3d() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.downsample_displacement_field_3d"]], "downsample_scalar_field_2d() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.downsample_scalar_field_2d"]], "downsample_scalar_field_3d() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.downsample_scalar_field_3d"]], "expand_fields() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.expand_fields"]], "expectation() (dipy.align.cpd.deformableregistration method)": [[168, "dipy.align.cpd.DeformableRegistration.expectation"]], "find_missing() (in module dipy.align.streamwarp)": [[168, "dipy.align.streamwarp.find_missing"]], "free_iteration() (dipy.align.metrics.ccmetric method)": [[168, "dipy.align.metrics.CCMetric.free_iteration"]], "free_iteration() (dipy.align.metrics.emmetric method)": [[168, "dipy.align.metrics.EMMetric.free_iteration"]], "free_iteration() (dipy.align.metrics.ssdmetric method)": [[168, "dipy.align.metrics.SSDMetric.free_iteration"]], "free_iteration() (dipy.align.metrics.similaritymetric method)": [[168, "dipy.align.metrics.SimilarityMetric.free_iteration"]], "gaussian_kernel() (in module dipy.align.cpd)": [[168, "dipy.align.cpd.gaussian_kernel"]], "get_affine() (dipy.align.imaffine.affinemap method)": [[168, "dipy.align.imaffine.AffineMap.get_affine"]], "get_affine() (dipy.align.scalespace.scalespace method)": [[168, "dipy.align.scalespace.ScaleSpace.get_affine"]], "get_affine_inv() (dipy.align.scalespace.scalespace method)": [[168, "dipy.align.scalespace.ScaleSpace.get_affine_inv"]], "get_backward_field() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.get_backward_field"]], "get_dim() (dipy.align.transforms.transform method)": [[168, "dipy.align.transforms.Transform.get_dim"]], "get_direction_and_spacings() (in module dipy.align.imwarp)": [[168, "dipy.align.imwarp.get_direction_and_spacings"]], "get_domain_shape() (dipy.align.scalespace.scalespace method)": [[168, "dipy.align.scalespace.ScaleSpace.get_domain_shape"]], "get_energy() (dipy.align.metrics.ccmetric method)": [[168, "dipy.align.metrics.CCMetric.get_energy"]], "get_energy() (dipy.align.metrics.emmetric method)": [[168, "dipy.align.metrics.EMMetric.get_energy"]], "get_energy() (dipy.align.metrics.ssdmetric method)": [[168, "dipy.align.metrics.SSDMetric.get_energy"]], "get_energy() (dipy.align.metrics.similaritymetric method)": [[168, "dipy.align.metrics.SimilarityMetric.get_energy"]], "get_expand_factors() (dipy.align.scalespace.scalespace method)": [[168, "dipy.align.scalespace.ScaleSpace.get_expand_factors"]], "get_forward_field() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.get_forward_field"]], "get_identity_parameters() (dipy.align.transforms.transform method)": [[168, "dipy.align.transforms.Transform.get_identity_parameters"]], "get_image() (dipy.align.scalespace.scalespace method)": [[168, "dipy.align.scalespace.ScaleSpace.get_image"]], "get_map() (dipy.align.imwarp.diffeomorphicregistration method)": [[168, "dipy.align.imwarp.DiffeomorphicRegistration.get_map"]], "get_map() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[168, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.get_map"]], "get_number_of_parameters() (dipy.align.transforms.transform method)": [[168, "dipy.align.transforms.Transform.get_number_of_parameters"]], "get_registration_parameters() (dipy.align.cpd.deformableregistration method)": [[168, "dipy.align.cpd.DeformableRegistration.get_registration_parameters"]], "get_scaling() (dipy.align.scalespace.scalespace method)": [[168, "dipy.align.scalespace.ScaleSpace.get_scaling"]], "get_sigmas() (dipy.align.scalespace.scalespace method)": [[168, "dipy.align.scalespace.ScaleSpace.get_sigmas"]], "get_simplified_transform() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.get_simplified_transform"]], "get_spacing() (dipy.align.scalespace.scalespace method)": [[168, "dipy.align.scalespace.ScaleSpace.get_spacing"]], "get_unique_pairs() (in module dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.get_unique_pairs"]], "gradient() (dipy.align.imaffine.mutualinformationmetric method)": [[168, "dipy.align.imaffine.MutualInformationMetric.gradient"]], "gradient() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.gradient"]], "groupwise_slr() (in module dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.groupwise_slr"]], "initialize_iteration() (dipy.align.metrics.ccmetric method)": [[168, "dipy.align.metrics.CCMetric.initialize_iteration"]], "initialize_iteration() (dipy.align.metrics.emmetric method)": [[168, "dipy.align.metrics.EMMetric.initialize_iteration"]], "initialize_iteration() (dipy.align.metrics.ssdmetric method)": [[168, "dipy.align.metrics.SSDMetric.initialize_iteration"]], "initialize_iteration() (dipy.align.metrics.similaritymetric method)": [[168, "dipy.align.metrics.SimilarityMetric.initialize_iteration"]], "initialize_sigma2() (in module dipy.align.cpd)": [[168, "dipy.align.cpd.initialize_sigma2"]], "interpret_matrix() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.interpret_matrix"]], "inverse() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.inverse"]], "invert_vector_field_fixed_point_2d() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.invert_vector_field_fixed_point_2d"]], "invert_vector_field_fixed_point_3d() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.invert_vector_field_fixed_point_3d"]], "is_valid_affine() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.is_valid_affine"]], "iterate() (dipy.align.cpd.deformableregistration method)": [[168, "dipy.align.cpd.DeformableRegistration.iterate"]], "iterate_residual_displacement_field_ssd_2d() (in module dipy.align.sumsqdiff)": [[168, "dipy.align.sumsqdiff.iterate_residual_displacement_field_ssd_2d"]], "iterate_residual_displacement_field_ssd_3d() (in module dipy.align.sumsqdiff)": [[168, "dipy.align.sumsqdiff.iterate_residual_displacement_field_ssd_3d"]], "jacobian() (dipy.align.transforms.transform method)": [[168, "dipy.align.transforms.Transform.jacobian"]], "logger() (in module dipy.align.imwarp)": [[168, "dipy.align.imwarp.logger"]], "logger() (in module dipy.align.scalespace)": [[168, "dipy.align.scalespace.logger"]], "logger() (in module dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.logger"]], "low_rank_eigen() (in module dipy.align.cpd)": [[168, "dipy.align.cpd.low_rank_eigen"]], "lowrankqs() (in module dipy.align.cpd)": [[168, "dipy.align.cpd.lowrankQS"]], "maximization() (dipy.align.cpd.deformableregistration method)": [[168, "dipy.align.cpd.DeformableRegistration.maximization"]], "motion_correction() (in module dipy.align._public)": [[168, "dipy.align._public.motion_correction"]], "mult_aff() (in module dipy.align.imwarp)": [[168, "dipy.align.imwarp.mult_aff"]], "optimize() (dipy.align.imaffine.affineregistration method)": [[168, "dipy.align.imaffine.AffineRegistration.optimize"]], "optimize() (dipy.align.imwarp.diffeomorphicregistration method)": [[168, "dipy.align.imwarp.DiffeomorphicRegistration.optimize"]], "optimize() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[168, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.optimize"]], "optimize() (dipy.align.streamlinear.streamlinelinearregistration method)": [[168, "dipy.align.streamlinear.StreamlineLinearRegistration.optimize"]], "param_to_matrix() (dipy.align.transforms.transform method)": [[168, "dipy.align.transforms.Transform.param_to_matrix"]], "precompute_cc_factors_2d() (in module dipy.align.crosscorr)": [[168, "dipy.align.crosscorr.precompute_cc_factors_2d"]], "precompute_cc_factors_2d_test() (in module dipy.align.crosscorr)": [[168, "dipy.align.crosscorr.precompute_cc_factors_2d_test"]], "precompute_cc_factors_3d() (in module dipy.align.crosscorr)": [[168, "dipy.align.crosscorr.precompute_cc_factors_3d"]], "precompute_cc_factors_3d_test() (in module dipy.align.crosscorr)": [[168, "dipy.align.crosscorr.precompute_cc_factors_3d_test"]], "print_level() (dipy.align.scalespace.scalespace method)": [[168, "dipy.align.scalespace.ScaleSpace.print_level"]], "progressive_slr() (in module dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.progressive_slr"]], "quantize_positive_2d() (in module dipy.align.expectmax)": [[168, "dipy.align.expectmax.quantize_positive_2d"]], "quantize_positive_3d() (in module dipy.align.expectmax)": [[168, "dipy.align.expectmax.quantize_positive_3d"]], "read_mapping() (in module dipy.align._public)": [[168, "dipy.align._public.read_mapping"]], "register() (dipy.align.cpd.deformableregistration method)": [[168, "dipy.align.cpd.DeformableRegistration.register"]], "register_dwi_series() (in module dipy.align._public)": [[168, "dipy.align._public.register_dwi_series"]], "register_dwi_to_template() (in module dipy.align._public)": [[168, "dipy.align._public.register_dwi_to_template"]], "register_series() (in module dipy.align._public)": [[168, "dipy.align._public.register_series"]], "remove_clusters_by_size() (in module dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.remove_clusters_by_size"]], "reorient_vector_field_2d() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.reorient_vector_field_2d"]], "reorient_vector_field_3d() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.reorient_vector_field_3d"]], "resample() (in module dipy.align._public)": [[168, "dipy.align._public.resample"]], "resample_displacement_field_2d() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.resample_displacement_field_2d"]], "resample_displacement_field_3d() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.resample_displacement_field_3d"]], "reslice() (in module dipy.align.reslice)": [[168, "dipy.align.reslice.reslice"]], "rigid() (in module dipy.align._public)": [[168, "dipy.align._public.rigid"]], "rigid_isoscaling() (in module dipy.align._public)": [[168, "dipy.align._public.rigid_isoscaling"]], "rigid_scaling() (in module dipy.align._public)": [[168, "dipy.align._public.rigid_scaling"]], "sample_domain_regular() (in module dipy.align.parzenhist)": [[168, "dipy.align.parzenhist.sample_domain_regular"]], "set_affine() (dipy.align.imaffine.affinemap method)": [[168, "dipy.align.imaffine.AffineMap.set_affine"]], "set_level_iters() (dipy.align.imwarp.diffeomorphicregistration method)": [[168, "dipy.align.imwarp.DiffeomorphicRegistration.set_level_iters"]], "set_levels_above() (dipy.align.metrics.similaritymetric method)": [[168, "dipy.align.metrics.SimilarityMetric.set_levels_above"]], "set_levels_below() (dipy.align.metrics.similaritymetric method)": [[168, "dipy.align.metrics.SimilarityMetric.set_levels_below"]], "set_moving_image() (dipy.align.metrics.similaritymetric method)": [[168, "dipy.align.metrics.SimilarityMetric.set_moving_image"]], "set_static_image() (dipy.align.metrics.similaritymetric method)": [[168, "dipy.align.metrics.SimilarityMetric.set_static_image"]], "setup() (dipy.align.imaffine.mutualinformationmetric method)": [[168, "dipy.align.imaffine.MutualInformationMetric.setup"]], "setup() (dipy.align.parzenhist.parzenjointhistogram method)": [[168, "dipy.align.parzenhist.ParzenJointHistogram.setup"]], "setup() (dipy.align.streamlinear.bundlemindistancematrixmetric method)": [[168, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric.setup"]], "setup() (dipy.align.streamlinear.bundlemindistancemetric method)": [[168, "dipy.align.streamlinear.BundleMinDistanceMetric.setup"]], "setup() (dipy.align.streamlinear.jointbundlemindistancemetric method)": [[168, "dipy.align.streamlinear.JointBundleMinDistanceMetric.setup"]], "setup() (dipy.align.streamlinear.streamlinedistancemetric method)": [[168, "dipy.align.streamlinear.StreamlineDistanceMetric.setup"]], "shallow_copy() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.shallow_copy"]], "simplify_warp_function_2d() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.simplify_warp_function_2d"]], "simplify_warp_function_3d() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.simplify_warp_function_3d"]], "slr_with_qbx() (in module dipy.align.streamlinear)": [[168, "dipy.align.streamlinear.slr_with_qbx"]], "solve_2d_symmetric_positive_definite() (in module dipy.align.sumsqdiff)": [[168, "dipy.align.sumsqdiff.solve_2d_symmetric_positive_definite"]], "solve_3d_symmetric_positive_definite() (in module dipy.align.sumsqdiff)": [[168, "dipy.align.sumsqdiff.solve_3d_symmetric_positive_definite"]], "sparse_gradient() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.sparse_gradient"]], "streamline_registration() (in module dipy.align._public)": [[168, "dipy.align._public.streamline_registration"]], "syn_registration() (in module dipy.align._public)": [[168, "dipy.align._public.syn_registration"]], "transform() (dipy.align.imaffine.affinemap method)": [[168, "dipy.align.imaffine.AffineMap.transform"]], "transform() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.transform"]], "transform() (dipy.align.streamlinear.jointstreamlineregistrationmap method)": [[168, "dipy.align.streamlinear.JointStreamlineRegistrationMap.transform"]], "transform() (dipy.align.streamlinear.streamlineregistrationmap method)": [[168, "dipy.align.streamlinear.StreamlineRegistrationMap.transform"]], "transform_2d_affine() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.transform_2d_affine"]], "transform_2d_affine_nn() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.transform_2d_affine_nn"]], "transform_3d_affine() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.transform_3d_affine"]], "transform_3d_affine_nn() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.transform_3d_affine_nn"]], "transform_centers_of_mass() (in module dipy.align.imaffine)": [[168, "dipy.align.imaffine.transform_centers_of_mass"]], "transform_geometric_centers() (in module dipy.align.imaffine)": [[168, "dipy.align.imaffine.transform_geometric_centers"]], "transform_inverse() (dipy.align.imaffine.affinemap method)": [[168, "dipy.align.imaffine.AffineMap.transform_inverse"]], "transform_inverse() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.transform_inverse"]], "transform_origins() (in module dipy.align.imaffine)": [[168, "dipy.align.imaffine.transform_origins"]], "transform_point_cloud() (dipy.align.cpd.deformableregistration method)": [[168, "dipy.align.cpd.DeformableRegistration.transform_point_cloud"]], "transform_points() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.transform_points"]], "transform_points_inverse() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.transform_points_inverse"]], "translation() (in module dipy.align._public)": [[168, "dipy.align._public.translation"]], "update() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[168, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.update"]], "update_gradient_dense() (dipy.align.parzenhist.parzenjointhistogram method)": [[168, "dipy.align.parzenhist.ParzenJointHistogram.update_gradient_dense"]], "update_gradient_sparse() (dipy.align.parzenhist.parzenjointhistogram method)": [[168, "dipy.align.parzenhist.ParzenJointHistogram.update_gradient_sparse"]], "update_pdfs_dense() (dipy.align.parzenhist.parzenjointhistogram method)": [[168, "dipy.align.parzenhist.ParzenJointHistogram.update_pdfs_dense"]], "update_pdfs_sparse() (dipy.align.parzenhist.parzenjointhistogram method)": [[168, "dipy.align.parzenhist.ParzenJointHistogram.update_pdfs_sparse"]], "update_transform() (dipy.align.cpd.deformableregistration method)": [[168, "dipy.align.cpd.DeformableRegistration.update_transform"]], "update_variance() (dipy.align.cpd.deformableregistration method)": [[168, "dipy.align.cpd.DeformableRegistration.update_variance"]], "use_moving_image_dynamics() (dipy.align.metrics.emmetric method)": [[168, "dipy.align.metrics.EMMetric.use_moving_image_dynamics"]], "use_moving_image_dynamics() (dipy.align.metrics.similaritymetric method)": [[168, "dipy.align.metrics.SimilarityMetric.use_moving_image_dynamics"]], "use_static_image_dynamics() (dipy.align.metrics.emmetric method)": [[168, "dipy.align.metrics.EMMetric.use_static_image_dynamics"]], "use_static_image_dynamics() (dipy.align.metrics.similaritymetric method)": [[168, "dipy.align.metrics.SimilarityMetric.use_static_image_dynamics"]], "v_cycle_2d() (in module dipy.align.metrics)": [[168, "dipy.align.metrics.v_cycle_2d"]], "v_cycle_3d() (in module dipy.align.metrics)": [[168, "dipy.align.metrics.v_cycle_3d"]], "warp_2d() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.warp_2d"]], "warp_2d_nn() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.warp_2d_nn"]], "warp_3d() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.warp_3d"]], "warp_3d_nn() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.warp_3d_nn"]], "warp_coordinates_2d() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.warp_coordinates_2d"]], "warp_coordinates_3d() (in module dipy.align.vector_fields)": [[168, "dipy.align.vector_fields.warp_coordinates_3d"]], "warp_endomorphism() (dipy.align.imwarp.diffeomorphicmap method)": [[168, "dipy.align.imwarp.DiffeomorphicMap.warp_endomorphism"]], "write_mapping() (in module dipy.align._public)": [[168, "dipy.align._public.write_mapping"]], "dipy.boots": [[169, "module-dipy.boots"]], "gradienttable (class in dipy.core.gradients)": [[170, "dipy.core.gradients.GradientTable"]], "graph (class in dipy.core.graph)": [[170, "dipy.core.graph.Graph"]], "hemisphere (class in dipy.core.sphere)": [[170, "dipy.core.sphere.HemiSphere"]], "interpolator (class in dipy.core.interpolation)": [[170, "dipy.core.interpolation.Interpolator"]], "lecuyer() (in module dipy.core.rng)": [[170, "dipy.core.rng.LEcuyer"]], "nearestneighborinterpolator (class in dipy.core.interpolation)": [[170, "dipy.core.interpolation.NearestNeighborInterpolator"]], "nonnegativeleastsquares (class in dipy.core.optimize)": [[170, "dipy.core.optimize.NonNegativeLeastSquares"]], "onetimeproperty (class in dipy.core.onetime)": [[170, "dipy.core.onetime.OneTimeProperty"]], "optimizer (class in dipy.core.optimize)": [[170, "dipy.core.optimize.Optimizer"]], "outsideimage (class in dipy.core.interpolation)": [[170, "dipy.core.interpolation.OutsideImage"]], "positivedefiniteleastsquares (class in dipy.core.optimize)": [[170, "dipy.core.optimize.PositiveDefiniteLeastSquares"]], "profiler (class in dipy.core.profile)": [[170, "dipy.core.profile.Profiler"]], "resetmixin (class in dipy.core.onetime)": [[170, "dipy.core.onetime.ResetMixin"]], "sklearnlinearsolver (class in dipy.core.optimize)": [[170, "dipy.core.optimize.SKLearnLinearSolver"]], "sphere (class in dipy.core.sphere)": [[170, "dipy.core.sphere.Sphere"]], "timer (class in dipy.core.benchmarks.bench_sphere)": [[170, "dipy.core.benchmarks.bench_sphere.Timer"]], "trilinearinterpolator (class in dipy.core.interpolation)": [[170, "dipy.core.interpolation.TriLinearInterpolator"]], "wichmannhill1982() (in module dipy.core.rng)": [[170, "dipy.core.rng.WichmannHill1982"]], "wichmannhill2006() (in module dipy.core.rng)": [[170, "dipy.core.rng.WichmannHill2006"]], "_tuple2axes() (in module dipy.core.geometry)": [[170, "dipy.core.geometry._TUPLE2AXES"]], "__init__() (dipy.core.benchmarks.bench_sphere.timer method)": [[170, "dipy.core.benchmarks.bench_sphere.Timer.__init__"]], "__init__() (dipy.core.gradients.gradienttable method)": [[170, "dipy.core.gradients.GradientTable.__init__"]], "__init__() (dipy.core.graph.graph method)": [[170, "dipy.core.graph.Graph.__init__"]], "__init__() (dipy.core.interpolation.interpolator method)": [[170, "dipy.core.interpolation.Interpolator.__init__"]], "__init__() (dipy.core.interpolation.nearestneighborinterpolator method)": [[170, "dipy.core.interpolation.NearestNeighborInterpolator.__init__"]], "__init__() (dipy.core.interpolation.outsideimage method)": [[170, "dipy.core.interpolation.OutsideImage.__init__"]], "__init__() (dipy.core.interpolation.trilinearinterpolator method)": [[170, "dipy.core.interpolation.TriLinearInterpolator.__init__"]], "__init__() (dipy.core.onetime.onetimeproperty method)": [[170, "dipy.core.onetime.OneTimeProperty.__init__"]], "__init__() (dipy.core.onetime.resetmixin method)": [[170, "dipy.core.onetime.ResetMixin.__init__"]], "__init__() (dipy.core.optimize.nonnegativeleastsquares method)": [[170, "dipy.core.optimize.NonNegativeLeastSquares.__init__"]], "__init__() (dipy.core.optimize.optimizer method)": [[170, "dipy.core.optimize.Optimizer.__init__"]], "__init__() (dipy.core.optimize.positivedefiniteleastsquares method)": [[170, "dipy.core.optimize.PositiveDefiniteLeastSquares.__init__"]], "__init__() (dipy.core.optimize.sklearnlinearsolver method)": [[170, "dipy.core.optimize.SKLearnLinearSolver.__init__"]], "__init__() (dipy.core.profile.profiler method)": [[170, "dipy.core.profile.Profiler.__init__"]], "__init__() (dipy.core.sphere.hemisphere method)": [[170, "dipy.core.sphere.HemiSphere.__init__"]], "__init__() (dipy.core.sphere.sphere method)": [[170, "dipy.core.sphere.Sphere.__init__"]], "add_edge() (dipy.core.graph.graph method)": [[170, "dipy.core.graph.Graph.add_edge"]], "add_node() (dipy.core.graph.graph method)": [[170, "dipy.core.graph.Graph.add_node"]], "afb3d() (in module dipy.core.wavelet)": [[170, "dipy.core.wavelet.afb3D"]], "afb3d_a() (in module dipy.core.wavelet)": [[170, "dipy.core.wavelet.afb3D_A"]], "all_paths() (dipy.core.graph.graph method)": [[170, "dipy.core.graph.Graph.all_paths"]], "angular_similarity() (in module dipy.core.sphere_stats)": [[170, "dipy.core.sphere_stats.angular_similarity"]], "auto_attr() (in module dipy.core.onetime)": [[170, "dipy.core.onetime.auto_attr"]], "b0s_mask() (dipy.core.gradients.gradienttable method)": [[170, "dipy.core.gradients.GradientTable.b0s_mask"]], "bench_disperse_charges_alt() (in module dipy.core.benchmarks.bench_sphere)": [[170, "dipy.core.benchmarks.bench_sphere.bench_disperse_charges_alt"]], "btens_to_params() (in module dipy.core.gradients)": [[170, "dipy.core.gradients.btens_to_params"]], "bvals() (dipy.core.gradients.gradienttable method)": [[170, "dipy.core.gradients.GradientTable.bvals"]], "bvecs() (dipy.core.gradients.gradienttable method)": [[170, "dipy.core.gradients.GradientTable.bvecs"]], "cart2sphere() (in module dipy.core.geometry)": [[170, "dipy.core.geometry.cart2sphere"]], "cart_distance() (in module dipy.core.geometry)": [[170, "dipy.core.geometry.cart_distance"]], "check_multi_b() (in module dipy.core.gradients)": [[170, "dipy.core.gradients.check_multi_b"]], "children() (dipy.core.graph.graph method)": [[170, "dipy.core.graph.Graph.children"]], "circumradius() (in module dipy.core.geometry)": [[170, "dipy.core.geometry.circumradius"]], "compare_orientation_sets() (in module dipy.core.sphere_stats)": [[170, "dipy.core.sphere_stats.compare_orientation_sets"]], "compose_matrix() (in module dipy.core.geometry)": [[170, "dipy.core.geometry.compose_matrix"]], "compose_transformations() (in module dipy.core.geometry)": [[170, "dipy.core.geometry.compose_transformations"]], "create_unit_hemisphere() (in module dipy.core.subdivide_octahedron)": [[170, "dipy.core.subdivide_octahedron.create_unit_hemisphere"]], "create_unit_sphere() (in module dipy.core.subdivide_octahedron)": [[170, "dipy.core.subdivide_octahedron.create_unit_sphere"]], "cshift3d() (in module dipy.core.wavelet)": [[170, "dipy.core.wavelet.cshift3D"]], "decompose_matrix() (in module dipy.core.geometry)": [[170, "dipy.core.geometry.decompose_matrix"]], "del_node() (dipy.core.graph.graph method)": [[170, "dipy.core.graph.Graph.del_node"]], "del_node_and_edges() (dipy.core.graph.graph method)": [[170, "dipy.core.graph.Graph.del_node_and_edges"]], "dipy.core": [[170, "module-dipy.core"]], "dipy.core.benchmarks": [[170, "module-dipy.core.benchmarks"]], "dipy.core.benchmarks.bench_sphere": [[170, "module-dipy.core.benchmarks.bench_sphere"]], "dipy.core.geometry": [[170, "module-dipy.core.geometry"]], "dipy.core.gradients": [[170, "module-dipy.core.gradients"]], "dipy.core.graph": [[170, "module-dipy.core.graph"]], "dipy.core.histeq": [[170, "module-dipy.core.histeq"]], "dipy.core.interpolation": [[170, "module-dipy.core.interpolation"]], "dipy.core.ndindex": [[170, "module-dipy.core.ndindex"]], "dipy.core.onetime": [[170, "module-dipy.core.onetime"]], "dipy.core.optimize": [[170, "module-dipy.core.optimize"]], "dipy.core.profile": [[170, "module-dipy.core.profile"]], "dipy.core.rng": [[170, "module-dipy.core.rng"]], "dipy.core.sphere": [[170, "module-dipy.core.sphere"]], "dipy.core.sphere_stats": [[170, "module-dipy.core.sphere_stats"]], "dipy.core.subdivide_octahedron": [[170, "module-dipy.core.subdivide_octahedron"]], "dipy.core.wavelet": [[170, "module-dipy.core.wavelet"]], "disperse_charges() (in module dipy.core.sphere)": [[170, "dipy.core.sphere.disperse_charges"]], "disperse_charges_alt() (in module dipy.core.sphere)": [[170, "dipy.core.sphere.disperse_charges_alt"]], "dist_to_corner() (in module dipy.core.geometry)": [[170, "dipy.core.geometry.dist_to_corner"]], "down() (dipy.core.graph.graph method)": [[170, "dipy.core.graph.Graph.down"]], "down_short() (dipy.core.graph.graph method)": [[170, "dipy.core.graph.Graph.down_short"]], "duration_in_seconds() (dipy.core.benchmarks.bench_sphere.timer method)": [[170, "dipy.core.benchmarks.bench_sphere.Timer.duration_in_seconds"]], "dwt3d() (in module dipy.core.wavelet)": [[170, "dipy.core.wavelet.dwt3D"]], "edges() (dipy.core.sphere.sphere method)": [[170, "dipy.core.sphere.Sphere.edges"]], "eigenstats() (in module dipy.core.sphere_stats)": [[170, "dipy.core.sphere_stats.eigenstats"]], "euler_characteristic_check() (in module dipy.core.sphere)": [[170, "dipy.core.sphere.euler_characteristic_check"]], "euler_matrix() (in module dipy.core.geometry)": [[170, "dipy.core.geometry.euler_matrix"]], "evolution (dipy.core.optimize.optimizer property)": [[170, "dipy.core.optimize.Optimizer.evolution"]], "faces() (dipy.core.sphere.hemisphere method)": [[170, "dipy.core.sphere.HemiSphere.faces"]], "faces() (dipy.core.sphere.sphere method)": [[170, "dipy.core.sphere.Sphere.faces"]], "faces_from_sphere_vertices() (in module dipy.core.sphere)": [[170, "dipy.core.sphere.faces_from_sphere_vertices"]], "find_closest() (dipy.core.sphere.hemisphere method)": [[170, "dipy.core.sphere.HemiSphere.find_closest"]], "find_closest() (dipy.core.sphere.sphere method)": [[170, "dipy.core.sphere.Sphere.find_closest"]], "fit() (dipy.core.optimize.nonnegativeleastsquares method)": [[170, "dipy.core.optimize.NonNegativeLeastSquares.fit"]], "fit() (dipy.core.optimize.sklearnlinearsolver method)": [[170, "dipy.core.optimize.SKLearnLinearSolver.fit"]], "fopt (dipy.core.optimize.optimizer property)": [[170, "dipy.core.optimize.Optimizer.fopt"]], "from_sphere() (dipy.core.sphere.hemisphere class method)": [[170, "dipy.core.sphere.HemiSphere.from_sphere"]], "func_minimize_adhoc() (in module dipy.core.benchmarks.bench_sphere)": [[170, "dipy.core.benchmarks.bench_sphere.func_minimize_adhoc"]], "func_minimize_scipy() (in module dipy.core.benchmarks.bench_sphere)": [[170, "dipy.core.benchmarks.bench_sphere.func_minimize_scipy"]], "generate_bvecs() (in module dipy.core.gradients)": [[170, "dipy.core.gradients.generate_bvecs"]], "get_bval_indices() (in module dipy.core.gradients)": [[170, "dipy.core.gradients.get_bval_indices"]], "gradient_strength() (dipy.core.gradients.gradienttable method)": [[170, "dipy.core.gradients.GradientTable.gradient_strength"]], "gradient_table() (in module dipy.core.gradients)": [[170, "dipy.core.gradients.gradient_table"]], "gradient_table_from_bvals_bvecs() (in module dipy.core.gradients)": [[170, "dipy.core.gradients.gradient_table_from_bvals_bvecs"]], "gradient_table_from_gradient_strength_bvecs() (in module dipy.core.gradients)": [[170, "dipy.core.gradients.gradient_table_from_gradient_strength_bvecs"]], "gradient_table_from_qvals_bvecs() (in module dipy.core.gradients)": [[170, "dipy.core.gradients.gradient_table_from_qvals_bvecs"]], "hemi_icosahedron() (in module dipy.core.sphere)": [[170, "dipy.core.sphere.hemi_icosahedron"]], "histeq() (in module dipy.core.histeq)": [[170, "dipy.core.histeq.histeq"]], "icosahedron_faces() (in module dipy.core.sphere)": [[170, "dipy.core.sphere.icosahedron_faces"]], "icosahedron_vertices() (in module dipy.core.sphere)": [[170, "dipy.core.sphere.icosahedron_vertices"]], "idwt3d() (in module dipy.core.wavelet)": [[170, "dipy.core.wavelet.idwt3D"]], "info (dipy.core.gradients.gradienttable property)": [[170, "dipy.core.gradients.GradientTable.info"]], "interp_rbf() (in module dipy.core.interpolation)": [[170, "dipy.core.interpolation.interp_rbf"]], "interpolate_scalar_2d() (in module dipy.core.interpolation)": [[170, "dipy.core.interpolation.interpolate_scalar_2d"]], "interpolate_scalar_3d() (in module dipy.core.interpolation)": [[170, "dipy.core.interpolation.interpolate_scalar_3d"]], "interpolate_scalar_nn_2d() (in module dipy.core.interpolation)": [[170, "dipy.core.interpolation.interpolate_scalar_nn_2d"]], "interpolate_scalar_nn_3d() (in module dipy.core.interpolation)": [[170, "dipy.core.interpolation.interpolate_scalar_nn_3d"]], "interpolate_vector_2d() (in module dipy.core.interpolation)": [[170, "dipy.core.interpolation.interpolate_vector_2d"]], "interpolate_vector_3d() (in module dipy.core.interpolation)": [[170, "dipy.core.interpolation.interpolate_vector_3d"]], "is_hemispherical() (in module dipy.core.geometry)": [[170, "dipy.core.geometry.is_hemispherical"]], "lambert_equal_area_projection_cart() (in module dipy.core.geometry)": [[170, "dipy.core.geometry.lambert_equal_area_projection_cart"]], "lambert_equal_area_projection_polar() (in module dipy.core.geometry)": [[170, "dipy.core.geometry.lambert_equal_area_projection_polar"]], "logger() (in module dipy.core.gradients)": [[170, "dipy.core.gradients.logger"]], "map_coordinates_trilinear_iso() (in module dipy.core.interpolation)": [[170, "dipy.core.interpolation.map_coordinates_trilinear_iso"]], "message (dipy.core.optimize.optimizer property)": [[170, "dipy.core.optimize.Optimizer.message"]], "mirror() (dipy.core.sphere.hemisphere method)": [[170, "dipy.core.sphere.HemiSphere.mirror"]], "ndindex() (in module dipy.core.ndindex)": [[170, "dipy.core.ndindex.ndindex"]], "nearest_pos_semi_def() (in module dipy.core.geometry)": [[170, "dipy.core.geometry.nearest_pos_semi_def"]], "nearestneighbor_interpolate() (in module dipy.core.interpolation)": [[170, "dipy.core.interpolation.nearestneighbor_interpolate"]], "nfev (dipy.core.optimize.optimizer property)": [[170, "dipy.core.optimize.Optimizer.nfev"]], "nit (dipy.core.optimize.optimizer property)": [[170, "dipy.core.optimize.Optimizer.nit"]], "normalized_vector() (in module dipy.core.geometry)": [[170, "dipy.core.geometry.normalized_vector"]], "octahedron_faces() (in module dipy.core.sphere)": [[170, "dipy.core.sphere.octahedron_faces"]], "octahedron_vertices() (in module dipy.core.sphere)": [[170, "dipy.core.sphere.octahedron_vertices"]], "orientation_from_string() (in module dipy.core.gradients)": [[170, "dipy.core.gradients.orientation_from_string"]], "orientation_to_string() (in module dipy.core.gradients)": [[170, "dipy.core.gradients.orientation_to_string"]], "ornt_mapping() (in module dipy.core.gradients)": [[170, "dipy.core.gradients.ornt_mapping"]], "params_to_btens() (in module dipy.core.gradients)": [[170, "dipy.core.gradients.params_to_btens"]], "parents() (dipy.core.graph.graph method)": [[170, "dipy.core.graph.Graph.parents"]], "permutationinverse() (in module dipy.core.wavelet)": [[170, "dipy.core.wavelet.permutationinverse"]], "perpendicular_directions() (in module dipy.core.geometry)": [[170, "dipy.core.geometry.perpendicular_directions"]], "predict() (dipy.core.optimize.sklearnlinearsolver method)": [[170, "dipy.core.optimize.SKLearnLinearSolver.predict"]], "print_stats() (dipy.core.profile.profiler method)": [[170, "dipy.core.profile.Profiler.print_stats"]], "print_summary() (dipy.core.optimize.optimizer method)": [[170, "dipy.core.optimize.Optimizer.print_summary"]], "qvals() (dipy.core.gradients.gradienttable method)": [[170, "dipy.core.gradients.GradientTable.qvals"]], "random_uniform_on_sphere() (in module dipy.core.sphere_stats)": [[170, "dipy.core.sphere_stats.random_uniform_on_sphere"]], "reorient_bvecs() (in module dipy.core.gradients)": [[170, "dipy.core.gradients.reorient_bvecs"]], "reorient_on_axis() (in module dipy.core.gradients)": [[170, "dipy.core.gradients.reorient_on_axis"]], "reorient_vectors() (in module dipy.core.gradients)": [[170, "dipy.core.gradients.reorient_vectors"]], "reset() (dipy.core.onetime.resetmixin method)": [[170, "dipy.core.onetime.ResetMixin.reset"]], "rodrigues_axis_rotation() (in module dipy.core.geometry)": [[170, "dipy.core.geometry.rodrigues_axis_rotation"]], "round_bvals() (in module dipy.core.gradients)": [[170, "dipy.core.gradients.round_bvals"]], "sfb3d() (in module dipy.core.wavelet)": [[170, "dipy.core.wavelet.sfb3D"]], "sfb3d_a() (in module dipy.core.wavelet)": [[170, "dipy.core.wavelet.sfb3D_A"]], "shortest_path() (dipy.core.graph.graph method)": [[170, "dipy.core.graph.Graph.shortest_path"]], "solve() (dipy.core.optimize.positivedefiniteleastsquares method)": [[170, "dipy.core.optimize.PositiveDefiniteLeastSquares.solve"]], "sparse_nnls() (in module dipy.core.optimize)": [[170, "dipy.core.optimize.sparse_nnls"]], "spdot() (in module dipy.core.optimize)": [[170, "dipy.core.optimize.spdot"]], "sph2latlon() (in module dipy.core.geometry)": [[170, "dipy.core.geometry.sph2latlon"]], "sphere2cart() (in module dipy.core.geometry)": [[170, "dipy.core.geometry.sphere2cart"]], "sphere_distance() (in module dipy.core.geometry)": [[170, "dipy.core.geometry.sphere_distance"]], "subdivide() (dipy.core.sphere.hemisphere method)": [[170, "dipy.core.sphere.HemiSphere.subdivide"]], "subdivide() (dipy.core.sphere.sphere method)": [[170, "dipy.core.sphere.Sphere.subdivide"]], "tau() (dipy.core.gradients.gradienttable method)": [[170, "dipy.core.gradients.GradientTable.tau"]], "trilinear_interp() (in module dipy.core.interpolation)": [[170, "dipy.core.interpolation.trilinear_interp"]], "trilinear_interpolate4d() (in module dipy.core.interpolation)": [[170, "dipy.core.interpolation.trilinear_interpolate4d"]], "unique_bvals() (in module dipy.core.gradients)": [[170, "dipy.core.gradients.unique_bvals"]], "unique_bvals_magnitude() (in module dipy.core.gradients)": [[170, "dipy.core.gradients.unique_bvals_magnitude"]], "unique_bvals_tolerance() (in module dipy.core.gradients)": [[170, "dipy.core.gradients.unique_bvals_tolerance"]], "unique_edges() (in module dipy.core.sphere)": [[170, "dipy.core.sphere.unique_edges"]], "unique_sets() (in module dipy.core.sphere)": [[170, "dipy.core.sphere.unique_sets"]], "unit_icosahedron() (in module dipy.core.sphere)": [[170, "dipy.core.sphere.unit_icosahedron"]], "unit_octahedron() (in module dipy.core.sphere)": [[170, "dipy.core.sphere.unit_octahedron"]], "up() (dipy.core.graph.graph method)": [[170, "dipy.core.graph.Graph.up"]], "up_short() (dipy.core.graph.graph method)": [[170, "dipy.core.graph.Graph.up_short"]], "vec2vec_rotmat() (in module dipy.core.geometry)": [[170, "dipy.core.geometry.vec2vec_rotmat"]], "vector_cosine() (in module dipy.core.geometry)": [[170, "dipy.core.geometry.vector_cosine"]], "vector_norm() (in module dipy.core.geometry)": [[170, "dipy.core.geometry.vector_norm"]], "vertices() (dipy.core.sphere.sphere method)": [[170, "dipy.core.sphere.Sphere.vertices"]], "x (dipy.core.sphere.sphere property)": [[170, "dipy.core.sphere.Sphere.x"]], "xopt (dipy.core.optimize.optimizer property)": [[170, "dipy.core.optimize.Optimizer.xopt"]], "y (dipy.core.sphere.sphere property)": [[170, "dipy.core.sphere.Sphere.y"]], "z (dipy.core.sphere.sphere property)": [[170, "dipy.core.sphere.Sphere.z"]], "data_dir() (in module dipy.data)": [[171, "dipy.data.DATA_DIR"]], "dataerror (class in dipy.data)": [[171, "dipy.data.DataError"]], "__init__() (dipy.data.dataerror method)": [[171, "dipy.data.DataError.__init__"]], "check_md5() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.check_md5"]], "copyfileobj_withprogress() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.copyfileobj_withprogress"]], "default_sphere() (in module dipy.data)": [[171, "dipy.data.default_sphere"]], "dipy.data": [[171, "module-dipy.data"]], "dipy.data.fetcher": [[171, "module-dipy.data.fetcher"]], "dsi_deconv_voxels() (in module dipy.data)": [[171, "dipy.data.dsi_deconv_voxels"]], "dsi_voxels() (in module dipy.data)": [[171, "dipy.data.dsi_voxels"]], "extract_example_tracts() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.extract_example_tracts"]], "fetch_dib_217_lte_pte_ste() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_DiB_217_lte_pte_ste"]], "fetch_dib_70_lte_pte_ste() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_DiB_70_lte_pte_ste"]], "fetch_bundle_atlas_hcp842() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_bundle_atlas_hcp842"]], "fetch_bundle_fa_hcp() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_bundle_fa_hcp"]], "fetch_bundle_warp_dataset() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_bundle_warp_dataset"]], "fetch_bundles_2_subjects() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_bundles_2_subjects"]], "fetch_cenir_multib() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_cenir_multib"]], "fetch_cfin_multib() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_cfin_multib"]], "fetch_cti_rat1() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_cti_rat1"]], "fetch_data() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_data"]], "fetch_evac_test() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_evac_test"]], "fetch_evac_weights() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_evac_weights"]], "fetch_file_formats() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_file_formats"]], "fetch_fury_surface() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_fury_surface"]], "fetch_gold_standard_io() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_gold_standard_io"]], "fetch_hbn() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_hbn"]], "fetch_hcp() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_hcp"]], "fetch_isbi2013_2shell() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_isbi2013_2shell"]], "fetch_ivim() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_ivim"]], "fetch_mni_template() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_mni_template"]], "fetch_ptt_minimal_dataset() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_ptt_minimal_dataset"]], "fetch_qtdmri_test_retest_2subjects() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_qtdMRI_test_retest_2subjects"]], "fetch_qte_lte_pte() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_qte_lte_pte"]], "fetch_resdnn_weights() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_resdnn_weights"]], "fetch_scil_b0() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_scil_b0"]], "fetch_sherbrooke_3shell() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_sherbrooke_3shell"]], "fetch_stanford_hardi() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_stanford_hardi"]], "fetch_stanford_labels() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_stanford_labels"]], "fetch_stanford_pve_maps() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_stanford_pve_maps"]], "fetch_stanford_t1() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_stanford_t1"]], "fetch_stanford_tracks() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_stanford_tracks"]], "fetch_syn_data() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_syn_data"]], "fetch_synb0_test() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_synb0_test"]], "fetch_synb0_weights() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_synb0_weights"]], "fetch_taiwan_ntu_dsi() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_taiwan_ntu_dsi"]], "fetch_target_tractogram_hcp() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_target_tractogram_hcp"]], "fetch_tissue_data() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.fetch_tissue_data"]], "get_3shell_gtab() (in module dipy.data)": [[171, "dipy.data.get_3shell_gtab"]], "get_bundle_atlas_hcp842() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.get_bundle_atlas_hcp842"]], "get_cmap() (in module dipy.data)": [[171, "dipy.data.get_cmap"]], "get_file_formats() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.get_file_formats"]], "get_fnames() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.get_fnames"]], "get_gtab_taiwan_dsi() (in module dipy.data)": [[171, "dipy.data.get_gtab_taiwan_dsi"]], "get_isbi2013_2shell_gtab() (in module dipy.data)": [[171, "dipy.data.get_isbi2013_2shell_gtab"]], "get_sim_voxels() (in module dipy.data)": [[171, "dipy.data.get_sim_voxels"]], "get_skeleton() (in module dipy.data)": [[171, "dipy.data.get_skeleton"]], "get_sphere() (in module dipy.data)": [[171, "dipy.data.get_sphere"]], "get_target_tractogram_hcp() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.get_target_tractogram_hcp"]], "get_two_hcp842_bundles() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.get_two_hcp842_bundles"]], "load_sdp_constraints() (in module dipy.data)": [[171, "dipy.data.load_sdp_constraints"]], "loads_compat() (in module dipy.data)": [[171, "dipy.data.loads_compat"]], "matlab_life_results() (in module dipy.data)": [[171, "dipy.data.matlab_life_results"]], "mrtrix_spherical_functions() (in module dipy.data)": [[171, "dipy.data.mrtrix_spherical_functions"]], "read_dib_217_lte_pte_ste() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.read_DiB_217_lte_pte_ste"]], "read_dib_70_lte_pte_ste() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.read_DiB_70_lte_pte_ste"]], "read_bundles_2_subjects() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.read_bundles_2_subjects"]], "read_cenir_multib() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.read_cenir_multib"]], "read_cfin_dwi() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.read_cfin_dwi"]], "read_cfin_t1() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.read_cfin_t1"]], "read_five_af_bundles() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.read_five_af_bundles"]], "read_isbi2013_2shell() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.read_isbi2013_2shell"]], "read_ivim() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.read_ivim"]], "read_mni_template() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.read_mni_template"]], "read_qtdmri_test_retest_2subjects() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.read_qtdMRI_test_retest_2subjects"]], "read_qte_lte_pte() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.read_qte_lte_pte"]], "read_scil_b0() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.read_scil_b0"]], "read_sherbrooke_3shell() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.read_sherbrooke_3shell"]], "read_siemens_scil_b0() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.read_siemens_scil_b0"]], "read_stanford_hardi() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.read_stanford_hardi"]], "read_stanford_labels() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.read_stanford_labels"]], "read_stanford_pve_maps() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.read_stanford_pve_maps"]], "read_stanford_t1() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.read_stanford_t1"]], "read_syn_data() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.read_syn_data"]], "read_taiwan_ntu_dsi() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.read_taiwan_ntu_dsi"]], "read_tissue_data() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.read_tissue_data"]], "small_sphere() (in module dipy.data)": [[171, "dipy.data.small_sphere"]], "to_bids_description() (in module dipy.data.fetcher)": [[171, "dipy.data.fetcher.to_bids_description"]], "two_cingulum_bundles() (in module dipy.data)": [[171, "dipy.data.two_cingulum_bundles"]], "enhancementkernel (class in dipy.denoise.enhancement_kernel)": [[172, "dipy.denoise.enhancement_kernel.EnhancementKernel"]], "hemisphere (class in dipy.denoise.enhancement_kernel)": [[172, "dipy.denoise.enhancement_kernel.HemiSphere"]], "sphere (class in dipy.denoise.enhancement_kernel)": [[172, "dipy.denoise.enhancement_kernel.Sphere"]], "__init__() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[172, "dipy.denoise.enhancement_kernel.EnhancementKernel.__init__"]], "__init__() (dipy.denoise.enhancement_kernel.hemisphere method)": [[172, "dipy.denoise.enhancement_kernel.HemiSphere.__init__"]], "__init__() (dipy.denoise.enhancement_kernel.sphere method)": [[172, "dipy.denoise.enhancement_kernel.Sphere.__init__"]], "adaptive_soft_matching() (in module dipy.denoise.adaptive_soft_matching)": [[172, "dipy.denoise.adaptive_soft_matching.adaptive_soft_matching"]], "add_padding_reflection() (in module dipy.denoise.denspeed)": [[172, "dipy.denoise.denspeed.add_padding_reflection"]], "ceil() (in module dipy.denoise.enhancement_kernel)": [[172, "dipy.denoise.enhancement_kernel.ceil"]], "convolve() (in module dipy.denoise.shift_twist_convolution)": [[172, "dipy.denoise.shift_twist_convolution.convolve"]], "convolve_sf() (in module dipy.denoise.shift_twist_convolution)": [[172, "dipy.denoise.shift_twist_convolution.convolve_sf"]], "correspond_indices() (in module dipy.denoise.denspeed)": [[172, "dipy.denoise.denspeed.correspond_indices"]], "determine_num_threads() (in module dipy.denoise.denspeed)": [[172, "dipy.denoise.denspeed.determine_num_threads"]], "determine_num_threads() (in module dipy.denoise.shift_twist_convolution)": [[172, "dipy.denoise.shift_twist_convolution.determine_num_threads"]], "dipy.denoise": [[172, "module-dipy.denoise"]], "dipy.denoise.adaptive_soft_matching": [[172, "module-dipy.denoise.adaptive_soft_matching"]], "dipy.denoise.denspeed": [[172, "module-dipy.denoise.denspeed"]], "dipy.denoise.enhancement_kernel": [[172, "module-dipy.denoise.enhancement_kernel"]], "dipy.denoise.gibbs": [[172, "module-dipy.denoise.gibbs"]], "dipy.denoise.localpca": [[172, "module-dipy.denoise.localpca"]], "dipy.denoise.nlmeans": [[172, "module-dipy.denoise.nlmeans"]], "dipy.denoise.nlmeans_block": [[172, "module-dipy.denoise.nlmeans_block"]], "dipy.denoise.noise_estimate": [[172, "module-dipy.denoise.noise_estimate"]], "dipy.denoise.non_local_means": [[172, "module-dipy.denoise.non_local_means"]], "dipy.denoise.patch2self": [[172, "module-dipy.denoise.patch2self"]], "dipy.denoise.pca_noise_estimate": [[172, "module-dipy.denoise.pca_noise_estimate"]], "dipy.denoise.shift_twist_convolution": [[172, "module-dipy.denoise.shift_twist_convolution"]], "disperse_charges() (in module dipy.denoise.enhancement_kernel)": [[172, "dipy.denoise.enhancement_kernel.disperse_charges"]], "edges() (dipy.denoise.enhancement_kernel.sphere method)": [[172, "dipy.denoise.enhancement_kernel.Sphere.edges"]], "estimate_sigma() (in module dipy.denoise.noise_estimate)": [[172, "dipy.denoise.noise_estimate.estimate_sigma"]], "evaluate_kernel() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[172, "dipy.denoise.enhancement_kernel.EnhancementKernel.evaluate_kernel"]], "faces() (dipy.denoise.enhancement_kernel.hemisphere method)": [[172, "dipy.denoise.enhancement_kernel.HemiSphere.faces"]], "faces() (dipy.denoise.enhancement_kernel.sphere method)": [[172, "dipy.denoise.enhancement_kernel.Sphere.faces"]], "find_closest() (dipy.denoise.enhancement_kernel.hemisphere method)": [[172, "dipy.denoise.enhancement_kernel.HemiSphere.find_closest"]], "find_closest() (dipy.denoise.enhancement_kernel.sphere method)": [[172, "dipy.denoise.enhancement_kernel.Sphere.find_closest"]], "firdn() (in module dipy.denoise.nlmeans_block)": [[172, "dipy.denoise.nlmeans_block.firdn"]], "from_sphere() (dipy.denoise.enhancement_kernel.hemisphere class method)": [[172, "dipy.denoise.enhancement_kernel.HemiSphere.from_sphere"]], "genpca() (in module dipy.denoise.localpca)": [[172, "dipy.denoise.localpca.genpca"]], "get_lookup_table() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[172, "dipy.denoise.enhancement_kernel.EnhancementKernel.get_lookup_table"]], "get_orientations() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[172, "dipy.denoise.enhancement_kernel.EnhancementKernel.get_orientations"]], "get_sphere() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[172, "dipy.denoise.enhancement_kernel.EnhancementKernel.get_sphere"]], "get_sphere() (in module dipy.denoise.enhancement_kernel)": [[172, "dipy.denoise.enhancement_kernel.get_sphere"]], "gettempdir() (in module dipy.denoise.enhancement_kernel)": [[172, "dipy.denoise.enhancement_kernel.gettempdir"]], "gibbs_removal() (in module dipy.denoise.gibbs)": [[172, "dipy.denoise.gibbs.gibbs_removal"]], "localpca() (in module dipy.denoise.localpca)": [[172, "dipy.denoise.localpca.localpca"]], "mirror() (dipy.denoise.enhancement_kernel.hemisphere method)": [[172, "dipy.denoise.enhancement_kernel.HemiSphere.mirror"]], "mppca() (in module dipy.denoise.localpca)": [[172, "dipy.denoise.localpca.mppca"]], "nlmeans() (in module dipy.denoise.nlmeans)": [[172, "dipy.denoise.nlmeans.nlmeans"]], "nlmeans_3d() (in module dipy.denoise.denspeed)": [[172, "dipy.denoise.denspeed.nlmeans_3d"]], "nlmeans_block() (in module dipy.denoise.nlmeans_block)": [[172, "dipy.denoise.nlmeans_block.nlmeans_block"]], "non_local_means() (in module dipy.denoise.non_local_means)": [[172, "dipy.denoise.non_local_means.non_local_means"]], "patch2self() (in module dipy.denoise.patch2self)": [[172, "dipy.denoise.patch2self.patch2self"]], "pca_noise_estimate() (in module dipy.denoise.pca_noise_estimate)": [[172, "dipy.denoise.pca_noise_estimate.pca_noise_estimate"]], "piesno() (in module dipy.denoise.noise_estimate)": [[172, "dipy.denoise.noise_estimate.piesno"]], "remove_padding() (in module dipy.denoise.denspeed)": [[172, "dipy.denoise.denspeed.remove_padding"]], "sf_to_sh() (in module dipy.denoise.shift_twist_convolution)": [[172, "dipy.denoise.shift_twist_convolution.sf_to_sh"]], "sh_to_sf() (in module dipy.denoise.shift_twist_convolution)": [[172, "dipy.denoise.shift_twist_convolution.sh_to_sf"]], "subdivide() (dipy.denoise.enhancement_kernel.hemisphere method)": [[172, "dipy.denoise.enhancement_kernel.HemiSphere.subdivide"]], "subdivide() (dipy.denoise.enhancement_kernel.sphere method)": [[172, "dipy.denoise.enhancement_kernel.Sphere.subdivide"]], "upfir() (in module dipy.denoise.nlmeans_block)": [[172, "dipy.denoise.nlmeans_block.upfir"]], "vertices() (dipy.denoise.enhancement_kernel.sphere method)": [[172, "dipy.denoise.enhancement_kernel.Sphere.vertices"]], "warn() (in module dipy.denoise.pca_noise_estimate)": [[172, "dipy.denoise.pca_noise_estimate.warn"]], "x (dipy.denoise.enhancement_kernel.sphere property)": [[172, "dipy.denoise.enhancement_kernel.Sphere.x"]], "y (dipy.denoise.enhancement_kernel.sphere property)": [[172, "dipy.denoise.enhancement_kernel.Sphere.y"]], "z (dipy.denoise.enhancement_kernel.sphere property)": [[172, "dipy.denoise.enhancement_kernel.Sphere.z"]], "basedirectiongetter (class in dipy.direction.closest_peak_direction_getter)": [[173, "dipy.direction.closest_peak_direction_getter.BaseDirectionGetter"]], "basepmfdirectiongetter (class in dipy.direction.closest_peak_direction_getter)": [[173, "dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter"]], "bootdirectiongetter (class in dipy.direction.bootstrap_direction_getter)": [[173, "dipy.direction.bootstrap_direction_getter.BootDirectionGetter"]], "bootpmfgen (class in dipy.direction.bootstrap_direction_getter)": [[173, "dipy.direction.bootstrap_direction_getter.BootPmfGen"]], "bootpmfgen (class in dipy.direction.pmf)": [[173, "dipy.direction.pmf.BootPmfGen"]], "closestpeakdirectiongetter (class in dipy.direction.closest_peak_direction_getter)": [[173, "dipy.direction.closest_peak_direction_getter.ClosestPeakDirectionGetter"]], "deterministicmaximumdirectiongetter (class in dipy.direction.probabilistic_direction_getter)": [[173, "dipy.direction.probabilistic_direction_getter.DeterministicMaximumDirectionGetter"]], "pttdirectiongetter (class in dipy.direction.ptt_direction_getter)": [[173, "dipy.direction.ptt_direction_getter.PTTDirectionGetter"]], "peaksandmetrics (class in dipy.direction.peaks)": [[173, "dipy.direction.peaks.PeaksAndMetrics"]], "pmfgen (class in dipy.direction.pmf)": [[173, "dipy.direction.pmf.PmfGen"]], "pmfgendirectiongetter (class in dipy.direction.closest_peak_direction_getter)": [[173, "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter"]], "probabilisticdirectiongetter (class in dipy.direction.probabilistic_direction_getter)": [[173, "dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter"]], "shcoeffpmfgen (class in dipy.direction.pmf)": [[173, "dipy.direction.pmf.SHCoeffPmfGen"]], "simplepmfgen (class in dipy.direction.pmf)": [[173, "dipy.direction.pmf.SimplePmfGen"]], "__init__() (dipy.direction.bootstrap_direction_getter.bootdirectiongetter method)": [[173, "dipy.direction.bootstrap_direction_getter.BootDirectionGetter.__init__"]], "__init__() (dipy.direction.bootstrap_direction_getter.bootpmfgen method)": [[173, "dipy.direction.bootstrap_direction_getter.BootPmfGen.__init__"]], "__init__() (dipy.direction.closest_peak_direction_getter.basedirectiongetter method)": [[173, "dipy.direction.closest_peak_direction_getter.BaseDirectionGetter.__init__"]], "__init__() (dipy.direction.closest_peak_direction_getter.basepmfdirectiongetter method)": [[173, "dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter.__init__"]], "__init__() (dipy.direction.closest_peak_direction_getter.closestpeakdirectiongetter method)": [[173, "dipy.direction.closest_peak_direction_getter.ClosestPeakDirectionGetter.__init__"]], "__init__() (dipy.direction.closest_peak_direction_getter.pmfgendirectiongetter method)": [[173, "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.__init__"]], "__init__() (dipy.direction.peaks.peaksandmetrics method)": [[173, "dipy.direction.peaks.PeaksAndMetrics.__init__"]], "__init__() (dipy.direction.pmf.bootpmfgen method)": [[173, "dipy.direction.pmf.BootPmfGen.__init__"]], "__init__() (dipy.direction.pmf.pmfgen method)": [[173, "dipy.direction.pmf.PmfGen.__init__"]], "__init__() (dipy.direction.pmf.shcoeffpmfgen method)": [[173, "dipy.direction.pmf.SHCoeffPmfGen.__init__"]], "__init__() (dipy.direction.pmf.simplepmfgen method)": [[173, "dipy.direction.pmf.SimplePmfGen.__init__"]], "__init__() (dipy.direction.probabilistic_direction_getter.deterministicmaximumdirectiongetter method)": [[173, "dipy.direction.probabilistic_direction_getter.DeterministicMaximumDirectionGetter.__init__"]], "__init__() (dipy.direction.probabilistic_direction_getter.probabilisticdirectiongetter method)": [[173, "dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter.__init__"]], "__init__() (dipy.direction.ptt_direction_getter.pttdirectiongetter method)": [[173, "dipy.direction.ptt_direction_getter.PTTDirectionGetter.__init__"]], "dipy.direction": [[173, "module-dipy.direction"]], "dipy.direction.bootstrap_direction_getter": [[173, "module-dipy.direction.bootstrap_direction_getter"]], "dipy.direction.closest_peak_direction_getter": [[173, "module-dipy.direction.closest_peak_direction_getter"]], "dipy.direction.peaks": [[173, "module-dipy.direction.peaks"]], "dipy.direction.pmf": [[173, "module-dipy.direction.pmf"]], "dipy.direction.probabilistic_direction_getter": [[173, "module-dipy.direction.probabilistic_direction_getter"]], "dipy.direction.ptt_direction_getter": [[173, "module-dipy.direction.ptt_direction_getter"]], "from_data() (dipy.direction.bootstrap_direction_getter.bootdirectiongetter class method)": [[173, "dipy.direction.bootstrap_direction_getter.BootDirectionGetter.from_data"]], "from_pmf() (dipy.direction.closest_peak_direction_getter.pmfgendirectiongetter class method)": [[173, "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.from_pmf"]], "from_shcoeff() (dipy.direction.closest_peak_direction_getter.pmfgendirectiongetter class method)": [[173, "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.from_shcoeff"]], "generate_streamline() (dipy.direction.ptt_direction_getter.pttdirectiongetter method)": [[173, "dipy.direction.ptt_direction_getter.PTTDirectionGetter.generate_streamline"]], "get_pmf() (dipy.direction.bootstrap_direction_getter.bootpmfgen method)": [[173, "dipy.direction.bootstrap_direction_getter.BootPmfGen.get_pmf"]], "get_pmf() (dipy.direction.pmf.bootpmfgen method)": [[173, "dipy.direction.pmf.BootPmfGen.get_pmf"]], "get_pmf() (dipy.direction.pmf.pmfgen method)": [[173, "dipy.direction.pmf.PmfGen.get_pmf"]], "get_pmf() (dipy.direction.pmf.shcoeffpmfgen method)": [[173, "dipy.direction.pmf.SHCoeffPmfGen.get_pmf"]], "get_pmf() (dipy.direction.pmf.simplepmfgen method)": [[173, "dipy.direction.pmf.SimplePmfGen.get_pmf"]], "get_pmf_no_boot() (dipy.direction.bootstrap_direction_getter.bootpmfgen method)": [[173, "dipy.direction.bootstrap_direction_getter.BootPmfGen.get_pmf_no_boot"]], "get_pmf_no_boot() (dipy.direction.pmf.bootpmfgen method)": [[173, "dipy.direction.pmf.BootPmfGen.get_pmf_no_boot"]], "get_pmf_value() (dipy.direction.pmf.pmfgen method)": [[173, "dipy.direction.pmf.PmfGen.get_pmf_value"]], "get_pmf_value() (dipy.direction.pmf.simplepmfgen method)": [[173, "dipy.direction.pmf.SimplePmfGen.get_pmf_value"]], "initial_direction() (dipy.direction.closest_peak_direction_getter.basepmfdirectiongetter method)": [[173, "dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter.initial_direction"]], "min_radius_curvature_from_angle() (in module dipy.direction.ptt_direction_getter)": [[173, "dipy.direction.ptt_direction_getter.min_radius_curvature_from_angle"]], "peak_directions() (in module dipy.direction.closest_peak_direction_getter)": [[173, "dipy.direction.closest_peak_direction_getter.peak_directions"]], "peak_directions() (in module dipy.direction.peaks)": [[173, "dipy.direction.peaks.peak_directions"]], "peak_directions_nl() (in module dipy.direction.peaks)": [[173, "dipy.direction.peaks.peak_directions_nl"]], "peaks_from_model() (in module dipy.direction.peaks)": [[173, "dipy.direction.peaks.peaks_from_model"]], "random() (in module dipy.direction.probabilistic_direction_getter)": [[173, "dipy.direction.probabilistic_direction_getter.random"]], "reshape_peaks_for_visualization() (in module dipy.direction.peaks)": [[173, "dipy.direction.peaks.reshape_peaks_for_visualization"]], "dpy (class in dipy.io.dpy)": [[174, "dipy.io.dpy.Dpy"]], "nifti (dipy.io.stateful_tractogram.origin attribute)": [[174, "dipy.io.stateful_tractogram.Origin.NIFTI"]], "origin (class in dipy.io.stateful_tractogram)": [[174, "dipy.io.stateful_tractogram.Origin"]], "rasmm (dipy.io.stateful_tractogram.space attribute)": [[174, "dipy.io.stateful_tractogram.Space.RASMM"]], "space (class in dipy.io.stateful_tractogram)": [[174, "dipy.io.stateful_tractogram.Space"]], "statefultractogram (class in dipy.io.stateful_tractogram)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram"]], "trackvis (dipy.io.stateful_tractogram.origin attribute)": [[174, "dipy.io.stateful_tractogram.Origin.TRACKVIS"]], "vox (dipy.io.stateful_tractogram.space attribute)": [[174, "dipy.io.stateful_tractogram.Space.VOX"]], "voxmm (dipy.io.stateful_tractogram.space attribute)": [[174, "dipy.io.stateful_tractogram.Space.VOXMM"]], "__init__() (dipy.io.dpy.dpy method)": [[174, "dipy.io.dpy.Dpy.__init__"]], "__init__() (dipy.io.stateful_tractogram.origin method)": [[174, "dipy.io.stateful_tractogram.Origin.__init__"]], "__init__() (dipy.io.stateful_tractogram.space method)": [[174, "dipy.io.stateful_tractogram.Space.__init__"]], "__init__() (dipy.io.stateful_tractogram.statefultractogram method)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.__init__"]], "affine (dipy.io.stateful_tractogram.statefultractogram property)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.affine"]], "are_compatible() (dipy.io.stateful_tractogram.statefultractogram static method)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.are_compatible"]], "close() (dipy.io.dpy.dpy method)": [[174, "dipy.io.dpy.Dpy.close"]], "compute_bounding_box() (dipy.io.stateful_tractogram.statefultractogram method)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.compute_bounding_box"]], "create_nifti_header() (in module dipy.io.utils)": [[174, "dipy.io.utils.create_nifti_header"]], "create_tractogram_header() (in module dipy.io.utils)": [[174, "dipy.io.utils.create_tractogram_header"]], "data_per_point (dipy.io.stateful_tractogram.statefultractogram property)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.data_per_point"]], "data_per_streamline (dipy.io.stateful_tractogram.statefultractogram property)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.data_per_streamline"]], "decfa() (in module dipy.io.utils)": [[174, "dipy.io.utils.decfa"]], "decfa_to_float() (in module dipy.io.utils)": [[174, "dipy.io.utils.decfa_to_float"]], "dimensions (dipy.io.stateful_tractogram.statefultractogram property)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.dimensions"]], "dipy.io": [[174, "module-dipy.io"]], "dipy.io.bvectxt": [[174, "module-dipy.io.bvectxt"]], "dipy.io.dpy": [[174, "module-dipy.io.dpy"]], "dipy.io.gradients": [[174, "module-dipy.io.gradients"]], "dipy.io.image": [[174, "module-dipy.io.image"]], "dipy.io.peaks": [[174, "module-dipy.io.peaks"]], "dipy.io.pickles": [[174, "module-dipy.io.pickles"]], "dipy.io.stateful_tractogram": [[174, "module-dipy.io.stateful_tractogram"]], "dipy.io.streamline": [[174, "module-dipy.io.streamline"]], "dipy.io.utils": [[174, "module-dipy.io.utils"]], "dipy.io.vtk": [[174, "module-dipy.io.vtk"]], "dtype_dict (dipy.io.stateful_tractogram.statefultractogram property)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.dtype_dict"]], "from_sft() (dipy.io.stateful_tractogram.statefultractogram static method)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.from_sft"]], "get_data_per_point_keys() (dipy.io.stateful_tractogram.statefultractogram method)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.get_data_per_point_keys"]], "get_data_per_streamline_keys() (dipy.io.stateful_tractogram.statefultractogram method)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.get_data_per_streamline_keys"]], "get_reference_info() (in module dipy.io.utils)": [[174, "dipy.io.utils.get_reference_info"]], "get_streamlines_copy() (dipy.io.stateful_tractogram.statefultractogram method)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.get_streamlines_copy"]], "is_bbox_in_vox_valid() (dipy.io.stateful_tractogram.statefultractogram method)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.is_bbox_in_vox_valid"]], "is_header_compatible() (in module dipy.io.utils)": [[174, "dipy.io.utils.is_header_compatible"]], "is_reference_info_valid() (in module dipy.io.utils)": [[174, "dipy.io.utils.is_reference_info_valid"]], "load_dpy() (in module dipy.io.streamline)": [[174, "dipy.io.streamline.load_dpy"]], "load_fib() (in module dipy.io.streamline)": [[174, "dipy.io.streamline.load_fib"]], "load_generator() (in module dipy.io.streamline)": [[174, "dipy.io.streamline.load_generator"]], "load_nifti() (in module dipy.io.image)": [[174, "dipy.io.image.load_nifti"]], "load_nifti_data() (in module dipy.io.image)": [[174, "dipy.io.image.load_nifti_data"]], "load_peaks() (in module dipy.io.peaks)": [[174, "dipy.io.peaks.load_peaks"]], "load_pickle() (in module dipy.io.pickles)": [[174, "dipy.io.pickles.load_pickle"]], "load_polydata() (in module dipy.io.vtk)": [[174, "dipy.io.vtk.load_polydata"]], "load_tck() (in module dipy.io.streamline)": [[174, "dipy.io.streamline.load_tck"]], "load_tractogram() (in module dipy.io.streamline)": [[174, "dipy.io.streamline.load_tractogram"]], "load_trk() (in module dipy.io.streamline)": [[174, "dipy.io.streamline.load_trk"]], "load_vtk() (in module dipy.io.streamline)": [[174, "dipy.io.streamline.load_vtk"]], "load_vtk_streamlines() (in module dipy.io.vtk)": [[174, "dipy.io.vtk.load_vtk_streamlines"]], "load_vtp() (in module dipy.io.streamline)": [[174, "dipy.io.streamline.load_vtp"]], "logger() (in module dipy.io.stateful_tractogram)": [[174, "dipy.io.stateful_tractogram.logger"]], "make5d() (in module dipy.io.utils)": [[174, "dipy.io.utils.make5d"]], "nifti1_symmat() (in module dipy.io.utils)": [[174, "dipy.io.utils.nifti1_symmat"]], "orientation_from_string() (in module dipy.io.bvectxt)": [[174, "dipy.io.bvectxt.orientation_from_string"]], "orientation_to_string() (in module dipy.io.bvectxt)": [[174, "dipy.io.bvectxt.orientation_to_string"]], "origin (dipy.io.stateful_tractogram.statefultractogram property)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.origin"]], "ornt_mapping() (in module dipy.io.bvectxt)": [[174, "dipy.io.bvectxt.ornt_mapping"]], "peaks_to_niftis() (in module dipy.io.peaks)": [[174, "dipy.io.peaks.peaks_to_niftis"]], "read_bvals_bvecs() (in module dipy.io.gradients)": [[174, "dipy.io.gradients.read_bvals_bvecs"]], "read_bvec_file() (in module dipy.io.bvectxt)": [[174, "dipy.io.bvectxt.read_bvec_file"]], "read_img_arr_or_path() (in module dipy.io.utils)": [[174, "dipy.io.utils.read_img_arr_or_path"]], "read_track() (dipy.io.dpy.dpy method)": [[174, "dipy.io.dpy.Dpy.read_track"]], "read_tracks() (dipy.io.dpy.dpy method)": [[174, "dipy.io.dpy.Dpy.read_tracks"]], "read_tracksi() (dipy.io.dpy.dpy method)": [[174, "dipy.io.dpy.Dpy.read_tracksi"]], "remove_invalid_streamlines() (dipy.io.stateful_tractogram.statefultractogram method)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.remove_invalid_streamlines"]], "reorient_on_axis() (in module dipy.io.bvectxt)": [[174, "dipy.io.bvectxt.reorient_on_axis"]], "reorient_vectors() (in module dipy.io.bvectxt)": [[174, "dipy.io.bvectxt.reorient_vectors"]], "save_buan_profiles_hdf5() (in module dipy.io.utils)": [[174, "dipy.io.utils.save_buan_profiles_hdf5"]], "save_dpy() (in module dipy.io.streamline)": [[174, "dipy.io.streamline.save_dpy"]], "save_fib() (in module dipy.io.streamline)": [[174, "dipy.io.streamline.save_fib"]], "save_generator() (in module dipy.io.streamline)": [[174, "dipy.io.streamline.save_generator"]], "save_nifti() (in module dipy.io.image)": [[174, "dipy.io.image.save_nifti"]], "save_peaks() (in module dipy.io.peaks)": [[174, "dipy.io.peaks.save_peaks"]], "save_pickle() (in module dipy.io.pickles)": [[174, "dipy.io.pickles.save_pickle"]], "save_polydata() (in module dipy.io.vtk)": [[174, "dipy.io.vtk.save_polydata"]], "save_qa_metric() (in module dipy.io.image)": [[174, "dipy.io.image.save_qa_metric"]], "save_tck() (in module dipy.io.streamline)": [[174, "dipy.io.streamline.save_tck"]], "save_tractogram() (in module dipy.io.streamline)": [[174, "dipy.io.streamline.save_tractogram"]], "save_trk() (in module dipy.io.streamline)": [[174, "dipy.io.streamline.save_trk"]], "save_vtk() (in module dipy.io.streamline)": [[174, "dipy.io.streamline.save_vtk"]], "save_vtk_streamlines() (in module dipy.io.vtk)": [[174, "dipy.io.vtk.save_vtk_streamlines"]], "save_vtp() (in module dipy.io.streamline)": [[174, "dipy.io.streamline.save_vtp"]], "set_sft_logger_level() (in module dipy.io.stateful_tractogram)": [[174, "dipy.io.stateful_tractogram.set_sft_logger_level"]], "space (dipy.io.stateful_tractogram.statefultractogram property)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.space"]], "space_attributes (dipy.io.stateful_tractogram.statefultractogram property)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.space_attributes"]], "streamlines (dipy.io.stateful_tractogram.statefultractogram property)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.streamlines"]], "to_center() (dipy.io.stateful_tractogram.statefultractogram method)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.to_center"]], "to_corner() (dipy.io.stateful_tractogram.statefultractogram method)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.to_corner"]], "to_origin() (dipy.io.stateful_tractogram.statefultractogram method)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.to_origin"]], "to_rasmm() (dipy.io.stateful_tractogram.statefultractogram method)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.to_rasmm"]], "to_space() (dipy.io.stateful_tractogram.statefultractogram method)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.to_space"]], "to_vox() (dipy.io.stateful_tractogram.statefultractogram method)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.to_vox"]], "to_voxmm() (dipy.io.stateful_tractogram.statefultractogram method)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.to_voxmm"]], "version() (dipy.io.dpy.dpy method)": [[174, "dipy.io.dpy.Dpy.version"]], "voxel_order (dipy.io.stateful_tractogram.statefultractogram property)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.voxel_order"]], "voxel_sizes (dipy.io.stateful_tractogram.statefultractogram property)": [[174, "dipy.io.stateful_tractogram.StatefulTractogram.voxel_sizes"]], "write_track() (dipy.io.dpy.dpy method)": [[174, "dipy.io.dpy.Dpy.write_track"]], "write_tracks() (dipy.io.dpy.dpy method)": [[174, "dipy.io.dpy.Dpy.write_tracks"]], "block (class in dipy.nn.evac)": [[175, "dipy.nn.evac.Block"]], "channelsum (class in dipy.nn.evac)": [[175, "dipy.nn.evac.ChannelSum"]], "cnn1ddenoiser (class in dipy.nn.cnn_1d_denoising)": [[175, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser"]], "decoderblock (class in dipy.nn.synb0)": [[175, "dipy.nn.synb0.DecoderBlock"], [175, "id69"]], "evacplus (class in dipy.nn.evac)": [[175, "dipy.nn.evac.EVACPlus"]], "encoderblock (class in dipy.nn.synb0)": [[175, "dipy.nn.synb0.EncoderBlock"], [175, "id0"]], "historesdnn (class in dipy.nn.histo_resdnn)": [[175, "dipy.nn.histo_resdnn.HistoResDNN"]], "multiplelayerpercepton (class in dipy.nn.model)": [[175, "dipy.nn.model.MultipleLayerPercepton"]], "singlelayerperceptron (class in dipy.nn.model)": [[175, "dipy.nn.model.SingleLayerPerceptron"]], "synb0 (class in dipy.nn.synb0)": [[175, "dipy.nn.synb0.Synb0"]], "unet3d() (in module dipy.nn.synb0)": [[175, "dipy.nn.synb0.UNet3D"], [175, "id90"]], "__init__() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[175, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.__init__"]], "__init__() (dipy.nn.evac.block method)": [[175, "dipy.nn.evac.Block.__init__"]], "__init__() (dipy.nn.evac.channelsum method)": [[175, "dipy.nn.evac.ChannelSum.__init__"]], "__init__() (dipy.nn.evac.evacplus method)": [[175, "dipy.nn.evac.EVACPlus.__init__"]], "__init__() (dipy.nn.histo_resdnn.historesdnn method)": [[175, "dipy.nn.histo_resdnn.HistoResDNN.__init__"]], "__init__() (dipy.nn.model.multiplelayerpercepton method)": [[175, "dipy.nn.model.MultipleLayerPercepton.__init__"]], "__init__() (dipy.nn.model.singlelayerperceptron method)": [[175, "dipy.nn.model.SingleLayerPerceptron.__init__"]], "__init__() (dipy.nn.synb0.decoderblock method)": [[175, "dipy.nn.synb0.DecoderBlock.__init__"], [175, "id70"]], "__init__() (dipy.nn.synb0.encoderblock method)": [[175, "dipy.nn.synb0.EncoderBlock.__init__"], [175, "id62"]], "__init__() (dipy.nn.synb0.synb0 method)": [[175, "dipy.nn.synb0.Synb0.__init__"]], "call() (dipy.nn.evac.block method)": [[175, "dipy.nn.evac.Block.call"]], "call() (dipy.nn.evac.channelsum method)": [[175, "dipy.nn.evac.ChannelSum.call"]], "call() (dipy.nn.synb0.decoderblock method)": [[175, "dipy.nn.synb0.DecoderBlock.call"], [175, "id71"]], "call() (dipy.nn.synb0.encoderblock method)": [[175, "dipy.nn.synb0.EncoderBlock.call"], [175, "id63"]], "compile() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[175, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.compile"]], "dipy.nn": [[175, "module-dipy.nn"]], "dipy.nn.cnn_1d_denoising": [[175, "module-dipy.nn.cnn_1d_denoising"]], "dipy.nn.evac": [[175, "module-dipy.nn.evac"]], "dipy.nn.histo_resdnn": [[175, "module-dipy.nn.histo_resdnn"]], "dipy.nn.model": [[175, "module-dipy.nn.model"]], "dipy.nn.synb0": [[175, "module-dipy.nn.synb0"]], "dipy.nn.utils": [[175, "module-dipy.nn.utils"]], "evaluate() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[175, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.evaluate"]], "evaluate() (dipy.nn.model.multiplelayerpercepton method)": [[175, "dipy.nn.model.MultipleLayerPercepton.evaluate"]], "evaluate() (dipy.nn.model.singlelayerperceptron method)": [[175, "dipy.nn.model.SingleLayerPerceptron.evaluate"]], "fetch_default_weights() (dipy.nn.evac.evacplus method)": [[175, "dipy.nn.evac.EVACPlus.fetch_default_weights"]], "fetch_default_weights() (dipy.nn.histo_resdnn.historesdnn method)": [[175, "dipy.nn.histo_resdnn.HistoResDNN.fetch_default_weights"]], "fetch_default_weights() (dipy.nn.synb0.synb0 method)": [[175, "dipy.nn.synb0.Synb0.fetch_default_weights"]], "fit() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[175, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.fit"]], "fit() (dipy.nn.model.multiplelayerpercepton method)": [[175, "dipy.nn.model.MultipleLayerPercepton.fit"]], "fit() (dipy.nn.model.singlelayerperceptron method)": [[175, "dipy.nn.model.SingleLayerPerceptron.fit"]], "init_model() (in module dipy.nn.evac)": [[175, "dipy.nn.evac.init_model"]], "load_model_weights() (dipy.nn.evac.evacplus method)": [[175, "dipy.nn.evac.EVACPlus.load_model_weights"]], "load_model_weights() (dipy.nn.histo_resdnn.historesdnn method)": [[175, "dipy.nn.histo_resdnn.HistoResDNN.load_model_weights"]], "load_model_weights() (dipy.nn.synb0.synb0 method)": [[175, "dipy.nn.synb0.Synb0.load_model_weights"]], "load_weights() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[175, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.load_weights"]], "logger() (in module dipy.nn.evac)": [[175, "dipy.nn.evac.logger"]], "logger() (in module dipy.nn.histo_resdnn)": [[175, "dipy.nn.histo_resdnn.logger"]], "logger() (in module dipy.nn.synb0)": [[175, "dipy.nn.synb0.logger"]], "normalize() (in module dipy.nn.synb0)": [[175, "dipy.nn.synb0.normalize"]], "normalize() (in module dipy.nn.utils)": [[175, "dipy.nn.utils.normalize"]], "predict() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[175, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.predict"]], "predict() (dipy.nn.evac.evacplus method)": [[175, "dipy.nn.evac.EVACPlus.predict"]], "predict() (dipy.nn.histo_resdnn.historesdnn method)": [[175, "dipy.nn.histo_resdnn.HistoResDNN.predict"]], "predict() (dipy.nn.model.multiplelayerpercepton method)": [[175, "dipy.nn.model.MultipleLayerPercepton.predict"]], "predict() (dipy.nn.model.singlelayerperceptron method)": [[175, "dipy.nn.model.SingleLayerPerceptron.predict"]], "predict() (dipy.nn.synb0.synb0 method)": [[175, "dipy.nn.synb0.Synb0.predict"]], "prepare_img() (in module dipy.nn.evac)": [[175, "dipy.nn.evac.prepare_img"]], "recover_img() (in module dipy.nn.utils)": [[175, "dipy.nn.utils.recover_img"]], "save_weights() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[175, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.save_weights"]], "set_logger_level() (in module dipy.nn.utils)": [[175, "dipy.nn.utils.set_logger_level"]], "summary() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[175, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.summary"]], "summary() (dipy.nn.model.multiplelayerpercepton method)": [[175, "dipy.nn.model.MultipleLayerPercepton.summary"]], "summary() (dipy.nn.model.singlelayerperceptron method)": [[175, "dipy.nn.model.SingleLayerPerceptron.summary"]], "train_test_split() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[175, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.train_test_split"]], "transform_img() (in module dipy.nn.utils)": [[175, "dipy.nn.utils.transform_img"]], "unnormalize() (in module dipy.nn.synb0)": [[175, "dipy.nn.synb0.unnormalize"]], "unnormalize() (in module dipy.nn.utils)": [[175, "dipy.nn.utils.unnormalize"]], "axsymshresponse (class in dipy.reconst.csdeconv)": [[176, "dipy.reconst.csdeconv.AxSymShResponse"]], "cache (class in dipy.reconst.cache)": [[176, "dipy.reconst.cache.Cache"]], "callablearray (class in dipy.reconst.multi_voxel)": [[176, "dipy.reconst.multi_voxel.CallableArray"]], "constrainedsdtmodel (class in dipy.reconst.csdeconv)": [[176, "dipy.reconst.csdeconv.ConstrainedSDTModel"]], "constrainedsphericaldeconvmodel (class in dipy.reconst.csdeconv)": [[176, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel"]], "correlationtensorfit (class in dipy.reconst.cti)": [[176, "dipy.reconst.cti.CorrelationTensorFit"]], "correlationtensormodel (class in dipy.reconst.cti)": [[176, "dipy.reconst.cti.CorrelationTensorModel"]], "csaodfmodel (class in dipy.reconst.shm)": [[176, "dipy.reconst.shm.CsaOdfModel"]], "d (dipy.reconst.ivim.ivimfit property)": [[176, "dipy.reconst.ivim.IvimFit.D"]], "d_star (dipy.reconst.ivim.ivimfit property)": [[176, "dipy.reconst.ivim.IvimFit.D_star"]], "diffusionkurtosisfit (class in dipy.reconst.dki)": [[176, "dipy.reconst.dki.DiffusionKurtosisFit"]], "diffusionkurtosismodel (class in dipy.reconst.dki)": [[176, "dipy.reconst.dki.DiffusionKurtosisModel"]], "diffusionspectrumdeconvfit (class in dipy.reconst.dsi)": [[176, "dipy.reconst.dsi.DiffusionSpectrumDeconvFit"]], "diffusionspectrumdeconvmodel (class in dipy.reconst.dsi)": [[176, "dipy.reconst.dsi.DiffusionSpectrumDeconvModel"]], "diffusionspectrumfit (class in dipy.reconst.dsi)": [[176, "dipy.reconst.dsi.DiffusionSpectrumFit"]], "diffusionspectrummodel (class in dipy.reconst.dsi)": [[176, "dipy.reconst.dsi.DiffusionSpectrumModel"]], "eudxdirectiongetter (class in dipy.reconst.eudx_direction_getter)": [[176, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter"]], "exponentialisotropicfit (class in dipy.reconst.sfm)": [[176, "dipy.reconst.sfm.ExponentialIsotropicFit"]], "exponentialisotropicmodel (class in dipy.reconst.sfm)": [[176, "dipy.reconst.sfm.ExponentialIsotropicModel"]], "forecastfit (class in dipy.reconst.forecast)": [[176, "dipy.reconst.forecast.ForecastFit"]], "forecastmodel (class in dipy.reconst.forecast)": [[176, "dipy.reconst.forecast.ForecastModel"]], "freewatertensorfit (class in dipy.reconst.fwdti)": [[176, "dipy.reconst.fwdti.FreeWaterTensorFit"]], "freewatertensormodel (class in dipy.reconst.fwdti)": [[176, "dipy.reconst.fwdti.FreeWaterTensorModel"]], "gcv_cost_function() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.GCV_cost_function"]], "generalizedqsamplingfit (class in dipy.reconst.gqi)": [[176, "dipy.reconst.gqi.GeneralizedQSamplingFit"]], "generalizedqsamplingmodel (class in dipy.reconst.gqi)": [[176, "dipy.reconst.gqi.GeneralizedQSamplingModel"]], "h() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.H"]], "isotropicfit (class in dipy.reconst.sfm)": [[176, "dipy.reconst.sfm.IsotropicFit"]], "isotropicmodel (class in dipy.reconst.sfm)": [[176, "dipy.reconst.sfm.IsotropicModel"]], "ivimfit (class in dipy.reconst.ivim)": [[176, "dipy.reconst.ivim.IvimFit"]], "ivimmodeltrr (class in dipy.reconst.ivim)": [[176, "dipy.reconst.ivim.IvimModelTRR"]], "ivimmodelvp (class in dipy.reconst.ivim)": [[176, "dipy.reconst.ivim.IvimModelVP"]], "k_aniso (dipy.reconst.cti.correlationtensorfit property)": [[176, "dipy.reconst.cti.CorrelationTensorFit.K_aniso"]], "k_iso (dipy.reconst.cti.correlationtensorfit property)": [[176, "dipy.reconst.cti.CorrelationTensorFit.K_iso"]], "k_micro (dipy.reconst.cti.correlationtensorfit property)": [[176, "dipy.reconst.cti.CorrelationTensorFit.K_micro"]], "k_total() (dipy.reconst.cti.correlationtensorfit method)": [[176, "dipy.reconst.cti.CorrelationTensorFit.K_total"]], "kurtosismicrostructuralfit (class in dipy.reconst.dki_micro)": [[176, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit"]], "kurtosismicrostructuremodel (class in dipy.reconst.dki_micro)": [[176, "dipy.reconst.dki_micro.KurtosisMicrostructureModel"]], "lr_deconv() (in module dipy.reconst.dsi)": [[176, "dipy.reconst.dsi.LR_deconv"]], "msdeconvfit (class in dipy.reconst.mcsd)": [[176, "dipy.reconst.mcsd.MSDeconvFit"]], "mapmrifit (class in dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.MapmriFit"]], "mapmrimodel (class in dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.MapmriModel"]], "meandiffusionkurtosisfit (class in dipy.reconst.msdki)": [[176, "dipy.reconst.msdki.MeanDiffusionKurtosisFit"]], "meandiffusionkurtosismodel (class in dipy.reconst.msdki)": [[176, "dipy.reconst.msdki.MeanDiffusionKurtosisModel"]], "multishelldeconvmodel (class in dipy.reconst.mcsd)": [[176, "dipy.reconst.mcsd.MultiShellDeconvModel"]], "multishellresponse (class in dipy.reconst.mcsd)": [[176, "dipy.reconst.mcsd.MultiShellResponse"]], "multivoxelfit (class in dipy.reconst.multi_voxel)": [[176, "dipy.reconst.multi_voxel.MultiVoxelFit"]], "odffit (class in dipy.reconst.odf)": [[176, "dipy.reconst.odf.OdfFit"]], "odfmodel (class in dipy.reconst.odf)": [[176, "dipy.reconst.odf.OdfModel"]], "opdtmodel (class in dipy.reconst.shm)": [[176, "dipy.reconst.shm.OpdtModel"]], "qballbasemodel (class in dipy.reconst.shm)": [[176, "dipy.reconst.shm.QballBaseModel"]], "qballmodel (class in dipy.reconst.shm)": [[176, "dipy.reconst.shm.QballModel"]], "qpfitter (class in dipy.reconst.mcsd)": [[176, "dipy.reconst.mcsd.QpFitter"]], "qtdmrifit (class in dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.QtdmriFit"]], "qtdmrimodel (class in dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.QtdmriModel"]], "qtifit (class in dipy.reconst.qti)": [[176, "dipy.reconst.qti.QtiFit"]], "qtimodel (class in dipy.reconst.qti)": [[176, "dipy.reconst.qti.QtiModel"]], "reconstfit (class in dipy.reconst.base)": [[176, "dipy.reconst.base.ReconstFit"]], "reconstmodel (class in dipy.reconst.base)": [[176, "dipy.reconst.base.ReconstModel"]], "residualbootstrapwrapper (class in dipy.reconst.shm)": [[176, "dipy.reconst.shm.ResidualBootstrapWrapper"]], "rumbafit (class in dipy.reconst.rumba)": [[176, "dipy.reconst.rumba.RumbaFit"]], "rumbasdmodel (class in dipy.reconst.rumba)": [[176, "dipy.reconst.rumba.RumbaSDModel"]], "s0_hat (dipy.reconst.dti.tensorfit property)": [[176, "dipy.reconst.dti.TensorFit.S0_hat"]], "s0_hat (dipy.reconst.msdki.meandiffusionkurtosisfit property)": [[176, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.S0_hat"]], "s0_hat() (dipy.reconst.qti.qtifit method)": [[176, "dipy.reconst.qti.QtiFit.S0_hat"]], "s0_predicted (dipy.reconst.ivim.ivimfit property)": [[176, "dipy.reconst.ivim.IvimFit.S0_predicted"]], "shorefit (class in dipy.reconst.shore)": [[176, "dipy.reconst.shore.ShoreFit"]], "shoremodel (class in dipy.reconst.shore)": [[176, "dipy.reconst.shore.ShoreModel"]], "sparsefasciclefit (class in dipy.reconst.sfm)": [[176, "dipy.reconst.sfm.SparseFascicleFit"]], "sparsefasciclemodel (class in dipy.reconst.sfm)": [[176, "dipy.reconst.sfm.SparseFascicleModel"]], "sphharmfit (class in dipy.reconst.shm)": [[176, "dipy.reconst.shm.SphHarmFit"]], "sphharmmodel (class in dipy.reconst.shm)": [[176, "dipy.reconst.shm.SphHarmModel"]], "tensorfit (class in dipy.reconst.dti)": [[176, "dipy.reconst.dti.TensorFit"]], "tensormodel (class in dipy.reconst.dti)": [[176, "dipy.reconst.dti.TensorModel"]], "wcons() (in module dipy.reconst.dki)": [[176, "dipy.reconst.dki.Wcons"]], "wrotate() (in module dipy.reconst.dki)": [[176, "dipy.reconst.dki.Wrotate"]], "wrotate_element() (in module dipy.reconst.dki)": [[176, "dipy.reconst.dki.Wrotate_element"]], "__init__() (dipy.reconst.base.reconstfit method)": [[176, "dipy.reconst.base.ReconstFit.__init__"]], "__init__() (dipy.reconst.base.reconstmodel method)": [[176, "dipy.reconst.base.ReconstModel.__init__"]], "__init__() (dipy.reconst.cache.cache method)": [[176, "dipy.reconst.cache.Cache.__init__"]], "__init__() (dipy.reconst.csdeconv.axsymshresponse method)": [[176, "dipy.reconst.csdeconv.AxSymShResponse.__init__"]], "__init__() (dipy.reconst.csdeconv.constrainedsdtmodel method)": [[176, "dipy.reconst.csdeconv.ConstrainedSDTModel.__init__"]], "__init__() (dipy.reconst.csdeconv.constrainedsphericaldeconvmodel method)": [[176, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.__init__"]], "__init__() (dipy.reconst.cti.correlationtensorfit method)": [[176, "dipy.reconst.cti.CorrelationTensorFit.__init__"]], "__init__() (dipy.reconst.cti.correlationtensormodel method)": [[176, "dipy.reconst.cti.CorrelationTensorModel.__init__"]], "__init__() (dipy.reconst.dki.diffusionkurtosisfit method)": [[176, "dipy.reconst.dki.DiffusionKurtosisFit.__init__"]], "__init__() (dipy.reconst.dki.diffusionkurtosismodel method)": [[176, "dipy.reconst.dki.DiffusionKurtosisModel.__init__"]], "__init__() (dipy.reconst.dki_micro.kurtosismicrostructuralfit method)": [[176, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.__init__"]], "__init__() (dipy.reconst.dki_micro.kurtosismicrostructuremodel method)": [[176, "dipy.reconst.dki_micro.KurtosisMicrostructureModel.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrumdeconvfit method)": [[176, "dipy.reconst.dsi.DiffusionSpectrumDeconvFit.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrumdeconvmodel method)": [[176, "dipy.reconst.dsi.DiffusionSpectrumDeconvModel.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrumfit method)": [[176, "dipy.reconst.dsi.DiffusionSpectrumFit.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrummodel method)": [[176, "dipy.reconst.dsi.DiffusionSpectrumModel.__init__"]], "__init__() (dipy.reconst.dti.tensorfit method)": [[176, "dipy.reconst.dti.TensorFit.__init__"]], "__init__() (dipy.reconst.dti.tensormodel method)": [[176, "dipy.reconst.dti.TensorModel.__init__"]], "__init__() (dipy.reconst.eudx_direction_getter.eudxdirectiongetter method)": [[176, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.__init__"]], "__init__() (dipy.reconst.forecast.forecastfit method)": [[176, "dipy.reconst.forecast.ForecastFit.__init__"]], "__init__() (dipy.reconst.forecast.forecastmodel method)": [[176, "dipy.reconst.forecast.ForecastModel.__init__"]], "__init__() (dipy.reconst.fwdti.freewatertensorfit method)": [[176, "dipy.reconst.fwdti.FreeWaterTensorFit.__init__"]], "__init__() (dipy.reconst.fwdti.freewatertensormodel method)": [[176, "dipy.reconst.fwdti.FreeWaterTensorModel.__init__"]], "__init__() (dipy.reconst.gqi.generalizedqsamplingfit method)": [[176, "dipy.reconst.gqi.GeneralizedQSamplingFit.__init__"]], "__init__() (dipy.reconst.gqi.generalizedqsamplingmodel method)": [[176, "dipy.reconst.gqi.GeneralizedQSamplingModel.__init__"]], "__init__() (dipy.reconst.ivim.ivimfit method)": [[176, "dipy.reconst.ivim.IvimFit.__init__"]], "__init__() (dipy.reconst.ivim.ivimmodeltrr method)": [[176, "dipy.reconst.ivim.IvimModelTRR.__init__"]], "__init__() (dipy.reconst.ivim.ivimmodelvp method)": [[176, "dipy.reconst.ivim.IvimModelVP.__init__"]], "__init__() (dipy.reconst.mapmri.mapmrifit method)": [[176, "dipy.reconst.mapmri.MapmriFit.__init__"]], "__init__() (dipy.reconst.mapmri.mapmrimodel method)": [[176, "dipy.reconst.mapmri.MapmriModel.__init__"]], "__init__() (dipy.reconst.mcsd.msdeconvfit method)": [[176, "dipy.reconst.mcsd.MSDeconvFit.__init__"]], "__init__() (dipy.reconst.mcsd.multishelldeconvmodel method)": [[176, "dipy.reconst.mcsd.MultiShellDeconvModel.__init__"]], "__init__() (dipy.reconst.mcsd.multishellresponse method)": [[176, "dipy.reconst.mcsd.MultiShellResponse.__init__"]], "__init__() (dipy.reconst.mcsd.qpfitter method)": [[176, "dipy.reconst.mcsd.QpFitter.__init__"]], "__init__() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[176, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.__init__"]], "__init__() (dipy.reconst.msdki.meandiffusionkurtosismodel method)": [[176, "dipy.reconst.msdki.MeanDiffusionKurtosisModel.__init__"]], "__init__() (dipy.reconst.multi_voxel.callablearray method)": [[176, "dipy.reconst.multi_voxel.CallableArray.__init__"]], "__init__() (dipy.reconst.multi_voxel.multivoxelfit method)": [[176, "dipy.reconst.multi_voxel.MultiVoxelFit.__init__"]], "__init__() (dipy.reconst.odf.odffit method)": [[176, "dipy.reconst.odf.OdfFit.__init__"]], "__init__() (dipy.reconst.odf.odfmodel method)": [[176, "dipy.reconst.odf.OdfModel.__init__"]], "__init__() (dipy.reconst.qtdmri.qtdmrifit method)": [[176, "dipy.reconst.qtdmri.QtdmriFit.__init__"]], "__init__() (dipy.reconst.qtdmri.qtdmrimodel method)": [[176, "dipy.reconst.qtdmri.QtdmriModel.__init__"]], "__init__() (dipy.reconst.qti.qtifit method)": [[176, "dipy.reconst.qti.QtiFit.__init__"]], "__init__() (dipy.reconst.qti.qtimodel method)": [[176, "dipy.reconst.qti.QtiModel.__init__"]], "__init__() (dipy.reconst.rumba.rumbafit method)": [[176, "dipy.reconst.rumba.RumbaFit.__init__"]], "__init__() (dipy.reconst.rumba.rumbasdmodel method)": [[176, "dipy.reconst.rumba.RumbaSDModel.__init__"]], "__init__() (dipy.reconst.sfm.exponentialisotropicfit method)": [[176, "dipy.reconst.sfm.ExponentialIsotropicFit.__init__"]], "__init__() (dipy.reconst.sfm.exponentialisotropicmodel method)": [[176, "dipy.reconst.sfm.ExponentialIsotropicModel.__init__"]], "__init__() (dipy.reconst.sfm.isotropicfit method)": [[176, "dipy.reconst.sfm.IsotropicFit.__init__"]], "__init__() (dipy.reconst.sfm.isotropicmodel method)": [[176, "dipy.reconst.sfm.IsotropicModel.__init__"]], "__init__() (dipy.reconst.sfm.sparsefasciclefit method)": [[176, "dipy.reconst.sfm.SparseFascicleFit.__init__"]], "__init__() (dipy.reconst.sfm.sparsefasciclemodel method)": [[176, "dipy.reconst.sfm.SparseFascicleModel.__init__"]], "__init__() (dipy.reconst.shm.csaodfmodel method)": [[176, "dipy.reconst.shm.CsaOdfModel.__init__"]], "__init__() (dipy.reconst.shm.opdtmodel method)": [[176, "dipy.reconst.shm.OpdtModel.__init__"]], "__init__() (dipy.reconst.shm.qballbasemodel method)": [[176, "dipy.reconst.shm.QballBaseModel.__init__"]], "__init__() (dipy.reconst.shm.qballmodel method)": [[176, "dipy.reconst.shm.QballModel.__init__"]], "__init__() (dipy.reconst.shm.residualbootstrapwrapper method)": [[176, "dipy.reconst.shm.ResidualBootstrapWrapper.__init__"]], "__init__() (dipy.reconst.shm.sphharmfit method)": [[176, "dipy.reconst.shm.SphHarmFit.__init__"]], "__init__() (dipy.reconst.shm.sphharmmodel method)": [[176, "dipy.reconst.shm.SphHarmModel.__init__"]], "__init__() (dipy.reconst.shore.shorefit method)": [[176, "dipy.reconst.shore.ShoreFit.__init__"]], "__init__() (dipy.reconst.shore.shoremodel method)": [[176, "dipy.reconst.shore.ShoreModel.__init__"]], "_lt_cols() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti._lt_cols"]], "_lt_indices() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti._lt_indices"]], "_lt_rows() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti._lt_rows"]], "ad() (dipy.reconst.dti.tensorfit method)": [[176, "dipy.reconst.dti.TensorFit.ad"]], "adc() (dipy.reconst.dti.tensorfit method)": [[176, "dipy.reconst.dti.TensorFit.adc"]], "adj_to_countarrs() (in module dipy.reconst.recspeed)": [[176, "dipy.reconst.recspeed.adj_to_countarrs"]], "ak() (dipy.reconst.dki.diffusionkurtosisfit method)": [[176, "dipy.reconst.dki.DiffusionKurtosisFit.ak"]], "akc() (dipy.reconst.dki.diffusionkurtosisfit method)": [[176, "dipy.reconst.dki.DiffusionKurtosisFit.akc"]], "all_shm_coeff (dipy.reconst.mcsd.msdeconvfit property)": [[176, "dipy.reconst.mcsd.MSDeconvFit.all_shm_coeff"]], "ang_thr (dipy.reconst.eudx_direction_getter.eudxdirectiongetter attribute)": [[176, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.ang_thr"]], "angular_basis_eap_opt() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.angular_basis_EAP_opt"]], "angular_basis_opt() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.angular_basis_opt"]], "anisotropic_power() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.anisotropic_power"]], "apparent_diffusion_coef() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.apparent_diffusion_coef"]], "apparent_kurtosis_coef() (in module dipy.reconst.dki)": [[176, "dipy.reconst.dki.apparent_kurtosis_coef"]], "argmax_from_adj() (in module dipy.reconst.recspeed)": [[176, "dipy.reconst.recspeed.argmax_from_adj"]], "argmax_from_countarrs() (in module dipy.reconst.recspeed)": [[176, "dipy.reconst.recspeed.argmax_from_countarrs"]], "auto_response() (in module dipy.reconst.csdeconv)": [[176, "dipy.reconst.csdeconv.auto_response"]], "auto_response_msmt() (in module dipy.reconst.mcsd)": [[176, "dipy.reconst.mcsd.auto_response_msmt"]], "auto_response_ssst() (in module dipy.reconst.csdeconv)": [[176, "dipy.reconst.csdeconv.auto_response_ssst"]], "awf (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[176, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.awf"]], "awf_from_msk() (in module dipy.reconst.msdki)": [[176, "dipy.reconst.msdki.awf_from_msk"]], "axial_diffusivity() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.axial_diffusivity"]], "axial_kurtosis() (in module dipy.reconst.dki)": [[176, "dipy.reconst.dki.axial_kurtosis"]], "axonal_diffusivity (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[176, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.axonal_diffusivity"]], "axonal_water_fraction() (in module dipy.reconst.dki_micro)": [[176, "dipy.reconst.dki_micro.axonal_water_fraction"]], "b_mat() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.b_mat"]], "b_mat_isotropic() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.b_mat_isotropic"]], "basis() (dipy.reconst.csdeconv.axsymshresponse method)": [[176, "dipy.reconst.csdeconv.AxSymShResponse.basis"]], "bench_bounding_box() (in module dipy.reconst.benchmarks.bench_bounding_box)": [[176, "dipy.reconst.benchmarks.bench_bounding_box.bench_bounding_box"]], "bench_csdeconv() (in module dipy.reconst.benchmarks.bench_csd)": [[176, "dipy.reconst.benchmarks.bench_csd.bench_csdeconv"]], "bench_local_maxima() (in module dipy.reconst.benchmarks.bench_peaks)": [[176, "dipy.reconst.benchmarks.bench_peaks.bench_local_maxima"]], "bench_quick_squash() (in module dipy.reconst.benchmarks.bench_squash)": [[176, "dipy.reconst.benchmarks.bench_squash.bench_quick_squash"]], "bench_vec_val_vect() (in module dipy.reconst.benchmarks.bench_vec_val_sum)": [[176, "dipy.reconst.benchmarks.bench_vec_val_sum.bench_vec_val_vect"]], "binomialfloat() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.binomialfloat"]], "bootstrap_data_array() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.bootstrap_data_array"]], "bootstrap_data_voxel() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.bootstrap_data_voxel"]], "c_c() (dipy.reconst.qti.qtifit method)": [[176, "dipy.reconst.qti.QtiFit.c_c"]], "c_m() (dipy.reconst.qti.qtifit method)": [[176, "dipy.reconst.qti.QtiFit.c_m"]], "c_md() (dipy.reconst.qti.qtifit method)": [[176, "dipy.reconst.qti.QtiFit.c_md"]], "c_mu() (dipy.reconst.qti.qtifit method)": [[176, "dipy.reconst.qti.QtiFit.c_mu"]], "cache_clear() (dipy.reconst.cache.cache method)": [[176, "dipy.reconst.cache.Cache.cache_clear"]], "cache_get() (dipy.reconst.cache.cache method)": [[176, "dipy.reconst.cache.Cache.cache_get"]], "cache_set() (dipy.reconst.cache.cache method)": [[176, "dipy.reconst.cache.Cache.cache_set"]], "calculate_max_order() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.calculate_max_order"]], "carlson_rd() (in module dipy.reconst.dki)": [[176, "dipy.reconst.dki.carlson_rd"]], "carlson_rf() (in module dipy.reconst.dki)": [[176, "dipy.reconst.dki.carlson_rf"]], "cholesky_to_lower_triangular() (in module dipy.reconst.fwdti)": [[176, "dipy.reconst.fwdti.cholesky_to_lower_triangular"]], "cls_fit_dki() (in module dipy.reconst.dki)": [[176, "dipy.reconst.dki.cls_fit_dki"]], "coeff_of_determination() (in module dipy.reconst.cross_validation)": [[176, "dipy.reconst.cross_validation.coeff_of_determination"]], "color_fa() (dipy.reconst.dti.tensorfit method)": [[176, "dipy.reconst.dti.TensorFit.color_fa"]], "color_fa() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.color_fa"]], "combined_odf_iso() (dipy.reconst.rumba.rumbafit method)": [[176, "dipy.reconst.rumba.RumbaFit.combined_odf_iso"]], "convert_sh_from_legacy() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.convert_sh_from_legacy"]], "convert_sh_to_full_basis() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.convert_sh_to_full_basis"]], "convert_sh_to_legacy() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.convert_sh_to_legacy"]], "create_qspace() (in module dipy.reconst.dsi)": [[176, "dipy.reconst.dsi.create_qspace"]], "create_qtable() (in module dipy.reconst.dsi)": [[176, "dipy.reconst.dsi.create_qtable"]], "create_rspace() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.create_rspace"]], "create_rspace() (in module dipy.reconst.shore)": [[176, "dipy.reconst.shore.create_rspace"]], "create_rt_space_grid() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.create_rt_space_grid"]], "csdeconv() (in module dipy.reconst.csdeconv)": [[176, "dipy.reconst.csdeconv.csdeconv"]], "ct (dipy.reconst.cti.correlationtensorfit property)": [[176, "dipy.reconst.cti.CorrelationTensorFit.ct"]], "cti_design_matrix() (in module dipy.reconst.utils)": [[176, "dipy.reconst.utils.cti_design_matrix"]], "cti_prediction() (in module dipy.reconst.cti)": [[176, "dipy.reconst.cti.cti_prediction"]], "cvx_fit() (dipy.reconst.ivim.ivimmodelvp method)": [[176, "dipy.reconst.ivim.IvimModelVP.cvx_fit"]], "cvxpy_1x21_to_6x6() (in module dipy.reconst.qti)": [[176, "dipy.reconst.qti.cvxpy_1x21_to_6x6"]], "cvxpy_1x6_to_3x3() (in module dipy.reconst.qti)": [[176, "dipy.reconst.qti.cvxpy_1x6_to_3x3"]], "d_sq() (dipy.reconst.qti.qtifit method)": [[176, "dipy.reconst.qti.QtiFit.d_sq"]], "decompose_tensor() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.decompose_tensor"]], "delta() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.delta"]], "design_matrix() (dipy.reconst.sfm.sparsefasciclemodel method)": [[176, "dipy.reconst.sfm.SparseFascicleModel.design_matrix"]], "design_matrix() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.design_matrix"]], "design_matrix() (in module dipy.reconst.msdki)": [[176, "dipy.reconst.msdki.design_matrix"]], "design_matrix() (in module dipy.reconst.qti)": [[176, "dipy.reconst.qti.design_matrix"]], "design_matrix_spatial() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.design_matrix_spatial"]], "determinant() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.determinant"]], "deviatoric() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.deviatoric"]], "diffusion_components() (in module dipy.reconst.dki_micro)": [[176, "dipy.reconst.dki_micro.diffusion_components"]], "dipy.reconst": [[176, "module-dipy.reconst"]], "dipy.reconst.base": [[176, "module-dipy.reconst.base"]], "dipy.reconst.benchmarks": [[176, "module-dipy.reconst.benchmarks"]], "dipy.reconst.benchmarks.bench_bounding_box": [[176, "module-dipy.reconst.benchmarks.bench_bounding_box"]], "dipy.reconst.benchmarks.bench_csd": [[176, "module-dipy.reconst.benchmarks.bench_csd"]], "dipy.reconst.benchmarks.bench_peaks": [[176, "module-dipy.reconst.benchmarks.bench_peaks"]], "dipy.reconst.benchmarks.bench_squash": [[176, "module-dipy.reconst.benchmarks.bench_squash"]], "dipy.reconst.benchmarks.bench_vec_val_sum": [[176, "module-dipy.reconst.benchmarks.bench_vec_val_sum"]], "dipy.reconst.cache": [[176, "module-dipy.reconst.cache"]], "dipy.reconst.cross_validation": [[176, "module-dipy.reconst.cross_validation"]], "dipy.reconst.csdeconv": [[176, "module-dipy.reconst.csdeconv"]], "dipy.reconst.cti": [[176, "module-dipy.reconst.cti"]], "dipy.reconst.dki": [[176, "module-dipy.reconst.dki"]], "dipy.reconst.dki_micro": [[176, "module-dipy.reconst.dki_micro"]], "dipy.reconst.dsi": [[176, "module-dipy.reconst.dsi"]], "dipy.reconst.dti": [[176, "module-dipy.reconst.dti"]], "dipy.reconst.eudx_direction_getter": [[176, "module-dipy.reconst.eudx_direction_getter"]], "dipy.reconst.forecast": [[176, "module-dipy.reconst.forecast"]], "dipy.reconst.fwdti": [[176, "module-dipy.reconst.fwdti"]], "dipy.reconst.gqi": [[176, "module-dipy.reconst.gqi"]], "dipy.reconst.ivim": [[176, "module-dipy.reconst.ivim"]], "dipy.reconst.mapmri": [[176, "module-dipy.reconst.mapmri"]], "dipy.reconst.mcsd": [[176, "module-dipy.reconst.mcsd"]], "dipy.reconst.msdki": [[176, "module-dipy.reconst.msdki"]], "dipy.reconst.multi_voxel": [[176, "module-dipy.reconst.multi_voxel"]], "dipy.reconst.odf": [[176, "module-dipy.reconst.odf"]], "dipy.reconst.qtdmri": [[176, "module-dipy.reconst.qtdmri"]], "dipy.reconst.qti": [[176, "module-dipy.reconst.qti"]], "dipy.reconst.quick_squash": [[176, "module-dipy.reconst.quick_squash"]], "dipy.reconst.recspeed": [[176, "module-dipy.reconst.recspeed"]], "dipy.reconst.rumba": [[176, "module-dipy.reconst.rumba"]], "dipy.reconst.sfm": [[176, "module-dipy.reconst.sfm"]], "dipy.reconst.shm": [[176, "module-dipy.reconst.shm"]], "dipy.reconst.shore": [[176, "module-dipy.reconst.shore"]], "dipy.reconst.utils": [[176, "module-dipy.reconst.utils"]], "dipy.reconst.vec_val_sum": [[176, "module-dipy.reconst.vec_val_sum"]], "directional_diffusion() (in module dipy.reconst.dki)": [[176, "dipy.reconst.dki.directional_diffusion"]], "directional_diffusion_variance() (in module dipy.reconst.dki)": [[176, "dipy.reconst.dki.directional_diffusion_variance"]], "directional_kurtosis() (in module dipy.reconst.dki)": [[176, "dipy.reconst.dki.directional_kurtosis"]], "directions (dipy.reconst.dti.tensorfit property)": [[176, "dipy.reconst.dti.TensorFit.directions"]], "dki_design_matrix() (in module dipy.reconst.utils)": [[176, "dipy.reconst.utils.dki_design_matrix"]], "dki_prediction() (in module dipy.reconst.dki)": [[176, "dipy.reconst.dki.dki_prediction"]], "dkimicro_prediction() (in module dipy.reconst.dki_micro)": [[176, "dipy.reconst.dki_micro.dkimicro_prediction"]], "dpar (dipy.reconst.forecast.forecastfit property)": [[176, "dipy.reconst.forecast.ForecastFit.dpar"]], "dperp (dipy.reconst.forecast.forecastfit property)": [[176, "dipy.reconst.forecast.ForecastFit.dperp"]], "dtd_covariance() (in module dipy.reconst.qti)": [[176, "dipy.reconst.qti.dtd_covariance"]], "eig_from_lo_tri() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.eig_from_lo_tri"]], "elastic_crossvalidation() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.elastic_crossvalidation"]], "equatorial_maximum() (in module dipy.reconst.gqi)": [[176, "dipy.reconst.gqi.equatorial_maximum"]], "equatorial_zone_vertices() (in module dipy.reconst.gqi)": [[176, "dipy.reconst.gqi.equatorial_zone_vertices"]], "estimate_f_d_star() (dipy.reconst.ivim.ivimmodeltrr method)": [[176, "dipy.reconst.ivim.IvimModelTRR.estimate_f_D_star"]], "estimate_linear_fit() (dipy.reconst.ivim.ivimmodeltrr method)": [[176, "dipy.reconst.ivim.IvimModelTRR.estimate_linear_fit"]], "estimate_response() (in module dipy.reconst.csdeconv)": [[176, "dipy.reconst.csdeconv.estimate_response"]], "evals (dipy.reconst.dti.tensorfit property)": [[176, "dipy.reconst.dti.TensorFit.evals"]], "evecs (dipy.reconst.dti.tensorfit property)": [[176, "dipy.reconst.dti.TensorFit.evecs"]], "f (dipy.reconst.fwdti.freewatertensorfit property)": [[176, "dipy.reconst.fwdti.FreeWaterTensorFit.f"]], "f_d_star_error() (in module dipy.reconst.ivim)": [[176, "dipy.reconst.ivim.f_D_star_error"]], "f_d_star_prediction() (in module dipy.reconst.ivim)": [[176, "dipy.reconst.ivim.f_D_star_prediction"]], "f_csf() (dipy.reconst.rumba.rumbafit method)": [[176, "dipy.reconst.rumba.RumbaFit.f_csf"]], "f_gm() (dipy.reconst.rumba.rumbafit method)": [[176, "dipy.reconst.rumba.RumbaFit.f_gm"]], "f_iso() (dipy.reconst.rumba.rumbafit method)": [[176, "dipy.reconst.rumba.RumbaFit.f_iso"]], "f_wm() (dipy.reconst.rumba.rumbafit method)": [[176, "dipy.reconst.rumba.RumbaFit.f_wm"]], "fa() (dipy.reconst.dti.tensorfit method)": [[176, "dipy.reconst.dti.TensorFit.fa"]], "fa() (dipy.reconst.qti.qtifit method)": [[176, "dipy.reconst.qti.QtiFit.fa"]], "fa_trace_to_lambdas() (in module dipy.reconst.csdeconv)": [[176, "dipy.reconst.csdeconv.fa_trace_to_lambdas"]], "find_signal_means() (in module dipy.reconst.forecast)": [[176, "dipy.reconst.forecast.find_signal_means"]], "fit() (dipy.reconst.base.reconstmodel method)": [[176, "dipy.reconst.base.ReconstModel.fit"]], "fit() (dipy.reconst.csdeconv.constrainedsdtmodel method)": [[176, "dipy.reconst.csdeconv.ConstrainedSDTModel.fit"]], "fit() (dipy.reconst.csdeconv.constrainedsphericaldeconvmodel method)": [[176, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.fit"]], "fit() (dipy.reconst.cti.correlationtensormodel method)": [[176, "dipy.reconst.cti.CorrelationTensorModel.fit"]], "fit() (dipy.reconst.dki.diffusionkurtosismodel method)": [[176, "dipy.reconst.dki.DiffusionKurtosisModel.fit"]], "fit() (dipy.reconst.dki_micro.kurtosismicrostructuremodel method)": [[176, "dipy.reconst.dki_micro.KurtosisMicrostructureModel.fit"]], "fit() (dipy.reconst.dsi.diffusionspectrumdeconvmodel method)": [[176, "dipy.reconst.dsi.DiffusionSpectrumDeconvModel.fit"]], "fit() (dipy.reconst.dsi.diffusionspectrummodel method)": [[176, "dipy.reconst.dsi.DiffusionSpectrumModel.fit"]], "fit() (dipy.reconst.dti.tensormodel method)": [[176, "dipy.reconst.dti.TensorModel.fit"]], "fit() (dipy.reconst.forecast.forecastmodel method)": [[176, "dipy.reconst.forecast.ForecastModel.fit"]], "fit() (dipy.reconst.fwdti.freewatertensormodel method)": [[176, "dipy.reconst.fwdti.FreeWaterTensorModel.fit"]], "fit() (dipy.reconst.gqi.generalizedqsamplingmodel method)": [[176, "dipy.reconst.gqi.GeneralizedQSamplingModel.fit"]], "fit() (dipy.reconst.ivim.ivimmodeltrr method)": [[176, "dipy.reconst.ivim.IvimModelTRR.fit"]], "fit() (dipy.reconst.ivim.ivimmodelvp method)": [[176, "dipy.reconst.ivim.IvimModelVP.fit"]], "fit() (dipy.reconst.mapmri.mapmrimodel method)": [[176, "dipy.reconst.mapmri.MapmriModel.fit"]], "fit() (dipy.reconst.mcsd.multishelldeconvmodel method)": [[176, "dipy.reconst.mcsd.MultiShellDeconvModel.fit"]], "fit() (dipy.reconst.msdki.meandiffusionkurtosismodel method)": [[176, "dipy.reconst.msdki.MeanDiffusionKurtosisModel.fit"]], "fit() (dipy.reconst.odf.odfmodel method)": [[176, "dipy.reconst.odf.OdfModel.fit"]], "fit() (dipy.reconst.qtdmri.qtdmrimodel method)": [[176, "dipy.reconst.qtdmri.QtdmriModel.fit"]], "fit() (dipy.reconst.qti.qtimodel method)": [[176, "dipy.reconst.qti.QtiModel.fit"]], "fit() (dipy.reconst.sfm.exponentialisotropicmodel method)": [[176, "dipy.reconst.sfm.ExponentialIsotropicModel.fit"]], "fit() (dipy.reconst.sfm.isotropicmodel method)": [[176, "dipy.reconst.sfm.IsotropicModel.fit"]], "fit() (dipy.reconst.sfm.sparsefasciclemodel method)": [[176, "dipy.reconst.sfm.SparseFascicleModel.fit"]], "fit() (dipy.reconst.shm.qballbasemodel method)": [[176, "dipy.reconst.shm.QballBaseModel.fit"]], "fit() (dipy.reconst.shore.shoremodel method)": [[176, "dipy.reconst.shore.ShoreModel.fit"]], "fitted_signal() (dipy.reconst.mapmri.mapmrifit method)": [[176, "dipy.reconst.mapmri.MapmriFit.fitted_signal"]], "fitted_signal() (dipy.reconst.qtdmri.qtdmrifit method)": [[176, "dipy.reconst.qtdmri.QtdmriFit.fitted_signal"]], "fitted_signal() (dipy.reconst.shore.shorefit method)": [[176, "dipy.reconst.shore.ShoreFit.fitted_signal"]], "forecast_error_func() (in module dipy.reconst.forecast)": [[176, "dipy.reconst.forecast.forecast_error_func"]], "forecast_matrix() (in module dipy.reconst.forecast)": [[176, "dipy.reconst.forecast.forecast_matrix"]], "forward_sdeconv_mat() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.forward_sdeconv_mat"]], "forward_sdt_deconv_mat() (in module dipy.reconst.csdeconv)": [[176, "dipy.reconst.csdeconv.forward_sdt_deconv_mat"]], "fractional_anisotropy() (dipy.reconst.forecast.forecastfit method)": [[176, "dipy.reconst.forecast.ForecastFit.fractional_anisotropy"]], "fractional_anisotropy() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.fractional_anisotropy"]], "from_21x1_to_6x6() (in module dipy.reconst.qti)": [[176, "dipy.reconst.qti.from_21x1_to_6x6"]], "from_3x3_to_6x1() (in module dipy.reconst.qti)": [[176, "dipy.reconst.qti.from_3x3_to_6x1"]], "from_6x1_to_3x3() (in module dipy.reconst.qti)": [[176, "dipy.reconst.qti.from_6x1_to_3x3"]], "from_6x6_to_21x1() (in module dipy.reconst.qti)": [[176, "dipy.reconst.qti.from_6x6_to_21x1"]], "from_lower_triangular() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.from_lower_triangular"]], "from_qte_to_cti() (in module dipy.reconst.cti)": [[176, "dipy.reconst.cti.from_qte_to_cti"]], "fwdti_prediction() (in module dipy.reconst.fwdti)": [[176, "dipy.reconst.fwdti.fwdti_prediction"]], "ga() (dipy.reconst.dti.tensorfit method)": [[176, "dipy.reconst.dti.TensorFit.ga"]], "gcv_cost_function() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.gcv_cost_function"]], "gen_psf() (in module dipy.reconst.dsi)": [[176, "dipy.reconst.dsi.gen_PSF"]], "gen_dirac() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.gen_dirac"]], "generalized_crossvalidation() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.generalized_crossvalidation"]], "generalized_crossvalidation() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.generalized_crossvalidation"]], "generalized_crossvalidation_array() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.generalized_crossvalidation_array"]], "generate_kernel() (in module dipy.reconst.rumba)": [[176, "dipy.reconst.rumba.generate_kernel"]], "geodesic_anisotropy() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.geodesic_anisotropy"]], "gfa() (dipy.reconst.shm.sphharmfit method)": [[176, "dipy.reconst.shm.SphHarmFit.gfa"]], "gfa() (in module dipy.reconst.odf)": [[176, "dipy.reconst.odf.gfa"]], "half_to_full_qspace() (in module dipy.reconst.dsi)": [[176, "dipy.reconst.dsi.half_to_full_qspace"]], "hanning_filter() (in module dipy.reconst.dsi)": [[176, "dipy.reconst.dsi.hanning_filter"]], "hat() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.hat"]], "hindered_ad (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[176, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_ad"]], "hindered_evals (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[176, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_evals"]], "hindered_rd (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[176, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_rd"]], "initial_direction() (dipy.reconst.eudx_direction_getter.eudxdirectiongetter method)": [[176, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.initial_direction"]], "iso (dipy.reconst.mcsd.multishellresponse property)": [[176, "dipy.reconst.mcsd.MultiShellResponse.iso"]], "isotropic() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.isotropic"]], "isotropic_scale_factor() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.isotropic_scale_factor"]], "iter_fit_tensor() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.iter_fit_tensor"]], "ivim_mix_cost_one() (dipy.reconst.ivim.ivimmodelvp method)": [[176, "dipy.reconst.ivim.IvimModelVP.ivim_mix_cost_one"]], "ivim_model_selector() (in module dipy.reconst.ivim)": [[176, "dipy.reconst.ivim.ivim_model_selector"]], "ivim_prediction() (in module dipy.reconst.ivim)": [[176, "dipy.reconst.ivim.ivim_prediction"]], "k_bulk() (dipy.reconst.qti.qtifit method)": [[176, "dipy.reconst.qti.QtiFit.k_bulk"]], "k_mu() (dipy.reconst.qti.qtifit method)": [[176, "dipy.reconst.qti.QtiFit.k_mu"]], "k_shear() (dipy.reconst.qti.qtifit method)": [[176, "dipy.reconst.qti.QtiFit.k_shear"]], "kfa (dipy.reconst.dki.diffusionkurtosisfit property)": [[176, "dipy.reconst.dki.DiffusionKurtosisFit.kfa"]], "kfold_xval() (in module dipy.reconst.cross_validation)": [[176, "dipy.reconst.cross_validation.kfold_xval"]], "kmax() (dipy.reconst.dki.diffusionkurtosisfit method)": [[176, "dipy.reconst.dki.DiffusionKurtosisFit.kmax"]], "kt (dipy.reconst.dki.diffusionkurtosisfit property)": [[176, "dipy.reconst.dki.DiffusionKurtosisFit.kt"]], "kurtosis_fractional_anisotropy() (in module dipy.reconst.dki)": [[176, "dipy.reconst.dki.kurtosis_fractional_anisotropy"]], "kurtosis_maximum() (in module dipy.reconst.dki)": [[176, "dipy.reconst.dki.kurtosis_maximum"]], "l1_crossvalidation() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.l1_crossvalidation"]], "l_shore() (in module dipy.reconst.shore)": [[176, "dipy.reconst.shore.l_shore"]], "lazy_index() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.lazy_index"]], "lb_forecast() (in module dipy.reconst.forecast)": [[176, "dipy.reconst.forecast.lb_forecast"]], "lcr_matrix() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.lcr_matrix"]], "le_to_odf() (in module dipy.reconst.recspeed)": [[176, "dipy.reconst.recspeed.le_to_odf"]], "linearity() (dipy.reconst.dti.tensorfit method)": [[176, "dipy.reconst.dti.TensorFit.linearity"]], "linearity() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.linearity"]], "local_maxima() (in module dipy.reconst.recspeed)": [[176, "dipy.reconst.recspeed.local_maxima"]], "logger() (in module dipy.reconst.rumba)": [[176, "dipy.reconst.rumba.logger"]], "lower_triangular() (dipy.reconst.dti.tensorfit method)": [[176, "dipy.reconst.dti.TensorFit.lower_triangular"]], "lower_triangular() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.lower_triangular"]], "lower_triangular_to_cholesky() (in module dipy.reconst.fwdti)": [[176, "dipy.reconst.fwdti.lower_triangular_to_cholesky"]], "ls_fit_cti() (in module dipy.reconst.cti)": [[176, "dipy.reconst.cti.ls_fit_cti"]], "ls_fit_dki() (in module dipy.reconst.dki)": [[176, "dipy.reconst.dki.ls_fit_dki"]], "map_laplace_s() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.map_laplace_s"]], "map_laplace_t() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.map_laplace_t"]], "map_laplace_u() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.map_laplace_u"]], "mapmri_r (dipy.reconst.mapmri.mapmrifit property)": [[176, "dipy.reconst.mapmri.MapmriFit.mapmri_R"]], "mapmri_stu_reg_matrices() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.mapmri_STU_reg_matrices"]], "mapmri_coeff (dipy.reconst.mapmri.mapmrifit property)": [[176, "dipy.reconst.mapmri.MapmriFit.mapmri_coeff"]], "mapmri_index_matrix() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.mapmri_index_matrix"]], "mapmri_isotropic_k_mu_dependent() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.mapmri_isotropic_K_mu_dependent"]], "mapmri_isotropic_k_mu_independent() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.mapmri_isotropic_K_mu_independent"]], "mapmri_isotropic_m_mu_dependent() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.mapmri_isotropic_M_mu_dependent"]], "mapmri_isotropic_m_mu_independent() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.mapmri_isotropic_M_mu_independent"]], "mapmri_isotropic_index_matrix() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.mapmri_isotropic_index_matrix"]], "mapmri_isotropic_laplacian_reg_matrix() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.mapmri_isotropic_laplacian_reg_matrix"]], "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.mapmri_isotropic_laplacian_reg_matrix_from_index_matrix"]], "mapmri_isotropic_odf_matrix() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.mapmri_isotropic_odf_matrix"]], "mapmri_isotropic_odf_sh_matrix() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.mapmri_isotropic_odf_sh_matrix"]], "mapmri_isotropic_phi_matrix() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.mapmri_isotropic_phi_matrix"]], "mapmri_isotropic_psi_matrix() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.mapmri_isotropic_psi_matrix"]], "mapmri_isotropic_radial_pdf_basis() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.mapmri_isotropic_radial_pdf_basis"]], "mapmri_isotropic_radial_signal_basis() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.mapmri_isotropic_radial_signal_basis"]], "mapmri_laplacian_reg_matrix() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.mapmri_laplacian_reg_matrix"]], "mapmri_mu (dipy.reconst.mapmri.mapmrifit property)": [[176, "dipy.reconst.mapmri.MapmriFit.mapmri_mu"]], "mapmri_odf_matrix() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.mapmri_odf_matrix"]], "mapmri_phi_1d() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.mapmri_phi_1d"]], "mapmri_phi_matrix() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.mapmri_phi_matrix"]], "mapmri_psi_1d() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.mapmri_psi_1d"]], "mapmri_psi_matrix() (in module dipy.reconst.mapmri)": [[176, "dipy.reconst.mapmri.mapmri_psi_matrix"]], "mask_for_response_msmt() (in module dipy.reconst.mcsd)": [[176, "dipy.reconst.mcsd.mask_for_response_msmt"]], "mask_for_response_ssst() (in module dipy.reconst.csdeconv)": [[176, "dipy.reconst.csdeconv.mask_for_response_ssst"]], "max (dipy.reconst.shm.csaodfmodel attribute)": [[176, "dipy.reconst.shm.CsaOdfModel.max"]], "mbessel_ratio() (in module dipy.reconst.rumba)": [[176, "dipy.reconst.rumba.mbessel_ratio"]], "md() (dipy.reconst.dti.tensorfit method)": [[176, "dipy.reconst.dti.TensorFit.md"]], "md() (dipy.reconst.qti.qtifit method)": [[176, "dipy.reconst.qti.QtiFit.md"]], "mean_d_sq() (dipy.reconst.qti.qtifit method)": [[176, "dipy.reconst.qti.QtiFit.mean_d_sq"]], "mean_diffusivity() (dipy.reconst.forecast.forecastfit method)": [[176, "dipy.reconst.forecast.ForecastFit.mean_diffusivity"]], "mean_diffusivity() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.mean_diffusivity"]], "mean_kurtosis() (in module dipy.reconst.dki)": [[176, "dipy.reconst.dki.mean_kurtosis"]], "mean_kurtosis_tensor() (in module dipy.reconst.dki)": [[176, "dipy.reconst.dki.mean_kurtosis_tensor"]], "mean_signal_bvalue() (in module dipy.reconst.msdki)": [[176, "dipy.reconst.msdki.mean_signal_bvalue"]], "min (dipy.reconst.shm.csaodfmodel attribute)": [[176, "dipy.reconst.shm.CsaOdfModel.min"]], "minmax_normalize() (in module dipy.reconst.odf)": [[176, "dipy.reconst.odf.minmax_normalize"]], "mk() (dipy.reconst.dki.diffusionkurtosisfit method)": [[176, "dipy.reconst.dki.DiffusionKurtosisFit.mk"]], "mk() (dipy.reconst.qti.qtifit method)": [[176, "dipy.reconst.qti.QtiFit.mk"]], "mkt() (dipy.reconst.dki.diffusionkurtosisfit method)": [[176, "dipy.reconst.dki.DiffusionKurtosisFit.mkt"]], "mode() (dipy.reconst.dti.tensorfit method)": [[176, "dipy.reconst.dti.TensorFit.mode"]], "mode() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.mode"]], "msd() (dipy.reconst.mapmri.mapmrifit method)": [[176, "dipy.reconst.mapmri.MapmriFit.msd"]], "msd() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[176, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.msd"]], "msd() (dipy.reconst.qtdmri.qtdmrifit method)": [[176, "dipy.reconst.qtdmri.QtdmriFit.msd"]], "msd() (dipy.reconst.shore.shorefit method)": [[176, "dipy.reconst.shore.ShoreFit.msd"]], "msd_discrete() (dipy.reconst.dsi.diffusionspectrumfit method)": [[176, "dipy.reconst.dsi.DiffusionSpectrumFit.msd_discrete"]], "msdki_prediction() (in module dipy.reconst.msdki)": [[176, "dipy.reconst.msdki.msdki_prediction"]], "msk() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[176, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.msk"]], "msk_from_awf() (in module dipy.reconst.msdki)": [[176, "dipy.reconst.msdki.msk_from_awf"]], "multi_fit() (dipy.reconst.dki.diffusionkurtosismodel method)": [[176, "dipy.reconst.dki.DiffusionKurtosisModel.multi_fit"]], "multi_gaussian_k_from_c() (in module dipy.reconst.cti)": [[176, "dipy.reconst.cti.multi_gaussian_k_from_c"]], "multi_shell_fiber_response() (in module dipy.reconst.mcsd)": [[176, "dipy.reconst.mcsd.multi_shell_fiber_response"]], "multi_tissue_basis() (in module dipy.reconst.mcsd)": [[176, "dipy.reconst.mcsd.multi_tissue_basis"]], "multi_voxel_fit() (in module dipy.reconst.multi_voxel)": [[176, "dipy.reconst.multi_voxel.multi_voxel_fit"]], "n_shore() (in module dipy.reconst.shore)": [[176, "dipy.reconst.shore.n_shore"]], "ng() (dipy.reconst.mapmri.mapmrifit method)": [[176, "dipy.reconst.mapmri.MapmriFit.ng"]], "ng_parallel() (dipy.reconst.mapmri.mapmrifit method)": [[176, "dipy.reconst.mapmri.MapmriFit.ng_parallel"]], "ng_perpendicular() (dipy.reconst.mapmri.mapmrifit method)": [[176, "dipy.reconst.mapmri.MapmriFit.ng_perpendicular"]], "nlls_cost() (dipy.reconst.ivim.ivimmodelvp method)": [[176, "dipy.reconst.ivim.IvimModelVP.nlls_cost"]], "nlls_fit_tensor() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.nlls_fit_tensor"]], "nls_fit_tensor() (in module dipy.reconst.fwdti)": [[176, "dipy.reconst.fwdti.nls_fit_tensor"]], "nls_iter() (in module dipy.reconst.fwdti)": [[176, "dipy.reconst.fwdti.nls_iter"]], "norm() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.norm"]], "norm_of_laplacian_signal() (dipy.reconst.mapmri.mapmrifit method)": [[176, "dipy.reconst.mapmri.MapmriFit.norm_of_laplacian_signal"]], "norm_of_laplacian_signal() (dipy.reconst.qtdmri.qtdmrifit method)": [[176, "dipy.reconst.qtdmri.QtdmriFit.norm_of_laplacian_signal"]], "normalize_data() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.normalize_data"]], "normalize_qa() (in module dipy.reconst.gqi)": [[176, "dipy.reconst.gqi.normalize_qa"]], "npa() (in module dipy.reconst.gqi)": [[176, "dipy.reconst.gqi.npa"]], "num_grad() (in module dipy.reconst.benchmarks.bench_csd)": [[176, "dipy.reconst.benchmarks.bench_csd.num_grad"]], "odf() (dipy.reconst.dsi.diffusionspectrumfit method)": [[176, "dipy.reconst.dsi.DiffusionSpectrumFit.odf"]], "odf() (dipy.reconst.dti.tensorfit method)": [[176, "dipy.reconst.dti.TensorFit.odf"]], "odf() (dipy.reconst.forecast.forecastfit method)": [[176, "dipy.reconst.forecast.ForecastFit.odf"]], "odf() (dipy.reconst.gqi.generalizedqsamplingfit method)": [[176, "dipy.reconst.gqi.GeneralizedQSamplingFit.odf"]], "odf() (dipy.reconst.mapmri.mapmrifit method)": [[176, "dipy.reconst.mapmri.MapmriFit.odf"]], "odf() (dipy.reconst.odf.odffit method)": [[176, "dipy.reconst.odf.OdfFit.odf"]], "odf() (dipy.reconst.qtdmri.qtdmrifit method)": [[176, "dipy.reconst.qtdmri.QtdmriFit.odf"]], "odf() (dipy.reconst.rumba.rumbafit method)": [[176, "dipy.reconst.rumba.RumbaFit.odf"]], "odf() (dipy.reconst.sfm.sparsefasciclefit method)": [[176, "dipy.reconst.sfm.SparseFascicleFit.odf"]], "odf() (dipy.reconst.shm.sphharmfit method)": [[176, "dipy.reconst.shm.SphHarmFit.odf"]], "odf() (dipy.reconst.shore.shorefit method)": [[176, "dipy.reconst.shore.ShoreFit.odf"]], "odf_deconv() (in module dipy.reconst.csdeconv)": [[176, "dipy.reconst.csdeconv.odf_deconv"]], "odf_sh() (dipy.reconst.mapmri.mapmrifit method)": [[176, "dipy.reconst.mapmri.MapmriFit.odf_sh"]], "odf_sh() (dipy.reconst.qtdmri.qtdmrifit method)": [[176, "dipy.reconst.qtdmri.QtdmriFit.odf_sh"]], "odf_sh() (dipy.reconst.shore.shorefit method)": [[176, "dipy.reconst.shore.ShoreFit.odf_sh"]], "odf_sh_to_sharp() (in module dipy.reconst.csdeconv)": [[176, "dipy.reconst.csdeconv.odf_sh_to_sharp"]], "odf_sum() (in module dipy.reconst.gqi)": [[176, "dipy.reconst.gqi.odf_sum"]], "old_squash() (in module dipy.reconst.benchmarks.bench_squash)": [[176, "dipy.reconst.benchmarks.bench_squash.old_squash"]], "ols_fit_tensor() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.ols_fit_tensor"]], "on_sphere() (dipy.reconst.csdeconv.axsymshresponse method)": [[176, "dipy.reconst.csdeconv.AxSymShResponse.on_sphere"]], "order_from_ncoef() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.order_from_ncoef"]], "params_to_cti_params() (in module dipy.reconst.cti)": [[176, "dipy.reconst.cti.params_to_cti_params"]], "params_to_dki_params() (in module dipy.reconst.dki)": [[176, "dipy.reconst.dki.params_to_dki_params"]], "part1_reg_matrix_tau() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.part1_reg_matrix_tau"]], "part23_iso_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.part23_iso_reg_matrix_q"]], "part23_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.part23_reg_matrix_q"]], "part23_reg_matrix_tau() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.part23_reg_matrix_tau"]], "part4_iso_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.part4_iso_reg_matrix_q"]], "part4_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.part4_reg_matrix_q"]], "part4_reg_matrix_tau() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.part4_reg_matrix_tau"]], "patch_maximum() (in module dipy.reconst.gqi)": [[176, "dipy.reconst.gqi.patch_maximum"]], "patch_sum() (in module dipy.reconst.gqi)": [[176, "dipy.reconst.gqi.patch_sum"]], "patch_vertices() (in module dipy.reconst.gqi)": [[176, "dipy.reconst.gqi.patch_vertices"]], "pdf() (dipy.reconst.dsi.diffusionspectrumdeconvfit method)": [[176, "dipy.reconst.dsi.DiffusionSpectrumDeconvFit.pdf"]], "pdf() (dipy.reconst.dsi.diffusionspectrumfit method)": [[176, "dipy.reconst.dsi.DiffusionSpectrumFit.pdf"]], "pdf() (dipy.reconst.mapmri.mapmrifit method)": [[176, "dipy.reconst.mapmri.MapmriFit.pdf"]], "pdf() (dipy.reconst.qtdmri.qtdmrifit method)": [[176, "dipy.reconst.qtdmri.QtdmriFit.pdf"]], "pdf() (dipy.reconst.shore.shorefit method)": [[176, "dipy.reconst.shore.ShoreFit.pdf"]], "pdf_grid() (dipy.reconst.shore.shorefit method)": [[176, "dipy.reconst.shore.ShoreFit.pdf_grid"]], "pdf_interp_coords() (in module dipy.reconst.dsi)": [[176, "dipy.reconst.dsi.pdf_interp_coords"]], "pdf_odf() (in module dipy.reconst.dsi)": [[176, "dipy.reconst.dsi.pdf_odf"]], "perfusion_fraction (dipy.reconst.ivim.ivimfit property)": [[176, "dipy.reconst.ivim.IvimFit.perfusion_fraction"]], "phi() (dipy.reconst.ivim.ivimmodelvp method)": [[176, "dipy.reconst.ivim.IvimModelVP.phi"]], "planarity() (dipy.reconst.dti.tensorfit method)": [[176, "dipy.reconst.dti.TensorFit.planarity"]], "planarity() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.planarity"]], "polar_zone_vertices() (in module dipy.reconst.gqi)": [[176, "dipy.reconst.gqi.polar_zone_vertices"]], "predict() (dipy.reconst.csdeconv.constrainedsphericaldeconvmodel method)": [[176, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.predict"]], "predict() (dipy.reconst.cti.correlationtensorfit method)": [[176, "dipy.reconst.cti.CorrelationTensorFit.predict"]], "predict() (dipy.reconst.cti.correlationtensormodel method)": [[176, "dipy.reconst.cti.CorrelationTensorModel.predict"]], "predict() (dipy.reconst.dki.diffusionkurtosisfit method)": [[176, "dipy.reconst.dki.DiffusionKurtosisFit.predict"]], "predict() (dipy.reconst.dki.diffusionkurtosismodel method)": [[176, "dipy.reconst.dki.DiffusionKurtosisModel.predict"]], "predict() (dipy.reconst.dki_micro.kurtosismicrostructuralfit method)": [[176, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.predict"]], "predict() (dipy.reconst.dki_micro.kurtosismicrostructuremodel method)": [[176, "dipy.reconst.dki_micro.KurtosisMicrostructureModel.predict"]], "predict() (dipy.reconst.dti.tensorfit method)": [[176, "dipy.reconst.dti.TensorFit.predict"]], "predict() (dipy.reconst.dti.tensormodel method)": [[176, "dipy.reconst.dti.TensorModel.predict"]], "predict() (dipy.reconst.forecast.forecastfit method)": [[176, "dipy.reconst.forecast.ForecastFit.predict"]], "predict() (dipy.reconst.fwdti.freewatertensorfit method)": [[176, "dipy.reconst.fwdti.FreeWaterTensorFit.predict"]], "predict() (dipy.reconst.fwdti.freewatertensormodel method)": [[176, "dipy.reconst.fwdti.FreeWaterTensorModel.predict"]], "predict() (dipy.reconst.ivim.ivimfit method)": [[176, "dipy.reconst.ivim.IvimFit.predict"]], "predict() (dipy.reconst.ivim.ivimmodeltrr method)": [[176, "dipy.reconst.ivim.IvimModelTRR.predict"]], "predict() (dipy.reconst.mapmri.mapmrifit method)": [[176, "dipy.reconst.mapmri.MapmriFit.predict"]], "predict() (dipy.reconst.mcsd.multishelldeconvmodel method)": [[176, "dipy.reconst.mcsd.MultiShellDeconvModel.predict"]], "predict() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[176, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.predict"]], "predict() (dipy.reconst.msdki.meandiffusionkurtosismodel method)": [[176, "dipy.reconst.msdki.MeanDiffusionKurtosisModel.predict"]], "predict() (dipy.reconst.multi_voxel.multivoxelfit method)": [[176, "dipy.reconst.multi_voxel.MultiVoxelFit.predict"]], "predict() (dipy.reconst.qtdmri.qtdmrifit method)": [[176, "dipy.reconst.qtdmri.QtdmriFit.predict"]], "predict() (dipy.reconst.qti.qtifit method)": [[176, "dipy.reconst.qti.QtiFit.predict"]], "predict() (dipy.reconst.qti.qtimodel method)": [[176, "dipy.reconst.qti.QtiModel.predict"]], "predict() (dipy.reconst.rumba.rumbafit method)": [[176, "dipy.reconst.rumba.RumbaFit.predict"]], "predict() (dipy.reconst.sfm.exponentialisotropicfit method)": [[176, "dipy.reconst.sfm.ExponentialIsotropicFit.predict"]], "predict() (dipy.reconst.sfm.isotropicfit method)": [[176, "dipy.reconst.sfm.IsotropicFit.predict"]], "predict() (dipy.reconst.sfm.sparsefasciclefit method)": [[176, "dipy.reconst.sfm.SparseFascicleFit.predict"]], "predict() (dipy.reconst.shm.sphharmfit method)": [[176, "dipy.reconst.shm.SphHarmFit.predict"]], "proc_reco_args() (in module dipy.reconst.recspeed)": [[176, "dipy.reconst.recspeed.proc_reco_args"]], "project_hemisph_bvecs() (in module dipy.reconst.dsi)": [[176, "dipy.reconst.dsi.project_hemisph_bvecs"]], "psi_l() (in module dipy.reconst.forecast)": [[176, "dipy.reconst.forecast.psi_l"]], "qa_thr (dipy.reconst.eudx_direction_getter.eudxdirectiongetter attribute)": [[176, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.qa_thr"]], "qiv() (dipy.reconst.mapmri.mapmrifit method)": [[176, "dipy.reconst.mapmri.MapmriFit.qiv"]], "qiv() (dipy.reconst.qtdmri.qtdmrifit method)": [[176, "dipy.reconst.qtdmri.QtdmriFit.qiv"]], "qtdmri_anisotropic_scaling() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.qtdmri_anisotropic_scaling"]], "qtdmri_eap_matrix() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.qtdmri_eap_matrix"]], "qtdmri_eap_matrix_() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.qtdmri_eap_matrix_"]], "qtdmri_index_matrix() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.qtdmri_index_matrix"]], "qtdmri_isotropic_eap_matrix() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.qtdmri_isotropic_eap_matrix"]], "qtdmri_isotropic_eap_matrix_() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.qtdmri_isotropic_eap_matrix_"]], "qtdmri_isotropic_index_matrix() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.qtdmri_isotropic_index_matrix"]], "qtdmri_isotropic_laplacian_reg_matrix() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.qtdmri_isotropic_laplacian_reg_matrix"]], "qtdmri_isotropic_scaling() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.qtdmri_isotropic_scaling"]], "qtdmri_isotropic_signal_matrix() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.qtdmri_isotropic_signal_matrix"]], "qtdmri_isotropic_signal_matrix_() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.qtdmri_isotropic_signal_matrix_"]], "qtdmri_isotropic_to_mapmri_matrix() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.qtdmri_isotropic_to_mapmri_matrix"]], "qtdmri_laplacian_reg_matrix() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.qtdmri_laplacian_reg_matrix"]], "qtdmri_mapmri_isotropic_normalization() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.qtdmri_mapmri_isotropic_normalization"]], "qtdmri_mapmri_normalization() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.qtdmri_mapmri_normalization"]], "qtdmri_number_of_coefficients() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.qtdmri_number_of_coefficients"]], "qtdmri_signal_matrix() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.qtdmri_signal_matrix"]], "qtdmri_signal_matrix_() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.qtdmri_signal_matrix_"]], "qtdmri_temporal_normalization() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.qtdmri_temporal_normalization"]], "qtdmri_to_mapmri_coef() (dipy.reconst.qtdmri.qtdmrifit method)": [[176, "dipy.reconst.qtdmri.QtdmriFit.qtdmri_to_mapmri_coef"]], "qtdmri_to_mapmri_matrix() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.qtdmri_to_mapmri_matrix"]], "qti_signal() (in module dipy.reconst.qti)": [[176, "dipy.reconst.qti.qti_signal"]], "quadratic_form (dipy.reconst.dti.tensorfit property)": [[176, "dipy.reconst.dti.TensorFit.quadratic_form"]], "quantize_evecs() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.quantize_evecs"]], "quick_squash() (in module dipy.reconst.quick_squash)": [[176, "dipy.reconst.quick_squash.quick_squash"]], "radial_basis_eap_opt() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.radial_basis_EAP_opt"]], "radial_basis_opt() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.radial_basis_opt"]], "radial_diffusivity() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.radial_diffusivity"]], "radial_kurtosis() (in module dipy.reconst.dki)": [[176, "dipy.reconst.dki.radial_kurtosis"]], "rd() (dipy.reconst.dti.tensorfit method)": [[176, "dipy.reconst.dti.TensorFit.rd"]], "real_sh_descoteaux() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.real_sh_descoteaux"]], "real_sh_descoteaux_from_index() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.real_sh_descoteaux_from_index"]], "real_sh_tournier() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.real_sh_tournier"]], "real_sh_tournier_from_index() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.real_sh_tournier_from_index"]], "real_sph_harm() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.real_sph_harm"]], "real_sym_sh_basis() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.real_sym_sh_basis"]], "real_sym_sh_mrtrix() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.real_sym_sh_mrtrix"]], "recursive_response() (in module dipy.reconst.csdeconv)": [[176, "dipy.reconst.csdeconv.recursive_response"]], "reduce() (in module dipy.reconst.quick_squash)": [[176, "dipy.reconst.quick_squash.reduce"]], "remove_similar_vertices() (in module dipy.reconst.recspeed)": [[176, "dipy.reconst.recspeed.remove_similar_vertices"]], "response_from_mask() (in module dipy.reconst.csdeconv)": [[176, "dipy.reconst.csdeconv.response_from_mask"]], "response_from_mask_msmt() (in module dipy.reconst.mcsd)": [[176, "dipy.reconst.mcsd.response_from_mask_msmt"]], "response_from_mask_ssst() (in module dipy.reconst.csdeconv)": [[176, "dipy.reconst.csdeconv.response_from_mask_ssst"]], "restore_fit_tensor() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.restore_fit_tensor"]], "restricted_evals (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[176, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.restricted_evals"]], "rho_matrix() (in module dipy.reconst.forecast)": [[176, "dipy.reconst.forecast.rho_matrix"]], "rk() (dipy.reconst.dki.diffusionkurtosisfit method)": [[176, "dipy.reconst.dki.DiffusionKurtosisFit.rk"]], "rtap() (dipy.reconst.mapmri.mapmrifit method)": [[176, "dipy.reconst.mapmri.MapmriFit.rtap"]], "rtap() (dipy.reconst.qtdmri.qtdmrifit method)": [[176, "dipy.reconst.qtdmri.QtdmriFit.rtap"]], "rtop() (dipy.reconst.mapmri.mapmrifit method)": [[176, "dipy.reconst.mapmri.MapmriFit.rtop"]], "rtop() (dipy.reconst.qtdmri.qtdmrifit method)": [[176, "dipy.reconst.qtdmri.QtdmriFit.rtop"]], "rtop_pdf() (dipy.reconst.dsi.diffusionspectrumfit method)": [[176, "dipy.reconst.dsi.DiffusionSpectrumFit.rtop_pdf"]], "rtop_pdf() (dipy.reconst.shore.shorefit method)": [[176, "dipy.reconst.shore.ShoreFit.rtop_pdf"]], "rtop_signal() (dipy.reconst.dsi.diffusionspectrumfit method)": [[176, "dipy.reconst.dsi.DiffusionSpectrumFit.rtop_signal"]], "rtop_signal() (dipy.reconst.shore.shorefit method)": [[176, "dipy.reconst.shore.ShoreFit.rtop_signal"]], "rtpp() (dipy.reconst.mapmri.mapmrifit method)": [[176, "dipy.reconst.mapmri.MapmriFit.rtpp"]], "rtpp() (dipy.reconst.qtdmri.qtdmrifit method)": [[176, "dipy.reconst.qtdmri.QtdmriFit.rtpp"]], "rumba_deconv() (in module dipy.reconst.rumba)": [[176, "dipy.reconst.rumba.rumba_deconv"]], "rumba_deconv_global() (in module dipy.reconst.rumba)": [[176, "dipy.reconst.rumba.rumba_deconv_global"]], "sampling_matrix() (dipy.reconst.shm.sphharmmodel method)": [[176, "dipy.reconst.shm.SphHarmModel.sampling_matrix"]], "search_descending() (in module dipy.reconst.recspeed)": [[176, "dipy.reconst.recspeed.search_descending"]], "sf_to_sh() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.sf_to_sh"]], "sfm_design_matrix() (in module dipy.reconst.sfm)": [[176, "dipy.reconst.sfm.sfm_design_matrix"]], "sh_coeff (dipy.reconst.forecast.forecastfit property)": [[176, "dipy.reconst.forecast.ForecastFit.sh_coeff"]], "sh_to_rh() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.sh_to_rh"]], "sh_to_sf() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.sh_to_sf"]], "sh_to_sf_matrix() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.sh_to_sf_matrix"]], "shape (dipy.reconst.dti.tensorfit property)": [[176, "dipy.reconst.dti.TensorFit.shape"]], "shape (dipy.reconst.ivim.ivimfit property)": [[176, "dipy.reconst.ivim.IvimFit.shape"]], "shape (dipy.reconst.multi_voxel.multivoxelfit property)": [[176, "dipy.reconst.multi_voxel.MultiVoxelFit.shape"]], "shape (dipy.reconst.shm.sphharmfit property)": [[176, "dipy.reconst.shm.SphHarmFit.shape"]], "shm_coeff (dipy.reconst.mcsd.msdeconvfit property)": [[176, "dipy.reconst.mcsd.MSDeconvFit.shm_coeff"]], "shm_coeff (dipy.reconst.shm.sphharmfit property)": [[176, "dipy.reconst.shm.SphHarmFit.shm_coeff"]], "shore_coeff (dipy.reconst.shore.shorefit property)": [[176, "dipy.reconst.shore.ShoreFit.shore_coeff"]], "shore_indices() (in module dipy.reconst.shore)": [[176, "dipy.reconst.shore.shore_indices"]], "shore_matrix() (in module dipy.reconst.shore)": [[176, "dipy.reconst.shore.shore_matrix"]], "shore_matrix_odf() (in module dipy.reconst.shore)": [[176, "dipy.reconst.shore.shore_matrix_odf"]], "shore_matrix_pdf() (in module dipy.reconst.shore)": [[176, "dipy.reconst.shore.shore_matrix_pdf"]], "shore_order() (in module dipy.reconst.shore)": [[176, "dipy.reconst.shore.shore_order"]], "smooth_pinv() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.smooth_pinv"]], "smt2di() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[176, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.smt2di"]], "smt2f() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[176, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.smt2f"]], "smt2ufa() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[176, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.smt2uFA"]], "solve_qp() (in module dipy.reconst.mcsd)": [[176, "dipy.reconst.mcsd.solve_qp"]], "sparsity_abs() (dipy.reconst.qtdmri.qtdmrifit method)": [[176, "dipy.reconst.qtdmri.QtdmriFit.sparsity_abs"]], "sparsity_density() (dipy.reconst.qtdmri.qtdmrifit method)": [[176, "dipy.reconst.qtdmri.QtdmriFit.sparsity_density"]], "sph_harm_ind_list() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.sph_harm_ind_list"]], "spherical_harmonics() (in module dipy.reconst.shm)": [[176, "dipy.reconst.shm.spherical_harmonics"]], "sphericity() (dipy.reconst.dti.tensorfit method)": [[176, "dipy.reconst.dti.TensorFit.sphericity"]], "sphericity() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.sphericity"]], "split_cti_params() (in module dipy.reconst.cti)": [[176, "dipy.reconst.cti.split_cti_params"]], "split_dki_param() (in module dipy.reconst.dki)": [[176, "dipy.reconst.dki.split_dki_param"]], "squared_radial_component() (in module dipy.reconst.gqi)": [[176, "dipy.reconst.gqi.squared_radial_component"]], "stoc_search_cost() (dipy.reconst.ivim.ivimmodelvp method)": [[176, "dipy.reconst.ivim.IvimModelVP.stoc_search_cost"]], "sum_on_blocks_1d() (in module dipy.reconst.recspeed)": [[176, "dipy.reconst.recspeed.sum_on_blocks_1d"]], "temporal_basis() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.temporal_basis"]], "tensor_prediction() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.tensor_prediction"]], "threshold_propagator() (in module dipy.reconst.dsi)": [[176, "dipy.reconst.dsi.threshold_propagator"]], "tortuosity (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[176, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.tortuosity"]], "tortuosity() (in module dipy.reconst.dki_micro)": [[176, "dipy.reconst.dki_micro.tortuosity"]], "total_weight (dipy.reconst.eudx_direction_getter.eudxdirectiongetter attribute)": [[176, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.total_weight"]], "trace() (dipy.reconst.dti.tensorfit method)": [[176, "dipy.reconst.dti.TensorFit.trace"]], "trace() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.trace"]], "triple_odf_maxima() (in module dipy.reconst.gqi)": [[176, "dipy.reconst.gqi.triple_odf_maxima"]], "ufa() (dipy.reconst.qti.qtifit method)": [[176, "dipy.reconst.qti.QtiFit.ufa"]], "upper_hemi_map() (in module dipy.reconst.gqi)": [[176, "dipy.reconst.gqi.upper_hemi_map"]], "v_iso() (dipy.reconst.qti.qtifit method)": [[176, "dipy.reconst.qti.QtiFit.v_iso"]], "v_md() (dipy.reconst.qti.qtifit method)": [[176, "dipy.reconst.qti.QtiFit.v_md"]], "v_shear() (dipy.reconst.qti.qtifit method)": [[176, "dipy.reconst.qti.QtiFit.v_shear"]], "vec_val_vect() (in module dipy.reconst.vec_val_sum)": [[176, "dipy.reconst.vec_val_sum.vec_val_vect"]], "visualise_gradient_table_g_delta_rainbow() (in module dipy.reconst.qtdmri)": [[176, "dipy.reconst.qtdmri.visualise_gradient_table_G_Delta_rainbow"]], "volume_fractions (dipy.reconst.mcsd.msdeconvfit property)": [[176, "dipy.reconst.mcsd.MSDeconvFit.volume_fractions"]], "wls_fit_msdki() (in module dipy.reconst.msdki)": [[176, "dipy.reconst.msdki.wls_fit_msdki"]], "wls_fit_tensor() (in module dipy.reconst.dti)": [[176, "dipy.reconst.dti.wls_fit_tensor"]], "wls_fit_tensor() (in module dipy.reconst.fwdti)": [[176, "dipy.reconst.fwdti.wls_fit_tensor"]], "wls_iter() (in module dipy.reconst.fwdti)": [[176, "dipy.reconst.fwdti.wls_iter"]], "x_and_f_to_x_f() (dipy.reconst.ivim.ivimmodelvp method)": [[176, "dipy.reconst.ivim.IvimModelVP.x_and_f_to_x_f"]], "x_f_to_x_and_f() (dipy.reconst.ivim.ivimmodelvp method)": [[176, "dipy.reconst.ivim.IvimModelVP.x_f_to_x_and_f"]], "arclengthfeature (class in dipy.segment.featurespeed)": [[177, "dipy.segment.featurespeed.ArcLengthFeature"]], "averagepointwiseeuclideanmetric (class in dipy.segment.metricspeed)": [[177, "dipy.segment.metricspeed.AveragePointwiseEuclideanMetric"]], "centerofmassfeature (class in dipy.segment.featurespeed)": [[177, "dipy.segment.featurespeed.CenterOfMassFeature"]], "cluster (class in dipy.segment.clustering)": [[177, "dipy.segment.clustering.Cluster"]], "clustercentroid (class in dipy.segment.clustering)": [[177, "dipy.segment.clustering.ClusterCentroid"]], "clustercentroid (class in dipy.segment.clustering_algorithms)": [[177, "dipy.segment.clustering_algorithms.ClusterCentroid"]], "clustercentroid (class in dipy.segment.clusteringspeed)": [[177, "dipy.segment.clusteringspeed.ClusterCentroid"]], "clustermap (class in dipy.segment.clustering)": [[177, "dipy.segment.clustering.ClusterMap"]], "clustermapcentroid (class in dipy.segment.clustering)": [[177, "dipy.segment.clustering.ClusterMapCentroid"]], "clustermapcentroid (class in dipy.segment.clustering_algorithms)": [[177, "dipy.segment.clustering_algorithms.ClusterMapCentroid"]], "clustermapcentroid (class in dipy.segment.clusteringspeed)": [[177, "dipy.segment.clusteringspeed.ClusterMapCentroid"]], "clustering (class in dipy.segment.clustering)": [[177, "dipy.segment.clustering.Clustering"]], "clusters (class in dipy.segment.clusteringspeed)": [[177, "dipy.segment.clusteringspeed.Clusters"]], "clusterscentroid (class in dipy.segment.clusteringspeed)": [[177, "dipy.segment.clusteringspeed.ClustersCentroid"]], "constantobservationmodel (class in dipy.segment.mrf)": [[177, "dipy.segment.mrf.ConstantObservationModel"]], "cosinemetric (class in dipy.segment.metricspeed)": [[177, "dipy.segment.metricspeed.CosineMetric"]], "cythonfeature (class in dipy.segment.featurespeed)": [[177, "dipy.segment.featurespeed.CythonFeature"]], "cythonmetric (class in dipy.segment.metricspeed)": [[177, "dipy.segment.metricspeed.CythonMetric"]], "dtype (in module dipy.segment.clustering_algorithms)": [[177, "dipy.segment.clustering_algorithms.DTYPE"]], "dtype (in module dipy.segment.clusteringspeed)": [[177, "dipy.segment.clusteringspeed.DTYPE"]], "faststreamlinesearch (class in dipy.segment.fss)": [[177, "dipy.segment.fss.FastStreamlineSearch"]], "feature (class in dipy.segment.featurespeed)": [[177, "dipy.segment.featurespeed.Feature"]], "identity (class in dipy.segment.clustering)": [[177, "dipy.segment.clustering.Identity"]], "identityfeature (class in dipy.segment.featurespeed)": [[177, "dipy.segment.featurespeed.IdentityFeature"]], "iteratedconditionalmodes (class in dipy.segment.mrf)": [[177, "dipy.segment.mrf.IteratedConditionalModes"]], "mdfpy (class in dipy.segment.benchmarks.bench_quickbundles)": [[177, "dipy.segment.benchmarks.bench_quickbundles.MDFpy"]], "metric (class in dipy.segment.metricspeed)": [[177, "dipy.segment.metricspeed.Metric"]], "midpointfeature (class in dipy.segment.featurespeed)": [[177, "dipy.segment.featurespeed.MidpointFeature"]], "minimumaveragedirectflipmetric (class in dipy.segment.metricspeed)": [[177, "dipy.segment.metricspeed.MinimumAverageDirectFlipMetric"]], "quickbundles (class in dipy.segment.clustering)": [[177, "dipy.segment.clustering.QuickBundles"]], "quickbundles (class in dipy.segment.clusteringspeed)": [[177, "dipy.segment.clusteringspeed.QuickBundles"]], "quickbundlesx (class in dipy.segment.clustering)": [[177, "dipy.segment.clustering.QuickBundlesX"]], "quickbundlesx (class in dipy.segment.clusteringspeed)": [[177, "dipy.segment.clusteringspeed.QuickBundlesX"]], "recobundles (class in dipy.segment.bundles)": [[177, "dipy.segment.bundles.RecoBundles"]], "resamplefeature (class in dipy.segment.featurespeed)": [[177, "dipy.segment.featurespeed.ResampleFeature"]], "sumpointwiseeuclideanmetric (class in dipy.segment.metricspeed)": [[177, "dipy.segment.metricspeed.SumPointwiseEuclideanMetric"]], "tissueclassifierhmrf (class in dipy.segment.tissue)": [[177, "dipy.segment.tissue.TissueClassifierHMRF"]], "treecluster (class in dipy.segment.clustering)": [[177, "dipy.segment.clustering.TreeCluster"]], "treecluster (class in dipy.segment.clusteringspeed)": [[177, "dipy.segment.clusteringspeed.TreeCluster"]], "treeclustermap (class in dipy.segment.clustering)": [[177, "dipy.segment.clustering.TreeClusterMap"]], "treeclustermap (class in dipy.segment.clusteringspeed)": [[177, "dipy.segment.clusteringspeed.TreeClusterMap"]], "vectorofendpointsfeature (class in dipy.segment.featurespeed)": [[177, "dipy.segment.featurespeed.VectorOfEndpointsFeature"]], "__init__() (dipy.segment.benchmarks.bench_quickbundles.mdfpy method)": [[177, "dipy.segment.benchmarks.bench_quickbundles.MDFpy.__init__"]], "__init__() (dipy.segment.bundles.recobundles method)": [[177, "dipy.segment.bundles.RecoBundles.__init__"]], "__init__() (dipy.segment.clustering.cluster method)": [[177, "dipy.segment.clustering.Cluster.__init__"]], "__init__() (dipy.segment.clustering.clustercentroid method)": [[177, "dipy.segment.clustering.ClusterCentroid.__init__"]], "__init__() (dipy.segment.clustering.clustermap method)": [[177, "dipy.segment.clustering.ClusterMap.__init__"]], "__init__() (dipy.segment.clustering.clustermapcentroid method)": [[177, "dipy.segment.clustering.ClusterMapCentroid.__init__"]], "__init__() (dipy.segment.clustering.clustering method)": [[177, "dipy.segment.clustering.Clustering.__init__"]], "__init__() (dipy.segment.clustering.identity method)": [[177, "dipy.segment.clustering.Identity.__init__"]], "__init__() (dipy.segment.clustering.quickbundles method)": [[177, "dipy.segment.clustering.QuickBundles.__init__"]], "__init__() (dipy.segment.clustering.quickbundlesx method)": [[177, "dipy.segment.clustering.QuickBundlesX.__init__"]], "__init__() (dipy.segment.clustering.treecluster method)": [[177, "dipy.segment.clustering.TreeCluster.__init__"]], "__init__() (dipy.segment.clustering.treeclustermap method)": [[177, "dipy.segment.clustering.TreeClusterMap.__init__"]], "__init__() (dipy.segment.clustering_algorithms.clustercentroid method)": [[177, "dipy.segment.clustering_algorithms.ClusterCentroid.__init__"]], "__init__() (dipy.segment.clustering_algorithms.clustermapcentroid method)": [[177, "dipy.segment.clustering_algorithms.ClusterMapCentroid.__init__"]], "__init__() (dipy.segment.clusteringspeed.clustercentroid method)": [[177, "dipy.segment.clusteringspeed.ClusterCentroid.__init__"]], "__init__() (dipy.segment.clusteringspeed.clustermapcentroid method)": [[177, "dipy.segment.clusteringspeed.ClusterMapCentroid.__init__"]], "__init__() (dipy.segment.clusteringspeed.clusters method)": [[177, "dipy.segment.clusteringspeed.Clusters.__init__"]], "__init__() (dipy.segment.clusteringspeed.clusterscentroid method)": [[177, "dipy.segment.clusteringspeed.ClustersCentroid.__init__"]], "__init__() (dipy.segment.clusteringspeed.quickbundles method)": [[177, "dipy.segment.clusteringspeed.QuickBundles.__init__"]], "__init__() (dipy.segment.clusteringspeed.quickbundlesx method)": [[177, "dipy.segment.clusteringspeed.QuickBundlesX.__init__"]], "__init__() (dipy.segment.clusteringspeed.treecluster method)": [[177, "dipy.segment.clusteringspeed.TreeCluster.__init__"]], "__init__() (dipy.segment.clusteringspeed.treeclustermap method)": [[177, "dipy.segment.clusteringspeed.TreeClusterMap.__init__"]], "__init__() (dipy.segment.featurespeed.arclengthfeature method)": [[177, "dipy.segment.featurespeed.ArcLengthFeature.__init__"]], "__init__() (dipy.segment.featurespeed.centerofmassfeature method)": [[177, "dipy.segment.featurespeed.CenterOfMassFeature.__init__"]], "__init__() (dipy.segment.featurespeed.cythonfeature method)": [[177, "dipy.segment.featurespeed.CythonFeature.__init__"]], "__init__() (dipy.segment.featurespeed.feature method)": [[177, "dipy.segment.featurespeed.Feature.__init__"]], "__init__() (dipy.segment.featurespeed.identityfeature method)": [[177, "dipy.segment.featurespeed.IdentityFeature.__init__"]], "__init__() (dipy.segment.featurespeed.midpointfeature method)": [[177, "dipy.segment.featurespeed.MidpointFeature.__init__"]], "__init__() (dipy.segment.featurespeed.resamplefeature method)": [[177, "dipy.segment.featurespeed.ResampleFeature.__init__"]], "__init__() (dipy.segment.featurespeed.vectorofendpointsfeature method)": [[177, "dipy.segment.featurespeed.VectorOfEndpointsFeature.__init__"]], "__init__() (dipy.segment.fss.faststreamlinesearch method)": [[177, "dipy.segment.fss.FastStreamlineSearch.__init__"]], "__init__() (dipy.segment.metricspeed.averagepointwiseeuclideanmetric method)": [[177, "dipy.segment.metricspeed.AveragePointwiseEuclideanMetric.__init__"]], "__init__() (dipy.segment.metricspeed.cosinemetric method)": [[177, "dipy.segment.metricspeed.CosineMetric.__init__"]], "__init__() (dipy.segment.metricspeed.cythonmetric method)": [[177, "dipy.segment.metricspeed.CythonMetric.__init__"]], "__init__() (dipy.segment.metricspeed.metric method)": [[177, "dipy.segment.metricspeed.Metric.__init__"]], "__init__() (dipy.segment.metricspeed.minimumaveragedirectflipmetric method)": [[177, "dipy.segment.metricspeed.MinimumAverageDirectFlipMetric.__init__"]], "__init__() (dipy.segment.metricspeed.sumpointwiseeuclideanmetric method)": [[177, "dipy.segment.metricspeed.SumPointwiseEuclideanMetric.__init__"]], "__init__() (dipy.segment.mrf.constantobservationmodel method)": [[177, "dipy.segment.mrf.ConstantObservationModel.__init__"]], "__init__() (dipy.segment.mrf.iteratedconditionalmodes method)": [[177, "dipy.segment.mrf.IteratedConditionalModes.__init__"]], "__init__() (dipy.segment.tissue.tissueclassifierhmrf method)": [[177, "dipy.segment.tissue.TissueClassifierHMRF.__init__"]], "add() (dipy.segment.clustering.treecluster method)": [[177, "dipy.segment.clustering.TreeCluster.add"]], "add() (dipy.segment.clusteringspeed.treecluster method)": [[177, "dipy.segment.clusteringspeed.TreeCluster.add"]], "add_cluster() (dipy.segment.clustering.clustermap method)": [[177, "dipy.segment.clustering.ClusterMap.add_cluster"]], "applymask() (in module dipy.segment.mask)": [[177, "dipy.segment.mask.applymask"]], "are_compatible() (dipy.segment.benchmarks.bench_quickbundles.mdfpy method)": [[177, "dipy.segment.benchmarks.bench_quickbundles.MDFpy.are_compatible"]], "are_compatible() (dipy.segment.metricspeed.cythonmetric method)": [[177, "dipy.segment.metricspeed.CythonMetric.are_compatible"]], "are_compatible() (dipy.segment.metricspeed.metric method)": [[177, "dipy.segment.metricspeed.Metric.are_compatible"]], "assign() (dipy.segment.clustering.cluster method)": [[177, "dipy.segment.clustering.Cluster.assign"]], "assign() (dipy.segment.clustering.clustercentroid method)": [[177, "dipy.segment.clustering.ClusterCentroid.assign"]], "assign() (dipy.segment.clustering_algorithms.clustercentroid method)": [[177, "dipy.segment.clustering_algorithms.ClusterCentroid.assign"]], "assign() (dipy.segment.clusteringspeed.clustercentroid method)": [[177, "dipy.segment.clusteringspeed.ClusterCentroid.assign"]], "ba_analysis() (in module dipy.segment.bundles)": [[177, "dipy.segment.bundles.ba_analysis"]], "bench_quickbundles() (in module dipy.segment.benchmarks.bench_quickbundles)": [[177, "dipy.segment.benchmarks.bench_quickbundles.bench_quickbundles"]], "bounding_box() (in module dipy.segment.mask)": [[177, "dipy.segment.mask.bounding_box"]], "bundle_adjacency() (in module dipy.segment.bundles)": [[177, "dipy.segment.bundles.bundle_adjacency"]], "bundle_shape_similarity() (in module dipy.segment.bundles)": [[177, "dipy.segment.bundles.bundle_shape_similarity"]], "centroids (dipy.segment.clustering.clustermapcentroid property)": [[177, "dipy.segment.clustering.ClusterMapCentroid.centroids"]], "centroids (dipy.segment.clustering_algorithms.clustermapcentroid property)": [[177, "dipy.segment.clustering_algorithms.ClusterMapCentroid.centroids"]], "centroids (dipy.segment.clusteringspeed.clustermapcentroid property)": [[177, "dipy.segment.clusteringspeed.ClusterMapCentroid.centroids"]], "check_range() (in module dipy.segment.bundles)": [[177, "dipy.segment.bundles.check_range"]], "classify() (dipy.segment.tissue.tissueclassifierhmrf method)": [[177, "dipy.segment.tissue.TissueClassifierHMRF.classify"]], "clean_cc_mask() (in module dipy.segment.mask)": [[177, "dipy.segment.mask.clean_cc_mask"]], "clear() (dipy.segment.clustering.clustermap method)": [[177, "dipy.segment.clustering.ClusterMap.clear"]], "cluster() (dipy.segment.clustering.clustering method)": [[177, "dipy.segment.clustering.Clustering.cluster"]], "cluster() (dipy.segment.clustering.quickbundles method)": [[177, "dipy.segment.clustering.QuickBundles.cluster"]], "cluster() (dipy.segment.clustering.quickbundlesx method)": [[177, "dipy.segment.clustering.QuickBundlesX.cluster"]], "cluster_bundle() (in module dipy.segment.bundles)": [[177, "dipy.segment.bundles.cluster_bundle"]], "clusters (dipy.segment.clustering.clustermap property)": [[177, "dipy.segment.clustering.ClusterMap.clusters"]], "clusters_centroid2clustermap_centroid() (in module dipy.segment.clustering_algorithms)": [[177, "dipy.segment.clustering_algorithms.clusters_centroid2clustermap_centroid"]], "clusters_sizes() (dipy.segment.clustering.clustermap method)": [[177, "dipy.segment.clustering.ClusterMap.clusters_sizes"]], "crop() (in module dipy.segment.mask)": [[177, "dipy.segment.mask.crop"]], "dipy.segment": [[177, "module-dipy.segment"]], "dipy.segment.benchmarks": [[177, "module-dipy.segment.benchmarks"]], "dipy.segment.benchmarks.bench_quickbundles": [[177, "module-dipy.segment.benchmarks.bench_quickbundles"]], "dipy.segment.bundles": [[177, "module-dipy.segment.bundles"]], "dipy.segment.clustering": [[177, "module-dipy.segment.clustering"]], "dipy.segment.clustering_algorithms": [[177, "module-dipy.segment.clustering_algorithms"]], "dipy.segment.clusteringspeed": [[177, "module-dipy.segment.clusteringspeed"]], "dipy.segment.cythonutils": [[177, "module-dipy.segment.cythonutils"]], "dipy.segment.featurespeed": [[177, "module-dipy.segment.featurespeed"]], "dipy.segment.fss": [[177, "module-dipy.segment.fss"]], "dipy.segment.mask": [[177, "module-dipy.segment.mask"]], "dipy.segment.metric": [[177, "module-dipy.segment.metric"]], "dipy.segment.metricspeed": [[177, "module-dipy.segment.metricspeed"]], "dipy.segment.mrf": [[177, "module-dipy.segment.mrf"]], "dipy.segment.threshold": [[177, "module-dipy.segment.threshold"]], "dipy.segment.tissue": [[177, "module-dipy.segment.tissue"]], "dist() (dipy.segment.benchmarks.bench_quickbundles.mdfpy method)": [[177, "dipy.segment.benchmarks.bench_quickbundles.MDFpy.dist"]], "dist() (dipy.segment.metricspeed.cythonmetric method)": [[177, "dipy.segment.metricspeed.CythonMetric.dist"]], "dist() (dipy.segment.metricspeed.metric method)": [[177, "dipy.segment.metricspeed.Metric.dist"]], "dist() (in module dipy.segment.metricspeed)": [[177, "dipy.segment.metricspeed.dist"]], "distance_matrix() (in module dipy.segment.metricspeed)": [[177, "dipy.segment.metricspeed.distance_matrix"]], "evaluate_aabb_checks() (in module dipy.segment.clusteringspeed)": [[177, "dipy.segment.clusteringspeed.evaluate_aabb_checks"]], "evaluate_results() (dipy.segment.bundles.recobundles method)": [[177, "dipy.segment.bundles.RecoBundles.evaluate_results"]], "extract() (dipy.segment.featurespeed.cythonfeature method)": [[177, "dipy.segment.featurespeed.CythonFeature.extract"]], "extract() (dipy.segment.featurespeed.feature method)": [[177, "dipy.segment.featurespeed.Feature.extract"]], "extract() (in module dipy.segment.featurespeed)": [[177, "dipy.segment.featurespeed.extract"]], "feature (dipy.segment.metricspeed.metric attribute)": [[177, "dipy.segment.metricspeed.Metric.feature"]], "get_cluster_map() (dipy.segment.clusteringspeed.quickbundles method)": [[177, "dipy.segment.clusteringspeed.QuickBundles.get_cluster_map"]], "get_clusters() (dipy.segment.clustering.treeclustermap method)": [[177, "dipy.segment.clustering.TreeClusterMap.get_clusters"]], "get_clusters() (dipy.segment.clusteringspeed.treeclustermap method)": [[177, "dipy.segment.clusteringspeed.TreeClusterMap.get_clusters"]], "get_large_clusters() (dipy.segment.clustering.clustermap method)": [[177, "dipy.segment.clustering.ClusterMap.get_large_clusters"]], "get_small_clusters() (dipy.segment.clustering.clustermap method)": [[177, "dipy.segment.clustering.ClusterMap.get_small_clusters"]], "get_stats() (dipy.segment.clusteringspeed.quickbundles method)": [[177, "dipy.segment.clusteringspeed.QuickBundles.get_stats"]], "get_stats() (dipy.segment.clusteringspeed.quickbundlesx method)": [[177, "dipy.segment.clusteringspeed.QuickBundlesX.get_stats"]], "get_tree_cluster_map() (dipy.segment.clusteringspeed.quickbundlesx method)": [[177, "dipy.segment.clusteringspeed.QuickBundlesX.get_tree_cluster_map"]], "icm_ising() (dipy.segment.mrf.iteratedconditionalmodes method)": [[177, "dipy.segment.mrf.IteratedConditionalModes.icm_ising"]], "infer_shape() (dipy.segment.featurespeed.cythonfeature method)": [[177, "dipy.segment.featurespeed.CythonFeature.infer_shape"]], "infer_shape() (dipy.segment.featurespeed.feature method)": [[177, "dipy.segment.featurespeed.Feature.infer_shape"]], "infer_shape() (in module dipy.segment.featurespeed)": [[177, "dipy.segment.featurespeed.infer_shape"]], "initialize_maximum_likelihood() (dipy.segment.mrf.iteratedconditionalmodes method)": [[177, "dipy.segment.mrf.IteratedConditionalModes.initialize_maximum_likelihood"]], "initialize_param_uniform() (dipy.segment.mrf.constantobservationmodel method)": [[177, "dipy.segment.mrf.ConstantObservationModel.initialize_param_uniform"]], "insert() (dipy.segment.clusteringspeed.quickbundlesx method)": [[177, "dipy.segment.clusteringspeed.QuickBundlesX.insert"]], "is_leaf (dipy.segment.clustering.treecluster property)": [[177, "dipy.segment.clustering.TreeCluster.is_leaf"]], "is_leaf (dipy.segment.clusteringspeed.treecluster property)": [[177, "dipy.segment.clusteringspeed.TreeCluster.is_leaf"]], "is_order_invariant (dipy.segment.featurespeed.feature attribute)": [[177, "dipy.segment.featurespeed.Feature.is_order_invariant"]], "is_order_invariant (dipy.segment.metricspeed.metric attribute)": [[177, "dipy.segment.metricspeed.Metric.is_order_invariant"]], "is_order_invariant (dipy.segment.metricspeed.minimumaveragedirectflipmetric attribute)": [[177, "dipy.segment.metricspeed.MinimumAverageDirectFlipMetric.is_order_invariant"]], "iter_preorder() (dipy.segment.clustering.treeclustermap method)": [[177, "dipy.segment.clustering.TreeClusterMap.iter_preorder"]], "iter_preorder() (dipy.segment.clusteringspeed.treeclustermap method)": [[177, "dipy.segment.clusteringspeed.TreeClusterMap.iter_preorder"]], "logger() (in module dipy.segment.bundles)": [[177, "dipy.segment.bundles.logger"]], "logger() (in module dipy.segment.clustering)": [[177, "dipy.segment.clustering.logger"]], "mdf() (in module dipy.segment.metric)": [[177, "dipy.segment.metric.mdf"]], "mean_euclidean_distance() (in module dipy.segment.metric)": [[177, "dipy.segment.metric.mean_euclidean_distance"]], "mean_manhattan_distance() (in module dipy.segment.metric)": [[177, "dipy.segment.metric.mean_manhattan_distance"]], "median_otsu() (in module dipy.segment.mask)": [[177, "dipy.segment.mask.median_otsu"]], "multi_median() (in module dipy.segment.mask)": [[177, "dipy.segment.mask.multi_median"]], "nearest_from_matrix_col() (in module dipy.segment.fss)": [[177, "dipy.segment.fss.nearest_from_matrix_col"]], "nearest_from_matrix_row() (in module dipy.segment.fss)": [[177, "dipy.segment.fss.nearest_from_matrix_row"]], "negloglikelihood() (dipy.segment.mrf.constantobservationmodel method)": [[177, "dipy.segment.mrf.ConstantObservationModel.negloglikelihood"]], "otsu() (in module dipy.segment.threshold)": [[177, "dipy.segment.threshold.otsu"]], "peek() (in module dipy.segment.clustering_algorithms)": [[177, "dipy.segment.clustering_algorithms.peek"]], "prob_image() (dipy.segment.mrf.constantobservationmodel method)": [[177, "dipy.segment.mrf.ConstantObservationModel.prob_image"]], "prob_neighborhood() (dipy.segment.mrf.iteratedconditionalmodes method)": [[177, "dipy.segment.mrf.IteratedConditionalModes.prob_neighborhood"]], "qbx_and_merge() (in module dipy.segment.clustering)": [[177, "dipy.segment.clustering.qbx_and_merge"]], "quickbundles() (in module dipy.segment.clustering_algorithms)": [[177, "dipy.segment.clustering_algorithms.quickbundles"]], "quickbundlesx() (in module dipy.segment.clustering_algorithms)": [[177, "dipy.segment.clustering_algorithms.quickbundlesx"]], "radius_search() (dipy.segment.fss.faststreamlinesearch method)": [[177, "dipy.segment.fss.FastStreamlineSearch.radius_search"]], "recognize() (dipy.segment.bundles.recobundles method)": [[177, "dipy.segment.bundles.RecoBundles.recognize"]], "refdata (dipy.segment.clustering.clustermap property)": [[177, "dipy.segment.clustering.ClusterMap.refdata"]], "refdata (dipy.segment.clustering.treeclustermap property)": [[177, "dipy.segment.clustering.TreeClusterMap.refdata"]], "refdata (dipy.segment.clusteringspeed.treeclustermap property)": [[177, "dipy.segment.clusteringspeed.TreeClusterMap.refdata"]], "refine() (dipy.segment.bundles.recobundles method)": [[177, "dipy.segment.bundles.RecoBundles.refine"]], "remove_cluster() (dipy.segment.clustering.clustermap method)": [[177, "dipy.segment.clustering.ClusterMap.remove_cluster"]], "return_indices() (dipy.segment.clustering.treecluster method)": [[177, "dipy.segment.clustering.TreeCluster.return_indices"]], "return_indices() (dipy.segment.clusteringspeed.treecluster method)": [[177, "dipy.segment.clusteringspeed.TreeCluster.return_indices"]], "seg_stats() (dipy.segment.mrf.constantobservationmodel method)": [[177, "dipy.segment.mrf.ConstantObservationModel.seg_stats"]], "segment_from_cfa() (in module dipy.segment.mask)": [[177, "dipy.segment.mask.segment_from_cfa"]], "size() (dipy.segment.clustering.clustermap method)": [[177, "dipy.segment.clustering.ClusterMap.size"]], "traverse_postorder() (dipy.segment.clustering.treeclustermap method)": [[177, "dipy.segment.clustering.TreeClusterMap.traverse_postorder"]], "traverse_postorder() (dipy.segment.clusteringspeed.treeclustermap method)": [[177, "dipy.segment.clusteringspeed.TreeClusterMap.traverse_postorder"]], "update() (dipy.segment.clustering.clustercentroid method)": [[177, "dipy.segment.clustering.ClusterCentroid.update"]], "update() (dipy.segment.clustering_algorithms.clustercentroid method)": [[177, "dipy.segment.clustering_algorithms.ClusterCentroid.update"]], "update() (dipy.segment.clusteringspeed.clustercentroid method)": [[177, "dipy.segment.clusteringspeed.ClusterCentroid.update"]], "update_param() (dipy.segment.mrf.constantobservationmodel method)": [[177, "dipy.segment.mrf.ConstantObservationModel.update_param"]], "upper_bound_by_percent() (in module dipy.segment.threshold)": [[177, "dipy.segment.threshold.upper_bound_by_percent"]], "upper_bound_by_rate() (in module dipy.segment.threshold)": [[177, "dipy.segment.threshold.upper_bound_by_rate"]], "add_noise() (in module dipy.sims.phantom)": [[178, "dipy.sims.phantom.add_noise"]], "add_noise() (in module dipy.sims.voxel)": [[178, "dipy.sims.voxel.add_noise"]], "all_tensor_evecs() (in module dipy.sims.voxel)": [[178, "dipy.sims.voxel.all_tensor_evecs"]], "callaghan_perpendicular() (in module dipy.sims.voxel)": [[178, "dipy.sims.voxel.callaghan_perpendicular"]], "cylinders_and_ball_soderman() (in module dipy.sims.voxel)": [[178, "dipy.sims.voxel.cylinders_and_ball_soderman"]], "diff2eigenvectors() (in module dipy.sims.phantom)": [[178, "dipy.sims.phantom.diff2eigenvectors"]], "diffusion_evals() (in module dipy.sims.voxel)": [[178, "dipy.sims.voxel.diffusion_evals"]], "dipy.sims": [[178, "module-dipy.sims"]], "dipy.sims.phantom": [[178, "module-dipy.sims.phantom"]], "dipy.sims.voxel": [[178, "module-dipy.sims.voxel"]], "dki_signal() (in module dipy.sims.voxel)": [[178, "dipy.sims.voxel.dki_signal"]], "gaussian_parallel() (in module dipy.sims.voxel)": [[178, "dipy.sims.voxel.gaussian_parallel"]], "kurtosis_element() (in module dipy.sims.voxel)": [[178, "dipy.sims.voxel.kurtosis_element"]], "multi_tensor() (in module dipy.sims.voxel)": [[178, "dipy.sims.voxel.multi_tensor"]], "multi_tensor_dki() (in module dipy.sims.voxel)": [[178, "dipy.sims.voxel.multi_tensor_dki"]], "multi_tensor_msd() (in module dipy.sims.voxel)": [[178, "dipy.sims.voxel.multi_tensor_msd"]], "multi_tensor_odf() (in module dipy.sims.voxel)": [[178, "dipy.sims.voxel.multi_tensor_odf"]], "multi_tensor_pdf() (in module dipy.sims.voxel)": [[178, "dipy.sims.voxel.multi_tensor_pdf"]], "multi_tensor_rtop() (in module dipy.sims.voxel)": [[178, "dipy.sims.voxel.multi_tensor_rtop"]], "orbital_phantom() (in module dipy.sims.phantom)": [[178, "dipy.sims.phantom.orbital_phantom"]], "single_tensor() (in module dipy.sims.voxel)": [[178, "dipy.sims.voxel.single_tensor"]], "single_tensor_msd() (in module dipy.sims.voxel)": [[178, "dipy.sims.voxel.single_tensor_msd"]], "single_tensor_odf() (in module dipy.sims.voxel)": [[178, "dipy.sims.voxel.single_tensor_odf"]], "single_tensor_pdf() (in module dipy.sims.voxel)": [[178, "dipy.sims.voxel.single_tensor_pdf"]], "single_tensor_rtop() (in module dipy.sims.voxel)": [[178, "dipy.sims.voxel.single_tensor_rtop"]], "sticks_and_ball() (in module dipy.sims.voxel)": [[178, "dipy.sims.voxel.sticks_and_ball"]], "afq_profile() (in module dipy.stats.analysis)": [[179, "dipy.stats.analysis.afq_profile"]], "anatomical_measures() (in module dipy.stats.analysis)": [[179, "dipy.stats.analysis.anatomical_measures"]], "assignment_map() (in module dipy.stats.analysis)": [[179, "dipy.stats.analysis.assignment_map"]], "dipy.stats": [[179, "module-dipy.stats"]], "dipy.stats.analysis": [[179, "module-dipy.stats.analysis"]], "gaussian_weights() (in module dipy.stats.analysis)": [[179, "dipy.stats.analysis.gaussian_weights"]], "peak_values() (in module dipy.stats.analysis)": [[179, "dipy.stats.analysis.peak_values"]], "actstoppingcriterion (class in dipy.tracking.stopping_criterion)": [[180, "dipy.tracking.stopping_criterion.ActStoppingCriterion"]], "anatomicalstoppingcriterion (class in dipy.tracking.stopping_criterion)": [[180, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion"]], "binarystoppingcriterion (class in dipy.tracking.stopping_criterion)": [[180, "dipy.tracking.stopping_criterion.BinaryStoppingCriterion"]], "cmcstoppingcriterion (class in dipy.tracking.stopping_criterion)": [[180, "dipy.tracking.stopping_criterion.CmcStoppingCriterion"]], "directiongetter (class in dipy.tracking.direction_getter)": [[180, "dipy.tracking.direction_getter.DirectionGetter"]], "endpoint (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[180, "dipy.tracking.stopping_criterion.StreamlineStatus.ENDPOINT"]], "fbcmeasures (class in dipy.tracking.fbcmeasures)": [[180, "dipy.tracking.fbcmeasures.FBCMeasures"]], "fiberfit (class in dipy.tracking.life)": [[180, "dipy.tracking.life.FiberFit"]], "fibermodel (class in dipy.tracking.life)": [[180, "dipy.tracking.life.FiberModel"]], "invalidpoint (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[180, "dipy.tracking.stopping_criterion.StreamlineStatus.INVALIDPOINT"]], "kdtree (class in dipy.tracking.fbcmeasures)": [[180, "dipy.tracking.fbcmeasures.KDTree"]], "kdtree.innernode (class in dipy.tracking.fbcmeasures)": [[180, "dipy.tracking.fbcmeasures.KDTree.innernode"]], "kdtree.leafnode (class in dipy.tracking.fbcmeasures)": [[180, "dipy.tracking.fbcmeasures.KDTree.leafnode"]], "kdtree.node (class in dipy.tracking.fbcmeasures)": [[180, "dipy.tracking.fbcmeasures.KDTree.node"]], "lifesignalmaker (class in dipy.tracking.life)": [[180, "dipy.tracking.life.LifeSignalMaker"]], "localtracking (class in dipy.tracking.local_tracking)": [[180, "dipy.tracking.local_tracking.LocalTracking"]], "outsideimage (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[180, "dipy.tracking.stopping_criterion.StreamlineStatus.OUTSIDEIMAGE"]], "pyerror (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[180, "dipy.tracking.stopping_criterion.StreamlineStatus.PYERROR"]], "particlefilteringtracking (class in dipy.tracking.local_tracking)": [[180, "dipy.tracking.local_tracking.ParticleFilteringTracking"]], "stoppingcriterion (class in dipy.tracking.stopping_criterion)": [[180, "dipy.tracking.stopping_criterion.StoppingCriterion"]], "streamlinestatus (class in dipy.tracking.stopping_criterion)": [[180, "dipy.tracking.stopping_criterion.StreamlineStatus"]], "streamlines (in module dipy.tracking.streamlinespeed)": [[180, "dipy.tracking.streamlinespeed.Streamlines"]], "trackpoint (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[180, "dipy.tracking.stopping_criterion.StreamlineStatus.TRACKPOINT"]], "thresholdstoppingcriterion (class in dipy.tracking.stopping_criterion)": [[180, "dipy.tracking.stopping_criterion.ThresholdStoppingCriterion"]], "__init__() (dipy.tracking.direction_getter.directiongetter method)": [[180, "dipy.tracking.direction_getter.DirectionGetter.__init__"]], "__init__() (dipy.tracking.fbcmeasures.fbcmeasures method)": [[180, "dipy.tracking.fbcmeasures.FBCMeasures.__init__"]], "__init__() (dipy.tracking.fbcmeasures.kdtree method)": [[180, "dipy.tracking.fbcmeasures.KDTree.__init__"]], "__init__() (dipy.tracking.fbcmeasures.interp1d method)": [[180, "dipy.tracking.fbcmeasures.interp1d.__init__"]], "__init__() (dipy.tracking.life.fiberfit method)": [[180, "dipy.tracking.life.FiberFit.__init__"]], "__init__() (dipy.tracking.life.fibermodel method)": [[180, "dipy.tracking.life.FiberModel.__init__"]], "__init__() (dipy.tracking.life.lifesignalmaker method)": [[180, "dipy.tracking.life.LifeSignalMaker.__init__"]], "__init__() (dipy.tracking.local_tracking.localtracking method)": [[180, "dipy.tracking.local_tracking.LocalTracking.__init__"]], "__init__() (dipy.tracking.local_tracking.particlefilteringtracking method)": [[180, "dipy.tracking.local_tracking.ParticleFilteringTracking.__init__"]], "__init__() (dipy.tracking.stopping_criterion.actstoppingcriterion method)": [[180, "dipy.tracking.stopping_criterion.ActStoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.anatomicalstoppingcriterion method)": [[180, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.binarystoppingcriterion method)": [[180, "dipy.tracking.stopping_criterion.BinaryStoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.cmcstoppingcriterion method)": [[180, "dipy.tracking.stopping_criterion.CmcStoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.stoppingcriterion method)": [[180, "dipy.tracking.stopping_criterion.StoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.streamlinestatus method)": [[180, "dipy.tracking.stopping_criterion.StreamlineStatus.__init__"]], "__init__() (dipy.tracking.stopping_criterion.thresholdstoppingcriterion method)": [[180, "dipy.tracking.stopping_criterion.ThresholdStoppingCriterion.__init__"]], "add_3vecs() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.add_3vecs"]], "approx_polygon_track() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.approx_polygon_track"]], "approximate_mdl_trajectory() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.approximate_mdl_trajectory"]], "arbitrarypoint() (in module dipy.tracking.metrics)": [[180, "dipy.tracking.metrics.arbitrarypoint"]], "bench_compress_streamlines() (in module dipy.tracking.benchmarks.bench_streamline)": [[180, "dipy.tracking.benchmarks.bench_streamline.bench_compress_streamlines"]], "bench_length() (in module dipy.tracking.benchmarks.bench_streamline)": [[180, "dipy.tracking.benchmarks.bench_streamline.bench_length"]], "bench_set_number_of_points() (in module dipy.tracking.benchmarks.bench_streamline)": [[180, "dipy.tracking.benchmarks.bench_streamline.bench_set_number_of_points"]], "bundles_distances_mam() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.bundles_distances_mam"]], "bundles_distances_mdf() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.bundles_distances_mdf"]], "bytes() (in module dipy.tracking.metrics)": [[180, "dipy.tracking.metrics.bytes"]], "calc_signal() (dipy.tracking.life.lifesignalmaker method)": [[180, "dipy.tracking.life.LifeSignalMaker.calc_signal"]], "center_of_mass() (in module dipy.tracking.metrics)": [[180, "dipy.tracking.metrics.center_of_mass"]], "center_streamlines() (in module dipy.tracking.streamline)": [[180, "dipy.tracking.streamline.center_streamlines"]], "check_point() (dipy.tracking.stopping_criterion.stoppingcriterion method)": [[180, "dipy.tracking.stopping_criterion.StoppingCriterion.check_point"]], "children (dipy.tracking.fbcmeasures.kdtree.innernode property)": [[180, "dipy.tracking.fbcmeasures.KDTree.innernode.children"]], "children (dipy.tracking.fbcmeasures.kdtree.leafnode property)": [[180, "dipy.tracking.fbcmeasures.KDTree.leafnode.children"]], "cluster_confidence() (in module dipy.tracking.streamline)": [[180, "dipy.tracking.streamline.cluster_confidence"]], "compress_streamlines() (in module dipy.tracking.streamlinespeed)": [[180, "dipy.tracking.streamlinespeed.compress_streamlines"]], "compute_rfbc() (in module dipy.tracking.fbcmeasures)": [[180, "dipy.tracking.fbcmeasures.compute_rfbc"]], "connectivity_matrix() (in module dipy.tracking.utils)": [[180, "dipy.tracking.utils.connectivity_matrix"]], "count_neighbors() (dipy.tracking.fbcmeasures.kdtree method)": [[180, "dipy.tracking.fbcmeasures.KDTree.count_neighbors"]], "cut_plane() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.cut_plane"]], "deform_streamlines() (in module dipy.tracking.streamline)": [[180, "dipy.tracking.streamline.deform_streamlines"]], "density_map() (in module dipy.tracking.utils)": [[180, "dipy.tracking.utils.density_map"]], "detect_corresponding_tracks() (in module dipy.tracking.learning)": [[180, "dipy.tracking.learning.detect_corresponding_tracks"]], "detect_corresponding_tracks_plus() (in module dipy.tracking.learning)": [[180, "dipy.tracking.learning.detect_corresponding_tracks_plus"]], "determine_num_threads() (in module dipy.tracking.fbcmeasures)": [[180, "dipy.tracking.fbcmeasures.determine_num_threads"]], "dipy.tracking": [[180, "module-dipy.tracking"]], "dipy.tracking._utils": [[180, "module-dipy.tracking._utils"]], "dipy.tracking.benchmarks": [[180, "module-dipy.tracking.benchmarks"]], "dipy.tracking.benchmarks.bench_streamline": [[180, "module-dipy.tracking.benchmarks.bench_streamline"]], "dipy.tracking.direction_getter": [[180, "module-dipy.tracking.direction_getter"]], "dipy.tracking.distances": [[180, "module-dipy.tracking.distances"]], "dipy.tracking.fbcmeasures": [[180, "module-dipy.tracking.fbcmeasures"]], "dipy.tracking.learning": [[180, "module-dipy.tracking.learning"]], "dipy.tracking.life": [[180, "module-dipy.tracking.life"]], "dipy.tracking.local_tracking": [[180, "module-dipy.tracking.local_tracking"]], "dipy.tracking.localtrack": [[180, "module-dipy.tracking.localtrack"]], "dipy.tracking.mesh": [[180, "module-dipy.tracking.mesh"]], "dipy.tracking.metrics": [[180, "module-dipy.tracking.metrics"]], "dipy.tracking.propspeed": [[180, "module-dipy.tracking.propspeed"]], "dipy.tracking.stopping_criterion": [[180, "module-dipy.tracking.stopping_criterion"]], "dipy.tracking.streamline": [[180, "module-dipy.tracking.streamline"]], "dipy.tracking.streamlinespeed": [[180, "module-dipy.tracking.streamlinespeed"]], "dipy.tracking.utils": [[180, "module-dipy.tracking.utils"]], "dipy.tracking.vox2track": [[180, "module-dipy.tracking.vox2track"]], "downsample() (in module dipy.tracking.metrics)": [[180, "dipy.tracking.metrics.downsample"]], "dtype (dipy.tracking.fbcmeasures.interp1d attribute)": [[180, "dipy.tracking.fbcmeasures.interp1d.dtype"]], "endpoint() (in module dipy.tracking.metrics)": [[180, "dipy.tracking.metrics.endpoint"]], "eudx_both_directions() (in module dipy.tracking.propspeed)": [[180, "dipy.tracking.propspeed.eudx_both_directions"]], "fill_value (dipy.tracking.fbcmeasures.interp1d property)": [[180, "dipy.tracking.fbcmeasures.interp1d.fill_value"]], "fit() (dipy.tracking.life.fibermodel method)": [[180, "dipy.tracking.life.FiberModel.fit"]], "frenet_serret() (in module dipy.tracking.metrics)": [[180, "dipy.tracking.metrics.frenet_serret"]], "from_pve() (dipy.tracking.stopping_criterion.anatomicalstoppingcriterion class method)": [[180, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion.from_pve"]], "generate_combinations() (in module dipy.tracking.metrics)": [[180, "dipy.tracking.metrics.generate_combinations"]], "generate_streamline() (dipy.tracking.direction_getter.directiongetter method)": [[180, "dipy.tracking.direction_getter.DirectionGetter.generate_streamline"]], "generate_streamlines() (in module dipy.tracking.benchmarks.bench_streamline)": [[180, "dipy.tracking.benchmarks.bench_streamline.generate_streamlines"]], "get_direction() (dipy.tracking.direction_getter.directiongetter method)": [[180, "dipy.tracking.direction_getter.DirectionGetter.get_direction"]], "get_exclude() (dipy.tracking.stopping_criterion.anatomicalstoppingcriterion method)": [[180, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion.get_exclude"]], "get_include() (dipy.tracking.stopping_criterion.anatomicalstoppingcriterion method)": [[180, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion.get_include"]], "get_points_rfbc_thresholded() (dipy.tracking.fbcmeasures.fbcmeasures method)": [[180, "dipy.tracking.fbcmeasures.FBCMeasures.get_points_rfbc_thresholded"]], "grad_tensor() (in module dipy.tracking.life)": [[180, "dipy.tracking.life.grad_tensor"]], "gradient() (in module dipy.tracking.life)": [[180, "dipy.tracking.life.gradient"]], "idx (dipy.tracking.fbcmeasures.kdtree.leafnode property)": [[180, "dipy.tracking.fbcmeasures.KDTree.leafnode.idx"]], "initial_direction() (dipy.tracking.direction_getter.directiongetter method)": [[180, "dipy.tracking.direction_getter.DirectionGetter.initial_direction"]], "inner_3vecs() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.inner_3vecs"]], "inside_sphere() (in module dipy.tracking.metrics)": [[180, "dipy.tracking.metrics.inside_sphere"]], "inside_sphere_points() (in module dipy.tracking.metrics)": [[180, "dipy.tracking.metrics.inside_sphere_points"]], "interp1d (class in dipy.tracking.fbcmeasures)": [[180, "dipy.tracking.fbcmeasures.interp1d"]], "intersect_segment_cylinder() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.intersect_segment_cylinder"]], "intersect_sphere() (in module dipy.tracking.metrics)": [[180, "dipy.tracking.metrics.intersect_sphere"]], "larch_3merge() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.larch_3merge"]], "larch_3split() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.larch_3split"]], "lee_angle_distance() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.lee_angle_distance"]], "lee_perpendicular_distance() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.lee_perpendicular_distance"]], "length() (in module dipy.tracking.metrics)": [[180, "dipy.tracking.metrics.length"]], "length() (in module dipy.tracking.streamlinespeed)": [[180, "dipy.tracking.streamlinespeed.length"]], "length() (in module dipy.tracking.utils)": [[180, "dipy.tracking.utils.length"]], "local_skeleton_clustering() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.local_skeleton_clustering"]], "local_skeleton_clustering_3pts() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.local_skeleton_clustering_3pts"]], "local_tracker() (in module dipy.tracking.localtrack)": [[180, "dipy.tracking.localtrack.local_tracker"]], "longest_track_bundle() (in module dipy.tracking.metrics)": [[180, "dipy.tracking.metrics.longest_track_bundle"]], "magn() (in module dipy.tracking.metrics)": [[180, "dipy.tracking.metrics.magn"]], "mam_distances() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.mam_distances"]], "max_angle_from_curvature() (in module dipy.tracking.utils)": [[180, "dipy.tracking.utils.max_angle_from_curvature"]], "mean_curvature() (in module dipy.tracking.metrics)": [[180, "dipy.tracking.metrics.mean_curvature"]], "mean_orientation() (in module dipy.tracking.metrics)": [[180, "dipy.tracking.metrics.mean_orientation"]], "midpoint() (in module dipy.tracking.metrics)": [[180, "dipy.tracking.metrics.midpoint"]], "midpoint2point() (in module dipy.tracking.metrics)": [[180, "dipy.tracking.metrics.midpoint2point"]], "min_moving_average() (in module dipy.tracking.fbcmeasures)": [[180, "dipy.tracking.fbcmeasures.min_moving_average"]], "min_radius_curvature_from_angle() (in module dipy.tracking.utils)": [[180, "dipy.tracking.utils.min_radius_curvature_from_angle"]], "minimum_closest_distance() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.minimum_closest_distance"]], "most_similar_track_mam() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.most_similar_track_mam"]], "mul_3vec() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.mul_3vec"]], "mul_3vecs() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.mul_3vecs"]], "nbytes() (in module dipy.tracking.streamline)": [[180, "dipy.tracking.streamline.nbytes"]], "ndarray_offset() (in module dipy.tracking.propspeed)": [[180, "dipy.tracking.propspeed.ndarray_offset"]], "ndbincount() (in module dipy.tracking.utils)": [[180, "dipy.tracking.utils.ndbincount"]], "near_roi() (in module dipy.tracking.utils)": [[180, "dipy.tracking.utils.near_roi"]], "norm_3vec() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.norm_3vec"]], "normalized_3vec() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.normalized_3vec"]], "orient_by_rois() (in module dipy.tracking.streamline)": [[180, "dipy.tracking.streamline.orient_by_rois"]], "orient_by_streamline() (in module dipy.tracking.streamline)": [[180, "dipy.tracking.streamline.orient_by_streamline"]], "path_length() (in module dipy.tracking.utils)": [[180, "dipy.tracking.utils.path_length"]], "pft_tracker() (in module dipy.tracking.localtrack)": [[180, "dipy.tracking.localtrack.pft_tracker"]], "point_segment_sq_distance() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.point_segment_sq_distance"]], "point_track_sq_distance_check() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.point_track_sq_distance_check"]], "predict() (dipy.tracking.life.fiberfit method)": [[180, "dipy.tracking.life.FiberFit.predict"]], "principal_components() (in module dipy.tracking.metrics)": [[180, "dipy.tracking.metrics.principal_components"]], "query() (dipy.tracking.fbcmeasures.kdtree method)": [[180, "dipy.tracking.fbcmeasures.KDTree.query"]], "query_ball_point() (dipy.tracking.fbcmeasures.kdtree method)": [[180, "dipy.tracking.fbcmeasures.KDTree.query_ball_point"]], "query_ball_tree() (dipy.tracking.fbcmeasures.kdtree method)": [[180, "dipy.tracking.fbcmeasures.KDTree.query_ball_tree"]], "query_pairs() (dipy.tracking.fbcmeasures.kdtree method)": [[180, "dipy.tracking.fbcmeasures.KDTree.query_pairs"]], "random() (in module dipy.tracking.localtrack)": [[180, "dipy.tracking.localtrack.random"]], "random_coordinates_from_surface() (in module dipy.tracking.mesh)": [[180, "dipy.tracking.mesh.random_coordinates_from_surface"]], "random_seeds_from_mask() (in module dipy.tracking.utils)": [[180, "dipy.tracking.utils.random_seeds_from_mask"]], "reduce_labels() (in module dipy.tracking.utils)": [[180, "dipy.tracking.utils.reduce_labels"]], "reduce_rois() (in module dipy.tracking.utils)": [[180, "dipy.tracking.utils.reduce_rois"]], "relist_streamlines() (in module dipy.tracking.streamline)": [[180, "dipy.tracking.streamline.relist_streamlines"]], "seeds_from_mask() (in module dipy.tracking.utils)": [[180, "dipy.tracking.utils.seeds_from_mask"]], "seeds_from_surface_coordinates() (in module dipy.tracking.mesh)": [[180, "dipy.tracking.mesh.seeds_from_surface_coordinates"]], "select_by_rois() (in module dipy.tracking.streamline)": [[180, "dipy.tracking.streamline.select_by_rois"]], "select_random_set_of_streamlines() (in module dipy.tracking.streamline)": [[180, "dipy.tracking.streamline.select_random_set_of_streamlines"]], "set_number_of_points() (in module dipy.tracking.streamlinespeed)": [[180, "dipy.tracking.streamlinespeed.set_number_of_points"]], "setup() (dipy.tracking.life.fibermodel method)": [[180, "dipy.tracking.life.FiberModel.setup"]], "setup() (in module dipy.tracking.benchmarks.bench_streamline)": [[180, "dipy.tracking.benchmarks.bench_streamline.setup"]], "sparse_distance_matrix() (dipy.tracking.fbcmeasures.kdtree method)": [[180, "dipy.tracking.fbcmeasures.KDTree.sparse_distance_matrix"]], "spline() (in module dipy.tracking.metrics)": [[180, "dipy.tracking.metrics.spline"]], "split (dipy.tracking.fbcmeasures.kdtree.innernode property)": [[180, "dipy.tracking.fbcmeasures.KDTree.innernode.split"]], "split_dim (dipy.tracking.fbcmeasures.kdtree.innernode property)": [[180, "dipy.tracking.fbcmeasures.KDTree.innernode.split_dim"]], "startpoint() (in module dipy.tracking.metrics)": [[180, "dipy.tracking.metrics.startpoint"]], "streamline_gradients() (in module dipy.tracking.life)": [[180, "dipy.tracking.life.streamline_gradients"]], "streamline_mapping() (in module dipy.tracking.vox2track)": [[180, "dipy.tracking.vox2track.streamline_mapping"]], "streamline_near_roi() (in module dipy.tracking.utils)": [[180, "dipy.tracking.utils.streamline_near_roi"]], "streamline_signal() (dipy.tracking.life.lifesignalmaker method)": [[180, "dipy.tracking.life.LifeSignalMaker.streamline_signal"]], "streamline_signal() (in module dipy.tracking.life)": [[180, "dipy.tracking.life.streamline_signal"]], "streamline_tensors() (in module dipy.tracking.life)": [[180, "dipy.tracking.life.streamline_tensors"]], "sub_3vecs() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.sub_3vecs"]], "subsegment() (in module dipy.tracking.utils)": [[180, "dipy.tracking.utils.subsegment"]], "target() (in module dipy.tracking.utils)": [[180, "dipy.tracking.utils.target"]], "target_line_based() (in module dipy.tracking.utils)": [[180, "dipy.tracking.utils.target_line_based"]], "track_counts() (in module dipy.tracking.vox2track)": [[180, "dipy.tracking.vox2track.track_counts"]], "track_dist_3pts() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.track_dist_3pts"]], "track_roi_intersection_check() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.track_roi_intersection_check"]], "transform_streamlines() (in module dipy.tracking.streamline)": [[180, "dipy.tracking.streamline.transform_streamlines"]], "transform_tracking_output() (in module dipy.tracking.utils)": [[180, "dipy.tracking.utils.transform_tracking_output"]], "tree (dipy.tracking.fbcmeasures.kdtree property)": [[180, "dipy.tracking.fbcmeasures.KDTree.tree"]], "triangles_area() (in module dipy.tracking.mesh)": [[180, "dipy.tracking.mesh.triangles_area"]], "unique_rows() (in module dipy.tracking.utils)": [[180, "dipy.tracking.utils.unique_rows"]], "unlist_streamlines() (in module dipy.tracking.streamline)": [[180, "dipy.tracking.streamline.unlist_streamlines"]], "values_from_volume() (in module dipy.tracking.streamline)": [[180, "dipy.tracking.streamline.values_from_volume"]], "vertices_to_triangles_values() (in module dipy.tracking.mesh)": [[180, "dipy.tracking.mesh.vertices_to_triangles_values"]], "voxel2streamline() (in module dipy.tracking.life)": [[180, "dipy.tracking.life.voxel2streamline"]], "warn() (in module dipy.tracking.distances)": [[180, "dipy.tracking.distances.warn"]], "winding() (in module dipy.tracking.metrics)": [[180, "dipy.tracking.metrics.winding"]], "clusterstab (class in dipy.viz.horizon.tab.cluster)": [[181, "dipy.viz.horizon.tab.cluster.ClustersTab"]], "clustersvisualizer (class in dipy.viz.horizon.visualizer.cluster)": [[181, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer"]], "globalhorizon (class in dipy.viz.gmem)": [[181, "dipy.viz.gmem.GlobalHorizon"]], "horizon (class in dipy.viz.horizon.app)": [[181, "dipy.viz.horizon.app.Horizon"]], "horizontab (class in dipy.viz.horizon.tab.base)": [[181, "dipy.viz.horizon.tab.base.HorizonTab"]], "peakstab (class in dipy.viz.horizon.tab.peak)": [[181, "dipy.viz.horizon.tab.peak.PeaksTab"]], "roistab (class in dipy.viz.horizon.tab.roi)": [[181, "dipy.viz.horizon.tab.roi.ROIsTab"]], "slicestab (class in dipy.viz.horizon.tab.slice)": [[181, "dipy.viz.horizon.tab.slice.SlicesTab"]], "slicesvisualizer (class in dipy.viz.horizon.visualizer.slice)": [[181, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer"]], "tabmanager (class in dipy.viz.horizon.tab.base)": [[181, "dipy.viz.horizon.tab.base.TabManager"]], "__init__() (dipy.viz.gmem.globalhorizon method)": [[181, "dipy.viz.gmem.GlobalHorizon.__init__"]], "__init__() (dipy.viz.horizon.app.horizon method)": [[181, "dipy.viz.horizon.app.Horizon.__init__"]], "__init__() (dipy.viz.horizon.tab.base.horizontab method)": [[181, "dipy.viz.horizon.tab.base.HorizonTab.__init__"]], "__init__() (dipy.viz.horizon.tab.base.tabmanager method)": [[181, "dipy.viz.horizon.tab.base.TabManager.__init__"]], "__init__() (dipy.viz.horizon.tab.cluster.clusterstab method)": [[181, "dipy.viz.horizon.tab.cluster.ClustersTab.__init__"]], "__init__() (dipy.viz.horizon.tab.peak.peakstab method)": [[181, "dipy.viz.horizon.tab.peak.PeaksTab.__init__"]], "__init__() (dipy.viz.horizon.tab.roi.roistab method)": [[181, "dipy.viz.horizon.tab.roi.ROIsTab.__init__"]], "__init__() (dipy.viz.horizon.tab.slice.slicestab method)": [[181, "dipy.viz.horizon.tab.slice.SlicesTab.__init__"]], "__init__() (dipy.viz.horizon.visualizer.cluster.clustersvisualizer method)": [[181, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.__init__"]], "__init__() (dipy.viz.horizon.visualizer.slice.slicesvisualizer method)": [[181, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.__init__"]], "add_cluster_actors() (dipy.viz.horizon.visualizer.cluster.clustersvisualizer method)": [[181, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.add_cluster_actors"]], "build() (dipy.viz.horizon.tab.base.horizontab method)": [[181, "dipy.viz.horizon.tab.base.HorizonTab.build"]], "build() (dipy.viz.horizon.tab.cluster.clusterstab method)": [[181, "dipy.viz.horizon.tab.cluster.ClustersTab.build"]], "build() (dipy.viz.horizon.tab.peak.peakstab method)": [[181, "dipy.viz.horizon.tab.peak.PeaksTab.build"]], "build() (dipy.viz.horizon.tab.roi.roistab method)": [[181, "dipy.viz.horizon.tab.roi.ROIsTab.build"]], "build() (dipy.viz.horizon.tab.slice.slicestab method)": [[181, "dipy.viz.horizon.tab.slice.SlicesTab.build"]], "build_label() (in module dipy.viz.horizon.tab.base)": [[181, "dipy.viz.horizon.tab.base.build_label"]], "build_label() (in module dipy.viz.panel)": [[181, "dipy.viz.panel.build_label"]], "build_scene() (dipy.viz.horizon.app.horizon method)": [[181, "dipy.viz.horizon.app.Horizon.build_scene"]], "build_show() (dipy.viz.horizon.app.horizon method)": [[181, "dipy.viz.horizon.app.Horizon.build_show"]], "bundle_shape_profile() (in module dipy.viz.plotting)": [[181, "dipy.viz.plotting.bundle_shape_profile"]], "centroid_actors (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[181, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.centroid_actors"]], "change_volume() (dipy.viz.horizon.visualizer.slice.slicesvisualizer method)": [[181, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.change_volume"]], "cluster_actors (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[181, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.cluster_actors"]], "color_double_slider() (in module dipy.viz.horizon.tab.base)": [[181, "dipy.viz.horizon.tab.base.color_double_slider"]], "color_single_slider() (in module dipy.viz.horizon.tab.base)": [[181, "dipy.viz.horizon.tab.base.color_single_slider"]], "compare_maps() (in module dipy.viz.plotting)": [[181, "dipy.viz.plotting.compare_maps"]], "compare_qti_maps() (in module dipy.viz.plotting)": [[181, "dipy.viz.plotting.compare_qti_maps"]], "data_shape (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[181, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.data_shape"]], "dipy.viz": [[181, "module-dipy.viz"]], "dipy.viz.gmem": [[181, "module-dipy.viz.gmem"]], "dipy.viz.horizon": [[181, "module-dipy.viz.horizon"]], "dipy.viz.horizon.app": [[181, "module-dipy.viz.horizon.app"]], "dipy.viz.horizon.tab": [[181, "module-dipy.viz.horizon.tab"]], "dipy.viz.horizon.tab.base": [[181, "module-dipy.viz.horizon.tab.base"]], "dipy.viz.horizon.tab.cluster": [[181, "module-dipy.viz.horizon.tab.cluster"]], "dipy.viz.horizon.tab.peak": [[181, "module-dipy.viz.horizon.tab.peak"]], "dipy.viz.horizon.tab.roi": [[181, "module-dipy.viz.horizon.tab.roi"]], "dipy.viz.horizon.tab.slice": [[181, "module-dipy.viz.horizon.tab.slice"]], "dipy.viz.horizon.visualizer": [[181, "module-dipy.viz.horizon.visualizer"]], "dipy.viz.horizon.visualizer.cluster": [[181, "module-dipy.viz.horizon.visualizer.cluster"]], "dipy.viz.horizon.visualizer.slice": [[181, "module-dipy.viz.horizon.visualizer.slice"]], "dipy.viz.panel": [[181, "module-dipy.viz.panel"]], "dipy.viz.plotting": [[181, "module-dipy.viz.plotting"]], "dipy.viz.projections": [[181, "module-dipy.viz.projections"]], "dipy.viz.regtools": [[181, "module-dipy.viz.regtools"]], "dipy.viz.streamline": [[181, "module-dipy.viz.streamline"]], "draw_lattice_2d() (in module dipy.viz.regtools)": [[181, "dipy.viz.regtools.draw_lattice_2d"]], "horizon() (in module dipy.viz.horizon.app)": [[181, "dipy.viz.horizon.app.horizon"]], "intensities_range (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[181, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.intensities_range"]], "lengths (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[181, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.lengths"]], "name (dipy.viz.horizon.tab.base.horizontab property)": [[181, "dipy.viz.horizon.tab.base.HorizonTab.name"]], "name (dipy.viz.horizon.tab.cluster.clusterstab property)": [[181, "dipy.viz.horizon.tab.cluster.ClustersTab.name"]], "name (dipy.viz.horizon.tab.peak.peakstab property)": [[181, "dipy.viz.horizon.tab.peak.PeaksTab.name"]], "name (dipy.viz.horizon.tab.roi.roistab property)": [[181, "dipy.viz.horizon.tab.roi.ROIsTab.name"]], "name (dipy.viz.horizon.tab.slice.slicestab property)": [[181, "dipy.viz.horizon.tab.slice.SlicesTab.name"]], "overlay_images() (in module dipy.viz.regtools)": [[181, "dipy.viz.regtools.overlay_images"]], "overlay_slices() (in module dipy.viz.regtools)": [[181, "dipy.viz.regtools.overlay_slices"]], "plot_2d_diffeomorphic_map() (in module dipy.viz.regtools)": [[181, "dipy.viz.regtools.plot_2d_diffeomorphic_map"]], "plot_slices() (in module dipy.viz.regtools)": [[181, "dipy.viz.regtools.plot_slices"]], "recluster_tractograms() (dipy.viz.horizon.visualizer.cluster.clustersvisualizer method)": [[181, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.recluster_tractograms"]], "register_picker_callback() (dipy.viz.horizon.visualizer.slice.slicesvisualizer method)": [[181, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.register_picker_callback"]], "reposition() (dipy.viz.horizon.tab.base.tabmanager method)": [[181, "dipy.viz.horizon.tab.base.TabManager.reposition"]], "selected_slices (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[181, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.selected_slices"]], "show_bundles() (in module dipy.viz.streamline)": [[181, "dipy.viz.streamline.show_bundles"]], "simple_plot() (in module dipy.viz.regtools)": [[181, "dipy.viz.regtools.simple_plot"]], "sizes (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[181, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.sizes"]], "slice_actors (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[181, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.slice_actors"]], "slicer_panel() (in module dipy.viz.panel)": [[181, "dipy.viz.panel.slicer_panel"]], "sph_project() (in module dipy.viz.projections)": [[181, "dipy.viz.projections.sph_project"]], "tab_ui (dipy.viz.horizon.tab.base.tabmanager property)": [[181, "dipy.viz.horizon.tab.base.TabManager.tab_ui"]], "tractogram_clusters (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[181, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.tractogram_clusters"]], "viz_displacement_mag() (in module dipy.viz.streamline)": [[181, "dipy.viz.streamline.viz_displacement_mag"]], "viz_two_bundles() (in module dipy.viz.streamline)": [[181, "dipy.viz.streamline.viz_two_bundles"]], "viz_vector_field() (in module dipy.viz.streamline)": [[181, "dipy.viz.streamline.viz_vector_field"]], "volume_max (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[181, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.volume_max"]], "volume_min (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[181, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.volume_min"]], "applytransformflow (class in dipy.workflows.align)": [[182, "dipy.workflows.align.ApplyTransformFlow"]], "bundleanalysistractometryflow (class in dipy.workflows.stats)": [[182, "dipy.workflows.stats.BundleAnalysisTractometryFlow"]], "bundleshapeanalysis (class in dipy.workflows.stats)": [[182, "dipy.workflows.stats.BundleShapeAnalysis"]], "bundlewarpflow (class in dipy.workflows.align)": [[182, "dipy.workflows.align.BundleWarpFlow"]], "combinedworkflow (class in dipy.workflows.combined_workflow)": [[182, "dipy.workflows.combined_workflow.CombinedWorkflow"]], "evacplusflow (class in dipy.workflows.nn)": [[182, "dipy.workflows.nn.EVACPlusFlow"]], "fetchflow (class in dipy.workflows.io)": [[182, "dipy.workflows.io.FetchFlow"]], "gibbsringingflow (class in dipy.workflows.denoise)": [[182, "dipy.workflows.denoise.GibbsRingingFlow"]], "horizonflow (class in dipy.workflows.viz)": [[182, "dipy.workflows.viz.HorizonFlow"]], "ioiterator (class in dipy.workflows.multi_io)": [[182, "dipy.workflows.multi_io.IOIterator"]], "imageregistrationflow (class in dipy.workflows.align)": [[182, "dipy.workflows.align.ImageRegistrationFlow"]], "introspectiveargumentparser (class in dipy.workflows.base)": [[182, "dipy.workflows.base.IntrospectiveArgumentParser"]], "ioinfoflow (class in dipy.workflows.io)": [[182, "dipy.workflows.io.IoInfoFlow"]], "lpcaflow (class in dipy.workflows.denoise)": [[182, "dipy.workflows.denoise.LPCAFlow"]], "labelsbundlesflow (class in dipy.workflows.segment)": [[182, "dipy.workflows.segment.LabelsBundlesFlow"]], "linearmixedmodelsflow (class in dipy.workflows.stats)": [[182, "dipy.workflows.stats.LinearMixedModelsFlow"]], "localfibertrackingpamflow (class in dipy.workflows.tracking)": [[182, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow"]], "mppcaflow (class in dipy.workflows.denoise)": [[182, "dipy.workflows.denoise.MPPCAFlow"]], "maskflow (class in dipy.workflows.mask)": [[182, "dipy.workflows.mask.MaskFlow"]], "medianotsuflow (class in dipy.workflows.segment)": [[182, "dipy.workflows.segment.MedianOtsuFlow"]], "motioncorrectionflow (class in dipy.workflows.align)": [[182, "dipy.workflows.align.MotionCorrectionFlow"]], "nlmeansflow (class in dipy.workflows.denoise)": [[182, "dipy.workflows.denoise.NLMeansFlow"]], "numpydocstring (class in dipy.workflows.docstring_parser)": [[182, "dipy.workflows.docstring_parser.NumpyDocString"]], "pftrackingpamflow (class in dipy.workflows.tracking)": [[182, "dipy.workflows.tracking.PFTrackingPAMFlow"]], "patch2selfflow (class in dipy.workflows.denoise)": [[182, "dipy.workflows.denoise.Patch2SelfFlow"]], "reader (class in dipy.workflows.docstring_parser)": [[182, "dipy.workflows.docstring_parser.Reader"]], "recobundlesflow (class in dipy.workflows.segment)": [[182, "dipy.workflows.segment.RecoBundlesFlow"]], "reconstcsaflow (class in dipy.workflows.reconst)": [[182, "dipy.workflows.reconst.ReconstCSAFlow"]], "reconstcsdflow (class in dipy.workflows.reconst)": [[182, "dipy.workflows.reconst.ReconstCSDFlow"]], "reconstdkiflow (class in dipy.workflows.reconst)": [[182, "dipy.workflows.reconst.ReconstDkiFlow"]], "reconstdtiflow (class in dipy.workflows.reconst)": [[182, "dipy.workflows.reconst.ReconstDtiFlow"]], "reconstivimflow (class in dipy.workflows.reconst)": [[182, "dipy.workflows.reconst.ReconstIvimFlow"]], "reconstmapmriflow (class in dipy.workflows.reconst)": [[182, "dipy.workflows.reconst.ReconstMAPMRIFlow"]], "reconstrumbaflow (class in dipy.workflows.reconst)": [[182, "dipy.workflows.reconst.ReconstRUMBAFlow"]], "resliceflow (class in dipy.workflows.align)": [[182, "dipy.workflows.align.ResliceFlow"]], "snrinccflow (class in dipy.workflows.stats)": [[182, "dipy.workflows.stats.SNRinCCFlow"]], "slrwithqbxflow (class in dipy.workflows.align)": [[182, "dipy.workflows.align.SlrWithQbxFlow"]], "splitflow (class in dipy.workflows.io)": [[182, "dipy.workflows.io.SplitFlow"]], "synregistrationflow (class in dipy.workflows.align)": [[182, "dipy.workflows.align.SynRegistrationFlow"]], "workflow (class in dipy.workflows.workflow)": [[182, "dipy.workflows.workflow.Workflow"]], "__init__() (dipy.workflows.align.applytransformflow method)": [[182, "dipy.workflows.align.ApplyTransformFlow.__init__"]], "__init__() (dipy.workflows.align.bundlewarpflow method)": [[182, "dipy.workflows.align.BundleWarpFlow.__init__"]], "__init__() (dipy.workflows.align.imageregistrationflow method)": [[182, "dipy.workflows.align.ImageRegistrationFlow.__init__"]], "__init__() (dipy.workflows.align.motioncorrectionflow method)": [[182, "dipy.workflows.align.MotionCorrectionFlow.__init__"]], "__init__() (dipy.workflows.align.resliceflow method)": [[182, "dipy.workflows.align.ResliceFlow.__init__"]], "__init__() (dipy.workflows.align.slrwithqbxflow method)": [[182, "dipy.workflows.align.SlrWithQbxFlow.__init__"]], "__init__() (dipy.workflows.align.synregistrationflow method)": [[182, "dipy.workflows.align.SynRegistrationFlow.__init__"]], "__init__() (dipy.workflows.base.introspectiveargumentparser method)": [[182, "dipy.workflows.base.IntrospectiveArgumentParser.__init__"]], "__init__() (dipy.workflows.combined_workflow.combinedworkflow method)": [[182, "dipy.workflows.combined_workflow.CombinedWorkflow.__init__"]], "__init__() (dipy.workflows.denoise.gibbsringingflow method)": [[182, "dipy.workflows.denoise.GibbsRingingFlow.__init__"]], "__init__() (dipy.workflows.denoise.lpcaflow method)": [[182, "dipy.workflows.denoise.LPCAFlow.__init__"]], "__init__() (dipy.workflows.denoise.mppcaflow method)": [[182, "dipy.workflows.denoise.MPPCAFlow.__init__"]], "__init__() (dipy.workflows.denoise.nlmeansflow method)": [[182, "dipy.workflows.denoise.NLMeansFlow.__init__"]], "__init__() (dipy.workflows.denoise.patch2selfflow method)": [[182, "dipy.workflows.denoise.Patch2SelfFlow.__init__"]], "__init__() (dipy.workflows.docstring_parser.numpydocstring method)": [[182, "dipy.workflows.docstring_parser.NumpyDocString.__init__"]], "__init__() (dipy.workflows.docstring_parser.reader method)": [[182, "dipy.workflows.docstring_parser.Reader.__init__"]], "__init__() (dipy.workflows.io.fetchflow method)": [[182, "dipy.workflows.io.FetchFlow.__init__"]], "__init__() (dipy.workflows.io.ioinfoflow method)": [[182, "dipy.workflows.io.IoInfoFlow.__init__"]], "__init__() (dipy.workflows.io.splitflow method)": [[182, "dipy.workflows.io.SplitFlow.__init__"]], "__init__() (dipy.workflows.mask.maskflow method)": [[182, "dipy.workflows.mask.MaskFlow.__init__"]], "__init__() (dipy.workflows.multi_io.ioiterator method)": [[182, "dipy.workflows.multi_io.IOIterator.__init__"]], "__init__() (dipy.workflows.nn.evacplusflow method)": [[182, "dipy.workflows.nn.EVACPlusFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstcsaflow method)": [[182, "dipy.workflows.reconst.ReconstCSAFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstcsdflow method)": [[182, "dipy.workflows.reconst.ReconstCSDFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstdkiflow method)": [[182, "dipy.workflows.reconst.ReconstDkiFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstdtiflow method)": [[182, "dipy.workflows.reconst.ReconstDtiFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstivimflow method)": [[182, "dipy.workflows.reconst.ReconstIvimFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstmapmriflow method)": [[182, "dipy.workflows.reconst.ReconstMAPMRIFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstrumbaflow method)": [[182, "dipy.workflows.reconst.ReconstRUMBAFlow.__init__"]], "__init__() (dipy.workflows.segment.labelsbundlesflow method)": [[182, "dipy.workflows.segment.LabelsBundlesFlow.__init__"]], "__init__() (dipy.workflows.segment.medianotsuflow method)": [[182, "dipy.workflows.segment.MedianOtsuFlow.__init__"]], "__init__() (dipy.workflows.segment.recobundlesflow method)": [[182, "dipy.workflows.segment.RecoBundlesFlow.__init__"]], "__init__() (dipy.workflows.stats.bundleanalysistractometryflow method)": [[182, "dipy.workflows.stats.BundleAnalysisTractometryFlow.__init__"]], "__init__() (dipy.workflows.stats.bundleshapeanalysis method)": [[182, "dipy.workflows.stats.BundleShapeAnalysis.__init__"]], "__init__() (dipy.workflows.stats.linearmixedmodelsflow method)": [[182, "dipy.workflows.stats.LinearMixedModelsFlow.__init__"]], "__init__() (dipy.workflows.stats.snrinccflow method)": [[182, "dipy.workflows.stats.SNRinCCFlow.__init__"]], "__init__() (dipy.workflows.tracking.localfibertrackingpamflow method)": [[182, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow.__init__"]], "__init__() (dipy.workflows.tracking.pftrackingpamflow method)": [[182, "dipy.workflows.tracking.PFTrackingPAMFlow.__init__"]], "__init__() (dipy.workflows.viz.horizonflow method)": [[182, "dipy.workflows.viz.HorizonFlow.__init__"]], "__init__() (dipy.workflows.workflow.workflow method)": [[182, "dipy.workflows.workflow.Workflow.__init__"]], "add_description() (dipy.workflows.base.introspectiveargumentparser method)": [[182, "dipy.workflows.base.IntrospectiveArgumentParser.add_description"]], "add_epilogue() (dipy.workflows.base.introspectiveargumentparser method)": [[182, "dipy.workflows.base.IntrospectiveArgumentParser.add_epilogue"]], "add_sub_flow_args() (dipy.workflows.base.introspectiveargumentparser method)": [[182, "dipy.workflows.base.IntrospectiveArgumentParser.add_sub_flow_args"]], "add_workflow() (dipy.workflows.base.introspectiveargumentparser method)": [[182, "dipy.workflows.base.IntrospectiveArgumentParser.add_workflow"]], "basename_without_extension() (in module dipy.workflows.multi_io)": [[182, "dipy.workflows.multi_io.basename_without_extension"]], "buan_bundle_profiles() (in module dipy.workflows.stats)": [[182, "dipy.workflows.stats.buan_bundle_profiles"]], "check_dimensions() (in module dipy.workflows.align)": [[182, "dipy.workflows.align.check_dimensions"]], "common_start() (in module dipy.workflows.multi_io)": [[182, "dipy.workflows.multi_io.common_start"]], "concatenate_inputs() (in module dipy.workflows.multi_io)": [[182, "dipy.workflows.multi_io.concatenate_inputs"]], "connect_output_paths() (in module dipy.workflows.multi_io)": [[182, "dipy.workflows.multi_io.connect_output_paths"]], "create_directories() (dipy.workflows.multi_io.ioiterator method)": [[182, "dipy.workflows.multi_io.IOIterator.create_directories"]], "create_outputs() (dipy.workflows.multi_io.ioiterator method)": [[182, "dipy.workflows.multi_io.IOIterator.create_outputs"]], "dedent_lines() (in module dipy.workflows.docstring_parser)": [[182, "dipy.workflows.docstring_parser.dedent_lines"]], "dipy.workflows": [[182, "module-dipy.workflows"]], "dipy.workflows.align": [[182, "module-dipy.workflows.align"]], "dipy.workflows.base": [[182, "module-dipy.workflows.base"]], "dipy.workflows.combined_workflow": [[182, "module-dipy.workflows.combined_workflow"]], "dipy.workflows.denoise": [[182, "module-dipy.workflows.denoise"]], "dipy.workflows.docstring_parser": [[182, "module-dipy.workflows.docstring_parser"]], "dipy.workflows.flow_runner": [[182, "module-dipy.workflows.flow_runner"]], "dipy.workflows.io": [[182, "module-dipy.workflows.io"]], "dipy.workflows.mask": [[182, "module-dipy.workflows.mask"]], "dipy.workflows.multi_io": [[182, "module-dipy.workflows.multi_io"]], "dipy.workflows.nn": [[182, "module-dipy.workflows.nn"]], "dipy.workflows.reconst": [[182, "module-dipy.workflows.reconst"]], "dipy.workflows.segment": [[182, "module-dipy.workflows.segment"]], "dipy.workflows.stats": [[182, "module-dipy.workflows.stats"]], "dipy.workflows.tracking": [[182, "module-dipy.workflows.tracking"]], "dipy.workflows.viz": [[182, "module-dipy.workflows.viz"]], "dipy.workflows.workflow": [[182, "module-dipy.workflows.workflow"]], "eof() (dipy.workflows.docstring_parser.reader method)": [[182, "dipy.workflows.docstring_parser.Reader.eof"]], "file_existence_check() (dipy.workflows.multi_io.ioiterator method)": [[182, "dipy.workflows.multi_io.IOIterator.file_existence_check"]], "get_args_default() (in module dipy.workflows.base)": [[182, "dipy.workflows.base.get_args_default"]], "get_fetcher_datanames() (dipy.workflows.io.fetchflow static method)": [[182, "dipy.workflows.io.FetchFlow.get_fetcher_datanames"]], "get_fitted_ivim() (dipy.workflows.reconst.reconstivimflow method)": [[182, "dipy.workflows.reconst.ReconstIvimFlow.get_fitted_ivim"]], "get_fitted_tensor() (dipy.workflows.reconst.reconstdkiflow method)": [[182, "dipy.workflows.reconst.ReconstDkiFlow.get_fitted_tensor"]], "get_fitted_tensor() (dipy.workflows.reconst.reconstdtiflow method)": [[182, "dipy.workflows.reconst.ReconstDtiFlow.get_fitted_tensor"]], "get_flow_args() (dipy.workflows.base.introspectiveargumentparser method)": [[182, "dipy.workflows.base.IntrospectiveArgumentParser.get_flow_args"]], "get_io_iterator() (dipy.workflows.workflow.workflow method)": [[182, "dipy.workflows.workflow.Workflow.get_io_iterator"]], "get_level() (in module dipy.workflows.flow_runner)": [[182, "dipy.workflows.flow_runner.get_level"]], "get_metric_name() (dipy.workflows.stats.linearmixedmodelsflow method)": [[182, "dipy.workflows.stats.LinearMixedModelsFlow.get_metric_name"]], "get_optionals() (dipy.workflows.combined_workflow.combinedworkflow method)": [[182, "dipy.workflows.combined_workflow.CombinedWorkflow.get_optionals"]], "get_short_name() (dipy.workflows.align.bundlewarpflow class method)": [[182, "dipy.workflows.align.BundleWarpFlow.get_short_name"]], "get_short_name() (dipy.workflows.align.resliceflow class method)": [[182, "dipy.workflows.align.ResliceFlow.get_short_name"]], "get_short_name() (dipy.workflows.align.slrwithqbxflow class method)": [[182, "dipy.workflows.align.SlrWithQbxFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.gibbsringingflow class method)": [[182, "dipy.workflows.denoise.GibbsRingingFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.lpcaflow class method)": [[182, "dipy.workflows.denoise.LPCAFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.mppcaflow class method)": [[182, "dipy.workflows.denoise.MPPCAFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.nlmeansflow class method)": [[182, "dipy.workflows.denoise.NLMeansFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.patch2selfflow class method)": [[182, "dipy.workflows.denoise.Patch2SelfFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.fetchflow class method)": [[182, "dipy.workflows.io.FetchFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.ioinfoflow class method)": [[182, "dipy.workflows.io.IoInfoFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.splitflow class method)": [[182, "dipy.workflows.io.SplitFlow.get_short_name"]], "get_short_name() (dipy.workflows.mask.maskflow class method)": [[182, "dipy.workflows.mask.MaskFlow.get_short_name"]], "get_short_name() (dipy.workflows.nn.evacplusflow class method)": [[182, "dipy.workflows.nn.EVACPlusFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstcsaflow class method)": [[182, "dipy.workflows.reconst.ReconstCSAFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstcsdflow class method)": [[182, "dipy.workflows.reconst.ReconstCSDFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstdkiflow class method)": [[182, "dipy.workflows.reconst.ReconstDkiFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstdtiflow class method)": [[182, "dipy.workflows.reconst.ReconstDtiFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstivimflow class method)": [[182, "dipy.workflows.reconst.ReconstIvimFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstmapmriflow class method)": [[182, "dipy.workflows.reconst.ReconstMAPMRIFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstrumbaflow class method)": [[182, "dipy.workflows.reconst.ReconstRUMBAFlow.get_short_name"]], "get_short_name() (dipy.workflows.segment.labelsbundlesflow class method)": [[182, "dipy.workflows.segment.LabelsBundlesFlow.get_short_name"]], "get_short_name() (dipy.workflows.segment.medianotsuflow class method)": [[182, "dipy.workflows.segment.MedianOtsuFlow.get_short_name"]], "get_short_name() (dipy.workflows.segment.recobundlesflow class method)": [[182, "dipy.workflows.segment.RecoBundlesFlow.get_short_name"]], "get_short_name() (dipy.workflows.stats.bundleanalysistractometryflow class method)": [[182, "dipy.workflows.stats.BundleAnalysisTractometryFlow.get_short_name"]], "get_short_name() (dipy.workflows.stats.bundleshapeanalysis class method)": [[182, "dipy.workflows.stats.BundleShapeAnalysis.get_short_name"]], "get_short_name() (dipy.workflows.stats.linearmixedmodelsflow class method)": [[182, "dipy.workflows.stats.LinearMixedModelsFlow.get_short_name"]], "get_short_name() (dipy.workflows.stats.snrinccflow class method)": [[182, "dipy.workflows.stats.SNRinCCFlow.get_short_name"]], "get_short_name() (dipy.workflows.tracking.localfibertrackingpamflow class method)": [[182, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow.get_short_name"]], "get_short_name() (dipy.workflows.tracking.pftrackingpamflow class method)": [[182, "dipy.workflows.tracking.PFTrackingPAMFlow.get_short_name"]], "get_short_name() (dipy.workflows.viz.horizonflow class method)": [[182, "dipy.workflows.viz.HorizonFlow.get_short_name"]], "get_short_name() (dipy.workflows.workflow.workflow class method)": [[182, "dipy.workflows.workflow.Workflow.get_short_name"]], "get_sub_runs() (dipy.workflows.combined_workflow.combinedworkflow method)": [[182, "dipy.workflows.combined_workflow.CombinedWorkflow.get_sub_runs"]], "get_sub_runs() (dipy.workflows.workflow.workflow method)": [[182, "dipy.workflows.workflow.Workflow.get_sub_runs"]], "io_iterator() (in module dipy.workflows.multi_io)": [[182, "dipy.workflows.multi_io.io_iterator"]], "io_iterator_() (in module dipy.workflows.multi_io)": [[182, "dipy.workflows.multi_io.io_iterator_"]], "is_empty() (dipy.workflows.docstring_parser.reader method)": [[182, "dipy.workflows.docstring_parser.Reader.is_empty"]], "load_module() (dipy.workflows.io.fetchflow static method)": [[182, "dipy.workflows.io.FetchFlow.load_module"]], "manage_output_overwrite() (dipy.workflows.workflow.workflow method)": [[182, "dipy.workflows.workflow.Workflow.manage_output_overwrite"]], "none_or_dtype() (in module dipy.workflows.base)": [[182, "dipy.workflows.base.none_or_dtype"]], "optional_parameters (dipy.workflows.base.introspectiveargumentparser property)": [[182, "dipy.workflows.base.IntrospectiveArgumentParser.optional_parameters"]], "output_parameters (dipy.workflows.base.introspectiveargumentparser property)": [[182, "dipy.workflows.base.IntrospectiveArgumentParser.output_parameters"]], "peek() (dipy.workflows.docstring_parser.reader method)": [[182, "dipy.workflows.docstring_parser.Reader.peek"]], "positional_parameters (dipy.workflows.base.introspectiveargumentparser property)": [[182, "dipy.workflows.base.IntrospectiveArgumentParser.positional_parameters"]], "read() (dipy.workflows.docstring_parser.reader method)": [[182, "dipy.workflows.docstring_parser.Reader.read"]], "read_to_condition() (dipy.workflows.docstring_parser.reader method)": [[182, "dipy.workflows.docstring_parser.Reader.read_to_condition"]], "read_to_next_empty_line() (dipy.workflows.docstring_parser.reader method)": [[182, "dipy.workflows.docstring_parser.Reader.read_to_next_empty_line"]], "read_to_next_unindented_line() (dipy.workflows.docstring_parser.reader method)": [[182, "dipy.workflows.docstring_parser.Reader.read_to_next_unindented_line"]], "reset() (dipy.workflows.docstring_parser.reader method)": [[182, "dipy.workflows.docstring_parser.Reader.reset"]], "run() (dipy.workflows.align.applytransformflow method)": [[182, "dipy.workflows.align.ApplyTransformFlow.run"]], "run() (dipy.workflows.align.bundlewarpflow method)": [[182, "dipy.workflows.align.BundleWarpFlow.run"]], "run() (dipy.workflows.align.imageregistrationflow method)": [[182, "dipy.workflows.align.ImageRegistrationFlow.run"]], "run() (dipy.workflows.align.motioncorrectionflow method)": [[182, "dipy.workflows.align.MotionCorrectionFlow.run"]], "run() (dipy.workflows.align.resliceflow method)": [[182, "dipy.workflows.align.ResliceFlow.run"]], "run() (dipy.workflows.align.slrwithqbxflow method)": [[182, "dipy.workflows.align.SlrWithQbxFlow.run"]], "run() (dipy.workflows.align.synregistrationflow method)": [[182, "dipy.workflows.align.SynRegistrationFlow.run"]], "run() (dipy.workflows.denoise.gibbsringingflow method)": [[182, "dipy.workflows.denoise.GibbsRingingFlow.run"]], "run() (dipy.workflows.denoise.lpcaflow method)": [[182, "dipy.workflows.denoise.LPCAFlow.run"]], "run() (dipy.workflows.denoise.mppcaflow method)": [[182, "dipy.workflows.denoise.MPPCAFlow.run"]], "run() (dipy.workflows.denoise.nlmeansflow method)": [[182, "dipy.workflows.denoise.NLMeansFlow.run"]], "run() (dipy.workflows.denoise.patch2selfflow method)": [[182, "dipy.workflows.denoise.Patch2SelfFlow.run"]], "run() (dipy.workflows.io.fetchflow method)": [[182, "dipy.workflows.io.FetchFlow.run"]], "run() (dipy.workflows.io.ioinfoflow method)": [[182, "dipy.workflows.io.IoInfoFlow.run"]], "run() (dipy.workflows.io.splitflow method)": [[182, "dipy.workflows.io.SplitFlow.run"]], "run() (dipy.workflows.mask.maskflow method)": [[182, "dipy.workflows.mask.MaskFlow.run"]], "run() (dipy.workflows.nn.evacplusflow method)": [[182, "dipy.workflows.nn.EVACPlusFlow.run"]], "run() (dipy.workflows.reconst.reconstcsaflow method)": [[182, "dipy.workflows.reconst.ReconstCSAFlow.run"]], "run() (dipy.workflows.reconst.reconstcsdflow method)": [[182, "dipy.workflows.reconst.ReconstCSDFlow.run"]], "run() (dipy.workflows.reconst.reconstdkiflow method)": [[182, "dipy.workflows.reconst.ReconstDkiFlow.run"]], "run() (dipy.workflows.reconst.reconstdtiflow method)": [[182, "dipy.workflows.reconst.ReconstDtiFlow.run"]], "run() (dipy.workflows.reconst.reconstivimflow method)": [[182, "dipy.workflows.reconst.ReconstIvimFlow.run"]], "run() (dipy.workflows.reconst.reconstmapmriflow method)": [[182, "dipy.workflows.reconst.ReconstMAPMRIFlow.run"]], "run() (dipy.workflows.reconst.reconstrumbaflow method)": [[182, "dipy.workflows.reconst.ReconstRUMBAFlow.run"]], "run() (dipy.workflows.segment.labelsbundlesflow method)": [[182, "dipy.workflows.segment.LabelsBundlesFlow.run"]], "run() (dipy.workflows.segment.medianotsuflow method)": [[182, "dipy.workflows.segment.MedianOtsuFlow.run"]], "run() (dipy.workflows.segment.recobundlesflow method)": [[182, "dipy.workflows.segment.RecoBundlesFlow.run"]], "run() (dipy.workflows.stats.bundleanalysistractometryflow method)": [[182, "dipy.workflows.stats.BundleAnalysisTractometryFlow.run"]], "run() (dipy.workflows.stats.bundleshapeanalysis method)": [[182, "dipy.workflows.stats.BundleShapeAnalysis.run"]], "run() (dipy.workflows.stats.linearmixedmodelsflow method)": [[182, "dipy.workflows.stats.LinearMixedModelsFlow.run"]], "run() (dipy.workflows.stats.snrinccflow method)": [[182, "dipy.workflows.stats.SNRinCCFlow.run"]], "run() (dipy.workflows.tracking.localfibertrackingpamflow method)": [[182, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow.run"]], "run() (dipy.workflows.tracking.pftrackingpamflow method)": [[182, "dipy.workflows.tracking.PFTrackingPAMFlow.run"]], "run() (dipy.workflows.viz.horizonflow method)": [[182, "dipy.workflows.viz.HorizonFlow.run"]], "run() (dipy.workflows.workflow.workflow method)": [[182, "dipy.workflows.workflow.Workflow.run"]], "run_flow() (in module dipy.workflows.flow_runner)": [[182, "dipy.workflows.flow_runner.run_flow"]], "run_sub_flow() (dipy.workflows.combined_workflow.combinedworkflow method)": [[182, "dipy.workflows.combined_workflow.CombinedWorkflow.run_sub_flow"]], "save_lmm_plot() (dipy.workflows.stats.linearmixedmodelsflow method)": [[182, "dipy.workflows.stats.LinearMixedModelsFlow.save_lmm_plot"]], "seek_next_non_empty_line() (dipy.workflows.docstring_parser.reader method)": [[182, "dipy.workflows.docstring_parser.Reader.seek_next_non_empty_line"]], "set_inputs() (dipy.workflows.multi_io.ioiterator method)": [[182, "dipy.workflows.multi_io.IOIterator.set_inputs"]], "set_out_dir() (dipy.workflows.multi_io.ioiterator method)": [[182, "dipy.workflows.multi_io.IOIterator.set_out_dir"]], "set_out_fnames() (dipy.workflows.multi_io.ioiterator method)": [[182, "dipy.workflows.multi_io.IOIterator.set_out_fnames"]], "set_output_keys() (dipy.workflows.multi_io.ioiterator method)": [[182, "dipy.workflows.multi_io.IOIterator.set_output_keys"]], "set_sub_flows_optionals() (dipy.workflows.combined_workflow.combinedworkflow method)": [[182, "dipy.workflows.combined_workflow.CombinedWorkflow.set_sub_flows_optionals"]], "show_argument() (dipy.workflows.base.introspectiveargumentparser method)": [[182, "dipy.workflows.base.IntrospectiveArgumentParser.show_argument"]], "slash_to_under() (in module dipy.workflows.multi_io)": [[182, "dipy.workflows.multi_io.slash_to_under"]], "update_argument() (dipy.workflows.base.introspectiveargumentparser method)": [[182, "dipy.workflows.base.IntrospectiveArgumentParser.update_argument"]]}})