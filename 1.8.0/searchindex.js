Search.setIndex({"docnames": ["api_changes", "cite", "devel/benchmarking", "devel/coding_style_guideline", "devel/commit_codes", "devel/gitwash/configure_git", "devel/gitwash/development_workflow", "devel/gitwash/dot2_dot3", "devel/gitwash/following_latest", "devel/gitwash/forking_hell", "devel/gitwash/git_development", "devel/gitwash/git_install", "devel/gitwash/git_intro", "devel/gitwash/git_resources", "devel/gitwash/index", "devel/gitwash/maintainer_workflow", "devel/gitwash/patching", "devel/gitwash/set_up_fork", "devel/index", "devel/installation_from_source", "devel/intro", "devel/make_release", "devel/toolchain", "developers", "examples_built/contextual_enhancement/contextual_enhancement", "examples_built/contextual_enhancement/fiber_to_bundle_coherence", "examples_built/contextual_enhancement/index", "examples_built/contextual_enhancement/sg_execution_times", "examples_built/fiber_tracking/index", "examples_built/fiber_tracking/linear_fascicle_evaluation", "examples_built/fiber_tracking/sg_execution_times", "examples_built/fiber_tracking/surface_seed", "examples_built/fiber_tracking/tracking_bootstrap_peaks", "examples_built/fiber_tracking/tracking_deterministic", "examples_built/fiber_tracking/tracking_introduction_eudx_1", "examples_built/fiber_tracking/tracking_pft", "examples_built/fiber_tracking/tracking_probabilistic", "examples_built/fiber_tracking/tracking_ptt", "examples_built/fiber_tracking/tracking_rumba", "examples_built/fiber_tracking/tracking_sfm", "examples_built/fiber_tracking/tracking_stopping_criterion", "examples_built/file_formats/index", "examples_built/file_formats/sg_execution_times", "examples_built/file_formats/streamline_formats", "examples_built/index", "examples_built/multiprocessing/index", "examples_built/multiprocessing/reconst_csa_parallel", "examples_built/multiprocessing/reconst_csd_parallel", "examples_built/multiprocessing/sg_execution_times", "examples_built/preprocessing/brain_extraction_dwi", "examples_built/preprocessing/denoise_ascm", "examples_built/preprocessing/denoise_gibbs", "examples_built/preprocessing/denoise_localpca", "examples_built/preprocessing/denoise_mppca", "examples_built/preprocessing/denoise_nlmeans", "examples_built/preprocessing/denoise_patch2self", "examples_built/preprocessing/gradients_spheres", "examples_built/preprocessing/index", "examples_built/preprocessing/motion_correction", "examples_built/preprocessing/piesno", "examples_built/preprocessing/reslice_datasets", "examples_built/preprocessing/sg_execution_times", "examples_built/preprocessing/snr_in_cc", "examples_built/quick_start/index", "examples_built/quick_start/quick_start", "examples_built/quick_start/sg_execution_times", "examples_built/quick_start/tracking_introduction_eudx", "examples_built/reconstruction/histology_resdnn", "examples_built/reconstruction/index", "examples_built/reconstruction/kfold_xval", "examples_built/reconstruction/reconst_csa", "examples_built/reconstruction/reconst_csd", "examples_built/reconstruction/reconst_cti", "examples_built/reconstruction/reconst_dki", "examples_built/reconstruction/reconst_dki_micro", "examples_built/reconstruction/reconst_dsi", "examples_built/reconstruction/reconst_dsi_metrics", "examples_built/reconstruction/reconst_dsid", "examples_built/reconstruction/reconst_dti", "examples_built/reconstruction/reconst_forecast", "examples_built/reconstruction/reconst_fwdti", "examples_built/reconstruction/reconst_gqi", "examples_built/reconstruction/reconst_ivim", "examples_built/reconstruction/reconst_mapmri", "examples_built/reconstruction/reconst_mcsd", "examples_built/reconstruction/reconst_msdki", "examples_built/reconstruction/reconst_qtdmri", "examples_built/reconstruction/reconst_qti", "examples_built/reconstruction/reconst_qtiplus", "examples_built/reconstruction/reconst_rumba", "examples_built/reconstruction/reconst_sfm", "examples_built/reconstruction/reconst_sh", "examples_built/reconstruction/reconst_shore", "examples_built/reconstruction/reconst_shore_metrics", "examples_built/reconstruction/restore_dti", "examples_built/reconstruction/sg_execution_times", "examples_built/registration/affine_registration_3d", "examples_built/registration/affine_registration_masks", "examples_built/registration/bundle_group_registration", "examples_built/registration/bundle_registration", "examples_built/registration/bundlewarp_registration", "examples_built/registration/index", "examples_built/registration/register_binary_fuzzy", "examples_built/registration/sg_execution_times", "examples_built/registration/streamline_registration", "examples_built/registration/syn_registration_2d", "examples_built/registration/syn_registration_3d", "examples_built/segmentation/brain_extraction_dwi_1", "examples_built/segmentation/bundle_extraction", "examples_built/segmentation/fast_streamline_search", "examples_built/segmentation/index", "examples_built/segmentation/segment_clustering_features", "examples_built/segmentation/segment_clustering_metrics", "examples_built/segmentation/segment_extending_clustering_framework", "examples_built/segmentation/segment_quickbundles", "examples_built/segmentation/sg_execution_times", "examples_built/segmentation/tissue_classification", "examples_built/sg_execution_times", "examples_built/simulations/index", "examples_built/simulations/reconst_dsid_1", "examples_built/simulations/sg_execution_times", "examples_built/simulations/simulate_dki", "examples_built/simulations/simulate_multi_tensor", "examples_built/streamline_analysis/afq_tract_profiles", "examples_built/streamline_analysis/bundle_assignment_maps", "examples_built/streamline_analysis/bundle_shape_similarity", "examples_built/streamline_analysis/cluster_confidence", "examples_built/streamline_analysis/index", "examples_built/streamline_analysis/path_length_map", "examples_built/streamline_analysis/sg_execution_times", "examples_built/streamline_analysis/streamline_length", "examples_built/streamline_analysis/streamline_tools", "examples_built/visualization/index", "examples_built/visualization/sg_execution_times", "examples_built/visualization/viz_advanced", "examples_built/visualization/viz_bundles", "examples_built/visualization/viz_roi_contour", "examples_built/visualization/viz_slice", "examples_built/workflows/combined_workflow_creation", "examples_built/workflows/index", "examples_built/workflows/sg_execution_times", "examples_built/workflows/workflow_creation", "faq", "gimbal_lock", "glossary", "index", "interfaces/basic_flow", "interfaces/buan_flow", "interfaces/bundle_segmentation_flow", "interfaces/bundlewarp_registration_flow", "interfaces/data_fetch", "interfaces/denoise_flow", "interfaces/gibbs_unringing_flow", "interfaces/index", "interfaces/motion_flow", "interfaces/reconstruction_flow", "interfaces/registration_flow", "interfaces/tracking_flow", "old_highlights", "old_news", "recipes", "reconstruction_models_list", "reference/dipy", "reference/dipy.align", "reference/dipy.boots", "reference/dipy.core", "reference/dipy.data", "reference/dipy.denoise", "reference/dipy.direction", "reference/dipy.io", "reference/dipy.nn", "reference/dipy.reconst", "reference/dipy.segment", "reference/dipy.sims", "reference/dipy.stats", "reference/dipy.tracking", "reference/dipy.viz", "reference/dipy.workflows", "reference/index", "reference_cmd/dipy_align_affine", "reference_cmd/dipy_align_syn", "reference_cmd/dipy_apply_transform", "reference_cmd/dipy_buan_lmm", "reference_cmd/dipy_buan_profiles", "reference_cmd/dipy_buan_shapes", "reference_cmd/dipy_bundlewarp", "reference_cmd/dipy_correct_motion", "reference_cmd/dipy_denoise_lpca", "reference_cmd/dipy_denoise_mppca", "reference_cmd/dipy_denoise_nlmeans", "reference_cmd/dipy_denoise_patch2self", "reference_cmd/dipy_evac_plus", "reference_cmd/dipy_fetch", "reference_cmd/dipy_fit_csa", "reference_cmd/dipy_fit_csd", "reference_cmd/dipy_fit_dki", "reference_cmd/dipy_fit_dti", "reference_cmd/dipy_fit_ivim", "reference_cmd/dipy_fit_mapmri", "reference_cmd/dipy_gibbs_ringing", "reference_cmd/dipy_horizon", "reference_cmd/dipy_info", "reference_cmd/dipy_labelsbundles", "reference_cmd/dipy_mask", "reference_cmd/dipy_median_otsu", "reference_cmd/dipy_recobundles", "reference_cmd/dipy_reslice", "reference_cmd/dipy_slr", "reference_cmd/dipy_snr_in_cc", "reference_cmd/dipy_split", "reference_cmd/dipy_track", "reference_cmd/dipy_track_pft", "reference_cmd/index", "release_notes/release0.10", "release_notes/release0.11", "release_notes/release0.12", "release_notes/release0.13", "release_notes/release0.14", "release_notes/release0.15", "release_notes/release0.16", "release_notes/release0.6", "release_notes/release0.7", "release_notes/release0.8", "release_notes/release0.9", "release_notes/release1.0", "release_notes/release1.1", "release_notes/release1.2", "release_notes/release1.3", "release_notes/release1.4", "release_notes/release1.4.1", "release_notes/release1.5", "release_notes/release1.6", "release_notes/release1.7", "release_notes/release1.8", "sg_execution_times", "stateoftheart", "subscribe", "theory/b_and_q", "theory/bmatrix", "theory/gqi", "theory/index", "theory/sh_basis", "theory/spherical", "user_guide/data", "user_guide/dataset_list", "user_guide/dependencies", "user_guide/getting_started", "user_guide/index", "user_guide/installation", "user_guide/introduction", "user_guide/mission"], "filenames": ["api_changes.rst", "cite.rst", "devel/benchmarking.rst", "devel/coding_style_guideline.rst", "devel/commit_codes.rst", "devel/gitwash/configure_git.rst", "devel/gitwash/development_workflow.rst", "devel/gitwash/dot2_dot3.rst", "devel/gitwash/following_latest.rst", "devel/gitwash/forking_hell.rst", "devel/gitwash/git_development.rst", "devel/gitwash/git_install.rst", "devel/gitwash/git_intro.rst", "devel/gitwash/git_resources.rst", "devel/gitwash/index.rst", "devel/gitwash/maintainer_workflow.rst", "devel/gitwash/patching.rst", "devel/gitwash/set_up_fork.rst", "devel/index.rst", "devel/installation_from_source.rst", "devel/intro.rst", "devel/make_release.rst", "devel/toolchain.rst", "developers.rst", "examples_built/contextual_enhancement/contextual_enhancement.rst", "examples_built/contextual_enhancement/fiber_to_bundle_coherence.rst", "examples_built/contextual_enhancement/index.rst", "examples_built/contextual_enhancement/sg_execution_times.rst", "examples_built/fiber_tracking/index.rst", "examples_built/fiber_tracking/linear_fascicle_evaluation.rst", "examples_built/fiber_tracking/sg_execution_times.rst", "examples_built/fiber_tracking/surface_seed.rst", "examples_built/fiber_tracking/tracking_bootstrap_peaks.rst", "examples_built/fiber_tracking/tracking_deterministic.rst", "examples_built/fiber_tracking/tracking_introduction_eudx_1.rst", "examples_built/fiber_tracking/tracking_pft.rst", "examples_built/fiber_tracking/tracking_probabilistic.rst", "examples_built/fiber_tracking/tracking_ptt.rst", "examples_built/fiber_tracking/tracking_rumba.rst", "examples_built/fiber_tracking/tracking_sfm.rst", "examples_built/fiber_tracking/tracking_stopping_criterion.rst", "examples_built/file_formats/index.rst", "examples_built/file_formats/sg_execution_times.rst", "examples_built/file_formats/streamline_formats.rst", "examples_built/index.rst", "examples_built/multiprocessing/index.rst", "examples_built/multiprocessing/reconst_csa_parallel.rst", "examples_built/multiprocessing/reconst_csd_parallel.rst", "examples_built/multiprocessing/sg_execution_times.rst", "examples_built/preprocessing/brain_extraction_dwi.rst", "examples_built/preprocessing/denoise_ascm.rst", "examples_built/preprocessing/denoise_gibbs.rst", "examples_built/preprocessing/denoise_localpca.rst", "examples_built/preprocessing/denoise_mppca.rst", "examples_built/preprocessing/denoise_nlmeans.rst", "examples_built/preprocessing/denoise_patch2self.rst", "examples_built/preprocessing/gradients_spheres.rst", "examples_built/preprocessing/index.rst", "examples_built/preprocessing/motion_correction.rst", "examples_built/preprocessing/piesno.rst", "examples_built/preprocessing/reslice_datasets.rst", "examples_built/preprocessing/sg_execution_times.rst", "examples_built/preprocessing/snr_in_cc.rst", "examples_built/quick_start/index.rst", "examples_built/quick_start/quick_start.rst", "examples_built/quick_start/sg_execution_times.rst", "examples_built/quick_start/tracking_introduction_eudx.rst", "examples_built/reconstruction/histology_resdnn.rst", "examples_built/reconstruction/index.rst", "examples_built/reconstruction/kfold_xval.rst", "examples_built/reconstruction/reconst_csa.rst", "examples_built/reconstruction/reconst_csd.rst", "examples_built/reconstruction/reconst_cti.rst", "examples_built/reconstruction/reconst_dki.rst", "examples_built/reconstruction/reconst_dki_micro.rst", "examples_built/reconstruction/reconst_dsi.rst", "examples_built/reconstruction/reconst_dsi_metrics.rst", "examples_built/reconstruction/reconst_dsid.rst", "examples_built/reconstruction/reconst_dti.rst", "examples_built/reconstruction/reconst_forecast.rst", "examples_built/reconstruction/reconst_fwdti.rst", "examples_built/reconstruction/reconst_gqi.rst", "examples_built/reconstruction/reconst_ivim.rst", "examples_built/reconstruction/reconst_mapmri.rst", "examples_built/reconstruction/reconst_mcsd.rst", "examples_built/reconstruction/reconst_msdki.rst", "examples_built/reconstruction/reconst_qtdmri.rst", "examples_built/reconstruction/reconst_qti.rst", "examples_built/reconstruction/reconst_qtiplus.rst", "examples_built/reconstruction/reconst_rumba.rst", "examples_built/reconstruction/reconst_sfm.rst", "examples_built/reconstruction/reconst_sh.rst", "examples_built/reconstruction/reconst_shore.rst", "examples_built/reconstruction/reconst_shore_metrics.rst", "examples_built/reconstruction/restore_dti.rst", "examples_built/reconstruction/sg_execution_times.rst", "examples_built/registration/affine_registration_3d.rst", "examples_built/registration/affine_registration_masks.rst", "examples_built/registration/bundle_group_registration.rst", "examples_built/registration/bundle_registration.rst", "examples_built/registration/bundlewarp_registration.rst", "examples_built/registration/index.rst", "examples_built/registration/register_binary_fuzzy.rst", "examples_built/registration/sg_execution_times.rst", "examples_built/registration/streamline_registration.rst", "examples_built/registration/syn_registration_2d.rst", "examples_built/registration/syn_registration_3d.rst", "examples_built/segmentation/brain_extraction_dwi_1.rst", "examples_built/segmentation/bundle_extraction.rst", "examples_built/segmentation/fast_streamline_search.rst", "examples_built/segmentation/index.rst", "examples_built/segmentation/segment_clustering_features.rst", "examples_built/segmentation/segment_clustering_metrics.rst", "examples_built/segmentation/segment_extending_clustering_framework.rst", "examples_built/segmentation/segment_quickbundles.rst", "examples_built/segmentation/sg_execution_times.rst", "examples_built/segmentation/tissue_classification.rst", "examples_built/sg_execution_times.rst", "examples_built/simulations/index.rst", "examples_built/simulations/reconst_dsid_1.rst", "examples_built/simulations/sg_execution_times.rst", "examples_built/simulations/simulate_dki.rst", "examples_built/simulations/simulate_multi_tensor.rst", "examples_built/streamline_analysis/afq_tract_profiles.rst", "examples_built/streamline_analysis/bundle_assignment_maps.rst", "examples_built/streamline_analysis/bundle_shape_similarity.rst", "examples_built/streamline_analysis/cluster_confidence.rst", "examples_built/streamline_analysis/index.rst", "examples_built/streamline_analysis/path_length_map.rst", "examples_built/streamline_analysis/sg_execution_times.rst", "examples_built/streamline_analysis/streamline_length.rst", "examples_built/streamline_analysis/streamline_tools.rst", "examples_built/visualization/index.rst", "examples_built/visualization/sg_execution_times.rst", "examples_built/visualization/viz_advanced.rst", "examples_built/visualization/viz_bundles.rst", "examples_built/visualization/viz_roi_contour.rst", "examples_built/visualization/viz_slice.rst", "examples_built/workflows/combined_workflow_creation.rst", "examples_built/workflows/index.rst", "examples_built/workflows/sg_execution_times.rst", "examples_built/workflows/workflow_creation.rst", "faq.rst", "gimbal_lock.rst", "glossary.rst", "index.rst", "interfaces/basic_flow.rst", "interfaces/buan_flow.rst", "interfaces/bundle_segmentation_flow.rst", "interfaces/bundlewarp_registration_flow.rst", "interfaces/data_fetch.rst", "interfaces/denoise_flow.rst", "interfaces/gibbs_unringing_flow.rst", "interfaces/index.rst", "interfaces/motion_flow.rst", "interfaces/reconstruction_flow.rst", "interfaces/registration_flow.rst", "interfaces/tracking_flow.rst", "old_highlights.rst", "old_news.rst", "recipes.rst", "reconstruction_models_list.rst", "reference/dipy.rst", "reference/dipy.align.rst", "reference/dipy.boots.rst", "reference/dipy.core.rst", "reference/dipy.data.rst", "reference/dipy.denoise.rst", "reference/dipy.direction.rst", "reference/dipy.io.rst", "reference/dipy.nn.rst", "reference/dipy.reconst.rst", "reference/dipy.segment.rst", "reference/dipy.sims.rst", "reference/dipy.stats.rst", "reference/dipy.tracking.rst", "reference/dipy.viz.rst", "reference/dipy.workflows.rst", "reference/index.rst", "reference_cmd/dipy_align_affine.rst", "reference_cmd/dipy_align_syn.rst", "reference_cmd/dipy_apply_transform.rst", "reference_cmd/dipy_buan_lmm.rst", "reference_cmd/dipy_buan_profiles.rst", "reference_cmd/dipy_buan_shapes.rst", "reference_cmd/dipy_bundlewarp.rst", "reference_cmd/dipy_correct_motion.rst", "reference_cmd/dipy_denoise_lpca.rst", "reference_cmd/dipy_denoise_mppca.rst", "reference_cmd/dipy_denoise_nlmeans.rst", "reference_cmd/dipy_denoise_patch2self.rst", "reference_cmd/dipy_evac_plus.rst", "reference_cmd/dipy_fetch.rst", "reference_cmd/dipy_fit_csa.rst", "reference_cmd/dipy_fit_csd.rst", "reference_cmd/dipy_fit_dki.rst", "reference_cmd/dipy_fit_dti.rst", "reference_cmd/dipy_fit_ivim.rst", "reference_cmd/dipy_fit_mapmri.rst", "reference_cmd/dipy_gibbs_ringing.rst", "reference_cmd/dipy_horizon.rst", "reference_cmd/dipy_info.rst", "reference_cmd/dipy_labelsbundles.rst", "reference_cmd/dipy_mask.rst", "reference_cmd/dipy_median_otsu.rst", "reference_cmd/dipy_recobundles.rst", "reference_cmd/dipy_reslice.rst", "reference_cmd/dipy_slr.rst", "reference_cmd/dipy_snr_in_cc.rst", "reference_cmd/dipy_split.rst", "reference_cmd/dipy_track.rst", "reference_cmd/dipy_track_pft.rst", "reference_cmd/index.rst", "release_notes/release0.10.rst", "release_notes/release0.11.rst", "release_notes/release0.12.rst", "release_notes/release0.13.rst", "release_notes/release0.14.rst", "release_notes/release0.15.rst", "release_notes/release0.16.rst", "release_notes/release0.6.rst", "release_notes/release0.7.rst", "release_notes/release0.8.rst", "release_notes/release0.9.rst", "release_notes/release1.0.rst", "release_notes/release1.1.rst", "release_notes/release1.2.rst", "release_notes/release1.3.rst", "release_notes/release1.4.rst", "release_notes/release1.4.1.rst", "release_notes/release1.5.rst", "release_notes/release1.6.rst", "release_notes/release1.7.rst", "release_notes/release1.8.rst", "sg_execution_times.rst", "stateoftheart.rst", "subscribe.rst", "theory/b_and_q.rst", "theory/bmatrix.rst", "theory/gqi.rst", "theory/index.rst", "theory/sh_basis.rst", "theory/spherical.rst", "user_guide/data.rst", "user_guide/dataset_list.rst", "user_guide/dependencies.rst", "user_guide/getting_started.rst", "user_guide/index.rst", "user_guide/installation.rst", "user_guide/introduction.rst", "user_guide/mission.rst"], "titles": ["API changes", "Publications", "\ud83d\ude80 DIPY Benchmarks \ud83d\udcca", "\ud83d\udcbb DIPY Coding Style Guideline", "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-git-commit sd-text-info\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M10.5 7.75a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm1.43.75a4.002 4.002 0 01-7.86 0H.75a.75.75 0 110-1.5h3.32a4.001 4.001 0 017.86 0h3.32a.75.75 0 110 1.5h-3.32z\"></path></svg> Commit message codes", "Configure git", "Development workflow", "Two and three dots in difference specs", "Following the latest source", "Making your own copy (fork) of DIPY", "Git for development", "Install git", "Introduction", "git resources", "Working with DIPY source code", "Maintainer workflow", "Making a patch", "Set up your fork", "DIPY Developer Guide", "Installing from source", "Introduction", "A guide to making a DIPY release", "\ud83d\udee0\ufe0f Toolchain Roadmap", "Developers", "Crossing-preserving contextual enhancement", "Fiber to bundle coherence measures", "Contextual Enhancement", "Computation times", "Fiber Tracking", "Linear fascicle evaluation (LiFE)", "Computation times", "Surface seeding for tractography", "Bootstrap and Closest Peak Direction Getters Example", "An introduction to the Deterministic Maximum Direction Getter", "Introduction to Basic Tracking", "Particle Filtering Tractography", "An introduction to the Probabilistic Direction Getter", "Parallel Transport Tractography", "Tracking with Robust Unbiased Model-BAsed Spherical Deconvolution (RUMBA-SD)", "Tracking with the Sparse Fascicle Model", "Using Various Stopping Criterion for Tractography", "File Formats", "Computation times", "Read/Write streamline files", "Examples", "Multiprocessing", "Parallel reconstruction using Q-Ball", "Parallel reconstruction using CSD", "Computation times", "Brain segmentation with median_otsu", "Denoise images using Adaptive Soft Coefficient Matching (ASCM)", "Suppress Gibbs oscillations", "Denoise images using Local PCA via empirical thresholds", "Denoise images using the Marcenko-Pastur PCA algorithm", "Denoise images using Non-Local Means (NLMEANS)", "Patch2Self: Self-Supervised Denoising via Statistical Independence", "Gradients and Spheres", "Preprocessing", "Between-volumes Motion Correction on DWI datasets", "Noise estimation using PIESNO", "Reslice diffusion datasets", "Computation times", "SNR estimation for Diffusion-Weighted Images", "Quick Start", "Getting started with DIPY", "Computation times", "Introduction to Basic Tracking", "Local reconstruction using the Histological ResDNN", "Reconstruction", "K-fold cross-validation for model comparison", "Reconstruct with Constant Solid Angle (Q-Ball)", "Reconstruction with Constrained Spherical Deconvolution", "Reconstruction of the diffusion signal with the correlation tensor model", "Reconstruction of the diffusion signal with the kurtosis tensor model", "Reconstruction of the diffusion signal with the WMTI model", "Reconstruct with Diffusion Spectrum Imaging", "Calculate DSI-based scalar maps", "DSI Deconvolution vs DSI", "Reconstruction of the diffusion signal with the Tensor model", "Crossing invariant fiber response function with FORECAST model", "Using the free water elimination model to remove DTI free water contamination", "Reconstruct with Generalized Q-Sampling Imaging", "Intravoxel incoherent motion", "Continuous and analytical diffusion signal modelling with MAP-MRI", "Reconstruction with Multi-Shell Multi-Tissue CSD", "Mean signal diffusion kurtosis imaging (MSDKI)", "Estimating diffusion time dependent q-space indices using qt-dMRI", "Reconstruct with Q-space Trajectory Imaging (QTI)", "Applying positivity constraints to Q-space Trajectory Imaging (QTI+)", "Reconstruction with Robust and Unbiased Model-BAsed Spherical Deconvolution", "Reconstruction with the Sparse Fascicle Model", "Signal Reconstruction Using Spherical Harmonics", "Continuous and analytical diffusion signal modelling with 3D-SHORE", "Calculate SHORE scalar maps", "Using the RESTORE algorithm for robust tensor fitting", "Computation times", "Affine Registration in 3D", "Affine Registration with Masks", "Groupwise Bundle Registration", "Direct Bundle Registration", "Nonrigid Bundle Registration with BundleWarp", "Registration", "Diffeomorphic Registration with binary and fuzzy images", "Computation times", "Applying image-based deformations to streamlines", "Symmetric Diffeomorphic Registration in 2D", "Symmetric Diffeomorphic Registration in 3D", "Brain segmentation with median_otsu", "Automatic Fiber Bundle Extraction with RecoBundles", "Fast Streamline Search", "Segmentation", "Tractography Clustering - Available Features", "Tractography Clustering - Available Metrics", "Enhancing QuickBundles with different metrics and features", "Tractography Clustering with QuickBundles", "Computation times", "Tissue Classification of a T1-weighted Structural Image", "Computation times", "Simulation", "DSI Deconvolution vs DSI", "Computation times", "DKI MultiTensor Simulation", "MultiTensor Simulation", "Extracting AFQ tract profiles from segmented bundles", "BUAN Bundle Assignment Maps Creation", "BUAN Bundle Shape Similarity Score", "Calculation of Outliers with Cluster Confidence Index", "Streamlines Analysis and Connectivity", "Calculate Path Length Map", "Computation times", "Streamline length and size reduction", "Connectivity Matrices, ROI Intersections and Density Maps", "Visualization", "Computation times", "Advanced interactive visualization", "Visualize bundles and metrics on bundles", "Visualization of ROI Surface Rendered with Streamlines", "Simple volume slicing", "Creating a new combined workflow", "Workflows", "Computation times", "Creating a new workflow.", "Frequently Asked Questions", "Gimbal lock", "Glossary", "Diffusion Imaging In Python - Documentation", "Introduction to command line interfaces", "BUndle ANalytics (BUAN) framework", "White Matter Bundle Segmentation with RecoBundles", "Nonrigid White Matter Bundle Registration with BundleWarp", "Downloading DIPY datasets", "Denoising", "Gibbs Unringing", "DIPY Workflows Interfaces", "Between-Volumes Motion Correction", "Reconstruction", "Registration", "Tracking", "Older Highlights", "Past Announcements", "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-mortar-board\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.693 1.066a.75.75 0 01.614 0l7.25 3.25a.75.75 0 010 1.368L13 6.831v2.794c0 1.024-.81 1.749-1.66 2.173-.893.447-2.075.702-3.34.702-.278 0-.55-.012-.816-.036a.75.75 0 01.133-1.494c.22.02.45.03.683.03 1.082 0 2.025-.221 2.67-.543.69-.345.83-.682.83-.832V7.503L8.307 8.934a.75.75 0 01-.614 0L4 7.28v1.663c.296.105.575.275.812.512.438.438.688 1.059.688 1.796v3a.75.75 0 01-.75.75h-3a.75.75 0 01-.75-.75v-3c0-.737.25-1.358.688-1.796.237-.237.516-.407.812-.512V6.606L.443 5.684a.75.75 0 010-1.368l7.25-3.25zM2.583 5L8 7.428 13.416 5 8 2.572 2.583 5zM2.5 11.25c0-.388.125-.611.25-.735a.704.704 0 01.5-.203c.19 0 .37.071.5.203.125.124.25.347.25.735v2.25H2.5v-2.25z\"></path></svg> Recipes", "&lt;no title&gt;", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dipy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">align</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">boots</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">core</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">denoise</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">direction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">reconst</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">segment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sims</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stats</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracking</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">viz</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">workflows</span></code>", "API Reference", "dipy_align_affine", "dipy_align_syn", "dipy_apply_transform", "dipy_buan_lmm", "dipy_buan_profiles", "dipy_buan_shapes", "dipy_bundlewarp", "dipy_correct_motion", "dipy_denoise_lpca", "dipy_denoise_mppca", "dipy_denoise_nlmeans", "dipy_denoise_patch2self", "dipy_evac_plus", "dipy_fetch", "dipy_fit_csa", "dipy_fit_csd", "dipy_fit_dki", "dipy_fit_dti", "dipy_fit_ivim", "dipy_fit_mapmri", "dipy_gibbs_ringing", "dipy_horizon", "dipy_info", "dipy_labelsbundles", "dipy_mask", "dipy_median_otsu", "dipy_recobundles", "dipy_reslice", "dipy_slr", "dipy_snr_in_cc", "dipy_split", "dipy_track", "dipy_track_pft", "Command Line Utilities Reference", "Release notes for DIPY version 0.10", "Release notes for DIPY version 0.11", "Release notes for DIPY version 0.12", "Release notes for DIPY version 0.13", "Release notes for DIPY version 0.14", "Release notes for DIPY version 0.15", "Release notes for DIPY version 0.16", "Release notes for DIPY version 0.6", "Release notes for DIPY version 0.7", "Release notes for DIPY version 0.8", "Release notes for DIPY version 0.9", "Release notes for DIPY version 1.0", "Release notes for DIPY version 1.1", "Release notes for DIPY version 1.2", "Release notes for DIPY version 1.3", "Release notes for DIPY version 1.4", "Release notes for DIPY version 1.4.1", "Release notes for DIPY version 1.5", "Release notes for DIPY version 1.6", "Release notes for DIPY version 1.7", "Release notes for DIPY version 1.8", "Computation times", "A quick overview of features", "Subscribe", "DIY Stuff about b and q", "The B matrix and Siemens DICOM", "Generalised Q-Sampling Imaging", "Theory and concepts", "Spherical Harmonic bases", "Spherical coordinates", "Data", "&lt;no title&gt;", "Python versions and dependencies", "Getting Started", "DIPY User Guide", "Installation", "What is DIPY?", "Mission statement"], "terms": {"here": [0, 2, 5, 6, 9, 11, 12, 13, 16, 17, 19, 20, 21, 23, 24, 25, 29, 33, 34, 38, 39, 40, 44, 47, 49, 50, 59, 60, 62, 64, 66, 69, 71, 73, 74, 78, 80, 81, 82, 84, 86, 87, 88, 89, 90, 96, 98, 99, 100, 107, 108, 109, 111, 112, 114, 116, 121, 123, 128, 131, 134, 135, 136, 137, 143, 148, 149, 155, 158, 160, 163, 165, 167, 169, 171, 172, 173, 175, 223, 231, 235, 238, 239, 242, 246], "we": [0, 3, 6, 9, 16, 17, 19, 20, 21, 23, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 160, 163, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 207, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 242, 245, 246, 248, 250], "provid": [0, 3, 22, 29, 33, 34, 38, 39, 43, 53, 55, 64, 66, 71, 72, 73, 74, 79, 82, 83, 84, 85, 86, 87, 88, 92, 96, 97, 99, 100, 104, 106, 108, 111, 112, 113, 114, 126, 128, 134, 135, 136, 145, 146, 147, 149, 155, 157, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 198, 200, 201, 210, 213, 220, 221, 222, 224, 227, 231, 235, 242], "inform": [0, 3, 6, 11, 19, 22, 34, 35, 40, 43, 49, 50, 52, 53, 55, 64, 66, 67, 70, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 96, 97, 107, 111, 112, 113, 114, 121, 123, 130, 138, 141, 142, 146, 147, 148, 149, 151, 154, 156, 157, 158, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 179, 180, 190, 201, 220, 224, 227, 235, 242, 243, 244, 245], "about": [0, 3, 6, 16, 19, 29, 36, 38, 46, 47, 53, 64, 71, 73, 74, 75, 78, 82, 83, 84, 85, 86, 87, 88, 89, 96, 111, 112, 113, 114, 121, 128, 138, 141, 142, 143, 144, 146, 147, 148, 149, 150, 158, 163, 165, 166, 167, 169, 170, 171, 172, 174, 175, 177, 201, 213, 217, 218, 222, 224, 226, 230, 233, 243, 246], "function": [0, 2, 3, 4, 22, 24, 29, 34, 36, 38, 39, 43, 44, 46, 47, 51, 53, 54, 56, 58, 59, 64, 66, 68, 70, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 105, 108, 111, 112, 121, 122, 130, 131, 134, 137, 142, 145, 146, 155, 157, 158, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 194, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 241, 242, 248], "class": [0, 2, 3, 29, 43, 78, 80, 84, 94, 96, 105, 106, 109, 113, 116, 134, 135, 138, 141, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 213, 220, 221, 222], "have": [0, 2, 6, 8, 9, 11, 13, 15, 16, 17, 19, 20, 21, 22, 29, 32, 34, 36, 39, 43, 44, 54, 55, 56, 59, 60, 62, 64, 66, 68, 69, 70, 71, 72, 73, 75, 78, 81, 82, 83, 84, 85, 87, 89, 90, 91, 93, 94, 96, 98, 99, 100, 104, 106, 111, 112, 113, 114, 116, 121, 123, 126, 128, 130, 131, 134, 135, 137, 138, 141, 142, 143, 144, 145, 147, 148, 149, 160, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 185, 198, 200, 205, 207, 213, 217, 220, 222, 223, 224, 227, 228, 237, 238, 241, 248], "been": [0, 3, 6, 15, 21, 29, 52, 53, 69, 73, 78, 82, 83, 93, 98, 99, 104, 114, 116, 155, 163, 165, 169, 171, 172, 175, 241], "remov": [0, 6, 19, 25, 29, 39, 43, 44, 49, 51, 52, 53, 68, 70, 74, 78, 85, 89, 95, 104, 105, 106, 107, 114, 126, 152, 158, 163, 165, 167, 168, 169, 170, 171, 172, 175, 176, 177, 199, 207, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 248], "renam": [0, 16, 146, 214, 215, 220, 221, 222, 224, 226], "ar": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 24, 25, 29, 33, 34, 36, 39, 40, 43, 44, 47, 50, 51, 52, 53, 55, 56, 59, 62, 64, 66, 67, 69, 71, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 108, 109, 111, 112, 113, 116, 121, 122, 123, 125, 126, 130, 131, 134, 135, 137, 138, 142, 143, 144, 146, 147, 148, 149, 151, 152, 155, 156, 157, 158, 159, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 186, 187, 196, 198, 201, 204, 205, 206, 207, 210, 213, 215, 216, 217, 218, 219, 220, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 248, 249], "deprec": [0, 3, 158, 165, 169, 171, 175, 213, 215, 217, 218, 219, 220, 224, 225, 226, 227, 229, 230, 231, 233], "recommend": [0, 3, 43, 44, 51, 58, 71, 73, 75, 83, 86, 88, 89, 108, 109, 134, 137, 142, 151, 152, 154, 160, 161, 163, 165, 170, 171, 175, 177, 181, 195, 196, 219, 235, 245, 248], "dure": [0, 5, 6, 22, 29, 58, 80, 83, 88, 94, 97, 104, 145, 154, 155, 156, 163, 165, 170, 171, 175, 177, 193, 194, 213, 218, 226], "differ": [0, 2, 12, 19, 24, 25, 29, 36, 39, 43, 44, 49, 50, 51, 53, 54, 55, 56, 59, 60, 69, 71, 72, 73, 75, 80, 82, 83, 84, 85, 86, 87, 90, 91, 94, 97, 99, 100, 102, 104, 105, 107, 108, 110, 111, 114, 115, 116, 121, 123, 130, 134, 137, 138, 141, 142, 143, 147, 149, 152, 156, 157, 158, 163, 165, 166, 167, 168, 170, 171, 172, 175, 176, 177, 180, 200, 201, 213, 217, 218, 221, 222, 224, 226, 227, 231, 234, 235, 237, 238, 241, 242], "releas": [0, 2, 18, 22, 145, 158, 159, 163, 171, 235], "circl": [0, 105, 163, 165, 175], "gradient": [0, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 46, 47, 50, 52, 53, 55, 57, 58, 61, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 104, 105, 119, 121, 122, 126, 128, 131, 136, 142, 146, 151, 155, 158, 161, 162, 166, 167, 170, 171, 173, 177, 178, 180, 197, 198, 213, 214, 217, 218, 220, 222, 225, 226, 227, 231, 232, 233, 234, 237, 238, 239, 243, 244, 246], "core": [0, 5, 11, 23, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 49, 50, 52, 53, 56, 58, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 104, 107, 119, 121, 122, 126, 128, 131, 136, 152, 158, 162, 163, 166, 167, 168, 169, 171, 173, 174, 175, 177, 178, 193, 194, 199, 206, 213, 215, 217, 220, 221, 222, 224, 225, 226, 229, 232, 233, 245, 246], "reorient_bvec": [0, 178, 226], "now": [0, 2, 5, 6, 8, 9, 15, 16, 17, 19, 21, 25, 29, 34, 38, 39, 43, 47, 50, 51, 55, 56, 59, 62, 64, 66, 71, 72, 73, 75, 76, 78, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 96, 97, 98, 99, 100, 104, 105, 106, 108, 113, 116, 122, 125, 126, 128, 131, 134, 137, 138, 141, 143, 145, 146, 158, 159, 165, 171, 213, 214, 220, 221, 222, 241, 248], "requir": [0, 3, 19, 22, 24, 25, 29, 39, 43, 55, 60, 67, 73, 74, 79, 83, 85, 86, 87, 88, 89, 90, 97, 108, 109, 111, 113, 114, 121, 134, 137, 146, 147, 148, 151, 155, 156, 157, 163, 165, 168, 169, 170, 171, 172, 173, 175, 177, 204, 209, 215, 222, 224, 226, 227, 228, 232, 233, 245, 248], "affin": [0, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 52, 53, 54, 55, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 83, 84, 85, 87, 89, 90, 92, 93, 94, 98, 99, 100, 101, 103, 104, 107, 108, 123, 126, 128, 131, 134, 135, 136, 137, 142, 144, 146, 154, 156, 158, 165, 166, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 207, 213, 215, 217, 218, 219, 222, 223, 224, 226, 230, 233, 234, 246], "shape": [0, 24, 25, 29, 34, 35, 38, 40, 44, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 64, 66, 67, 70, 71, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 89, 91, 92, 93, 96, 97, 99, 100, 102, 104, 106, 107, 108, 111, 113, 116, 122, 124, 127, 129, 130, 131, 134, 135, 137, 144, 149, 153, 156, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 183, 184, 194, 196, 205, 213, 214, 215, 220, 222, 224, 226, 227, 230, 231, 233, 234], "n": [0, 1, 2, 3, 21, 24, 29, 38, 39, 40, 50, 51, 54, 55, 58, 59, 69, 70, 72, 73, 80, 82, 85, 87, 88, 89, 90, 94, 96, 97, 99, 104, 105, 106, 113, 114, 116, 117, 124, 130, 146, 151, 154, 156, 163, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 179, 237, 238, 243, 244], "direct": [0, 3, 24, 25, 28, 29, 30, 31, 35, 37, 38, 39, 40, 44, 46, 47, 52, 53, 55, 59, 62, 69, 70, 71, 72, 73, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 100, 101, 103, 105, 106, 119, 121, 123, 126, 128, 131, 136, 142, 145, 151, 155, 157, 158, 161, 162, 163, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 193, 194, 207, 210, 213, 214, 215, 216, 217, 220, 221, 222, 224, 226, 230, 233, 234, 237, 238, 241, 242, 243, 244], "bootstrap_direction_gett": [0, 178], "The": [0, 1, 2, 3, 5, 7, 8, 9, 10, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 29, 33, 34, 35, 36, 38, 39, 40, 43, 44, 46, 49, 50, 51, 52, 53, 55, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 111, 113, 116, 121, 122, 123, 126, 128, 130, 131, 134, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 155, 156, 157, 158, 159, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 187, 188, 190, 195, 197, 200, 201, 202, 205, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 240, 241, 243, 250], "parent": [0, 165, 177, 178], "wa": [0, 6, 7, 21, 22, 23, 29, 43, 50, 51, 53, 54, 59, 62, 67, 70, 73, 74, 79, 80, 82, 83, 84, 85, 88, 89, 90, 94, 96, 99, 104, 121, 128, 131, 138, 143, 146, 155, 158, 159, 163, 165, 166, 167, 169, 170, 171, 172, 175, 176, 177, 220, 221, 222, 223, 224], "from": [0, 2, 3, 5, 7, 8, 11, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 155, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 181, 187, 190, 194, 195, 196, 200, 204, 206, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 241, 242, 243, 244, 246, 248], "pmfgendirectiongett": [0, 178, 232], "directiongett": [0, 168, 171, 178, 217, 230], "bootpmfgen": 0, "were": [0, 29, 44, 52, 55, 71, 80, 82, 85, 86, 87, 100, 104, 126, 131, 142, 161, 163, 165, 166, 167, 171, 175, 177, 220, 221], "merg": [0, 10, 13, 15, 17, 21, 55, 145, 158, 172, 175, 177, 215, 217, 218, 221, 222, 224, 232], "bootdirectiongett": [0, 32, 178, 233], "constructor": [0, 89, 163, 165, 168, 171, 173, 217, 225], "paramet": [0, 2, 3, 33, 35, 40, 43, 47, 49, 50, 51, 52, 53, 55, 64, 69, 72, 73, 74, 76, 78, 81, 82, 83, 84, 85, 87, 88, 90, 92, 94, 99, 100, 102, 105, 107, 108, 116, 121, 138, 141, 142, 149, 151, 155, 156, 157, 158, 179, 180, 189, 190, 196, 197, 200, 214, 215, 216, 217, 218, 220, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 237], "pmfgen": [0, 178, 233], "data": [0, 1, 3, 5, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 142, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 244, 246, 248, 249], "model": [0, 1, 16, 24, 25, 28, 29, 30, 33, 34, 35, 36, 37, 40, 44, 46, 47, 49, 51, 53, 54, 55, 62, 64, 66, 67, 68, 70, 71, 75, 76, 81, 82, 84, 85, 86, 87, 88, 93, 94, 95, 107, 108, 109, 116, 121, 123, 124, 126, 128, 131, 145, 146, 147, 148, 155, 157, 158, 161, 163, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 190, 198, 202, 205, 207, 215, 216, 217, 219, 220, 221, 222, 224, 226, 227, 230, 231, 233, 234, 243, 244, 246], "sh_order": [0, 24, 25, 32, 33, 34, 36, 37, 66, 67, 71, 79, 84, 89, 91, 126, 128, 136, 155, 167, 168, 170, 171, 177, 193, 194], "ad": [0, 3, 4, 5, 6, 16, 19, 24, 40, 46, 47, 53, 67, 72, 73, 83, 84, 94, 100, 137, 143, 145, 146, 147, 158, 163, 167, 169, 171, 172, 173, 175, 177, 178, 180, 187, 188, 195, 196, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233], "method": [0, 1, 2, 24, 29, 34, 40, 51, 52, 53, 55, 58, 59, 66, 69, 71, 72, 73, 77, 78, 82, 83, 84, 85, 88, 89, 94, 98, 99, 100, 108, 109, 111, 112, 113, 114, 116, 119, 123, 126, 128, 130, 134, 135, 137, 138, 145, 149, 152, 153, 154, 155, 156, 158, 165, 167, 168, 170, 171, 172, 173, 176, 177, 185, 187, 188, 189, 190, 199, 204, 217, 218, 220, 221, 222, 225, 226, 228, 230, 231, 232, 233, 243, 244, 248], "from_data": [0, 32, 168, 178], "pmf": [0, 32, 36, 37, 38, 157, 178, 215, 218, 230], "its": [0, 21, 22, 24, 38, 53, 55, 59, 76, 83, 84, 85, 86, 89, 90, 93, 94, 96, 104, 113, 116, 121, 134, 135, 137, 143, 144, 147, 148, 150, 158, 163, 165, 166, 167, 170, 171, 172, 173, 174, 175, 177, 201, 222, 226, 227, 229, 243, 244, 245], "denois": [0, 19, 24, 25, 44, 51, 57, 59, 61, 73, 84, 85, 94, 138, 145, 153, 158, 162, 166, 178, 187, 188, 189, 190, 199, 215, 222, 224, 227, 228, 230, 231, 232, 233, 234, 243, 244], "localpca": [0, 53, 84, 178, 187, 216, 224, 227], "genpca": [0, 178], "canus": [0, 1, 2, 4, 5, 6, 11, 13, 17, 19, 20, 21, 22, 24, 25, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 43, 44, 45, 48, 49, 51, 55, 56, 57, 60, 61, 62, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 87, 88, 89, 90, 93, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246], "fewer": [0, 108, 168, 175], "imag": [0, 1, 3, 21, 22, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 46, 47, 49, 51, 55, 56, 57, 58, 59, 60, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 86, 89, 90, 92, 93, 94, 95, 96, 97, 100, 101, 103, 105, 106, 107, 110, 115, 119, 121, 123, 126, 128, 130, 131, 134, 135, 136, 137, 142, 144, 146, 151, 152, 153, 154, 157, 158, 161, 163, 165, 166, 167, 168, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 186, 187, 188, 193, 195, 196, 197, 200, 201, 203, 204, 210, 211, 214, 215, 218, 219, 222, 224, 226, 230, 233, 234, 235, 237, 241, 243, 244, 246, 249, 250], "than": [0, 2, 3, 15, 16, 17, 19, 22, 23, 25, 40, 50, 53, 55, 58, 67, 71, 73, 74, 78, 80, 82, 83, 84, 85, 86, 88, 90, 93, 96, 97, 108, 111, 121, 126, 128, 130, 131, 137, 143, 144, 155, 158, 159, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 187, 200, 205, 207, 213, 214, 217, 220, 226, 230, 231, 248], "patch": [0, 14, 15, 18, 50, 52, 55, 151, 167, 177, 187, 188, 189, 190, 217, 224, 226, 229, 231], "voxel": [0, 24, 25, 29, 33, 34, 35, 36, 39, 40, 43, 44, 47, 49, 51, 52, 53, 55, 59, 60, 62, 64, 66, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 104, 107, 119, 121, 122, 128, 130, 131, 134, 137, 142, 146, 151, 155, 156, 157, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 187, 188, 190, 194, 197, 204, 206, 210, 211, 213, 214, 215, 220, 222, 223, 224, 226, 227, 233, 235, 243, 244], "pca_noise_estim": [0, 52, 178, 232], "ha": [0, 3, 6, 13, 15, 21, 24, 29, 33, 34, 36, 40, 47, 52, 53, 55, 58, 59, 62, 66, 69, 70, 71, 73, 74, 75, 78, 80, 81, 82, 83, 85, 87, 88, 89, 96, 99, 106, 111, 113, 114, 116, 130, 131, 137, 142, 143, 144, 147, 155, 157, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 177, 210, 213, 215, 218, 220, 222, 226, 232, 237, 241, 242, 248], "new": [0, 3, 4, 8, 10, 15, 16, 17, 19, 20, 21, 23, 24, 25, 29, 43, 44, 55, 56, 58, 60, 64, 71, 86, 89, 97, 99, 113, 137, 139, 140, 145, 158, 159, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 206, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 241, 248], "argument": [0, 29, 82, 89, 98, 109, 131, 138, 141, 148, 149, 150, 151, 152, 154, 155, 156, 157, 163, 165, 169, 170, 171, 174, 175, 176, 177, 212, 218, 220, 224, 226, 228, 229, 231], "images_as_sampl": [0, 167], "gener": [0, 1, 2, 3, 6, 9, 12, 16, 19, 20, 21, 23, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 145, 146, 147, 152, 158, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 185, 193, 194, 198, 200, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 248], "furi": [0, 31, 34, 66, 67, 89, 134, 142, 158, 176, 218, 224, 225, 226, 230, 245, 248], "minimum": [0, 25, 44, 86, 99, 108, 113, 158, 161, 163, 165, 167, 168, 170, 171, 172, 175, 176, 177, 211, 218, 222, 225, 233, 245], "version": [0, 6, 18, 19, 21, 24, 25, 33, 50, 51, 52, 53, 54, 55, 80, 81, 102, 104, 121, 131, 142, 145, 146, 157, 158, 159, 162, 163, 165, 166, 169, 171, 172, 173, 175, 178, 235, 241, 243, 244], "i": [0, 1, 2, 3, 4, 5, 6, 7, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 246, 248, 250], "distutil": [0, 226, 230], "drop": [0, 22, 214, 215, 219, 224, 230], "io": [0, 2, 6, 22, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 87, 89, 90, 92, 93, 94, 96, 97, 100, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 121, 123, 124, 126, 128, 131, 136, 137, 142, 158, 160, 162, 163, 166, 172, 173, 175, 178, 213, 215, 217, 219, 220, 224, 225, 230, 231, 233, 243, 244, 246], "bvectxt": [0, 158, 178, 230, 231], "modul": [0, 2, 3, 19, 29, 32, 34, 37, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 66, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 107, 108, 109, 111, 112, 113, 114, 121, 124, 125, 128, 131, 134, 136, 137, 138, 141, 142, 158, 162, 178, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 237, 239, 241, 245, 248], "default": [0, 6, 9, 16, 22, 24, 25, 34, 38, 39, 46, 49, 54, 55, 60, 64, 66, 67, 76, 78, 82, 88, 89, 90, 94, 96, 98, 102, 107, 108, 109, 111, 112, 116, 128, 134, 137, 138, 141, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 221, 222, 224, 227, 228, 229, 230, 231, 232, 241], "option": [0, 2, 6, 15, 16, 19, 34, 46, 51, 53, 55, 66, 70, 73, 82, 83, 84, 89, 96, 99, 135, 138, 141, 145, 146, 150, 151, 152, 154, 155, 156, 157, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 201, 212, 213, 214, 215, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 245], "command": [0, 2, 5, 6, 8, 13, 16, 19, 21, 25, 51, 64, 137, 138, 141, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 166, 177, 194, 204, 215, 220, 221, 222, 224, 226, 230, 248], "line": [0, 2, 3, 5, 6, 8, 15, 16, 19, 21, 25, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 53, 58, 60, 62, 66, 72, 85, 86, 88, 99, 108, 109, 124, 126, 128, 131, 134, 135, 136, 137, 138, 141, 144, 145, 147, 148, 149, 153, 155, 157, 158, 162, 163, 168, 170, 171, 175, 176, 177, 194, 204, 213, 214, 215, 217, 218, 221, 222, 223, 224, 225, 226, 230, 242, 248], "patch2self": [0, 44, 57, 61, 158, 177, 178, 190, 228, 229, 230, 231, 233, 234], "ridg": [0, 55, 167, 171, 177, 190, 230], "ol": [0, 55, 167, 171, 177, 190, 195, 196, 230, 233], "track": [0, 1, 3, 5, 15, 25, 29, 30, 31, 32, 33, 35, 36, 37, 40, 43, 63, 65, 78, 90, 99, 100, 104, 111, 112, 113, 123, 126, 128, 130, 131, 134, 135, 136, 146, 153, 158, 162, 163, 165, 166, 168, 169, 171, 172, 174, 178, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235], "mandatori": [0, 138, 141, 163], "sphere": [0, 24, 25, 32, 33, 35, 36, 37, 38, 39, 40, 44, 46, 47, 57, 61, 67, 70, 71, 75, 77, 78, 79, 81, 83, 84, 85, 86, 89, 90, 91, 92, 94, 119, 122, 131, 157, 161, 162, 163, 166, 168, 170, 171, 173, 175, 176, 177, 178, 213, 215, 218, 220, 222, 224, 225, 234, 241, 242], "vertic": [0, 25, 31, 39, 56, 71, 75, 77, 85, 89, 90, 91, 119, 122, 165, 166, 167, 168, 171, 173, 175, 176, 178, 218, 242], "correspond": [0, 1, 3, 19, 24, 43, 51, 53, 55, 62, 64, 69, 76, 82, 84, 85, 86, 87, 88, 89, 92, 93, 105, 106, 111, 121, 123, 130, 135, 142, 157, 163, 165, 167, 168, 170, 171, 175, 176, 177, 179, 185, 199, 233, 235], "spheric": [0, 3, 24, 25, 28, 30, 33, 35, 36, 40, 44, 46, 47, 53, 56, 67, 68, 69, 70, 74, 79, 84, 85, 88, 90, 95, 122, 145, 153, 158, 159, 160, 161, 162, 165, 166, 167, 168, 170, 175, 176, 177, 178, 193, 194, 213, 218, 220, 221, 222, 224, 226, 233, 234, 240], "distribut": [0, 2, 22, 24, 25, 29, 33, 34, 36, 39, 44, 46, 53, 55, 56, 59, 66, 67, 69, 70, 71, 78, 79, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 96, 116, 131, 146, 151, 155, 157, 161, 162, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 177, 187, 188, 190, 194, 210, 211, 222, 225, 239, 241, 248], "valu": [0, 22, 25, 29, 33, 34, 36, 40, 43, 44, 46, 51, 52, 53, 55, 56, 58, 59, 62, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 102, 108, 116, 121, 122, 123, 125, 126, 128, 131, 134, 138, 141, 142, 144, 146, 147, 149, 151, 152, 154, 155, 157, 158, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 185, 187, 188, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 237, 238, 241, 243, 244, 246], "get_pmf_valu": [0, 168, 178], "point": [0, 3, 6, 16, 17, 21, 24, 25, 29, 34, 36, 38, 39, 44, 51, 56, 66, 69, 73, 81, 83, 84, 85, 86, 90, 91, 99, 100, 104, 111, 112, 113, 114, 122, 130, 142, 143, 144, 149, 156, 157, 158, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 185, 198, 199, 206, 207, 210, 211, 213, 215, 218, 219, 220, 224, 225, 226, 227, 229, 230, 231, 239, 242], "xyz": [0, 56, 91, 165, 166, 167, 168, 169, 171, 175, 226], "which": [0, 2, 3, 4, 5, 6, 19, 21, 24, 25, 29, 32, 33, 36, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 62, 64, 69, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 99, 100, 102, 105, 106, 107, 108, 113, 114, 119, 121, 122, 123, 128, 130, 131, 134, 135, 136, 137, 142, 146, 148, 151, 152, 155, 156, 157, 158, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 187, 188, 200, 217, 224, 227, 235, 238, 241, 246, 248], "return": [0, 16, 33, 35, 46, 49, 52, 53, 70, 71, 72, 73, 76, 78, 82, 83, 84, 86, 89, 90, 93, 98, 100, 102, 105, 106, 107, 109, 111, 112, 113, 122, 123, 130, 131, 134, 138, 155, 157, 188, 214, 215, 218, 221, 223, 225, 230, 232, 233], "locat": [0, 3, 59, 78, 94, 97, 105, 123, 138, 147, 151, 155, 156, 163, 165, 166, 167, 168, 175, 177], "orient": [0, 24, 25, 31, 33, 34, 36, 46, 62, 66, 67, 70, 71, 78, 79, 81, 83, 84, 85, 86, 87, 89, 90, 92, 96, 99, 111, 112, 123, 131, 142, 146, 155, 157, 158, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 177, 194, 217, 218, 224, 233, 241], "segment": [0, 3, 24, 34, 35, 39, 46, 47, 51, 53, 57, 61, 62, 66, 67, 69, 70, 73, 74, 78, 84, 85, 89, 99, 100, 104, 105, 106, 108, 109, 111, 112, 113, 114, 115, 116, 124, 125, 127, 129, 130, 138, 147, 153, 157, 158, 162, 163, 168, 170, 171, 173, 175, 178, 200, 204, 210, 211, 215, 220, 221, 224, 226, 229, 230, 231, 232, 233, 234], "metric": [0, 1, 44, 51, 72, 74, 78, 80, 85, 88, 89, 96, 97, 98, 99, 102, 105, 106, 110, 111, 114, 115, 123, 125, 126, 132, 133, 155, 156, 157, 158, 162, 166, 168, 169, 170, 171, 174, 177, 178, 179, 180, 182, 195, 196, 197, 198, 207, 210, 211, 213, 215, 218, 219, 220, 221, 224, 227, 229, 230, 231, 234], "import": [0, 2, 4, 19, 22, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 160, 163, 165, 166, 167, 168, 169, 171, 172, 173, 176, 178, 213, 215, 216, 217, 218, 219, 220, 222, 224, 225, 226, 229, 230, 231, 232, 233, 237, 243, 246, 248], "resamplefeatur": [0, 111, 123, 178], "replac": [0, 5, 43, 58, 60, 94, 128, 151, 158, 163, 167, 171, 172, 175, 176, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 233, 246], "featurespe": [0, 111, 112, 113, 123, 178, 215], "name": [0, 3, 6, 9, 15, 16, 17, 19, 20, 21, 37, 64, 78, 84, 96, 116, 131, 138, 141, 143, 147, 148, 149, 150, 151, 155, 156, 158, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 203, 204, 206, 208, 209, 210, 211, 213, 215, 216, 218, 219, 222, 224, 225, 226, 227, 229, 233, 237, 243, 244], "number": [0, 1, 21, 22, 31, 35, 36, 43, 46, 47, 49, 51, 53, 55, 56, 58, 59, 64, 69, 71, 73, 78, 80, 82, 84, 86, 87, 88, 89, 90, 96, 97, 98, 99, 100, 102, 107, 111, 112, 113, 114, 116, 128, 130, 131, 144, 146, 152, 156, 157, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 185, 192, 193, 194, 199, 200, 201, 204, 206, 207, 209, 210, 211, 213, 215, 218, 219, 222, 223, 224, 227, 229, 230, 231, 233, 235, 239], "thread": [0, 160, 163, 167, 170, 171, 172, 175, 177, 207, 213, 214, 218, 219, 229, 231, 248], "standard": [0, 3, 19, 25, 44, 50, 54, 59, 62, 73, 74, 77, 80, 84, 85, 86, 91, 94, 105, 108, 119, 123, 137, 151, 158, 161, 163, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 180, 187, 188, 196, 213, 218, 222, 224, 229, 231, 235, 237, 242, 243, 244, 245], "num_thread": [0, 163, 167, 172, 175, 177, 207, 228, 229], "openmp": [0, 158, 163, 167, 172, 175, 177, 207, 213, 215, 216], "parallel": [0, 28, 30, 36, 39, 44, 45, 48, 59, 71, 79, 83, 86, 89, 137, 145, 155, 158, 163, 165, 167, 168, 171, 172, 173, 175, 177, 193, 194, 198, 207, 214, 215, 218, 222, 224, 227, 230, 231, 232, 234], "num_process": [0, 36, 39, 46, 47, 51, 71, 89, 152, 163, 167, 168, 171, 177, 193, 194, 199, 206], "multiprocess": [0, 46, 47, 158, 168, 171, 177, 193, 194, 214, 215, 218, 222, 223, 229, 234], "packag": [0, 3, 18, 19, 21, 34, 66, 73, 80, 83, 84, 88, 91, 94, 163, 165, 166, 169, 170, 171, 172, 175, 177, 213, 217, 219, 221, 222, 224, 227, 229, 233, 237, 238, 249], "logic": [0, 96, 170, 171, 175, 213, 220], "when": [0, 1, 3, 4, 5, 6, 7, 16, 19, 21, 22, 35, 40, 43, 73, 75, 80, 83, 88, 89, 94, 98, 99, 111, 112, 113, 121, 123, 130, 131, 135, 138, 141, 142, 143, 157, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 213, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 237, 241, 248], "If": [0, 1, 3, 6, 9, 15, 16, 19, 20, 21, 23, 29, 32, 34, 35, 43, 44, 46, 47, 55, 66, 71, 72, 75, 82, 84, 86, 88, 89, 90, 94, 96, 108, 111, 112, 126, 128, 130, 134, 136, 137, 142, 147, 148, 149, 156, 157, 160, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 185, 187, 188, 189, 190, 193, 194, 196, 199, 200, 204, 206, 207, 210, 211, 213, 236, 237, 238, 242, 243, 248, 249], "none": [0, 29, 34, 39, 44, 46, 47, 50, 52, 53, 55, 64, 66, 70, 71, 75, 76, 77, 78, 81, 85, 89, 91, 92, 93, 94, 96, 97, 99, 104, 106, 119, 121, 122, 125, 137, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 187, 194, 205, 207, 221, 222, 228, 229], "omp_num_thread": [0, 163, 167, 172, 175, 177, 207], "environ": [0, 2, 19, 22, 67, 145, 163, 167, 172, 175, 177, 207, 215], "variabl": [0, 19, 29, 44, 53, 78, 82, 90, 97, 104, 131, 134, 158, 161, 163, 165, 167, 170, 171, 172, 175, 177, 207, 213, 215, 218, 221, 222, 223, 226, 228, 229, 232, 233], "set": [0, 2, 3, 5, 6, 10, 14, 15, 16, 21, 22, 24, 25, 29, 31, 32, 35, 38, 39, 40, 46, 47, 49, 50, 52, 53, 55, 56, 59, 60, 62, 69, 72, 73, 80, 82, 83, 84, 86, 88, 89, 90, 91, 96, 97, 98, 99, 100, 102, 104, 107, 108, 111, 113, 114, 116, 122, 123, 125, 126, 128, 130, 131, 134, 135, 136, 137, 143, 149, 151, 152, 156, 157, 158, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 180, 185, 187, 190, 198, 207, 213, 214, 215, 217, 218, 219, 222, 226, 227, 230, 231, 232, 233, 237, 238, 243, 244, 248], "all": [0, 2, 3, 4, 5, 6, 16, 17, 21, 22, 25, 29, 32, 34, 36, 39, 40, 43, 44, 51, 53, 55, 59, 62, 64, 66, 68, 69, 71, 72, 73, 74, 75, 78, 80, 82, 83, 84, 85, 86, 88, 89, 94, 96, 97, 98, 99, 104, 108, 109, 111, 112, 121, 123, 125, 130, 131, 134, 137, 138, 141, 143, 145, 147, 150, 152, 154, 158, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 192, 205, 207, 215, 217, 220, 224, 225, 226, 229, 233, 234, 243, 248], "avail": [0, 2, 11, 40, 47, 59, 64, 68, 72, 73, 84, 85, 86, 88, 96, 100, 110, 113, 115, 116, 131, 134, 135, 138, 141, 142, 145, 146, 150, 151, 152, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 170, 171, 172, 175, 176, 177, 180, 192, 207, 213, 215, 220, 222, 231, 234, 237, 238, 241], "maximum": [0, 2, 28, 30, 40, 44, 81, 86, 89, 91, 98, 109, 113, 152, 157, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 180, 185, 210, 211, 217, 218, 222, 230, 234, 241], "num_cpu_cor": 0, "select": [0, 6, 24, 25, 29, 39, 51, 53, 62, 67, 69, 74, 82, 83, 84, 85, 86, 88, 90, 105, 108, 125, 157, 163, 165, 167, 168, 170, 171, 172, 175, 176, 177, 180, 181, 210, 213, 235, 241], "an": [0, 3, 5, 6, 13, 16, 19, 21, 22, 23, 24, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 62, 64, 66, 68, 69, 70, 71, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 102, 104, 105, 106, 107, 109, 111, 112, 113, 116, 119, 121, 122, 123, 126, 128, 131, 134, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 190, 193, 194, 195, 196, 198, 199, 200, 206, 207, 213, 214, 217, 218, 220, 221, 222, 224, 225, 226, 227, 230, 231, 232, 233, 234, 237, 238, 241, 246, 248, 249], "error": [0, 19, 21, 29, 43, 46, 47, 69, 76, 78, 80, 93, 163, 165, 166, 167, 168, 169, 170, 171, 172, 175, 177, 180, 193, 194, 199, 206, 207, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 248], "rais": [0, 163, 167, 168, 169, 170, 172, 177, 193, 194, 199, 206, 207, 213, 215, 216, 217, 218, 220, 222, 233], "same": [0, 2, 3, 6, 13, 19, 20, 29, 32, 33, 34, 43, 47, 52, 55, 59, 60, 66, 71, 74, 78, 80, 81, 82, 83, 85, 86, 89, 94, 96, 97, 99, 100, 104, 106, 108, 109, 111, 112, 113, 114, 123, 124, 125, 128, 130, 131, 135, 137, 142, 143, 147, 148, 151, 157, 160, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 214, 215, 220, 224, 226, 227, 229, 231, 233, 235, 236, 238, 248], "directli": [0, 5, 6, 15, 34, 36, 66, 69, 84, 85, 99, 100, 142, 148, 156, 163, 165, 169, 171, 172, 177, 214, 216, 241], "closest_peak_direction_gett": [0, 178], "basedirectiongett": [0, 178], "basepmfdirectiongett": [0, 178], "reconst": [0, 24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 51, 53, 62, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 119, 121, 126, 128, 131, 136, 160, 162, 168, 178, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 230, 246], "eudxdirectiongett": [0, 168, 178], "eudx_direction_gett": [0, 178], "migrat": [0, 145, 158, 230], "tavi": 0, "azur": [0, 158, 225, 226, 227, 228, 230], "depend": [0, 2, 19, 22, 34, 36, 44, 55, 62, 66, 68, 71, 73, 82, 84, 85, 95, 97, 111, 116, 131, 142, 145, 146, 151, 152, 155, 157, 158, 163, 165, 166, 167, 171, 172, 173, 175, 177, 197, 215, 218, 220, 222, 224, 225, 228, 230, 233, 234, 248], "tqdm": [0, 158, 227], "registr": [0, 1, 19, 58, 103, 104, 108, 109, 123, 125, 145, 153, 154, 158, 162, 163, 166, 169, 172, 176, 177, 179, 185, 202, 205, 207, 213, 215, 217, 218, 219, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 243, 244], "interp": [0, 163, 227], "align": [0, 24, 25, 58, 60, 62, 67, 72, 73, 74, 85, 96, 97, 98, 99, 100, 102, 104, 105, 106, 108, 121, 134, 137, 142, 143, 149, 155, 156, 162, 165, 167, 169, 171, 172, 175, 178, 180, 207, 213, 215, 216, 222, 226, 227, 228, 230, 232, 233], "imaffin": [0, 96, 97, 106, 178, 215, 224, 230], "affinemap": [0, 96, 97, 106, 178, 213, 217, 225, 227, 232], "transform": [0, 24, 29, 43, 49, 51, 58, 60, 71, 72, 78, 82, 89, 96, 97, 98, 99, 102, 104, 105, 106, 107, 108, 123, 131, 134, 135, 137, 142, 143, 144, 148, 149, 153, 158, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 185, 186, 205, 207, 213, 218, 219, 221, 222, 223, 224, 226, 227, 231, 232, 233, 237], "interpol": [0, 35, 40, 43, 50, 52, 53, 55, 60, 67, 74, 76, 79, 82, 86, 93, 99, 131, 137, 144, 158, 163, 171, 175, 177, 178, 206, 215, 220, 224, 228, 230, 232], "transform_invers": [0, 105, 106, 163, 178], "tissu": [0, 34, 35, 44, 51, 66, 68, 72, 73, 78, 80, 82, 83, 85, 86, 87, 88, 95, 104, 110, 115, 121, 131, 152, 155, 157, 158, 161, 166, 170, 171, 173, 175, 177, 178, 196, 214, 215, 223, 224, 225, 226, 227, 234, 243, 244], "tissueclassifierhmrf": [0, 84, 116, 178, 227], "check": [0, 3, 6, 16, 19, 21, 55, 60, 64, 71, 73, 78, 83, 89, 105, 112, 113, 146, 151, 152, 154, 155, 156, 157, 163, 165, 166, 167, 169, 170, 172, 175, 176, 177, 186, 187, 192, 196, 201, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 226, 227, 230, 233, 235, 248], "toler": [0, 98, 126, 163, 165, 167, 168, 169, 171, 172, 175, 213, 215, 218, 230, 233], "base": [0, 1, 6, 22, 25, 28, 29, 30, 44, 46, 47, 51, 52, 53, 68, 69, 70, 71, 72, 73, 74, 75, 79, 82, 85, 91, 92, 93, 95, 97, 99, 100, 101, 103, 108, 123, 126, 128, 131, 138, 141, 145, 146, 149, 151, 152, 153, 158, 163, 165, 166, 168, 169, 170, 172, 173, 174, 175, 178, 185, 188, 190, 199, 202, 205, 207, 213, 214, 215, 217, 218, 221, 222, 224, 225, 226, 227, 230, 232, 233, 234, 238, 240, 243, 244], "stop": [0, 6, 25, 28, 30, 32, 33, 36, 37, 38, 44, 131, 157, 163, 171, 172, 175, 177, 180, 210, 211, 218, 222, 224, 226, 234], "criterion": [0, 3, 25, 28, 30, 32, 33, 36, 37, 38, 44, 131, 156, 157, 167, 171, 175, 177, 210, 234], "everi": [0, 19, 21, 22, 29, 36, 39, 43, 56, 83, 86, 90, 99, 111, 112, 122, 130, 131, 134, 138, 141, 142, 165, 166, 171, 172, 174, 175, 176, 177, 218, 220, 235], "iter": [0, 56, 58, 62, 69, 71, 75, 84, 89, 91, 96, 97, 98, 102, 104, 105, 106, 116, 122, 138, 141, 163, 165, 167, 170, 171, 172, 173, 175, 177, 178, 179, 180, 185, 204, 213, 217, 224, 229], "previous": [0, 49, 56, 76, 80, 84, 85, 86, 96, 107, 111, 112, 113, 116, 122, 138, 141, 156, 163, 171, 172, 175], "onli": [0, 3, 6, 7, 9, 15, 17, 21, 24, 25, 29, 39, 40, 43, 46, 51, 53, 55, 60, 64, 69, 71, 73, 75, 76, 78, 79, 80, 81, 83, 84, 85, 89, 90, 93, 94, 97, 99, 104, 105, 111, 112, 113, 114, 121, 122, 123, 131, 135, 142, 146, 147, 151, 152, 155, 156, 160, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 190, 195, 196, 199, 200, 206, 207, 213, 214, 215, 218, 220, 222, 224, 225, 227, 232, 237, 238, 241, 248], "10th": [0, 163, 233], "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 15, 16, 17, 19, 21, 22, 24, 25, 29, 32, 33, 34, 35, 36, 38, 39, 40, 43, 46, 47, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 137, 138, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 248, 249, 250], "mai": [0, 3, 5, 6, 8, 12, 19, 22, 55, 60, 71, 72, 73, 74, 78, 83, 84, 85, 88, 93, 96, 97, 102, 104, 123, 135, 138, 141, 151, 152, 154, 157, 159, 163, 165, 168, 169, 170, 171, 172, 175, 176, 177, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 204, 206, 208, 210, 211, 213, 215, 216, 217, 218, 219, 224, 225, 226, 228, 229, 230, 231, 232, 233, 237, 238, 248], "result": [0, 3, 18, 24, 25, 29, 32, 34, 38, 49, 51, 60, 64, 66, 67, 71, 73, 78, 82, 83, 84, 85, 86, 88, 89, 90, 94, 96, 97, 100, 102, 104, 105, 107, 109, 111, 113, 114, 116, 126, 131, 138, 141, 143, 144, 146, 151, 152, 153, 154, 158, 163, 165, 166, 167, 168, 170, 171, 172, 175, 176, 177, 182, 183, 184, 185, 187, 188, 189, 190, 199, 200, 204, 208, 209, 218, 224, 229, 230, 245, 246], "earlier": [0, 148], "termin": [0, 19, 123, 145, 146, 150, 163, 165, 171, 248], "previou": [0, 6, 59, 73, 74, 84, 96, 100, 145, 146, 147, 157, 163, 165, 167, 168, 170, 171, 175, 177, 214, 233, 241, 248], "reconstruct": [0, 25, 33, 34, 35, 36, 38, 39, 40, 45, 48, 51, 52, 59, 62, 64, 66, 77, 79, 80, 82, 83, 88, 92, 93, 95, 119, 142, 146, 151, 152, 153, 157, 158, 162, 165, 166, 167, 170, 171, 173, 177, 193, 195, 196, 197, 214, 215, 216, 217, 220, 222, 225, 226, 227, 228, 229, 231, 233, 234, 235, 241, 243, 244, 246], "csdeconv": [0, 24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 66, 69, 71, 89, 90, 178, 214, 216, 221, 226], "auto_respons": [0, 178, 216], "auto_response_ssst": [0, 24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 66, 69, 71, 89, 90, 178], "response_from_mask": [0, 84, 178], "response_from_mask_ssst": [0, 71, 178], "sim": [0, 24, 71, 77, 85, 89, 91, 119, 121, 122, 162, 165, 166, 171, 178, 215, 218, 220, 224], "multi_shell_fiber_respons": [0, 84, 178, 233], "move": [0, 14, 24, 25, 43, 56, 82, 91, 94, 96, 97, 98, 99, 100, 104, 105, 106, 108, 122, 131, 134, 137, 146, 148, 149, 155, 156, 158, 163, 165, 167, 169, 171, 172, 173, 175, 176, 177, 179, 180, 181, 185, 207, 213, 215, 216, 218, 219, 222, 224, 226, 227, 229, 230, 233], "mcsd": [0, 84, 178, 225, 230, 233], "In": [0, 3, 10, 14, 19, 20, 21, 22, 24, 25, 29, 33, 34, 35, 36, 39, 43, 46, 47, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 104, 105, 111, 119, 121, 122, 123, 128, 130, 131, 134, 135, 137, 138, 141, 142, 143, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 163, 165, 167, 169, 170, 171, 172, 175, 176, 177, 198, 213, 227, 237, 238, 241, 248, 249], "prior": [0, 52, 53, 126, 151, 165, 172, 223], "user": [0, 6, 13, 16, 17, 19, 21, 22, 40, 64, 72, 73, 75, 79, 80, 82, 83, 84, 87, 88, 89, 93, 96, 98, 100, 104, 108, 134, 146, 147, 151, 152, 156, 158, 163, 165, 169, 170, 172, 173, 175, 176, 177, 213, 217, 218, 224, 230, 239], "scipi": [0, 3, 19, 62, 67, 69, 73, 74, 80, 82, 131, 142, 158, 163, 165, 171, 172, 175, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 230, 233, 245, 248], "memori": [0, 29, 36, 39, 70, 75, 93, 109, 142, 158, 163, 165, 168, 169, 170, 171, 173, 177, 204, 213, 214, 216, 218, 222, 224, 226, 228, 230, 235], "overlap": [0, 86, 99, 105, 106, 158, 172, 226], "bug": [0, 4, 5, 6, 16, 145, 158, 163, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 230, 232, 233], "occur": [0, 80, 88, 171, 175], "multi_median": [0, 158, 178, 226], "caus": [0, 43, 73, 143, 163, 165, 167, 171, 172, 175, 177, 213, 221, 222], "overli": 0, "smooth": [0, 24, 25, 50, 52, 67, 73, 74, 83, 84, 86, 89, 96, 102, 116, 163, 165, 167, 171, 172, 175, 177, 179, 180, 206, 220], "output": [0, 3, 6, 7, 25, 34, 40, 49, 50, 52, 53, 54, 55, 66, 73, 91, 102, 107, 108, 113, 125, 134, 138, 141, 147, 148, 151, 152, 154, 155, 156, 157, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 212, 213, 214, 215, 218, 221, 222, 224, 226, 227, 228, 230], "fix": [0, 1, 4, 5, 6, 16, 21, 25, 35, 40, 82, 99, 141, 149, 158, 163, 165, 170, 171, 172, 173, 175, 176, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "regardless": [0, 171, 175], "": [0, 1, 2, 3, 5, 6, 12, 13, 15, 16, 19, 21, 22, 23, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 124, 125, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 159, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 218, 221, 223, 224, 227, 230, 232, 233, 235, 237, 238, 239, 241, 243, 244], "instal": [0, 2, 3, 6, 8, 14, 18, 21, 22, 83, 141, 145, 213, 215, 216, 218, 221, 222, 223, 224, 225, 226, 233, 249], "via": [0, 6, 19, 21, 24, 25, 29, 44, 57, 61, 85, 90, 92, 126, 138, 141, 145, 163, 165, 166, 170, 171, 172, 175, 177, 180, 213, 217, 234, 237, 238, 248], "median_otsu": [0, 24, 44, 46, 47, 51, 53, 57, 61, 62, 67, 70, 73, 74, 78, 84, 85, 89, 104, 105, 106, 110, 115, 177, 178, 204, 224, 226, 234], "threshold": [0, 4, 25, 34, 35, 44, 55, 57, 61, 62, 66, 71, 80, 82, 83, 84, 85, 89, 108, 111, 112, 113, 114, 123, 125, 126, 147, 151, 155, 157, 163, 165, 167, 168, 171, 175, 176, 177, 178, 180, 184, 186, 187, 190, 193, 194, 195, 196, 197, 198, 200, 201, 205, 207, 208, 210, 211, 215, 218, 221, 222, 223, 224, 226, 233, 234], "should": [0, 2, 3, 4, 5, 6, 9, 12, 15, 19, 21, 22, 29, 36, 40, 44, 53, 55, 58, 67, 70, 71, 72, 73, 78, 82, 83, 84, 85, 86, 88, 89, 102, 111, 128, 130, 131, 138, 141, 142, 146, 154, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 181, 194, 198, 200, 213, 215, 216, 218, 223, 224, 225, 227, 229, 230, 231, 232, 246, 248], "process": [0, 3, 24, 25, 29, 46, 47, 50, 54, 55, 64, 71, 72, 73, 74, 80, 82, 85, 86, 96, 98, 104, 105, 111, 113, 125, 130, 134, 138, 141, 145, 147, 151, 152, 154, 155, 156, 157, 158, 163, 165, 166, 167, 169, 170, 171, 172, 173, 175, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 204, 206, 208, 215, 224, 226, 230, 241, 248], "pipelin": [0, 39, 55, 96, 97, 104, 134, 137, 158, 163, 170, 171, 226, 227, 230], "after": [0, 6, 9, 19, 24, 25, 35, 51, 54, 55, 71, 82, 86, 98, 99, 100, 105, 108, 114, 116, 124, 130, 134, 137, 141, 144, 148, 149, 151, 152, 163, 165, 167, 169, 170, 171, 172, 173, 175, 176, 177, 180, 190, 205, 211, 215, 220, 221, 222, 226, 229], "make": [0, 2, 3, 4, 5, 10, 13, 14, 15, 17, 18, 19, 22, 46, 49, 55, 59, 70, 76, 78, 82, 83, 84, 86, 97, 99, 102, 105, 107, 108, 111, 112, 113, 123, 126, 128, 131, 134, 135, 138, 142, 147, 149, 163, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 227, 230, 231, 233, 236, 238, 241, 248, 250], "sure": [0, 2, 3, 5, 6, 19, 21, 70, 78, 97, 105, 111, 112, 113, 123, 134, 147, 148, 149, 163, 172, 174, 176, 248], "still": [0, 6, 19, 21, 34, 38, 55, 62, 66, 75, 78, 83, 86, 88, 102, 131, 155, 165, 169, 171, 172, 175, 214, 215, 222, 227, 241, 248], "oper": [0, 3, 24, 25, 43, 46, 62, 96, 134, 141, 160, 163, 169, 171, 175, 177, 213, 233, 235, 245, 248], "expect": [0, 29, 40, 73, 80, 94, 116, 142, 152, 156, 163, 166, 167, 169, 170, 171, 172, 175, 177, 178, 180, 215, 237, 238], "try": [0, 3, 17, 19, 21, 73, 78, 84, 88, 91, 97, 105, 113, 114, 126, 146, 151, 152, 154, 155, 156, 157, 158, 163, 167, 171, 175, 216, 220, 221, 222, 224, 237, 238, 246, 248, 249, 250], "readjust": 0, "median_radiu": [0, 46, 47, 49, 51, 53, 70, 73, 74, 78, 84, 85, 89, 105, 106, 107, 146, 172, 177, 204], "peak_direction_gett": [0, 224], "dipy_track_loc": [0, 224], "dipy_track": [0, 146, 157, 212, 226], "other": [0, 3, 4, 10, 13, 15, 18, 19, 20, 22, 25, 29, 33, 34, 39, 46, 50, 53, 55, 60, 62, 64, 66, 69, 71, 73, 74, 78, 81, 82, 83, 84, 85, 86, 89, 90, 91, 94, 96, 97, 98, 99, 104, 105, 111, 116, 121, 125, 126, 131, 134, 138, 141, 142, 147, 151, 152, 154, 155, 157, 163, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 190, 196, 216, 220, 221, 224, 227, 229, 233, 237, 238, 248], "unique_bv": [0, 178], "unique_bvals_magnitud": [0, 178], "visual": [0, 2, 6, 19, 22, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 51, 53, 55, 56, 64, 66, 67, 70, 71, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 98, 100, 102, 104, 105, 106, 108, 109, 111, 112, 113, 114, 119, 121, 122, 124, 125, 126, 128, 130, 131, 133, 137, 142, 144, 145, 146, 147, 148, 149, 158, 162, 163, 167, 168, 171, 172, 175, 177, 178, 200, 215, 216, 217, 218, 220, 221, 224, 227, 229, 230, 233, 234, 235, 248], "window": [0, 4, 11, 21, 22, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 53, 56, 66, 67, 70, 71, 77, 78, 79, 83, 84, 89, 90, 91, 92, 94, 99, 100, 104, 105, 108, 109, 111, 112, 113, 114, 119, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 142, 146, 147, 158, 163, 171, 175, 176, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 230, 232, 235], "scene": [0, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 56, 66, 67, 70, 71, 77, 78, 79, 83, 84, 89, 90, 91, 92, 94, 99, 108, 109, 111, 112, 113, 114, 119, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 175, 176, 177, 200, 226], "instead": [0, 15, 16, 19, 22, 38, 52, 55, 73, 89, 96, 108, 147, 163, 165, 167, 169, 170, 171, 172, 174, 175, 176, 214, 215, 216, 217, 219, 222, 223, 225, 226, 229, 230, 231, 232, 248], "render": [0, 3, 44, 126, 128, 132, 133, 134, 176, 213, 215, 216, 217, 218, 219, 222, 226, 229, 234], "clear": [0, 3, 55, 56, 71, 78, 83, 90, 91, 94, 111, 112, 114, 135, 137, 163, 167, 171, 172, 178, 222, 226], "rm_all": 0, "img": [0, 51, 60, 64, 70, 75, 76, 79, 80, 81, 93, 102, 163, 166, 169, 172, 224], "get_data": [0, 218, 224, 225], "sinc": [0, 6, 16, 25, 29, 50, 51, 53, 54, 55, 62, 73, 78, 82, 83, 88, 89, 96, 102, 104, 111, 112, 114, 121, 123, 126, 152, 163, 165, 167, 169, 170, 171, 172, 173, 177, 241], "nibabel": [0, 3, 19, 22, 43, 60, 64, 70, 72, 73, 75, 76, 78, 79, 80, 81, 93, 142, 158, 163, 166, 169, 216, 218, 222, 225, 227, 231, 233, 235, 245, 248], "np": [0, 3, 24, 25, 29, 31, 35, 40, 43, 49, 50, 51, 52, 53, 54, 55, 56, 59, 62, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 96, 97, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 128, 130, 131, 134, 135, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 190, 213, 215, 220, 227, 229, 231], "asanyarrai": 0, "dataobj": [0, 51, 79, 80], "tractogram": [0, 38, 43, 104, 108, 109, 123, 148, 157, 158, 160, 163, 166, 169, 172, 176, 177, 200, 205, 207, 210, 211, 224, 229, 230, 231, 243, 244], "streamlin": [0, 1, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 66, 98, 99, 100, 101, 103, 108, 110, 111, 112, 113, 114, 115, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 145, 147, 149, 153, 157, 158, 160, 162, 163, 166, 168, 171, 172, 174, 177, 178, 185, 200, 202, 205, 207, 210, 211, 213, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 243, 244], "statefultractogram": [0, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 66, 100, 104, 108, 131, 158, 176, 178, 226, 230, 233], "creat": [0, 2, 3, 5, 10, 24, 25, 29, 31, 32, 34, 35, 39, 40, 43, 44, 51, 56, 64, 66, 71, 73, 74, 77, 78, 80, 82, 84, 88, 91, 93, 96, 97, 98, 106, 111, 112, 113, 119, 122, 123, 124, 125, 130, 131, 134, 135, 136, 139, 140, 143, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 203, 213, 217, 218, 220, 221, 222, 223, 224, 226, 229, 233, 234, 248, 249], "anoth": [0, 2, 5, 21, 25, 29, 43, 73, 82, 84, 88, 109, 141, 163, 165, 169, 171, 172, 173, 221, 222, 225, 232, 237], "one": [0, 3, 4, 6, 9, 16, 19, 21, 25, 29, 34, 43, 44, 50, 52, 53, 55, 56, 58, 59, 62, 64, 66, 67, 69, 71, 73, 74, 75, 76, 78, 80, 81, 82, 84, 85, 86, 89, 90, 92, 93, 94, 96, 99, 104, 106, 109, 111, 113, 121, 122, 123, 130, 131, 136, 138, 142, 143, 144, 152, 156, 157, 158, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 190, 195, 196, 200, 213, 215, 217, 219, 222, 224, 225, 227, 229, 232, 237, 238, 241, 248], "workflow": [0, 10, 12, 14, 16, 21, 140, 145, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 162, 178, 182, 183, 184, 187, 188, 189, 190, 195, 196, 197, 198, 199, 203, 204, 210, 211, 214, 215, 216, 217, 218, 219, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 243], "dipy_nlmean": [0, 141], "dipy_denoise_nlmean": [0, 151, 212], "get_fdata": [0, 58, 79, 80, 88, 104, 225], "modif": [0, 111, 163, 165, 171, 172, 177, 215, 216], "appli": [0, 24, 25, 44, 47, 51, 52, 55, 68, 70, 71, 73, 74, 75, 76, 81, 85, 89, 94, 95, 96, 99, 101, 103, 105, 106, 108, 114, 130, 131, 137, 142, 151, 152, 153, 154, 158, 163, 165, 167, 170, 171, 172, 173, 175, 176, 177, 180, 181, 182, 183, 184, 189, 190, 199, 200, 204, 206, 207, 210, 218, 219, 222, 225, 226, 230, 233, 234, 235, 238], "codebas": [0, 145, 158], "datatyp": [0, 169, 222], "float64": [0, 24, 50, 54, 163, 165, 171, 175, 213, 218, 224, 231], "some": [0, 5, 9, 10, 13, 15, 16, 19, 20, 21, 29, 34, 43, 44, 56, 58, 59, 64, 66, 68, 69, 72, 73, 80, 82, 83, 84, 85, 86, 88, 89, 91, 94, 97, 102, 104, 106, 108, 111, 112, 122, 123, 126, 128, 130, 131, 134, 135, 136, 138, 141, 142, 143, 145, 146, 147, 156, 161, 163, 165, 166, 167, 171, 172, 175, 177, 195, 196, 204, 213, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 232, 233, 235, 238, 245, 248], "introduc": [0, 3, 22, 38, 51, 71, 82, 84, 88, 89, 99, 100, 155, 167, 171, 214, 222, 233], "break": [0, 4, 99, 137, 165, 166, 167, 213, 218, 220, 222, 224, 225, 230, 232], "backward": [0, 4, 24, 163, 167, 168, 171, 222, 230, 233], "compat": [0, 4, 22, 72, 145, 158, 167, 168, 169, 170, 171, 172, 214, 218, 219, 220, 221, 222, 223, 224, 227, 230, 233], "python": [0, 1, 2, 3, 21, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 158, 163, 165, 167, 169, 170, 171, 172, 176, 177, 178, 194, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 229, 230, 231, 232, 233, 249], "harmon": [0, 6, 33, 36, 44, 46, 68, 70, 79, 92, 95, 155, 158, 160, 162, 163, 166, 167, 168, 171, 176, 177, 193, 194, 213, 218, 220, 222, 234, 240], "mrtrix": [0, 166, 168, 171, 172, 224, 226, 227, 241], "fibernav": 0, "tournier07": [0, 167, 168, 170, 171, 241], "descoteaux07": [0, 91, 167, 168, 170, 171, 241], "cycl": [0, 163, 165, 235], "start": [0, 6, 12, 18, 19, 21, 22, 23, 32, 36, 37, 38, 39, 46, 47, 54, 56, 58, 59, 60, 65, 71, 80, 82, 86, 87, 89, 94, 96, 98, 99, 100, 112, 113, 123, 125, 128, 130, 131, 134, 136, 137, 143, 145, 155, 157, 163, 165, 168, 170, 171, 172, 175, 176, 177, 185, 211, 222, 224, 234, 235, 239, 248, 249], "default_spher": [0, 24, 25, 33, 34, 35, 36, 40, 47, 66, 70, 71, 94, 126, 128, 131, 136, 171, 173, 176, 178], "symmetric724": [0, 84, 91, 166, 167, 224], "repulsion724": [0, 37, 46, 67, 75, 77, 78, 79, 81, 83, 89, 92, 119, 122, 166, 167, 171, 177, 224], "more": [0, 3, 4, 9, 16, 19, 20, 22, 23, 25, 29, 38, 39, 40, 43, 44, 50, 53, 54, 67, 69, 73, 74, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 96, 99, 100, 108, 111, 112, 113, 121, 125, 126, 128, 130, 131, 134, 136, 137, 142, 144, 145, 146, 147, 148, 149, 154, 158, 159, 160, 161, 162, 163, 165, 167, 168, 170, 171, 172, 173, 175, 176, 177, 187, 188, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 231, 235, 242, 245, 246, 249], "evenli": [0, 39, 44, 56, 85, 91, 161, 165, 171, 175], "mask": [0, 6, 24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 53, 54, 59, 62, 66, 67, 70, 71, 72, 73, 74, 78, 80, 81, 84, 85, 86, 87, 88, 89, 101, 103, 104, 105, 106, 107, 126, 128, 131, 136, 146, 155, 157, 158, 163, 165, 166, 167, 168, 170, 171, 175, 176, 178, 191, 193, 194, 195, 196, 197, 203, 204, 208, 210, 211, 213, 214, 215, 218, 219, 220, 221, 222, 224, 226, 228, 230, 232, 233, 234, 243, 244], "follow": [0, 3, 4, 5, 6, 14, 16, 17, 18, 19, 20, 21, 22, 23, 29, 33, 34, 36, 40, 43, 51, 52, 53, 55, 56, 58, 60, 62, 64, 66, 72, 73, 74, 75, 78, 82, 84, 85, 86, 87, 88, 90, 94, 96, 99, 109, 111, 122, 134, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 155, 156, 157, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 190, 195, 196, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 238, 243, 245, 248, 250], "wai": [0, 3, 5, 6, 12, 13, 15, 16, 19, 20, 21, 31, 33, 34, 36, 50, 51, 56, 58, 64, 66, 69, 71, 72, 73, 74, 75, 78, 80, 83, 84, 85, 86, 89, 113, 122, 123, 131, 134, 135, 137, 138, 142, 145, 146, 154, 155, 157, 163, 165, 168, 171, 172, 173, 175, 177, 198, 223, 238, 248], "you": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 32, 34, 39, 43, 44, 46, 47, 51, 53, 54, 56, 58, 60, 64, 66, 69, 70, 71, 72, 73, 75, 78, 80, 81, 82, 83, 84, 85, 86, 90, 91, 94, 96, 99, 100, 104, 108, 111, 112, 113, 123, 126, 128, 130, 134, 135, 136, 137, 138, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 160, 163, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 200, 202, 205, 206, 214, 218, 220, 231, 235, 236, 243, 246, 248, 249, 250], "4d": [0, 52, 54, 55, 64, 71, 77, 78, 82, 89, 119, 145, 151, 155, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 177, 199, 204, 206, 209, 218, 224, 226], "volum": [0, 1, 29, 35, 38, 40, 43, 44, 49, 52, 53, 55, 57, 60, 61, 64, 71, 74, 75, 78, 80, 82, 83, 84, 85, 87, 88, 89, 90, 94, 96, 97, 104, 105, 106, 107, 116, 123, 128, 132, 133, 142, 146, 151, 152, 153, 155, 157, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 204, 206, 208, 209, 210, 211, 213, 215, 217, 221, 224, 226, 227, 230, 233, 234, 239, 243, 244], "vol_idx": [0, 46, 47, 51, 53, 62, 70, 73, 74, 78, 84, 85, 89, 104, 146, 155, 172, 177, 204, 209, 224], "order": [0, 3, 21, 24, 25, 29, 34, 43, 46, 47, 50, 54, 55, 66, 70, 72, 73, 76, 78, 79, 82, 83, 86, 87, 88, 91, 92, 96, 97, 99, 104, 113, 131, 137, 150, 151, 155, 156, 157, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 193, 194, 198, 206, 213, 216, 218, 220, 224, 226, 230, 231, 233, 241, 242], "also": [0, 1, 3, 5, 6, 17, 19, 34, 36, 38, 39, 40, 43, 49, 50, 51, 53, 54, 55, 56, 58, 59, 62, 64, 66, 69, 70, 71, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 96, 97, 98, 100, 104, 105, 106, 107, 111, 113, 114, 116, 121, 122, 125, 128, 130, 131, 134, 135, 137, 138, 141, 142, 143, 144, 147, 151, 152, 154, 155, 156, 157, 163, 170, 172, 176, 177, 200, 204, 213, 233, 235, 241, 242, 246, 250], "load": [0, 31, 32, 33, 34, 35, 36, 38, 40, 43, 50, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 83, 85, 87, 88, 89, 92, 93, 94, 98, 99, 100, 105, 108, 111, 112, 113, 114, 131, 134, 137, 142, 162, 165, 166, 169, 170, 177, 200, 213, 218, 220, 224, 231, 233], "save": [0, 2, 5, 6, 34, 39, 43, 49, 50, 52, 53, 55, 58, 60, 62, 64, 66, 67, 70, 71, 72, 75, 76, 78, 79, 81, 84, 89, 91, 93, 94, 99, 100, 104, 107, 108, 112, 114, 121, 122, 125, 128, 131, 134, 137, 138, 141, 142, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 162, 163, 165, 166, 168, 169, 170, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 204, 206, 208, 210, 211, 215, 218, 219, 222, 224, 225, 226, 227, 229, 231, 233, 246], "load_tractogram": [0, 43, 104, 111, 112, 113, 114, 160, 172, 178, 225], "save_tractogram": [0, 43, 100, 104, 160, 178], "trk": [0, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 66, 100, 104, 108, 123, 131, 142, 146, 147, 148, 149, 160, 166, 169, 177, 185, 200, 221, 224, 225, 227, 243, 244], "tck": [0, 43, 169, 177, 200, 218, 224, 225, 226, 243, 244], "vtk": [0, 19, 43, 158, 178, 213, 215, 216, 217, 218, 222, 223, 226, 230, 232], "fib": [0, 43, 160, 169, 243, 244], "dpy": [0, 43, 142, 162, 177, 178, 200, 215, 235, 243, 244], "refer": [0, 1, 6, 12, 17, 18, 19, 21, 43, 44, 102, 136, 145, 153, 158, 161, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 233, 239, 240, 242], "nifti": [0, 43, 58, 60, 64, 78, 128, 142, 147, 155, 156, 163, 166, 169, 171, 174, 175, 177, 178, 181, 193, 194, 196, 198, 217, 219, 224, 235, 246], "file": [0, 3, 5, 6, 16, 19, 21, 22, 27, 29, 30, 34, 39, 42, 48, 50, 55, 58, 60, 61, 64, 65, 66, 72, 78, 82, 93, 95, 96, 97, 103, 104, 108, 115, 117, 120, 123, 129, 131, 133, 138, 140, 141, 142, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 160, 163, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 243, 244, 245, 246, 248], "need": [0, 2, 3, 5, 6, 8, 9, 15, 18, 19, 22, 29, 32, 34, 36, 43, 44, 46, 49, 50, 53, 54, 55, 56, 62, 66, 69, 70, 72, 73, 75, 78, 82, 83, 84, 85, 86, 90, 91, 94, 96, 97, 98, 104, 105, 106, 107, 109, 111, 112, 113, 121, 122, 123, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 161, 163, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 190, 200, 206, 210, 211, 213, 214, 215, 216, 217, 218, 220, 222, 224, 225, 226, 231, 233, 236, 238, 246, 248], "guarante": [0, 43, 83, 111, 171, 175], "proper": [0, 89, 171, 177, 213], "spatial": [0, 24, 29, 38, 43, 53, 78, 80, 82, 89, 92, 104, 111, 131, 145, 155, 158, 165, 167, 169, 171, 172, 175, 177, 220, 224, 231, 239], "handl": [0, 6, 43, 51, 64, 134, 145, 158, 163, 165, 166, 169, 170, 176, 177, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 231, 245], "modifi": [0, 6, 43, 96, 97, 98, 114, 128, 131, 163, 165, 166, 171, 172, 175, 177, 185, 221, 226, 227, 241], "enforc": [0, 5, 22, 73, 83, 88, 130, 165, 166, 169, 171, 229], "uniform": [0, 50, 59, 163, 165, 171], "docstr": [0, 3, 22, 138, 141, 177, 213, 214, 215, 216, 219, 220, 222, 223, 225, 227, 228, 230, 231, 233, 242], "deform_streamlin": [0, 178, 230, 231], "select_by_roi": [0, 178], "orient_by_roi": [0, 178, 215, 218], "_extract_v": 0, "values_from_volum": [0, 178, 215], "util": [0, 22, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 66, 78, 82, 94, 108, 126, 128, 130, 131, 136, 146, 155, 158, 163, 165, 178, 214, 215, 216, 218, 220, 222, 224, 225, 226, 230, 232, 233], "density_map": [0, 43, 131, 178, 226], "connectivity_matrix": [0, 131, 178, 218, 222, 225, 233], "seeds_from_mask": [0, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 126, 128, 131, 136, 178], "random_seeds_from_mask": [0, 178], "target": [0, 40, 55, 98, 99, 104, 108, 131, 148, 163, 165, 170, 172, 174, 177, 178, 185, 215, 218, 222], "target_line_bas": [0, 178, 226], "near_roi": [0, 25, 178, 230], "length": [0, 44, 82, 83, 99, 100, 111, 112, 113, 123, 126, 127, 129, 134, 135, 142, 144, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 200, 205, 207, 213, 215, 218, 222, 223, 230, 233, 234, 242], "path_length": [0, 128, 178], "affine_for_trackvi": 0, "move_streamlin": 0, "flexi_tvis_affin": 0, "get_flexi_tvis_affin": [0, 231], "delet": [0, 2, 10, 19, 21, 81, 163, 165, 166, 169, 213, 217, 221, 222, 224, 233], "life": [0, 22, 28, 30, 44, 72, 158, 165, 178, 214, 222, 223, 224, 225, 226, 227, 234], "voxel2streamlin": [0, 178], "setup": [0, 2, 22, 163, 175, 178, 214, 215, 222, 232, 233], "fit": [0, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 47, 51, 53, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 119, 155, 158, 161, 163, 165, 167, 168, 170, 171, 172, 175, 176, 177, 178, 193, 194, 196, 197, 198, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 226, 230, 231, 232, 233, 234, 246, 250], "fibermodel": [0, 29, 178], "afq_profil": [0, 123, 178, 229], "stat": [0, 5, 69, 90, 123, 124, 158, 162, 163, 165, 171, 178, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "analysi": [0, 1, 3, 20, 34, 35, 39, 40, 51, 53, 58, 62, 64, 66, 72, 73, 76, 79, 80, 83, 84, 85, 92, 93, 100, 123, 124, 128, 145, 146, 147, 148, 149, 151, 154, 155, 157, 158, 163, 165, 166, 167, 171, 172, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 219, 224, 226, 231, 233, 237], "similarli": [0, 82, 86, 88, 163, 166, 177, 180], "simul": [0, 56, 77, 83, 85, 91, 94, 119, 120, 130, 162, 165, 166, 167, 171, 173, 213, 220, 227, 234], "singletensor": [0, 224], "single_tensor": [0, 121, 178, 215, 224], "multitensor": [0, 44, 85, 91, 118, 120, 173, 234], "multi_tensor": [0, 77, 85, 119, 122, 171, 178, 215], "sticksandbal": 0, "sticks_and_bal": [0, 171, 178], "voxel_s": [0, 35, 43, 60, 75, 81, 165, 168, 169, 175, 178, 224], "stremline_map": 0, "_util": [0, 178], "_mapping_to_voxel": 0, "peaksandmetricsdirectiongett": [0, 217, 224], "localtrack": [0, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 126, 128, 131, 136, 178, 215, 224, 230], "particlefilteringtrack": [0, 35, 178], "local": [0, 1, 2, 6, 14, 17, 19, 21, 25, 33, 34, 35, 37, 44, 50, 51, 53, 55, 57, 61, 66, 68, 71, 73, 78, 80, 84, 85, 88, 89, 95, 96, 105, 108, 123, 128, 148, 153, 155, 158, 163, 166, 168, 170, 171, 172, 173, 175, 177, 178, 187, 188, 189, 190, 199, 202, 205, 207, 210, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 233, 234, 239, 243, 244], "local_track": [0, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 126, 128, 131, 136, 178], "thei": [0, 3, 6, 17, 35, 43, 52, 60, 62, 69, 72, 73, 78, 86, 89, 92, 96, 98, 99, 100, 111, 112, 113, 114, 126, 131, 134, 138, 141, 144, 146, 147, 151, 155, 163, 165, 166, 168, 171, 172, 175, 176, 177, 224, 237, 238], "tissue_classifi": 0, "stopping_criterion": [0, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 126, 128, 131, 136, 168, 177, 178, 211], "tissueclassifi": 0, "stoppingcriterion": [0, 178], "binarytissueclassifi": [0, 218, 219], "binarystoppingcriterion": [0, 40, 131, 178], "thresholdtissueclassifi": 0, "thresholdstoppingcriterion": [0, 25, 32, 33, 34, 36, 37, 38, 39, 40, 66, 126, 128, 136, 178], "constrainedtissueclassifi": 0, "anatomicalstoppingcriterion": [0, 178], "acttissueclassifi": 0, "actstoppingcriterion": [0, 40, 178], "cmctissueclassifi": 0, "cmcstoppingcriterion": [0, 35, 178], "tissueclass": 0, "streamlinestatu": [0, 178], "eudx": [0, 33, 34, 66, 131, 146, 153, 177, 210, 221, 222, 224, 227], "tractographi": [0, 1, 25, 28, 29, 30, 32, 33, 34, 43, 44, 60, 66, 73, 75, 83, 85, 98, 99, 100, 104, 109, 110, 113, 115, 121, 123, 126, 128, 142, 145, 146, 148, 155, 157, 158, 162, 165, 168, 169, 171, 172, 173, 175, 177, 211, 215, 217, 222, 223, 229, 231, 232, 234, 243, 244, 249], "perform": [0, 2, 3, 24, 25, 34, 43, 50, 51, 53, 55, 58, 62, 66, 67, 69, 72, 73, 77, 82, 84, 85, 88, 96, 98, 100, 102, 104, 105, 106, 108, 111, 113, 114, 116, 119, 121, 146, 151, 152, 154, 155, 156, 157, 158, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 180, 195, 196, 197, 226, 230, 233, 237], "trackvi": [0, 34, 43, 66, 131, 142, 166, 169, 178, 217, 219, 224, 227, 235], "extern": [0, 71, 84, 176, 177, 215, 224, 235], "quickbund": [0, 224], "peak": [0, 28, 29, 30, 33, 34, 36, 39, 44, 46, 66, 70, 71, 81, 84, 89, 90, 131, 146, 153, 155, 158, 162, 171, 173, 174, 175, 177, 178, 193, 194, 210, 211, 215, 216, 217, 220, 221, 224, 225, 234, 237], "welcom": [0, 3, 20], "viz": [0, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 56, 66, 67, 70, 71, 73, 77, 78, 79, 83, 84, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 108, 109, 111, 112, 113, 114, 119, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 142, 162, 175, 178, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 226, 230, 232], "integr": [0, 1, 3, 10, 34, 62, 66, 74, 76, 78, 93, 145, 157, 158, 167, 170, 171, 217, 218, 223, 232, 233, 237], "variou": [0, 28, 29, 30, 35, 44, 82, 165, 166, 170, 171, 175, 215, 233, 234, 237, 238], "analys": [0, 51, 167], "adjust": [0, 52, 55, 67, 73, 84, 85, 88, 134, 137, 163, 165, 167, 171, 172, 177, 187, 215, 219, 222], "slr": [0, 98, 99, 100, 108, 148, 156, 158, 163, 172, 177, 207, 214, 218, 219, 222, 225, 230], "recobundl": [0, 44, 110, 115, 153, 158, 178, 216, 217, 218, 219, 225, 226, 227, 229, 233, 234], "algorithm": [0, 25, 29, 34, 35, 44, 51, 52, 55, 57, 59, 60, 61, 66, 68, 73, 77, 78, 79, 80, 82, 85, 89, 90, 95, 99, 100, 104, 105, 106, 111, 113, 114, 116, 119, 130, 145, 146, 151, 156, 158, 159, 162, 163, 165, 167, 168, 170, 171, 172, 175, 176, 177, 180, 187, 189, 190, 224, 225, 231, 232, 234, 235], "exclud": [0, 15, 40, 62, 74, 80, 94, 126, 131, 163, 168, 170, 171, 175, 227], "insid": [0, 3, 31, 64, 83, 113, 163, 165, 167, 171, 172, 175, 177, 210, 211, 220], "note": [0, 3, 5, 6, 15, 16, 17, 21, 22, 24, 29, 55, 69, 71, 73, 74, 78, 83, 84, 85, 86, 88, 97, 100, 102, 106, 111, 112, 128, 138, 141, 145, 147, 149, 151, 152, 155, 170, 178, 185, 199, 235, 237, 238, 239], "nose": [0, 143, 158, 218, 230], "pytest": [0, 19, 20, 21, 22, 158, 218, 219, 227, 230], "load_tck": [0, 43, 178], "save_tck": [0, 178], "highli": [0, 19, 58, 62, 73, 85, 111, 151, 154, 177, 185], "manag": [0, 2, 19, 22, 130, 137, 158, 162, 169, 176, 217, 222, 230, 233], "tabl": [0, 19, 22, 24, 25, 29, 44, 52, 56, 67, 72, 83, 84, 86, 87, 88, 94, 96, 137, 158, 161, 162, 165, 166, 167, 169, 171, 173, 175, 176, 177, 198, 216, 218, 220, 222, 226, 227, 231, 233, 243], "b0_thresold": 0, "50": [0, 25, 29, 32, 33, 35, 36, 37, 40, 44, 46, 47, 51, 52, 53, 55, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 98, 100, 102, 105, 119, 121, 122, 128, 130, 136, 146, 158, 159, 161, 163, 165, 167, 171, 172, 173, 175, 177, 220], "impact": [0, 32, 73, 85, 111, 121, 155, 167, 171, 172, 173, 177, 189], "your": [0, 2, 3, 4, 5, 10, 13, 14, 15, 16, 19, 20, 21, 23, 34, 44, 46, 47, 54, 56, 58, 60, 64, 66, 70, 72, 76, 78, 82, 93, 94, 111, 112, 123, 138, 141, 142, 145, 147, 148, 151, 152, 154, 155, 156, 157, 158, 165, 166, 167, 171, 172, 215, 235, 236, 246, 248, 249], "want": [0, 5, 8, 10, 16, 17, 19, 20, 21, 23, 44, 56, 60, 62, 72, 75, 84, 94, 96, 97, 98, 99, 104, 105, 106, 111, 112, 113, 123, 125, 126, 128, 130, 131, 134, 135, 137, 138, 142, 143, 145, 147, 151, 152, 154, 163, 165, 169, 170, 171, 172, 175, 176, 177, 202, 205, 206, 213, 236, 238, 243, 248, 249], "assur": [0, 34, 62, 66, 125, 169], "code": [0, 2, 5, 6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 145, 158, 165, 169, 171, 172, 177, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 226, 227, 229, 230, 231, 233, 235, 245, 249], "run": [0, 4, 5, 18, 19, 21, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 162, 163, 165, 167, 170, 171, 172, 175, 178, 211, 213, 214, 215, 218, 222, 224, 229, 231, 235, 237, 242, 243], "exactli": [0, 3, 32, 34, 66, 100, 143, 163, 165, 169, 170, 171, 172, 222], "manner": [0, 71, 156, 166, 175, 177], "befor": [0, 2, 3, 6, 21, 29, 34, 35, 52, 54, 58, 62, 66, 70, 72, 73, 74, 85, 89, 96, 98, 99, 100, 102, 105, 108, 109, 113, 116, 124, 144, 148, 149, 151, 152, 154, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 211, 217, 219, 220, 221, 222, 224, 230, 231, 248], "pleas": [0, 1, 3, 4, 9, 16, 20, 22, 23, 46, 47, 51, 52, 54, 55, 59, 80, 82, 87, 88, 126, 128, 134, 136, 146, 147, 148, 149, 160, 162, 163, 165, 166, 167, 169, 171, 175, 177, 192, 219, 222, 248], "initi": [0, 5, 8, 24, 29, 31, 34, 38, 39, 47, 66, 69, 74, 80, 82, 83, 86, 89, 90, 91, 94, 96, 97, 99, 109, 114, 130, 134, 136, 137, 147, 163, 165, 167, 168, 170, 171, 172, 173, 175, 176, 177, 213, 220, 223, 226, 230, 233], "keyword": [0, 3, 29, 163, 165, 169, 170, 171, 173, 174, 176], "b0_threshold": [0, 55, 82, 155, 165, 167, 171, 177, 186, 187, 190, 193, 194, 195, 196, 197, 198, 201, 218], "fvtk": [0, 158, 175, 213, 214, 215, 217, 218, 220, 221, 222], "impli": [0, 15, 50, 58, 125, 154, 163, 165, 166, 171, 172, 173, 177, 179, 222, 242], "actor": [0, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 56, 66, 67, 70, 71, 77, 78, 79, 83, 84, 89, 90, 91, 92, 94, 99, 108, 109, 111, 112, 113, 114, 119, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 142, 175, 176, 178, 213, 217, 218, 226], "ren": [0, 137, 175, 215, 218], "ui": [0, 134, 137, 176, 215, 216, 217, 218], "element": [0, 25, 59, 69, 71, 72, 73, 78, 82, 87, 88, 89, 99, 112, 121, 137, 155, 163, 165, 167, 169, 171, 172, 173, 175, 176, 177, 178, 196, 215, 218], "To": [0, 2, 5, 6, 19, 22, 38, 39, 43, 50, 51, 52, 53, 64, 67, 72, 73, 82, 84, 86, 88, 89, 90, 91, 93, 94, 96, 98, 99, 100, 104, 105, 106, 113, 114, 121, 122, 123, 125, 131, 148, 151, 152, 154, 155, 156, 157, 163, 165, 166, 168, 169, 170, 171, 172, 173, 175, 177, 192, 243, 248], "learn": [0, 12, 13, 20, 55, 64, 67, 69, 79, 82, 145, 150, 158, 166, 167, 170, 171, 177, 178, 190, 219, 228, 245, 246, 249], "go": [0, 5, 6, 9, 15, 16, 17, 19, 20, 21, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 143, 147, 165, 170, 172, 175, 215, 217, 224], "http": [0, 1, 2, 6, 9, 19, 21, 22, 38, 44, 51, 53, 64, 73, 83, 85, 87, 88, 89, 92, 100, 113, 134, 142, 143, 147, 148, 149, 152, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 175, 177, 187, 199, 227, 233, 243, 244], "gl": 0, "furthermor": [0, 142], "load_trk": [0, 29, 43, 100, 108, 109, 123, 124, 178, 226], "save_trk": [0, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 108, 131, 178], "object": [0, 3, 5, 6, 29, 34, 39, 43, 46, 49, 52, 56, 64, 66, 70, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 88, 89, 90, 92, 93, 94, 96, 105, 106, 107, 111, 112, 113, 114, 131, 134, 135, 136, 137, 138, 141, 142, 143, 144, 158, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 190, 200, 215, 216, 218, 225, 226, 227, 231], "much": [0, 3, 4, 6, 69, 82, 88, 93, 96, 100, 126, 163, 165, 169, 170, 171, 172, 175, 214], "less": [0, 3, 50, 58, 75, 86, 89, 111, 128, 130, 142, 144, 158, 163, 165, 166, 167, 168, 171, 172, 175, 176, 177, 200, 205, 207, 214, 230, 231], "easier": [0, 4, 6, 77, 119, 131, 146, 165, 171, 173, 177, 250], "No": [0, 3, 19, 43, 44, 93, 161, 165, 166, 167, 171, 172, 173, 177, 193, 194, 195, 197, 215, 216, 225, 232], "major": [0, 22, 143, 163, 165, 171, 173, 220], "support": [0, 20, 22, 43, 60, 89, 126, 142, 146, 158, 163, 165, 168, 169, 170, 171, 172, 175, 176, 213, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 230, 232, 233, 245], "It": [0, 5, 6, 12, 15, 16, 22, 24, 33, 35, 43, 49, 52, 56, 59, 62, 70, 71, 72, 73, 78, 81, 82, 83, 84, 85, 86, 90, 99, 100, 105, 107, 108, 109, 111, 112, 114, 125, 131, 135, 137, 138, 141, 142, 143, 147, 156, 157, 158, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 181, 185, 189, 190], "year": [0, 21, 219, 222], "multipl": [0, 2, 3, 22, 44, 51, 59, 62, 69, 70, 71, 72, 73, 76, 78, 80, 82, 86, 89, 93, 102, 137, 138, 141, 142, 145, 146, 151, 152, 154, 155, 156, 157, 158, 161, 163, 165, 166, 167, 170, 171, 172, 173, 175, 176, 177, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 204, 206, 208, 210, 211, 214, 217, 222, 226, 227, 231, 237, 243, 244], "As": [0, 3, 22, 29, 33, 35, 53, 60, 69, 73, 74, 80, 82, 83, 84, 85, 86, 87, 91, 99, 106, 108, 151, 152, 154, 155, 157, 163, 171, 175, 246], "far": [0, 21, 83, 96, 123, 175], "know": [0, 6, 20, 23, 29, 43, 59, 62, 96, 144, 163, 165, 171, 172, 176, 227, 248, 249, 250], "work": [0, 3, 6, 12, 13, 16, 18, 20, 21, 22, 49, 55, 59, 62, 80, 82, 84, 89, 91, 96, 97, 104, 107, 108, 131, 138, 141, 143, 151, 155, 158, 165, 170, 171, 175, 177, 198, 213, 214, 215, 218, 220, 222, 224, 225, 226, 230, 231, 233, 248], "well": [0, 3, 5, 6, 12, 22, 29, 36, 49, 50, 62, 72, 73, 74, 84, 85, 86, 89, 90, 91, 98, 99, 107, 123, 142, 151, 155, 157, 163, 165, 167, 171, 173, 218, 241, 248], "longer": [0, 15, 142, 163, 175, 223], "test": [0, 2, 3, 4, 5, 6, 16, 18, 20, 21, 69, 78, 86, 94, 97, 128, 147, 162, 163, 165, 166, 167, 170, 171, 172, 176, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 243, 244], "upgrad": [0, 145, 218, 219, 225], "newer": [0, 22, 215, 217, 218, 248], "probabilistic_direction_gett": [0, 178], "probabilisticdirectiongett": [0, 25, 35, 36, 38, 175, 178], "input": [0, 25, 32, 34, 43, 46, 50, 52, 53, 59, 66, 70, 82, 84, 91, 94, 96, 98, 99, 102, 105, 108, 112, 113, 116, 128, 134, 135, 138, 141, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 204, 206, 208, 209, 210, 211, 213, 214, 215, 218, 221, 222, 224, 227, 229, 230, 237, 238], "pmf_threshold": [0, 157, 168, 177, 210, 211], "probabl": [0, 16, 19, 24, 33, 35, 36, 76, 83, 86, 93, 96, 116, 155, 157, 163, 168, 170, 171, 172, 173, 175, 239], "lower": [0, 22, 25, 34, 38, 40, 49, 50, 51, 52, 53, 54, 55, 59, 64, 66, 71, 72, 73, 74, 76, 79, 80, 82, 84, 85, 86, 89, 93, 97, 100, 106, 107, 142, 149, 163, 165, 169, 170, 171, 172, 177, 185, 198, 203], "mass": [0, 36, 96, 97, 156, 157, 163, 168, 172, 175, 177, 179], "dki": [0, 44, 53, 72, 74, 85, 118, 120, 145, 153, 158, 161, 173, 177, 178, 195, 213, 214, 215, 217, 218, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235], "wl": [0, 44, 94, 161, 171, 177, 195, 196], "max_kurtosi": [0, 171], "axial_kurtosi": [0, 178], "mean_kurtosi": [0, 178], "radial_kuroti": 0, "prefer": [0, 2, 6, 44, 99, 100, 108, 137, 142, 147, 161, 172, 213, 219, 230, 233], "rather": [0, 2, 15, 17, 19, 22, 94, 97, 102, 143, 165, 171, 172, 213, 217], "widget": [0, 134, 215], "slicer": [0, 25, 29, 38, 39, 67, 131, 134, 137, 176, 215, 216, 217, 218, 221, 226, 233], "power": [0, 2, 44, 82, 84, 152, 158, 161, 166, 168, 171, 175, 213, 215, 243, 244], "rgb": [0, 78, 135, 146, 147, 169, 171, 176, 177, 178, 195, 196, 200, 221, 233], "too": [0, 19, 73, 93, 105, 111, 168, 175, 177, 214, 224, 233, 248], "see": [0, 2, 4, 6, 9, 11, 12, 16, 17, 19, 20, 21, 25, 29, 38, 39, 40, 43, 44, 46, 50, 51, 52, 53, 55, 62, 64, 69, 72, 73, 74, 75, 78, 80, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 99, 100, 105, 106, 111, 112, 113, 114, 130, 131, 134, 135, 137, 138, 141, 143, 144, 145, 146, 147, 151, 152, 158, 159, 160, 161, 163, 170, 172, 174, 177, 192, 199, 237, 242, 248, 250], "tutori": [0, 14, 32, 38, 44, 49, 68, 70, 72, 73, 75, 76, 79, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 96, 97, 100, 106, 107, 108, 109, 112, 113, 124, 126, 128, 134, 136, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 165, 213, 214, 216, 217, 218, 219, 220, 222, 224, 225, 226, 228, 229, 230, 231, 233], "viz_slic": [0, 133, 137, 234], "py": [0, 2, 3, 16, 19, 21, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 165, 171, 177, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "behavior": [0, 137, 163, 165, 170, 171, 175, 177, 217, 218, 224], "interp_rbf": [0, 178, 215, 221], "addit": [0, 3, 22, 24, 53, 72, 73, 80, 84, 88, 98, 134, 142, 151, 155, 159, 163, 166, 169, 170, 171, 174, 175, 177, 215, 220, 224, 233, 235, 236], "norm": [0, 3, 24, 55, 67, 71, 83, 84, 89, 113, 144, 163, 165, 175, 177, 178, 186, 187, 193, 196, 198, 201, 221], "angl": [0, 25, 33, 34, 44, 46, 66, 68, 77, 83, 85, 91, 95, 113, 119, 121, 122, 143, 144, 146, 153, 157, 163, 165, 166, 167, 168, 171, 173, 175, 176, 177, 193, 210, 211, 221, 230, 231, 234, 242], "euclidean_norm": [0, 165], "discourag": [0, 215], "11": [0, 1, 19, 22, 25, 29, 30, 32, 33, 35, 36, 37, 40, 47, 50, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 93, 100, 102, 103, 108, 109, 114, 116, 123, 124, 131, 158, 159, 163, 165, 166, 171, 174, 175, 213, 215, 220, 223, 224, 225, 227, 228, 229, 231, 233, 234, 235], "vector_field": [0, 178, 215], "warp_2d_affin": 0, "transform_2d_affin": [0, 178], "warp_2d_affine_nn": 0, "transform_2d_affine_nn": [0, 178], "warp_3d_affin": 0, "transform_3d_affin": [0, 178], "warp_3d_affine_nn": 0, "transform_3d_affine_nn": [0, 178], "gqi": [0, 44, 81, 142, 161, 166, 178, 220, 235, 239], "calcul": [0, 25, 29, 32, 34, 44, 46, 47, 51, 66, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 94, 95, 123, 125, 127, 129, 130, 146, 147, 155, 163, 165, 167, 168, 169, 171, 172, 173, 174, 175, 177, 179, 187, 194, 199, 206, 213, 218, 220, 221, 222, 226, 234, 235, 237, 238, 246], "gqi2": [0, 44, 161, 171, 223], "match": [0, 2, 44, 54, 57, 61, 89, 98, 100, 104, 108, 149, 156, 157, 163, 165, 166, 167, 169, 170, 171, 172, 177, 185, 205, 232, 234], "either": [0, 3, 15, 29, 34, 39, 40, 55, 66, 83, 84, 89, 96, 100, 111, 123, 131, 149, 163, 165, 166, 167, 169, 171, 172, 173, 175, 176, 177, 187, 188, 198, 215], "doc": [0, 3, 4, 19, 21, 22, 44, 88, 93, 165, 169, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "therein": 0, "access": [0, 9, 15, 16, 19, 21, 43, 50, 64, 82, 84, 87, 134, 137, 165, 166, 167, 171, 177, 199, 216, 225], "complet": [0, 15, 19, 21, 34, 38, 64, 66, 83, 88, 100, 114, 126, 128, 136, 146, 147, 149, 157, 163, 171, 215, 220, 221, 230], "resampl": [0, 60, 96, 97, 99, 100, 106, 112, 113, 114, 137, 142, 155, 162, 171, 172, 174, 175, 177, 178, 206, 213, 215, 222, 235], "aniso2iso": [0, 142, 213, 215], "reslic": [0, 44, 57, 61, 75, 81, 104, 177, 178, 206, 213, 215, 222, 230, 234, 235], "peaks_from_model": [0, 25, 34, 36, 39, 46, 47, 66, 70, 71, 81, 84, 89, 90, 126, 128, 131, 136, 178, 215, 220, 221, 222, 224, 230], "like": [0, 4, 5, 6, 7, 15, 17, 19, 21, 22, 36, 43, 59, 64, 71, 72, 82, 89, 90, 93, 96, 97, 99, 100, 106, 108, 114, 134, 137, 138, 141, 142, 143, 147, 156, 157, 163, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 204, 213, 224, 229, 231, 243, 244, 246], "odf": [0, 24, 25, 32, 34, 36, 37, 38, 46, 47, 66, 67, 70, 71, 75, 77, 78, 79, 81, 83, 84, 86, 89, 90, 91, 92, 94, 119, 122, 155, 158, 167, 168, 170, 173, 176, 177, 178, 193, 194, 210, 211, 214, 215, 220, 221, 222, 226, 228, 233, 235, 241], "take": [0, 2, 6, 16, 19, 20, 22, 24, 25, 36, 38, 39, 50, 52, 55, 71, 72, 73, 75, 80, 82, 84, 86, 88, 89, 90, 94, 96, 99, 111, 112, 113, 131, 142, 147, 163, 165, 166, 167, 170, 171, 174, 175, 177, 187, 188, 217, 220, 227, 228, 241], "size": [0, 1, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 50, 53, 54, 55, 56, 60, 64, 66, 67, 70, 71, 73, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 99, 102, 104, 105, 106, 108, 109, 111, 112, 113, 114, 119, 122, 124, 125, 126, 127, 128, 129, 131, 134, 135, 136, 137, 142, 146, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 185, 189, 200, 204, 206, 210, 211, 217, 218, 222, 224, 226, 231, 233, 234], "arrai": [0, 2, 3, 4, 5, 22, 40, 50, 52, 54, 55, 56, 59, 62, 64, 67, 71, 73, 75, 77, 78, 82, 83, 84, 85, 86, 87, 89, 90, 91, 97, 102, 105, 106, 112, 113, 119, 121, 122, 124, 130, 131, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 199, 204, 206, 213, 214, 215, 216, 217, 218, 222, 224, 225, 226, 229, 230, 231, 233, 237, 238], "updat": [0, 5, 10, 14, 21, 56, 89, 91, 134, 145, 158, 163, 165, 169, 170, 171, 172, 176, 177, 178, 180, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 241], "similar": [0, 9, 21, 44, 46, 59, 70, 72, 73, 75, 83, 85, 86, 88, 96, 97, 99, 105, 106, 108, 109, 116, 123, 126, 127, 129, 130, 153, 158, 161, 163, 165, 166, 167, 171, 172, 174, 175, 177, 179, 184, 190, 205, 207, 222, 224, 234, 241], "nib": [0, 3, 43, 60, 79, 80, 163, 169], "anat": [0, 79], "voxel_dim": 0, "header": [0, 43, 64, 104, 123, 169, 177, 200, 215, 224, 227, 229, 237, 238], "pixdim": 0, "someth": [0, 4, 5, 6, 16, 17, 19, 21, 83, 86, 146, 165, 169, 171, 173, 175, 176, 177, 200, 204], "1": [1, 2, 3, 6, 21, 22, 24, 25, 29, 31, 33, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 62, 64, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 152, 155, 156, 158, 159, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 235, 237, 238, 239, 241, 243, 244], "garyfallidi": [1, 3, 20, 23, 24, 25, 34, 55, 66, 80, 81, 98, 99, 100, 108, 111, 112, 113, 114, 123, 124, 125, 134, 146, 147, 148, 149, 156, 157, 163, 166, 167, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 243, 244], "e": [1, 2, 3, 6, 7, 13, 21, 23, 24, 25, 29, 31, 33, 34, 35, 38, 40, 51, 53, 55, 59, 64, 66, 67, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 88, 89, 90, 92, 93, 94, 97, 98, 102, 108, 109, 111, 112, 113, 114, 121, 123, 124, 125, 128, 134, 142, 143, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 220, 222, 235, 236, 237, 238, 241, 243, 244, 248, 249], "brett": [1, 3, 5, 20, 21, 23, 146, 147, 148, 149, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 220, 221, 222, 223], "m": [1, 3, 6, 16, 21, 29, 31, 35, 38, 40, 44, 51, 58, 62, 71, 73, 74, 76, 79, 80, 86, 87, 88, 89, 90, 93, 99, 104, 105, 106, 113, 116, 123, 130, 131, 146, 147, 148, 149, 154, 156, 157, 161, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 241, 243, 244], "amirbekian": [1, 3, 20, 23, 32, 126, 146, 147, 148, 149, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 220, 221, 222, 223], "b": [1, 2, 3, 6, 7, 21, 24, 25, 29, 44, 51, 52, 53, 55, 56, 58, 59, 62, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 99, 104, 105, 106, 108, 113, 116, 121, 122, 124, 125, 126, 130, 131, 136, 142, 146, 147, 148, 149, 151, 152, 154, 155, 156, 158, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 220, 222, 223, 224, 226, 230, 231, 233, 243, 244, 246], "rokem": [1, 3, 20, 23, 29, 39, 44, 69, 80, 90, 108, 124, 125, 146, 147, 148, 149, 161, 171, 172, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 243, 244], "van": [1, 3, 20, 23, 39, 73, 90, 146, 147, 148, 149, 171, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 220, 221, 222, 223, 243, 244], "der": [1, 3, 20, 23, 39, 73, 90, 146, 147, 148, 149, 171, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 220, 221, 222, 223, 243, 244], "walt": [1, 3, 20, 23, 39, 90, 146, 147, 148, 149, 171, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 220, 221, 222, 223, 243, 244], "descoteaux": [1, 3, 23, 31, 35, 40, 44, 62, 76, 93, 146, 147, 148, 149, 157, 161, 166, 167, 168, 171, 173, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 218, 220, 221, 222, 223, 241], "nimmo": [1, 3, 20, 23, 146, 147, 148, 149, 171, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 220], "smith": [1, 3, 20, 23, 35, 40, 58, 116, 146, 147, 148, 149, 154, 167, 171, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 220, 241], "dipi": [1, 6, 8, 10, 12, 15, 16, 17, 19, 20, 23, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 234, 235, 236, 239, 241, 245, 246, 248, 250], "contributor": [1, 3, 20, 21, 23, 134, 165, 172, 213, 215], "2014": [1, 3, 29, 35, 40, 44, 69, 71, 73, 80, 82, 84, 89, 99, 146, 147, 148, 149, 157, 159, 161, 163, 171, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 222, 225, 243, 244], "librari": [1, 19, 22, 64, 88, 94, 134, 142, 145, 146, 147, 148, 149, 158, 165, 171, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 217, 222, 231, 245, 248], "diffus": [1, 3, 20, 24, 25, 29, 35, 36, 38, 39, 40, 44, 51, 52, 53, 55, 56, 57, 59, 61, 64, 67, 68, 69, 70, 71, 76, 77, 79, 80, 81, 82, 84, 87, 88, 89, 90, 93, 94, 95, 96, 104, 109, 119, 121, 126, 131, 134, 142, 146, 147, 148, 149, 152, 153, 157, 158, 159, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 220, 228, 230, 233, 234, 237, 238, 239, 241, 243, 244, 248, 249, 250], "mri": [1, 3, 20, 24, 25, 29, 34, 35, 38, 39, 40, 44, 49, 51, 53, 55, 59, 62, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 97, 107, 109, 126, 128, 142, 146, 147, 148, 149, 151, 152, 153, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 226, 228, 230, 233, 234, 241, 243, 244, 249], "frontier": [1, 3, 98, 111, 112, 113, 114, 123, 146, 147, 148, 149, 158, 159, 172, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "neuroinformat": [1, 3, 23, 109, 116, 145, 146, 147, 148, 149, 158, 159, 172, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "vol": [1, 3, 32, 50, 54, 56, 71, 75, 76, 77, 81, 84, 93, 98, 111, 112, 113, 114, 119, 123, 146, 165, 167, 171, 172, 173, 175, 243, 244], "8": [1, 3, 21, 22, 24, 25, 29, 32, 33, 34, 35, 36, 37, 40, 44, 52, 53, 55, 56, 62, 66, 67, 71, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 96, 97, 108, 114, 115, 116, 126, 128, 131, 136, 137, 145, 155, 158, 159, 161, 163, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 187, 210, 211, 213, 217, 218, 220, 223, 224, 225, 226, 228, 235, 239], "2": [1, 5, 6, 21, 22, 24, 25, 27, 29, 31, 33, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 62, 64, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 99, 100, 102, 104, 105, 106, 107, 111, 113, 116, 119, 121, 122, 123, 126, 128, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 151, 154, 155, 156, 157, 158, 159, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 180, 181, 187, 188, 189, 195, 196, 197, 198, 199, 200, 210, 211, 213, 214, 215, 218, 219, 221, 222, 224, 225, 227, 230, 232, 233, 235, 237, 239, 241, 242, 243, 244, 245, 248], "2010": [1, 19, 24, 25, 44, 46, 70, 73, 77, 81, 82, 99, 119, 146, 155, 161, 163, 165, 166, 171, 173, 225, 243, 244], "fast": [1, 15, 24, 34, 44, 66, 73, 74, 82, 84, 85, 86, 96, 110, 113, 115, 116, 131, 145, 146, 155, 158, 163, 167, 168, 171, 172, 173, 175, 176, 177, 200, 213, 215, 220, 232, 234, 241, 243, 244, 248], "dimension": [1, 51, 52, 83, 86, 92, 113, 144, 151, 163, 165, 167, 170, 171, 172, 173, 175, 177, 196, 213, 215, 222, 233], "reduct": [1, 29, 44, 98, 127, 129, 143, 171, 172, 177, 205, 234], "brain": [1, 23, 25, 29, 34, 40, 43, 44, 51, 53, 57, 58, 61, 62, 66, 67, 69, 71, 72, 73, 74, 78, 79, 80, 85, 87, 88, 89, 90, 94, 100, 104, 105, 106, 108, 109, 110, 115, 116, 124, 125, 128, 131, 145, 146, 147, 149, 154, 156, 157, 158, 161, 163, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 183, 184, 191, 199, 200, 205, 208, 217, 222, 224, 228, 230, 234, 243, 244], "cluster": [1, 3, 44, 98, 99, 108, 110, 115, 123, 125, 127, 129, 146, 148, 158, 163, 165, 166, 171, 175, 177, 178, 184, 200, 202, 205, 207, 213, 215, 226, 232, 234, 235, 243, 244], "16th": 1, "annual": [1, 74, 166, 171, 243, 244], "meet": [1, 71, 74, 84, 100, 159, 166, 170, 171, 175, 224, 225, 226, 227, 228, 230, 243, 244], "organ": [1, 6, 138, 145, 163, 165, 166, 169, 170, 171, 172, 243, 244], "human": [1, 3, 23, 25, 72, 73, 78, 87, 88, 147, 148, 158, 166, 171, 175, 243, 244], "map": [1, 24, 25, 29, 34, 35, 38, 39, 40, 43, 44, 53, 55, 58, 60, 62, 64, 66, 67, 68, 72, 73, 74, 75, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 95, 100, 102, 104, 105, 106, 109, 111, 112, 114, 116, 123, 127, 129, 134, 135, 146, 153, 156, 157, 158, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 180, 181, 198, 213, 215, 217, 218, 223, 226, 227, 229, 230, 231, 233, 234, 243, 244, 246], "3": [1, 3, 5, 22, 24, 25, 29, 31, 32, 33, 35, 36, 37, 40, 43, 44, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 64, 67, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 96, 97, 98, 99, 102, 104, 105, 106, 108, 109, 111, 112, 113, 114, 116, 120, 124, 125, 128, 130, 131, 134, 137, 142, 143, 144, 145, 146, 155, 156, 158, 159, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 181, 185, 187, 194, 195, 196, 200, 204, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 241, 243, 244, 248], "tsiara": 1, "v": [1, 2, 3, 5, 17, 19, 44, 51, 67, 68, 73, 74, 85, 87, 95, 118, 120, 147, 163, 165, 166, 167, 168, 170, 171, 172, 175, 176, 177, 191, 215, 216, 224, 226, 234, 237, 238, 243, 244], "vogiatzi": 1, "g": [1, 3, 6, 7, 13, 21, 24, 25, 29, 31, 33, 35, 40, 51, 59, 64, 67, 70, 73, 75, 76, 78, 80, 81, 82, 83, 85, 86, 89, 90, 92, 93, 94, 96, 97, 102, 104, 105, 106, 111, 113, 126, 128, 130, 134, 136, 142, 143, 146, 148, 151, 152, 154, 155, 156, 157, 158, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 196, 210, 211, 235, 237, 238], "identif": [1, 59, 167], "proc": [1, 92, 165, 171], "intl": [1, 92, 171], "soc": [1, 90, 92, 165, 171], "mag": [1, 92, 171], "reson": [1, 51, 53, 54, 55, 56, 67, 70, 72, 73, 74, 75, 76, 79, 80, 82, 84, 85, 89, 92, 93, 146, 151, 152, 155, 167, 168, 170, 171, 172, 173, 176, 177, 187, 188, 195, 196, 199, 200, 241], "med": [1, 37, 51, 58, 72, 80, 92, 152, 154, 163, 165, 167, 168, 171, 172, 177, 195, 199, 241], "18": [1, 24, 25, 32, 33, 35, 36, 37, 40, 44, 53, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85, 86, 87, 100, 107, 108, 109, 114, 115, 116, 124, 134, 135, 146, 147, 148, 149, 159, 161, 165, 167, 171, 172, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 220, 223, 225, 226, 233], "4": [1, 22, 24, 25, 29, 31, 32, 33, 35, 36, 37, 39, 40, 43, 46, 49, 50, 51, 53, 54, 55, 56, 59, 60, 62, 64, 67, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 93, 96, 97, 99, 100, 104, 105, 106, 107, 111, 112, 114, 116, 122, 126, 131, 133, 134, 137, 142, 144, 146, 151, 152, 155, 158, 159, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 194, 196, 204, 213, 214, 215, 218, 224, 227, 230, 233, 235, 237, 241, 243, 244, 245, 248], "correia": [1, 73, 80, 85, 155, 166, 171, 175], "william": [1, 171], "yeh": [1, 44, 81, 108, 124, 125, 147, 148, 161, 171, 172, 174, 177, 183, 184, 205, 239, 243, 244], "f": [1, 6, 7, 29, 35, 40, 47, 51, 55, 60, 62, 69, 71, 74, 76, 80, 81, 82, 84, 85, 88, 89, 93, 99, 108, 123, 124, 125, 147, 148, 152, 163, 165, 166, 167, 168, 171, 172, 173, 174, 175, 177, 178, 183, 184, 205, 233, 241, 243, 244], "c": [1, 2, 5, 6, 7, 16, 19, 22, 51, 54, 55, 59, 62, 64, 67, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 93, 94, 97, 100, 104, 105, 106, 116, 134, 142, 146, 147, 148, 151, 156, 163, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 195, 196, 216, 219, 221, 222, 223, 224, 243, 244, 248], "2011": [1, 24, 25, 44, 50, 54, 62, 73, 74, 76, 82, 92, 93, 96, 97, 99, 104, 105, 106, 116, 147, 151, 155, 156, 161, 163, 165, 167, 171, 172, 177, 195, 220, 225, 243, 244], "robust": [1, 3, 28, 30, 34, 44, 53, 58, 66, 68, 71, 73, 83, 84, 85, 86, 95, 98, 99, 121, 148, 154, 155, 156, 157, 158, 163, 166, 167, 168, 169, 171, 172, 173, 175, 177, 194, 195, 196, 207, 224, 230, 234, 241], "scalar": [1, 40, 44, 68, 75, 79, 83, 95, 113, 135, 155, 163, 165, 170, 171, 172, 175, 176, 213, 233, 234], "estim": [1, 25, 33, 34, 35, 36, 40, 44, 50, 51, 54, 55, 57, 61, 66, 68, 69, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 87, 88, 90, 92, 94, 95, 102, 131, 142, 151, 152, 155, 157, 158, 161, 163, 165, 168, 171, 172, 173, 175, 177, 178, 180, 187, 188, 189, 195, 196, 197, 198, 211, 213, 214, 215, 216, 222, 224, 226, 227, 228, 233, 234, 237, 238], "q": [1, 32, 44, 45, 48, 55, 62, 68, 72, 75, 76, 83, 84, 92, 93, 95, 108, 124, 125, 142, 146, 147, 151, 158, 161, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 183, 184, 193, 200, 205, 224, 228, 230, 234, 238, 241], "sampl": [1, 24, 35, 36, 38, 44, 68, 72, 73, 83, 85, 88, 91, 94, 95, 96, 97, 102, 106, 121, 126, 141, 142, 147, 161, 163, 165, 167, 168, 170, 171, 174, 175, 213, 215, 219, 230, 232, 233, 234], "acquisit": [1, 3, 29, 44, 55, 56, 58, 59, 62, 64, 73, 77, 83, 85, 86, 87, 88, 94, 119, 151, 154, 158, 161, 165, 166, 167, 170, 171, 177, 237, 238], "scheme": [1, 3, 29, 44, 52, 56, 77, 78, 86, 119, 161, 163, 167, 170, 171, 175], "19": [1, 22, 25, 30, 32, 33, 34, 35, 36, 37, 40, 44, 49, 53, 61, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85, 86, 87, 88, 93, 104, 108, 109, 116, 124, 146, 158, 161, 171, 175, 213, 220, 222, 228], "5": [1, 22, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 51, 53, 56, 58, 60, 62, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 98, 100, 102, 104, 105, 106, 107, 108, 111, 116, 119, 125, 126, 128, 130, 131, 134, 135, 136, 137, 146, 147, 154, 155, 157, 158, 159, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 180, 196, 204, 206, 214, 215, 218, 220, 222, 224, 226, 231, 233, 235, 243, 244], "chamberlain": 1, "sr": [1, 165], "hampshir": 1, "menzi": 1, "la": [1, 146], "grant": [1, 166], "je": 1, "odlaug": 1, "bl": 1, "craig": 1, "k": [1, 3, 24, 25, 29, 35, 40, 44, 51, 55, 62, 64, 67, 68, 70, 73, 85, 87, 88, 94, 95, 96, 97, 99, 111, 113, 126, 128, 137, 142, 146, 152, 155, 157, 163, 165, 166, 170, 171, 172, 173, 175, 176, 177, 196, 200, 211, 234, 237, 239, 241, 243, 244], "fineberg": 1, "sahakian": 1, "bj": 1, "reduc": [1, 3, 6, 19, 22, 24, 35, 40, 43, 58, 83, 86, 98, 108, 130, 131, 143, 157, 158, 163, 165, 166, 167, 172, 175, 177, 178, 204, 205, 211, 215, 221, 222, 226], "white": [1, 25, 34, 35, 36, 38, 39, 40, 51, 59, 62, 66, 67, 69, 73, 74, 78, 79, 82, 83, 84, 85, 86, 88, 89, 90, 94, 97, 98, 99, 100, 108, 111, 114, 116, 123, 126, 128, 130, 131, 135, 147, 153, 155, 156, 157, 163, 166, 170, 171, 172, 173, 174, 175, 177, 185, 202, 205, 207, 211, 215, 216, 220, 232, 243, 244], "matter": [1, 25, 34, 35, 36, 38, 39, 40, 43, 51, 59, 62, 66, 67, 69, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 94, 98, 99, 100, 108, 116, 123, 126, 128, 131, 147, 153, 155, 156, 157, 163, 166, 169, 170, 171, 172, 173, 174, 175, 177, 185, 202, 205, 207, 211, 220, 232, 237, 243, 244], "trichotillomania": 1, "tensor": [1, 29, 44, 62, 64, 68, 69, 71, 74, 77, 79, 80, 83, 84, 85, 87, 88, 89, 90, 95, 119, 121, 122, 142, 145, 146, 153, 158, 160, 161, 162, 165, 166, 170, 171, 173, 175, 177, 195, 196, 213, 215, 217, 218, 220, 221, 222, 223, 224, 226, 227, 229, 231, 233, 234, 237, 238, 246], "studi": [1, 44, 73, 74, 79, 83, 86, 94, 161, 165, 166, 171, 226, 243, 244], "arch": 1, "gen": 1, "psychiatri": 1, "67": [1, 25, 32, 33, 35, 36, 37, 40, 53, 71, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 89, 222, 232], "9": [1, 19, 22, 24, 25, 29, 32, 33, 35, 36, 37, 40, 43, 44, 52, 53, 55, 56, 59, 67, 71, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 96, 100, 103, 106, 116, 158, 159, 161, 163, 166, 167, 169, 170, 171, 175, 177, 187, 213, 214, 220, 229, 232, 233, 235], "965": [1, 73, 74, 82, 173, 215], "71": [1, 24, 25, 32, 33, 35, 36, 37, 40, 53, 70, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 220], "6": [1, 4, 22, 24, 25, 32, 33, 34, 35, 36, 37, 40, 44, 51, 53, 55, 56, 59, 62, 66, 67, 69, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 98, 99, 102, 104, 106, 108, 109, 111, 112, 113, 114, 116, 123, 124, 126, 128, 131, 134, 136, 145, 155, 158, 159, 161, 163, 165, 166, 169, 171, 172, 173, 175, 177, 195, 196, 204, 208, 213, 215, 216, 218, 219, 221, 222, 230, 232, 233, 235, 237, 238, 248], "nguyen": [1, 23], "olivetti": [1, 23, 220], "halchenko": [1, 7, 215, 220, 232], "y": [1, 3, 21, 24, 25, 29, 37, 38, 62, 67, 76, 77, 80, 82, 83, 88, 89, 90, 92, 93, 94, 116, 119, 134, 137, 142, 143, 144, 156, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 181, 196, 229, 237, 242], "novel": [1, 73, 74, 83, 85, 121, 145, 155, 171, 173], "softwar": [1, 3, 34, 39, 43, 66, 104, 105, 106, 134, 156, 165, 166, 167, 171, 172, 177, 196, 237, 238, 241, 250], "mr": [1, 36, 50, 51, 52, 54, 56, 62, 78, 82, 89, 92, 116, 142, 151, 152, 154, 155, 157, 165, 166, 167, 171, 177, 197, 220, 237, 250], "17th": 1, "7": [1, 2, 6, 21, 22, 24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 47, 51, 53, 56, 59, 66, 69, 71, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 102, 104, 108, 109, 114, 116, 123, 124, 129, 142, 145, 155, 158, 159, 161, 163, 165, 166, 170, 171, 172, 174, 175, 177, 214, 218, 222, 223, 224, 226, 233, 235, 248], "wedeen": [1, 44, 75, 161, 171], "vj": 1, "tseng": 1, "wy": 1, "ieee": [1, 37, 54, 55, 76, 81, 89, 93, 96, 97, 116, 151, 159, 163, 165, 167, 168, 171, 172, 175, 243, 244], "tran": [1, 37, 165, 167, 168, 172, 177, 179], "2012": [1, 19, 34, 35, 40, 66, 73, 74, 81, 82, 98, 99, 111, 112, 113, 114, 123, 146, 157, 171, 172, 173, 174, 175, 177, 210, 225], "quickbundl": [1, 44, 98, 108, 110, 111, 112, 115, 123, 158, 163, 175, 178, 213, 214, 216, 217, 220, 221, 234, 235], "simplif": [1, 98, 99, 111, 112, 113, 114, 123, 172, 175], "neurosci": [1, 23, 44, 98, 104, 111, 112, 113, 114, 123, 172, 175], "175": [1, 73, 80, 82, 83, 98, 111, 112, 113, 114, 123, 172, 175], "cote": [1, 176, 177, 200, 222], "rheault": [1, 175, 218, 219, 224, 225, 226, 230, 231, 232, 233, 243, 244], "sidhu": 1, "j": [1, 3, 24, 25, 29, 32, 35, 38, 40, 44, 51, 53, 55, 62, 64, 69, 71, 72, 73, 74, 78, 79, 80, 82, 84, 87, 88, 89, 90, 92, 99, 104, 105, 106, 108, 116, 123, 124, 125, 137, 142, 147, 148, 152, 155, 156, 161, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 183, 184, 187, 188, 190, 191, 194, 195, 196, 197, 200, 205, 220, 231, 237, 239, 241, 243, 244], "hau": 1, "petit": 1, "l": [1, 38, 52, 53, 55, 69, 72, 73, 74, 79, 80, 86, 87, 89, 94, 104, 105, 106, 108, 124, 125, 146, 147, 156, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 183, 184, 187, 195, 196, 205, 222, 241, 243, 244], "fortin": 1, "d": [1, 3, 5, 6, 7, 21, 24, 35, 39, 40, 51, 53, 55, 62, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 96, 97, 98, 99, 108, 113, 116, 123, 124, 125, 130, 143, 147, 148, 151, 152, 155, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 187, 188, 194, 196, 197, 200, 205, 221, 227, 233, 237, 239, 241, 243, 244], "cunann": 1, "recognit": [1, 108, 123, 148, 163, 172, 177, 202, 205, 207, 217, 243, 244], "bundl": [1, 19, 26, 27, 33, 36, 44, 86, 101, 103, 104, 109, 110, 111, 112, 113, 114, 115, 126, 127, 128, 129, 130, 132, 133, 134, 145, 153, 156, 158, 163, 166, 168, 174, 175, 176, 177, 178, 182, 183, 184, 185, 200, 202, 205, 215, 217, 218, 219, 222, 224, 226, 227, 229, 231, 232, 233, 234, 243, 244], "global": [1, 5, 16, 38, 58, 83, 89, 97, 108, 123, 134, 148, 154, 163, 171, 172, 173, 177, 202, 205, 207, 222, 243, 244], "10": [1, 19, 22, 24, 25, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 46, 47, 51, 52, 53, 55, 58, 59, 61, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 97, 100, 102, 104, 105, 106, 108, 109, 111, 112, 114, 116, 121, 124, 125, 128, 130, 134, 137, 146, 147, 151, 152, 155, 158, 159, 161, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 180, 183, 184, 187, 188, 194, 197, 199, 205, 214, 215, 216, 217, 218, 219, 224, 225, 226, 230, 231, 232, 233, 235, 243, 244], "ocegueda": [1, 23, 166, 213, 214, 215, 222, 223, 231], "o": [1, 29, 43, 51, 64, 67, 69, 72, 79, 80, 82, 96, 97, 100, 104, 123, 137, 152, 155, 166, 169, 171, 172, 175, 177, 197, 214, 222, 224, 235, 248], "wassermann": [1, 23, 166, 218, 222, 243, 244], "effici": [1, 19, 38, 89, 98, 99, 137, 148, 156, 158, 163, 165, 166, 175, 177, 207, 227], "linear": [1, 6, 28, 30, 44, 55, 67, 73, 74, 82, 83, 87, 88, 92, 98, 99, 100, 102, 105, 106, 144, 147, 149, 153, 156, 158, 161, 163, 165, 166, 167, 168, 172, 175, 177, 178, 182, 190, 196, 205, 207, 215, 219, 220, 222, 227, 231, 232, 233, 234], "fascicl": [1, 28, 30, 44, 68, 95, 98, 99, 148, 156, 158, 163, 166, 171, 175, 177, 207, 222, 234], "space": [1, 3, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 51, 55, 66, 68, 71, 72, 73, 75, 76, 78, 83, 85, 92, 93, 95, 96, 98, 99, 100, 104, 105, 108, 123, 131, 134, 135, 142, 147, 148, 151, 152, 155, 156, 158, 161, 163, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 202, 205, 207, 215, 216, 217, 228, 230, 233, 234, 235, 237, 238, 239, 243, 244], "yeatman": [1, 29, 39, 69, 90, 123, 171, 174, 175, 243, 244], "jd": 1, "pestilli": [1, 29, 39, 69, 90, 108, 124, 125, 147, 171, 172, 174, 175, 177, 183, 184, 205, 243, 244], "kai": [1, 29, 39, 90, 171, 175, 243, 244], "kn": 1, "mezer": [1, 39, 69, 90, 171, 243, 244], "et": [1, 23, 32, 40, 44, 46, 52, 56, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 87, 88, 89, 92, 93, 94, 98, 99, 100, 104, 105, 106, 108, 109, 111, 112, 113, 114, 116, 119, 121, 123, 128, 148, 149, 155, 156, 158, 161, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 177, 185, 193, 194, 197, 202, 205, 207, 217, 241, 243, 244], "al": [1, 32, 40, 44, 46, 52, 56, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 87, 88, 89, 92, 93, 94, 98, 99, 100, 104, 105, 106, 108, 109, 111, 112, 113, 114, 116, 119, 121, 123, 128, 148, 149, 155, 156, 158, 161, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 177, 185, 193, 194, 197, 202, 205, 207, 217, 241, 243, 244], "2015": [1, 19, 24, 25, 38, 39, 44, 51, 73, 82, 84, 85, 89, 90, 98, 99, 121, 145, 148, 152, 155, 156, 158, 159, 161, 163, 166, 167, 171, 173, 175, 177, 207, 213, 214, 215, 223, 225, 243, 244], "evalu": [1, 24, 25, 28, 30, 39, 44, 46, 69, 70, 73, 74, 84, 85, 86, 90, 104, 105, 106, 113, 116, 146, 156, 157, 158, 163, 165, 166, 167, 168, 170, 171, 173, 175, 178, 227, 234, 243, 244], "accuraci": [1, 39, 69, 71, 73, 83, 88, 90, 104, 163, 170, 171, 172, 229, 243, 244], "12": [1, 19, 22, 24, 25, 29, 32, 33, 35, 36, 37, 40, 44, 51, 53, 55, 59, 61, 69, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 89, 93, 97, 99, 102, 104, 105, 106, 108, 111, 112, 114, 116, 130, 145, 156, 158, 159, 161, 163, 165, 171, 172, 175, 177, 214, 216, 218, 219, 220, 221, 222, 223, 226, 231, 233, 235], "dalmau": 1, "rivera": 1, "On": [1, 6, 25, 73, 83, 111, 163, 165, 171, 218, 248], "comput": [1, 5, 17, 19, 24, 25, 31, 34, 38, 43, 46, 47, 50, 51, 52, 53, 55, 62, 66, 67, 71, 72, 73, 74, 76, 78, 79, 80, 82, 83, 84, 85, 89, 92, 93, 96, 97, 98, 100, 104, 108, 109, 111, 112, 113, 121, 124, 125, 136, 145, 147, 152, 155, 156, 158, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 183, 184, 194, 195, 196, 197, 205, 208, 215, 218, 226, 233, 241, 245, 248], "over": [1, 21, 22, 24, 25, 29, 43, 52, 83, 86, 87, 88, 97, 100, 106, 142, 143, 144, 151, 163, 165, 166, 167, 169, 171, 175, 176, 215, 225, 229, 233, 237], "rectangl": 1, "arbitrari": [1, 17, 163, 165, 169, 170, 171, 172, 175, 222, 238], "dimens": [1, 25, 29, 43, 59, 64, 78, 82, 89, 96, 104, 105, 113, 137, 142, 155, 157, 163, 165, 167, 169, 170, 171, 172, 173, 175, 177, 178, 196, 210, 211, 217, 224], "13": [1, 22, 24, 25, 27, 32, 33, 35, 36, 37, 40, 53, 70, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 97, 114, 116, 145, 158, 159, 171, 175, 176, 217, 220, 224, 226, 227, 228, 229, 233, 234, 235], "rafael": [1, 23, 158, 213, 215, 216, 218, 224, 225, 226, 227, 230, 233], "neto": [1, 23, 51, 73, 85, 121, 155, 167, 171, 173, 177, 199, 213, 215, 216, 224, 225, 226, 227, 230, 233], "henriqu": [1, 23, 44, 51, 53, 72, 73, 80, 85, 121, 155, 158, 161, 166, 167, 171, 173, 177, 199, 213, 215, 216, 224, 225, 226, 227, 230, 233], "ariel": [1, 20, 23, 39, 90, 171, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "eleftherio": [1, 20, 21, 23, 134, 175, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "samuel": [1, 23, 213, 214, 215, 220, 221, 222, 223, 233], "st": [1, 5, 23, 31, 80, 109, 171, 172, 176, 177, 200, 213, 214, 215, 220, 221, 222, 223, 229, 232, 233], "jean": [1, 23, 80, 171, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 233], "eric": [1, 23, 215, 225, 227, 230, 231, 233, 243, 244], "thoma": 1, "peterson": [1, 80, 171, 215, 243, 244], "marta": 1, "morgado": 1, "rescienc": [1, 80, 171], "issu": [1, 6, 21, 22, 58, 73, 80, 85, 125, 134, 145, 154, 158, 165, 167, 171, 175, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 243, 244], "articl": [1, 74, 80, 87, 88, 100, 147, 148, 149, 165, 167, 171, 243, 244], "2017": [1, 19, 44, 79, 80, 82, 104, 108, 123, 126, 148, 159, 161, 163, 166, 171, 172, 175, 177, 202, 205, 207, 210, 215, 216, 217, 225, 243, 244], "re": [1, 2, 6, 9, 15, 16, 17, 43, 80, 106, 131, 134, 163, 170, 171, 172, 175, 217, 238, 241, 248], "optim": [1, 4, 29, 44, 53, 54, 55, 56, 58, 74, 80, 82, 83, 84, 85, 86, 90, 96, 97, 99, 102, 104, 105, 106, 116, 146, 151, 156, 158, 161, 163, 167, 168, 169, 170, 171, 172, 175, 177, 178, 180, 190, 213, 218, 222, 224, 225, 229, 230, 233, 243, 244], "free": [1, 3, 44, 68, 69, 78, 86, 88, 95, 96, 97, 121, 142, 152, 154, 155, 158, 163, 166, 171, 215, 217, 224, 227, 231, 234, 249], "water": [1, 34, 44, 66, 68, 73, 74, 85, 88, 95, 121, 126, 142, 155, 158, 166, 171, 173, 177, 195, 215, 224, 227, 231, 234], "elimin": [1, 44, 68, 95, 171, 215, 224, 227, 234], "two": [1, 19, 21, 25, 29, 32, 44, 50, 51, 53, 56, 59, 62, 64, 67, 69, 71, 72, 74, 76, 78, 80, 82, 84, 85, 86, 88, 90, 92, 93, 96, 97, 99, 100, 104, 105, 106, 111, 112, 113, 116, 121, 122, 125, 130, 131, 137, 142, 143, 147, 148, 149, 155, 156, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 185, 197, 221, 237, 238, 241], "compart": [1, 29, 38, 72, 73, 74, 80, 82, 84, 85, 89, 121, 155, 171, 173, 177], "14": [1, 6, 19, 22, 25, 32, 33, 35, 36, 37, 40, 50, 53, 61, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 88, 92, 97, 114, 116, 158, 159, 166, 171, 172, 175, 216, 218, 219, 220, 227, 229, 235], "rn": [1, 85], "mm": [1, 24, 25, 35, 44, 56, 58, 60, 73, 80, 85, 86, 90, 92, 100, 104, 108, 109, 122, 130, 142, 155, 161, 163, 165, 168, 171, 172, 173, 175, 176, 177, 198, 200, 204, 205, 210, 211, 237, 243, 244], "marral": 1, "diffusion": [1, 73, 85, 155, 171, 177, 195], "kurtosi": [1, 44, 51, 53, 68, 72, 74, 84, 95, 121, 145, 146, 153, 158, 161, 171, 173, 177, 195, 213, 214, 227, 234, 243, 244], "project": [1, 6, 9, 12, 13, 21, 22, 44, 82, 86, 137, 138, 141, 142, 158, 161, 163, 165, 171, 175, 178, 213, 220, 222, 233, 242, 243, 244, 249], "front": [1, 3, 138, 141, 222, 224], "hum": 1, "2021": [1, 37, 44, 72, 82, 88, 134, 159, 161, 166, 168, 171, 225, 228, 229, 230], "15": [1, 19, 22, 25, 30, 32, 33, 35, 36, 37, 40, 44, 51, 53, 62, 71, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 93, 97, 100, 102, 108, 114, 116, 134, 136, 137, 146, 158, 159, 161, 163, 165, 167, 170, 171, 172, 173, 175, 176, 177, 185, 194, 200, 213, 219, 220, 231, 233, 235, 241], "390": [1, 79, 83, 213], "www": [1, 73, 83, 88, 142, 143, 165, 169, 171, 175, 243, 244], "frontiersin": 1, "org": [1, 22, 38, 44, 51, 53, 73, 83, 85, 87, 88, 89, 113, 134, 142, 143, 147, 148, 149, 152, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 175, 177, 187, 199, 221, 227, 243, 244, 249], "3389": [1, 53, 82], "fnhum": 1, "675433": 1, "full": [1, 20, 21, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 156, 161, 163, 165, 166, 167, 168, 169, 171, 172, 175, 177, 179, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 241], "main": [1, 3, 15, 16, 17, 20, 21, 46, 47, 52, 53, 54, 72, 81, 83, 85, 86, 163, 168, 171, 175, 177, 230], "citat": [1, 213, 215, 216, 222, 227, 228, 230, 243, 244], "airspe": [2, 22], "veloc": [2, 22, 175], "asv": [2, 22], "measur": [2, 26, 27, 44, 51, 53, 56, 69, 71, 72, 73, 74, 76, 78, 79, 80, 82, 83, 85, 86, 88, 89, 90, 93, 94, 108, 142, 147, 152, 155, 158, 161, 163, 165, 166, 167, 170, 171, 173, 174, 175, 177, 195, 197, 215, 227, 229, 234, 237, 239, 243, 244], "easili": [2, 4, 43, 62, 64, 78, 113, 138, 141, 165, 171, 172], "pip": [2, 19, 21, 214, 215, 222, 233], "virtualenv": [2, 222], "easi": [2, 13, 49, 78, 107, 131, 134, 135, 137, 142, 143, 145, 230, 242, 248], "piec": [2, 3, 163], "don": [2, 6, 8, 9, 16, 19, 21, 23, 46, 62, 84, 86, 96, 113, 131, 134, 137, 147, 163, 165, 172, 175, 177, 205, 206, 215, 217, 220, 222, 223, 224, 231, 248], "t": [2, 3, 6, 8, 9, 16, 17, 19, 21, 23, 24, 25, 34, 38, 40, 46, 49, 50, 51, 52, 53, 54, 55, 59, 62, 64, 66, 69, 71, 72, 74, 75, 76, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 93, 96, 97, 99, 104, 107, 112, 113, 123, 130, 131, 134, 137, 142, 144, 147, 148, 155, 163, 165, 166, 167, 171, 172, 173, 175, 176, 177, 180, 205, 206, 213, 214, 215, 217, 218, 220, 222, 223, 224, 226, 227, 230, 231, 233, 237, 238, 241, 243, 244, 248, 249], "develop": [2, 3, 8, 13, 14, 15, 20, 21, 22, 25, 52, 73, 85, 121, 145, 146, 155, 158, 159, 163, 165, 169, 170, 171, 172, 173, 213, 215, 216, 217, 218, 222, 233, 248], "current": [2, 5, 6, 15, 17, 21, 22, 24, 40, 84, 86, 97, 105, 130, 134, 151, 152, 154, 155, 156, 159, 163, 165, 166, 168, 169, 171, 172, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 218, 219, 233, 243, 244, 248], "virtual": [2, 19], "build": [2, 18, 34, 36, 37, 55, 66, 84, 96, 105, 106, 138, 141, 145, 146, 157, 163, 170, 171, 175, 176, 177, 178, 179, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 233, 250], "automat": [2, 3, 15, 19, 44, 47, 49, 53, 90, 94, 107, 110, 114, 115, 151, 158, 163, 167, 170, 171, 172, 177, 187, 194, 213, 215, 216, 217, 218, 219, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234], "navig": 2, "root": [2, 19, 21, 29, 86, 171, 172, 238], "directori": [2, 3, 5, 6, 8, 17, 19, 21, 64, 138, 141, 147, 150, 151, 152, 154, 155, 156, 157, 166, 168, 174, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 218, 220, 221, 228, 248], "execut": [2, 3, 19, 22, 27, 30, 32, 39, 42, 46, 47, 48, 58, 61, 65, 95, 103, 105, 106, 115, 117, 120, 128, 129, 133, 140, 142, 151, 152, 154, 155, 163, 165, 167, 170, 171, 172, 177, 222, 234], "spin": [2, 44, 82, 83, 142, 155, 161, 166, 170, 171, 173, 177, 196, 197, 198, 237, 239], "bench": 2, "defin": [2, 3, 25, 33, 35, 39, 40, 51, 53, 62, 72, 73, 74, 78, 80, 82, 85, 86, 87, 88, 92, 94, 97, 98, 99, 102, 105, 106, 111, 112, 113, 116, 121, 126, 144, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 200, 204, 206, 215, 217, 223, 226, 230, 232, 233, 241], "Be": [2, 43, 109, 149, 165, 175], "patient": [2, 88, 94, 147, 166, 174, 177], "could": [2, 22, 62, 71, 73, 85, 86, 88, 102, 104, 111, 113, 116, 128, 130, 163, 165, 167, 170, 171, 173, 177, 185, 199, 204, 214, 224, 226], "while": [2, 6, 7, 22, 24, 43, 50, 51, 53, 69, 78, 80, 82, 85, 88, 89, 91, 121, 149, 155, 163, 165, 170, 171, 172, 174, 175, 177, 214, 215, 217, 229, 241], "each": [2, 6, 20, 22, 24, 25, 29, 31, 33, 34, 36, 39, 40, 44, 52, 55, 58, 59, 62, 64, 66, 69, 72, 75, 78, 82, 83, 84, 85, 86, 89, 90, 91, 94, 96, 98, 99, 105, 106, 109, 111, 112, 113, 116, 121, 122, 123, 126, 128, 130, 131, 134, 138, 141, 142, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 187, 188, 189, 190, 200, 204, 207, 215, 221, 224, 230, 233, 241], "time": [2, 3, 6, 8, 19, 21, 22, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 142, 147, 155, 161, 163, 165, 166, 167, 169, 170, 171, 172, 173, 175, 177, 180, 190, 197, 216, 218, 220, 221, 222, 226, 237, 239, 243, 244, 248], "For": [2, 3, 5, 6, 12, 15, 19, 21, 29, 34, 38, 39, 47, 49, 50, 51, 53, 55, 56, 58, 59, 62, 64, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 104, 105, 107, 111, 112, 113, 114, 119, 121, 122, 123, 126, 128, 131, 136, 141, 142, 144, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 180, 181, 187, 188, 200, 204, 207, 210, 211, 235, 237, 238, 241, 242, 248], "without": [2, 6, 19, 21, 29, 36, 47, 50, 51, 52, 55, 64, 76, 80, 86, 87, 88, 89, 94, 97, 130, 163, 165, 166, 170, 171, 172, 175, 177, 218, 220, 224, 225, 235], "replic": [2, 44, 165], "unleash": 2, "cd": [2, 8, 16, 17, 19, 21, 146], "export": [2, 19, 176], "regexp": 2, "ufunc": [2, 5, 213, 230], "dry": 2, "show": [2, 6, 15, 17, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 64, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 102, 104, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 124, 125, 126, 128, 130, 131, 134, 136, 137, 143, 146, 167, 170, 171, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 218, 220, 224, 225, 230, 233, 237, 246], "stderr": 2, "quick": [2, 16, 49, 78, 82, 107, 171, 175, 246], "regular": [2, 3, 38, 83, 86, 89, 90, 92, 100, 105, 149, 155, 158, 163, 165, 166, 167, 168, 171, 173, 176, 177, 185, 190, 198, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 241, 243, 244], "express": [2, 72, 73, 80, 82, 90, 91, 143, 144, 165, 166, 171, 172, 175, 177, 218, 241], "avoid": [2, 3, 6, 24, 36, 51, 55, 72, 73, 78, 80, 85, 96, 112, 163, 165, 170, 171, 175, 177, 215, 217, 219, 220, 222, 224, 225, 230, 231], "repetit": [2, 167], "particular": [2, 6, 22, 43, 44, 55, 69, 73, 78, 86, 90, 163, 165, 167, 169, 171, 172, 175, 177, 243], "bench_seg": 2, "simpli": [2, 43, 78, 84, 86, 96, 111, 163, 175], "append": [2, 25, 86, 91, 124, 126, 130, 138, 141, 172, 177], "filenam": [2, 3, 43, 64, 73, 75, 76, 81, 82, 83, 93, 146, 166, 169, 176, 177, 185, 200, 207, 218], "extens": [2, 3, 24, 32, 33, 35, 36, 38, 40, 50, 86, 144, 169, 171, 173, 175, 177, 201, 215, 217, 221, 222, 225], "benchquickbundl": 2, "ninja": 2, "skill": [2, 233], "commit": [2, 5, 7, 13, 16, 18, 20, 21, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "branch": [2, 5, 7, 10, 13, 15, 16, 17, 21, 160, 172, 175, 214, 215, 225], "v1": [2, 21, 25, 113, 165, 243, 244], "0": [2, 3, 6, 19, 21, 22, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 142, 143, 145, 146, 147, 149, 154, 155, 157, 158, 159, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 185, 187, 190, 193, 194, 199, 200, 206, 207, 208, 210, 211, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 241, 243, 244, 245], "20d03bcfd": 2, "master": [2, 5, 7, 10, 15, 16, 17, 21, 73, 160, 213, 215, 218, 220, 222, 225], "These": [2, 3, 8, 12, 21, 25, 38, 40, 43, 51, 52, 62, 69, 73, 74, 78, 80, 82, 83, 86, 89, 96, 116, 121, 123, 126, 131, 155, 163, 165, 166, 167, 171, 173, 213, 215, 216, 217, 218, 219, 224, 225, 226, 228, 229, 230, 231, 232, 233, 237, 238, 239, 241, 242], "displai": [2, 3, 24, 25, 29, 34, 38, 39, 66, 70, 77, 79, 83, 85, 92, 109, 119, 131, 134, 135, 136, 137, 166, 176, 177, 200, 215, 219, 225], "consol": [2, 142, 248], "them": [2, 3, 6, 16, 21, 29, 43, 55, 56, 64, 75, 76, 79, 82, 88, 93, 94, 96, 98, 105, 106, 108, 109, 113, 124, 126, 128, 130, 131, 134, 136, 142, 152, 163, 165, 171, 172, 173, 175, 176, 221], "futur": [2, 21, 163, 168, 169, 224, 226], "comparison": [2, 29, 44, 50, 59, 62, 68, 74, 80, 85, 86, 88, 94, 95, 99, 121, 153, 163, 171, 177, 196, 207, 215, 226, 234, 243, 244], "greater": [2, 3, 55, 82, 108, 142, 155, 163, 165, 168, 172, 175, 176, 177, 200, 205, 207], "control": [2, 3, 6, 35, 79, 90, 93, 100, 142, 147, 149, 157, 163, 165, 166, 170, 171, 172, 174, 175, 176, 177, 224], "publish": [2, 74, 80, 88, 171, 224], "preview": [2, 220], "machin": [2, 13, 21, 82, 145, 163, 167, 171, 175, 213], "tag": [2, 21, 171, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "tag_commit": 2, "txt": [2, 3, 19, 131, 141, 156, 169, 177, 179, 181, 214, 222, 226], "gtag": 2, "git": [2, 6, 7, 8, 12, 14, 15, 16, 17, 18, 19, 21, 217], "list": [2, 6, 16, 20, 21, 38, 39, 86, 96, 98, 109, 111, 112, 113, 126, 130, 135, 136, 138, 141, 150, 155, 163, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 184, 192, 195, 196, 197, 198, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 248, 249], "sort": [2, 156, 163, 166, 168, 171, 175, 176, 177, 200, 222], "taggerd": 2, "grep": 2, "do": [2, 3, 4, 5, 8, 9, 10, 13, 15, 16, 18, 19, 20, 29, 34, 36, 43, 44, 52, 55, 58, 59, 62, 66, 68, 70, 71, 75, 83, 84, 85, 86, 91, 94, 96, 98, 104, 105, 106, 109, 111, 112, 113, 126, 128, 131, 142, 143, 144, 145, 146, 147, 151, 156, 159, 160, 163, 165, 166, 170, 171, 172, 175, 177, 200, 215, 217, 218, 222, 224, 238, 243, 248, 250], "log": [2, 6, 9, 13, 15, 21, 69, 72, 73, 74, 89, 98, 131, 138, 141, 163, 165, 166, 169, 170, 171, 172, 177, 215, 225, 237, 238], "onelin": [2, 6, 15], "n1": [2, 165, 175], "decor": [2, 165, 171, 213, 215, 217, 218, 220, 225, 231], "awk": 2, "print": [2, 19, 43, 46, 47, 50, 52, 53, 54, 56, 59, 60, 62, 64, 69, 70, 71, 75, 76, 78, 79, 81, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 100, 111, 112, 114, 116, 122, 125, 130, 134, 135, 163, 165, 169, 175, 177, 216, 217, 218, 225, 229, 231, 248], "done": [2, 6, 12, 16, 19, 21, 25, 29, 34, 51, 55, 59, 60, 66, 69, 72, 74, 78, 83, 84, 85, 86, 89, 97, 99, 100, 106, 111, 113, 123, 131, 163, 165, 167, 171, 172, 175, 177, 187], "last": [2, 6, 19, 21, 22, 64, 78, 82, 86, 94, 111, 114, 131, 137, 142, 147, 155, 158, 163, 165, 166, 167, 169, 170, 171, 172, 175, 177, 196, 216, 219, 231, 233], "20": [2, 22, 25, 32, 33, 35, 36, 37, 40, 44, 53, 67, 71, 72, 73, 74, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 93, 94, 99, 100, 102, 108, 116, 121, 122, 135, 137, 161, 163, 165, 166, 168, 171, 172, 173, 175, 177, 185, 213, 220, 243, 244], "tail": [2, 143], "20_ver": 2, "hashfil": 2, "view": [2, 49, 107, 128, 135, 136, 165, 171, 173, 176, 213, 214, 224], "tbd": 2, "document": [2, 4, 18, 20, 21, 44, 138, 141, 158, 160, 163, 165, 166, 167, 169, 172, 175, 177, 213, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 249], "readthedoc": [2, 22, 175], "__": [2, 44, 161], "basic": [2, 15, 28, 30, 32, 36, 44, 50, 53, 60, 63, 65, 71, 80, 113, 145, 146, 151, 155, 160, 165, 169, 172, 173, 175, 177, 218, 224, 226, 234], "how": [2, 3, 13, 15, 16, 20, 21, 22, 29, 32, 34, 40, 43, 47, 49, 51, 52, 53, 55, 56, 60, 62, 64, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 138, 143, 145, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 163, 165, 166, 167, 169, 170, 171, 172, 173, 175, 177, 218, 222, 223, 224, 225, 226, 227, 229, 230, 231, 233, 237, 246, 248, 249], "thing": [2, 10, 13, 16, 19, 21, 34, 66, 86, 94, 96, 97, 131, 157, 165, 167, 171, 175, 213, 222, 223], "consid": [2, 10, 15, 16, 29, 43, 55, 71, 72, 79, 82, 90, 93, 131, 156, 163, 165, 167, 168, 169, 170, 171, 172, 175, 176, 177, 180, 190, 242], "suit": [2, 220, 222], "keep": [2, 4, 6, 16, 22, 32, 34, 40, 43, 66, 81, 84, 89, 114, 131, 163, 171, 172, 175, 177, 205, 207, 213, 218, 230], "runtim": [2, 46, 47, 73, 83, 213, 215, 222], "reason": [2, 6, 43, 75, 80, 83, 94, 96, 102, 105, 112, 131, 163, 166, 170, 171, 177, 198, 220, 241, 248], "time_": 2, "prepar": [2, 34, 37, 66, 67, 78, 82, 96, 163, 165, 170, 171], "mind": [2, 3, 75, 114, 130, 171], "larg": [2, 4, 22, 29, 50, 73, 96, 109, 131, 142, 145, 147, 158, 163, 168, 169, 171, 175, 177, 205, 217, 221, 233, 235, 245, 248], "watch": 2, "reach": [2, 15, 22, 35, 40, 71, 80, 89, 98, 109, 116, 131, 143, 157, 167, 171, 175, 177, 211], "star": 2, "happi": [2, 6, 20, 23, 62, 213, 222, 236], "principl": [3, 60, 171, 173, 175], "behind": [3, 13, 53, 145, 151, 242, 248], "must": [3, 35, 36, 38, 43, 59, 67, 71, 72, 76, 83, 84, 93, 96, 111, 112, 147, 157, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 180, 198], "verifi": [3, 43, 55, 64, 71, 73, 105, 106, 165, 169, 213, 222], "systemat": [3, 165], "henc": [3, 19, 22, 62, 82, 156, 171, 172, 175, 238], "stabil": [3, 171, 233], "ensur": [3, 6, 22, 24, 25, 72, 73, 83, 131, 163, 165, 169, 171, 175, 177, 226], "redund": [3, 29, 52, 53, 151], "readabl": [3, 6], "written": [3, 6, 43, 88, 90, 163, 165, 171, 172, 173, 176, 224, 250], "read": [3, 6, 13, 15, 16, 17, 24, 25, 29, 39, 41, 42, 44, 46, 47, 49, 64, 70, 75, 76, 78, 79, 81, 83, 86, 87, 88, 92, 93, 104, 107, 108, 109, 111, 122, 123, 124, 137, 142, 146, 158, 163, 165, 166, 169, 170, 171, 172, 177, 178, 213, 217, 222, 223, 226, 227, 230, 234, 235, 246, 248, 249], "frequent": [3, 43, 249], "consist": [3, 23, 43, 59, 86, 89, 131, 158, 163, 166, 167, 169, 170, 171, 172, 175, 176, 215, 218, 220, 224, 230, 233], "eas": [3, 86], "prone": [3, 94, 163], "essenti": [3, 22, 58, 83, 97, 238], "kei": [3, 9, 43, 108, 134, 138, 141, 145, 149, 163, 165, 166, 169, 171, 174, 175, 176, 177, 210, 211, 218, 219, 220, 222, 230, 233, 243], "adopt": [3, 22, 62], "toolkit": 3, "choic": [3, 5, 25, 32, 83, 89, 96, 97, 105, 151, 172, 175, 213, 238, 241], "scientif": [3, 22, 73, 74, 79, 82, 84, 85, 134, 146, 166, 171, 245, 248], "commun": [3, 13, 86, 145, 158, 163, 171, 223, 229, 236], "help": [3, 4, 6, 9, 11, 13, 20, 23, 86, 97, 108, 138, 141, 145, 154, 160, 163, 165, 168, 171, 172, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 218, 222, 235, 236, 239, 249], "clarifi": [3, 86, 158, 221, 222, 224, 227, 230], "certain": [3, 55, 62, 73, 94, 171, 175], "obscur": 3, "place": [3, 29, 94, 97, 148, 159, 163, 165, 167, 171, 175, 176, 177, 187, 188, 213, 224, 226], "allow": [3, 9, 21, 24, 35, 40, 46, 47, 83, 84, 86, 130, 131, 134, 137, 138, 142, 152, 155, 156, 158, 163, 165, 167, 168, 169, 171, 172, 173, 175, 176, 177, 205, 211, 214, 215, 218, 220, 222, 225, 227, 228, 229, 230, 231], "member": [3, 231], "decod": [3, 166], "effort": 3, "languag": [3, 142, 217, 222, 225, 245], "english": 3, "spell": [3, 226], "abid": 3, "pep8": [3, 4, 20, 213, 214, 215, 216, 223, 227, 233], "across": [3, 22, 53, 55, 59, 72, 78, 82, 85, 89, 108, 124, 125, 143, 153, 155, 165, 170, 171, 172, 174, 177, 218, 236, 237, 238], "conform": [3, 4, 171, 227], "syntax": [3, 171, 219, 227], "request": [3, 5, 6, 15, 96, 145, 158, 163, 165, 166, 175, 176, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 238], "push": [3, 6, 13, 16, 17, 21, 233], "There": [3, 6, 11, 12, 13, 21, 71, 84, 89, 108, 113, 142, 147, 157, 163, 165, 166, 169, 170, 171, 172, 173, 237, 242], "system": [3, 46, 47, 55, 56, 89, 126, 128, 130, 131, 134, 145, 146, 158, 163, 165, 166, 167, 168, 169, 171, 175, 176, 177, 190, 221, 226, 233, 242, 248], "complianc": 3, "most": [3, 6, 11, 19, 22, 25, 29, 33, 46, 49, 59, 60, 62, 70, 86, 89, 96, 97, 99, 100, 105, 106, 107, 116, 157, 166, 167, 169, 171, 172, 175, 235, 248], "text": [3, 5, 6, 15, 21, 29, 44, 64, 82, 86, 87, 88, 99, 134, 137, 138, 141, 142, 156, 171, 176, 177, 180, 181, 213, 218, 233, 246], "editor": [3, 6, 142], "configur": [3, 6, 10, 14, 19, 96, 102, 105, 158, 170, 171, 225, 229], "beyond": [3, 83, 86], "aspect": [3, 171], "includ": [3, 6, 15, 24, 25, 29, 40, 69, 73, 83, 86, 89, 94, 104, 113, 123, 131, 142, 145, 156, 158, 159, 163, 165, 166, 167, 169, 170, 171, 172, 175, 176, 177, 179, 213, 215, 222, 226, 232, 241, 245, 248], "comment": [3, 22, 213, 217, 220, 224, 226, 233], "abov": [3, 5, 6, 15, 19, 21, 22, 34, 40, 44, 46, 47, 50, 51, 53, 55, 56, 66, 71, 72, 73, 78, 80, 81, 82, 84, 85, 88, 97, 116, 121, 130, 131, 137, 143, 147, 158, 161, 163, 165, 166, 169, 170, 171, 172, 173, 175, 177, 237, 241, 248], "shorthand": [3, 219], "increas": [3, 78, 82, 83, 86, 108, 158, 163, 165, 170, 171, 175, 218, 222, 224, 227, 233], "numpi": [3, 19, 20, 24, 25, 29, 31, 35, 38, 39, 40, 43, 49, 50, 51, 52, 53, 54, 55, 56, 59, 62, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 91, 93, 94, 96, 97, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 128, 130, 131, 134, 135, 142, 158, 163, 165, 166, 167, 169, 170, 171, 172, 173, 175, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 229, 230, 231, 232, 233, 245, 248], "npt": [3, 227], "sp": [3, 175, 226], "alia": [3, 5, 6, 165, 171, 172, 173, 175, 230], "h5py": [3, 19, 142, 158, 169, 216, 218, 245], "write": [3, 5, 6, 9, 15, 16, 17, 18, 22, 41, 42, 44, 64, 70, 75, 76, 81, 83, 92, 93, 134, 141, 151, 152, 154, 163, 169, 171, 176, 177, 222, 226, 234, 248], "specif": [3, 9, 19, 22, 56, 62, 64, 72, 75, 79, 81, 83, 84, 85, 86, 89, 98, 111, 121, 122, 130, 134, 138, 142, 146, 150, 151, 153, 165, 166, 169, 170, 171, 172, 175, 176, 216, 218, 219, 220, 230, 235, 245], "rule": [3, 13, 108, 158, 163, 170, 175, 213], "cimport": 3, "add": [3, 5, 6, 13, 15, 16, 17, 19, 21, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 56, 66, 67, 70, 71, 72, 77, 78, 79, 83, 84, 89, 90, 91, 92, 94, 99, 108, 109, 111, 112, 113, 114, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 158, 165, 169, 171, 172, 173, 175, 176, 177, 178, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "prefix": [3, 4, 177], "usual": [3, 6, 19, 56, 60, 64, 97, 137, 138, 141, 171, 172, 175], "cnp": [3, 165, 175, 229], "symbol": [3, 171, 233], "being": [3, 22, 62, 86, 89, 142, 147, 157, 163, 165, 167, 169, 171, 172, 174, 175, 176, 177, 181, 215, 216, 219, 224, 229, 235, 241, 248], "compar": [3, 15, 18, 29, 47, 50, 53, 69, 73, 76, 82, 83, 88, 89, 94, 121, 125, 126, 142, 147, 163, 169, 171, 172, 175, 176, 214, 230], "separ": [3, 6, 38, 55, 71, 72, 82, 84, 86, 116, 155, 163, 165, 166, 169, 170, 171, 172, 173, 176, 177, 197, 208, 220, 230, 248], "cdef": [3, 175], "cpdef": 3, "ctypedef": 3, "statement": [3, 215, 222, 225, 226, 230], "type": [3, 6, 16, 19, 32, 51, 55, 64, 75, 84, 85, 113, 116, 131, 143, 146, 152, 156, 157, 163, 165, 166, 168, 169, 171, 172, 173, 175, 176, 177, 181, 192, 198, 200, 201, 205, 213, 214, 217, 219, 220, 222, 230, 231, 233, 248], "turn": [3, 6, 38, 76, 142, 143, 151, 169, 171, 175], "per": [3, 34, 39, 44, 66, 79, 84, 91, 98, 99, 100, 108, 131, 135, 147, 148, 149, 157, 161, 163, 166, 167, 170, 171, 172, 174, 175, 176, 177, 180, 190, 196, 210, 211, 218, 221, 222, 237, 239], "long": [3, 35, 43, 81, 146, 163, 170, 173, 175, 177, 215, 225], "simpl": [3, 16, 20, 34, 44, 59, 66, 71, 74, 75, 78, 80, 82, 89, 92, 98, 99, 111, 112, 113, 130, 132, 133, 136, 157, 158, 163, 165, 170, 171, 172, 175, 176, 177, 222, 227, 234, 235, 248], "assign": [3, 29, 44, 127, 129, 163, 165, 171, 172, 173, 174, 175, 178, 213, 222, 234], "group": [3, 21, 29, 59, 80, 94, 98, 99, 131, 153, 158, 163, 172, 174, 177, 207, 226, 228, 230], "exampl": [3, 5, 6, 15, 16, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 146, 147, 148, 150, 155, 156, 158, 159, 168, 172, 177, 180, 187, 188, 194, 199, 200, 204, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 243, 244, 246, 249], "good": [3, 5, 6, 11, 13, 15, 21, 25, 34, 62, 66, 69, 71, 83, 84, 90, 94, 96, 104, 105, 116, 130, 151, 163, 165, 171, 172, 175, 177, 215, 222, 225, 229, 242, 250], "int": [3, 91, 134, 146, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 185, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 204, 205, 206, 207, 209, 210, 211, 215, 229, 231, 233, 237, 239], "char": [3, 175], "doubl": [3, 71, 72, 142, 163, 165, 167, 168, 171, 172, 173, 175, 213, 219, 227], "xf": 3, "clustermapcentroid": [3, 178], "p": [3, 6, 15, 24, 25, 38, 52, 53, 54, 55, 67, 76, 77, 89, 93, 116, 119, 145, 147, 151, 163, 165, 167, 169, 170, 171, 172, 173, 175, 177, 187, 196, 239, 241, 242], "pyarray_data": [3, 229], "seed": [3, 25, 28, 30, 32, 33, 35, 36, 37, 38, 39, 40, 44, 69, 126, 128, 131, 136, 146, 157, 158, 163, 165, 166, 168, 171, 173, 175, 177, 210, 211, 213, 214, 215, 218, 221, 222, 224, 225, 226, 229, 233, 234], "npy_intp": [3, 165, 175, 215, 229, 233], "pstr": 3, "qa": [3, 171, 174, 175], "stride": [3, 165, 170, 171, 173, 175], "cnt": [3, 137], "tmp": [3, 6, 176, 177, 221, 222, 233], "ftmp": [3, 222], "get_direction_c": 3, "self": [3, 43, 44, 57, 59, 61, 87, 88, 109, 113, 138, 141, 158, 163, 165, 167, 169, 171, 172, 175, 177, 190, 196, 218, 224, 228, 234], "bad": [3, 142, 215, 217, 218, 221, 225], "u": [3, 6, 13, 15, 16, 20, 23, 24, 29, 34, 50, 54, 64, 66, 70, 79, 82, 100, 125, 142, 144, 145, 159, 163, 165, 167, 171, 218, 236, 242, 250], "x": [3, 21, 22, 24, 25, 29, 38, 62, 82, 87, 88, 90, 92, 99, 113, 121, 131, 134, 137, 142, 143, 144, 145, 156, 158, 160, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 181, 189, 213, 216, 220, 224, 226, 229, 235, 237, 242, 248], "42": [3, 6, 24, 25, 30, 31, 32, 33, 35, 36, 37, 39, 40, 51, 53, 56, 62, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 96, 108, 115, 135, 155, 171, 173, 175, 177, 197, 222], "z": [3, 24, 25, 29, 38, 62, 70, 72, 82, 83, 87, 88, 92, 121, 131, 134, 137, 142, 143, 144, 156, 163, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 181, 237, 242], "top": [3, 6, 15, 24, 29, 74, 96, 105, 106, 128, 136, 143, 165, 176, 214, 220, 224], "bodi": [3, 44, 55, 156, 175, 177, 179], "void": 3, "estimate_kernel_s": 3, "verbos": [3, 67, 73, 84, 88, 89, 98, 108, 163, 167, 169, 170, 171, 172, 175, 177, 190, 214, 222], "true": [3, 5, 21, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 49, 50, 52, 53, 54, 55, 59, 60, 62, 64, 66, 67, 70, 71, 73, 75, 78, 81, 82, 83, 84, 86, 88, 89, 91, 96, 97, 98, 99, 100, 104, 107, 108, 113, 114, 124, 125, 126, 128, 131, 134, 136, 142, 156, 163, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 185, 188, 189, 193, 194, 198, 200, 204, 210, 211, 217, 226], "kernelmax": 3, "k2": [3, 168], "r": [3, 6, 19, 23, 24, 25, 35, 38, 40, 51, 53, 55, 62, 69, 72, 73, 74, 80, 83, 85, 86, 89, 90, 94, 96, 97, 99, 102, 121, 126, 130, 136, 143, 144, 155, 157, 163, 165, 167, 168, 169, 171, 172, 173, 175, 176, 177, 180, 196, 199, 200, 211, 214, 215, 222, 233, 237, 239, 241, 242, 243, 244], "both": [3, 22, 35, 49, 50, 51, 52, 53, 56, 59, 71, 72, 73, 80, 82, 83, 84, 85, 86, 88, 89, 90, 97, 98, 99, 100, 104, 107, 109, 111, 123, 130, 134, 136, 159, 163, 165, 166, 170, 171, 175, 176, 177, 198, 200, 222, 224, 241], "come": [3, 6, 13, 16, 49, 59, 89, 107, 159, 170, 171, 177, 220], "libc": 3, "stdlib": 3, "calloc": 3, "realloc": 3, "except": [3, 5, 97, 147, 163, 165, 166, 167, 170, 171, 172, 175, 177, 217, 221, 223], "side": [3, 163, 167, 171, 177, 213], "definit": [3, 78, 82, 88, 90, 97, 144, 155, 158, 163, 165, 167, 168, 171, 215, 218, 220, 222, 227, 230, 241], "between": [3, 19, 24, 29, 43, 44, 51, 52, 53, 54, 57, 61, 67, 71, 72, 73, 74, 76, 78, 80, 82, 83, 84, 86, 88, 89, 90, 97, 98, 99, 100, 105, 106, 109, 112, 113, 116, 123, 125, 131, 136, 142, 145, 147, 149, 153, 156, 163, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 181, 185, 187, 200, 210, 211, 218, 222, 227, 231, 233, 234, 235, 237, 238, 241, 242], "colon": [3, 6], "unless": [3, 62, 111, 163, 165, 171, 173, 175, 231], "bar": [3, 135, 158, 170, 171, 176, 215, 218, 227, 230], "c_extract": [3, 172], "featur": [3, 4, 5, 10, 15, 16, 22, 38, 44, 50, 72, 97, 110, 112, 114, 115, 121, 123, 145, 158, 159, 165, 167, 169, 170, 171, 173, 177, 178, 196, 213, 215, 228, 231, 232, 233, 234, 243, 244], "data2d": 3, "datum": [3, 113, 172], "out": [3, 16, 19, 21, 29, 44, 47, 55, 62, 69, 82, 91, 104, 108, 123, 131, 137, 151, 155, 163, 165, 167, 170, 171, 172, 175, 177, 187, 215, 218, 220, 221, 222, 224, 226, 235, 237, 238], "nogil": [3, 163, 171], "hat": [3, 90, 144, 178], "zero": [3, 24, 25, 29, 43, 44, 53, 73, 74, 75, 80, 84, 85, 86, 87, 89, 97, 102, 109, 121, 128, 130, 136, 161, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 215, 216, 217, 218, 224, 230, 232, 237, 238], "awai": [3, 143, 175, 217], "put": [3, 90, 138, 141, 163, 171, 175, 177, 222], "ani": [3, 5, 6, 8, 15, 16, 21, 22, 24, 36, 43, 44, 55, 58, 60, 62, 78, 82, 86, 89, 91, 93, 97, 98, 99, 113, 131, 137, 138, 142, 143, 144, 146, 147, 148, 149, 151, 152, 154, 155, 157, 161, 163, 165, 166, 168, 169, 170, 171, 172, 173, 175, 176, 177, 192, 200, 201, 206, 209, 215, 217, 222, 231, 235, 241, 248], "whitespac": [3, 4, 218], "open": [3, 6, 21, 25, 62, 79, 86, 93, 116, 128, 131, 134, 138, 141, 165, 166, 167, 169, 171, 175, 225, 226, 228, 229, 230, 241, 248, 249], "close": [3, 4, 6, 15, 21, 25, 62, 75, 82, 84, 93, 94, 96, 100, 125, 131, 135, 145, 149, 151, 157, 158, 163, 165, 166, 167, 168, 169, 175, 177, 178, 185, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 245], "float": [3, 40, 49, 76, 102, 107, 109, 142, 146, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 184, 185, 186, 187, 189, 190, 193, 194, 195, 196, 198, 200, 201, 203, 205, 206, 208, 210, 211, 216, 222, 226, 229, 231, 233], "rang": [3, 25, 44, 46, 47, 50, 51, 70, 73, 74, 78, 82, 83, 85, 87, 88, 108, 109, 124, 147, 158, 161, 163, 165, 167, 169, 170, 171, 172, 175, 176, 177, 210, 211, 218, 226, 237], "nrow": [3, 85, 86, 163, 176], "construct": [3, 22, 39, 67, 89, 96, 163, 165, 166, 167, 171, 173, 175, 224], "sphinx": [3, 19, 22, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 145, 158, 218, 219, 226, 227, 232, 233], "contribut": [3, 18, 20, 23, 25, 29, 74, 80, 82, 85, 86, 97, 121, 122, 123, 145, 160, 163, 170, 171, 173, 175, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239], "suggest": [3, 9, 44, 73, 83, 88, 161, 163, 167, 170, 220, 222, 233, 236, 248], "chang": [3, 4, 5, 8, 10, 16, 17, 19, 24, 55, 71, 72, 76, 80, 82, 83, 84, 91, 94, 98, 108, 125, 130, 134, 137, 142, 145, 149, 158, 163, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 187, 195, 196, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 229, 230, 231, 233, 241], "properli": [3, 43, 76, 83, 91, 134, 138, 141, 169, 171, 175, 177, 217, 220, 222, 226, 231], "html": [3, 19, 21, 22, 88, 142, 165, 169, 175, 215, 217, 227, 243, 244], "format": [3, 5, 16, 43, 52, 60, 64, 72, 82, 84, 121, 131, 137, 142, 147, 160, 163, 165, 166, 167, 169, 170, 171, 173, 175, 177, 196, 198, 213, 215, 216, 217, 219, 222, 224, 226, 231, 233, 235, 243, 244, 245, 248], "websit": [3, 21, 148, 149, 166, 213, 214, 217, 218, 219, 220, 222, 223, 225, 228, 233, 236], "store": [3, 29, 75, 85, 86, 90, 98, 135, 136, 142, 144, 163, 165, 169, 171, 173, 175, 176, 217, 220], "folder": [3, 44, 64, 96, 97, 123, 146, 147, 148, 150, 166, 177, 181, 183, 184, 192, 214, 219, 224, 233, 243], "contain": [3, 5, 19, 22, 24, 25, 29, 43, 44, 49, 53, 55, 69, 70, 71, 72, 73, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 107, 112, 114, 134, 137, 138, 141, 145, 146, 152, 154, 155, 156, 158, 160, 161, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 204, 206, 208, 210, 211, 213, 215, 216, 217, 218, 219, 224, 225, 226, 228, 229, 230, 231, 232, 233, 242, 248], "interleav": 3, "multi": [3, 44, 51, 52, 53, 55, 56, 68, 73, 74, 77, 79, 82, 83, 85, 89, 93, 95, 96, 102, 105, 106, 119, 146, 151, 158, 161, 163, 166, 170, 171, 173, 175, 177, 180, 191, 213, 214, 215, 218, 220, 221, 222, 223, 225, 226, 227, 229, 231, 233, 234, 243, 244], "explan": [3, 6, 7, 62, 163, 171, 218], "block": [3, 21, 67, 158, 167, 171, 177, 178, 187, 188, 189, 216, 219], "demonstr": [3, 29, 32, 38, 39, 49, 55, 59, 69, 78, 85, 91, 94, 97, 102, 104, 107, 126, 128, 131, 155, 157], "etc": [3, 4, 55, 94, 134, 142, 151, 162, 163, 165, 170, 171, 173, 175, 177, 206, 220, 223], "intermix": 3, "describ": [3, 12, 32, 34, 39, 40, 50, 66, 69, 73, 78, 82, 83, 86, 88, 90, 94, 104, 123, 128, 155, 157, 163, 165, 166, 171, 173, 175, 243], "former": [3, 19, 21], "rational": 3, "aim": [3, 22, 24, 156, 171, 250], "extend": [3, 13, 35, 72, 84, 134, 138, 141, 146, 157, 165, 171, 172, 176, 177, 216, 222, 224, 230, 233], "relev": [3, 19, 25, 44, 72, 73, 74, 80, 82, 85, 88, 121, 136, 137, 146, 147, 148, 149, 158, 170, 171, 174, 175, 177], "paper": [3, 44, 53, 59, 62, 73, 74, 84, 85, 86, 94, 146, 147, 148, 149, 158, 159, 161, 167, 171, 177, 185, 217, 222, 224, 226], "exist": [3, 20, 21, 83, 111, 112, 113, 121, 166, 169, 170, 171, 172, 175, 176, 177, 202, 213, 214, 217, 218, 222, 223, 227], "edit": [3, 5, 10, 13, 16, 21, 44], "otherwis": [3, 29, 84, 111, 137, 146, 163, 165, 166, 167, 168, 171, 172, 175, 176, 177, 189, 190, 207, 215], "valid_exampl": 3, "addition": [3, 22, 40, 44, 53, 78, 145, 161], "reli": [3, 22, 35, 55, 98, 157, 171, 175, 215, 222], "restructuredtext": [3, 217, 227], "rst": [3, 21, 135, 215, 216, 217, 218, 221, 222, 226, 233], "theoret": [3, 73, 88, 92, 99, 163, 171], "background": [3, 40, 49, 51, 59, 62, 67, 70, 72, 73, 74, 78, 80, 85, 86, 87, 107, 128, 131, 137, 163, 167, 170, 171, 175, 176, 177, 200], "instruct": [3, 6, 8, 9, 11, 15, 17, 19, 21, 88, 105, 106, 213, 216, 218, 219, 222, 224, 227, 233, 248], "descript": [3, 6, 21, 44, 111, 112, 126, 128, 136, 145, 161, 166, 169, 171, 175, 177, 224, 233], "again": [3, 5, 6, 21, 34, 66, 86, 89, 96, 143, 165, 167, 171, 172, 215, 217, 220, 222, 242], "markup": [3, 217], "pars": [3, 177, 229], "produc": [3, 29, 70, 72, 73, 80, 83, 84, 85, 86, 88, 96, 121, 142, 163, 165, 166, 168, 171, 172, 175], "content": [3, 5, 10, 14, 215, 216, 220, 225, 233], "later": [3, 25, 73, 74, 82, 86, 89, 123, 165, 171, 221], "compil": [3, 19, 21, 170, 171, 178, 213, 214, 217, 222, 223, 231], "so": [3, 4, 6, 15, 16, 17, 19, 21, 34, 36, 38, 39, 43, 55, 56, 66, 69, 73, 75, 78, 82, 83, 84, 86, 89, 91, 94, 96, 99, 100, 105, 106, 108, 111, 112, 113, 114, 122, 123, 126, 130, 131, 134, 135, 137, 143, 146, 152, 155, 156, 158, 163, 165, 166, 167, 169, 170, 171, 172, 175, 176, 177, 193, 214, 220, 221, 222, 237, 242, 248], "appropri": [3, 67, 104, 105, 134, 137, 152, 163, 165, 166, 169, 176, 230, 243, 244], "web": [3, 21, 166, 220, 222, 226], "page": [3, 6, 9, 11, 12, 14, 15, 21, 82, 111, 112, 147, 160, 165, 213, 215, 218, 222, 224, 231, 243, 244], "enrich": 3, "particularli": [3, 39, 53, 80, 85, 94], "encourag": [3, 23, 151], "observ": [3, 24, 36, 50, 51, 59, 67, 77, 80, 85, 88, 89, 100, 116, 119, 143, 157, 165, 171, 172], "acronym": 3, "referenc": [3, 163, 166, 171, 172, 222, 233], "invert": [3, 29, 62, 105, 106, 163, 171, 176, 177, 200, 220], "comma": [3, 177, 208, 230], "call": [3, 5, 6, 19, 21, 34, 43, 47, 53, 54, 56, 59, 64, 66, 71, 72, 73, 74, 75, 77, 78, 80, 82, 84, 85, 86, 88, 91, 94, 96, 99, 100, 105, 116, 119, 122, 123, 131, 135, 138, 141, 144, 146, 155, 156, 157, 163, 165, 166, 167, 170, 171, 172, 173, 175, 177, 178, 215, 218, 219, 220, 230, 242], "gradientt": [3, 56, 64, 70, 72, 73, 75, 76, 78, 81, 82, 83, 85, 92, 93, 121, 122, 163, 166, 170, 171, 173, 175, 178, 214, 215, 220, 222, 226, 229], "hold": [3, 29, 36, 55, 64, 99, 134, 137, 163, 165, 169, 171, 175], "vector": [3, 24, 56, 58, 64, 72, 73, 78, 82, 87, 88, 99, 100, 112, 113, 121, 122, 131, 135, 142, 144, 146, 151, 154, 155, 162, 163, 165, 166, 167, 169, 171, 172, 173, 175, 176, 177, 180, 186, 187, 194, 196, 201, 213, 215, 218, 222, 237, 238, 241, 246], "cite": [3, 51, 80, 146, 147, 148, 149, 166, 167], "nameyear": 3, "convent": [3, 43, 85, 143, 144, 158, 163, 165, 166, 167, 169, 171, 175, 240], "cross": [3, 25, 26, 27, 29, 44, 68, 72, 73, 75, 78, 82, 83, 85, 86, 89, 94, 95, 104, 105, 106, 121, 155, 156, 158, 163, 165, 167, 171, 175, 177, 180, 213, 215, 218, 222, 224, 225, 230, 233, 234], "garyfallidis2014": 3, "under": [3, 22, 83, 84, 99, 105, 106, 163, 165, 166, 171, 176, 177, 180, 224, 225, 229, 235, 248], "section": [3, 5, 6, 15, 21, 22, 72, 73, 82, 113, 138, 141, 145, 147, 158, 165, 166, 171, 173, 175, 219, 221, 223, 226, 227, 233], "relat": [3, 4, 6, 15, 43, 72, 73, 83, 86, 142, 163, 165, 169, 171, 173, 175, 213, 215, 218, 219, 220, 230, 241, 242], "_specific_filenam": 3, "label": [3, 4, 5, 16, 21, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 67, 69, 82, 85, 86, 94, 104, 105, 106, 114, 121, 122, 126, 128, 130, 131, 134, 136, 156, 163, 166, 170, 172, 175, 176, 177, 202, 213, 216, 218, 224, 226, 233, 243, 244], "thu": [3, 21, 25, 59, 62, 73, 74, 80, 82, 84, 104, 112, 151, 165, 170, 171], "abl": [3, 5, 15, 19, 80, 83, 134, 137, 138, 141, 155, 171, 215, 220], "ref": [3, 6, 29, 109, 163, 172, 175, 217], "specific_filenam": 3, "cap": 3, "capit": 3, "first": [3, 6, 15, 17, 19, 21, 22, 25, 29, 31, 34, 39, 43, 46, 49, 50, 51, 52, 54, 55, 56, 59, 62, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 104, 105, 106, 107, 108, 109, 111, 112, 114, 116, 121, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 146, 147, 148, 149, 150, 155, 156, 157, 163, 165, 167, 170, 171, 172, 173, 175, 176, 177, 216, 233, 236, 248], "letter": [3, 105, 175], "constrain": [3, 24, 25, 33, 35, 36, 40, 44, 47, 67, 68, 69, 79, 80, 83, 84, 88, 89, 90, 95, 153, 158, 165, 166, 167, 168, 170, 171, 175, 177, 194, 198, 221, 222, 223, 226, 234, 241], "deconvolut": [3, 24, 25, 28, 30, 33, 35, 36, 40, 44, 47, 53, 67, 68, 69, 79, 84, 90, 95, 118, 120, 153, 158, 159, 167, 168, 170, 171, 175, 177, 194, 220, 221, 224, 226, 234, 241], "csd": [3, 24, 25, 33, 35, 36, 37, 40, 44, 45, 48, 68, 69, 71, 79, 89, 95, 147, 153, 158, 161, 170, 171, 177, 213, 215, 217, 218, 221, 222, 223, 224, 225, 226, 227, 231, 233, 234, 235], "those": [3, 6, 13, 15, 25, 29, 33, 34, 40, 62, 64, 66, 70, 78, 84, 86, 104, 112, 131, 137, 157, 163, 165, 167, 171, 172, 175, 177, 248], "case": [3, 6, 15, 19, 21, 22, 24, 29, 36, 39, 50, 55, 62, 73, 79, 83, 84, 94, 96, 97, 108, 111, 128, 135, 138, 141, 142, 143, 148, 149, 151, 152, 154, 155, 156, 157, 163, 165, 167, 169, 171, 172, 175, 176, 177, 180, 181, 213, 218, 221, 237, 238, 241], "where": [3, 6, 13, 16, 19, 21, 22, 24, 25, 29, 34, 35, 40, 46, 47, 52, 64, 66, 70, 71, 72, 73, 78, 80, 82, 83, 84, 85, 87, 88, 89, 90, 92, 94, 97, 99, 100, 104, 105, 113, 123, 125, 126, 130, 131, 135, 138, 141, 142, 143, 144, 147, 149, 151, 155, 157, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 195, 196, 202, 205, 208, 210, 211, 225, 237, 238, 241, 248], "common": [3, 5, 13, 22, 38, 43, 58, 60, 70, 73, 83, 85, 89, 94, 98, 104, 108, 138, 141, 147, 154, 160, 162, 163, 165, 166, 169, 171, 174, 175, 177, 220], "lowercas": [3, 225, 226], "superior": [3, 29, 62, 104, 131, 165, 169], "longitudin": [3, 62, 171], "fasciculu": [3, 62, 100, 108, 109, 134, 147, 148, 149, 166], "slf": [3, 62], "customari": 3, "word": [3, 5, 6, 33, 71, 86, 111, 157, 163, 171, 174, 176, 213, 219, 233], "underscor": 3, "figur": [3, 25, 29, 34, 38, 40, 47, 49, 50, 51, 53, 55, 62, 64, 66, 74, 76, 79, 80, 82, 84, 85, 86, 87, 93, 96, 97, 104, 105, 106, 107, 116, 121, 128, 130, 131, 158, 165, 175, 176, 177, 200, 213, 215, 216, 217, 224, 233], "font": [3, 176, 227], "caption": [3, 233], "bold": [3, 5, 134, 176], "face": [3, 165, 166, 167, 171, 173, 178, 220, 222], "part": [3, 19, 24, 25, 34, 44, 55, 64, 66, 69, 71, 78, 79, 83, 85, 88, 89, 90, 96, 113, 138, 142, 144, 145, 147, 159, 163, 165, 167, 169, 170, 171, 172, 173, 175, 177, 195, 196, 215, 222, 236, 241], "rel": [3, 5, 6, 21, 25, 29, 39, 69, 78, 94, 123, 126, 149, 165, 167, 168, 171, 174, 175, 177, 213, 215, 218, 219, 220], "path": [3, 19, 29, 36, 43, 44, 58, 60, 64, 72, 73, 79, 80, 96, 97, 100, 104, 123, 127, 129, 137, 138, 141, 151, 152, 154, 155, 156, 157, 163, 165, 166, 168, 169, 170, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 208, 210, 211, 213, 214, 215, 218, 222, 225, 226, 233, 234], "backquot": 3, "inlin": [3, 213, 217], "devel": [3, 19, 73, 75, 82, 83, 84, 87, 88, 89, 93, 100, 104, 225], "sign": [3, 73, 163, 165, 175, 222, 226, 238, 241], "enclos": 3, "A": [3, 6, 7, 13, 18, 22, 24, 25, 29, 31, 34, 35, 38, 39, 40, 51, 52, 53, 55, 58, 59, 66, 67, 69, 71, 72, 73, 74, 79, 80, 83, 84, 85, 88, 89, 90, 94, 96, 99, 108, 113, 116, 117, 123, 124, 125, 126, 128, 130, 134, 135, 136, 137, 138, 141, 142, 144, 145, 146, 147, 148, 149, 152, 154, 155, 157, 158, 159, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 218, 219, 220, 221, 223, 224, 237, 238, 241, 243, 244, 248], "summari": [4, 5, 10, 14, 20, 21, 135, 158, 169, 170, 178, 224], "classifi": [4, 35, 40, 53, 84, 116, 158, 172, 178, 214, 215, 223, 224, 227], "meaning": [4, 74, 83, 171], "categori": [4, 167, 171, 175], "bf": [4, 16, 24, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 232, 233], "rf": [4, 142, 171, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 233, 239], "refactor": [4, 6, 158, 213, 214, 217, 218, 220, 221, 222, 223, 224, 226, 227, 233], "nf": [4, 5, 6, 145, 158, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "bw": [4, 215], "address": [4, 5, 216, 219], "opt": [4, 29, 177, 218, 221, 222, 225, 230, 233], "bk": 4, "fail": [4, 21, 73, 91, 97, 163, 169, 171, 213, 214, 215, 217, 218, 222, 223, 224, 226, 227, 230, 231, 233, 250], "pl": [4, 23], "pylint": 4, "happier": 4, "kind": [4, 55, 69, 86, 94, 131, 163, 171, 175, 222], "style": [4, 18, 20, 44, 161, 165, 171, 173, 176, 214, 215, 216, 217, 218, 219, 220, 224, 225, 227, 228, 230, 231, 233], "affect": [4, 6, 51, 53, 84, 86, 152, 170], "might": [4, 5, 10, 19, 21, 22, 73, 83, 84, 94, 109, 131, 147, 163, 165, 167, 168, 169, 170, 171, 172, 177, 187, 188, 218, 226], "look": [4, 6, 7, 11, 15, 19, 20, 21, 43, 56, 64, 71, 88, 89, 90, 94, 96, 100, 102, 108, 116, 130, 142, 143, 146, 147, 160, 167, 171, 175, 214, 215, 217, 220, 222, 235, 246, 249], "relax": [4, 214, 222], "slightli": [4, 86, 97, 163, 168, 171, 175, 241], "attempt": [4, 97, 171, 175, 225, 233], "failur": [4, 36, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 226, 227, 230], "fact": [4, 55, 144, 155], "veri": [4, 5, 9, 49, 55, 59, 60, 62, 64, 73, 78, 82, 83, 90, 94, 96, 99, 100, 107, 122, 135, 138, 141, 142, 149, 155, 163, 165, 169, 171, 175, 177, 185, 241], "within": [4, 33, 36, 44, 55, 70, 71, 78, 84, 109, 113, 123, 126, 146, 155, 157, 161, 163, 165, 166, 167, 169, 171, 172, 173, 175], "dp": [4, 84, 175, 230], "up": [4, 5, 10, 13, 14, 16, 19, 21, 32, 36, 39, 44, 59, 73, 86, 88, 89, 91, 98, 108, 126, 128, 130, 135, 136, 137, 142, 143, 158, 161, 163, 165, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 204, 213, 214, 215, 218, 220, 222, 223, 224, 225, 226, 230, 233, 237, 238, 248, 250], "habit": [4, 20], "becaus": [4, 6, 15, 21, 29, 34, 36, 40, 52, 59, 66, 73, 77, 85, 97, 104, 112, 119, 122, 125, 128, 131, 134, 137, 142, 151, 155, 157, 163, 165, 167, 171, 172, 173, 217, 237], "glanc": 4, "sourc": [4, 18, 20, 21, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 163, 165, 167, 171, 172, 175, 177, 220, 248], "person": 5, "gitconfig": 5, "home": [5, 9, 19, 64, 166, 250], "yourdomain": [5, 16], "com": [5, 6, 8, 9, 15, 16, 17, 19, 21, 22, 73, 83, 88, 100, 147, 148, 149, 156, 165, 168, 175, 177, 179, 243, 244], "ci": [5, 22, 158, 214, 215, 218, 224, 225, 226, 227, 232, 233], "co": [5, 21, 97, 130, 143, 163, 165, 173, 175, 241, 242], "checkout": [5, 6, 13, 15, 16, 21], "statu": [5, 6, 13, 16, 105, 163, 175, 213, 225, 230], "br": 5, "wdiff": 5, "diff": [5, 6, 7, 13, 15, 62, 163], "color": [5, 25, 29, 31, 34, 38, 39, 51, 56, 62, 66, 69, 78, 82, 86, 94, 98, 99, 100, 102, 105, 106, 108, 109, 111, 112, 113, 114, 116, 124, 125, 126, 130, 131, 134, 136, 137, 147, 148, 158, 163, 169, 171, 172, 175, 176, 177, 195, 196, 200, 213, 215, 217, 218, 222, 230, 246], "vim": [5, 142], "config": [5, 13, 16, 177, 213, 218, 222, 223, 232, 233], "copi": [5, 6, 10, 14, 16, 17, 29, 38, 39, 40, 44, 74, 94, 97, 108, 109, 131, 134, 137, 141, 163, 166, 169, 171, 172, 175, 177, 217, 222, 225], "practic": [5, 24, 51, 62, 71, 80, 83, 90, 92, 128, 152, 165, 171, 217, 227, 241], "tell": [5, 16, 17, 64, 111, 113, 172, 174, 177], "who": [5, 15, 16, 20, 21, 56, 64, 163, 165, 171], "simplest": [5, 16], "Of": [5, 73, 163], "cours": [5, 13, 20, 73, 81, 86, 159, 163, 237], "ll": [5, 6, 15, 17, 19, 20, 21, 29, 34, 36, 66, 72, 89, 90, 104, 123, 131, 134, 137, 171, 248], "actual": [5, 6, 44, 94, 130, 141, 163, 165, 170, 171, 172, 173, 175, 214, 215, 237, 238], "benefit": [5, 44, 51, 89, 161], "shorten": [5, 71, 89], "Or": [5, 6, 19, 34, 60, 64, 66, 71, 142, 171], "give": [5, 6, 9, 13, 17, 20, 21, 34, 43, 50, 55, 59, 62, 66, 70, 71, 82, 88, 104, 113, 125, 142, 151, 165, 167, 168, 171, 175, 177, 190, 214, 215, 216, 224, 230], "nice": [5, 13, 16, 56, 67, 91, 173, 177], "get": [5, 6, 11, 12, 13, 14, 16, 17, 18, 20, 21, 25, 31, 32, 40, 44, 46, 47, 53, 55, 56, 63, 65, 75, 76, 81, 82, 83, 84, 89, 93, 96, 97, 98, 100, 104, 105, 106, 108, 111, 112, 123, 126, 128, 131, 134, 137, 138, 141, 145, 147, 148, 151, 155, 157, 163, 165, 166, 167, 168, 169, 170, 171, 172, 175, 177, 214, 217, 218, 220, 224, 226, 229, 230, 233, 234, 237, 238, 248], "lg": [5, 6], "graph": [5, 6, 7, 15, 175, 178, 224], "pretti": [5, 69, 104], "cred": 5, "h": [5, 73, 74, 85, 89, 90, 96, 97, 138, 141, 146, 154, 155, 163, 165, 167, 170, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 222], "creset": 5, "yellow": [5, 116, 131, 147], "cgreen": 5, "cr": [5, 166], "blue": [5, 31, 56, 62, 69, 74, 100, 116, 128, 135, 136, 171], "abbrev": 5, "date": [5, 22, 169, 214, 215], "6d8e1e": 5, "head": [5, 6, 15, 29, 50, 54, 59, 94, 222], "origin": [5, 6, 16, 17, 24, 25, 34, 38, 40, 43, 44, 49, 50, 51, 52, 53, 54, 55, 59, 64, 66, 72, 74, 76, 79, 80, 82, 83, 85, 86, 88, 89, 91, 93, 94, 96, 97, 104, 107, 108, 111, 134, 148, 149, 151, 161, 163, 165, 167, 170, 171, 172, 173, 175, 177, 178, 185, 205, 213, 222, 224, 225, 226, 233, 241, 242], "my": [5, 6, 15, 142, 160, 214, 215, 220, 226, 230], "45": [5, 25, 32, 33, 34, 35, 36, 37, 40, 51, 53, 66, 67, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 100, 102, 116, 126, 128, 131, 136, 137, 163, 166, 171, 220, 223], "minut": [5, 19, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137], "ago": 5, "matthew": [5, 20, 21, 23, 213, 214, 215, 217, 218, 220, 221, 222, 223], "d304a73": 5, "placehold": [5, 163], "pull": [5, 6, 8, 13, 15, 16, 123, 145, 158, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "48": [5, 25, 32, 33, 35, 36, 37, 40, 53, 70, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 88, 166, 171, 215, 220], "hhuuggoo": 5, "week": [5, 233], "jonathan": 5, "terhorst": 5, "4aff2a8": 5, "35": [5, 24, 25, 29, 32, 33, 35, 36, 37, 38, 39, 40, 53, 71, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85, 86, 87, 96, 97, 98, 104, 105, 106, 114, 128, 131, 134, 156, 163, 166, 167, 168, 171, 173, 220, 223, 241], "test_bugfix": 5, "hugo": 5, "a7ff2e5": 5, "discuss": [5, 56, 72, 104, 122, 160, 165, 171, 175, 242, 248], "propos": [5, 29, 40, 50, 52, 77, 78, 80, 82, 86, 88, 94, 104, 105, 106, 116, 119, 146, 155, 156, 163, 167, 170, 171, 175, 241], "made": [5, 6, 15, 16, 20, 43, 71, 83, 111, 112, 138, 141, 163, 171, 175, 223, 237, 238, 242], "summit": 5, "corran": 5, "webster": 5, "68f6752": 5, "implement": [5, 6, 24, 25, 29, 40, 51, 56, 69, 79, 80, 83, 84, 89, 91, 94, 96, 97, 104, 105, 106, 113, 138, 144, 145, 156, 158, 163, 165, 167, 168, 169, 171, 175, 177, 215, 218, 219, 220, 222, 223, 224, 225, 230, 232, 235, 241], "axisindex": 5, "index_bi": 5, "ax": [5, 29, 50, 51, 52, 53, 54, 55, 59, 62, 69, 74, 75, 80, 82, 85, 86, 87, 88, 89, 94, 96, 97, 104, 105, 106, 122, 126, 128, 130, 143, 163, 165, 175, 176], "sketchi": 5, "right": [5, 6, 15, 21, 24, 25, 29, 40, 51, 52, 53, 54, 55, 59, 62, 64, 72, 74, 77, 82, 83, 85, 87, 88, 94, 96, 99, 104, 119, 123, 128, 131, 134, 135, 137, 142, 143, 147, 163, 165, 166, 169, 171, 172, 176], "corr": 5, "376adbd": 5, "46": [5, 24, 25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 88, 93, 108, 109, 124, 171, 220], "b605216": 5, "joshu": 5, "api": [5, 19, 43, 123, 145, 158, 163, 169, 171, 174, 213, 216, 217, 218, 220, 222, 227], "2e991e8": 5, "outer": [5, 87, 88, 163, 171], "7beda5a": 5, "prevent": [5, 43, 73, 163, 171, 172, 175, 177, 181], "axi": [5, 51, 53, 55, 56, 62, 67, 75, 76, 80, 81, 83, 86, 92, 93, 97, 102, 104, 116, 121, 122, 143, 144, 155, 163, 165, 167, 169, 171, 172, 173, 175, 176, 177, 199, 204, 218, 220, 224, 227, 237, 242], "throw": [5, 217, 224], "equal": [5, 24, 25, 29, 36, 71, 76, 78, 83, 86, 93, 99, 102, 130, 155, 163, 165, 168, 171, 172, 173, 175, 176, 177, 211, 217, 220, 222, 226, 237, 238], "non": [5, 24, 25, 29, 38, 44, 50, 52, 53, 55, 57, 59, 61, 64, 67, 71, 72, 73, 74, 80, 82, 83, 84, 85, 89, 96, 97, 100, 104, 121, 135, 137, 142, 151, 155, 158, 161, 163, 165, 166, 167, 168, 171, 172, 175, 177, 189, 190, 194, 195, 196, 198, 215, 217, 219, 220, 221, 222, 223, 226, 230, 231, 232, 233, 234, 237, 238, 241, 243, 244], "65af65": 5, "convert": [5, 21, 24, 73, 85, 91, 121, 160, 165, 168, 169, 170, 171, 172, 175, 177, 194, 214, 218, 224, 226, 232, 233], "unit": [5, 23, 44, 78, 82, 86, 130, 144, 155, 161, 165, 166, 167, 171, 173, 175, 176, 177, 186, 187, 194, 196, 201, 237, 238, 239, 241], "assert": [5, 131, 217, 222, 227], "956fbab": 5, "remot": [5, 6, 13, 15, 16, 17, 166], "upstream": [5, 6, 13, 15, 16, 21], "thank": [5, 7, 16, 171], "yuri": 5, "zaytsev": 5, "post": [5, 13, 163, 236], "alreadi": [6, 15, 16, 19, 21, 29, 34, 38, 60, 66, 82, 83, 102, 104, 106, 108, 109, 112, 124, 147, 163, 165, 166, 169, 170, 172, 174, 175], "own": [6, 10, 12, 13, 14, 15, 16, 17, 43, 56, 64, 72, 111, 142, 148, 151, 152, 154, 155, 156, 157, 158, 170, 171, 177, 222, 227, 229, 230], "fork": [6, 10, 14, 16, 220], "readi": [6, 13, 21, 47, 71, 79, 105, 113, 166, 214, 248], "real": [6, 72, 85, 123, 130, 142, 144, 158, 163, 165, 168, 171, 173, 175, 241], "what": [6, 17, 21, 34, 59, 62, 64, 66, 83, 86, 89, 94, 96, 100, 102, 105, 108, 111, 112, 130, 134, 137, 142, 145, 146, 147, 163, 169, 171, 172, 173, 177, 246, 250], "anyth": [6, 16, 141, 163, 165, 175, 222, 229], "fetch": [6, 15, 17, 29, 31, 43, 46, 47, 51, 53, 54, 59, 62, 67, 69, 72, 73, 78, 83, 84, 85, 94, 96, 97, 104, 106, 108, 109, 116, 124, 125, 134, 150, 151, 152, 154, 155, 156, 157, 166, 213, 215, 220, 223, 224, 225, 227], "task": [6, 116, 162, 175], "ipython": [6, 19, 29, 142, 215, 224, 232, 235, 245], "purpos": [6, 39, 44, 51, 56, 58, 64, 71, 73, 80, 83, 84, 90, 94, 97, 99, 113, 114, 121, 123, 151, 155, 157, 163, 165, 166, 171, 172, 176, 177, 215, 238, 250], "bugfix": [6, 213, 233], "databas": 6, "possibli": [6, 78, 163, 174, 175, 213], "find": [6, 9, 12, 16, 19, 21, 25, 29, 35, 46, 59, 71, 78, 81, 83, 90, 99, 104, 105, 106, 108, 109, 116, 123, 130, 131, 134, 142, 150, 155, 157, 163, 165, 167, 168, 171, 172, 174, 175, 177, 186, 187, 193, 194, 195, 196, 198, 201, 215, 220, 222, 248, 249], "yourself": [6, 9, 17, 160], "mail": [6, 16, 21, 23, 165, 213, 236, 248, 249], "stuck": [6, 96], "maintain": [6, 10, 14, 22, 24, 43, 71, 146], "ve": [6, 15, 16, 17, 19, 34, 66, 72, 123, 131, 165, 175, 238], "why": [6, 16, 21, 43, 78, 88, 96, 142, 155, 230], "did": [6, 78, 94, 106, 156, 158, 165, 170, 229], "linux": [6, 13, 21, 22, 146, 218, 223, 227, 228, 235], "sound": [6, 88, 99], "strang": [6, 218, 227], "confus": [6, 171, 222, 230], "link": [6, 13, 15, 21, 147, 165, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 230, 231, 233], "repo": [6, 15, 16, 21, 222, 226, 229], "down": [6, 8, 85, 111, 130, 137, 143, 163, 165, 170, 171, 175, 178, 222, 228, 237, 238], "branchnam": 6, "collect": [6, 25, 89, 160, 163, 166, 169, 170, 171, 174, 175, 218, 230, 241, 243, 244], "often": [6, 21, 59, 60, 78, 89, 94, 128, 130, 131, 144, 165, 171], "someon": [6, 15, 122], "choos": [6, 31, 49, 50, 58, 78, 83, 107, 135, 151, 156, 159, 171, 175, 230], "remind": [6, 15, 143, 218], "rest": [6, 15, 23, 55, 83, 84, 163, 175], "abil": [6, 89, 100, 137, 152, 158, 225], "fly": [6, 111, 112, 143], "public": [6, 20, 21, 116, 143, 145, 158, 166, 171, 215], "correctli": [6, 35, 72, 169, 213, 217, 218, 222, 229], "hack": [6, 16], "my_new_fil": 6, "am": [6, 16, 21, 74], "messag": [6, 16, 18, 20, 21, 134, 137, 163, 165, 167, 171, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 218, 224, 225, 227, 230, 231], "ny": [6, 23, 96, 165], "discard": [6, 21, 25, 131, 165, 166, 167, 171, 214, 230], "readm": [6, 21, 213, 214, 215, 216, 217, 218, 222, 224, 225, 226, 230], "untrack": 6, "new_file_nam": 6, "flag": [6, 16, 82, 108, 131, 146, 158, 163, 165, 171, 173, 177, 181, 216, 217, 222, 230], "just": [6, 7, 8, 9, 12, 15, 16, 17, 20, 21, 62, 64, 75, 76, 78, 81, 82, 83, 90, 93, 96, 100, 102, 104, 135, 138, 141, 142, 154, 163, 169, 170, 171, 175, 176, 177, 200, 213, 223, 224, 235, 248], "signal": [6, 16, 29, 39, 44, 47, 51, 52, 55, 59, 62, 64, 67, 68, 69, 71, 76, 77, 80, 82, 84, 86, 87, 88, 89, 90, 93, 94, 95, 119, 121, 122, 142, 145, 151, 155, 158, 161, 162, 167, 170, 171, 173, 175, 176, 177, 195, 196, 197, 198, 208, 218, 220, 224, 226, 227, 229, 234, 237, 239, 241], "faith": [6, 16], "tangl": 6, "problem": [6, 22, 60, 73, 82, 83, 84, 88, 94, 96, 99, 105, 130, 142, 156, 158, 163, 165, 171, 175, 214, 215, 217, 218, 222, 227, 230, 231, 233], "manual": [6, 14, 15, 21, 43, 47, 62, 112, 114, 163, 166, 167, 170, 226], "url": [6, 17, 22, 166, 215, 222, 226, 233], "sai": [6, 15, 19, 21, 56, 62, 86, 99, 148, 149, 163, 165, 170, 171, 175, 221, 237, 238], "dropdown": 6, "menu": [6, 218], "left": [6, 24, 25, 29, 40, 50, 51, 52, 53, 54, 55, 59, 62, 64, 69, 72, 74, 77, 83, 85, 86, 87, 88, 90, 96, 97, 98, 99, 100, 104, 108, 109, 119, 123, 124, 128, 131, 134, 135, 137, 142, 143, 147, 148, 149, 163, 165, 166, 167, 169, 171, 172, 176, 233], "click": [6, 9, 137, 151, 152, 217], "button": [6, 9, 134, 137, 215, 224], "enter": [6, 21, 25, 29, 163, 167, 168, 171, 172, 175, 177, 193, 194, 199, 206, 207, 217], "titl": [6, 62, 76, 79, 86, 93, 109, 176, 177, 178, 213, 226], "attent": 6, "complic": 6, "think": [6, 16, 81, 126, 142, 171, 173, 237], "preliminari": [6, 171], "unwant": 6, "stuff": [6, 12, 15, 18, 220, 222, 224, 229], "even": [6, 16, 59, 75, 85, 88, 96, 102, 111, 113, 151, 160, 163, 165, 167, 168, 171, 172, 175, 177, 198, 241, 248], "account": [6, 10, 21, 24, 52, 72, 80, 88, 89, 94, 121, 163, 165, 166, 167, 171, 214, 227, 228, 241], "Then": [6, 7, 16, 17, 19, 21, 24, 25, 52, 54, 59, 60, 62, 82, 84, 98, 104, 109, 116, 134, 155, 156, 157, 163, 165, 167, 171, 175, 177, 237, 238, 248, 249], "collabor": [6, 23, 25, 236, 249, 250], "anyon": [6, 131], "els": [6, 16, 62, 109, 134, 142, 163, 165, 167, 169, 171, 173, 175, 176], "clone": [6, 8, 13, 16, 19, 21], "githhub": 6, "rememb": [6, 15], "ssh": [6, 9, 21], "protocol": [6, 83], "enh": [6, 213, 215, 216, 217, 218, 220, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233], "better": [6, 12, 16, 50, 51, 69, 72, 73, 74, 80, 86, 96, 104, 158, 160, 171, 215, 217, 223, 225, 226, 227, 230, 250], "graphic": 6, "represent": [6, 15, 33, 34, 36, 66, 72, 83, 86, 88, 94, 99, 114, 126, 131, 144, 157, 163, 165, 166, 169, 171, 175, 218, 241, 243, 244], "gitk": 6, "network": [6, 67, 79, 82, 104, 147, 148, 155, 158, 162, 166, 170, 243, 244], "final": [6, 16, 21, 34, 39, 52, 64, 66, 71, 73, 77, 78, 82, 83, 85, 86, 87, 89, 90, 96, 97, 98, 104, 105, 114, 119, 121, 130, 131, 134, 163, 165, 167, 171, 172, 177, 246, 248], "fanci": 6, "let": [6, 15, 20, 24, 29, 32, 34, 37, 43, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 64, 66, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 85, 87, 88, 91, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 108, 109, 111, 112, 113, 114, 119, 122, 124, 125, 128, 130, 131, 134, 135, 136, 137, 138, 141, 143, 146, 147, 148, 149, 150, 163, 175, 216, 248, 250], "thought": [6, 130, 144], "cool": [6, 15, 128], "At": [6, 21, 44, 69, 84, 104, 161, 163, 165], "stage": [6, 82, 96, 105, 155, 165, 171, 177, 197], "mayb": [6, 163, 167, 171, 175, 225], "back": [6, 16, 21, 29, 105, 106, 128, 134, 143, 145, 170, 171, 175, 177, 211, 213, 220, 222, 226, 229, 233], "meantim": 6, "progress": [6, 16, 74, 86, 89, 108, 147, 156, 158, 163, 167, 170, 177, 179, 190, 207, 215, 227, 230], "sternli": 6, "advis": [6, 84, 165, 171, 172, 177], "messi": 6, "worri": [6, 36, 147], "got": [6, 15, 55], "littl": [6, 13, 55, 227], "ahead": [6, 96, 134, 216], "But": [6, 20, 29, 55, 56, 94, 143, 165], "sometim": [6, 19, 36, 46, 55, 130, 131, 142, 224], "situat": [6, 143], "replai": [6, 176], "had": [6, 59, 64, 175], "state": [6, 21, 40, 43, 83, 85, 88, 94, 111, 158, 165, 169, 170, 175, 222, 224, 225, 227, 230, 235], "repres": [6, 24, 25, 36, 46, 51, 70, 78, 80, 85, 86, 87, 88, 90, 91, 111, 113, 114, 121, 126, 130, 131, 142, 144, 147, 149, 155, 157, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 185, 198, 204, 218, 241, 242], "tear": 6, "backup": 6, "onto": [6, 24, 143, 165, 171, 176, 242], "succinctli": 6, "doesn": [6, 21, 89, 165, 213, 214, 215, 217, 222, 231, 233, 249], "conflict": [6, 19, 21, 177, 217], "resolv": [6, 71, 72, 73, 77, 84, 119, 155, 160, 167, 168, 171, 177, 194, 218, 219, 232, 241], "man": 6, "end": [6, 15, 19, 22, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 143, 147, 155, 165, 170, 171, 172, 175, 226, 237, 238, 241], "luckili": 6, "straightforward": [6, 170], "mistak": [6, 142, 169, 224, 226], "abort": [6, 218], "notic": [6, 86, 99, 131, 143, 151, 163, 165, 166, 172, 175, 177], "reset": [6, 165, 177, 178], "hard": [6, 51, 73, 171, 227], "forgot": 6, "reflog": 6, "8630830": 6, "immedi": [6, 19, 143], "278dd2a": 6, "finish": [6, 16, 99, 105, 170, 222, 248], "11ee694744f2552d": 6, "26aa21a": 6, "lib": [6, 25, 51, 64, 73, 80, 84, 88, 134, 166], "seek_gzip_factori": 6, "leak": [6, 213, 222], "gzip": 6, "obj": [6, 134, 137, 163, 166, 169, 172, 176, 177, 178, 226], "botch": 6, "embarrass": 6, "typo": [6, 145, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233], "perhap": [6, 227], "fals": [6, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 51, 53, 55, 56, 66, 67, 70, 71, 73, 74, 76, 77, 78, 81, 83, 84, 85, 89, 90, 91, 92, 94, 98, 99, 100, 104, 108, 109, 111, 112, 113, 114, 119, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 156, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 185, 190, 196, 213, 230, 232, 233], "would": [6, 7, 21, 22, 29, 59, 71, 83, 90, 94, 97, 99, 100, 106, 123, 134, 137, 138, 141, 142, 149, 150, 156, 165, 171, 175, 177, 199, 200], "poster": 6, "interact": [6, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 56, 66, 67, 70, 71, 77, 78, 83, 84, 89, 90, 91, 92, 94, 98, 100, 104, 108, 109, 111, 112, 113, 114, 119, 122, 124, 126, 128, 130, 131, 132, 133, 136, 137, 147, 158, 163, 165, 171, 172, 173, 175, 176, 177, 185, 200, 218, 233, 234, 235, 245], "suppos": [6, 106, 222], "eadc391": 6, "remain": [6, 131, 163, 165, 166, 167, 171, 175, 237], "a815645": 6, "2dec1ac": 6, "few": [6, 19, 36, 46, 94, 134, 146, 175, 214, 215, 219, 220, 221, 222, 223, 235, 245], "disabl": [6, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 56, 66, 67, 70, 71, 77, 78, 83, 89, 90, 91, 92, 94, 111, 112, 113, 114, 119, 122, 130, 131, 137, 167, 171, 177, 179, 220, 233], "13d7934": 6, "6ad92e5": 6, "instanc": [6, 29, 55, 72, 73, 74, 78, 85, 87, 94, 105, 106, 111, 112, 116, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176], "maskedconst": 6, "29001ed": 6, "pre": [6, 21, 50, 55, 72, 73, 74, 80, 85, 99, 100, 106, 125, 163, 170, 171, 172, 177, 180, 215, 217, 218, 219, 226, 227, 233], "nep": [6, 227], "copul": 6, "structured_array_extens": 6, "sensibl": [6, 15], "combin": [6, 24, 25, 34, 39, 44, 50, 59, 66, 83, 84, 86, 87, 89, 90, 92, 102, 131, 139, 140, 163, 165, 167, 171, 175, 177, 215, 233, 234], "pick": [6, 19, 21, 55, 137, 216], "reword": [6, 221], "amend": 6, "squash": [6, 220], "meld": 6, "fixup": [6, 220], "THAT": 6, "WILL": 6, "BE": [6, 23, 165, 172, 177], "lost": [6, 43], "howev": [6, 22, 36, 38, 43, 46, 53, 58, 72, 73, 76, 80, 83, 84, 85, 86, 88, 89, 104, 111, 130, 131, 134, 137, 142, 157, 165, 167, 170, 171, 172, 177, 187, 188, 241, 248], "everyth": [6, 20, 21, 43, 134, 138, 141, 175, 220], "achiev": [6, 24, 50, 84, 87, 97, 99, 111, 116, 156, 175], "mean": [6, 17, 24, 29, 44, 50, 51, 53, 55, 57, 61, 62, 67, 68, 69, 72, 74, 76, 78, 79, 80, 83, 86, 89, 93, 95, 96, 98, 99, 104, 108, 111, 113, 123, 125, 137, 143, 144, 151, 153, 158, 161, 163, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 185, 187, 189, 195, 196, 198, 199, 200, 210, 211, 222, 223, 224, 227, 234, 242], "ii": [6, 165, 175], "collaps": [6, 143], "three": [6, 34, 44, 64, 66, 78, 82, 83, 84, 85, 86, 89, 92, 96, 97, 102, 105, 113, 116, 131, 142, 143, 144, 155, 157, 161, 163, 165, 166, 167, 169, 171, 173, 175, 176], "quit": [6, 59, 83, 130, 171], "bring": [6, 34, 66, 104, 106, 134, 156, 163, 227, 233], "revis": [6, 21], "detach": 6, "721fc64": 6, "foo": 6, "199": [6, 59, 73, 82, 83, 167, 221], "insert": [6, 56, 122, 135, 172, 178], "66": [6, 25, 32, 33, 35, 36, 37, 40, 53, 70, 72, 73, 74, 79, 80, 82, 83, 84, 85, 87, 88, 100, 114, 146, 171, 220], "0f22701": 6, "79": [6, 25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85, 86, 87, 88, 220], "61": [6, 25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 87, 93, 111, 158, 165, 171, 172, 220, 229], "successfulli": [6, 21, 241], "sophist": 6, "went": 6, "wrong": [6, 94, 165, 171, 214, 215, 216, 218, 220, 222, 223, 230, 233], "recoveri": [6, 243, 244], "possibl": [6, 13, 21, 22, 36, 43, 49, 56, 70, 71, 73, 75, 76, 81, 83, 84, 92, 93, 96, 107, 114, 137, 142, 143, 157, 163, 165, 166, 167, 168, 171, 172, 175, 177, 180, 193, 194, 195, 196, 197, 198, 199, 206, 207, 213, 217, 224, 227, 229, 230, 238, 245], "explain": [6, 13, 16, 22, 29, 82, 83, 96, 97, 98, 99, 100, 105, 106, 108, 109, 111, 112, 114, 116, 124, 125, 148, 149, 167, 223, 237, 238, 250], "yarik": 7, "imagin": [7, 143, 146, 165, 171, 175], "seri": [7, 13, 21, 91, 97, 138, 141, 163, 172, 173, 175, 218, 222, 225, 226, 241], "topic": [7, 86], "off": [7, 15, 38, 53, 62, 80, 86, 100, 102, 116, 149, 163, 177, 185, 215, 233], "effect": [7, 22, 24, 35, 38, 40, 51, 52, 72, 73, 80, 85, 86, 89, 94, 104, 105, 143, 151, 152, 157, 163, 165, 167, 169, 170, 171, 172, 175, 176, 177, 196, 200, 237, 238, 241, 243, 244], "step": [8, 21, 24, 29, 36, 39, 44, 47, 50, 51, 52, 55, 58, 59, 64, 67, 74, 80, 82, 84, 90, 94, 99, 102, 108, 123, 126, 128, 130, 136, 146, 147, 151, 152, 154, 155, 156, 157, 161, 163, 165, 167, 168, 170, 171, 173, 175, 177, 180, 210, 211, 214, 215, 224, 230, 232], "github": [8, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 29, 142, 158, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "repositori": [8, 15, 16, 19, 20, 248], "tree": [8, 19, 109, 172, 175, 177, 178], "onc": [9, 21, 43, 53, 73, 78, 81, 83, 84, 85, 86, 89, 94, 131, 135, 138, 141, 142, 152, 154, 163, 165, 171, 172, 175, 176, 177, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 204, 206, 208, 210, 211, 224, 237, 238, 241], "detail": [9, 10, 13, 14, 19, 22, 25, 29, 40, 43, 51, 53, 54, 55, 59, 73, 74, 80, 82, 84, 85, 87, 92, 96, 126, 142, 145, 146, 150, 165, 166, 171, 172, 213, 222, 226, 243], "repeat": [9, 32, 34, 36, 66, 71, 88, 89, 96, 230, 243, 244], "short": [9, 43, 85, 97, 126, 163, 168, 173, 175, 177, 222, 233, 237, 238], "paus": 9, "hardcor": 9, "action": [9, 21, 22, 43, 158, 176, 177, 230, 231, 233], "overview": [10, 14, 44, 68, 153, 227], "mirror": [10, 144, 165, 167, 178], "trunk": [10, 17, 21], "ask": [10, 21, 43, 145, 160, 249], "review": [10, 21, 230], "debian": [11, 222, 248], "ubuntu": [11, 22, 215, 218, 226, 230, 248], "sudo": [11, 19, 21, 248], "apt": [11, 19, 248], "fedora": 11, "yum": [11, 19], "download": [11, 21, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 146, 147, 148, 149, 153, 158, 159, 165, 166, 177, 192, 215, 217, 218, 221, 222, 223, 230, 231, 233, 243], "msysgit": 11, "osx": [11, 22, 213, 215, 218, 225, 227, 233], "recent": [11, 19, 22, 62, 86, 166, 167, 175, 215, 221, 231, 235], "sever": [12, 16, 21, 22, 62, 80, 83, 87, 88, 131, 157, 163, 175, 241], "comprehens": [12, 72], "our": [12, 15, 17, 20, 21, 32, 46, 53, 58, 62, 70, 71, 74, 78, 79, 82, 84, 86, 89, 91, 94, 96, 98, 99, 105, 111, 112, 113, 126, 128, 131, 134, 138, 141, 142, 145, 148, 149, 158, 163, 165, 166, 171, 175, 216, 218, 227, 229, 233, 246, 248, 249], "tailor": [12, 134], "host": 12, "servic": [12, 21, 165, 172, 177], "quicker": 12, "resourc": [12, 14, 18, 46, 79, 163, 166, 170, 217], "excel": [13, 16, 165], "guid": [13, 22, 90, 113, 145, 165, 170, 217, 224, 227], "pro": [13, 214], "book": [13, 172, 217], "depth": [13, 163, 165, 169, 170, 171, 172, 176, 177, 200], "cheat": 13, "sheet": 13, "cast": [13, 169, 170, 171, 177, 213, 215, 233], "video": [13, 20, 114, 158], "snippet": [13, 219, 246], "tos": 13, "magic": 13, "introduct": [13, 14, 18, 19, 28, 29, 30, 32, 35, 38, 40, 43, 44, 63, 65, 128, 131, 153, 226, 233, 234, 237], "intermedi": [13, 78, 171, 175], "parabl": 13, "concept": [13, 99, 100, 125, 145, 238], "foundat": [13, 145], "expand": [13, 80, 89, 163, 215, 229], "fernando": 13, "perez": 13, "mani": [13, 19, 29, 33, 39, 43, 56, 69, 71, 73, 83, 88, 96, 99, 126, 134, 135, 142, 145, 158, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 177, 193, 194, 199, 206, 207, 224, 230, 235, 248], "tip": [13, 143, 227], "technic": [13, 43], "svn": 13, "crash": [13, 215, 217, 218, 224], "subvers": 13, "thumb": [13, 108, 175], "linu": 13, "torvald": 13, "tool": [13, 19, 21, 22, 43, 64, 71, 96, 97, 104, 105, 106, 128, 131, 146, 156, 158, 163, 171, 172, 175, 176, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 248], "histori": [13, 165, 170, 222], "clean": [13, 19, 21, 25, 145, 158, 169, 172, 175, 215, 217, 218, 219, 220, 221, 223, 224, 230], "activ": [13, 49, 107, 135, 170, 176, 177, 200, 248], "conveni": [13, 97, 138, 141, 163, 177], "latest": [14, 18, 19, 22, 88, 158, 214, 230, 241, 248], "advanc": [14, 44, 51, 53, 55, 73, 85, 96, 97, 104, 105, 106, 132, 133, 138, 141, 145, 146, 156, 158, 160, 163, 167, 169, 171, 172, 177, 190, 199, 216, 234, 243, 244], "onlin": [14, 214, 221, 235], "peopl": [15, 142, 238], "Being": 15, "scari": 15, "rw": [15, 21], "incorpor": [15, 22, 163], "assum": [15, 29, 38, 55, 56, 59, 78, 82, 84, 89, 94, 99, 102, 104, 111, 112, 113, 121, 155, 163, 165, 167, 171, 172, 173, 175, 176, 177, 187, 188, 189, 194, 214, 215], "rebas": [15, 21, 215, 216, 217, 218, 219, 221], "detect": [15, 19, 59, 89, 94, 163, 165, 171, 175], "ff": [15, 172], "forc": [15, 21, 138, 141, 146, 148, 149, 165, 167, 175, 177, 230, 233], "forward": [15, 24, 29, 72, 73, 78, 82, 85, 163, 171, 175, 221], "rejoin": 15, "appear": [15, 83, 134, 166], "compact": [15, 144, 175], "second": [15, 21, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 155, 163, 165, 170, 171, 172, 173, 175, 176, 177, 220, 225, 233, 237], "uniqu": [15, 36, 67, 72, 84, 87, 88, 100, 109, 163, 165, 167, 168, 169, 170, 171, 172, 175, 227, 230, 233], "form": [15, 19, 21, 24, 78, 79, 96, 97, 155, 163, 165, 166, 167, 171, 172, 173, 175, 177, 237, 238], "discov": 16, "best": [16, 62, 71, 83, 142, 156, 163, 165, 168, 171, 175, 227], "easiest": [16, 19, 21, 50], "quickest": 16, "email": [16, 213], "im": [16, 29, 80, 82, 102, 113, 128, 130, 241], "somewher": 16, "test_my_bug": 16, "funni": 16, "send": [16, 20, 23, 248, 249], "warmli": 16, "safe": [16, 43, 158, 163, 169, 226], "leav": [16, 21, 76, 163, 165, 167, 171, 173, 175], "unmodifi": 16, "0001": [16, 171], "0002": [16, 89, 171], "switch": [16, 22, 55, 104, 105, 163, 171, 175, 215, 218, 219, 222, 231], "mode": [16, 19, 97, 116, 146, 155, 163, 165, 167, 169, 170, 172, 173, 175, 176, 177, 178, 195, 196, 200, 206, 213, 216, 221, 222], "refresh": 16, "pointer": 16, "investig": [17, 108, 124, 125, 147, 149, 163, 171, 172, 174, 177], "connect": [17, 29, 34, 35, 36, 40, 43, 66, 90, 99, 104, 126, 128, 129, 134, 157, 166, 168, 175, 177, 211, 215, 230, 233, 234, 242, 243, 244], "accident": [17, 214], "deliber": [17, 165], "satisfact": 17, "checklist": 18, "upload": [18, 215, 217, 232], "binari": [18, 44, 49, 86, 101, 103, 105, 107, 131, 157, 163, 165, 169, 170, 171, 172, 175, 176, 177, 200, 203, 204, 210, 211, 215, 218, 224, 230, 233, 234], "guidelin": [18, 20, 158, 216, 217, 219, 230, 249], "cython": [18, 19, 22, 142, 145, 158, 163, 165, 171, 172, 175, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 245, 248], "benchmark": [18, 215, 220], "prerequisit": 18, "embrac": 18, "speed": [18, 19, 39, 86, 88, 111, 142, 158, 163, 171, 172, 175, 177, 204, 222, 223, 225, 233, 245], "alwai": [20, 33, 43, 59, 62, 71, 73, 78, 83, 85, 86, 90, 142, 157, 167, 168, 171, 173, 175, 220, 226, 237], "seek": 20, "courag": 20, "scientist": [20, 56, 159], "dmri": [20, 44, 58, 60, 64, 68, 74, 78, 94, 95, 142, 154, 158, 159, 161, 166, 167, 171, 218, 234, 243, 244], "next": [19, 20, 21, 29, 32, 34, 39, 56, 62, 64, 66, 69, 73, 78, 82, 84, 86, 88, 91, 94, 96, 122, 123, 130, 131, 136, 138, 163, 165, 168, 170, 171, 173, 175, 176, 218, 248], "level": [20, 53, 58, 82, 86, 87, 88, 96, 97, 98, 102, 104, 105, 106, 142, 147, 149, 155, 163, 165, 167, 169, 170, 171, 172, 173, 175, 176, 177, 180, 214, 220, 224, 225], "share": [20, 23, 43, 72, 163, 222, 236, 249], "vision": [20, 24, 25, 163, 167, 171], "willing": 20, "lead": [20, 72, 78, 94, 104, 143, 165, 171, 237], "ian": [20, 23, 175, 220], "bago": [20, 23, 213, 214, 215, 217, 220, 221, 222, 223], "stefan": [20, 23, 39, 90, 171, 177, 213, 220, 221, 222, 223, 224], "primari": [20, 22, 171], "idea": [20, 34, 53, 55, 66, 71, 82, 97, 105, 142, 151, 155, 157, 163, 171, 175, 222, 229, 233, 236, 250], "nipi": [20, 21, 145, 165, 215, 220, 221, 226, 229, 236, 248, 250], "pitch": [20, 143, 165], "feedback": 20, "And": [20, 23, 43, 94, 96, 97, 104, 105, 106, 116, 123, 147, 175, 177, 210, 211], "hope": [20, 248, 250], "enjoi": 20, "apologi": 20, "low": [20, 25, 40, 44, 50, 73, 82, 83, 84, 85, 90, 94, 111, 126, 142, 151, 155, 161, 163, 165, 167, 170, 171, 172, 173, 175], "resolut": [20, 44, 60, 77, 79, 91, 96, 104, 105, 106, 119, 122, 142, 161, 163, 167, 169, 171, 172, 173, 177, 180, 204, 206, 218, 226, 230, 243, 244], "whether": [19, 21, 78, 113, 155, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 193, 194, 196], "outstand": 21, "delai": [21, 169], "travi": [213, 214, 215, 216, 217, 218, 219, 222, 225, 226, 227], "inde": 21, "doe": [21, 29, 33, 55, 73, 82, 83, 85, 86, 104, 111, 112, 128, 130, 142, 157, 163, 166, 167, 169, 170, 171, 172, 175, 177, 213, 214, 215, 217, 218, 221, 222, 224, 227, 229, 230, 231], "pr": [21, 75, 167, 171, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "changelog": [21, 213, 222, 223, 226], "partial": [21, 24, 35, 40, 80, 89, 100, 153, 157, 163, 169, 171, 175, 177, 211, 243, 244], "shortlog": 21, "recogn": [21, 108, 109, 172, 177, 178, 202, 205], "opportun": [21, 142], "mailmap": 21, "duplic": [21, 165, 166, 167, 171, 175, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 233], "author": [21, 163, 166, 172, 177, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "entri": [90, 163, 165, 171, 175, 213, 237], "copyright": [21, 163, 165, 166, 172, 177, 214, 215, 218, 222], "conf": [21, 165, 215], "licens": [21, 163, 166, 222], "realli": [21, 50, 75, 228], "autom": [21, 90, 104, 105, 106, 123, 156, 163, 174, 215], "pyx": [21, 165, 215, 216, 221, 222, 229], "doctest": [21, 165, 214, 216, 220, 221], "doctest_extmod": 21, "buildbot": [21, 213, 215, 221, 222, 223, 227, 235], "haven": [21, 64, 130], "yet": [21, 22, 44, 64, 68, 90, 163, 165], "long_descript": [], "info": [21, 64, 80, 98, 146, 165, 169, 170, 175, 177, 178, 213, 218, 219, 222, 227, 229], "diffthi": [], "valid": [21, 29, 35, 40, 43, 44, 67, 68, 71, 83, 86, 90, 95, 125, 158, 163, 166, 169, 170, 171, 175, 213, 214, 222, 225, 226, 230, 234], "green": [21, 31, 51, 56, 62, 82, 86, 100, 104, 105, 106, 109, 136, 148, 149, 171, 176, 224], "distclean": 21, "fxd": [19, 21], "build_ext": [], "inplac": [19, 51, 167, 227, 232], "pass": [21, 82, 96, 131, 138, 163, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 189, 204, 219], "sv": [165, 166], "moment": [21, 163, 171], "lot": [21, 36, 59, 83, 131, 142, 170, 171, 248], "autodoc": 21, "wheel": [21, 22, 137, 217, 218, 227, 229, 230, 231, 233], "builder": [21, 22], "yml": [21, 215], "appveyor": [158, 218, 225, 226], "present": [19, 21, 24, 25, 43, 44, 71, 73, 78, 85, 137, 170, 171, 175, 225, 230], "trigger": [21, 165, 220], "interfac": [21, 35, 93, 96, 134, 141, 145, 155, 157, 158, 163, 165, 167, 171, 173, 177, 190, 215, 221, 225, 229, 230], "macpython": 21, "privileg": 21, "trick": [21, 171, 177], "pypi": 21, "until": [21, 35, 71, 89, 93, 157, 163, 171, 172], "_version_extra": 21, "built": [21, 22, 55, 72, 89, 96, 163, 169, 170, 175], "setuptool": [19, 145, 232], "intro": [169, 218], "regist": [82, 96, 97, 98, 99, 100, 104, 105, 106, 108, 134, 148, 149, 156, 163, 169, 176, 177, 178, 185, 218, 219, 226], "sdist": [21, 231], "gztar": [], "zip": [44, 86, 111, 112, 113, 114, 233], "pypirc": [], "index": [44, 75, 83, 86, 94, 104, 127, 129, 163, 165, 167, 171, 172, 173, 175, 176, 215, 220, 221, 224, 230, 231, 233, 234], "server": 21, "usernam": 21, "password": 21, "login": [], "necessari": [19, 21, 22, 32, 34, 37, 38, 39, 43, 49, 50, 52, 53, 54, 55, 56, 59, 60, 62, 64, 66, 70, 73, 75, 76, 78, 79, 81, 83, 86, 88, 92, 93, 98, 107, 108, 109, 111, 112, 113, 114, 116, 124, 125, 128, 130, 131, 134, 163, 165, 166, 171, 175, 177, 227], "annot": [21, 51, 233], "mainten": [21, 214, 227], "further": [21, 22, 34, 38, 39, 62, 66, 82, 83, 94, 108, 163, 171, 172, 175, 245], "substanti": [21, 29, 53, 69, 94, 175], "maint": [21, 213, 215, 221, 222, 224, 225, 226, 228, 230, 231, 233], "dev": [19, 21, 163, 177, 180, 214, 215, 216, 218, 222, 223, 233], "bump": [21, 230, 233], "_version_micro": 21, "restor": [21, 44, 68, 89, 95, 151, 158, 161, 171, 177, 195, 196, 213, 215, 221, 222, 230, 234], "_version_minor": 21, "strategi": [21, 56, 62, 71, 73, 74, 83, 84, 85, 89, 94, 96, 97, 104, 123, 138, 141, 146, 163, 171, 177, 210, 243, 244], "seen": [21, 24, 83, 86, 102, 165, 171, 241], "spuriou": [21, 25, 83, 94, 99, 171, 175], "By": [21, 24, 25, 36, 43, 55, 64, 76, 78, 84, 89, 94, 98, 111, 112, 116, 137, 141, 143, 149, 163, 165, 170, 171, 172, 173, 175, 176, 237, 241], "field": [21, 24, 34, 43, 66, 82, 84, 94, 100, 104, 116, 142, 155, 156, 157, 163, 165, 166, 170, 172, 173, 175, 176, 177, 180, 181, 197, 214, 215, 220, 237, 238], "exact": [19, 21, 24, 52, 90, 109, 163, 165, 167, 171, 172, 173, 175, 229], "bdist32": [], "26": [22, 24, 25, 32, 33, 35, 36, 37, 40, 47, 48, 53, 59, 62, 67, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 93, 98, 104, 105, 106, 114, 156, 159, 163, 171, 172, 215, 220, 222], "27": [22, 25, 32, 33, 35, 36, 40, 53, 54, 55, 62, 67, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85, 86, 87, 88, 93, 95, 100, 151, 166, 167, 171, 216, 220, 226, 243, 244], "ex": [21, 171, 175, 177, 208], "bic": [21, 243, 244], "berkelei": [21, 23, 159], "edu": [21, 51, 64, 134, 142, 166, 175, 243, 244], "dist": [21, 100, 113, 163, 165, 175, 177, 178, 185], "win32": 222, "obvious": [21, 78], "admin": 21, "hand": [21, 69, 73, 159, 163], "python26": [], "bdist_egg": [], "bdist_wininst": [], "bdist": [], "mpkg": [21, 221], "egg": 21, "dmg": [21, 221], "permiss": [21, 165, 166, 172], "disk": [21, 56, 64, 134, 142, 165, 166, 169, 174, 176, 177, 182, 183, 230], "build_dmg": 21, "box": [21, 169, 172, 175, 177, 204, 208, 217, 233], "script": [21, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 146, 177, 194, 204, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 242, 248], "bdist_mpkg": 21, "reown_mpkg": 21, "correct": [21, 44, 51, 52, 56, 57, 61, 73, 77, 80, 88, 116, 119, 131, 142, 153, 158, 163, 165, 166, 167, 169, 170, 176, 177, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 226, 230, 233, 234, 243, 244], "announc": [21, 218], "With": [21, 64, 81, 83, 89, 98, 134, 163, 171, 218, 235], "fear": 21, "trembl": 21, "team": [23, 159, 172], "individu": [23, 85, 98, 99, 123, 125, 165, 170, 171, 173, 175, 215, 231], "indiana": [23, 145], "univers": [23, 34, 54, 66, 85, 145, 146, 157, 166, 171, 173, 175, 177, 210, 243, 244], "IN": [23, 165, 171, 172, 177], "usa": 23, "washington": [23, 51, 64, 134, 145, 166], "birmingham": 23, "uk": [23, 165], "databrick": 23, "san": [23, 165, 177, 210], "francisco": [23, 177, 210], "ca": [23, 142, 159, 171, 243, 244], "omar": [23, 213, 214, 215, 222, 223, 231], "googl": [19, 23, 145, 158, 225], "marc": [23, 134, 213, 214, 215, 216, 217, 218, 222, 223, 224], "alexandr": [23, 134, 213, 214, 215, 216, 217, 218, 222, 223, 224], "c\u00f4t\u00e9": [23, 134, 171, 213, 214, 215, 216, 217, 218, 223, 224], "microsoft": [22, 23], "research": [23, 79, 142, 166, 226, 250], "montreal": [23, 82, 159, 166, 171, 176, 177, 200], "qc": 23, "serg": [23, 134, 215, 216, 217, 218, 219, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "koudoro": [23, 108, 124, 125, 134, 147, 172, 174, 176, 177, 183, 184, 200, 205, 215, 216, 217, 218, 219, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "gabriel": [23, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 226, 229, 230, 232, 233], "girard": [23, 24, 25, 31, 35, 40, 157, 167, 175, 177, 211, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 226, 229, 230, 232, 233], "swiss": 23, "feder": 23, "institut": [23, 50, 54, 145, 151, 166, 167, 218], "technologi": [23, 50, 54, 151, 167, 171, 235], "epfl": [23, 92, 243, 244], "lausann": 23, "ch": [23, 92, 243, 244], "cambridg": [23, 34, 66, 85, 146, 157, 165, 171, 177, 210], "matthieu": [23, 214, 215, 216, 221, 222], "dumont": [23, 214, 215, 216, 221, 222], "imeka": 23, "sherbrook": [23, 50, 166, 243, 244], "ranveer": [23, 215, 216], "aggarw": [23, 176, 177, 200, 215, 216], "hyderabad": 23, "telangana": 23, "india": 23, "wonder": [23, 135], "retir": [23, 213, 218], "formerli": 23, "mrc": 23, "cognit": 23, "scienc": [23, 73, 145, 165, 175], "maxim": [23, 96, 97, 99, 102, 104, 116, 156, 163, 165, 167, 168, 171, 172, 175, 177, 178, 180, 189, 193, 194, 199, 206, 207, 213, 220, 221, 222, 223], "california": [23, 177, 210], "christoph": [23, 165, 213, 214, 215, 217, 218, 219, 221, 222, 224, 226], "houd": [23, 175, 213, 214, 215, 217, 218, 219, 221, 222, 224, 226], "francoi": [23, 218, 219, 224, 225, 226, 230, 231, 232, 233], "rh\u00e9ault": 23, "medic": [23, 54, 55, 62, 76, 81, 89, 92, 93, 96, 97, 100, 116, 145, 146, 151, 158, 163, 166, 167, 171, 172, 176, 177, 200, 201, 215, 216, 218, 241, 243, 244], "center": [23, 25, 29, 55, 71, 82, 85, 89, 96, 102, 128, 131, 134, 135, 136, 142, 151, 156, 157, 163, 165, 167, 169, 171, 172, 173, 175, 177, 179, 194, 210, 211, 213, 225], "umc": [23, 25], "utrecht": 23, "nl": [23, 171], "michael": [23, 213, 220, 222, 233], "paquett": [23, 213, 220, 222], "max": [23, 33, 44, 58, 62, 64, 67, 70, 78, 86, 96, 97, 104, 109, 126, 135, 137, 146, 157, 161, 165, 167, 168, 170, 171, 172, 175, 178, 220, 222, 237], "planck": 23, "leipzig": 23, "de": 23, "massachusett": 23, "hospit": [23, 243, 244], "ma": [23, 73, 128], "emanuel": [23, 220], "laboratori": 23, "nilab": 23, "trento": 23, "IT": 23, "yaroslav": [23, 215, 220, 232], "halchenco": 23, "pb": 23, "depart": [23, 145], "dartmouth": 23, "nh": 23, "emmanuel": [23, 221, 231, 233], "caruy": [23, 38, 89, 171, 177, 221], "recherch": 23, "en": [22, 23, 113, 143, 165, 171, 172, 177, 218], "informatiqu": 23, "syst\u00e8m": 23, "al\u00e9atoir": 23, "irisa": 23, "renn": 23, "fr": [23, 171], "sylvain": [23, 167, 177, 189, 221], "merlet": [23, 44, 92, 161, 171, 221], "inria": [23, 171], "sophia": [23, 171, 173], "antipoli": [23, 171, 173], "erick": 23, "ziegler": [23, 221], "universit\u00e9": 23, "li\u00e8g": 23, "kimberli": [23, 171, 221], "chan": [23, 69, 171, 221], "stanford": [23, 24, 25, 29, 34, 39, 54, 62, 66, 90, 96, 97, 104, 106, 131, 166, 213, 223, 227, 243, 244], "chantal": [23, 223], "tax": [23, 71, 73, 89, 171, 223], "cardiff": 23, "demian": [23, 166, 218, 222], "mauro": [23, 213, 217, 221, 222], "zucchelli": [23, 79, 171, 213, 217, 221, 222], "franc": 23, "rutger": [23, 83, 166, 171, 215, 216, 218], "fick": [23, 24, 25, 44, 83, 161, 166, 167, 171, 175, 215, 216, 218, 243, 244], "gregori": [23, 214, 215, 222, 226, 227], "lee": [23, 171, 175, 214, 215, 222, 226, 227], "cincinnati": 23, "children": [23, 94, 163, 165, 167, 171, 175, 177, 178, 199, 206], "oh": 23, "endolith": [23, 220], "york": 23, "matthia": [23, 221, 222], "ekman": [23, 221, 222], "donder": 23, "behaviour": [23, 73, 111, 163, 171, 175, 220], "nijmegen": 23, "andrew": [23, 147, 222], "lawrenc": [23, 222, 225], "kesshi": [23, 215, 217, 218, 219, 222], "jordan": [23, 126, 128, 175, 215, 217, 218, 219, 222], "maria": [23, 220], "luisa": [23, 220], "mandelli": [23, 220], "adam": [23, 170, 224], "rybinski": 23, "jagiellonian": 23, "krakow": 23, "qiyuan": [23, 223], "tian": [23, 223], "jon": [23, 215, 216, 217, 218, 219, 224, 225, 226, 227, 228, 230, 231, 233], "haitz": [23, 215, 216, 217, 218, 219, 224, 225, 226, 227, 228, 230, 231, 233], "legarreta": [23, 215, 216, 217, 218, 219, 224, 225, 226, 227, 228, 230, 231, 233], "gorro\u00f1o": [23, 216, 217, 218, 219, 224, 225, 226, 227, 228, 230, 231, 233], "brigham": 23, "women": 23, "harvard": [23, 175], "school": [23, 159], "boston": 23, "champalimaud": 23, "programm": 23, "centr": [23, 97, 142, 165, 166], "unknown": [23, 24, 171], "lisbon": 23, "pt": [23, 73, 130, 175, 176, 224], "stephan": [23, 214, 215], "meester": [23, 24, 25, 167, 175, 214, 215], "eindhoven": 23, "himanshu": [23, 214], "mishra": [23, 214], "indian": 23, "karaghpur": 23, "alexand": [23, 44, 79, 80, 85, 161, 166, 171], "gauvin": [23, 213, 215], "oscar": [23, 213], "esteban": [23, 213], "bishakh": [23, 214, 215], "ghosh": [23, 214, 215], "nation": [23, 145, 243, 244], "durgapur": 23, "dimitri": [23, 213, 233], "rozaki": [23, 213], "tomotech": 23, "athen": 23, "gr": [23, 73], "rohan": [23, 213], "prinja": [23, 213], "bombai": 23, "sagun": [23, 214], "pai": [23, 214], "vatsala": [23, 214], "swaroop": [23, 214], "mombai": 23, "shahnawaz": [23, 215], "ahm": [23, 215], "birla": 23, "pilani": 23, "goa": 23, "nil": [23, 215, 217], "goyett": [23, 215, 217], "scott": [23, 224], "trinkl": [23, 224], "chicago": 23, "il": 23, "kevin": [23, 224], "sitek": [23, 224], "mit": [23, 163], "mcgovern": 23, "derek": [23, 225, 226, 230], "pisner": [23, 225, 226, 230], "texa": 23, "austin": 23, "ross": [23, 225], "john": [23, 229, 233], "hopkin": 23, "larson": [23, 225, 227, 230, 231, 233], "jakob": [23, 218], "wasserth": [23, 218], "german": 23, "cancer": 23, "bramsh": [23, 218, 219, 226, 227, 228, 229, 232, 233], "qamar": [23, 218, 219, 226, 227, 228, 229, 232, 233], "chandio": [23, 100, 108, 124, 125, 147, 149, 163, 172, 174, 176, 177, 183, 184, 185, 200, 205, 229], "javier": [23, 134, 218, 230, 232, 233], "guaj": [23, 134, 176, 177, 200, 218, 230, 232, 233], "shreya": [23, 82, 171, 217, 218, 219, 224, 225, 228, 229, 230, 231], "fadnavi": [23, 44, 55, 82, 161, 167, 170, 171, 176, 177, 190, 191, 200, 217, 218, 219, 224, 225, 228, 229, 230, 231], "matt": [23, 96, 97, 163, 216, 218, 224], "cieslak": [23, 79, 104, 166, 218, 224], "pennsylvania": 23, "sven": [23, 215], "dorkenwald": [23, 215], "princeton": 23, "boundless": 23, "heart": [23, 97], "everyon": 23, "anywher": [23, 138, 141, 171], "world": [23, 29, 49, 58, 60, 78, 107, 130, 134, 135, 142, 163, 169, 172, 175, 176], "join": [23, 29, 64, 79, 80, 96, 97, 100, 104, 123, 137, 221], "area": [23, 25, 34, 39, 40, 66, 70, 78, 82, 100, 108, 134, 137, 147, 163, 165, 169, 170, 171, 172, 175, 177, 200], "focu": [23, 29, 82, 94], "demo": [24, 25, 58, 233], "fod": [24, 25, 33, 36, 37, 166, 168, 171, 214, 216, 224], "meesters2016": [24, 25], "pde": [24, 25, 167, 175], "framework": [24, 55, 59, 79, 82, 83, 86, 87, 88, 92, 98, 108, 111, 112, 116, 124, 125, 153, 158, 167, 171, 172, 173, 174, 176, 177, 183, 184, 200, 205, 216, 217, 218, 219, 222, 224, 226, 241], "portegies2015a": 24, "hardi": [24, 25, 29, 34, 39, 44, 66, 84, 90, 92, 96, 97, 104, 106, 131, 159, 161, 166, 167, 168, 171, 175, 177, 241, 243, 244], "elong": 24, "structur": [24, 29, 34, 44, 51, 53, 55, 62, 66, 67, 72, 78, 86, 97, 104, 110, 115, 131, 134, 138, 141, 145, 147, 148, 149, 153, 155, 157, 166, 167, 171, 172, 175, 223, 230, 234, 243, 244], "junction": 24, "nois": [24, 36, 38, 44, 50, 54, 55, 57, 61, 62, 73, 85, 88, 89, 94, 121, 122, 151, 158, 166, 168, 170, 171, 173, 175, 177, 178, 187, 188, 189, 195, 196, 208, 213, 216, 220, 222, 224, 229, 234], "small": [24, 25, 29, 33, 36, 50, 60, 70, 71, 78, 79, 82, 86, 88, 89, 90, 94, 97, 99, 102, 111, 112, 113, 114, 131, 135, 155, 162, 163, 165, 166, 167, 170, 171, 172, 175, 176, 177, 198, 200, 205, 207, 213, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 233], "incoher": [24, 44, 68, 95, 153, 171, 177, 197, 234], "hypo": 24, "ellipt": [24, 171], "2nd": [24, 72, 146, 233], "domain": [24, 25, 29, 105, 106, 113, 163, 177, 225], "coupl": [24, 69, 105, 177, 222, 226], "posit": [24, 25, 29, 35, 36, 40, 44, 67, 68, 70, 78, 83, 85, 86, 92, 95, 108, 109, 111, 124, 130, 131, 134, 135, 137, 142, 148, 149, 155, 158, 163, 165, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 212, 217, 218, 222, 230, 231, 234], "mathbb": [24, 55, 87, 88, 99, 165, 171], "rtime": 24, "carri": [24, 171], "flat": [24, 25, 51, 53, 55, 74, 80, 85, 165, 171, 173], "geometr": [24, 44, 143, 161, 163, 171, 218], "differenti": [24, 72, 82, 163, 171, 175], "notion": [24, 172], "neighbor": [24, 25, 89, 108, 163, 165, 168, 171, 172, 175], "denot": [24, 29, 82, 87, 88, 99, 142, 163, 165, 171, 241], "angular": [24, 44, 77, 79, 92, 119, 121, 161, 165, 167, 168, 171, 173, 175, 243, 244], "w": [24, 51, 71, 73, 79, 89, 90, 96, 97, 144, 152, 163, 165, 169, 170, 171, 173, 174, 175, 177, 180, 217, 222], "evolut": [24, 82, 105, 163, 165, 171, 178, 222], "geq": 24, "given": [24, 25, 72, 83, 84, 86, 87, 88, 89, 94, 96, 99, 109, 113, 125, 128, 137, 144, 156, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 200, 206, 213, 218, 219, 237, 241], "begin": [24, 33, 35, 36, 39, 40, 56, 72, 73, 78, 87, 88, 89, 111, 113, 122, 131, 143, 155, 157, 171, 177, 226, 236, 237, 238, 241], "frac": [24, 72, 73, 78, 87, 88, 99, 142, 144, 155, 165, 171, 172, 173, 175, 241, 242], "33": [19, 24, 25, 32, 33, 35, 36, 37, 40, 44, 46, 47, 53, 55, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 102, 114, 161, 163, 165, 167, 171, 177, 190, 196, 213, 220, 243, 244], "cdot": [24, 29, 144, 171, 172, 175, 239], "nabla": 24, "44": [24, 25, 30, 32, 33, 35, 36, 37, 40, 53, 70, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 87, 100, 108, 109, 111, 124, 166, 171], "delta_": [24, 86], "coeffici": [24, 44, 51, 54, 57, 61, 74, 79, 82, 84, 86, 91, 93, 152, 155, 158, 163, 165, 166, 167, 168, 170, 171, 173, 175, 176, 177, 193, 194, 221, 234, 241], "goe": [24, 84, 86, 176], "laplac": [24, 171], "beltrami": [24, 171], "condit": [24, 35, 40, 88, 99, 116, 165, 171, 172, 175, 177, 216, 218, 222], "noisi": [24, 50, 52, 62, 83, 94, 151, 155, 167, 170, 171, 172, 173], "equat": [24, 29, 52, 73, 87, 142, 165, 167, 171, 172, 173, 175, 177, 190, 215, 237, 238], "solv": [19, 24, 58, 73, 80, 83, 84, 87, 88, 89, 154, 158, 163, 165, 167, 170, 171, 175, 177, 178, 190, 215, 223], "shift": [24, 51, 163, 165, 167, 169, 171, 177, 190, 199, 229], "twist": [24, 167], "convolut": [24, 89, 167, 170, 171], "ast_": 24, "kernel": [24, 25, 73, 89, 90, 96, 105, 163, 167, 170, 171, 175, 177, 180, 185, 230], "p_t": [24, 25], "int_": [24, 165, 171, 173, 241], "t_": [24, 171], "prime": [24, 82, 175], "r_": [24, 86, 171], "3d": [24, 29, 31, 34, 44, 50, 52, 53, 54, 55, 66, 68, 69, 73, 84, 85, 94, 95, 97, 99, 101, 103, 121, 130, 134, 136, 137, 142, 145, 151, 155, 161, 163, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 187, 188, 199, 209, 213, 214, 218, 226, 230, 231, 234], "rotat": [24, 25, 73, 86, 96, 131, 143, 144, 155, 156, 163, 165, 169, 171, 172, 173, 175, 177, 179, 217, 223, 224], "euclidean": [24, 144, 163, 165, 171, 172, 175, 242], "stochast": [24, 55, 171], "interpret": [24, 74, 78, 85, 86, 94, 131, 163, 165, 171, 173, 175, 215, 219], "duitsandfranken2011": [24, 25], "limit": [24, 36, 71, 73, 82, 85, 155, 163, 165, 168, 169, 170, 171, 172, 176, 177, 217, 218, 230], "obtain": [24, 25, 37, 40, 53, 55, 59, 70, 71, 73, 76, 79, 80, 81, 82, 84, 85, 88, 96, 98, 104, 113, 121, 142, 154, 155, 163, 166, 168, 170, 171, 172, 175, 176, 237], "accumul": 24, "random": [24, 25, 36, 39, 53, 55, 56, 69, 84, 85, 91, 108, 114, 116, 122, 124, 125, 130, 135, 157, 158, 163, 165, 167, 170, 171, 172, 173, 176, 177, 178, 187, 188, 200, 213, 214, 215, 218, 219, 224, 225, 230, 233], "walk": [24, 96, 147, 151, 152, 154, 155, 156, 157], "particl": [24, 28, 30, 44, 82, 86, 153, 155, 158, 175, 177, 211, 217, 234], "randomli": [24, 82, 125, 155, 168, 172, 175], "along": [22, 24, 25, 31, 34, 36, 44, 66, 72, 73, 78, 83, 100, 123, 128, 131, 138, 141, 142, 148, 155, 157, 161, 163, 165, 167, 168, 169, 171, 172, 174, 175, 176, 177, 227, 246], "contour": [24, 102, 128, 176, 177, 200, 215, 217, 218], "2d": [24, 25, 44, 94, 97, 101, 103, 106, 142, 151, 161, 163, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 215, 216, 220, 231, 234], "motion": [24, 44, 57, 61, 68, 94, 95, 153, 158, 163, 165, 166, 171, 177, 197, 230, 233, 234], "shown": [24, 25, 51, 53, 71, 80, 83, 85, 88, 94, 121, 146, 147, 163, 171, 176, 177, 200], "adapt": [24, 25, 38, 44, 51, 54, 57, 61, 80, 82, 89, 104, 146, 151, 155, 167, 171, 175, 176, 177, 189, 200, 215, 217, 226, 234], "analyt": [24, 44, 52, 68, 81, 93, 95, 108, 124, 125, 153, 155, 163, 167, 168, 171, 172, 174, 177, 183, 184, 205, 226, 234, 241], "formula": [24, 142, 165, 171, 237, 238, 242], "approxim": [24, 62, 69, 82, 83, 87, 88, 151, 163, 165, 167, 171, 173, 175, 238], "portegies2015b": [24, 167, 175], "gradient_t": [24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 50, 52, 53, 56, 58, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 92, 93, 94, 104, 119, 121, 122, 126, 128, 131, 136, 171, 173, 178, 217, 246], "get_fnam": [24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 87, 89, 90, 92, 93, 94, 104, 105, 106, 107, 111, 112, 113, 114, 116, 119, 121, 126, 128, 131, 136, 163, 170, 172, 173, 178, 225], "enhancement_kernel": [24, 25, 178], "enhancementkernel": [24, 25, 175, 178], "shift_twist_convolut": [24, 178], "convolv": [24, 178], "load_nifti_data": [24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 66, 82, 105, 116, 126, 128, 131, 136, 137, 178, 225], "read_bvals_bvec": [24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 50, 52, 53, 58, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 87, 89, 90, 92, 93, 94, 104, 121, 126, 128, 131, 136, 173, 178, 213, 217, 221, 227, 246], "add_nois": [24, 178], "odf_sh_to_sharp": [24, 178], "shm": [24, 25, 32, 33, 34, 36, 37, 46, 66, 67, 70, 84, 91, 126, 128, 131, 136, 160, 168, 177, 178, 213, 218, 220, 221, 222, 226, 233, 241], "sf_to_sh": [24, 91, 178], "sh_to_sf": [24, 91, 178], "constrainedsphericaldeconvmodel": [24, 25, 32, 33, 35, 36, 37, 40, 47, 69, 71, 178], "dataset": [24, 25, 29, 43, 44, 47, 49, 50, 51, 52, 53, 54, 55, 57, 59, 61, 62, 64, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 93, 94, 96, 97, 100, 104, 106, 107, 114, 116, 121, 126, 130, 131, 134, 135, 136, 137, 142, 146, 149, 151, 152, 153, 154, 155, 157, 158, 162, 163, 166, 167, 169, 170, 171, 172, 175, 177, 192, 206, 217, 218, 220, 221, 222, 224, 225, 226, 227, 230, 231, 233, 234, 235, 245, 246, 248, 249], "150": [24, 25, 55, 71, 73, 83, 89, 90, 173], "2000": [24, 25, 44, 51, 53, 64, 71, 73, 79, 82, 83, 84, 85, 89, 90, 146, 161, 165, 166, 171, 175, 177, 198, 225, 243, 244], "rician": [24, 38, 50, 52, 54, 59, 89, 121, 122, 166, 167, 171, 173, 177, 189], "fiber": [24, 26, 27, 29, 32, 33, 34, 36, 37, 38, 62, 66, 67, 68, 69, 73, 74, 75, 77, 78, 82, 84, 85, 90, 94, 95, 99, 110, 115, 119, 121, 123, 131, 153, 155, 158, 163, 167, 168, 170, 171, 173, 174, 175, 177, 194, 210, 215, 218, 224, 227, 230, 231, 233, 234, 235, 243, 244], "hardi_fnam": [24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 55, 62, 66, 67, 69, 70, 71, 78, 89, 90, 94, 104, 106, 126, 128, 131, 136], "hardi_bval_fnam": [24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 55, 62, 66, 67, 69, 70, 71, 78, 89, 90, 94, 104, 106, 126, 128, 131, 136], "hardi_bvec_fnam": [24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 55, 62, 66, 67, 69, 70, 71, 78, 89, 90, 94, 104, 106, 126, 128, 131, 136], "stanford_hardi": [24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 55, 62, 66, 67, 69, 70, 71, 78, 89, 90, 94, 104, 106, 126, 128, 131, 136, 151, 155, 157, 243, 244], "bval": [24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 50, 51, 52, 53, 55, 56, 58, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 92, 93, 94, 96, 121, 122, 126, 128, 131, 136, 146, 151, 154, 155, 160, 163, 165, 166, 167, 169, 171, 173, 177, 178, 190, 192, 197, 198, 201, 208, 213, 220, 227, 232, 237, 246], "bvec": [24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 50, 52, 53, 56, 58, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 92, 93, 94, 96, 121, 122, 126, 128, 131, 136, 146, 151, 154, 155, 160, 163, 165, 166, 167, 169, 171, 173, 175, 177, 178, 186, 187, 192, 193, 194, 196, 198, 201, 208, 217, 222, 224, 226, 237, 246], "gtab": [24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 50, 51, 52, 53, 56, 58, 62, 64, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 104, 119, 121, 122, 126, 128, 131, 136, 163, 165, 166, 167, 170, 171, 173, 175, 218, 227, 229, 232, 246], "b0_slice": 24, "b0_mask": [24, 49, 62, 84, 89, 105, 107], "rng": [24, 25, 56, 69, 85, 91, 108, 122, 124, 125, 130, 135, 163, 172, 173, 175, 178, 226], "default_rng": [24, 25, 56, 69, 85, 91, 122, 124, 125, 130, 135, 175], "data_noisi": 24, "noise_typ": [24, 173], "pad": [24, 25, 97, 163, 167, 170, 171, 176], "larger": [24, 36, 50, 53, 71, 74, 89, 99, 102, 108, 114, 121, 153, 163, 165, 168, 170, 171, 173, 175, 177, 180, 213, 217, 248], "region": [24, 25, 29, 34, 35, 40, 62, 66, 69, 71, 73, 74, 80, 82, 85, 89, 94, 97, 108, 128, 130, 131, 166, 167, 171, 175, 233, 243, 244], "boundari": [22, 24, 40, 163, 168, 172, 175, 176, 177, 206], "data_smal": [24, 25, 58, 70, 71, 79, 80, 83, 89, 90, 92], "25": [24, 25, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 48, 53, 61, 62, 65, 66, 67, 70, 71, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 102, 105, 108, 123, 126, 128, 129, 130, 136, 137, 156, 157, 163, 166, 168, 170, 171, 172, 173, 175, 177, 220], "40": [24, 25, 29, 32, 33, 35, 36, 37, 38, 39, 40, 44, 51, 53, 60, 62, 69, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 89, 92, 93, 102, 105, 108, 109, 124, 126, 130, 131, 161, 163, 165, 168, 171, 172, 177, 195, 220, 243, 244], "65": [24, 25, 32, 33, 35, 36, 37, 40, 53, 55, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 88, 102, 114, 171, 173, 177, 195, 220], "80": [24, 25, 32, 33, 35, 36, 37, 40, 50, 53, 71, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85, 86, 89, 93, 128, 130, 135, 155, 166, 220, 223, 243, 244], "data_noisy_smal": 24, "enabl": [19, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 56, 64, 66, 70, 71, 77, 78, 83, 87, 88, 89, 90, 91, 92, 94, 111, 112, 113, 114, 119, 122, 130, 131, 163, 167, 171, 175, 176, 177, 179, 200, 205, 216, 225, 233], "respons": [24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 47, 66, 68, 69, 84, 90, 95, 121, 155, 158, 166, 171, 172, 175, 177, 194, 213, 221, 222, 223, 224, 226, 227, 231, 234], "ratio": [24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 62, 66, 69, 71, 83, 89, 90, 142, 163, 170, 171, 172, 173, 175, 176, 177, 208], "roi_radii": [24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 66, 69, 71, 84, 89, 90, 171, 177, 194], "fa_thr": [24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 66, 69, 71, 89, 90, 155, 171, 177, 194], "csd_model_orig": 24, "csd_fit_orig": 24, "csd_shm_orig": 24, "shm_coeff": [24, 25, 33, 35, 36, 40, 84, 168, 169, 171, 178, 226], "csd_model_noisi": 24, "csd_fit_noisi": 24, "csd_shm_noisi": 24, "inspir": [24, 25, 84, 172], "rodrigues2010": [24, 25], "lookup": [24, 25, 137, 167, 168, 175], "discret": [24, 25, 36, 38, 46, 70, 83, 96, 156, 157, 163, 165, 166, 168, 171, 172, 175, 177, 179, 207, 220], "rotation": [24, 25, 83, 86, 165], "invari": [24, 25, 44, 68, 73, 83, 86, 95, 113, 155, 165, 167, 171, 172, 175, 176, 215, 234], "100": [24, 25, 29, 31, 32, 33, 35, 36, 37, 40, 43, 44, 51, 53, 56, 58, 67, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 96, 97, 100, 102, 104, 105, 114, 116, 119, 122, 123, 124, 126, 130, 161, 163, 166, 167, 171, 172, 173, 174, 175, 177, 179, 220, 243, 244], "d33": [24, 25, 167], "d44": [24, 25, 167], "02": [24, 25, 27, 30, 32, 33, 35, 36, 37, 40, 43, 53, 56, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 88, 100, 106, 129, 171, 214, 215, 220, 227, 234], "delta": [24, 72, 142, 155, 165, 176, 177, 178, 198, 222, 231, 237, 239], "spike": 24, "get_orient": [24, 167, 178], "dtype": [24, 74, 102, 104, 105, 109, 135, 163, 165, 167, 169, 171, 173, 175, 177, 178, 213, 220, 221, 224, 226, 231], "spike_shm_conv": 24, "get_spher": [24, 37, 39, 46, 67, 75, 77, 78, 79, 81, 83, 84, 89, 90, 91, 92, 119, 122, 171, 175, 178], "test_mod": [24, 167], "spike_sf_conv": 24, "model_kernel": 24, "odf_slic": [24, 67, 70, 71, 77, 78, 79, 83, 84, 89, 90, 91, 92, 119, 122, 218], "scale": [24, 67, 70, 71, 77, 78, 79, 83, 84, 85, 89, 90, 92, 94, 96, 102, 105, 119, 131, 144, 156, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 191, 198, 205, 219, 227, 230, 237, 239], "set_camera": [24, 25, 31, 67, 108, 109, 124, 130, 131, 135], "30": [24, 25, 27, 32, 33, 35, 36, 37, 38, 40, 44, 51, 53, 61, 69, 72, 73, 74, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 92, 93, 100, 108, 109, 114, 119, 124, 130, 135, 147, 148, 159, 161, 163, 165, 175, 177, 218, 220, 243, 244], "focal_point": [24, 25, 67, 108, 109, 124, 130, 131, 135], "view_up": [24, 25, 31, 67, 108, 109, 124, 131, 135], "record": [24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 56, 66, 67, 69, 70, 71, 77, 78, 79, 83, 84, 89, 90, 91, 92, 94, 99, 108, 109, 111, 112, 113, 114, 119, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 170, 172, 175, 176, 217, 218, 219, 222, 224, 226, 232], "out_path": [24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 56, 66, 67, 70, 71, 77, 78, 79, 83, 84, 89, 90, 91, 92, 94, 99, 108, 109, 111, 112, 113, 114, 119, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137], "png": [24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 55, 56, 59, 62, 64, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 176, 177, 219, 226, 233], "900": [24, 25, 34, 39, 66, 71, 74, 82, 84, 85, 92, 99, 125, 130, 134, 136, 137, 214, 243, 244], "csd_shm_enh": 24, "sharpen": [24, 83, 171, 221], "csd_shm_enh_sharp": 24, "lambda_": [24, 171], "raw": [24, 50, 70, 75, 76, 78, 81, 93, 94, 142, 166, 168, 170, 222], "csd_sf_orig": 24, "csd_sf_noisi": 24, "csd_sf_enh": 24, "csd_sf_enh_sharp": 24, "normal": [24, 31, 76, 78, 80, 85, 89, 96, 97, 104, 105, 106, 113, 138, 144, 145, 156, 163, 165, 167, 168, 169, 171, 172, 175, 176, 178, 222, 223, 226, 241], "amax": 24, "closer": [24, 98, 106, 156, 163, 227], "noiseless": [24, 94, 121, 122], "fodf_spheres_org": 24, "setposit": [24, 130, 137], "fodf_spher": [24, 71, 84, 89, 90], "fodf_spheres_enh": 24, "fodf_spheres_enh_sharp": 24, "bottom": [24, 25, 143], "snr": [24, 44, 53, 54, 57, 59, 61, 77, 85, 119, 121, 122, 151, 166, 171, 173, 215, 222, 226, 234], "sanguinetti": [24, 25, 167, 175, 213], "portegi": [24, 25, 167, 175], "duit": [24, 25, 167, 175], "2016": [24, 25, 32, 44, 51, 53, 55, 73, 74, 79, 82, 83, 84, 85, 87, 88, 145, 146, 159, 161, 165, 166, 167, 171, 172, 175, 177, 187, 188, 214, 215, 225, 243, 244], "ismrm": [24, 69, 82, 98, 99, 159, 163, 167, 171, 172, 175, 176, 177, 200, 207, 222, 226], "confer": [24, 25, 163, 167, 171, 175], "improv": [24, 25, 29, 35, 40, 50, 53, 54, 84, 88, 89, 100, 104, 145, 149, 156, 158, 163, 165, 167, 171, 172, 175, 177, 213, 215, 216, 217, 220, 222, 224, 225, 226, 227, 228, 230, 231, 233], "flow": [24, 25, 163, 167, 171, 175, 177, 217, 218, 225, 231], "plo": [24, 25, 38, 39, 52, 53, 55, 89, 90, 123, 166, 167, 170, 171, 174, 175, 177, 187, 243, 244], "One": [24, 25, 29, 36, 38, 51, 55, 59, 62, 69, 71, 73, 78, 84, 89, 94, 123, 135, 146, 163, 165, 166, 167, 170, 171, 174, 175, 214, 216, 218, 231, 238, 248], "se": [24, 79, 80, 167], "applic": [19, 24, 25, 46, 49, 51, 53, 59, 73, 78, 83, 85, 89, 107, 130, 163, 165, 167, 169, 170, 171, 172, 177, 199], "neuroimag": [24, 31, 32, 35, 40, 44, 51, 53, 62, 64, 71, 72, 73, 74, 75, 76, 77, 80, 83, 84, 85, 87, 88, 89, 93, 94, 98, 99, 108, 119, 121, 123, 126, 145, 147, 148, 152, 155, 156, 157, 161, 163, 165, 166, 167, 168, 171, 172, 173, 175, 177, 187, 188, 194, 196, 202, 205, 207, 211, 213, 236, 241, 243, 244, 248, 249], "fifth": [24, 167], "intern": [24, 25, 36, 43, 53, 74, 82, 84, 108, 112, 114, 145, 163, 167, 171, 172, 175, 176, 177, 200, 220, 233], "variat": [24, 29, 55, 89, 163, 167, 171, 172, 177], "franken": [24, 25, 167], "journal": [24, 25, 38, 39, 52, 53, 55, 82, 89, 90, 126, 134, 155, 159, 167, 170, 171, 173, 175, 177, 187, 196, 197, 243, 244], "92": [24, 25, 32, 33, 35, 36, 37, 40, 44, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 88, 89, 161, 167, 171, 173, 222], "231": [24, 25, 54, 61, 73, 82, 83, 165, 167], "264": [24, 25, 82, 83, 167, 221], "rodrigu": [24, 25, 165], "romeni": [24, 25], "vilanova": [24, 25], "acceler": [24, 25, 44, 67, 89, 96, 152, 161, 163, 171, 177], "dw": [24, 25, 62, 67, 121, 128, 171], "eurograph": [24, 25], "workshop": [24, 25, 79, 92, 159, 171, 219, 233], "biologi": [24, 25, 131], "medicin": [24, 25, 53, 55, 56, 70, 73, 74, 79, 82, 84, 85, 89, 146, 155, 167, 171, 172, 173, 176, 177, 188, 200], "associ": [24, 25, 55, 72, 74, 80, 137, 163, 165, 166, 168, 169, 171, 172, 173, 175, 177, 190, 210, 211, 220, 241], "jupyt": [24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 232], "notebook": [24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 215, 217, 224, 226, 232], "contextual_enhanc": [24, 27, 234], "ipynb": [24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141], "galleri": [22, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 134, 135, 136, 137, 138, 141, 145, 158, 159, 215, 221, 224, 232, 233, 234, 235], "fbc": [25, 158, 175, 215, 227], "quantit": [25, 35, 40, 73, 79, 157, 171, 174, 175, 177, 196, 243, 244], "surround": [25, 86, 94, 163], "indic": [25, 31, 44, 46, 53, 62, 68, 70, 73, 74, 78, 79, 83, 94, 95, 105, 109, 111, 112, 113, 114, 125, 128, 155, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 193, 194, 202, 204, 205, 221, 227, 229, 230, 234], "isol": [19, 21, 25, 62, 83, 89, 163], "poorli": [25, 171], "below": [22, 25, 31, 40, 43, 44, 51, 52, 53, 55, 68, 72, 73, 74, 78, 80, 84, 85, 113, 126, 128, 130, 135, 137, 143, 147, 157, 163, 165, 169, 170, 171, 173, 174, 175, 177, 180, 219, 241, 243, 248], "illustr": [22, 25, 51, 56, 70, 71, 72, 73, 78, 80, 83, 84, 85, 86, 89, 91, 94, 122, 151, 163, 165, 171, 173, 231, 242], "densiti": [25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 66, 73, 78, 89, 104, 126, 127, 128, 129, 136, 155, 163, 171, 173, 175, 177, 210, 211, 222, 234, 239], "sum": [25, 29, 62, 71, 73, 75, 76, 81, 83, 84, 85, 87, 89, 90, 93, 102, 105, 111, 113, 143, 156, 163, 165, 166, 170, 171, 172, 173, 174, 175, 177, 180], "badli": [25, 62], "identifi": [25, 35, 38, 44, 62, 94, 131, 134, 157, 161, 163, 165, 166, 167, 169, 170, 171, 172, 175, 177, 201, 210, 237], "lfbc": [25, 175], "deviat": [25, 50, 54, 59, 62, 72, 86, 94, 105, 121, 151, 163, 167, 168, 171, 172, 173, 175, 176, 177, 180, 187, 188, 222, 230], "portegies2015": [25, 167], "5d": [25, 167, 169], "induc": [25, 73, 171], "lift": 25, "whole": [25, 71, 86, 89, 128, 167, 172, 175, 243, 244], "rfbc": [25, 175], "averag": [25, 35, 50, 71, 73, 82, 85, 87, 88, 89, 90, 99, 100, 108, 142, 147, 148, 151, 163, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 200, 215, 239, 243, 244], "found": [25, 35, 51, 83, 86, 88, 96, 126, 128, 138, 141, 145, 157, 158, 165, 167, 168, 171, 175, 177, 189, 190, 204, 213, 215, 232, 233, 236, 237, 238, 245], "load_nifti": [25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 47, 49, 50, 52, 53, 54, 55, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 83, 84, 85, 87, 89, 90, 92, 93, 94, 96, 97, 104, 106, 107, 123, 126, 128, 131, 136, 137, 163, 166, 178, 246], "csaodfmodel": [25, 32, 33, 34, 36, 37, 46, 66, 70, 126, 128, 131, 136, 178], "fbcmeasur": [25, 178], "label_fnam": [25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 126, 128, 131, 136], "stanford_label": [25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 126, 128, 131, 136, 243, 244], "t1_fname": [25, 29, 38, 39, 51, 54, 73, 74, 83, 84, 85, 106, 116, 128, 131], "stanford_t1": [25, 29, 38, 39, 54, 128, 131, 243, 244], "t1_data": [25, 29, 38, 39, 128, 131], "hemispher": [25, 36, 56, 85, 91, 100, 122, 149, 166, 168, 171, 178, 220], "coordin": [25, 29, 31, 49, 56, 58, 60, 64, 78, 82, 85, 89, 91, 107, 111, 121, 122, 123, 130, 131, 134, 135, 142, 144, 145, 146, 155, 158, 162, 163, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 200, 213, 214, 224, 229, 231, 240, 241], "bound": [22, 25, 82, 163, 165, 169, 171, 172, 173, 175, 177, 203, 204, 208, 215, 218, 226], "dshape": 25, "xa": 25, "xb": 25, "ya": 25, "yb": 25, "za": [25, 177], "zb": 25, "selectionmask": 25, "bool": [25, 59, 74, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 229, 230], "constant": [25, 33, 34, 44, 46, 66, 68, 82, 92, 95, 97, 142, 146, 153, 163, 171, 172, 173, 177, 193, 206, 221, 234, 237], "solid": [25, 33, 34, 44, 46, 66, 68, 95, 146, 153, 165, 171, 173, 177, 193, 234], "cda": 25, "csa": [25, 29, 32, 33, 36, 37, 44, 46, 70, 126, 136, 146, 147, 153, 157, 161, 171, 174, 177, 193, 194, 215, 237, 238], "fraction": [25, 34, 38, 39, 40, 66, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 94, 119, 121, 122, 123, 135, 158, 170, 171, 172, 173, 174, 175, 177, 195, 196, 197, 224, 243, 244], "anisotropi": [25, 34, 38, 39, 40, 66, 72, 75, 78, 79, 80, 83, 84, 85, 86, 87, 94, 123, 135, 158, 165, 171, 172, 174, 175, 177, 195, 196, 223, 224, 226, 243, 244], "gfa": [25, 32, 33, 34, 36, 37, 38, 39, 46, 66, 70, 75, 81, 126, 128, 136, 157, 168, 174, 177, 178, 220, 221, 222, 226], "restrict": [25, 34, 36, 43, 66, 72, 73, 74, 83, 86, 88, 128, 157, 169, 171, 173, 175, 235], "signific": [25, 34, 66, 83, 147, 171, 175], "interest": [25, 34, 56, 59, 62, 66, 73, 74, 94, 97, 104, 122, 128, 131, 151, 155, 163, 166, 167, 171, 175, 227, 233], "csa_model": [25, 32, 33, 34, 36, 37, 66, 126, 128, 136], "csa_peak": [25, 34, 66, 126, 128, 136, 147], "relative_peak_threshold": [25, 34, 39, 46, 47, 66, 70, 71, 81, 84, 89, 90, 126, 128, 131, 136, 168, 177, 221], "min_separation_angl": [25, 34, 39, 46, 47, 66, 70, 71, 81, 84, 89, 90, 126, 128, 131, 136, 168, 177], "probabilist": [25, 28, 29, 30, 32, 33, 35, 38, 44, 59, 126, 128, 136, 153, 158, 167, 168, 171, 173, 177, 210, 219, 221, 224, 234, 235], "known": [25, 34, 66, 69, 71, 80, 85, 90, 111, 113, 114, 157, 166, 171, 177, 195, 196, 246], "csd_model": [25, 32, 33, 35, 36, 37, 40, 47, 69, 71], "csd_fit": [25, 32, 33, 35, 36, 37, 40, 71], "csd_fit_shm": 25, "prob_dg": [25, 36, 38], "from_shcoeff": [25, 33, 35, 36, 40, 168, 178, 232], "max_angl": [25, 32, 33, 35, 36, 37, 38, 40, 168, 175, 177, 210, 211, 232], "optic": [25, 163, 166, 171], "radiat": [25, 128, 166], "calcarin": 25, "sulcu": 25, "cortex": [25, 29, 104], "genicul": 25, "nucleu": 25, "lgn": [25, 166], "roi": [25, 29, 43, 44, 62, 71, 79, 84, 89, 92, 94, 104, 126, 127, 128, 129, 132, 133, 158, 166, 171, 172, 175, 177, 178, 194, 200, 213, 218, 230, 234], "cube": [25, 44, 86, 161, 163, 167, 171], "3x3x3": [25, 167], "rad": [25, 165], "29": [25, 32, 33, 35, 36, 37, 40, 53, 61, 67, 70, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 100, 220, 221, 231], "31": [25, 32, 33, 35, 36, 37, 40, 53, 67, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 87, 135, 146, 165, 171, 222], "getter": [25, 28, 29, 30, 35, 37, 38, 40, 44, 128, 157, 168, 169, 171, 177, 210, 216, 217, 222, 224, 226, 233, 234], "streamlines_gener": [25, 34, 66], "step_siz": [25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 126, 128, 131, 136, 165, 168, 175, 177, 210, 211], "5x5x5": [25, 53, 167, 177, 187, 188], "travers": [25, 29, 175], "through": [25, 29, 35, 39, 40, 59, 75, 82, 83, 84, 89, 90, 93, 96, 104, 113, 116, 126, 131, 142, 145, 147, 151, 152, 154, 155, 156, 157, 163, 166, 171, 172, 175, 215, 220, 222, 227, 242], "mask_lgn": 25, "28": [25, 32, 33, 35, 36, 37, 40, 53, 70, 71, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 87, 133, 135, 158, 170, 171, 172, 173, 175, 217, 220, 228, 229, 233, 234], "filtered_fibers2": 25, "tol": [25, 163, 165, 166, 167, 171, 175], "sfil": 25, "len": [25, 31, 43, 109, 111, 112, 113, 114, 124, 130, 131, 163, 165, 166, 170, 171, 172, 173, 175, 176, 213, 227], "propag": [25, 62, 76, 77, 83, 93, 119, 153, 157, 158, 168, 171, 173, 175, 177, 198, 222, 237, 239], "preserv": [25, 26, 27, 44, 50, 53, 55, 144, 149, 165, 167, 175, 234], "contextu": [25, 27, 158, 167, 175, 177, 214, 215, 234], "enhanc": [25, 27, 31, 110, 115, 151, 158, 167, 175, 214, 215, 222, 225, 234], "regard": [25, 85, 92, 163, 215], "electrostat": [25, 56, 91, 122, 165, 167, 231], "repuls": [25, 56, 165, 167, 215, 231], "chosen": [25, 34, 36, 66, 86, 91, 157, 168, 171, 175, 238], "recal": [25, 143, 171], "percent": [25, 172], "fbc_sl_orig": 25, "clrs_orig": 25, "rfbc_orig": 25, "get_points_rfbc_threshold": [25, 175, 178], "emphasi": [25, 175], "01": [24, 25, 30, 32, 33, 35, 36, 37, 40, 43, 48, 53, 56, 61, 67, 71, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 100, 106, 108, 115, 129, 146, 149, 163, 165, 167, 171, 175, 177, 185, 217, 218, 223, 225, 226, 231, 232, 234], "fbc_sl_thre": 25, "clrs_thre": 25, "rfbc_thre": 25, "125": [25, 44, 53, 82, 83, 114, 137, 161, 220], "optic_radiation_before_clean": 25, "procedur": [25, 29, 50, 51, 73, 80, 85, 86, 121, 152, 154, 155, 163, 165, 171, 173, 177, 193, 194, 215, 217], "optic_radiation_after_clean": 25, "lineactor": 25, "vstack": [25, 56, 77, 85, 91, 119, 122, 130, 175], "linewidth": [25, 38, 39, 85, 99, 114, 124, 125, 126, 130, 135, 176], "horizont": [25, 176, 242], "axial": [25, 50, 53, 54, 59, 64, 70, 71, 72, 73, 78, 79, 84, 85, 89, 90, 116, 131, 137, 158, 171, 175, 176, 177, 195, 196], "slice": [25, 34, 38, 44, 49, 50, 51, 53, 54, 55, 59, 62, 64, 66, 67, 70, 73, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 93, 94, 97, 104, 105, 106, 107, 116, 126, 131, 132, 133, 134, 146, 158, 163, 165, 166, 167, 169, 171, 172, 177, 178, 199, 215, 217, 218, 224, 226, 230, 232, 234, 246], "t1": [25, 39, 44, 51, 54, 84, 110, 115, 128, 131, 134, 141, 146, 151, 166, 167, 170, 213, 233, 234, 243, 244], "vol_actor1": 25, "sagitt": [25, 34, 62, 66, 131, 137, 176], "vol_actor2": [25, 29, 38, 39, 131], "285": [25, 72, 82, 83, 221], "155": [25, 73, 82, 83, 222], "n_frame": [25, 29, 70, 78, 99, 111, 125, 128, 131, 213], "or_befor": 25, "rm": [25, 29, 71, 73, 89], "or_aft": 25, "tau": [25, 86, 163, 165, 167, 171, 173, 175, 177, 178, 187, 227, 237], "techniqu": [25, 38, 40, 51, 53, 74, 84, 85, 89, 109, 156, 170, 171, 172, 175, 222], "pauli": [25, 177], "ossenblok": [25, 175], "academ": [25, 88], "epileptologi": 25, "kempenhaegh": 25, "maastricht": 25, "fiber_to_bundle_coher": [25, 27, 217, 234], "coher": [26, 27, 38, 44, 71, 86, 89, 158, 166, 169, 171, 175, 215, 234], "00": [24, 25, 29, 30, 31, 32, 33, 35, 36, 37, 40, 42, 43, 48, 53, 56, 61, 65, 67, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 95, 100, 103, 106, 115, 117, 120, 129, 133, 135, 140, 234], "000": [44, 95, 103, 117, 133, 161, 165, 171, 173, 234], "total": [24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 146, 165, 167, 170, 171, 173, 175, 177, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "examples_builtcontextual_enhanc": 27, "mem": [27, 30, 42, 48, 61, 65, 95, 103, 115, 117, 120, 129, 133, 140, 176, 234], "mb": [27, 29, 30, 31, 42, 48, 61, 65, 67, 72, 87, 88, 95, 100, 103, 115, 117, 120, 129, 133, 140, 166, 234], "surfac": [28, 30, 39, 44, 90, 126, 128, 132, 133, 158, 165, 166, 171, 215, 217, 229, 234, 241], "determinist": [28, 30, 32, 34, 36, 40, 44, 66, 153, 158, 171, 175, 177, 210, 218, 222, 230, 234, 235], "transport": [28, 30, 44, 145, 158, 165, 168, 231, 232, 234], "unbias": [28, 30, 44, 68, 95, 98, 158, 163, 166, 171, 177, 231, 234, 243, 244], "rumba": [28, 30, 44, 89, 158, 161, 177, 178, 230, 231, 232, 234], "sd": [28, 30, 44, 89, 155, 158, 161, 171, 177, 231, 232, 234, 241], "bootstrap": [28, 30, 44, 94, 158, 162, 168, 171, 177, 196, 217, 220, 233, 234], "closest": [28, 30, 44, 62, 153, 165, 167, 168, 171, 172, 175, 222, 234], "spars": [28, 29, 30, 44, 68, 83, 88, 95, 97, 158, 163, 165, 171, 172, 175, 222, 234], "filter": [28, 29, 30, 44, 50, 52, 54, 55, 85, 89, 102, 104, 108, 131, 151, 153, 158, 163, 165, 167, 168, 170, 171, 172, 175, 177, 189, 204, 211, 215, 217, 230, 233, 234], "biggest": 29, "challeng": [29, 86, 123, 159, 243, 244], "predict": [29, 55, 67, 69, 82, 84, 90, 157, 163, 165, 170, 171, 175, 178, 213, 214, 215, 221, 222, 223, 226], "simultan": [29, 82, 89, 98, 158, 171, 233], "pestilli2014": 29, "breviti": [29, 39, 82, 104], "corpu": [29, 32, 33, 34, 35, 36, 37, 40, 62, 66, 67, 69, 70, 71, 78, 83, 86, 89, 90, 94, 104, 126, 128, 131, 136, 166, 171, 172, 175, 177, 208, 243, 244], "callosum": [29, 32, 33, 34, 35, 36, 37, 40, 62, 66, 67, 69, 70, 71, 78, 83, 86, 89, 90, 94, 104, 126, 128, 131, 136, 166, 171, 172, 175, 177, 208, 243, 244], "frontal": [29, 104, 131], "fulli": [29, 44, 73, 100, 104, 153, 165, 171, 173], "matric": [29, 44, 98, 104, 127, 129, 144, 163, 165, 166, 171, 175, 215, 218, 234], "intersect": [29, 44, 82, 85, 104, 127, 129, 175, 234], "pjoin": [29, 96, 97, 100, 104], "matplotlib": [19, 29, 34, 38, 40, 49, 50, 51, 52, 53, 54, 55, 59, 62, 64, 66, 69, 72, 74, 75, 76, 78, 79, 80, 82, 84, 85, 86, 87, 89, 93, 94, 97, 102, 107, 116, 121, 122, 123, 126, 128, 130, 131, 142, 175, 176, 215, 218, 220, 222, 245], "pyplot": [29, 34, 38, 40, 49, 50, 51, 52, 53, 54, 55, 59, 62, 64, 66, 69, 72, 74, 75, 76, 79, 80, 82, 84, 85, 86, 87, 89, 93, 94, 97, 102, 107, 116, 121, 122, 123, 126, 128, 130, 131, 166, 175], "plt": [29, 34, 38, 40, 49, 50, 51, 52, 53, 54, 55, 59, 62, 64, 66, 69, 72, 74, 75, 76, 79, 80, 82, 84, 85, 86, 87, 89, 93, 94, 97, 102, 107, 116, 121, 122, 123, 126, 130, 131, 175], "mpl_toolkit": [29, 128], "axes_grid1": [29, 128], "axesgrid": [29, 128], "fetch_stanford_track": [29, 104, 178], "colormap": [29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 70, 71, 77, 78, 79, 82, 83, 84, 89, 90, 92, 111, 112, 113, 114, 119, 122, 128, 131, 136, 171, 176, 177, 200, 215, 217, 218, 222, 224], "cmap": [29, 34, 38, 40, 49, 50, 51, 52, 53, 54, 55, 59, 64, 66, 72, 74, 79, 80, 82, 83, 84, 85, 86, 87, 97, 107, 109, 111, 113, 116, 128, 131, 136, 176], "hardi_img": [29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 128, 131, 136], "return_img": [29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 64, 66, 96, 97, 104, 128, 131, 136, 169], "cc_slice": [29, 131], "streamline_tool": [29, 129, 131, 215, 217, 222, 224, 234], "candid": [29, 44, 161, 168, 175], "streamlines_fil": [29, 104], "lr_superiorfrontal_path": [29, 104], "lr": [29, 104, 131, 171], "superiorfront": [29, 104, 131], "candidate_sl_sft": 29, "to_vox": [29, 43, 169, 178], "candidate_sl": 29, "term": [29, 73, 82, 83, 88, 89, 111, 116, 142, 155, 163, 171, 221, 240], "connectom": [29, 147, 148, 158, 166, 175, 243, 244], "anatom": [29, 35, 40, 53, 55, 104, 126, 128, 131, 147, 149, 157, 158, 175, 177, 223, 235], "candidate_streamlines_actor": 29, "streamtub": [29, 38, 39, 99, 111, 112, 113, 114, 125, 130, 134, 135, 213, 217, 218, 221], "line_color": [29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 128, 131, 136], "cc_roi_actor": [29, 131], "contour_from_roi": [29, 128, 131, 136], "opac": [29, 67, 86, 111, 114, 131, 134, 136, 137, 213, 217, 218, 233], "vol_actor": [29, 38, 39, 131], "canva": [29, 131], "life_candid": 29, "800": [29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 82, 89, 126, 128, 131, 146, 173, 243, 244], "fiber_model": [29, 175], "scanner": [29, 38, 50, 54, 72, 89, 142, 165, 166, 167, 171, 177, 237, 238, 243, 244], "iso": [29, 80, 87, 171, 178], "mid": [22, 29, 59, 62, 67, 163, 175], "ac": [29, 166], "pc": 29, "inv_affin": 29, "linalg": [29, 38, 39, 87, 104, 134, 135, 171, 227, 231], "inv": [29, 38, 39, 104, 134, 135, 163, 171], "invers": [29, 83, 86, 104, 105, 106, 134, 144, 163, 165, 168, 171, 174, 175, 176, 177, 178, 180, 216, 224], "fiberfit": [29, 178], "beta": [29, 84, 87, 90, 100, 116, 143, 163, 171, 172, 175, 177, 185], "weight": [29, 39, 44, 51, 52, 53, 55, 57, 59, 61, 64, 67, 69, 72, 73, 78, 80, 82, 83, 85, 86, 87, 88, 89, 90, 94, 99, 110, 115, 123, 126, 142, 151, 152, 155, 161, 165, 166, 167, 171, 173, 174, 175, 177, 178, 187, 195, 196, 198, 233, 234, 237, 238, 243, 244], "design": [22, 29, 44, 55, 56, 72, 86, 90, 134, 142, 145, 161, 163, 165, 167, 169, 170, 171, 175, 219, 225], "matrix": [29, 43, 49, 51, 53, 55, 58, 60, 72, 73, 78, 85, 89, 90, 99, 104, 106, 107, 109, 131, 135, 137, 143, 144, 146, 151, 155, 156, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 185, 186, 187, 188, 213, 214, 215, 218, 219, 222, 224, 225, 226, 227, 228, 230, 233], "n_": [29, 73, 171], "th": [29, 69, 99, 105, 106, 163, 171, 172, 175, 176, 241], "column": [29, 87, 88, 90, 99, 131, 137, 144, 163, 165, 167, 171, 172, 173, 175, 176], "arbitrarili": 29, "percentag": [29, 96, 121, 122, 165, 172, 173], "node": [29, 123, 165, 170, 172, 174, 175, 178, 231], "cylindr": [29, 173], "gaussian": [29, 38, 52, 54, 59, 62, 69, 72, 73, 83, 85, 89, 96, 102, 105, 106, 116, 121, 155, 163, 165, 167, 171, 172, 173, 177, 180, 185, 189, 195, 198, 213, 217, 222], "fiber_fit": 29, "ey": [29, 43, 96, 97, 131, 134, 163, 171, 175, 223], "properti": [29, 46, 55, 70, 78, 81, 83, 85, 86, 94, 99, 113, 121, 123, 143, 155, 163, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 213, 241], "beta_i": 29, "fig": [29, 40, 50, 51, 52, 54, 59, 62, 69, 72, 76, 79, 82, 86, 87, 89, 93, 97, 102, 116, 123, 126, 128, 130, 171], "subplot": [29, 34, 38, 40, 49, 50, 51, 52, 53, 54, 55, 59, 62, 64, 66, 69, 72, 74, 75, 80, 82, 85, 86, 87, 89, 94, 97, 102, 107, 123, 126, 130], "hist": [29, 94, 126, 130, 163, 170], "bin": [19, 29, 96, 126, 163, 165, 172, 175, 177, 179], "histtyp": [29, 94, 126, 130], "set_xlabel": [29, 69, 82, 85, 86, 94, 123, 126, 130], "set_ylabel": [29, 69, 82, 85, 86, 94, 123, 126, 130], "savefig": [29, 34, 38, 40, 50, 51, 52, 53, 54, 55, 59, 62, 64, 66, 69, 74, 75, 76, 79, 80, 82, 84, 85, 86, 89, 93, 94, 97, 102, 116, 121, 122, 123, 126, 128, 130, 131], "beta_histogram": 29, "optimized_sl": 29, "row_stack": 29, "life_optim": 29, "presum": 29, "quantifi": [29, 69, 72, 73, 83, 155, 171, 175], "unseen": 29, "fold": [29, 44, 68, 95, 171, 234], "s0": [29, 64, 69, 71, 77, 82, 85, 89, 90, 119, 121, 122, 171, 173, 175, 177, 197, 215, 221], "baselin": [29, 94], "model_predict": [29, 69], "squar": [29, 55, 69, 73, 76, 82, 83, 86, 88, 89, 90, 93, 94, 97, 105, 144, 156, 163, 165, 166, 171, 173, 175, 176, 177, 180, 195, 196, 226, 237, 238], "model_error": 29, "model_rms": 29, "sqrt": [29, 52, 53, 55, 73, 74, 75, 76, 78, 81, 86, 87, 88, 93, 113, 144, 165, 167, 171, 173, 175, 241, 242], "against": [29, 77, 89, 119, 163, 165, 166, 170, 171, 172, 175], "naiv": [29, 102, 171, 175], "beta_baselin": 29, "pred_weight": 29, "reshap": [29, 168, 169, 170, 171, 172, 173, 175, 233], "spdot": [29, 178], "life_matrix": [29, 175], "vox_coord": [29, 175], "b0s_mask": [29, 64, 67, 69, 104, 165, 171, 178], "mean_pr": 29, "empti": [29, 85, 147, 163, 165, 171, 172, 173, 175, 224, 226, 230, 232, 233], "b0_signal": [29, 175], "demean": 29, "multipli": [29, 84, 91, 121, 130, 163, 171, 172, 175, 177, 194], "mean_sign": [29, 53, 62], "mean_error": 29, "mean_rms": 29, "overal": [29, 83, 130], "altern": [29, 33, 35, 38, 47, 71, 73, 77, 88, 96, 102, 111, 119, 130, 156, 157, 163, 165, 167, 171, 177, 196, 221, 241], "median": [29, 84, 155, 165, 172, 174, 175, 177, 204, 215, 221, 229], "rmse": 29, "2f": [29, 85], "horizontalalign": [29, 82], "verticalalign": [29, 82], "transax": [29, 82], "error_histogram": 29, "vol_model": 29, "ones": [29, 40, 56, 74, 85, 109, 111, 112, 113, 114, 122, 138, 141, 165, 169, 171], "nan": [29, 74, 78, 163, 165, 171, 173, 175, 213, 214, 218, 219, 222, 226, 227], "vol_mean": 29, "vol_improv": 29, "sl_idx": 29, "49": [25, 29, 32, 33, 35, 36, 37, 40, 46, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 88, 121, 158, 171, 220, 227], "subplots_adjust": [29, 51, 53, 55, 80, 85, 128], "05": [25, 29, 32, 33, 35, 36, 37, 40, 42, 53, 55, 56, 61, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 93, 111, 114, 115, 120, 128, 147, 163, 165, 167, 171, 172, 177, 217, 218, 224, 228, 229, 230], "95": [25, 29, 32, 33, 35, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 94, 128, 165, 171, 177, 195, 196, 220], "111": [29, 73, 82, 83, 85, 102, 121, 128, 155, 171, 173, 177, 196, 220], "nrows_ncol": [29, 128], "label_mod": 29, "share_al": 29, "cbar_loc": [29, 128], "cbar_mod": [29, 128], "cbar_siz": [29, 128], "cbar_pad": [29, 128], "matshow": [29, 84, 128], "rot90": [29, 51, 62, 84, 87, 116, 128], "cm": [29, 74, 79, 84, 128], "bone": [29, 84, 128], "hot": [29, 86], "cbar_ax": [29, 128], "colorbar": [29, 51, 74, 76, 79, 82, 85, 86, 89, 93, 102, 128, 218], "rdbu": 29, "lax": [29, 128], "set_xtick": [29, 87, 128], "set_ytick": [29, 87, 128], "spatial_error": 29, "amount": [29, 78, 83, 94, 109, 130, 163, 165, 167, 172, 175, 176, 177, 200], "profil": [29, 44, 51, 59, 100, 108, 124, 125, 127, 129, 153, 158, 163, 166, 167, 171, 172, 174, 176, 177, 178, 180, 183, 184, 205, 213, 216, 233, 234, 238], "matlab": [29, 142, 165, 167, 223, 227, 240], "franco": [29, 39, 90, 171], "webpag": 29, "wandel": [29, 39, 69, 90, 123, 171, 174, 175, 243, 244], "statist": [29, 44, 57, 61, 69, 72, 73, 78, 80, 94, 104, 123, 145, 158, 163, 165, 171, 174, 175, 177, 183, 213, 221, 229, 234], "infer": [29, 69, 78, 113, 155, 170, 172, 175, 177, 230], "live": [19, 29, 170, 175, 225], "natur": [29, 50, 59, 73, 157, 163, 165, 169, 170, 171, 172, 175, 237, 238, 250], "1058": [29, 82, 175, 215], "1063": [29, 74, 82, 155, 175, 177, 197, 215], "doi": [29, 37, 38, 39, 44, 51, 52, 53, 55, 70, 72, 73, 74, 80, 82, 84, 85, 87, 88, 89, 90, 134, 146, 147, 152, 155, 161, 163, 165, 166, 167, 168, 170, 171, 175, 177, 187, 188, 197, 199, 219, 243, 244], "1038": [29, 73, 74, 82, 84, 85, 146, 166, 175, 215, 243, 244], "nmeth": [29, 175], "3098": [29, 53, 82, 175], "linear_fascicle_evalu": [29, 30, 219, 234], "examples_builtfiber_track": 30, "surface_se": [30, 31, 234], "tracking_bootstrap_peak": [30, 32, 234], "tracking_determinist": [30, 33, 234], "tracking_introduction_eudx_1": [30, 34, 234], "tracking_pft": [30, 35, 234], "tracking_probabilist": [30, 36, 234], "tracking_ptt": [30, 37, 234], "tracking_rumba": [30, 38, 234], "tracking_sfm": [30, 39, 234], "tracking_stopping_criterion": [30, 40, 234], "cortic": [31, 35, 123], "stonge2018": 31, "mesh": [31, 158, 162, 165, 178, 229], "random_coordinates_from_surfac": [31, 178], "seeds_from_surface_coordin": [31, 178], "load_polydata": [31, 178], "get_polydata_triangl": 31, "get_polydata_vertic": 31, "get_actor_from_polydata": 31, "normals_from_v_f": 31, "brain_lh": 31, "fury_surfac": 31, "polydata": [31, 169, 226], "extract": [31, 39, 44, 49, 52, 55, 72, 73, 74, 80, 85, 89, 90, 107, 109, 110, 111, 113, 115, 125, 127, 129, 145, 147, 148, 163, 165, 166, 167, 168, 170, 171, 174, 175, 176, 177, 178, 191, 202, 209, 214, 215, 218, 220, 221, 222, 224, 227, 233, 234], "triangl": [31, 99, 122, 165, 175, 215], "vt": [31, 175], "surface_actor": 31, "500": [31, 44, 51, 161, 175, 222, 243, 244], "uncom": [31, 135, 136, 137], "600": [31, 70, 71, 78, 79, 82, 83, 84, 89, 92, 94, 108, 109, 111, 112, 113, 114, 124, 135, 137, 146, 171, 172, 177, 213, 243, 244], "reset_camera": [31, 67, 134, 135, 137], "surface_seed1": 31, "nb_seed": [31, 175], "100000": 31, "nb_triangl": [31, 175], "trilinear": [31, 35, 40, 60, 163, 165, 177, 206], "tri_idx": 31, "trilin_co": 31, "cartesian": [31, 44, 75, 85, 89, 122, 155, 161, 165, 171, 172, 173, 242], "seed_pt": 31, "seed_n": 31, "dot": [31, 86, 113, 163, 165, 167, 168, 171, 175, 220, 230, 231, 233], "seed_actor": 31, "dot_siz": 31, "outsid": [31, 40, 62, 88, 163, 165, 167, 170, 175, 177, 206, 218, 219, 224, 230], "red": [31, 51, 56, 62, 69, 74, 99, 100, 105, 106, 109, 116, 130, 135, 147, 171, 175, 176, 177, 200], "normal_length": 31, "normal_in": 31, "tile": [31, 86], "newaxi": [31, 224], "normal_out": 31, "normal_in_actor": 31, "normal_out_actor": 31, "visualis": [31, 43, 167, 168, 171, 215, 218, 241, 245], "surface_seed2": 31, "ong": [31, 109, 172, 176, 177, 200, 215, 229, 232], "daducci": [31, 38, 89, 171, 177, 243, 244], "169": [31, 73, 82, 83, 215, 221], "524": [31, 72, 80, 82, 222], "539": [31, 72, 82, 213], "2018": [22, 31, 44, 51, 53, 73, 82, 85, 128, 145, 147, 148, 159, 161, 166, 167, 171, 177, 199, 217, 218, 219, 225, 243, 244], "berman": [32, 171], "2008": [19, 32, 44, 54, 55, 69, 75, 76, 82, 92, 93, 151, 161, 163, 167, 171, 173, 175, 177, 189, 215, 218, 225], "berman2008": 32, "nd": [32, 85, 168, 171, 172, 175, 215], "phd": [32, 34, 66, 81, 146, 157, 171, 173, 177, 210], "thesi": [32, 34, 51, 53, 66, 73, 81, 85, 146, 157, 167, 171, 173, 177, 199, 210], "small_spher": [32, 36, 38, 178], "closestpeakdirectiongett": [32, 178], "stateful_tractogram": [32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 66, 100, 104, 108, 131, 178], "has_furi": [32, 33, 34, 35, 36, 37, 39, 40, 66, 104], "seed_mask": [32, 33, 34, 35, 36, 37, 38, 40, 66, 126, 128, 136, 146], "white_matt": [32, 33, 34, 36, 37, 38, 39, 40, 66, 126, 128, 131, 136], "serv": [32, 108, 125, 138, 171], "boot_dg_csd": 32, "boot_streamline_gener": 32, "sft": [32, 33, 34, 35, 36, 37, 38, 39, 40, 66, 104, 131, 169, 225, 226, 231, 232, 233], "rasmm": [32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 66, 100, 104, 108, 169, 172, 178], "tractogram_bootstrap_dg": 32, "NOT": [32, 165, 172, 177, 215, 224], "clip": [32, 36, 37, 70, 73, 78, 89, 167, 168, 170, 171, 177, 190, 218, 219, 226], "min": [32, 36, 37, 62, 64, 86, 89, 99, 109, 126, 135, 137, 146, 163, 165, 168, 170, 171, 172, 175, 178, 230, 233], "peak_dg": 32, "from_pmf": [32, 36, 37, 38, 168, 178], "peak_streamline_gener": 32, "closest_peak_dg_csd": 32, "tractogram_closest_peak_dg": 32, "ball": [32, 44, 45, 48, 68, 75, 84, 95, 146, 161, 167, 168, 171, 173, 177, 193, 234, 241], "residu": [32, 50, 51, 52, 53, 55, 67, 158, 163, 168, 171, 230, 233], "39": [25, 32, 33, 35, 36, 37, 40, 44, 53, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 100, 161, 165, 171, 216, 220], "trajectori": [33, 35, 36, 44, 68, 72, 95, 123, 157, 158, 166, 171, 175, 230, 234], "pathwai": [33, 34, 36, 66, 108, 124, 125, 126, 147, 157, 172, 174, 175, 177, 183, 184, 205], "constraint": [22, 33, 38, 44, 68, 71, 73, 83, 84, 90, 95, 145, 157, 158, 161, 165, 166, 171, 222, 231, 232, 234], "highest": [33, 62, 147, 157, 163, 165, 168, 171, 172, 218], "oppos": [33, 82, 157, 163, 171, 175], "draw": [33, 72, 96, 102, 105, 157, 175, 176], "therefor": [33, 51, 55, 59, 73, 75, 76, 78, 80, 81, 83, 98, 99, 134, 135, 137, 142, 144, 157, 163, 165, 167, 171, 241], "equival": [33, 78, 143, 157, 163, 165, 171, 173], "unlik": [33, 36, 157, 171], "entir": [19, 33, 39, 50, 55, 82, 83, 86, 108, 135, 157, 163, 169, 171, 172, 175, 177, 225], "deterministicmaximumdirectiongett": [33, 40, 178], "detmax_dg": 33, "sh_to_pmf": [33, 35, 36, 168], "streamline_gener": [33, 36, 37, 38, 39, 40, 131], "tractogram_deterministic_dg": 33, "approach": [22, 34, 36, 55, 59, 66, 67, 74, 82, 83, 86, 89, 94, 102, 104, 105, 106, 157, 163, 167, 171, 172, 174, 177, 196], "direction": [34, 66, 86, 157], "tract": [34, 44, 62, 66, 74, 78, 100, 108, 109, 127, 129, 147, 149, 157, 163, 168, 171, 172, 174, 176, 177, 185, 200, 224, 226, 232, 234], "wide": [34, 66, 113, 157, 175, 237], "internet": [34, 66, 90], "qualiti": [34, 50, 51, 62, 66, 79, 111, 125, 156, 163, 166, 168, 169, 171, 172, 176, 177, 179, 218, 219, 224], "basi": [34, 36, 66, 79, 83, 86, 91, 92, 155, 157, 158, 165, 166, 167, 168, 170, 171, 177, 178, 198, 218, 220, 221, 224, 226, 227, 229, 241], "peak_slic": [34, 66, 71, 89, 90, 218], "peak_dir": [34, 66, 71, 89, 90, 169], "peak_valu": [34, 66, 70, 71, 81, 89, 90, 168, 171, 178, 222], "csa_direction_field": [34, 66], "sli": [34, 38, 49, 52, 53, 55, 66, 107], "set_axis_off": [34, 38, 49, 50, 52, 59, 64, 66, 75, 76, 79, 93, 107], "imshow": [34, 38, 40, 49, 50, 51, 52, 53, 54, 55, 59, 62, 64, 66, 72, 74, 75, 76, 78, 79, 80, 82, 85, 86, 87, 89, 93, 97, 102, 107, 116, 131, 176], "grai": [34, 35, 38, 40, 49, 50, 51, 52, 53, 54, 55, 59, 64, 66, 72, 74, 79, 80, 82, 84, 85, 87, 97, 107, 116, 131, 157, 163, 171, 172, 175, 176, 243, 244], "gfa_tracking_mask": [34, 66], "deriv": [34, 35, 51, 66, 73, 74, 79, 80, 88, 94, 142, 147, 152, 155, 163, 165, 166, 167, 171, 172, 173, 175, 176, 177, 180, 195, 242], "specifi": [19, 34, 43, 51, 66, 82, 84, 88, 89, 96, 97, 131, 138, 142, 147, 150, 151, 152, 154, 155, 156, 157, 163, 165, 166, 167, 170, 171, 172, 173, 175, 176, 177, 182, 183, 184, 189, 190, 195, 196, 197, 198, 204, 215, 224, 237, 242], "grid": [34, 43, 44, 46, 66, 70, 71, 83, 96, 106, 135, 137, 161, 163, 171, 173, 175, 176, 215, 222, 230], "togeth": [34, 52, 66, 77, 83, 84, 86, 97, 99, 119, 131, 134, 138, 143, 163, 165, 169, 171, 172, 175, 177, 224, 227], "garyfallidis12": [34, 66, 98, 111, 112, 113, 114, 123, 146, 157, 172, 175], "happen": [19, 34, 66, 83, 102, 135, 136, 165, 177, 224], "streamlines_actor": [34, 38, 39, 66, 128, 136], "static": [34, 66, 92, 96, 97, 99, 100, 104, 105, 106, 148, 149, 156, 163, 165, 169, 171, 176, 177, 179, 180, 181, 185, 207, 233, 243, 244], "tractogram_eudx": [34, 66], "toward": [34, 35, 40, 66, 83, 96, 106, 143, 146, 157, 163, 165, 171, 175, 176, 177, 242], "accur": [34, 38, 66, 67, 73, 78, 89, 96, 146, 155, 157, 165, 167, 170, 171, 175, 177, 187, 188, 231], "pft": [35, 153, 158, 218, 219, 233], "girard2014": [35, 40, 157], "pve": [35, 40, 84, 116, 157, 172, 175, 177, 211, 223, 243, 244], "incorrectli": [35, 157], "corticospin": [35, 40, 62, 84, 108, 109, 116, 147, 157, 171, 175], "fluid": [35, 40, 80, 82, 84, 89, 116, 157, 165, 171, 175, 177, 211, 243, 244], "kept": [35, 71, 126, 157, 163, 165, 168, 171, 175], "continu": [21, 22, 35, 40, 44, 68, 95, 146, 157, 158, 171, 175, 215, 221, 234], "whenev": [35, 40, 171], "invalidpoint": [35, 40, 175, 178], "f_pve_csf": [35, 40], "f_pve_gm": [35, 40], "f_pve_wm": [35, 40], "stanford_pve_map": [35, 40, 157], "pve_csf_data": [35, 40], "pve_gm_data": [35, 40], "pve_wm_data": [35, 40], "_": [35, 40, 53, 67, 72, 77, 82, 85, 87, 88, 89, 92, 94, 97, 99, 100, 104, 116, 119, 125, 165, 166, 167, 171, 173, 175, 177, 237, 238], "return_voxs": [35, 60, 75, 81, 163, 169], "dg": [35, 40, 175, 218], "smith2012": [35, 40], "determin": [35, 40, 62, 71, 82, 83, 84, 116, 131, 144, 163, 167, 168, 172, 173, 175, 177, 178, 190, 194, 241], "invalid": [35, 40, 43, 75, 83, 84, 85, 87, 88, 89, 163, 165, 169, 175, 213, 217, 230], "conjunct": 35, "cmc_criterion": 35, "from_pv": [35, 175, 178], "average_voxel_s": [35, 175], "pft_back_tracking_dist": [35, 175], "distanc": [35, 98, 99, 100, 108, 109, 112, 113, 114, 128, 130, 142, 163, 165, 167, 168, 169, 171, 172, 174, 176, 177, 178, 185, 200, 205, 211, 225, 229, 235, 242], "backtrack": [35, 40, 175], "wm": [35, 51, 71, 73, 84, 116, 157, 171, 177, 214, 231, 233, 243, 244], "csf": [35, 59, 80, 82, 83, 84, 89, 116, 171, 177, 217, 243, 244], "pft_front_tracking_dist": [35, 175], "event": [35, 92, 134, 165, 172, 176, 177, 215, 218, 243, 244], "particle_count": [35, 175], "min_wm_pve_before_stop": [35, 175, 177, 211], "gm": [35, 51, 84, 89, 116, 165, 171, 177, 243, 244], "wm_pve": 35, "particularlyuseful": 35, "sub": [35, 39, 44, 51, 69, 79, 80, 96, 138, 161, 163, 165, 169, 170, 171, 172, 177, 218], "exit": [35, 40, 131, 165, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 218], "deep": [35, 67, 73, 145, 158, 170, 177, 191, 226, 230], "pft_streamline_gen": 35, "max_cross": [35, 175], "maxlen": [35, 175], "1000": [35, 39, 43, 44, 51, 53, 56, 58, 64, 67, 74, 75, 79, 82, 84, 85, 90, 96, 97, 104, 122, 146, 161, 163, 165, 166, 170, 171, 173, 176, 177, 215, 237, 238, 243, 244], "return_al": [35, 40, 175], "tractogram_pft": 35, "prob_streamline_gener": 35, "tractogram_probabilistic_cmc": 35, "whittingstal": [35, 40, 157, 166, 175, 177, 211], "derich": [35, 40, 62, 157, 167, 168, 171, 173, 175, 177, 189, 211, 241, 243, 244], "bias": [35, 40, 73, 98, 157, 165, 175, 177, 211], "98": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 135, 157, 158, 175, 176, 177, 211, 220], "266": [35, 40, 73, 82, 83, 157, 175, 177, 211, 221], "278": [35, 40, 82, 83, 84, 157, 175, 177, 211, 222], "tournier": [35, 40, 44, 71, 84, 161, 167, 168, 170, 171, 175, 177, 194, 218, 241], "calamant": [35, 40, 71, 84, 167, 168, 171, 175, 241], "connelli": [35, 40, 71, 84, 167, 168, 171, 175, 241], "63": [25, 32, 33, 35, 37, 40, 51, 52, 53, 72, 73, 74, 79, 82, 83, 84, 85, 87, 88, 98, 175, 220], "1924": [35, 40, 175, 224], "1938": [35, 40, 80, 82, 87, 175, 226], "latter": [21, 36, 74, 155, 163], "cannot": [19, 36, 69, 80, 85, 89, 165, 167, 170, 175, 213, 219, 222, 224, 230, 231, 232, 233], "neg": [36, 38, 43, 51, 55, 70, 71, 73, 83, 84, 85, 128, 163, 165, 166, 167, 168, 169, 171, 172, 175, 177, 190, 194, 213, 215, 221, 226, 228, 241], "ideal": [36, 44, 55, 73, 161, 171, 241], "strictli": [36, 38, 125, 171, 172], "tractogram_probabilistic_dg_pmf": 36, "disadvantag": 36, "tend": [36, 55, 83], "ram": [36, 89, 171], "81": [25, 32, 33, 35, 36, 37, 40, 51, 53, 54, 70, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 87, 102, 114, 135, 163, 166, 171, 220, 225], "106": [36, 54, 70, 78, 82, 83, 102, 220], "76": [25, 32, 35, 36, 37, 40, 51, 53, 54, 69, 70, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 87, 135, 152, 216, 220], "181": [36, 73, 82, 83, 104, 114, 221, 222], "sh": [36, 84, 91, 158, 167, 168, 169, 170, 171, 177, 210, 218, 224, 226, 227, 230, 231, 233, 241], "362": [35, 36, 39, 72, 82, 83, 84, 87, 88, 90, 166, 167, 171, 222], "tractogram_probabilistic_dg_sh": 36, "Not": [36, 145, 213], "attribut": [36, 43, 70, 71, 72, 73, 78, 82, 87, 114, 168, 169, 170, 215, 217, 218, 225, 226, 228, 232], "return_sh": [36, 47, 90, 168], "fod_coeff": 36, "tractogram_probabilistic_dg_sh_pfm": 36, "ptt": [37, 145, 158, 166, 168, 231, 232, 233], "aydogan2021": 37, "pttdirectiongett": [37, 178], "ptt_dg": 37, "probe_length": [37, 168], "direction_gett": [37, 178], "tractogram_ptt_dg_pmf": 37, "aydogan": [37, 168, 232], "db": [37, 168], "shi": [37, 168], "feb": [37, 168, 243, 244], "635": [37, 82, 168, 213], "647": [37, 82, 168, 218], "1109": [37, 79, 82, 89, 168, 171, 215], "tmi": [37, 168, 171], "2020": [22, 37, 44, 55, 72, 73, 82, 83, 100, 108, 124, 125, 147, 159, 161, 165, 166, 167, 168, 170, 171, 172, 174, 177, 183, 184, 190, 205, 225, 226, 227, 228], "3034038": [37, 168], "epub": [37, 168], "pmid": [37, 165, 168], "33104507": [37, 168], "pmcid": [37, 165, 168], "pmc7931442": [37, 168], "canalesrodriguez2015": [38, 89], "richardson": [38, 77, 89, 119, 171], "luci": [38, 77, 89, 119, 171], "noncentr": [38, 89, 171, 177], "chi": [38, 59, 89, 165, 171, 177], "reflect": [38, 89, 126, 131, 144, 163, 171, 177, 206], "transform_streamlin": [38, 39, 104, 134, 135, 178, 231, 232], "rumbasdmodel": [38, 89, 178], "t1_aff": [38, 39], "voxelwis": [38, 89, 171, 177, 215], "tv": [38, 89, 167, 171, 177, 199], "use_tv": [38, 89, 171, 177], "although": [38, 51, 72, 73, 83, 85, 86, 99, 152, 170, 171, 175], "usag": [22, 38, 75, 146, 158, 170, 171, 177, 212, 222, 233], "wm_respons": [38, 89, 171], "n_iter": [38, 89, 171, 177], "200": [38, 44, 51, 55, 71, 79, 82, 83, 86, 89, 105, 114, 121, 134, 146, 161, 166, 171, 177, 215, 230, 232, 243, 244], "rumba_fit": [38, 89], "fodf": [38, 67, 79, 84, 90, 155, 170, 171, 177, 213], "f_wm": [38, 89, 171, 178], "establish": [38, 94, 163], "caution": [38, 86], "isotrop": [38, 44, 60, 80, 83, 84, 89, 104, 130, 142, 161, 163, 165, 168, 170, 172, 173, 175, 177, 178, 179, 180, 226, 235], "bia": [38, 52, 83, 116, 165, 167, 171, 175, 213, 219, 224], "advantag": [19, 38, 55, 69, 81, 85, 90, 99, 123, 163], "f_wm_tracking_mask": 38, "adher": 38, "manipul": [38, 43, 141, 162, 169], "tractogram_probabilistic_rumba": 38, "canal": [38, 44, 77, 89, 119, 161, 171, 177, 220], "rodr\u00edguez": [38, 44, 89, 161, 171, 177], "sotiropoulo": [38, 44, 89, 161, 171, 177], "aja": [38, 89, 171, 177], "fern\u00e1ndez": [38, 89, 171, 177], "radua": [38, 89, 171, 177], "mendizab": [38, 89, 171, 177], "iturria": [38, 89, 171, 177], "medina": [38, 89, 171, 177], "meli": [38, 89, 171, 177], "garc\u00eda": [38, 89, 171, 177], "alem\u00e1n": [38, 89, 171, 177], "g\u00f3mez": [38, 89, 171, 177], "thiran": [38, 89, 171, 177], "sarr\u00f3": [38, 89, 171, 177], "pomarol": [38, 89, 171, 177], "clotet": [38, 89, 171, 177], "salvador": [38, 89, 171, 177], "multichannel": [38, 89, 171, 177], "ONE": [38, 39, 52, 53, 55, 89, 90, 167, 170, 171, 177, 187, 243, 244], "e0138910": [38, 89, 171, 177], "1371": [38, 39, 52, 53, 55, 72, 82, 89, 90, 167, 170, 171, 177, 187, 217, 243, 244], "pone": [38, 39, 52, 53, 55, 89, 90, 167, 170, 171, 177, 187, 243, 244], "0138910": [38, 89, 171, 177], "sfm": [39, 44, 90, 161, 178, 214, 215, 217, 223, 226, 230, 233], "rokem2015": [39, 90, 171], "select_random_set_of_streamlin": [39, 43, 125, 178], "freesurf": [39, 131, 166], "canon": [39, 167, 171, 175], "deconvolv": [39, 71, 77, 119, 155, 171], "symmetr": [39, 44, 79, 90, 91, 99, 101, 103, 104, 113, 153, 158, 163, 165, 167, 169, 170, 171, 175, 177, 205, 218, 219, 222, 226, 234, 237, 238, 241], "sf_model": [39, 90], "sparsefasciclemodel": [39, 90, 178], "l1_ratio": [39, 90, 171], "alpha": [39, 74, 86, 90, 100, 143, 149, 163, 165, 166, 167, 171, 175, 176, 177, 185, 190, 200], "001": [39, 71, 82, 84, 89, 90, 100, 163, 165, 169, 171, 175, 177], "pnm": 39, "suffici": [39, 44, 46, 89, 161, 171, 222], "high": [39, 44, 50, 51, 55, 62, 71, 73, 79, 80, 82, 83, 84, 91, 94, 111, 122, 142, 161, 163, 167, 170, 171, 172, 173, 175, 177, 185, 217, 243, 244], "sake": [39, 53, 84], "compon": [22, 39, 50, 52, 53, 72, 73, 80, 82, 83, 89, 121, 143, 151, 163, 165, 167, 169, 171, 173, 175, 177, 187, 188, 215, 217, 218, 224], "subject": [39, 58, 78, 80, 86, 88, 94, 99, 100, 108, 123, 131, 134, 142, 147, 148, 151, 154, 165, 166, 170, 171, 172, 174, 177, 182, 183, 184, 233, 236, 243, 244, 248, 249], "anatomi": [39, 43, 108, 126, 128, 145, 158, 177, 185, 200], "throughout": [39, 100, 163, 175], "subset": [39, 163, 170], "plot_streamlin": 39, "tractogram_sfm": 39, "tractogram_sfm_detr": 39, "jason": [39, 90, 123, 171, 174], "kendrick": [39, 90, 171], "aviv": [39, 90, 171], "brian": [39, 90, 123, 171, 174], "e0123272": [39, 90, 171, 243, 244], "0123272": [39, 90, 171, 243, 244], "fa": [40, 46, 53, 62, 64, 70, 71, 73, 78, 79, 80, 84, 86, 87, 88, 89, 94, 104, 123, 134, 135, 146, 147, 155, 165, 166, 169, 171, 174, 176, 177, 178, 193, 194, 195, 196, 210, 218, 220, 222, 223, 225, 243, 244, 246], "endpoint": [40, 99, 113, 131, 171, 178], "outsideimag": [40, 175, 178, 215], "trackpoint": [40, 175, 178, 224], "2004": [40, 44, 75, 82, 84, 161, 166, 171, 173, 175, 230], "dti": [40, 44, 53, 62, 68, 69, 71, 72, 73, 78, 83, 84, 86, 87, 88, 94, 95, 121, 142, 146, 147, 153, 158, 160, 161, 165, 166, 174, 177, 178, 196, 213, 214, 215, 216, 220, 221, 222, 224, 226, 227, 230, 231, 233, 234, 235, 246], "fractional_anisotropi": [40, 71, 78, 79, 178], "tensormodel": [40, 62, 69, 71, 73, 78, 80, 86, 94, 178, 215, 220, 231, 246], "metric_map": [40, 175], "tensor_model": 40, "tenfit": [40, 71, 73, 78, 86, 222, 246], "eval": [40, 71, 77, 78, 89, 94, 119, 121, 146, 171, 173, 175, 177, 178, 195, 196], "threshold_criterion": 40, "mask_fa": 40, "xtick": [40, 51, 53, 55, 74, 80, 85], "ytick": [40, 51, 53, 55, 74, 80, 85], "nearest": [40, 67, 74, 76, 79, 82, 86, 93, 109, 131, 163, 165, 172, 175, 177, 206, 232], "tight_layout": [40, 72, 86, 87, 102], "threshold_fa": 40, "tractogram_probabilistic_thresh_al": 40, "tractogram_deterministic_thresh_al": 40, "neighborhood": [40, 108, 163, 172, 177, 180], "binary_criterion": 40, "white_matter_mask": 40, "tractogram_deterministic_binary_al": 40, "include_map": [40, 175, 177, 211], "exclude_map": [40, 175, 177, 211], "stem": [40, 175], "plausibl": [40, 73, 171], "act_criterion": 40, "121": [40, 82, 83, 87, 102, 220], "122": [40, 82, 83, 84, 87, 102, 114, 171, 220], "act_map": 40, "tractogram_deterministic_act_al": 40, "tractogram_deterministic_act_valid": 40, "respect": [19, 40, 62, 72, 80, 83, 89, 92, 97, 99, 116, 131, 142, 158, 163, 165, 166, 167, 169, 171, 172, 175, 176, 177, 200, 226, 227], "cut": [40, 175, 176], "subcort": [40, 175], "examples_builtfile_format": 42, "streamline_format": [42, 43, 234], "complex": [43, 126, 144, 158, 171, 230, 239, 241], "question": [43, 62, 123, 131, 160, 175, 217, 226, 232, 233, 236, 249], "create_nifti_head": [43, 178], "get_reference_info": [43, 178], "is_header_compat": [43, 178], "fetcher": [43, 74, 82, 86, 96, 104, 123, 134, 158, 170, 178, 214, 215, 218, 221, 222, 224, 226, 227, 229, 231, 233], "fetch_file_format": [43, 178], "get_file_format": [43, 178], "cc_m_sub": 43, "laf_m_sub": 43, "lpt_m_sub": 43, "raf_m_sub": 43, "rpt_m_sub": 43, "template0": 43, "nii": [43, 49, 50, 52, 53, 54, 55, 58, 59, 60, 62, 64, 67, 78, 79, 80, 96, 97, 107, 123, 128, 131, 137, 138, 141, 142, 146, 147, 151, 152, 154, 155, 156, 157, 160, 169, 177, 190, 200, 208, 213, 217, 226, 231, 246], "gz": [43, 49, 50, 52, 53, 54, 55, 58, 59, 60, 62, 64, 67, 78, 79, 80, 96, 97, 107, 123, 128, 131, 134, 137, 138, 141, 146, 147, 151, 152, 154, 155, 156, 157, 160, 169, 177, 190, 200, 208, 226, 231, 246], "bundles_filenam": 43, "ref_anat_filenam": 43, "basenam": [43, 169], "reference_anatomi": 43, "cc_trk": 43, "cc_sft": 43, "laf_sft": 43, "raf_sft": 43, "anywai": [43, 237, 238], "lpt_sft": 43, "bbox_valid_check": [43, 100, 104, 108, 109, 111, 112, 113, 114, 123, 124, 169, 172], "rpt_sft": 43, "nifti1": [43, 166, 177, 192, 201, 209], "nifti1imag": [43, 70, 72, 73, 75, 76, 81, 93, 163, 166, 169], "trkfile": [43, 169], "nifti1head": [43, 169], "dict": [43, 51, 163, 165, 166, 169, 170, 171, 173, 175, 176, 177], "voxel_ord": [43, 169, 178], "accept": [43, 159, 165, 172, 220], "varieti": [43, 83, 97, 113, 155], "fake": 43, "wish": [43, 89], "freedom": [43, 96, 143, 163], "beginn": [43, 226], "create_tractogram_head": [43, 108, 178], "nifti_head": 43, "lpt": 43, "rpt": 43, "safer": [43, 96], "cc": [19, 43, 62, 69, 70, 78, 102, 106, 156, 163, 177, 180, 208, 221, 243, 244], "laf": 43, "raf": 43, "is_bbox_in_vox_valid": [43, 169, 178], "remove_invalid_streamlin": [43, 169, 178], "removing_invalid_coordin": 43, "to_voxmm": [43, 169, 178], "to_rasmm": [43, 169, 178], "subsampl": [43, 88, 163, 167, 175], "mi": [43, 96, 97, 163, 169, 177, 230], "corner": [43, 97, 165, 169, 175, 218, 225], "to_corn": [43, 169, 178], "cc_streamlines_vox": 43, "laf_streamlines_vox": 43, "raf_streamlines_vox": 43, "lpt_streamlines_vox": 43, "rpt_streamlines_vox": 43, "reus": [43, 62, 171, 225], "space_attribut": [43, 108, 169, 178], "cc_densiti": 43, "laf_dens": 43, "raf_dens": 43, "lpt_densiti": 43, "rpt_densiti": 43, "explicitli": [43, 83, 93, 163, 165, 170, 171, 172, 214, 215, 224, 233], "care": [43, 62, 75, 85, 89, 111, 158, 169, 171, 175, 177], "metadata": [43, 170], "mention": [43, 53, 73, 82, 84, 147, 215], "vox": [43, 131, 169, 178], "cc_1000": 43, "laf_1000": 43, "raf_1000": 43, "lpt_1000": 43, "rpt_1000": 43, "experi": [44, 82, 86, 105, 147, 166], "synthet": [44, 145, 158, 166, 171, 243, 244], "alter": [44, 175], "dwi": [44, 55, 57, 59, 61, 62, 67, 79, 80, 83, 85, 86, 96, 142, 146, 151, 155, 163, 166, 167, 169, 170, 171, 172, 175, 177, 208, 226, 227, 232, 234, 246], "piesno": [44, 57, 61, 158, 178, 213, 214, 215, 217, 222, 234], "nlmean": [44, 50, 57, 61, 85, 138, 153, 177, 178, 189, 213, 214, 215, 222, 229, 233, 234], "supervis": [44, 57, 61, 158, 167, 177, 190, 228, 234], "independ": [44, 57, 61, 85, 111, 167, 171, 175, 177, 227, 234], "pca": [44, 55, 57, 61, 73, 84, 85, 153, 158, 175, 177, 178, 187, 188, 215, 216, 218, 224, 227, 231, 232, 233, 234], "empir": [44, 50, 57, 61, 85, 175, 234], "soft": [44, 54, 57, 61, 167, 234], "ascm": [44, 54, 57, 61, 234], "marcenko": [44, 52, 57, 61, 73, 153, 167, 177, 187, 188, 234], "pastur": [44, 52, 57, 61, 73, 153, 167, 177, 187, 188, 234], "suppress": [44, 50, 53, 57, 61, 73, 80, 83, 151, 153, 167, 215, 216, 217, 218, 234], "gibb": [44, 57, 61, 73, 153, 158, 172, 177, 178, 199, 224, 225, 226, 227, 229, 232, 234], "oscil": [44, 57, 61, 73, 83, 92, 153, 163, 171, 234], "singl": [44, 51, 67, 70, 71, 73, 75, 78, 79, 85, 88, 89, 90, 94, 97, 99, 100, 102, 121, 122, 123, 128, 131, 142, 144, 146, 148, 149, 155, 158, 161, 163, 165, 168, 169, 170, 171, 172, 173, 175, 177, 181, 193, 194, 213, 218, 224, 227, 231, 235], "shell": [19, 44, 51, 53, 55, 56, 59, 62, 67, 68, 70, 73, 74, 76, 79, 83, 85, 86, 89, 92, 93, 95, 122, 146, 158, 161, 166, 168, 171, 173, 177, 201, 224, 225, 226, 227, 229, 230, 231, 234, 243, 244, 248], "sl": [44, 126, 161, 214], "nnl": [44, 161, 165, 171], "ye": [44, 142, 161], "typic": [44, 73, 88, 90, 96, 104, 131, 151, 161, 163, 168, 169, 171, 172, 173, 174, 175, 177, 237, 238], "1200": [44, 82, 84, 134, 136, 137, 146, 161, 215, 243, 244], "success": [44, 161, 169, 170, 171, 248], "1500": [19, 44, 54, 82, 92, 161, 165, 218, 243, 244], "basser": [44, 52, 78, 155, 161, 167, 171, 177, 196, 237], "1994": [44, 78, 82, 155, 161, 171, 177, 196, 225, 237], "yendiki2013": [44, 94, 161], "chang2005": [44, 94, 161, 171], "chung2006": [44, 94, 161], "fwdti": [44, 80, 161, 178, 215, 216, 224], "acquist": [44, 161], "32": [25, 32, 33, 35, 36, 37, 40, 44, 53, 54, 67, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 88, 96, 97, 102, 161, 163, 165, 170, 171, 173, 177, 213, 217, 220, 222, 223], "500mm": [44, 161], "1500mm": [44, 161], "pasternak": [44, 80, 161], "2009": [44, 59, 80, 82, 92, 104, 105, 106, 156, 161, 163, 165, 166, 167, 171, 172, 177, 193, 225, 243, 244], "dual": [44, 161, 175], "echo": [44, 82, 142, 155, 161, 166, 171, 173, 177, 196, 197, 237, 239], "epi": [44, 161], "acquir": [44, 50, 51, 52, 54, 55, 58, 59, 64, 71, 72, 73, 74, 79, 80, 82, 85, 87, 88, 92, 121, 142, 152, 154, 155, 161, 165, 166, 167, 171, 175, 177, 199], "2500": [44, 56, 92, 122, 161, 171, 230, 243, 244], "least": [22, 44, 55, 73, 82, 84, 85, 88, 89, 94, 96, 105, 161, 163, 165, 168, 170, 171, 172, 175, 177, 195, 196, 226, 237, 238, 248], "jensen2005": [44, 73, 85, 155, 161], "tom": [44, 161, 163, 215, 231, 232], "dela": [44, 73, 83, 88, 161, 165, 166, 171, 231, 232], "haij": [44, 73, 83, 88, 161, 165, 166, 171, 231, 232], "micro": [44, 78, 155, 161, 215], "wmti": [44, 68, 73, 95, 161, 224, 234], "increment": [44, 161, 165], "fiereman": [44, 51, 53, 55, 73, 74, 152, 155, 161, 167, 171, 177, 187, 188], "tabesh": [44, 73, 74, 161, 171, 177, 195], "7t": [44, 55, 161], "3000": [40, 44, 84, 146, 161, 166, 233, 243, 244], "aganj": [44, 46, 70, 146, 161, 171, 173, 177, 193], "westin": [44, 87, 88, 161, 165, 166, 171, 221], "ivim": [44, 82, 153, 158, 161, 166, 177, 178, 197, 215, 218, 219, 224, 225, 226, 230, 231, 243, 244], "lebihan": [44, 78, 155, 161, 171, 177, 196, 237], "1984": [44, 73, 79, 82, 108, 161, 165, 225], "2019": [19, 22, 44, 67, 73, 82, 85, 88, 159, 161, 166, 167, 170, 171, 176, 177, 200, 219, 224, 225, 226, 241, 243, 244], "sdt": [44, 161, 171, 213, 214, 221, 224], "qbi": [44, 142, 161, 235, 241], "60": [25, 32, 33, 35, 36, 37, 40, 44, 50, 53, 55, 64, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 119, 122, 125, 128, 130, 142, 161, 166, 171, 220, 243, 244], "64": [19, 24, 25, 32, 33, 35, 36, 37, 40, 44, 51, 52, 53, 56, 62, 70, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 88, 91, 92, 98, 102, 111, 114, 122, 134, 146, 161, 166, 170, 171, 173, 214, 215, 222, 243, 244], "1000mm": [44, 161], "dsi": [44, 68, 75, 81, 93, 95, 118, 120, 142, 158, 161, 166, 178, 213, 215, 220, 221, 222, 234, 235, 243, 244], "515": [44, 56, 82, 86, 120, 161, 166, 222], "encod": [44, 72, 85, 87, 88, 158, 161, 163, 165, 166, 169, 170, 171, 233, 237], "subsequ": [44, 90, 161, 167, 172], "half": [44, 69, 87, 161, 165, 171, 175], "mm2": [44, 161], "2013": [19, 44, 52, 53, 55, 62, 73, 74, 82, 83, 89, 92, 94, 158, 159, 161, 166, 167, 171, 177, 187, 220, 221, 222, 225, 243, 244], "dsid": [44, 77, 119, 161], "203": [25, 44, 73, 75, 76, 81, 82, 83, 93, 161, 166, 221, 243, 244], "radiu": [44, 50, 52, 105, 109, 151, 161, 163, 165, 167, 168, 171, 172, 173, 175, 176, 177, 180, 187, 188, 190, 204, 229, 230, 237, 242], "4000mm": [44, 161], "rodriguez": [44, 77, 89, 119, 161, 171, 220], "23": [22, 25, 32, 33, 35, 36, 37, 40, 44, 53, 67, 71, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 145, 155, 159, 161, 163, 171, 220, 221, 232, 233], "4000": [44, 82, 84, 161, 243, 244], "258": [44, 73, 82, 83, 161], "opdt": [44, 161], "tuch": [44, 75, 161, 171], "2007": [44, 71, 76, 82, 84, 89, 93, 161, 167, 168, 171, 173, 177, 194, 226, 241], "tristan": [44, 161, 171], "vega": [44, 161, 171], "shore": [44, 68, 95, 161, 178, 218, 221, 222, 225, 230, 234, 235], "514": [44, 72, 73, 77, 82, 119, 161, 222], "five": [44, 161, 170, 171], "lattic": [44, 105, 161, 163, 176], "\u00f6zarslan": [44, 92, 161], "six": [44, 78, 92, 155, 161, 163, 171, 221, 224], "5000": [44, 56, 82, 85, 91, 122, 161, 165, 171], "6000": [44, 161], "56": [25, 32, 33, 35, 36, 37, 40, 44, 53, 58, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 100, 115, 116, 135, 154, 161, 171, 173, 220], "87": [25, 32, 33, 35, 36, 37, 40, 44, 53, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 94, 100, 161, 175, 220, 232], "170": [44, 73, 82, 83, 86, 161, 221, 243, 244], "olson": [44, 161], "ozarslan": [44, 59, 83, 88, 161, 167, 171], "1016": [44, 51, 53, 72, 73, 80, 82, 87, 88, 89, 152, 161, 163, 165, 166, 167, 171, 177, 187, 188, 215, 243, 244], "116405": [44, 73, 83, 161, 165, 166, 171], "mapl": [44, 83, 158, 161, 171, 216, 217], "wu": [44, 76, 93, 116, 161, 171], "minn": [44, 161], "hcp": [44, 55, 67, 83, 158, 161, 166, 171, 213, 218, 222, 230, 231, 233, 243, 244], "sm": [44, 161], "mt": [44, 86, 161, 165, 166], "jeurissen": [44, 51, 71, 73, 84, 89, 152, 161, 171], "forecast": [44, 68, 95, 158, 161, 178, 217, 218, 234], "1480": [44, 82, 161, 217], "36": [24, 25, 32, 33, 35, 36, 37, 40, 44, 53, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85, 86, 87, 93, 161, 163, 165, 171, 220], "anderson": [44, 79, 161, 170, 171], "2005": [44, 73, 79, 82, 85, 90, 94, 155, 161, 163, 171, 175, 177, 195, 196, 225], "256": [44, 71, 82, 83, 84, 114, 116, 146, 158, 161, 163, 165, 170, 172, 177, 180, 222, 226], "qti": [44, 68, 72, 95, 158, 161, 176, 178, 231, 234], "216": [44, 82, 83, 161, 221], "250": [44, 79, 82, 83, 137, 155, 161, 163, 171, 177], "200mm": [44, 161], "four": [22, 44, 85, 86, 92, 121, 157, 161, 163, 165, 167, 170, 171], "stick": [44, 85, 122, 161, 171, 173], "prolat": [44, 71, 90, 161, 171, 173, 220], "plane": [44, 83, 86, 121, 134, 137, 144, 155, 161, 165, 171, 175, 224, 237, 242], "120": [44, 51, 73, 82, 83, 96, 97, 134, 152, 161, 163, 220, 243, 244], "morez": [44, 161], "2023": [22, 44, 82, 100, 145, 149, 161, 163, 177, 185, 225, 231, 232, 233], "217": [44, 82, 83, 88, 161, 166, 221], "herberthson": [44, 88, 161, 171], "jone": [44, 56, 62, 94, 161, 165, 171, 177, 195, 196], "1999": [44, 56, 78, 82, 161, 175, 218, 225], "behren": [44, 161, 171, 173], "2003": [44, 82, 96, 97, 161, 163, 225], "qtau": [44, 86, 158, 161, 218], "vari": [22, 44, 53, 59, 82, 86, 161, 167, 171], "strength": [44, 78, 86, 142, 155, 161, 163, 165, 166, 171, 173, 177, 185, 243, 244], "dellacqua2014": [44, 84, 161], "smt": [44, 79, 85, 161, 171], "smt2": [44, 158, 161, 171, 227], "72": [25, 32, 33, 35, 36, 37, 40, 44, 53, 67, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 87, 102, 146, 158, 161, 163, 172, 220, 230, 243, 244], "\u03bcm2": [44, 161], "\u03bcm": [44, 161], "24": [22, 24, 25, 32, 33, 35, 36, 37, 40, 44, 53, 60, 62, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 88, 100, 111, 159, 161, 163, 165, 171, 172, 216, 217, 218, 220, 222], "rapid": [44, 144, 161], "netohe2019": [44, 85, 161], "kaden2016b": [44, 85, 161], "cti": [44, 72, 145, 161, 166, 178, 233], "netohe2020": [44, 72, 161, 171], "novellol2022": [44, 72, 161], "nethe2021": [44, 72, 161], "spectrum": [44, 68, 77, 95, 119, 162, 171, 234], "correl": [44, 68, 95, 104, 105, 106, 145, 151, 156, 158, 163, 165, 171, 175, 177, 180, 215, 233, 234], "histolog": [44, 68, 95, 170, 234], "resdnn": [44, 68, 95, 158, 166, 170, 230, 234], "contamin": [44, 68, 95, 171, 234], "intravoxel": [44, 68, 95, 153, 171, 177, 197, 234], "msdki": [44, 51, 68, 73, 95, 178, 233, 234], "qt": [44, 68, 95, 166, 171, 234, 243, 244], "buan": [44, 100, 127, 129, 153, 158, 163, 176, 177, 200, 226, 227, 228, 234], "score": [44, 69, 126, 127, 129, 147, 172, 175, 218, 234], "creation": [44, 113, 127, 129, 145, 158, 170, 172, 177, 213, 218, 220, 234], "afq": [44, 127, 129, 224, 229, 234], "outlier": [44, 73, 94, 108, 127, 129, 163, 171, 177, 195, 196, 218, 234], "confid": [44, 127, 129, 165, 175, 234], "groupwis": [44, 101, 103, 158, 163, 231, 234], "diffeomorph": [44, 101, 103, 104, 153, 158, 163, 176, 177, 180, 181, 219, 222, 227, 231, 234], "fuzzi": [44, 101, 103, 218, 234], "nonrigid": [44, 101, 103, 153, 177, 185, 234], "bundlewarp": [44, 101, 103, 145, 153, 158, 176, 177, 178, 185, 232, 233, 234], "deform": [44, 96, 97, 100, 101, 102, 103, 105, 153, 163, 175, 176, 177, 180, 185, 217, 225, 226, 233, 234], "classif": [44, 53, 84, 110, 115, 151, 158, 166, 172, 215, 226, 234], "search": [19, 44, 62, 108, 110, 115, 145, 158, 167, 171, 172, 175, 177, 205, 230, 231, 232, 233, 234], "examples_built_python": 44, "examples_built_jupyt": 44, "mrm": [46, 51, 53, 55, 70, 72, 73, 75, 80, 85, 94, 146, 152, 165, 166, 167, 171, 173, 177, 187, 188, 195, 196, 199], "maskdata": [46, 47, 51, 53, 70, 73, 74, 78, 85], "numpass": [46, 47, 49, 51, 53, 70, 73, 74, 78, 84, 85, 89, 104, 105, 106, 107, 146, 172, 177, 204], "autocrop": [46, 47, 49, 51, 53, 70, 73, 74, 78, 85, 107, 172, 177, 204], "dilat": [46, 47, 51, 53, 70, 73, 74, 78, 85, 131, 172, 177, 204], "instanti": [46, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 92, 93, 96, 105, 165, 171, 173, 177], "csamodel": [46, 70, 131], "mainli": [46, 62, 70, 71, 112, 155, 165, 170], "start_tim": [46, 47], "processor": [46, 175], "sens": [46, 59, 83, 86, 89, 92, 102, 128, 167, 171, 175, 177, 236, 238], "csapeaks_parallel": 46, "return_odf": [46, 47, 70, 81, 168], "normalize_peak": [46, 47, 70, 81, 89, 168, 171], "npeak": [46, 47, 89, 168, 175, 177, 224], "time_parallel": [46, 47], "ran": [46, 47], "str": [46, 47, 116, 137, 146, 163, 165, 166, 167, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "csapeak": [46, 70, 131], "time_singl": [46, 47], "speedup": [46, 47, 113, 158, 172], "factor": [46, 47, 84, 89, 92, 96, 97, 104, 116, 131, 163, 165, 167, 171, 177, 179, 180, 187, 198, 227, 237, 241], "frozen": [46, 47, 222], "__name__": [46, 47], "__main__": [46, 47], "freeze_support": [46, 47], "reconst_csa_parallel": [46, 48, 234], "37": [25, 32, 33, 35, 36, 37, 40, 47, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 87, 100, 220], "cpu": [47, 152, 175, 221], "durat": [47, 78, 86, 142, 155, 165], "csd_peaks_parallel": 47, "csd_peak": [47, 71], "reconst_csd_parallel": [47, 48, 234], "examples_builtmultiprocess": 48, "b0": [49, 51, 53, 55, 56, 62, 67, 71, 76, 85, 89, 96, 97, 104, 105, 106, 107, 122, 145, 146, 155, 158, 163, 165, 166, 167, 170, 171, 173, 177, 186, 187, 190, 193, 194, 195, 196, 197, 198, 201, 213, 214, 218, 222, 233, 243, 244], "histeq": [49, 107, 178], "save_nifti": [49, 50, 52, 53, 54, 55, 58, 59, 60, 62, 64, 67, 78, 107, 128, 131, 178, 246], "scil_b0": [49, 107, 243, 244], "compani": [49, 107], "tesla": [49, 107, 166], "siemen": [49, 50, 59, 89, 107, 142, 166, 167, 171, 172, 177, 243, 244], "data_fnam": [49, 107], "squeez": [49, 67, 96, 97, 106, 107, 171, 175, 223], "fine": [49, 97, 102, 107], "tune": [49, 107], "num_pass": [49, 107], "yield": [49, 59, 107, 163, 168], "incorrect": [49, 107, 215, 228, 233], "float32": [49, 78, 102, 105, 107, 128, 168, 169, 172, 175, 229], "fname": [49, 99, 100, 107, 111, 112, 113, 114, 125, 163, 165, 166, 169, 172, 176, 177], "se_1": [49, 107], "5t": [49, 50, 107, 166, 172], "_binary_mask": [49, 107], "astyp": [49, 50, 54, 59, 62, 67, 76, 78, 97, 102, 107, 128, 131, 171, 175, 233], "_mask": [49, 107], "middl": [49, 50, 51, 52, 53, 55, 64, 77, 86, 96, 106, 107, 111, 119, 130, 137, 166, 172, 175, 176], "crop": [49, 78, 107, 177, 178, 204], "largest": [49, 107, 163, 168, 170, 171, 177], "significantli": [22, 49, 72, 107, 123, 175], "smaller": [49, 50, 71, 82, 83, 86, 88, 107, 108, 121, 124, 142, 163, 165, 167, 171, 172, 175, 176, 177, 187, 200], "auto": [49, 84, 107, 108, 165, 170, 177, 204, 215, 222, 224, 226, 232], "b0_mask_crop": [49, 107], "mask_crop": [49, 107], "_binary_mask_crop": [49, 107], "_mask_crop": [49, 107], "brain_extraction_dwi": [49, 61, 234], "coupe11": [50, 54, 151, 167], "degre": [50, 73, 77, 78, 85, 96, 119, 143, 155, 163, 165, 166, 167, 168, 171, 172, 173, 175, 241], "sharp": [50, 171], "non_local_mean": [50, 54, 178, 224], "radii": [50, 71, 165, 171, 173, 175, 177, 194, 218, 226], "involv": [50, 52, 71, 73, 84, 151, 155, 156, 163, 177, 237], "wavelet": [50, 178], "decomposit": [50, 167, 171, 177, 187, 188, 230, 237, 238], "frequenc": [50, 51, 73], "noise_estim": [50, 54, 59, 94, 178], "estimate_sigma": [50, 54, 94, 178, 213, 222], "adaptive_soft_match": [50, 178, 232], "dwi_fnam": [50, 52, 53, 58, 59], "dwi_bval_fnam": [50, 52, 53, 58, 59], "dwi_bvec_fnam": [50, 52, 53, 58, 59], "sherbrooke_3shel": [50, 58, 59, 64, 150, 151, 154, 243, 244], "denoin": 50, "noqa": [50, 53, 114, 165, 166], "e501": [50, 53, 114], "coil": [50, 54, 59, 89, 167, 171, 177], "sigma": [50, 52, 53, 54, 59, 62, 73, 74, 94, 96, 97, 102, 104, 151, 163, 167, 171, 172, 173, 177, 179, 187, 188, 189, 195, 196, 215, 230], "sharper": [50, 77, 119, 171], "den_smal": 50, "patch_radiu": [50, 52, 53, 54, 84, 151, 167, 177, 187, 188, 189, 190, 226, 233], "block_radiu": [50, 54, 167, 177, 189], "den_larg": 50, "varianc": [50, 52, 53, 72, 78, 83, 86, 151, 155, 163, 167, 171, 172, 175, 177, 195, 196, 222, 224, 229], "itself": [50, 72, 86, 88, 113, 147, 166, 170, 171, 172, 248], "den_fin": 50, "plot": [50, 51, 52, 53, 54, 69, 73, 74, 80, 82, 83, 85, 86, 88, 90, 100, 105, 106, 116, 121, 122, 123, 130, 147, 163, 171, 175, 177, 178, 215, 217, 220, 222, 224, 245], "axial_middl": [50, 54, 64], "final_output": 50, "ab": [50, 51, 54, 80, 97, 165, 171, 175, 220], "set_titl": [50, 51, 52, 53, 54, 55, 59, 72, 80, 82, 85, 86, 87, 89, 97, 102, 116], "denoised_ascm": 50, "bbox_inch": [50, 52, 54, 59, 62, 64, 75, 79, 97, 116], "tight": [50, 52, 54, 59, 62, 64, 75, 79, 97, 116], "dictat": [50, 88], "ascm_comparison": 50, "outperform": 50, "pierrick": [50, 54, 151, 167], "coup": [50, 52, 53, 54, 55, 151, 167, 172, 177, 187], "jose": [50, 54, 151, 165, 167], "manjon": [50, 52, 53, 54, 55, 151, 167, 177, 187], "montserrat": [50, 54, 151, 167], "robl": [50, 54, 151, 167], "loui": [50, 54, 151, 166, 167], "collin": [50, 52, 53, 54, 55, 151, 166, 167, 177, 187, 243, 244], "multiresolut": [50, 54, 151, 167], "iet": [50, 54, 151, 167], "engin": [50, 54, 73, 89, 145, 151, 167, 171], "00645538": 50, "denoise_ascm": [50, 61, 234], "magnet": [51, 53, 54, 55, 56, 67, 70, 72, 73, 74, 75, 76, 79, 82, 84, 85, 89, 93, 142, 146, 151, 152, 155, 166, 167, 170, 171, 172, 173, 176, 177, 187, 188, 195, 196, 200, 239], "fourier": [51, 83, 152, 171, 237], "finit": [51, 86, 152, 163, 165, 175], "corrupt": [51, 73, 80, 83, 85, 94, 152, 167, 171, 175], "artefact": [51, 55, 73, 80, 85, 152, 154, 167, 171, 225], "manifest": [51, 152, 222], "intens": [51, 59, 121, 152, 163, 167, 170, 171, 172, 175, 176, 177, 190, 215], "adjac": [51, 89, 113, 152, 171, 172, 176, 233], "edg": [51, 73, 152, 165, 166, 167, 171, 175, 178, 220, 222, 248], "context": [51, 113, 116, 128, 152, 170], "magnifi": [51, 152], "chapter": 51, "gibbs_remov": [51, 178, 227, 232], "read_cenir_multib": [51, 178], "t1_denoised_fnam": 51, "ap_fnam": 51, "tissue_data": [51, 116, 152, 243, 244], "axial_slic": [51, 74, 85], "88": [25, 32, 33, 35, 36, 37, 40, 51, 53, 70, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 87, 98, 114, 131, 171, 220], "t1_slice": 51, "figsiz": [51, 53, 55, 72, 74, 76, 79, 80, 85, 86, 87, 89, 93, 102, 175], "wspace": [51, 53, 55, 80, 85], "vmin": [51, 53, 72, 73, 74, 80, 83, 85, 87, 93, 128, 176], "vmax": [51, 53, 72, 73, 74, 80, 83, 85, 87, 128, 176], "400": [51, 79, 80, 82, 83, 116, 146, 166, 171, 172, 177, 218, 243, 244], "due": [19, 51, 52, 73, 80, 82, 85, 89, 94, 167, 221, 226, 227, 241], "evid": [51, 72, 224], "artifici": [51, 94, 121], "fft": [51, 171, 227], "fft2": 51, "fftshift": 51, "c_crop": 51, "192": [51, 53, 73, 82, 83, 84, 85, 166, 224], "t1_gibb": 51, "ifft2": 51, "t1_unr": 51, "fig1": [51, 53, 55, 74, 80, 85], "subplot_kw": [51, 53, 55, 74, 80, 85], "ring": [51, 73, 152, 158, 167, 177, 199, 225, 229], "fontsiz": [51, 86], "xy": [51, 78, 155, 165, 224, 237, 238], "70": [25, 32, 33, 35, 36, 37, 40, 51, 53, 69, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85, 88, 93, 102, 114, 121, 155, 166, 170, 217, 220], "xycoord": 51, "xytext": 51, "textcoord": 51, "offset": [51, 100, 163, 165, 171, 173, 175, 176], "arrowprop": 51, "arrowstyl": 51, "75": [25, 32, 33, 35, 36, 37, 40, 51, 53, 67, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 92, 102, 114, 134, 137, 158, 165, 175, 220, 231], "gibbs_suppression_structur": 51, "uncorrect": 51, "panel": [51, 52, 53, 73, 74, 80, 85, 134, 137, 178], "characterist": [51, 62, 149, 165, 175], "appreci": [51, 53], "arrow": 51, "artefactu": [51, 73], "compromis": [51, 53], "contrast": [51, 73, 74, 76, 78, 82, 83, 84, 85, 104, 130, 146, 151, 166, 171, 243, 244], "grei": [51, 84, 86, 89, 131, 157, 171, 177, 211], "highlight": [51, 147, 177, 200, 218, 222, 227], "kindli": [51, 53, 73, 74, 84, 85, 146, 242], "suppli": [51, 166, 175], "romain": 51, "valabr\u00e8gu": 51, "cenir": [51, 166, 213, 214, 217, 230, 243, 244], "icm": [51, 116, 172, 233], "pari": 51, "asarrai": [51, 79, 80, 111, 135, 175], "data_slic": [51, 82], "data_correct": [51, 58], "slice_axi": [51, 167, 177, 199], "fig2": [51, 53, 85], "10000": [51, 58, 82, 96, 97, 104, 163, 171, 176, 177, 219, 224], "gibbs_suppression_b0": 51, "unnecessari": [51, 72, 73, 80, 85, 165, 170, 215, 218, 230, 231], "dki_model": [51, 85], "meandiffusionkurtosismodel": [51, 85, 178], "dki_fit": [51, 85], "mskini": 51, "msk": [51, 85, 171, 178], "mskgib": 51, "fig3": [51, 53, 85], "59": [24, 25, 32, 33, 35, 36, 37, 40, 51, 53, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 100, 220], "gibbs_suppression_msdki": 51, "black": [51, 87, 135, 176, 222, 226], "ventricl": [51, 80, 97], "seem": [51, 85, 171, 216, 217, 220, 222], "veraart": [51, 53, 55, 73, 152, 167, 171, 177, 187, 188], "jelescu": [51, 152], "knoll": [51, 55, 152], "novikov": [51, 53, 55, 74, 152, 167, 177, 187, 188], "magn": [51, 72, 80, 152, 167, 168, 171, 177, 178, 195, 196, 199, 241], "301": [51, 72, 82, 83, 90, 152, 171, 222], "314": [51, 71, 72, 73, 82, 83, 87, 152, 222], "1002": [51, 53, 55, 70, 72, 73, 74, 80, 82, 85, 146, 152, 167, 168, 171, 175, 177, 187, 188, 199, 215], "25866": [51, 152], "perron": [51, 73, 152, 171], "aelterman": [51, 73, 152], "piz": [51, 73, 152], "urica": [51, 73, 152], "philip": [51, 73, 89, 152, 166, 167, 171, 172, 177, 243, 244], "leeman": [51, 71, 73, 89, 152, 165, 171], "artifact": [21, 51, 73, 152, 163, 166, 167, 177], "441": [51, 54, 55, 72, 73, 80, 82, 83, 151, 152, 167, 171], "455": [51, 72, 73, 80, 82, 83, 152, 222], "06": [25, 32, 33, 35, 36, 37, 40, 51, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 135, 152, 165, 171, 215, 216, 223, 225, 230], "068": [51, 73, 152], "kellner": [51, 167, 177, 199], "dhital": [51, 167, 177, 199], "kiselev": [51, 167, 177, 199], "reisert": [51, 167, 177, 199, 227], "subvoxel": [51, 167, 177, 199], "1574": [51, 82, 218], "1581": [51, 73, 82, 218], "26054": [51, 167, 177, 199], "healthi": [51, 53, 73, 79, 85, 88, 116, 147, 158, 166, 167, 171, 177, 199], "ag": [51, 53, 73, 80, 85, 166, 167, 171, 177, 199, 243, 244], "doctor": [51, 53, 73, 85, 167, 171, 177, 199], "17863": [51, 53, 73, 85, 167, 171, 177, 199], "cam": [51, 53, 73, 85, 167, 171, 177, 199], "29356": [51, 53, 73, 85, 167, 171, 177, 199], "retriev": [51, 130, 138, 163, 167, 171, 172, 175, 243], "digit": [51, 64, 134, 166, 175], "researchwork": [51, 64, 134, 166], "1773": [51, 64, 82, 134, 166], "33311": [51, 166], "denoise_gibb": [51, 61, 234], "explor": [52, 73, 74, 84, 85, 104, 121, 146, 151, 155, 171, 173, 175, 243, 244], "manjon2013": [52, 53, 55, 177, 187], "around": [52, 62, 71, 82, 143, 151, 165, 167, 171, 175, 176, 177, 187, 188, 190, 213, 222, 241], "eigenvalu": [52, 71, 78, 89, 90, 121, 122, 151, 163, 167, 171, 173, 175, 177, 187, 188, 195, 196, 218, 237], "isbi2013_2shel": [52, 92, 243, 244], "koai": [52, 59, 80, 167, 171], "koay2006": 52, "correct_bia": [52, 167], "lowest": [52, 62, 147, 171, 175], "relationship": [52, 86, 131, 167, 171, 175, 177, 187, 237, 238], "tau_factor": [52, 167, 177, 187, 227], "accord": [52, 74, 82, 85, 111, 112, 113, 121, 155, 158, 163, 165, 166, 167, 171, 172, 173, 174, 175, 177, 206, 213, 214, 226], "denoised_arr": [52, 53, 55, 84, 167], "taken": [52, 53, 100, 121, 163, 165, 166, 167, 171, 175, 177, 187, 188, 190, 241], "slow": [52, 82, 111, 142, 155, 163, 218], "gra": [52, 53, 55], "orig": [52, 53, 55], "den": [52, 53, 54, 55], "rms_diff": [52, 53, 55], "denoised_localpca": 52, "jv": [52, 53, 55, 167, 177, 187], "concha": [52, 53, 55, 167, 177, 187], "buad": [52, 53, 55, 167, 177, 187], "dl": [52, 53, 55, 145, 166, 167, 177, 187], "overcomplet": [52, 53, 55, 153, 167, 177, 187], "e73021": [52, 53, 55, 167, 177, 187], "0073021": [52, 53, 55, 167, 177, 187], "cg": [52, 135, 163, 165, 167], "pj": [52, 78, 155, 167], "2006": [52, 82, 89, 94, 165, 167, 171, 177, 196, 225], "magnitud": [52, 89, 100, 163, 165, 167, 171, 175, 176], "jmr": [52, 59], "179": [52, 73, 82, 83, 167, 221], "317": [52, 53, 72, 82, 83, 167, 222], "322": [52, 72, 73, 82, 83, 216], "denoise_localpca": [52, 53, 61, 234], "exploit": [53, 152], "veraart2016a": 53, "loss": [53, 55, 74, 90, 111, 165, 166, 170, 172, 177], "henri2018": 53, "princip": [53, 78, 86, 121, 122, 151, 165, 167, 171, 173, 175, 177, 187, 188], "veraa2016a": [53, 55], "veraa2016b": 53, "mppca": [53, 84, 151, 158, 178, 225], "auxiliari": 53, "hansen": [53, 67, 73, 74, 84, 85, 146, 158, 170, 171, 243, 244], "jespersen": [53, 72, 73, 74, 84, 85, 146, 171, 243, 244], "hansen2016": [53, 73, 74, 84, 85, 146], "mbyte": [53, 73, 75, 78, 83, 84, 85, 94], "cfin_multib": [53, 73, 74, 83, 84, 85, 146, 151, 155, 243, 244], "simplic": [53, 84, 113], "sel_b": [53, 84], "logical_or": [53, 71, 84], "mp": [53, 73, 84, 143, 158, 175, 229], "slide": [53, 163, 175, 176], "compris": [53, 88, 175], "assess": [53, 73, 171, 176, 177, 179, 224], "hspace": [53, 55, 80, 85], "denoised_mppca": 53, "dkimodel": [53, 73, 74], "diffusionkurtosismodel": [53, 73, 74, 85, 178], "dki_orig": 53, "dki_den": 53, "md": [53, 71, 72, 73, 78, 79, 80, 84, 85, 87, 146, 147, 155, 165, 171, 173, 174, 175, 177, 178, 195, 196, 214, 215, 217, 225, 226], "mk": [53, 72, 73, 74, 85, 87, 171, 177, 178], "fa_orig": 53, "fa_den": 53, "md_orig": 53, "md_den": 53, "mk_orig": 53, "mk_den": 53, "03": [25, 30, 32, 33, 35, 36, 37, 40, 53, 56, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 93, 106, 108, 109, 115, 124, 129, 149, 165, 171, 213, 214, 219, 220, 221, 223, 224, 228, 229, 230, 231], "0e": [53, 89, 165, 171, 173], "denoised_dki": 53, "upper": [53, 69, 71, 73, 80, 82, 85, 102, 163, 165, 168, 169, 170, 171, 172, 177, 203, 215], "std": [53, 59, 62, 73, 86, 137, 163, 171, 176, 177, 180, 195, 196, 213, 222], "return_sigma": [53, 167, 177, 188], "pca_sigma": 53, "mean_sigma": 53, "nomin": [53, 165], "theori": [53, 55, 76, 93, 145, 165, 167, 171, 172, 177, 187, 188, 231], "26059": [53, 55, 167, 177, 187, 188], "christiaen": [53, 167, 177, 187, 188], "aron": [53, 167, 177, 187, 188], "sijber": [53, 73, 167, 171, 177, 187, 188], "142": [53, 82, 83, 114, 146, 167, 172, 177, 187, 188, 220], "394": [53, 73, 79, 82, 83, 167, 177, 187, 188, 215], "406": [53, 72, 82, 83, 167, 177, 187, 188, 222], "08": [25, 31, 32, 33, 35, 36, 37, 40, 53, 61, 71, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 89, 167, 171, 177, 187, 188, 224, 225, 226], "016": [53, 167, 177, 187, 188], "denoise_mppca": [53, 61, 234], "coupe08": [54, 55, 151, 167], "boost": [54, 236], "decid": [54, 58, 83, 108, 134, 172], "3t": [54, 72, 166, 171, 172], "ge": [54, 59, 89, 166, 167, 171, 172, 177, 243, 244], "yger": [54, 55, 151, 167], "prima": [54, 55, 151, 167, 177], "hellier": [54, 55, 151, 167], "kervrann": [54, 55, 151, 167], "barillot": [54, 55, 151, 167, 177, 189], "blockwis": [54, 55, 151, 167], "transact": [54, 55, 76, 81, 89, 93, 96, 97, 116, 151, 163, 167, 171, 243, 244], "425": [54, 55, 79, 80, 82, 83, 84, 151, 167, 222], "denoise_nlmean": [54, 61, 234], "fadnavis20": [55, 167, 177, 190], "rank": [55, 87, 151, 163, 171, 224, 237, 238], "oversampl": [55, 151], "explicit": [55, 163, 220], "classic": [55, 62, 105, 142, 237, 238, 239], "knoll11": 55, "assumpt": [55, 59, 82, 83, 86, 99, 171, 227], "fluctuat": 55, "regressor": [55, 165], "phase": [55, 89, 167, 170, 171, 172], "train": [55, 67, 170], "mathcal": [55, 171, 172], "phi_": [55, 171], "y_": [55, 241], "fed": [55, 177], "phi": [55, 56, 85, 91, 121, 122, 163, 165, 166, 167, 171, 178, 220, 241, 242], "held": [55, 69], "mere": [55, 146], "nor": [55, 165, 172], "loadtxt": [55, 77, 119, 166, 217], "shift_intens": [55, 167, 177, 190], "clip_negative_v": [55, 167, 177, 190], "ordinari": [55, 73, 171, 177, 195, 196], "regress": [55, 67, 167, 171, 177, 190, 214], "slower": [55, 88, 156, 165, 175, 177], "hamper": 55, "exhibit": [55, 62, 73], "attenu": [55, 62, 121, 171, 173, 218], "skip": [19, 55, 163, 165, 166, 167, 168, 171, 173, 177, 190, 215, 220, 222, 224, 231, 233, 248], "b0_denois": [55, 167, 177, 190], "higher": [55, 71, 73, 77, 80, 83, 84, 90, 100, 119, 125, 137, 142, 149, 163, 165, 171, 172, 175, 177, 204, 245], "accordingli": [55, 108, 146, 163, 172, 175], "denoised_patch2self": 55, "inspect": [55, 67, 105, 138, 141, 177, 217], "underli": [55, 62, 71, 72, 86, 126, 131, 155, 167, 171, 176, 177, 190, 222, 250], "rid": [55, 233], "lastli": [55, 138, 141], "batch": [55, 170], "300": [55, 56, 77, 79, 82, 83, 91, 119, 122, 134, 166, 176, 222, 243, 244], "split": [55, 155, 163, 167, 168, 170, 171, 175, 177, 178, 197, 199, 206, 209, 215, 224], "denoised_batch1": 55, "denoised_batch2": 55, "denoised_p2": 55, "concaten": [55, 77, 119, 121, 172, 173, 177], "batson": [55, 167, 177, 190], "neural": [55, 67, 72, 158, 162, 167, 170, 171, 177, 190], "bredi": 55, "pock": 55, "stollberg": 55, "tgv": 55, "pp": [55, 71, 84, 171, 173, 243, 244], "480": [55, 80, 82, 222], "491": [55, 73, 80, 82, 86, 166, 222, 226], "denoise_patch2self": [55, 61, 234], "saw": [56, 145], "physicist": 56, "disperse_charg": [56, 85, 91, 122, 178, 215, 221, 225], "jones1999": 56, "polar": [56, 91, 121, 122, 165, 171, 173, 242], "n_pt": [56, 85, 91, 122, 130], "theta": [56, 83, 84, 85, 91, 97, 121, 122, 144, 163, 165, 166, 167, 168, 171, 175, 220, 241, 242], "pi": [56, 85, 86, 91, 113, 122, 130, 142, 143, 165, 168, 171, 172, 173, 175, 237, 239, 241], "hsph_initi": [56, 85, 91, 122], "potenti": [56, 73, 85, 89, 91, 122, 126, 165, 167, 171, 216, 218], "energi": [56, 82, 91, 122, 155, 163, 171, 172, 177, 180], "minim": [22, 56, 83, 91, 99, 102, 122, 163, 165, 170, 171, 218, 230, 233], "hsph_updat": [56, 85, 91, 122], "setbackground": [56, 91, 99, 108, 109, 111, 112, 113, 114, 124, 125, 130], "point_radiu": [56, 111], "initial_vs_upd": 56, "becom": [56, 86, 99, 130, 137, 143, 165, 171, 175], "sph": [56, 221, 226], "full_spher": 56, "fill": [56, 163, 165, 171, 173, 175, 177, 206, 213, 237, 238], "stack": [56, 97, 122, 226], "hstack": [56, 85, 122], "cyan": 56, "colors_b1000": 56, "colors_b2500": 56, "ascontiguousarrai": [56, 130], "dk": [56, 94, 171, 177, 195, 196], "anisotrop": [56, 71, 75, 78, 81, 83, 84, 128, 142, 158, 163, 166, 171, 226, 235], "525": [56, 80, 82, 222], "gradients_spher": [56, 61, 217, 234], "inevit": [58, 154], "misalign": [58, 97, 154, 163], "jenkinsonsmith01": [58, 154], "preprocess": [58, 79, 113, 154, 166, 233, 234], "motion_correct": [58, 61, 178, 234], "193": [58, 64, 73, 82, 83, 84, 87, 243, 244], "bvals_smal": 58, "bvecs_smal": 58, "reg_affin": [58, 96, 97], "jenkinson": [58, 154], "2001": [58, 82, 108, 116, 154, 172, 226], "optimis": [58, 154, 168, 222], "anal": [58, 154, 163], "143": [58, 73, 82, 83, 84, 93, 114, 154, 171, 220], "koay2009": 59, "channel": [22, 59, 105, 106, 163, 165, 169, 170, 171, 172, 176, 177, 200, 236], "grappa": [59, 167], "intuit": [59, 86, 126, 144, 177], "fourth": [59, 73, 82, 87, 88, 165, 171, 173], "central": [59, 76, 93, 163, 165, 174, 175], "tim": 59, "trio": [59, 166, 237, 238, 243, 244], "receiv": [59, 105, 163, 167, 171], "distinct": 59, "return_mask": [59, 167], "axial_piesno": 59, "mask_piesno": 59, "uint8": [59, 62, 67, 78, 131, 169], "pierpaoli": [59, 78, 94, 167, 171, 177, 195, 196], "94": [25, 32, 33, 35, 36, 37, 40, 53, 59, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 88, 102, 158, 167, 173, 213, 220, 226], "103": [59, 80, 82, 83, 84, 158, 167, 171, 177, 196, 219, 220], "especi": [22, 60, 175], "facilit": [60, 169, 170], "fimg": [60, 121, 166, 173], "aniso_vox": [60, 163, 166], "new_voxel_s": [60, 104], "data2": [60, 163, 172], "affine2": [60, 163], "iso_vox": 60, "analyz": [60, 75, 87, 165, 171, 174, 175, 225, 249], "img3": 60, "spm2analyzeimag": 60, "realiz": [60, 163, 167], "reslice_dataset": [60, 61, 234], "examples_builtpreprocess": 61, "snr_in_cc": [61, 62, 218, 224, 234], "divid": [62, 69, 75, 76, 83, 84, 86, 89, 99, 113, 124, 163, 165, 167, 171, 172, 174, 175, 177, 182, 183, 216, 217, 224], "worst": 62, "cst": [62, 123, 124, 128, 134, 135, 166, 218, 229], "cfa": [62, 78, 172], "descoteaux2011": [62, 76, 93], "jones2013": 62, "ndimag": [62, 67, 73, 74, 131, 165, 230], "binary_dil": [62, 131], "segment_from_cfa": [62, 178], "bounding_box": [62, 178, 226], "tenmodel": [62, 71, 73, 78, 222, 246], "tensorfit": [62, 78, 172, 178, 220], "cc_box": 62, "zeros_lik": [62, 97, 175], "bounds_min": 62, "bounds_max": 62, "mask_cc_part": 62, "return_cfa": [62, 172], "cfa_cc_part": 62, "255": [62, 78, 79, 82, 83, 87, 131, 137, 169, 221], "cc_segment": 62, "crude": 62, "catch": [62, 213, 216], "warn": [19, 62, 67, 73, 80, 82, 83, 84, 88, 93, 100, 104, 145, 169, 170, 171, 178, 213, 215, 216, 217, 218, 219, 220, 222, 224, 225, 226, 227, 229, 230, 231, 233], "manufactur": 62, "mask_nois": [62, 177], "noise_std": 62, "report": [62, 73, 82, 171, 215, 222, 229], "li": [62, 69, 155, 163, 172, 177], "null": [62, 165, 167, 177, 187, 230], "idx": [62, 89, 165, 167, 170, 175, 178], "inf": [62, 82, 123, 163, 170, 171, 172, 175, 177], "axis_x": 62, "argmin": [62, 88, 99, 175], "axis_i": 62, "axis_z": 62, "perpendicular": [62, 79, 83, 86, 89, 155, 165, 171, 173, 175, 177, 198, 213], "le": [62, 82, 155, 165, 171, 175, 177, 197], "bihan": [62, 82, 155, 171, 177, 197], "mangin": 62, "poupon": 62, "603": [62, 76, 82, 93, 108, 115, 171, 223], "knosch": 62, "turner": 62, "count": [62, 67, 94, 130, 131, 171, 172, 175, 176, 221], "fallaci": 62, "73": [24, 25, 32, 33, 35, 36, 37, 40, 53, 62, 72, 73, 74, 79, 82, 83, 84, 85, 86, 88, 100, 175, 220], "239": [62, 82, 83, 221], "publicli": [64, 166, 220], "expandus": [64, 137], "fetch_sherbrooke_3shel": [64, 178], "dname": 64, "fdwi": [64, 246], "hardi193": [64, 151, 154], "fbval": [64, 73, 74, 75, 76, 81, 82, 83, 84, 85, 87, 92, 93, 121, 163, 166, 169, 173, 246], "fbvec": [64, 73, 74, 75, 76, 81, 82, 83, 84, 85, 87, 92, 93, 121, 163, 166, 169, 173, 246], "get_zoom": [64, 104], "quickli": [64, 160, 163, 171, 219], "fun": [64, 165], "hardi193_s0": 64, "quick_start": [64, 65, 218, 234], "examples_builtquick_start": 65, "tracking_introduction_eudx": [65, 66, 234], "driven": [67, 71, 89, 163, 171], "ground": [67, 77, 85, 88, 119, 176], "truth": [67, 77, 85, 88, 119, 176], "sequenti": [67, 89, 113, 172], "histologi": [67, 170], "squirrel": 67, "monkei": 67, "third": [67, 165, 167, 171, 175, 177, 199], "ndi": 67, "nn": [67, 158, 162, 163, 171, 178, 230, 233], "histo_resdnn": [67, 178], "historesdnn": [67, 178], "sh_to_sf_matrix": [67, 178], "onednn": 67, "tf_cpp_min_log_level": 67, "mean_b0": [67, 104], "mask_label": 67, "return_count": 67, "val": [67, 89, 97, 165, 171, 176, 214, 231, 233, 243, 244], "argmax": 67, "resdnn_model": [67, 170], "fetch_default_weight": [67, 170, 178], "predicted_sh": 67, "coron": [67, 116, 176, 224], "invb": [67, 168, 171], "basis_typ": [67, 167, 168, 170, 171], "0006": 67, "fod_spher": 67, "b_matrix": [67, 237, 238], "mean_sh": 67, "background_img": 67, "ori_shap": [67, 170], "slice_index": [67, 176], "display_ext": [67, 134], "camera": [67, 135], "zoom": [67, 134, 137, 151, 152, 163, 169, 218], "screenshot": [67, 134, 137], "curvatur": [67, 168, 175, 230, 232], "popul": [67, 69, 71, 73, 78, 85, 89, 98, 108, 121, 124, 125, 148, 153, 155, 171, 172, 174, 177, 243, 244], "visibl": [67, 151, 176, 178, 217, 220, 224, 228], "zoom_factor": 67, "85": [25, 32, 35, 36, 37, 40, 53, 67, 71, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 94, 98, 114, 121, 155, 165, 171, 173, 220, 227], "view_posit": 67, "view_cent": 67, "up_vector": 67, "pred_fodf": 67, "nath": [67, 166, 170], "schill": [67, 166, 170], "parvathaneni": [67, 170], "hainlin": [67, 170], "huo": [67, 170], "stepniewska": [67, 170], "reveal": [67, 72, 84, 85, 121, 170, 171], "untap": [67, 170], "62": [25, 32, 33, 35, 36, 37, 40, 53, 67, 70, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 89, 146, 170, 171, 219, 220], "220": [67, 82, 83, 170, 222], "227": [25, 27, 67, 82, 83, 170, 221], "bermudez": [67, 170], "st\u0119pniewska": [67, 170], "captur": [67, 72, 73, 85, 121, 142, 170], "arxiv": [67, 163, 170, 171, 175], "preprint": [67, 128, 170], "1911": [67, 84, 170, 224], "07927": [67, 170], "histology_resdnn": [67, 95, 234], "pattern": [69, 116, 165, 172], "nest": [69, 137, 142, 163, 165, 169, 170, 171, 172, 175], "likelihood": [69, 89, 116, 171, 172], "hastie2008": 69, "rokem2014": [69, 90, 171], "imprevi": 69, "math": [69, 83, 85, 86, 87, 92, 121, 165, 166, 171, 187, 214, 215, 218, 219, 222, 230], "rac": [69, 171], "conduct": [69, 78, 155, 171, 219, 229], "cross_valid": [69, 178, 222], "dpd": [69, 90, 94, 123, 171], "xval": [69, 222], "centrum": [69, 90], "semioval": [69, 90], "cso": 69, "cc_vox": 69, "38": [25, 32, 33, 35, 36, 37, 40, 53, 69, 71, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 94, 98, 102, 105, 134, 171, 220], "cso_vox": 69, "dti_model": 69, "dti_cc": 69, "kfold_xval": [69, 95, 178, 234], "csd_cc": 69, "dti_cso": 69, "csd_cso": 69, "scatter": [69, 82], "focus": [69, 159], "set_size_inch": 69, "legend": [69, 82, 85, 86, 94, 121, 122, 130], "loc": [69, 82, 85], "this_ax": 69, "cc_dti_r2": 69, "pearsonr": 69, "cc_csd_r2": 69, "cso_dti_r2": 69, "cso_csd_r2": 69, "r2": [69, 171, 221], "hasti": [69, 90, 171], "tibshirani": 69, "friedman": 69, "mine": [69, 175], "springer": [69, 171, 172], "verlag": [69, 172], "berlin": 69, "aganj2010": [70, 146], "apart": [70, 165, 166, 167, 171, 237], "peak_indic": [70, 81, 168, 171], "maxima": [70, 71, 168, 171, 220], "enough": [70, 165, 175, 248], "rectangular": [70, 78, 99, 237, 238], "splenium": [70, 78], "43": [25, 27, 30, 32, 33, 35, 36, 37, 40, 53, 67, 70, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 87, 171, 222], "74": [25, 32, 33, 35, 37, 40, 53, 70, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 88, 114, 220], "csaodf": 70, "csa_odfs_actor": 70, "plasma": [70, 71, 77, 79, 83, 84, 89, 90, 92, 119, 122], "csa_odf": 70, "lenglet": [70, 146, 171], "sapiro": [70, 146, 171], "yacoub": [70, 146, 171], "ugurbil": [70, 146, 171], "harel": [70, 146, 171], "aug": [70, 146], "554": [70, 73, 82, 146, 171, 173, 223], "22365": [70, 146, 171], "reconst_csa": [70, 95, 217, 234], "tournier2007": [71, 84], "mean_diffus": [71, 78, 79, 178, 215], "mask_for_response_ssst": [71, 178], "recursive_respons": [71, 89, 178], "single_tensor_odf": [71, 89, 178], "proce": [71, 90, 171], "cuboid": [71, 84, 171, 177, 194], "ident": [71, 78, 81, 86, 96, 99, 143, 144, 163, 169, 171, 175, 176, 178, 213, 226, 230], "nvoxel": 71, "tupl": [71, 96, 124, 138, 141, 163, 165, 166, 169, 170, 171, 172, 173, 175, 176, 177, 218, 221, 242], "radial": [71, 72, 73, 83, 85, 90, 92, 158, 165, 171, 175, 177, 195, 196, 220, 242], "evec": [71, 78, 89, 94, 121, 146, 171, 173, 177, 178, 195, 196], "response_odf": [71, 89], "1d": [71, 89, 112, 145, 158, 163, 165, 167, 168, 170, 171, 172, 173, 174, 175, 177, 204, 232], "response_actor": [71, 89], "csd_respons": 71, "calibr": [71, 89, 108, 155, 158, 171, 177, 193, 194, 223], "eigenvector": [71, 83, 121, 163, 167, 171, 173, 175, 177, 195, 196, 213, 218, 237], "tax2014": [71, 89], "fat": [71, 89, 171], "converg": [71, 73, 82, 83, 89, 96, 116, 163, 165, 167, 171, 172], "wm_mask": [71, 88], "logical_and": 71, "0011": 71, "peak_thr": [71, 89, 171], "init_fa": [71, 89, 171], "init_trac": [71, 89, 171], "0021": [71, 89, 171], "pancak": [71, 89], "response_sign": 71, "on_spher": [71, 89, 171, 178], "csd_recursive_respons": 71, "recurs": [71, 89, 158, 163, 165, 171], "portion": [71, 82, 89, 171], "55": [24, 25, 32, 33, 35, 36, 37, 40, 53, 71, 72, 73, 74, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 92, 94, 134, 135, 137, 171, 214, 220], "csd_odf": 71, "30x30": 71, "fodf_peak": [71, 89, 90], "getproperti": [71, 90], "setopac": [71, 90], "csd_both": 71, "fibr": [71, 84, 166, 167, 168, 171, 177, 194, 241], "super": [71, 84, 113, 158, 167, 168, 171, 177, 194, 241], "1459": [71, 82, 84, 87, 167, 168, 171, 217, 241], "1472": [71, 73, 82, 84, 167, 168, 171, 217, 241], "vo": [71, 89], "viergev": [71, 73, 89], "86": [25, 32, 33, 35, 36, 37, 40, 53, 71, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 89, 93, 114, 220], "reconst_csd": [71, 95, 217, 234], "k_aniso": [72, 171, 178], "k_iso": [72, 171, 178], "microscop": [72, 85, 87, 165, 171], "k_micro": [72, 171, 178], "exchang": [72, 89, 171], "disord": [72, 79, 166], "alvesr2022": 72, "correlationtensormodel": [72, 178], "diffusionkurtosistensorfit": 72, "necess": 72, "e_": 72, "q_1": 72, "q_2": 72, "q_": [72, 171], "1i": 72, "1j": 72, "2i": 72, "2j": 72, "d_": [72, 73, 78, 80, 99, 155, 171, 237, 238], "ij": [72, 73, 171, 237, 238], "1k": 72, "1l": 72, "2k": 72, "2l": [72, 171, 241], "quad": [72, 171], "w_": [72, 73, 171], "ijkl": [72, 73, 171], "z_": 72, "s_": [72, 73, 82, 99, 171, 173], "dt": [72, 73, 74, 121, 123, 155, 169, 171, 173, 174, 237], "kt": [72, 73, 74, 121, 155, 171, 173, 178], "4th": 72, "displac": [72, 76, 82, 83, 86, 93, 100, 142, 155, 156, 163, 171, 173, 175, 176, 177, 180, 181, 237], "diffusionkurtosi": 72, "pair": [72, 98, 131, 163, 165, 169, 171, 175, 176, 177, 185], "epoch": [72, 170, 171], "netohe2021": 72, "dde": [72, 166, 171], "fdata": [72, 87], "fbvals1": 72, "fbvecs1": 72, "fbvals2": 72, "fbvecs2": 72, "fmask": [72, 87], "cti_rat1": 72, "bvals1": 72, "bvecs1": 72, "bvals2": 72, "bvecs2": 72, "filefdata": 72, "bvec1": 72, "bvec2": 72, "gtab1": [72, 171], "gtab2": [72, 171], "mask_affin": 72, "ctimodel": 72, "ctifit": 72, "correlationtensorfit": [72, 178], "upon": [72, 163, 171, 175, 177, 220, 221], "inher": 72, "rd": [72, 73, 146, 147, 171, 177, 178, 195, 196], "ak": [72, 73, 165, 171, 177, 178], "rk": [72, 73, 171, 177, 178], "exclus": [72, 163, 175], "kiso_map": 72, "kaniso_map": 72, "kmicro_map": 72, "slice_idx": 72, "axarr": [72, 102], "kiso": 72, "kaniso": 72, "kmicro": 72, "shemesh": [72, 85, 171], "211": [72, 82, 83, 171, 221], "116605": [72, 171], "novello": 72, "ianu": 72, "feiweier": 72, "jovicich": 72, "2022": [19, 22, 72, 79, 82, 98, 109, 159, 166, 170, 172, 177, 191, 225, 230, 231], "vivo": [72, 80, 85], "clinic": [72, 88, 165, 171], "254": [72, 79, 82, 83, 171, 177, 196], "119137": 72, "alv": 72, "kerkel\u00e4": 72, "chavarr\u00eda": 72, "deciph": 72, "stroke": 72, "247": [72, 83, 171, 177, 196, 221], "118833": 72, "28938": 72, "reconst_cti": [72, 95, 234], "expans": [73, 83, 87, 88, 155, 165, 171, 173], "biolog": [73, 82, 86, 155, 171], "character": [73, 74, 78, 80, 85, 155, 171, 173], "microstructur": [73, 74, 79, 80, 82, 83, 85, 87, 88, 155, 158, 170, 171, 177, 196, 215], "heterogen": [73, 121, 155, 165], "jensen2010": [73, 155], "moreov": [73, 80, 85, 113, 155, 168, 241], "concret": [73, 74, 155, 177], "biophys": [73, 74, 78, 85, 86, 155, 171, 175], "axon": [73, 74, 78, 79, 83, 85, 86, 121, 155, 171, 224], "tortuos": [73, 74, 155, 178, 215], "fierem2011": [73, 74, 155], "netohe2015": [73, 85, 155], "bd": [73, 82, 171, 173], "mathbf": [73, 78, 80, 82, 87, 88, 99, 142, 144, 155, 171, 175, 237, 238, 239], "s_0": [73, 78, 80, 82, 87, 88, 155, 171, 173], "absenc": [73, 82], "sensit": [73, 74, 82, 83, 85, 94, 142, 171, 222], "sum_": [73, 88, 90, 99, 165, 171, 241], "antipod": [73, 78, 155, 165, 166, 167, 171, 220], "symmetri": [73, 78, 155, 165, 166, 167, 171, 241], "wijkl": [73, 173], "xxxx": [73, 171], "yyyi": [73, 171], "zzzz": [73, 171], "xxxy": [73, 171], "xxxz": [73, 171], "xyyi": [73, 171], "yyyz": [73, 171], "xzzz": [73, 171], "yzzz": [73, 171], "xxyi": [73, 171], "xxzz": [73, 171], "yyzz": [73, 171], "xxyz": [73, 171], "xyyz": [73, 171], "xyzz": [73, 171], "compare_map": [73, 83, 178], "gaussian_filt": [73, 74], "fraw": [73, 74, 75, 76, 81, 82, 83, 84, 85, 92, 93], "taxcmw2015": 73, "netohe2012": 73, "favor": 73, "fwhm": [73, 74], "pioneer": 73, "gauss_std": [73, 74], "data_smooth": [73, 74], "dkifit": [73, 74], "diffusionkurtosisfit": [73, 178], "diffusionkurtosisifit": 73, "analog": [73, 74, 163], "decoupl": [73, 85], "veraar2011": 73, "fit_label": [73, 83, 176], "map_kwarg": [73, 83, 176], "2e": [73, 89, 171], "diffusion_tensor_measures_from_dti_and_dki": 73, "underestim": [73, 80], "kurtosis_tensor_standard_measur": 73, "confin": [73, 165, 171], "compartment": [73, 80, 85, 121, 171], "myelin": [73, 74, 78], "sheath": 73, "pronounc": 73, "perpendicularli": 73, "amplitud": [73, 80, 142, 171, 237], "band": [73, 171], "dark": 73, "decai": [73, 82, 171, 237], "consequ": [73, 82, 94, 121, 155], "tendenc": [73, 174], "inadequ": 73, "parametr": [73, 142, 163, 166, 171, 172, 220, 243, 244], "perron2015": 73, "netohe2018": [73, 85], "unring": [73, 153, 158], "overcom": [73, 84, 85, 123, 171], "powder": [73, 85], "physic": [73, 82, 83, 88, 94, 143, 155, 163, 165, 171, 173, 176, 177, 197, 240], "delaha2020": 73, "though": [73, 102, 163, 171, 175, 237, 238], "fit_method": [73, 82, 88, 94, 171, 177, 195, 196, 230], "cl": [73, 74, 171], "cwl": [73, 171], "unconstrain": [73, 88, 163, 165], "unplaus": 73, "mosek": [73, 83, 88], "solver": [73, 83, 84, 88, 163, 165, 171, 218, 233], "cvxpy_solv": [73, 83, 88, 171], "greatli": [73, 83], "solut": [73, 75, 83, 84, 88, 96, 116, 134, 146, 158, 163, 165, 171, 175], "atyp": 73, "scenario": [73, 102], "counterpart": 73, "unexpect": [73, 80, 217], "qualit": [73, 224], "dkimodel_plu": 73, "dkifit_plu": 73, "pure": [73, 144, 165, 167], "kurtosis_tensor_standard_measures_plu": 73, "obviat": 73, "dkifit_noisi": 73, "dkifit_noisy_plu": 73, "kurtosis_tensor_standard_measures_noisi": 73, "unsmooth": 73, "hansen2013": 73, "glennr2015": 73, "mkt": [73, 171, 178], "kfa": [73, 171, 178, 226, 230], "measures_from_kurtosis_tensor_onli": 73, "jensen": [73, 74, 85, 155, 171, 177, 195], "jh": [73, 74, 85, 155, 171], "helpern": [73, 74, 85, 155, 171, 177, 195], "ja": [73, 74, 85, 155, 171], "ramani": [73, 85, 155, 177, 195], "lu": [73, 85, 94, 155, 163, 171, 177, 195, 196], "kaczynski": [73, 85, 155, 177, 195], "quantif": [73, 85, 123, 155, 171, 174, 177, 195], "non_gaussian": [73, 85, 155], "53": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 88, 93, 94, 145, 155, 158, 171, 177, 195, 196, 222, 232], "1432": [73, 82, 85, 155, 177, 195, 224], "1440": [73, 82, 85, 155, 217], "nmr": [73, 89, 155, 165, 171, 177, 196], "biomedicin": [73, 155, 171], "698": [73, 82, 155, 171, 213], "710": [73, 82, 155, 171, 213], "58": [25, 32, 33, 35, 36, 37, 40, 53, 58, 60, 61, 62, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 106, 146, 155, 163, 167, 168, 171, 172, 173, 220, 241], "177": [30, 73, 74, 82, 83, 155, 171, 222], "188": [73, 74, 82, 83, 116, 155, 171], "poot": 73, "dh": 73, "heck": 73, "blockx": 73, "linden": 73, "verhoy": 73, "138": [73, 82, 83, 135, 146, 213, 220], "145": [73, 82, 83, 217, 220], "ferreira": [73, 85, 155, 171], "dissert": 73, "bachelor": 73, "programin": 73, "biomed": [73, 145, 171, 243, 244], "faculti": 73, "repositorio": 73, "ul": 73, "bitstream": [64, 73, 134], "10451": 73, "8511": 73, "ulfc104137_tm_rafael_henriqu": 73, "pdf": [73, 75, 76, 96, 143, 163, 171, 173, 177, 178, 179, 222, 231], "lund": [73, 171], "te": [73, 175], "sangil": [73, 171], "sn": [73, 74, 84, 85, 146, 165, 171], "experiment": [73, 158, 171, 173], "computationally393fast": 73, "69": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 88, 98, 220], "1754": [73, 79, 82, 171, 219], "1760": [73, 171, 224], "394doi": 73, "24743": [73, 171], "glenn": [73, 158, 171], "diffusional387kurtosi": 73, "biomedicine28": 73, "448": [72, 73, 82, 83, 85, 171, 222], "459": [73, 82, 83, 171, 213], "nbm": [73, 171], "3271": [73, 82, 171], "nune": [73, 85, 155, 171], "rg": [73, 85, 155, 171], "geometri": [73, 83, 85, 121, 155, 162, 171, 173, 175, 178, 217, 222], "biomark": [73, 85, 121, 155, 171, 173], "99": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 98, 102, 121, 155, 165, 171, 173, 220], "cmw": 73, "ott": 73, "dijkhuizen": 73, "rekindl": 73, "794": [73, 82, 214], "808": [73, 82, 85, 214], "160072": [73, 74, 84, 85, 146, 243, 244], "sdata": [73, 74, 84, 85, 146, 166, 243, 244], "program": [73, 83, 88, 142, 145, 165, 166, 171, 177, 201], "209": [73, 82, 83, 165, 166, 171, 177, 196, 221], "reconst_dki": [73, 95, 215, 234], "hinder": [74, 83, 171, 173], "fierem2013": 74, "influenc": [74, 80, 166], "intra": [74, 85, 121, 171, 177, 197, 243, 244], "extra": [74, 80, 85, 97, 121, 138, 141, 143, 163, 165, 169, 171, 172, 176, 233, 245], "cellular": [74, 85, 121, 171], "fierem2012": 74, "distinguish": [74, 165, 175, 176, 177, 200, 201], "degener": [74, 165, 175], "dki_micro": [74, 178], "kurtosismicrostructuremodel": [74, 178], "dki_micro_model": 74, "fieremans2011": 74, "planar": [74, 87, 88, 165, 166, 175, 178, 233], "criteria": [74, 171, 175], "nevertheless": [22, 74], "predefin": [74, 162, 167, 172], "well_aligned_mask": 74, "cp": [74, 157, 177, 210], "isnan": [74, 78, 220], "dki_micro_fit": 74, "kurtosismicrostructurefit": 74, "awf": [74, 171, 178], "tort": [74, 165, 172, 177], "im0": [74, 85], "im1": [74, 85], "kurtosis_microstructural_measur": 74, "overlaid": [74, 90, 176], "kim": 74, "grossman": [74, 104, 105, 106, 156, 163], "ri": 74, "ingles": 74, "demyelin": 74, "proceed": [74, 82, 84, 171, 172, 176, 177, 200], "20th": 74, "societi": [74, 82, 84, 89, 165, 171, 172, 175, 176, 177, 200], "melbourn": 74, "australia": 74, "benitez": 74, "falangola": 74, "deardorff": 74, "spampinato": 74, "babb": 74, "ferri": 74, "alzheim": 74, "diseas": [74, 147], "ajnr": 74, "neuroradiol": 74, "34": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 102, 145, 158, 171, 173, 220, 227, 232], "2105": [74, 82, 226], "2112": [74, 82, 226], "3174": [40, 74, 82], "a3553": 74, "reconst_dki_micro": [74, 95, 234], "wedeen08": 75, "keyhol": [75, 171], "ndindex": [75, 89, 178, 220, 222], "diffusionspectrummodel": [75, 76, 77, 119, 178, 214], "taiwan_ntu_dsi": [75, 76, 81, 93, 243, 244], "dsmodel": [75, 76], "dataslic": [75, 76, 81, 93], "dsfit": [75, 171], "fashion": [75, 82, 155, 163, 170, 175], "345": [72, 75, 80, 82, 83, 87, 88, 171, 222], "disc": [75, 165], "memmap": 75, "96": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 88, 93, 102, 146, 220], "gbyte": 75, "tuch04": 75, "fig_hist": [75, 94, 130], "dsi_gfa": 75, "41": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 75, 79, 80, 82, 83, 84, 85, 86, 87, 89, 104, 105, 106, 109, 114, 115, 156, 158, 163, 167, 219, 220, 231], "1267": [75, 80, 82, 85, 215], "1277": [73, 75, 82, 84, 216], "52": [25, 32, 33, 35, 36, 37, 40, 48, 53, 72, 73, 74, 75, 79, 80, 82, 83, 84, 85, 86, 87, 88, 100, 135, 173, 220, 225], "1358": [73, 75, 82, 93, 217], "1372": [75, 82, 233], "reconst_dsi": [75, 95, 234], "rtop": [76, 83, 86, 93, 171, 173, 176, 177, 178, 198, 213, 233], "msd": [76, 83, 85, 86, 93, 171, 173, 177, 178, 198], "wu2007": [76, 93], "wu2008": [76, 93], "qgrid_siz": [76, 171], "filter_width": [76, 171], "rtop_sign": [76, 93, 171, 178], "rtop_pdf": [76, 93, 171, 178], "mse": [76, 93], "rtop_pdf_norm": 76, "msd_norm": 76, "msd_discret": [76, 171, 178], "ax1": [76, 79, 89, 93, 123], "add_subplot": [76, 79, 93, 116], "ind": [76, 79, 93, 171, 174, 175], "ax2": [76, 79, 93, 123], "ax3": [76, 79, 93], "621": [76, 82, 93, 171, 213], "hybrid": [76, 83, 93, 171], "617": [76, 82, 93, 171, 213], "629": [76, 82, 93, 171, 213], "858": [74, 76, 82, 85, 93, 171, 214], "865": [74, 76, 82, 85, 93, 171, 215], "reconst_dsi_metr": [76, 95, 234], "canales10": [77, 119], "goal": [77, 119, 146, 156], "multi_tensor_odf": [77, 91, 119, 122, 178], "diffusionspectrumdeconvmodel": [77, 119, 178], "btabl": [77, 119], "dsi515btabl": [77, 119], "0015": [77, 91, 119, 122, 171, 173], "0003": [77, 91, 119, 122, 171, 173], "subdivid": [77, 91, 119, 122, 165, 167, 177, 178, 220], "odf_gt": [77, 119], "dsi_model": [77, 119], "dsi_odf": [77, 119], "dsid_model": [77, 119], "dsid_odf": [77, 119], "odf_actor": [77, 78, 79, 91, 119, 122], "rotatex": [77, 83, 91, 92, 99, 119, 122, 125], "90": [25, 29, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 99, 104, 119, 121, 122, 125, 168, 171, 173, 177, 210, 211, 220, 234], "136": [73, 77, 82, 83, 119, 171, 220], "149": [73, 77, 82, 83, 87, 99, 119], "reconst_dsid": [77, 95, 215, 234], "colleagu": [78, 155], "basser1994": [78, 155], "influenti": [78, 155], "commonli": [78, 155], "quadrat": [78, 155, 171, 175], "pmatrix": [78, 87, 88, 155, 171, 237, 238], "xx": [78, 155, 237, 238], "xz": [78, 155, 237, 238], "yx": [78, 155, 237, 238], "yy": [78, 155, 237, 238], "yz": [78, 155, 237, 238], "zx": [78, 155], "zy": [78, 155], "zz": [78, 155, 237, 238], "covari": [78, 87, 88, 155, 171], "diagon": [78, 147, 155, 171, 177, 205], "numer": [78, 83, 142, 158, 163, 165, 171, 173, 227, 229, 237, 245], "160": [70, 73, 78, 82, 83, 86, 166, 221, 243, 244], "recov": [78, 86, 94, 109, 170, 171, 238, 241], "triangular": [78, 165, 166, 167, 169, 171], "dxx": [78, 155, 171, 177, 196], "dxy": [78, 155, 171, 177, 196], "dyi": [78, 155, 171, 177, 196], "dxz": [78, 155, 171, 177, 196], "dyz": [78, 155, 171, 177, 196], "dzz": [78, 155, 171, 177, 196], "tensor_v": 78, "lower_triangular": [78, 178], "quadratic_form": [78, 171, 178], "eigen": [78, 171, 173], "That": [78, 82, 138, 141, 143, 144, 163, 171, 175], "unrestrict": 78, "mathemat": [78, 88, 99, 163, 171, 175, 218, 240, 241, 245], "lambda_1": [78, 171, 237, 238], "lambda_2": [78, 171, 237, 238], "lambda_3": [78, 171, 237, 238], "carefulli": [78, 151], "pack": 78, "wrap": [78, 163, 170, 171, 175, 177, 187, 188, 189, 204, 206, 213, 223], "decreas": [78, 83, 86, 98, 102, 175, 215, 218], "fan": [78, 99], "color_fa": [78, 94, 178, 246], "tensor_fa": 78, "viewer": [78, 137, 143, 242], "tensor_evec": 78, "complimentari": 78, "md1": 78, "tensors_md": 78, "md2": 78, "quantiti": [78, 83, 85, 86, 171], "pajevic1999": 78, "tensor_rgb": 78, "ellipsoid": [78, 94, 165, 217], "tensor_slic": [78, 94], "scalar_color": [78, 94], "tensor_ellipsoid": 78, "tensor_odf": 78, "reliabl": 78, "drawback": 78, "mislead": [78, 215, 226], "fortun": [78, 91], "mattielo": [78, 155], "spectroscopi": [78, 155, 237], "pajev": 78, "reconst_dti": [78, 95, 215, 234], "anderson2005": 79, "kaden2016": 79, "zucchelli2017": 79, "forecastmodel": [79, 178], "fetch_hbn": [79, 80, 178], "op": [79, 80, 123, 222, 242], "alexander2017": 79, "hbn": [79, 158, 233], "pod2": [79, 166], "richiehalford2022": 79, "data_path": [79, 80], "ndaraa948vfh": [79, 80, 166], "dwi_path": [79, 80], "qsiprep": [79, 80], "hbnsiteru": [79, 80], "ndaraa948vfh_s": [79, 80], "hbnsiteru_acq": [79, 80], "64dir_spac": [79, 80], "t1w_desc": [79, 80], "preproc_dwi": [79, 80], "mask_img": [79, 80, 88, 166], "brain_mask": [79, 80, 146, 155, 177], "51": [25, 30, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 87, 98, 165, 220], "mask_smal": [79, 80], "dec_alg": [79, 171], "fm": [79, 171], "f_fit": [79, 171], "d_par": [79, 171], "dpar": [79, 171, 178], "d_perp": [79, 171], "dperp": [79, 171, 178], "forecast_indic": 79, "shrink": [79, 175], "ax4": 79, "dpi": [79, 176], "magnif": 79, "kaden": [79, 85, 171], "miccai": [79, 92, 167, 171, 177, 189], "cdmri": [79, 171], "lm": [79, 166], "escalera": [79, 166], "ai": [79, 165, 166], "transdiagnost": [79, 166], "pediatr": [79, 166, 243, 244], "mental": [79, 166], "health": [79, 166], "sci": [79, 108, 124, 125, 147, 166, 172, 174, 177, 183, 184, 205, 243, 244], "170181": [79, 166], "richi": [79, 166, 224], "halford": [79, 166, 224], "reconst_forecast": [79, 95, 217, 234], "parenchyma": 80, "cerebr": [80, 82], "spinal": [80, 82, 128, 167], "morphologi": [80, 166], "enlarg": 80, "atrophi": 80, "pathologi": 80, "pasternak2009": 80, "s_0fe": 80, "thebdiffus": 80, "hoy2014": 80, "henriques2017": 80, "freewatertensormodel": [80, 178], "fwdtimodel": 80, "fwdtifit": 80, "freewatertensorfit": [80, 178], "dtimodel": 80, "dtifit": [80, 237, 238], "dti_fa": 80, "dti_md": 80, "fadiff": 80, "5e": [80, 87, 165, 171, 173], "mddiff": 80, "in_vivo_free_water_dti_and_standard_dti_measur": 80, "periventricular": 80, "problemat": 80, "reproduc": [80, 86, 87, 126, 153, 165, 166, 170, 172, 175, 177, 218, 222, 226], "inflat": [80, 126], "in_vivo_free_water_dti_and_standard_dti_correct": 80, "dismiss": 80, "sochen": 80, "gur": 80, "intrat": 80, "assaf": [80, 173], "717": [73, 80, 82, 230], "22055": 80, "hoi": 80, "kecskemeti": 80, "323": [72, 80, 82, 83, 165, 171, 173, 222], "333": [72, 80, 82, 83, 123, 129, 222], "09": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 115, 166, 171, 226, 227, 243, 244], "053": 80, "reconst_fwdti": [80, 95, 216, 234], "yeh2010": 81, "generalizedqsamplingmodel": [81, 178], "gqmodel": 81, "sampling_length": [81, 171], "gqfit": 81, "gqpeak": 81, "gqpeak_valu": 81, "gqpeak_indic": 81, "reconst_gqi": [81, 95, 215, 234], "perfus": [82, 145, 155, 158, 171, 177, 197], "sequenc": [82, 99, 112, 113, 142, 143, 144, 155, 163, 165, 166, 170, 171, 172, 173, 175, 176, 177, 179, 226, 237, 238, 239], "understood": [82, 155, 175], "stejskal": [82, 142, 155, 173, 177, 197, 237, 238, 239], "tanner": [82, 142, 147, 155, 173, 177, 197, 237, 238, 239], "stejskal65": [82, 155, 177, 197], "lebihan84": [82, 155, 177, 197], "brownian": [82, 155], "thermal": [82, 94, 155], "vascular": [82, 155], "blood": [82, 155], "pressur": [82, 155], "pseudo": [82, 84, 155, 165, 171, 176, 177, 197], "laid": [82, 155, 171], "macroscop": [82, 155, 171], "fe": 82, "weigh": 82, "ivimmodel": [82, 171], "read_ivim": [82, 178], "21": [22, 25, 32, 33, 35, 36, 37, 40, 53, 65, 66, 67, 72, 73, 74, 79, 82, 83, 84, 85, 86, 87, 88, 100, 159, 171, 214, 215, 220, 232, 243, 244], "bvalu": [82, 84, 85, 121, 165, 169, 171, 177, 186, 187, 193, 194, 195, 196, 197], "54": [25, 32, 33, 35, 36, 37, 40, 53, 67, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 89, 100, 129, 131, 166, 171, 221, 243, 244], "midwai": 82, "axhlin": 82, "axvlin": 82, "ivim_data_slic": 82, "heat": 82, "hair": 82, "medial": 82, "mixtur": [82, 163], "x1": [82, 171, 175], "x2": [82, 171, 175], "y1": [82, 165], "y2": [82, 165], "csf_slice": 82, "exponenti": [82, 171, 222], "trr": [82, 171], "guess": [82, 163, 165, 171], "split_b_d": [82, 155, 171, 177, 197], "mono": [82, 163, 171], "logarithm": [82, 88, 171, 175], "split_b_s0": [82, 171, 177, 197], "s0_": 82, "d_star": [82, 171, 177, 178, 197], "two_stag": [82, 171], "17": [19, 22, 25, 30, 32, 33, 35, 36, 37, 38, 40, 53, 67, 72, 73, 74, 75, 79, 80, 82, 83, 84, 85, 86, 87, 92, 100, 116, 126, 129, 165, 170, 171, 175, 220, 224], "ivimfit": [82, 178], "model_param": [82, 171, 215], "arrang": [82, 166, 173, 175], "ivimparam": 82, "20x20": 82, "height": [82, 217], "estimated_param": 82, "heatmap": [82, 89], "def": [82, 86, 97, 99, 102, 105, 111, 112, 113, 125, 130, 134, 137, 138, 141, 163, 165, 169, 171, 173, 222], "plot_map": 82, "raw_data": 82, "clim": 82, "s0_predict": [82, 171, 177, 178, 197], "predicted_s0": 82, "measured_s0": 82, "perfusion_fract": [82, 171, 177, 178, 197], "perfusion_coeff": 82, "diffusion_coeff": 82, "refin": [82, 96, 108, 163, 171, 172, 177, 178, 205], "varpro": [82, 171, 224, 225, 231], "mix": [82, 147, 158, 170, 171, 177, 181, 182, 216, 217, 219], "farooq16": 82, "convex": [82, 83, 96, 171], "basin": 82, "fadnavis19": 82, "ivimmodel_vp": 82, "ivimfit_vp": 82, "ivim_trr_predict": 82, "s0_est": 82, "f_est": 82, "d_star_est": 82, "d_est": 82, "text_fit": 82, "param": [82, 138, 141, 163, 171, 175, 177, 213, 218, 222, 232], "3f": 82, "4f": [82, 165], "5f": 82, "gca": 82, "ivim_predict_vp": 82, "ivim_voxel_plot": 82, "januari": [82, 145, 155, 159, 177, 197, 243, 244], "1965": [82, 155, 173, 175, 177, 197, 225], "presenc": [82, 88, 94, 155, 173, 177, 197, 241], "chemic": [82, 155, 173, 177, 197], "288": [72, 82, 83, 90, 155, 173, 177, 197, 221], "bibcod": [82, 155, 177, 197], "1965jchph": [82, 155, 177, 197], "1695690": [82, 155, 177, 197], "deni": [82, 155, 171, 177, 197], "radiologi": [82, 155, 171, 177, 197], "168": [73, 82, 83, 155, 171, 177, 197, 221], "1988": [80, 82, 85, 155, 165, 171, 177, 197, 225, 237], "497": [72, 82, 88, 155, 167, 168, 171, 173, 177, 197, 222, 241], "505": [72, 82, 155, 171, 177, 197, 222], "microlearn": [82, 171, 219], "canada": [82, 92, 159, 171, 176, 177, 200], "farooq": [82, 171], "hamza": [82, 171], "reconst_ivim": [82, 95, 234], "ozarslan2013": [83, 86], "qiv": [83, 86, 171, 177, 178, 198], "teturn": 83, "ng": [83, 171, 177, 178, 198, 217], "interestingli": 83, "rtap": [83, 86, 155, 171, 177, 178, 198, 213, 233], "rtpp": [83, 86, 155, 171, 177, 178, 198, 213, 233], "delahaije2020": 83, "laplacian": [83, 86, 158, 171, 177, 198, 215], "fick2016a": 83, "mapmri": [83, 86, 155, 177, 178, 198, 213, 215, 216, 217, 218, 219, 226, 233, 235], "187": [73, 82, 83], "big_delta": [83, 86, 165, 171, 177, 198, 216], "small_delta": [83, 86, 165, 171, 177, 198, 216], "0365": [83, 155], "0157": [83, 155], "radial_ord": [83, 86, 92, 171, 177, 198], "anisotropic_sc": [83, 171], "laplacian_regular": [83, 86, 171, 226], "regularization_weight": 83, "gcv": [83, 86, 171, 224], "craven1978": 83, "omit": [83, 163, 171, 175], "custom": [83, 84, 163, 170, 171, 177, 179, 215, 227, 233], "positivity_constraint": [83, 171], "global_constraint": [83, 171], "everywher": [83, 158, 171], "pos_grid": [83, 171], "pos_radiu": [83, 171], "job": [83, 142, 175, 218, 233], "viabl": 83, "impos": [83, 86, 88, 171], "extrapol": [83, 86, 171, 175], "desir": [83, 108, 113, 128, 163, 165, 167, 171, 172, 173, 175], "cvxpy": [73, 83, 84, 88, 158, 165, 171, 216, 217, 218, 219, 226, 227, 233, 245], "map_model_laplacian_aniso": 83, "mapmrimodel": [83, 178], "laplacian_weight": [83, 86, 171, 177, 198], "map_model_positivity_aniso": 83, "map_model_both_aniso": 83, "map_model_plus_aniso": 83, "preset": [83, 86, 171], "faster": [19, 83, 108, 111, 145, 158, 163, 167, 168, 170, 171, 172, 175, 177, 187, 188, 214, 215, 220, 222, 236], "mapfit_laplacian_aniso": [83, 217], "mapfit_positivity_aniso": 83, "mapfit_both_aniso": 83, "mapfit_plus_aniso": 83, "cmapl": 83, "map_label": [83, 176], "mapmri_rtop": 83, "smoother": [83, 163, 171, 172, 175, 177, 180], "norm_of_laplacian_sign": [83, 171, 178], "mapmri_norm_laplacian": 83, "mapmri_map": 83, "proton": [83, 142, 239], "said": 83, "hosseinbor2013": 83, "composit": [83, 163], "fick2016b": 83, "puls": [83, 86, 142, 165, 166, 171, 173, 237, 239], "appar": [83, 151, 153, 158, 167, 171], "diamet": 83, "strong": 83, "pore": [83, 171], "realist": 83, "map_model_both_ng": 83, "bval_threshold": [83, 171, 177, 198], "map_model_plus_ng": 83, "mapfit_both_ng": 83, "mapfit_plus_ng": 83, "ng_perpendicular": [83, 171, 178], "ng_parallel": [83, 171, 178], "mapmri_ng": 83, "clue": 83, "map_model_both_iso": 83, "mapfit_both_iso": 83, "noisier": 83, "sfu": [83, 92], "hj": [83, 166, 171], "craven": [83, 171], "spline": [83, 163, 171, 178], "1978": [73, 82, 83, 171, 225], "377": [24, 27, 72, 74, 79, 82, 83, 146, 171, 222], "403": [73, 79, 80, 82, 83, 171, 222], "hosseinbor": [83, 171], "bessel": [83, 171], "bfor": [83, 171], "650": [74, 82, 83, 87, 171, 213], "670": [82, 83, 171, 215], "dispers": [83, 85, 168], "isbi": [83, 92, 159, 166, 171, 220, 243, 244], "reconst_mapmri": [83, 95, 217, 234], "msmt": [84, 158, 171, 224, 225, 227, 233], "jeurissen2014": 84, "cerebrospin": [84, 89, 157, 177, 211, 243, 244], "overestim": [84, 171], "ssst": [84, 171], "otsu": [84, 155, 178, 215, 221], "powermap": 84, "unavail": 84, "unique_bvals_toler": [84, 171, 178], "auto_response_msmt": [84, 178], "mask_for_response_msmt": [84, 178], "response_from_mask_msmt": [84, 178, 228], "multishelldeconvmodel": [84, 178], "qball_model": 84, "qballmodel": [84, 178], "ap": [84, 171, 175], "anisotropic_pow": [84, 178, 215], "anisotropic_power_map": 84, "treat": [84, 163, 165, 166, 167, 171, 177], "hidden": [84, 116, 163, 166, 170, 171, 217, 226], "markov": [84, 116, 172, 220, 221], "hmrf": [84, 116], "nclass": [84, 116, 172], "initial_segment": [84, 116, 172], "final_segment": [84, 116, 172], "precis": [84, 85, 113, 142, 163, 165, 170, 171, 175, 215, 217, 222, 223], "mask_wm": [84, 171], "mask_gm": [84, 171], "mask_csf": [84, 171], "wm_fa_thr": [84, 171], "gm_fa_thr": [84, 171], "csf_fa_thr": [84, 171], "gm_md_thr": [84, 171], "csf_md_thr": [84, 171], "0032": [84, 171], "nvoxels_wm": 84, "nvoxels_gm": 84, "nvoxels_csf": 84, "precalcul": [84, 177, 185], "response_wm": [84, 171], "response_gm": [84, 171], "response_csf": [84, 171], "auto_response_wm": 84, "auto_response_gm": 84, "auto_response_csf": 84, "multishellrespons": [84, 178], "ubval": [84, 165, 171], "response_mcsd": 84, "wm_rf": [84, 171], "gm_rf": [84, 171], "csf_rf": [84, 171], "mcsd_model_simple_respons": 84, "mcsd_model": 84, "mcsd_fit": 84, "all_shm_coeff": [84, 171, 178], "vf": [84, 163], "volume_fract": [84, 171, 178], "sh_coeff": [84, 91, 171, 178], "csf_sh_coeff": 84, "gm_sh_coeff": 84, "wm_sh_coeff": 84, "mcsd_pred": 84, "mcsd_odf": 84, "reset_camera_tight": 84, "msdodf": 84, "411": [72, 82, 83, 84, 171, 222], "426": [73, 79, 80, 82, 83, 84, 222], "dell": [84, 89, 171], "acqua": [84, 89, 171], "milan": [84, 171], "itali": [84, 171], "reconst_mcsd": [84, 95, 234], "implaus": 85, "mesoscop": 85, "contrari": [85, 111], "confound": [85, 94], "secondli": 85, "meval": [85, 91, 121, 122, 171, 173], "00099": [85, 121, 173], "00226": [85, 121, 173], "00087": [85, 121, 173], "loop": [85, 89, 116, 137, 138, 141, 142, 163, 165, 171, 172, 175, 218, 224, 230], "linspac": [85, 86, 130, 173, 175], "num": [85, 165, 214], "ang": 85, "91": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 98, 166, 170, 220], "f_i": 85, "a_i": 85, "msdki_model": 85, "msdki_fit": 85, "ncol": [85, 86, 102, 163, 176], "bbox_to_anchor": 85, "msdki_simul": 85, "curv": [85, 175], "art": [85, 158, 235], "im2": 85, "im3": 85, "msdki_invivo": 85, "insur": [85, 171, 215], "intris": [85, 171], "di": [85, 230], "smt2f": [85, 171, 178], "smt2di": [85, 171, 178], "ufa2": 85, "smt2ufa": [85, 171, 178], "ufa": [85, 87, 88, 171, 176, 178], "msdki_smt2_invivo": 85, "intrins": [85, 171], "confirm": [85, 87, 98], "rescal": [85, 171], "colleg": [85, 171], "misestim": [85, 171], "press": [85, 171], "27606": [85, 171], "kelm": [85, 171], "carson": [85, 171], "rp": [85, 171], "dc": 85, "139": [73, 82, 83, 85, 114, 171, 220], "346": [72, 82, 83, 85, 171, 175, 222], "359": [30, 38, 83, 85, 171, 222], "reconst_msdki": [85, 95, 234], "sought": 86, "unsolv": 86, "fick2017": 86, "terminologi": 86, "au": [86, 166], "graphnet": [86, 166, 171, 243, 244], "sparsiti": [86, 90, 165, 171], "drastic": 86, "nervou": 86, "mous": [86, 137], "fetch_qtdmri_test_retest_2subject": [86, 178], "read_qtdmri_test_retest_2subject": [86, 178], "qtdmri": [86, 178, 233], "retest": [86, 166, 243, 244], "mice": [86, 166, 243, 244], "freeli": 86, "citeabl": 86, "wassermann2017": 86, "cc_mask": [86, 166], "5m": [86, 166], "visualise_gradient_table_g_delta_rainbow": [86, 178], "dmri_acquisition_schem": 86, "isolin": [86, 171], "architectur": [22, 86, 171, 176, 224], "subplot_titl": 86, "subject1": 86, "subject2": 86, "data_": 86, "mask_": 86, "gtab_": [86, 171], "enumer": [86, 87, 99, 125, 126, 130, 175], "data_middle_slic": 86, "mask_middle_slic": 86, "tenmod": 86, "overlai": [86, 105, 145], "mask_templ": 86, "greys_r": 86, "dmri_datasets_fa_with_ccmask": 86, "tau_min": 86, "tau_max": 86, "qtdmri_fit": 86, "cc_voxel": 86, "time_ord": [86, 171], "l1": [86, 90, 171, 172, 175], "cv": [86, 171], "qtdmri_mod": 86, "qtdmrimodel": [86, 178], "l1_regular": [86, 171], "l1_weight": [86, 171], "5th": [86, 171, 177, 196], "trend": 86, "plot_mean_with_std": 86, "ind1": 86, "plotcolor": 86, "std_mult": 86, "lw": 86, "fill_between": 86, "005": [86, 173], "msd_": 86, "4e": 86, "10e": 86, "delta_grid": 86, "msd_grid": 86, "meshgrid": 86, "d_grid": 86, "d_level": 86, "1e": [86, 87, 92, 163, 165, 167, 168, 169, 171, 172, 177, 224], "contourf": 86, "1e3": 86, "1e5": 86, "dashdot": 86, "marker": [86, 147], "0091": 86, "14e": 86, "set_ylim": 86, "set_xlim": 86, "009": 86, "0185": 86, "cb": [86, 163], "set_label": 86, "qt_indices_msd": 86, "slowli": 86, "nearli": [86, 175], "perfectli": [86, 100, 163, 168], "rtxp_": 86, "rtxp_grid": 86, "d_color": 86, "162": [73, 82, 83, 86, 87, 221], "3e": [86, 87, 171], "22": [22, 25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 92, 96, 97, 159, 163, 167, 171, 220, 223, 225, 230], "140": [43, 82, 83, 86, 87, 98, 99, 134, 148, 156, 163, 166, 177, 207, 220, 243, 244], "113": [73, 82, 83, 86, 102, 135, 146, 220], "6e": 86, "16": [19, 22, 25, 32, 33, 35, 36, 37, 40, 53, 67, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 89, 92, 95, 116, 128, 129, 145, 158, 159, 170, 171, 175, 176, 213, 214, 215, 221, 222, 224, 232, 234, 235], "qt_indices_rtop": 86, "experienc": 86, "odd": [86, 167, 171, 227, 241], "arriv": 86, "qt_indices_rtap": 86, "9e": 86, "15e": 86, "qt_indices_rtpp": 86, "bigger": [86, 165, 175], "asid": 86, "sharpening_factor": 86, "conclud": 86, "tempor": [86, 142, 171, 237, 238], "reconst_qtdmri": [86, 95, 234], "briefli": [87, 88], "summar": [87, 88, 174], "dtd": [87, 88, 171], "langl": [87, 88, 171], "rangl": [87, 88, 171], "otim": [87, 88, 171], "product": [87, 88, 163, 165, 167, 171, 172, 175, 177], "cumul": [87, 88, 171, 175], "approx": [87, 88], "exp": [87, 88, 171, 175, 239], "inner": [87, 88, 163, 165, 171, 175], "ln": [87, 88], "s_1": [87, 88], "vdot": [87, 88], "s_n": [87, 88], "_1": [87, 88, 171, 237, 238], "_n": [87, 88, 171], "_i": [87, 88, 90, 171], "voigt": [87, 88, 171], "notat": [87, 88, 171, 219], "qte": [87, 166, 171], "qte_lte_pt": 87, "bten": [87, 165, 171, 173, 226, 227, 228, 233], "lte": [87, 165, 171], "pte": [87, 165, 171], "matrix_rank": 87, "qtimodel": [87, 88, 178], "qtifit": [87, 88, 178], "\u03bcfa": 87, "v_md": [87, 171, 178], "v_shear": [87, 171, 178], "shear": [87, 96, 131, 144, 156, 163, 165, 171, 172, 175, 177, 179, 215], "v_iso": [87, 171, 178], "c_md": [87, 171, 178], "c_mu": [87, 88, 171, 178], "\u03bc": 87, "c_m": [87, 171, 178], "c_c": [87, 171, 178], "k_bulk": [87, 171, 178], "bulk": [87, 171, 175], "k_shear": [87, 171, 178], "k_mu": [87, 171, 178], "carl": [87, 88, 171], "fredrik": [87, 88, 171], "multidimension": [87, 88, 165, 171, 173, 226], "135": [82, 83, 87, 88, 114, 171, 220], "039": [51, 61, 85, 87, 88, 171], "reconst_qti": [87, 95, 234], "heteroskedast": 88, "mathrm": [88, 165, 171, 175, 237], "s_k": 88, "ldot": [88, 99], "ddot": 88, "semi": [88, 163, 165, 175], "succeq": 88, "violat": [82, 88], "unreli": [88, 170], "enfoc": 88, "semidefinit": [88, 166, 171], "sdp": [88, 171], "sc": [88, 142, 171, 175], "readili": 88, "licenc": 88, "routin": [88, 171, 175, 176, 231], "read_dib_217_lte_pte_st": [88, 178], "read_dib_70_lte_pte_st": [88, 178], "compare_qti_map": [88, 178], "showcas": [88, 89, 151, 152, 154, 155, 157, 226], "richer": 88, "emul": 88, "shorter": [88, 126, 168, 175, 177], "scan": [88, 170], "filip": 88, "szczepankiewicz": [88, 166], "szczepankiewicz_dib_2019": 88, "mark": [88, 102, 171, 175, 217, 233], "_217": 88, "suffix": 88, "data_img": [88, 166], "gtab_217": 88, "data_217": 88, "downsampl": [88, 114, 130, 178, 220, 230], "_70": 88, "gtab_70": 88, "data_70": 88, "consider": [88, 99, 130, 171, 177, 193], "qtimodel_217": 88, "qtifit_217": 88, "qtimodel_unconstrain": 88, "qtifit_unconstrain": 88, "sdpdc": [88, 171], "qtimodel_constrain": 88, "qtifit_constrain": 88, "\u00b5fa": 88, "clearli": [88, 250], "fall": [88, 163, 175, 177, 180, 225, 228], "rich": 88, "despit": 88, "cost": [88, 90, 99, 163, 171, 172], "dens": [88, 109, 163, 165, 170, 231], "boito": [88, 171, 231], "feragen": [88, 171], "238": [72, 82, 83, 88, 171, 224], "118198": 88, "hoge": [88, 166], "waveform": [88, 166], "oil": [88, 166], "liquid": [88, 166], "crystal": [88, 166], "brief": [88, 111, 112, 166], "dib": [88, 166], "104208": [88, 166], "reconst_qtiplu": [88, 95, 234], "priori": [89, 116, 171], "rl": 89, "richardson1972": 89, "constantinides1997": 89, "promot": [89, 165, 171, 172, 217, 222], "rudin1992": 89, "wise": [89, 126, 168, 171, 173, 175, 177, 243, 244], "peak_direct": [89, 178, 224, 232], "symmetric362": [89, 166, 167, 171], "7e": [89, 171], "csf_respons": [89, 171, 177], "gm_respons": [89, 171, 177], "8e": [89, 171], "adequ": [89, 171], "impuls": [89, 171], "imprecis": [89, 171], "acqua2007": 89, "default_respons": 89, "auto_response_sst": 89, "estimated_respons": 89, "arang": [89, 111, 112, 113, 114, 171, 173, 175], "rec_respons": 89, "rec_response_sign": 89, "bear": 89, "recon_typ": [89, 171, 177], "n_coil": [89, 171, 177], "suitabl": [89, 166, 168, 171, 237, 238], "smf": [89, 171, 177], "isn": [89, 142, 165], "ipat": [89, 171, 177], "asset": [89, 171, 177], "cover": [89, 97, 131, 163, 169, 215], "wherein": 89, "inclus": [89, 163, 175], "neither": [89, 165, 172, 175], "f_iso": [89, 171, 178], "ax0": 89, "wm_iso_partit": 89, "rumbafit": [89, 178], "combined_odf_iso": [89, 171, 178], "rumba_odf": 89, "rumba_peak": 89, "demand": 89, "gb": [89, 171], "singleton": [89, 171, 177, 214, 217], "data_tv": 89, "rumba_global_odf": 89, "pk": 89, "rumba_global_peak": 89, "1972": [84, 89, 225], "bayesian": [89, 116, 158, 215], "josa": 89, "1364": [82, 89, 226], "000055": 89, "constantinid": [89, 171], "atalar": [89, 171], "mcveigh": [89, 171], "1997": [82, 89, 171, 218, 225], "offici": [89, 158, 159, 171], "852": [74, 82, 85, 89, 171, 215, 218], "857": [73, 74, 82, 85, 89, 171, 214], "rudin": [89, 171], "osher": [89, 171], "fatemi": [89, 171], "1992": [89, 171, 225], "nonlinear": [89, 100, 145, 149, 158, 163, 166, 171, 177, 185, 229, 232, 243, 244], "physica": [89, 171], "phenomena": [89, 171], "259": [82, 83, 87, 89, 171, 221], "268": [82, 83, 89, 93, 171, 221], "0167": [89, 165, 171], "2789": [82, 89, 171], "90242": [89, 171], "dellacqua2007": 89, "rizzo": [89, 171], "scifo": [89, 171], "clark": [89, 171], "scotti": [89, 171], "fazio": [89, 171], "bio": [89, 171], "462": [73, 80, 82, 83, 89, 171, 222], "472": [72, 82, 83, 89, 171, 222], "tbme": [89, 171], "888830": [89, 171], "07": [25, 32, 33, 35, 36, 37, 40, 53, 61, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 89, 129, 166, 168, 171, 243, 244], "067": [89, 146], "reconst_rumba": [89, 95, 234], "dpp": [90, 230], "examin": [90, 102, 165, 171, 173, 235], "elast": [90, 171], "net": [90, 165, 170, 171, 175, 177, 191, 221], "zou2005": [90, 171], "y_i": [90, 169, 241], "lambda": [90, 113, 163, 167, 171, 176, 213], "w_j": 90, "2_j": 90, "balanc": [90, 171], "l2": [90, 144, 165, 171, 172, 175], "sf_fit": 90, "sf_odf": 90, "sf_peak": 90, "sf_both": 90, "zou": [90, 171], "320": [72, 82, 83, 87, 90, 171, 222], "reconst_sfm": [90, 95, 234], "sf": [91, 165, 167, 168, 171, 218], "00015": 91, "symm_sign": 91, "sh_basi": [91, 171], "reproject": 91, "high_res_sph": 91, "symm_reconst": 91, "asymmetr": [91, 145, 158, 163, 177, 205, 230, 232, 241], "odf2": 91, "n_pts_hemispher": 91, "asym_odf": 91, "asym_sign": 91, "asym_reconst": 91, "deal": [91, 94, 172, 229, 230, 235], "full_basi": [91, 167, 171], "asym_reconst_ful": 91, "reconst_sh": [91, 95, 230, 234], "merlet2013": 92, "\u00f6zarslan2008": 92, "\u00f6zarslan2009": 92, "shoremodel": [92, 93, 178], "fetch_isbi2013_2shel": [92, 178], "contest": 92, "2013_isbi": [92, 243, 244], "xmin": 92, "xmax": 92, "ymin": 92, "ymax": 92, "zmin": 92, "zmax": 92, "zeta": [92, 171], "lambdan": [92, 171], "lambdal": [92, 171], "cheng2011": 92, "700": [92, 171, 213, 243, 244], "asm": [92, 93, 171], "asmfit": [92, 93, 171], "toronto": 92, "honolulu": 92, "hi": [92, 165, 171], "eap": [92, 165, 171], "compress": [92, 130, 169, 171, 175, 177, 193, 194, 213], "cheng": [92, 170, 171, 173], "insight": [92, 171], "unifi": [92, 165, 171, 176, 177, 200], "reconst_shor": [92, 95, 234], "shore_map": 93, "ON": [93, 165, 171, 172, 177], "reconst_shore_metr": [93, 95, 234], "physiolog": [94, 171, 177, 196], "pernici": 94, "particip": [94, 172], "young": 94, "yendiki": 94, "refit": 94, "intermitt": [94, 218, 224, 230], "ne": 94, "fetch_stanford_hardi": [94, 96, 97, 178], "dti_wl": 94, "roi_idx": 94, "fit_wl": 94, "fa1": 94, "evals1": 94, "evecs1": 94, "cfa1": 94, "tensor_ellipsoids_wl": 94, "noisy_data": 94, "noisy_idx": 94, "fit_wls_noisi": 94, "fa2": 94, "evals2": 94, "evecs2": 94, "cfa2": 94, "tensor_ellipsoids_wls_noisi": 94, "distort": [94, 151, 163, 170, 175, 233], "dti_restor": 94, "fit_restore_noisi": 94, "fa3": 94, "evals3": 94, "evecs3": 94, "cfa3": 94, "tensor_ellipsoids_restore_noisi": 94, "convinc": 94, "ourselv": [94, 143], "ravel": [94, 111, 113, 175, 220], "dti_fa_distribut": 94, "resembl": [94, 166], "importantli": 94, "believ": 94, "koldewynb": 94, "kakunooria": 94, "kanwish": 94, "fischl": 94, "reject": [94, 168, 171, 177, 195, 196], "1088": [82, 94, 171, 177, 195, 196, 215], "chung": [94, 171, 227], "sw": [94, 171, 177, 196], "henri": [94, 126, 171, 177, 196], "uncertainti": [94, 142, 171, 177, 196], "531": [72, 82, 94, 171, 177, 196, 222], "541": [82, 94, 171, 177, 196, 222], "restore_dti": [94, 95, 215, 234], "examples_builtreconstruct": 95, "mutual": [96, 97, 156, 163, 177, 179], "mattes03": [96, 97, 163], "ant": [96, 97, 104, 105, 106, 116, 156, 163], "avants11": [96, 97, 104, 105, 106, 156, 163], "twice": [96, 143, 165, 167, 175, 215, 218], "simplifi": [96, 114, 143, 158, 163, 169, 171, 175, 217, 221, 227, 235], "regtool": [96, 97, 102, 104, 105, 106, 178, 222, 223, 226], "fetch_syn_data": [96, 178], "transform_centers_of_mass": [96, 178], "mutualinformationmetr": [96, 97, 178], "affineregistr": [96, 97, 178, 214, 230], "translationtransform3d": [96, 97, 178], "rigidtransform3d": [96, 97, 178], "affinetransform3d": [96, 178], "affine_registr": [96, 97, 104, 178], "register_dwi_to_templ": [96, 178], "static_data": [96, 97], "static_affin": [96, 97, 104, 106, 163], "static_img": [96, 97], "hardi150": [96, 97, 151, 155], "static_grid2world": [96, 97, 163], "folder2": 96, "moving_data": 96, "moving_affin": [96, 97, 104, 106, 163], "moving_img": 96, "moving_grid2world": [96, 97, 163], "affine_map": [96, 97, 106, 163], "overlay_slic": [96, 97, 104, 106, 178], "resampled_0": 96, "resampled_1": 96, "resampled_2": 96, "rough": [96, 99], "c_of_mass": 96, "occupi": [96, 165, 171, 173], "roughli": [96, 104, 106, 123, 163, 172], "transformed_com_0": 96, "transformed_com_1": 96, "transformed_com_2": 96, "translat": [96, 97, 104, 131, 144, 156, 165, 172, 175, 177, 178, 179, 205, 224], "joint": [96, 163, 177, 179, 239], "margin": [96, 163, 175, 177, 179], "integ": [96, 130, 131, 142, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 213, 215, 222, 226, 229], "consum": [93, 96], "nbin": [96, 97, 163, 172, 177, 179], "sampling_prop": [96, 97, 177, 179], "optima": 96, "pyramid": [96, 105, 106, 163, 177, 180], "flexibl": [96, 113, 167, 171, 172, 215, 241], "indirectli": 96, "coarsest": [96, 163, 177, 179], "medium": [96, 121, 177, 205], "finest": [96, 105, 106, 163, 177, 179], "level_it": [96, 97, 102, 104, 105, 106, 163, 177, 179, 180], "nx": [96, 165], "nz": [96, 165], "affreg": [96, 97], "dictionari": [96, 134, 138, 141, 163, 165, 166, 169, 170, 171, 173, 175, 176, 177, 210, 211, 218, 233], "regtransform": 96, "params0": [96, 163], "starting_affin": [96, 97, 163, 177, 230], "transformed_trans_0": 96, "transformed_trans_1": 96, "transformed_trans_2": 96, "rigid": [96, 97, 99, 100, 104, 156, 172, 177, 178, 179, 185, 205, 207, 218, 224, 227, 230], "slight": [96, 143], "transformed_rigid_0": 96, "transformed_rigid_1": 96, "transformed_rigid_2": 96, "transformed_affine_0": 96, "transformed_affine_1": 96, "transformed_affine_2": 96, "center_of_mass": [96, 104, 178], "string": [96, 138, 141, 146, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 190, 218, 219, 226, 227, 233], "rigid_isosc": [96, 104, 177, 178, 179], "rigid_sc": [96, 104, 177, 178, 179], "xformed_img": [96, 97], "xformed_affine_0": 96, "xformed_affine_1": 96, "xformed_affine_2": 96, "bvals_fil": [96, 177, 198, 208], "bvecs_fil": [96, 177, 198, 208], "opposit": [96, 123, 163, 171, 217], "revers": [96, 113, 170, 171, 172, 242], "xformed_dwi": 96, "templat": [96, 102, 104, 163, 166, 171, 176, 213, 215, 226, 233, 243, 244], "reg_method": [96, 163], "aff": [96, 98, 163], "xformed_dwi_0": 96, "xformed_dwi_1": 96, "xformed_dwi_2": 96, "dwi_to_templ": 96, "haynor": [96, 97, 163], "vessel": [96, 97, 163], "lewellen": [96, 97, 163], "eubank": [96, 97, 163], "pet": [96, 97, 163], "ct": [96, 97, 163, 171, 178, 230], "chest": [96, 97, 163], "avant": [96, 97, 104, 105, 106, 116, 156, 163], "tustison": [96, 97, 104, 105, 106, 116, 156, 163], "song": [96, 97, 104, 105, 106, 156, 163], "affine_registration_3d": [96, 103, 234], "pixel": [97, 102, 151, 163, 167, 172, 175, 176], "circumst": 97, "cardiac": 97, "priorit": 97, "register_seri": [97, 178], "pad_bi": 97, "constant_valu": 97, "affmat": 97, "sin": [97, 143, 165, 173, 175, 242], "deregist": 97, "transl": 97, "static_mask": [97, 163], "moving_mask": [97, 163], "reg_func": 97, "fignam": 97, "scope": 97, "hopefulli": 97, "transformed_pipelin": 97, "border": [97, 137, 222], "troublesom": 97, "sz": 97, "pd": 97, "squares_st": 97, "int32": [97, 163, 175], "squares_mv": 97, "deregistered_squar": 97, "masked_stat": 97, "transformed_squar": 97, "pin": [97, 224, 231, 233], "transformed_squares_mask": 97, "transformed_squares_mask_2": 97, "transformed_squares_mask_3": 97, "xform": [97, 163], "series_affin": [97, 163], "series_mask_1": 97, "series_mask_2": 97, "affine_registration_mask": [97, 103, 234], "coregist": 98, "atla": [98, 108, 109, 123, 124, 147, 148, 166, 172, 174, 243, 244], "garyfallidis15": [98, 99, 108, 148, 156, 163, 177, 207], "shuffl": [98, 170], "pairwis": [98, 99, 126, 163, 172], "centroid": [98, 108, 111, 113, 114, 123, 125, 163, 172, 174, 177, 178, 207], "streamlinear": [98, 99, 108, 178, 218, 222], "groupwise_slr": [98, 178], "read_five_af_bundl": [98, 178], "show_bundl": [98, 178], "basicconfig": 98, "arcuat": [98, 108, 109, 124, 134, 147, 148, 166], "fasciculi": 98, "57": [25, 32, 33, 35, 36, 37, 40, 53, 62, 71, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 88, 98, 171, 220, 243, 244], "save_a": [98, 176], "before_group_registr": 98, "nativ": [98, 99, 130, 134, 135, 146, 147, 148, 163, 169, 176, 177, 200, 207], "bundles_reg": 98, "after_group_registr": 98, "117": [82, 83, 98, 99, 102, 114, 148, 156, 163, 166, 173, 177, 207, 220], "124": [72, 73, 82, 83, 98, 99, 102, 114, 148, 156, 163, 166, 177, 207, 220], "romerobascones22": 98, "romero": [98, 229, 230, 231], "bascon": [98, 229, 230, 231], "bundleatlas": 98, "atlas": [98, 163, 166, 243, 244], "bundle_group_registr": [98, 103, 234], "garyfallidis14": [99, 146, 147, 148, 149, 163, 177, 207], "cingulum": [99, 125, 135, 166], "sleep": 99, "streamlinelinearregistr": [99, 178], "two_cingulum_bundl": [99, 125, 178], "set_number_of_point": [99, 100, 111, 112, 130, 178, 213, 215, 216, 218, 222, 233], "cb_subj1": [99, 125], "cb_subj2": 99, "srr": 99, "srm": 99, "cb_subj2_align": 99, "show_both_bundl": [99, 125], "lines_actor": 99, "rotatez": [99, 125], "orang": [99, 135], "before_registr": 99, "after_registr": 99, "stai": [99, 113, 237, 238], "bmd": [99, 163], "operatornam": [99, 143, 239, 242], "flip": [99, 108, 163, 172, 175, 216, 226, 241], "mdf": [99, 100, 108, 111, 114, 163, 175, 177, 178, 185, 205, 226], "eq": [99, 163, 165, 171, 216], "row": [99, 109, 113, 130, 131, 137, 144, 163, 165, 166, 167, 169, 171, 172, 173, 175, 176, 224], "primarili": [99, 171], "visser": 99, "intact": [99, 163, 175], "x_": 99, "prove": 99, "nonneg": [99, 171, 175], "satisfi": [99, 165, 175], "inequ": [99, 165, 171], "formul": [99, 116, 165, 171, 237, 239], "underset": 99, "compos": [99, 163, 165, 171, 175, 177], "bundle_registr": [99, 103, 234], "nonlinearli": [100, 149, 163, 177, 185], "chandio23": [100, 149], "chandio20": [100, 147], "uncin": [100, 147, 149], "streamwarp": [100, 178], "bundlewarp_vector_fil": [100, 178], "bundlewarp_shape_analysi": [100, 178], "fetch_bundle_warp_dataset": [100, 178], "unlist_streamlin": [100, 163, 178], "viz_two_bundl": [100, 178], "viz_vector_field": [100, 178], "viz_displacement_mag": [100, 178], "uf_l": [100, 147], "figshar": [100, 147, 148, 149, 243, 244], "test_bundles_for_dipi": [100, 149], "22557733": [100, 149], "bundle_warp_fil": 100, "s_uf_l_path": 100, "s_uf_l": [100, 149], "m_uf_l_path": 100, "m_uf_l": [100, 149], "uf_subj1": 100, "uf_subj2": 100, "static_and_mov": 100, "trade": [100, 149, 163, 177, 185], "deformed_bundl": [100, 163], "moving_align": [100, 163], "match_pair": 100, "warp_map": 100, "max_it": [100, 163, 172, 177, 185], "warp": [100, 102, 105, 106, 149, 156, 163, 166, 176, 177, 180, 185, 229, 233], "static_and_partially_deform": 100, "linearli": [100, 163, 175, 177, 185, 233], "linearly_and_nonlinearly_mov": 100, "c1": [100, 166, 176], "points_align": [100, 176], "partially_vectorfield": 100, "partially_vectorfield_over_linearly_mov": 100, "partially_deformation_magnitude_over_linearly_mov": 100, "new_tractogram": 100, "partially_deformed_bundl": 100, "deformed_bundle2": 100, "static_and_fully_deform": 100, "fully_vectorfield": 100, "fully_vectorfield_over_linearly_mov": 100, "fully_deformation_magnitude_over_linearly_mov": 100, "no_disk": [100, 163, 174, 177, 182, 183], "fully_deformed_bundl": 100, "biorxiv": [100, 128, 149, 163, 177, 185], "stnd": 100, "neurip": 100, "bundlewarp_registr": [100, 103, 234], "skimag": [102, 172, 213, 215], "imwarp": [102, 105, 106, 178, 215], "symmetricdiffeomorphicregistr": [102, 105, 106, 178], "ssdmetric": [102, 105, 178], "ellips": [102, 165], "draw_ellips": 102, "rr": 102, "img_ref": 102, "img_in": 102, "show_imag": 102, "img_warp": 102, "fig_nam": 102, "ssd": [102, 105, 156, 163, 171, 177, 180], "02f": 102, "step_length": [102, 163, 177, 180], "sdr": [102, 105, 106, 217, 218, 231], "ndim": [102, 105, 165, 171, 173, 224], "inv_it": [102, 105, 163, 177, 180], "ss_sigma_factor": [102, 163, 177, 180], "opt_tol": [102, 163, 177, 180], "plot_2d_diffeomorphic_map": [102, 105, 178, 222], "register_binary_fuzzi": [102, 103, 234], "examples_builtregistr": 103, "streamline_registr": [103, 104, 178, 234], "syn_registration_2d": [103, 105, 234], "syn_registration_3d": [103, 106, 213, 234], "greene17": 104, "sphx_glr_examples_built_streamline_analysis_streamline_tool": 104, "syn_registr": [104, 178, 222], "fetch_mni_templ": [104, 178], "read_mni_templ": [104, 178], "horizon": [104, 145, 158, 177, 178, 200, 219, 224, 225, 226, 227, 230, 232, 233], "ra": [43, 104, 134, 146, 165, 169, 172], "dwi_data": 104, "dwi_affin": [104, 163], "dwi_img": 104, "dwi_vox_s": 104, "dwi_bval": 104, "dwi_bvec": 104, "t2": [104, 166, 167, 175, 213, 243, 244], "mni": [104, 108, 147, 148, 166, 213, 215, 243, 244], "1x1x1": [104, 167, 172, 177, 204], "2x2x2": [104, 163], "img_t2_mni": 104, "t2_mni_data": 104, "t2_mni_affin": 104, "t2_mni_voxel_s": 104, "t2_resliced_data": 104, "t2_resliced_affin": 104, "skull": [104, 105, 106, 116], "b0_idx_stanford": 104, "tolist": 104, "dwi_data_noskul": 104, "b0_data_stanford": 104, "mean_b0_masked_stanford": 104, "rigidli": 104, "eventu": 104, "syn": [104, 105, 106, 116, 156, 163, 213, 215, 230, 243, 244], "warped_b0": [104, 163], "warped_b0_affin": 104, "avants09": [104, 105, 106, 156], "final_warped_b0": 104, "prealign": [104, 163], "transformed_sagitt": 104, "transformed_coron": 104, "transformed_axi": 104, "forget": 104, "warp_b0_affin": 104, "undo": 104, "mni_t2_streamlines_using_affine_reg": 104, "sft_in_t2_using_aff_reg": 104, "world_coord": [104, 134, 176], "out_png": [104, 176], "streamlines_dsn_mni_aff_reg": 104, "mni_t2_streamlines_using_syn": 104, "transform_points_invers": [104, 163, 178], "sft_in_t2_using_syn": 104, "streamlines_dsn_mni_syn": 104, "superiorfrontal_aff_reg": 104, "superiorfrontal_syn": 104, "epstein": [104, 105, 106, 156, 163], "gee": [104, 105, 106, 116, 156, 163], "elderli": [104, 105, 106, 156, 163], "neurodegen": [104, 105, 106, 156, 163], "grafton": 104, "ccmetric": [105, 106, 178, 215, 224], "fname_mov": 105, "reg_o": [105, 166], "fname_stat": 105, "reg_c": [105, 166], "overlay_imag": [105, 178], "input_imag": [105, 172], "decis": 105, "dim": [105, 158, 163, 217, 231], "n_0": [105, 106], "n_1": [105, 106], "n_k": [105, 106, 171], "diffeomorphicmap": [105, 106, 176, 178, 227, 231], "forth": [105, 106], "diffeomorphic_map": 105, "warped_mov": [105, 106, 156, 163, 177], "direct_warp_result": 105, "warped_stat": [105, 106], "inverse_warp_result": 105, "callback_cc": 105, "react": [105, 217], "registrationstag": [105, 178], "scale_end": 105, "wmove": 105, "moving_imag": [105, 163], "wstatic": 105, "static_imag": [105, 163], "t1_name": 105, "b0_name": 105, "syn_data": [105, 106, 243, 244], "sigma_diff": [105, 163, 230], "callback": [105, 134, 137, 163, 165, 170, 176], "t1_slices_input": 105, "t1_slices_r": 105, "inv_warp": 105, "t1_slices_res2": 105, "diffeomorphic_map_b0": 105, "modal": [106, 163, 177, 180], "stanford_b0": 106, "stanford_b0_affin": 106, "b0_fname": 106, "syn_b0": 106, "syn_b0_affin": 106, "stanford_b0_mask": 106, "syn_b0_mask": 106, "pre_align": 106, "02783543e": 106, "83019053e": 106, "07735639e": 106, "57654118e": 106, "34051706e": 106, "41918267e": 106, "66525861e": 106, "23579799e": 106, "34288908e": 106, "90262026e": 106, "80820307e": 106, "46216651e": 106, "00000000e": [56, 82, 106], "input_3d": 106, "brain_extraction_dwi_1": [107, 115, 234], "garyfallidis17": [108, 123, 148, 163, 172, 177, 202, 205, 207], "whole_brain_slr": 108, "get_two_hcp842_bundl": [108, 109, 123, 124, 178], "fetch_target_tractogram_hcp": [108, 109, 178], "fetch_bundle_atlas_hcp842": [108, 109, 124, 178], "get_bundle_atlas_hcp842": [108, 178], "get_target_tractogram_hcp": [108, 109, 178], "target_fil": 108, "target_fold": 108, "atlas_fil": [108, 124], "atlas_fold": [108, 124], "all_bundles_fil": 108, "sft_atla": 108, "atlas_head": 108, "sft_target": 108, "target_head": 108, "tractograms_initi": [108, 109], "qb_centroids1": 108, "qb_centroids2": 108, "x0": [82, 108, 163, 165, 172, 177, 207, 224], "randomst": [108, 170, 175], "slr_transform": [108, 177, 205], "npy": [108, 142, 147, 148, 169, 177, 213], "tractograms_after_registr": 108, "tri": [22, 108, 163, 165, 168, 176], "millimet": [108, 130, 142, 163, 171, 172], "model_clust_thr": [108, 172, 177, 205], "reduction_thr": [108, 172, 177, 205], "pruning_thr": [108, 172, 177, 205], "reduction_dist": [108, 172, 177, 205], "pruning_dist": [108, 172, 177, 205], "diferect": 108, "mam": [108, 172, 177, 205, 225], "neighbour": [108, 167, 175, 177, 199], "model_af_l_fil": [108, 109, 123, 124], "model_cst_l_fil": [108, 109, 123, 124], "sft_af_l": [108, 109, 124], "model_af_l": [108, 109, 123, 124], "17281532": [108, 109, 124], "55606842": [108, 109, 124], "92485857": [108, 109, 124], "360": [32, 37, 72, 79, 80, 82, 83, 108, 109, 124, 129, 130, 222], "028": [108, 109, 124], "89": [25, 32, 33, 35, 36, 37, 40, 53, 71, 72, 73, 74, 79, 80, 82, 83, 84, 85, 100, 102, 108, 109, 114, 116, 124, 146, 171, 214, 220, 229], "af_l_model_bundl": [108, 109], "rb": [108, 172, 228], "recognized_af_l": [108, 109], "af_l_label": 108, "model_bundl": [108, 172, 174], "af_l_recognized_bundl": [108, 109], "reco_af_l": 108, "af_l_rec_1": 108, "af_l_org_1": 108, "af_l_recognized_bundle2": 108, "af_l_rec_2": 108, "af_l_org_2": 108, "af_l_recognized_bundle3": 108, "af_l_rec_3": 108, "af_l_org_3": 108, "r_recognized_af_l": 108, "r_af_l_label": 108, "pruned_streamlin": [108, 172], "af_l_refine_recognized_bundl": 108, "af_l_rec_refin": 108, "af_l_org_refin": 108, "sft_cst_l": 108, "model_cst_l": [108, 123], "cst_l_model_bundl": 108, "recognized_cst_l": 108, "cst_l_label": 108, "cst_l_recognized_bundl": 108, "reco_cst_l": 108, "cst_l_rec_1": 108, "cst_l_org_1": 108, "cst_l_recognized_bundle2": 108, "cst_l_rec_2": 108, "cst_l_org_2": 108, "cst_l_recognized_bundle3": 108, "cst_l_rec_3": 108, "cst_l_org_3": 108, "r_recognized_cst_l": 108, "r_cst_l_label": 108, "cst_l_refine_recognized_bundl": 108, "cst_l_rec_refin": 108, "cst_l_org_refin": 108, "chandio2020": [108, 124, 125, 172, 174, 177, 183, 184, 205], "risach": [108, 124, 125, 147, 172, 174, 177, 183, 184, 205], "bullock": [108, 124, 125, 147, 172, 174, 177, 183, 184, 205, 230], "fc": [108, 124, 125, 147, 172, 174, 177, 183, 184, 205], "harezlak": [108, 124, 125, 147, 172, 174, 177, 183, 184, 205], "rep": [108, 124, 125, 147, 172, 174, 175, 177, 183, 184, 205], "17149": [108, 124, 125, 147, 172, 174, 177, 183, 184, 205], "bundle_extract": [108, 115, 218, 225, 234], "stonge2022": [109, 172], "fss": [109, 178], "faststreamlinesearch": [109, 178], "nearest_from_matrix_row": [109, 178], "hcp_file": 109, "faststreamlinessearch": 109, "ref_streamlin": [109, 172], "max_radiu": [109, 172], "radius_search": [109, 172, 178], "cautiou": 109, "fs_tree_af": 109, "coo_mdist_mtx": 109, "ids_": 109, "ids_ref": 109, "col": [109, 137], "af": [109, 123, 124, 134, 165, 166], "nn_": 109, "nn_ref": 109, "nn_dist": 109, "colormap_lookup_t": [109, 126, 135, 137], "scale_rang": [109, 126, 135, 137], "lookup_colormap": [109, 126, 135, 137], "scalar_bar": [109, 126, 135], "af_l_recognized_bundle_dist": 109, "ref_color": 109, "af_l_model_bundle_reach": 109, "fast_streamline_search": [109, 115, 234], "familiar": [111, 112], "averagepointwiseeuclideanmetr": [111, 112, 123, 178], "euclideanmetr": 111, "cosinemetr": [111, 112, 113, 178], "identityfeatur": [111, 112, 178], "centerofmassfeatur": [111, 178], "midpointfeatur": [111, 178], "arclengthfeatur": [111, 113, 178], "vectorofendpointsfeatur": [111, 112, 113, 178], "get_streamlin": [111, 112], "fornix": [111, 112, 113, 114, 158, 166, 172], "unalt": 111, "nb_point": [111, 112, 123, 172, 175, 215], "qb": [111, 112, 113, 114, 123, 172, 217], "nb": [111, 112, 114, 171], "predetermin": 111, "perman": 111, "graviti": [111, 163], "wiki": [111, 112, 113, 143, 165, 166, 171, 172], "belong": [111, 112, 113, 131, 147, 172, 174, 177], "create_colormap": [111, 112, 113, 114], "colormap_ful": [111, 112, 113, 114], "center_of_mass_featur": 111, "halfwai": [111, 163], "midpoint_featur": 111, "arclength_featur": 111, "extrem": [100, 111, 113, 125, 163, 172, 177, 185], "ambigu": 111, "vector_of_endpoints_featur": 111, "segment_clustering_featur": [111, 115, 234], "sumpointwiseeuclideanmetr": [112, 113, 178], "won": [112, 123, 175, 218, 224, 226], "cosine_metr": 112, "segment_clustering_metr": [112, 115, 234], "n_i": [113, 130, 171, 175], "modular": [113, 176, 177, 200], "subclass": [113, 165, 171, 172], "capabl": [22, 113, 134, 165, 171, 226], "hierarch": [113, 169], "clustermap": [113, 114, 178], "arc": [113, 163, 172], "redefin": 113, "infer_shap": [113, 178], "__init__": [113, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 215], "is_order_invari": [113, 172, 178], "educ": [113, 114], "neuroanatomi": [113, 114], "fornix_clusters_arclength": 113, "cosin": [113, 130, 165, 172], "minu": [113, 163, 165, 167, 168, 171, 172, 175, 177, 193, 194, 199, 206, 207], "wikipedia": [113, 143, 144, 165, 171, 172, 242], "cosine_similar": [113, 170], "are_compat": [113, 169, 172, 178, 230], "shape1": [113, 172], "shape2": [113, 172], "v2": [113, 165], "cos_theta": 113, "arccosin": 113, "arcco": [83, 113, 165, 172, 219, 242], "fornix_clusters_cosin": 113, "segment_extending_clustering_framework": [113, 115, 234], "pickl": [114, 142, 178, 215], "save_pickl": [114, 142, 178], "10mm": [114, 172, 175], "upsampl": [114, 167, 172, 175], "fornix_initi": 114, "fornix_centroid": 114, "fornix_clust": 114, "pkl": 114, "segment_quickbundl": [114, 115, 213, 217, 221, 234], "examples_builtsegment": 115, "tissue_classif": [115, 116, 234], "mrf": [116, 158, 178, 215], "zhang": [116, 172, 175], "zhang2001": 116, "avants2011": [116, 163], "fsl": [116, 160, 166, 177, 196, 226, 237, 238], "atropo": 116, "strip": [116, 224], "img_ax": 116, "imgplot": 116, "img_cor": 116, "128": [50, 64, 82, 83, 114, 116, 135, 170, 220, 230], "t1_imag": 116, "pad_inch": 116, "adult": 116, "100th": 116, "t0": [116, 165], "total_tim": 116, "final_seg": 116, "light": 116, "bradi": 116, "cook": 116, "multivari": 116, "381": [79, 83, 116, 222], "examples_built": [19, 117], "reconst_dsid_1": [119, 120, 234], "examples_builtsimul": 120, "simulate_dki": [120, 121, 234], "simulate_multi_tensor": [120, 122, 234], "barrier": 121, "media": 121, "rnh2015": 121, "multi_tensor_dki": [121, 178], "decompose_tensor": [121, 178], "from_lower_triangular": [121, 178], "small_64d": [121, 166, 173], "circ": [121, 171], "fie": 121, "signal_dki": 121, "signal_noisi": [121, 122], "decompos": 121, "dt_eval": 121, "dt_evec": 121, "signal_dti": 121, "simulated_dki_sign": 121, "simulated_sign": 122, "cach": [122, 167, 175, 178, 220], "multi_tensor_simul": 122, "diverg": [123, 175], "yeatman2012": [123, 174], "dsa": 123, "metricspe": [123, 178], "grab": [123, 166, 233], "bundles_path": 123, "fetch_bundles_2_subject": [123, 134, 135, 137, 178], "bundles_fold": 123, "cst_l_file": 123, "bundles_2_subject": [123, 134, 137, 166, 243, 244], "subj_2": [123, 166], "bundles_cst": 123, "af_l_fil": 123, "bundles_af": 123, "cst_l": [123, 147, 229], "af_l": [123, 124, 147, 148, 166, 172, 177], "cluster_cst_l": 123, "standard_cst_l": 123, "cluster_af_l": 123, "standard_af_l": 123, "oriented_cst_l": 123, "orient_by_streamlin": [123, 174, 178], "oriented_af_l": 123, "volumetr": 123, "fetch_bundle_fa_hcp": [123, 178, 243], "fa_affin": 123, "hcp_bundle_fa": 123, "w_cst_l": 123, "gaussian_weight": [123, 178], "w_af_l": 123, "profile_cst_l": 123, "profile_af_l": 123, "tract_profil": 123, "robert": [123, 174, 231], "dougherti": [123, 174], "nathaniel": [123, 174], "myall": [123, 174], "heidi": [123, 174], "feldman": [123, 174], "e49790": [123, 174], "afq_tract_profil": [123, 129, 234], "assignment_map": [124, 163, 178], "fasiculu": 124, "fake_tub": 124, "af_l_before_assignment_map": 124, "indx": [124, 174], "si": [124, 175], "disks_color": 124, "af_l_after_assignment_map": 124, "bundle_assignment_map": [124, 129, 234], "whatsoev": 125, "dissimilar": [125, 163], "bundle_shape_similar": [125, 129, 178, 227, 234], "bundle1": [125, 135, 172, 175], "bundle2": [125, 135, 172, 175], "streamtube_actor": 125, "two_bundl": 125, "cluster_thr": [125, 146, 176, 177, 200], "clust_thr": [125, 172, 177, 184, 205], "ba_scor": 125, "lenient": 125, "jordan_2018_plm": [126, 128], "cluster_confid": [126, 129, 178, 234], "40mm": 126, "cci": [126, 175], "long_streamlin": 126, "hue": [126, 135], "satur": [126, 135], "lut_cmap": [126, 135], "hue_rang": [126, 135, 137], "saturation_rang": [126, 135, 137], "bar3": [126, 135], "stream_actor": [126, 134, 135], "pop": [126, 128, 136], "cci_streamlin": 126, "landscap": 126, "probe": [126, 168], "stabl": [22, 126, 171, 222, 230], "phenomenon": 126, "lone": 126, "vote": 126, "lend": 126, "cci_histogram": 126, "histogram": [126, 130, 163, 165, 172, 176], "keep_streamlin": 126, "keep_streamlines_actor": 126, "filtered_cci_streamlin": 126, "keshavan": 126, "therapi": 128, "shortest": [128, 165, 175], "treatment": [128, 143], "gross": 128, "tumor": [128, 230], "gtv": 128, "mpl": [128, 176, 215, 222], "lesion": 128, "electrod": 128, "surface_opac": [128, 136], "surface_color": [128, 136], "seedroi_actor": [128, 136], "plm_roi_sl": 128, "transpar": [128, 136, 176, 177, 200], "hypothesi": 128, "motor": 128, "cortico": 128, "path_length_map_base_roi": 128, "wmpl": 128, "example_cc_path_length_map": 128, "ignor": [128, 163, 165, 167, 170, 171, 172, 174, 175, 176, 177, 200, 218, 222, 226], "wmpl_show": 128, "masked_wher": 128, "slx": 128, "sly": 128, "slz": 128, "path_length_map": [128, 129, 234], "plan": [128, 144, 218, 224, 237, 238], "neuro": 128, "oncologi": 128, "examples_builtstreamline_analysi": 129, "streamline_length": [129, 130, 234], "approx_polygon_track": [130, 178, 230], "simulated_bundl": 130, "no_streamlin": 130, "burlywood": 130, "length_histogram": 130, "2mm": 130, "bundle_downsampl": 130, "n_pts_d": 130, "curvi": 130, "bundle_downsampled2": 130, "n_pts_ds2": 130, "lossi": 130, "bundle_actor": 130, "bundle_actor2": 130, "bundle_actor3": 130, "simulated_cosine_bundl": 130, "equidist": 130, "obviou": 130, "great": [130, 165], "n_pts_histogram": 130, "lengths_downsampl": 130, "lengths_downsampled2": 130, "id": [130, 165, 172, 176, 177], "lengths_plot": 130, "meant": [131, 165, 167, 170, 171, 175], "labels_img": 131, "cc_streamlin": 131, "other_streamlin": 131, "cc_streamlines_actor": 131, "corpuscallosum_axi": 131, "corpuscallosum_sagitt": 131, "return_map": [131, 165, 171, 175], "mapping_as_streamlin": [131, 175], "log1p": 131, "gyru": 131, "surpris": 131, "tricki": 131, "literatur": [82, 131, 171, 241], "lr_superiorfrontal_track": 131, "dm": [131, 163, 175], "int16": [131, 146, 165, 169, 171, 173], "lr_sf_trk": 131, "footnot": 131, "aparc": [131, 166, 226], "aseg": 131, "mgz": 131, "251": [73, 79, 82, 83, 114, 131, 221], "lie": [131, 165, 175], "label_info": 131, "4x4": [131, 163, 165, 169, 176], "examples_builtvisu": 133, "viz_advanc": [133, 134, 218, 234], "viz_bundl": [133, 135, 234], "viz_roi_contour": [133, 136, 234], "thin": [134, 168, 175], "read_bundles_2_subject": [134, 135, 178, 215], "dialog": 134, "snapshot": [134, 147], "primit": 134, "slider": [134, 176, 215, 217, 218, 230, 233], "lineslider2d": [134, 176], "subj_1": [134, 135, 137, 166], "cc_1": [134, 166], "1mm": [134, 172, 175], "image_actor_z": 134, "slicer_opac": 134, "image_actor_x": 134, "x_midpoint": 134, "round": [134, 165, 170, 171, 175, 214, 217, 222, 223], "image_actor_i": 134, "y_midpoint": 134, "image_actor": 134, "showmanag": [134, 137, 176], "show_m": [134, 137], "line_slider_z": 134, "min_valu": [134, 176], "max_valu": [134, 171, 176], "initial_valu": [134, 176], "text_templ": [134, 176], "0f": 134, "line_slider_x": 134, "line_slider_i": 134, "opacity_slid": 134, "change_slice_z": 134, "change_slice_x": 134, "change_slice_i": 134, "change_opac": 134, "on_chang": [134, 176], "build_label": [134, 178], "textblock2d": [134, 137, 176, 217], "font_siz": [134, 176], "font_famili": 134, "arial": 134, "justif": 134, "ital": [134, 135], "shadow": 134, "background_color": 134, "line_slider_label_z": 134, "line_slider_label_x": 134, "line_slider_label_i": 134, "opacity_slider_label": 134, "panel2d": [134, 137, 217], "1030": [74, 82, 134, 215], "add_el": [134, 137], "screen": [134, 143, 166], "re_align": 134, "getsiz": 134, "win_callback": 134, "size_old": 134, "size_chang": 134, "reset_clipping_rang": 134, "add_window_callback": 134, "bundles_and_3_slic": 134, "del": 134, "garyfallidis2021": 134, "soham": 134, "biswa": 134, "david": [134, 171, 213, 215, 216, 217, 218, 229, 230, 231], "reagan": [134, 176, 177, 200, 215, 216, 217, 218], "nasim": [134, 229, 230], "anousheh": [134, 229, 230], "filipi": 134, "silva": 134, "geoffrei": 134, "fox": 134, "3384": [82, 134], "21105": 134, "joss": [134, 224], "03384": 134, "dix": [135, 166, 169], "subj_id": [135, 166], "bundle_n": 135, "176": [73, 82, 83, 116, 135, 146, 221], "118": [82, 83, 135, 220], "knew": 135, "camera_info": 135, "focal": 135, "stream_actor2": 135, "stream_actor3": 135, "bar2": 135, "bundle3": 135, "stream_actor4": 135, "bundle4": 135, "stream_actor5": 135, "bundle5": 135, "fst": 135, "fw": [135, 226], "semibold": 135, "stream_actor6": 135, "bundle6": 135, "decim": [136, 216], "contour_from_roi_tutori": 136, "fname_t1": 137, "exp_bundles_and_map": [134, 137], "t1_warp": 137, "value_rang": [137, 227], "slice_actor": [137, 176, 178], "slice_actor2": 137, "hsv": 137, "fname_fa": 137, "fa_1x1x1": 137, "lut": 137, "fa_actor": 137, "slices_lut": 137, "label_posit": 137, "label_valu": 137, "result_posit": 137, "result_valu": 137, "panel_pick": 137, "left_click_callback": 137, "ev": 137, "event_po": 137, "iren": [137, 176], "geteventposit": 137, "picker": [137, 218], "getpointijk": 137, "8f": 137, "setinterpol": 137, "addobserv": 137, "leftbuttonpressev": 137, "perspect": [137, 165], "show_m_mosa": 137, "left_click_callback_mosa": 137, "slice_mosa": 137, "drag": 137, "scroll": [137, 218], "combinedworkflow": [138, 178], "combined_workflow": [138, 178], "nlmeansflow": [138, 178], "medianotsuflow": [138, 178], "denoiseandseg": 138, "_get_sub_flow": 138, "commandlin": [138, 147, 177], "input_fil": [138, 141, 146, 177, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 206, 209], "out_dir": [138, 141, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 166, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 243], "out_fil": [138, 141, 177, 181, 208], "wildcard": [138, 141, 152, 154, 177, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 204, 206, 208, 210, 211], "out_": [138, 141], "parser": [138, 141, 177], "io_it": [138, 141], "get_io_iter": [138, 141, 177, 178, 218], "in_fil": [138, 141], "nl_flow": 138, "run_sub_flow": [138, 177, 178], "last_generated_output": 138, "out_denois": [138, 177, 187, 188, 189, 190], "me_flow": 138, "ioiter": [138, 141, 178], "globbin": 138, "bit": [19, 165, 214, 215, 217, 218, 222, 223, 237], "flow_runn": 178, "run_flow": 178, "argpars": [138, 141, 177], "combined_workflow_cr": [138, 140, 234], "overwrit": [138, 141, 170, 227], "wrote": [138, 141], "examples_builtworkflow": 140, "workflow_cr": [140, 141, 234], "callabl": [141, 163, 165, 166, 168, 171, 174, 176, 222, 226], "t1_denois": 141, "my_workflow": 141, "shutil": 141, "Will": [141, 166, 169, 170, 171], "appendtextflow": 141, "text_to_append": 141, "myfil": 141, "glob": 141, "newli": 233, "text_fil": [], "paradigm": [142, 237], "bloch": 142, "torrei": 142, "pgse": [142, 237, 238, 239], "readout": 142, "gamma": [142, 143, 167, 171, 237], "gyromagnet": [142, 237], "width": [142, 163, 171, 176, 237], "wave": [142, 166, 171, 239], "proport": [142, 163, 170], "stand": [142, 170], "gather": [142, 177, 179], "mobil": 142, "molecul": 142, "movement": 142, "counterintuit": 142, "dephas": 142, "dwmri": 142, "speak": 142, "plenti": 142, "nonisotrop": [142, 222], "textrm": [142, 171], "batteri": 142, "painless": 142, "noth": [142, 163, 224], "ever": 142, "dicom": [142, 224], "npz": [142, 166, 218], "pydicom": 142, "v4": 142, "v6": 142, "v7": 142, "loadmat": 142, "pytabl": [142, 158, 215, 216], "hdf5": [142, 158, 169, 170, 215, 225], "serial": [142, 171], "load_pickl": [142, 178], "huge": [142, 177, 205, 235], "pycharm": 142, "sublim": 142, "aptana": 142, "emac": 142, "eclips": 142, "pydev": 142, "chri": [142, 147, 218], "rorden": 142, "dcm2nii": 142, "mricron": 142, "reader": [142, 178], "openli": 142, "grade": 142, "fcon_1000": 142, "nitrc": 142, "humanconnectom": [142, 166], "openneuro": 142, "gimbal_lock": [143, 226], "euler": [143, 144, 165, 226], "defici": 143, "indistinguish": 143, "spitfir": 143, "aircraft": 143, "wing": 143, "roll": [143, 165], "tilt": 143, "violent": 143, "straight": [143, 175], "wait": 143, "pm": [143, 171, 237, 238], "radian": [143, 165, 168, 175, 237], "smallmatrix": 143, "pm1": 143, "proof": 143, "mathworld": [143, 144, 165, 242], "rewrit": 143, "v_": [143, 165, 171], "v_1": [143, 172], "v_2": [143, 172], "conclus": 143, "gregslabaugh": 143, "homogen": [144, 163, 165, 171, 173], "theorem": 144, "boldsymbol": 144, "x_1": 144, "x_n": 144, "pythagora": 144, "gimbal": 144, "lock": [144, 171], "quaternion": 144, "suffer": [144, 171], "orthogon": [144, 171, 175, 241, 242], "transpos": [144, 163, 165, 171, 173, 176], "synonym": 144, "paragon": 145, "special": [145, 163, 165, 167, 170, 171, 172, 177], "ecosystem": [145, 170], "brows": 145, "recip": 145, "dedic": 145, "answer": [145, 160, 175], "comfort": 145, "synb0": [145, 158, 166, 178, 232, 233], "cnn": [145, 158, 178, 232], "older": [22, 145, 171, 215, 217, 218, 220, 222], "april": [145, 159], "march": 159, "past": 145, "acknowledg": [145, 224], "intellig": 145, "bioengin": 145, "nih": [145, 169, 219], "gordon": 145, "betti": 145, "moor": [145, 171, 175], "alfr": 145, "sloan": [145, 171], "escienc": 145, "summer": [145, 158, 159, 225], "facil": 145, "mac": [146, 214, 218, 227, 231, 235, 248], "mkdir": [146, 147, 148, 150, 151, 152, 154, 155, 156, 157], "data_fold": [146, 150], "dipy_fetch": [146, 150, 212, 225], "__dti_ax_ep2d_2_5_iso_33d_20141015095334_4": [146, 151, 155], "mv": 146, "dipy_info": [146, 212], "uint16": [146, 213], "888": [74, 82, 85, 146, 215], "avg": [146, 175], "940581408413976": 146, "percentil": [146, 176], "98th": 146, "psr": 146, "569": [82, 84, 146, 223], "451": [80, 82, 83, 115, 146, 222], "131": [82, 83, 146, 220], "289": [78, 82, 83, 84, 146, 158, 221, 224], "496": [72, 73, 82, 83, 84, 92, 146, 222, 232, 243, 244], "1257": [146, 215], "62918037280702": 146, "234": [73, 82, 83, 146, 221], "498": [82, 146, 222], "084": 146, "641": [82, 146, 218], "069": 146, "488": [72, 80, 82, 146, 222], "104": [82, 83, 102, 146, 220], "082": 146, "486": [82, 84, 87, 146, 222], "504": [82, 146, 222], "elef": 146, "1400": [146, 217, 243, 244], "1600": [19, 82, 146, 218, 243, 244], "1800": [19, 80, 82, 146, 224, 243, 244], "2200": [146, 226, 243, 244], "2400": [76, 82, 93, 146, 233, 243, 244], "2600": [82, 146, 231, 243, 244], "2800": [82, 146, 233, 243, 244], "b0_thr": 146, "dipy_horizon": [146, 147, 148, 149, 212, 224, 227, 230, 233], "dipy_median_otsu": [146, 155, 212], "out_work": 146, "dipy_fit_dti": [146, 155, 212, 224, 231], "ga": [146, 171, 177, 178, 195, 196], "dec": [146, 169, 218, 246], "fastest": 146, "dipy_fit_csa": [146, 155, 212, 224], "dipy_mask": [146, 157, 212], "out_mask": [146, 177, 191, 203, 204], "pam5": [146, 147, 157, 158, 169, 177, 225], "out_tractogram": [146, 177, 210, 211], "tracks_from_peak": 146, "tracking_method": [146, 157, 177, 210], "random_color": [146, 148, 149, 176, 177, 200, 230], "length_gt": [146, 176, 177, 200], "length_lt": [146, 176, 177, 200], "clusters_gt": [146, 176, 177, 200], "clusters_lt": [146, 176, 177, 200], "native_coord": [146, 177, 200], "stealth": [146, 176, 177, 200], "emergency_head": [146, 177, 200], "bg_color": [146, 176, 177, 200], "disable_order_transpar": [146, 177, 200], "out_stealth_png": [146, 177, 200], "out_strat": 146, "mix_nam": [146, 148, 177], "log_level": [146, 169, 170], "log_fil": 146, "stretch": 146, "nonetheless": 146, "parkinson": 147, "ppmi": 147, "marek11": 147, "yeh18": [147, 148], "atlas_of_30_human_brain_bundles_in_mni_spac": [147, 148], "12089652": [147, 148], "35092": 147, "yhjc": 147, "12098397": 147, "h5": [79, 147, 169], "subjects_smal": 147, "af_r": 147, "ccmid": 147, "cc_forcepsmajor": [147, 166], "cc_forcepsminor": 147, "cst_r": [147, 166], "emc_l": 147, "emc_r": 147, "fpt_l": 147, "fpt_r": 147, "ifof_l": 147, "ifof_r": 147, "ilf_l": 147, "ilf_r": 147, "mlf_l": 147, "mlf_r": 147, "ml_l": 147, "ml_r": 147, "mdlf_l": 147, "mdlf_r": 147, "opt_l": 147, "opt_r": 147, "or_l": 147, "or_r": 147, "stt_l": 147, "stt_r": 147, "uf_r": 147, "3805": [82, 147], "anatomical_measur": [147, 178], "org_bundl": 147, "rec_bundl": 147, "3806": [84, 147], "3809": [82, 147], "3850": [53, 82, 84, 147], "3851": 147, "3383": [82, 84, 147], "3385": [25, 147, 243, 244], "3387": [53, 82, 147], "3392": [84, 147], "3552": 147, "streamlines_moved_af_l__labels__recognized_orig": 147, "streamlines_moved_af_r__labels__recognized_orig": 147, "streamlines_moved_ccmid__labels__recognized_orig": 147, "streamlines_moved_uf_l__labels__recognized_orig": 147, "streamlines_moved_uf_r__labels__recognized_orig": 147, "streamlines_moved_v__labels__recognized_orig": 147, "moved_af_l__recogn": 147, "moved_af_r__recogn": 147, "moved_ccmid__recogn": 147, "moved_uf_l__recogn": 147, "moved_uf_r__recogn": 147, "moved_v__recogn": 147, "overridden": 147, "eg": [147, 172, 174, 177, 221, 232], "bundle_profil": 147, "dipy_buan_profil": [147, 212], "lmm": [147, 177], "lmm_plot": 147, "dipy_buan_lmm": [147, 212], "buan_thr": [147, 177, 200], "buan_highlight": [147, 177, 200], "af_l_fa_pvalu": 147, "pvalu": [147, 177, 200], "cst_l_fa_pvalu": 147, "sm_plot": 147, "dipy_buan_shap": [147, 212, 226], "12033390": 147, "marek": 147, "kenneth": 147, "jen": [147, 177, 195], "danna": 147, "lasch": 147, "shirlei": 147, "siderowf": 147, "carolin": 147, "simuni": 147, "tanya": 147, "coffei": 147, "kieburtz": 147, "karl": 147, "flagg": 147, "emili": 147, "chowdhuri": 147, "sohini": 147, "neurobiologi": 147, "panesar": [147, 148], "fernand": [147, 148], "meola": [147, 148], "yoshino": [147, 148], "fernandez": [147, 148], "miranda": [147, 148], "vettel": [147, 148], "verstynen": [147, 148], "macroscal": [147, 148, 243, 244], "topologi": [147, 148, 171, 175, 243, 244], "hcp_tractogram_zip": 148, "7013003": 148, "whole_brain_mni": 148, "dipy_slr": [148, 156, 158, 212], "rb_output": 148, "dipy_recobundl": [148, 212], "pink": [148, 149], "org_output": 148, "dipy_labelsbundl": [148, 212], "visit": [148, 149, 162, 172], "chandio2023": [149, 163, 177, 185], "m_uf": 149, "s_uf_li": 149, "capac": 149, "\u03bb": [149, 177, 185], "requirs": 149, "dipy_bundlewarp": [149, 212], "nonlinearly_mov": [149, 177], "caustiou": 149, "destin": 150, "specific_dataset": 150, "specific_data_out_fold": 150, "eigenspectrum": 151, "lpca": [151, 158, 177, 187, 224, 225, 230], "ow": 151, "denoise_lpca_output": 151, "suffic": [151, 152, 154], "dipy_denoise_lpca": [151, 212], "dwi_lpca": [151, 177], "subtl": 151, "hardli": 151, "image1": 151, "image2": 151, "denoise_mppca_output": 151, "dipy_denoise_mppca": [151, 212], "textur": 151, "denoise_nlmeans_output": 151, "lcpa": 151, "veraart15": 152, "perrone15": 152, "gibbs_ringing_output": 152, "platform": [19, 22, 152, 222, 248], "dipy_gibbs_ring": [152, 212], "t1_brain_denois": 152, "motion_output": 154, "dipy_correct_mot": [154, 212], "recons_csd_output": 155, "stanford_hardi_mask": 155, "dipy_fit_csd": [155, 212, 224], "recons_mapmri_output": 155, "big": [155, 165, 171, 177, 198, 216, 222, 224, 248], "dipy_fit_mapmri": [155, 212], "recons_dti_output": 155, "save_metr": [155, 177, 179, 195, 196, 197, 198], "out_tensor": [155, 177, 196], "dti_tensor": [155, 177], "recons_dki_output": 155, "cfin_multib_mask": 155, "dipy_fit_dki": [155, 212], "recons_csa_output": 155, "pam": [155, 168, 169, 176, 177, 193, 194, 210, 211, 218], "extract_pam_valu": [155, 177, 193, 194], "recons_ivim_output": 155, "ivim_mask": 155, "dipy_fit_ivim": [155, 212], "meanwhil": 156, "image_reg_output": 156, "dipy_align_affin": [156, 212], "path_to_static_fil": 156, "path_to_moving_fil": 156, "affine_reg_output": 156, "out_affin": [156, 177, 179, 186, 207], "affine_reg": 156, "syn_reg_output": 156, "out_warp": [156, 177, 180], "em": [156, 163, 172, 177, 180], "dipy_align_syn": [156, 212, 227, 233], "syn_reg_warp": 156, "transform_typ": [156, 177, 181], "transform_reg_output": 156, "dipy_apply_transform": [156, 212], "path_to_transform_map_fil": 156, "nb_pt": [156, 163, 172, 177, 207], "sl_reg_output": 156, "stop_fil": 157, "seed_dens": [157, 177, 210, 211], "recon": [157, 215, 224], "pve_wm": 157, "eudx_tracking_output": 157, "det_tracking_output": 157, "det": [157, 163, 165, 171, 177, 210, 216, 217], "prob_tracking_output": 157, "prob": [157, 177, 210, 224], "closest_peaks_output": 157, "prematur": 157, "pft_output": 157, "dipy_track_pft": [157, 212], "pve_gm": 157, "pve_csf": 157, "dtiflow": 158, "lpcaflow": [158, 178], "rumbaflow": 158, "vtp": [158, 169, 230, 231], "dkiflow": 158, "imageregistrationflow": [158, 178], "motioncorrectionflow": [158, 178], "parallelis": 158, "129": [56, 61, 72, 79, 82, 83, 92, 114, 158, 220, 233], "multithread": [19, 158], "govern": [158, 171, 229], "cli": [138, 141, 158, 178, 224, 226, 227, 228, 229, 230, 231, 233], "47": [25, 32, 33, 35, 36, 37, 40, 43, 53, 62, 72, 73, 74, 79, 82, 83, 84, 85, 86, 88, 100, 111, 158, 163, 166, 172, 220, 228, 243, 244], "10x": [145, 158], "multiplatform": [158, 235], "134": [82, 83, 158, 220, 227], "vtk9": [158, 226], "typographi": 158, "tensorflow": [158, 170, 225], "smarter": 158, "126": [43, 62, 73, 82, 83, 102, 105, 114, 158, 220], "critic": [158, 169, 170], "mtm": [158, 224], "fetchflow": [158, 178, 224, 225, 243], "quickbundlesx": [158, 163, 176, 177, 178, 184, 200, 207, 217], "tractometri": [158, 162, 219], "almost": [158, 171, 220], "287": [72, 82, 83, 87, 158, 213, 218], "93": [24, 25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 93, 114, 158, 214, 218], "old": [19, 158, 218, 220, 222, 226, 227], "cvxopt": [158, 216, 222, 224], "reorient": [158, 165, 175, 213, 214, 218], "64bit": [158, 248], "cleaner": 158, "exhibitor": [158, 159], "ohbm": [158, 159], "massiv": 158, "geodes": [158, 171, 177, 195, 196, 223], "robustli": 158, "novemb": [159, 165], "septemb": 159, "august": 159, "decemb": [145, 159, 165], "octob": [159, 163], "june": [159, 165], "februari": 159, "magazin": 159, "nov": [159, 167, 171, 241], "22nd": 159, "3x": 159, "teach": 159, "fundament": 159, "seminar": 159, "neuroscientist": 159, "qbin": 159, "dont": 159, "creator": 159, "attend": 159, "hbm": [159, 213, 222], "0dev": 159, "win": 159, "took": 159, "mia": 159, "mcgill": [159, 166, 243, 244], "3rd": [159, 172, 175, 233], "sprint": 159, "boot": [162, 178, 215], "phantom": [162, 166, 178, 243, 244], "gui": 162, "unittest": [162, 222], "__version__": [162, 248], "pycpd": 163, "siavashk": 163, "encapsul": 163, "codomain": 163, "parzen": 163, "parzen62": 163, "cubic": [163, 171, 175, 177, 180], "annal": 163, "1065": [82, 163, 215], "1076": [163, 215], "1962": [82, 163, 225], "kwd": 163, "enum": [163, 169], "temporari": [19, 163, 168, 169, 171, 175, 231], "diagnos": 163, "debug": [163, 165, 169, 170, 215], "metric_kwarg": 163, "ride": [163, 169], "ndarrai": [163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 227], "template_affin": 163, "reg_kwarg": 163, "fist": 163, "disp": [163, 165], "domain_img": 163, "codomain_img": 163, "between_affin": 163, "ret_metr": 163, "gradual": 163, "boolean": [163, 165, 167, 170, 171, 175, 176, 177, 233], "sampling_proport": 163, "interv": [163, 168, 175], "xopt": [163, 165, 169, 178], "fopt": [163, 165, 169, 178], "isosc": [163, 227, 230], "kwarg": [163, 165, 166, 168, 169, 170, 171, 172, 177, 213, 227, 231], "ref_affin": 163, "b0_ref": 163, "xform_img": 163, "affine_arrai": 163, "n_point": [163, 165, 167, 174, 175, 177, 199, 226], "native_resampl": 163, "opm_get_num_proc": [163, 167, 175], "valueerror": [163, 165, 167, 171, 175, 213, 222, 224, 232], "streamlines_a": 163, "streamlines_b": 163, "sigma2": 163, "low_rank": 163, "num_eig": 163, "max_iter": 163, "arg": [163, 165, 166, 168, 169, 170, 171, 172, 176, 177, 219], "cloud": 163, "nxd": 163, "mxd": 163, "ty": 163, "consecut": [163, 175, 224, 233], "span": [163, 165, 171], "absolut": [163, 165, 170, 171, 175, 177, 215, 219, 226, 241], "mxn": 163, "pt1": 163, "nx1": 163, "p1": 163, "mx1": 163, "likelihoo": 163, "lowrank": 163, "get_registration_paramet": [163, 178], "registration_paramet": 163, "transform_point_cloud": [163, 178], "update_transform": [163, 178], "0905": 163, "2635": [82, 163, 231], "update_vari": [163, 178], "eig_fgt": 163, "gauss": [163, 177, 180], "grad_mov": 163, "avants2008": 163, "precomput": [163, 171], "avants08": 163, "grad_stat": 163, "pointwis": [163, 172], "sq": 163, "ocegueda2016": 163, "delta_field": 163, "sigma_sq_field": 163, "gradient_mov": 163, "sigma_sq_x": 163, "demon": [163, 177, 180, 217, 218], "vercauteren09": 163, "arce14": 163, "sigma_i": 163, "vercauteren": 163, "intend": [163, 170, 176, 177, 198, 231], "quantiz": [163, 177, 180], "sigma_x": 163, "demons_step": 163, "santana": 163, "campo": 163, "delgado": 163, "viguera": 163, "multimod": 163, "168140": 163, "pennec": [163, 171], "perchant": 163, "ayach": [163, 171], "suppl": 163, "s61": 163, "040": 163, "num_label": 163, "whose": [163, 165, 175, 177], "infinit": [163, 173, 175, 224], "num_level": 163, "undefin": [163, 175], "secial": 163, "domain_grid_shap": 163, "domain_grid2world": 163, "codomain_grid_shap": 163, "codomain_grid2world": 163, "domain_grid": 163, "codomain_grid": 163, "stream": [163, 175], "get_affin": [163, 178, 215], "set_affin": [163, 178], "affine_inv": 163, "unchang": [163, 165, 171, 173, 175], "image_grid2world": 163, "sampling_grid_shap": 163, "sampling_grid2world": 163, "resample_onli": 163, "domain_shap": 163, "codomain_shap": 163, "drive": 163, "neg_mi": 163, "distance_and_gradi": [163, 178], "neg_mi_grad": 163, "grad": [163, 175], "bfg": [163, 165, 172, 222], "newton": [163, 165, 170, 230], "dogleg": [163, 165], "trust": [163, 165, 171], "ncg": [163, 165], "n_scale": [163, 177, 180], "never": [163, 175], "docstring_addendum": [163, 178], "accomplish": [163, 171, 177], "disp_shap": 163, "disp_grid2world": 163, "alloc": [163, 165, 171, 173, 178, 248], "compute_inversion_error": [163, 178], "perfect": 163, "comp": [163, 171], "dinv": 163, "expand_field": [163, 178], "expand_factor": 163, "new_shap": 163, "get_backward_field": [163, 178], "is_invers": 163, "get_forward_field": [163, 178], "get_simplified_transform": [163, 178], "diffeomorh": 163, "interpret_matrix": [163, 178], "shallow_copi": [163, 178], "shallow": 163, "new_map": 163, "image_world2grid": 163, "out_shap": 163, "out_grid2world": 163, "_warp_forward": 163, "_warp_backward": 163, "transform_point": [163, 178], "coord2world": 163, "world2coord": 163, "warp_endomorph": [163, 178], "endomorph": 163, "inherit": [163, 167, 171, 172, 177, 190], "costli": 163, "computation": [163, 171], "simpler": [163, 220], "abstract": [163, 165, 171, 172, 175, 176, 177], "get_map": [163, 178, 227], "set_level_it": [163, 178], "inv_tol": [163, 177, 180], "static_to_ref": 163, "current_displac": 163, "new_displac": 163, "disp_world2grid": 163, "time_sc": 163, "d2": [163, 169, 171], "d1": [163, 171], "mean_norm": 163, "csv": [163, 165, 169, 170, 171, 172], "xl": [163, 165, 169, 170, 171, 172], "gnumer": [163, 165, 169, 170, 171, 172], "cater": [163, 165, 169, 170, 171, 172], "namespac": [163, 165, 169, 170, 171, 172, 177, 226], "hierarchi": [163, 165, 169, 170, 171, 172], "period": [163, 165, 169, 170, 171, 172, 226], "java": [163, 165, 169, 170, 171, 172], "gnu": [163, 165, 169, 170, 171, 172], "charg": [163, 165, 167], "compute_backward": [163, 178], "compute_forward": [163, 178], "free_iter": [163, 178], "registrationoptim": 163, "get_energi": [163, 178], "initialize_iter": [163, 178], "unpract": 163, "set_levels_abov": [163, 178], "set_levels_below": [163, 178], "set_moving_imag": [163, 178], "moving_spac": 163, "moving_direct": 163, "set_static_imag": [163, 178], "static_spac": 163, "static_direct": 163, "use_moving_image_dynam": [163, 178], "original_moving_imag": 163, "diffeomorficmap": 163, "use_static_image_dynam": [163, 178], "original_static_imag": 163, "inner_it": 163, "q_level": 163, "double_gradi": 163, "step_typ": 163, "gauss_newton": [163, 177, 180], "transfer": [163, 219], "seidel": [163, 177, 180], "schedul": [163, 175, 177, 180, 215], "compute_demons_step": [163, 178], "forward_step": 163, "compute_gauss_newton_step": [163, 178], "bruhn": 163, "weickert": 163, "bruhn05": 163, "andr": 163, "joachim": 163, "ultim": 163, "iccv": 163, "use_double_gradi": 163, "dynam": [22, 163, 168, 172], "originalstaticimag": 163, "xavier": 163, "aymer": 163, "nichola": 163, "gradient_field": 163, "lambda_param": 163, "coarser": 163, "sigmafield": 163, "ti": 163, "_joint_pdf_gradient_dense_2d": 163, "_joint_pdf_gradient_dense_3d": 163, "jacobian": [163, 165, 171, 178, 233], "bin_index": [163, 178], "xnorm": 163, "bin_normalize_mov": [163, 178], "mmin": 163, "mmax": 163, "bin_normalize_stat": [163, 178], "smin": 163, "smax": 163, "smask": 163, "mmask": 163, "ones_lik": 163, "update_gradient_dens": [163, 178], "grid2world": 163, "mgradient": 163, "joint_grad": 163, "update_gradient_spars": [163, 178], "sval": 163, "mval": 163, "sample_point": 163, "sampled_point": 163, "update_pdfs_dens": [163, 178], "smargin": 163, "mmargin": 163, "update_pdfs_spars": [163, 178], "joint_gradi": 163, "mi_gradi": 163, "buffer": [163, 165, 166, 171, 173, 215], "floor": [163, 167], "total_voxel": 163, "lexicograph": 163, "perturb": 163, "increasingli": 163, "rate": [163, 172], "total_pixel": 163, "isampl": 163, "new_zoom": 163, "cval": [163, 177, 206], "pool": [163, 167, 170, 171, 177, 199, 206, 221], "f_name": 163, "77": [25, 32, 33, 35, 36, 37, 40, 53, 60, 72, 73, 74, 79, 80, 82, 83, 84, 85, 87, 114, 163, 165, 170, 220], "input_spac": 163, "sigma_factor": 163, "mask0": 163, "weaker": 163, "from_level": 163, "get_affine_inv": [163, 178], "get_domain_shap": [163, 178], "get_expand_factor": [163, 178], "to_level": 163, "get_imag": [163, 178], "get_scal": [163, 178], "get_sigma": [163, 178], "get_spac": [163, 178], "print_level": [163, 178], "aka": 163, "hungri": [163, 214], "l_bfgs_b": [163, 172], "powel": [163, 165, 172], "mat": [163, 165, 171, 175, 221], "matopt": 163, "matopt_histori": 163, "func": [163, 165, 171, 173, 177], "optimum": [73, 163, 165, 171], "matrix_histori": 163, "matrix1": 163, "matrix2": 163, "block_siz": 163, "min_siz": [163, 172], "default_bound": 163, "rm_small_clust": [163, 177, 207, 232], "maxit": [163, 165, 171], "select_random": 163, "greater_than": [163, 172, 177, 205, 207], "less_than": [163, 171, 172, 177, 205, 207], "qbx_thr": [163, 177, 207], "n_bundl": 163, "lst": 163, "unmatch": 163, "ml": [163, 177, 185], "matched_pair": [163, 177], "unitari": [163, 176], "shape_profil": [163, 176], "stdv": 163, "greedi": 163, "descent": [163, 165], "useless": 163, "sigmasq_field": 163, "displacement_field": [163, 177], "max_displac": 163, "mx": 163, "2x2": 163, "is_singular": 163, "singular": [163, 165, 167, 177, 187, 188, 238], "contract": [163, 165, 172, 177], "_jacobian": 163, "_get_identity_paramet": 163, "_param_to_matrix": 163, "wrapper": [163, 165, 170, 171, 175, 220], "get_dim": [163, 178], "get_identity_paramet": [163, 178], "get_number_of_paramet": [163, 178], "param_to_matrix": [163, 178], "premult_index": 163, "premult_disp": 163, "sinv": 163, "cancel": 163, "standard_devi": 163, "iff": 163, "chen": [163, 213], "understand": [163, 171, 239], "ruchala": 163, "olivera": 163, "1118": [82, 163, 215], "2816107": 163, "nslice": 163, "from_shap": 163, "from_grid2world": 163, "to_shap": 163, "to_grid2world": 163, "rnadom": 163, "int_field": 163, "ceil": [163, 178], "img_world2grid": 163, "img_spac": 163, "d_world2grid": 163, "cell": [163, 165, 175, 213], "diag": [163, 165, 171], "affine_idx_in": 163, "affine_idx_out": 163, "affine_disp": 163, "rinv": 163, "cinv": 163, "pinv": 163, "tinv": 163, "ref_shap": 163, "bilinear": [163, 165], "necessarili": 163, "bi": 163, "in2world": 163, "world2out": 163, "field_world2grid": 163, "algebra": 165, "descriptor": 165, "reserv": [165, 170, 172], "redistribut": [165, 172, 177], "permit": [165, 171, 172, 177], "met": [165, 172, 177], "retain": [22, 93, 165, 172, 176, 177], "disclaim": [165, 172, 177], "materi": [165, 172, 177], "endors": [165, 172], "BY": [165, 172, 177], "THE": [165, 172, 177], "holder": 165, "AND": [165, 169, 172, 177], "AS": [165, 172, 177], "OR": [165, 172, 177], "warranti": [165, 166, 172, 177], "BUT": [165, 172, 177], "TO": [165, 172, 177], "OF": [165, 172, 177], "merchant": [165, 172, 177], "FOR": [165, 172, 177], "NO": [165, 172, 177], "shall": [165, 172, 175, 177], "owner": 165, "liabl": [165, 172, 177], "indirect": [165, 172, 177], "incident": [165, 172, 177], "exemplari": [165, 172, 177], "consequenti": [165, 172, 177], "damag": [165, 166, 172, 177], "procur": [165, 172, 177], "substitut": [165, 171, 172, 177], "profit": [165, 172, 177], "busi": [165, 172, 177], "interrupt": [165, 172, 177], "liabil": [165, 172, 177], "strict": [165, 166, 169, 172, 177], "neglig": [165, 172, 177], "aris": [165, 172, 177], "IF": [165, 172, 177], "SUCH": [165, 172, 177], "declar": [165, 170, 175, 219, 220, 224], "overhead": [165, 171], "untrigg": 165, "raymond": 165, "hetting": 165, "rcn": 165, "htm": 165, "datamodel": 165, "octahedron": [165, 220], "modulu": 165, "lon": 165, "lat": 165, "parameter": [165, 231], "inclin": [165, 166, 167, 242], "azimuth": [165, 166, 167, 171, 242], "south": [165, 242], "north": [165, 242], "west": [165, 242], "east": [165, 242], "posterior": [165, 168, 169], "anterior": [165, 169], "zenith": [165, 242], "counter": 165, "clockwis": 165, "geograph": 165, "nomenclatur": [165, 225], "latitud": [165, 242], "longitud": [165, 242], "array_lik": [165, 166, 167, 171, 174, 175], "spherical_coordinate_system": 165, "wolfram": 165, "sphericalcoordin": 165, "hypotenus": 165, "sph2cart": [165, 242], "unusu": [165, 224], "trivial": [165, 219], "vec": [165, 171, 175], "nvec": 165, "l2n": 165, "allclos": [165, 171, 175, 220], "keepdim": 165, "flatten": [165, 171, 173, 175], "instabl": 165, "taylor": [165, 173], "tetha": 165, "teta2": 165, "theta2": 165, "ur": 165, "rad2deg": 165, "npd": 165, "niethamm": 165, "estepar": 165, "bouix": 165, "shenton": 165, "cf": [165, 171, 221], "eng": 165, "biol": 165, "2622": [25, 72, 73, 82, 88, 165, 231], "pubm": 165, "17946125": 165, "pmc2791793": 165, "pts1": 165, "pts2": 165, "check_radiu": 165, "broadcast": [165, 171, 172, 175, 224, 231], "5708": [84, 165], "7124": 165, "vecs1": 165, "vecs2": 165, "v_co": 165, "vco": 165, "lambert": 165, "mardia": 165, "jupp": 165, "161": [73, 82, 83, 165, 221], "y_1": 165, "y_2": 165, "annulu": 165, "vice": [165, 226], "versa": [165, 226], "aj": 165, "sxyz": 165, "gohlk": 165, "cgohlk": 165, "yaw": 165, "syxz": 165, "34786452": 165, "383436184": 165, "_axes2tupl": 165, "partit": [165, 175], "persp": 165, "m0": 165, "smallest": [165, 167, 171, 172, 175], "collinear": [165, 175, 213], "furthest": [165, 175], "3x3": [165, 167, 171], "ru": 165, "mat1": 165, "mat2": 165, "matn": 165, "circumfer": 165, "otherw": 165, "psampl": 165, "frame": [165, 168, 175, 177], "a_": [165, 171], "is_hemi": 165, "pole": [165, 171, 175], "rstudio": 165, "pub": 165, "s3": [165, 166], "amazonaw": 165, "27121_a22e51b47c544980bad594d5e0bb2d04": 165, "qval": [165, 171, 178], "ie": [165, 171, 175], "immut": 165, "factori": [165, 217], "gradient_strength": [165, 178], "bmag": [165, 171], "rbval": 165, "expireddeprecationerror": [165, 169, 171, 175], "log_": [165, 171], "slice_start": 165, "atol": [165, 169], "ste": [165, 171], "cte": [165, 171], "cigar": [165, 171], "bo_threshold": 165, "30m": 165, "10m": 165, "sq2": 165, "gt": [165, 172, 176], "03e": 165, "compens": 165, "leemans2009": 165, "1336": [82, 165, 216], "1349": [82, 165, 216], "bvector": [165, 171, 177, 186, 187, 193, 194, 196, 214], "bmagmax": 165, "bmaxmag": 165, "gap": [165, 171], "regroup": 165, "n_bval": 165, "non_zero": 165, "ztol": 165, "trace": [165, 178, 237], "asymmetri": 165, "bdelta": 165, "b_eta": 165, "topgaard": 165, "valiullin": 165, "ed": [165, 172], "porou": 165, "royal": [165, 175], "chemistri": 165, "ornt1": [165, 169], "ornt2": [165, 169], "orn1": [165, 169], "orn2": [165, 169], "current_ornt": [165, 169], "new_ornt": [165, 169], "stort": [165, 169], "lp": [165, 169], "inferior": [165, 169], "string_ornt": [165, 169], "ornt": [165, 169], "add_nod": [165, 178], "add_edg": [165, 178], "up_short": [165, 178], "wp": 165, "attr": [165, 215], "all_path": [165, 178], "del_nod": [165, 178], "del_node_and_edg": [165, 178], "down_short": [165, 178], "shortest_path": [165, 178], "arr": [165, 167, 171, 175], "num_bin": 165, "janeriksolem": 165, "sphere_origin": 165, "sphere_target": 165, "multiquadr": 165, "epsilon": [165, 169, 172, 226], "spread": [165, 166], "rbf": [165, 220], "_interpolate_scalar_2d": 165, "map_coordin": 165, "_interpolate_scalar_3d": 165, "_interpolate_scalar_nn_2d": 165, "_interpolate_scalar_nn_3d": 165, "_interpolate_vector_2d": 165, "_interpolate_vector_3d": 165, "data_strid": 165, "len_point": 165, "mixin": 165, "offer": [165, 241], "accessor": 165, "uniformtimeseri": 165, "sampling_r": 165, "sampling_interv": 165, "lose": [165, 229], "circular": [165, 173, 215, 216], "chain": 165, "_no_reset": 165, "protect": [165, 175], "caveat": 165, "emptor": 165, "recomput": 165, "fire": 165, "mostli": [165, 171, 175, 213, 220, 223], "afterward": 165, "magicprop": 165, "__dict__": 165, "jac": [165, 171], "hess": 165, "hessp": 165, "hessian": 165, "nelder": 165, "mead": 165, "anneal": 165, "tnc": 165, "cobyla": 165, "slsqp": 165, "ineq": 165, "wherea": [165, 171, 175, 177], "xk": [165, 175], "show_opt": 165, "nfev": [165, 178], "nit": [165, 178, 222], "print_summari": [165, 178], "sklearn": [165, 167, 171, 177, 190, 225, 230, 233], "signatur": [165, 171, 223, 232], "coef_": 165, "y_hat": 165, "n_sampl": 165, "n_featur": 165, "a_0": 165, "h_i": 165, "s_j": 165, "slack": 165, "polynomi": [165, 171, 241], "design_matrix": [165, 178, 227], "pipermail": 165, "027700": 165, "momentum": 165, "non_neg": [165, 171], "check_error_it": 165, "max_error_check": 165, "converge_on_ss": 165, "xh": 165, "persist": [165, 215], "sse": [165, 171], "h_best": 165, "caller": 165, "print_stat": [165, 178], "prin": 165, "rand": [165, 175, 176], "1000000": [165, 172, 177], "src": 165, "profiling_tutori": 165, "rkern": 165, "line_profil": 165, "pstat": 165, "slowest": 165, "function_nam": 165, "ix": 165, "100001": 165, "200002": 165, "iz": 165, "300003": 165, "400004": 165, "wichmann": 165, "hill": 165, "1614": [165, 218], "1622": [82, 165, 218], "issn": [165, 243, 244], "9473": 165, "csda": 165, "019": 165, "sciencedirect": 165, "pii": 165, "s0167947306001836": 165, "advic": [165, 218], "r_number": 165, "uniformli": [165, 172], "183": [73, 82, 83, 84, 165, 221], "appl": [165, 248], "1982": [82, 84, 165, 225], "rectangularli": 165, "95e": 165, "123": [73, 79, 82, 83, 102, 114, 165, 220], "claim": 165, "30000": 165, "arithmet": 165, "5212632": 165, "s1": [165, 172], "s2": [165, 172], "ecuy": 165, "portabl": 165, "742": [73, 80, 82, 165, 214, 218], "749": [74, 82, 86, 165, 213], "774": [82, 165], "30584e": 165, "unspecifi": [165, 166, 167, 176], "delaunai": [165, 166, 167, 220], "triangul": [165, 166, 167, 176], "find_closest": [165, 167, 178], "vertex": [165, 167, 171, 175, 222], "____": [165, 167], "subdivis": [165, 167], "new_spher": [165, 167], "remap": [165, 166, 167, 224], "classmethod": [165, 167, 168, 175, 177], "from_spher": [165, 167, 178], "__________": 165, "return_invers": 165, "hemi": [165, 167], "const": [165, 167], "felt": [165, 167], "unstabl": [165, 167, 218], "init_pointset": 165, "reimplement": 165, "fmin_slsqp": 165, "number_of_edg": 165, "item": [165, 166, 169, 171, 173, 175, 176, 230], "byte": [165, 171, 173, 178, 220, 224, 233], "__new__": [165, 171, 173], "expos": [165, 166, 171, 173], "fortran": [165, 171, 173], "c_contigu": [165, 171, 173], "owndata": [165, 171, 173], "writeabl": [165, 171, 173, 222], "flatit": [165, 171, 173], "todo": [165, 171, 173, 215], "imaginari": [165, 171, 173, 241], "items": [165, 171, 173, 175], "nbyte": [165, 171, 173, 178], "contigu": [165, 171, 173, 175], "jump": [165, 171, 173], "ctype": [165, 171, 173], "garbag": [165, 171, 173], "coord": [165, 214], "spherepointpick": 165, "fisher": 165, "lewi": 165, "embleton": 165, "supplement": [165, 243, 244], "coverag": [165, 215, 222, 224, 229, 230], "b1": [165, 176, 225], "max_mean_cosin": 165, "max_cosine_dist": 165, "7071067811865475": 165, "unimport": 165, "12f": 165, "707106781187": 165, "recursion_level": 165, "n2": [165, 175], "n3": [165, 219], "perm": 165, "permut": [165, 171], "bank": 165, "n1xn2xn2": 165, "ni": [79, 165, 175, 213, 219, 233], "lowpass": 165, "highpass": 165, "lo": 165, "subband": 165, "synthesi": 165, "n1xn2xn3": 165, "sf1": 165, "sf2": 165, "sf3": 165, "sfi": 165, "af1": 165, "af2": 165, "af3": 165, "afi": 165, "byte_data": 166, "bytes_or_buff": 166, "handler": 166, "__str__": [166, 229], "repr": [166, 217], "sy": [166, 177], "getdefaultencod": 166, "fib1": 166, "fib0": 166, "fib2": 166, "102": [74, 82, 83, 84, 87, 109, 114, 115, 166, 220], "sv2": 166, "skeleton": [166, 223], "lsc": 166, "c3": 166, "symmetric642": [166, 167], "repulsion100": [166, 167, 171], "repulsion200": [166, 167], "vert": [166, 167, 176], "720": [82, 120, 122, 166, 167, 215, 224, 232], "traceback": [19, 166, 167, 175], "func_coef": 166, "func_discret": 166, "dwi2sh": 166, "maptlotlib": 166, "model_nam": 166, "unsign": [166, 171, 175, 177, 226], "sdp_constraint": 166, "id_constraint_ord": 166, "fsrc": 166, "fdst": 166, "total_length": 166, "16384": 166, "stored_md5": 166, "md5": [166, 177, 192, 215, 221], "data_s": 166, "checksum": [166, 177, 192], "fetchererror": 166, "site": [73, 80, 84, 88, 166, 222, 225], "3shell": 166, "evac": [145, 166, 177, 178, 191, 232, 233], "park": [166, 170, 177, 191, 232, 233], "session": 166, "2009a": [166, 243, 244], "2009c": [166, 215, 243, 244], "juli": [166, 243, 244], "fonov": [166, 243, 244], "evan": [166, 243, 244], "botteron": [166, 243, 244], "almli": [166, 243, 244], "rc": [166, 213], "mckinstri": [166, 243, 244], "bdcg": [166, 243, 244], "1053": [72, 82, 166, 216, 243, 244], "8119": [166, 243, 244], "033": [166, 243, 244], "birth": [166, 243, 244], "adulthood": [166, 243, 244], "s102": [166, 243, 244], "s1053": [166, 243, 244], "70884": [166, 243, 244], "1993": [82, 84, 166, 175, 225], "mcconnel": 166, "neurolog": 166, "fee": 166, "herebi": 166, "equip": 166, "injuri": 166, "misus": [166, 215], "snail": [166, 243, 244], "cfin": [166, 217, 243, 244], "hcp842": [166, 243, 244], "oneof": 166, "c57bl6": [166, 243, 244], "gold": [166, 243, 244], "rat": 166, "small_101d": [166, 173], "101": [82, 83, 84, 114, 166, 220], "pittsburgh": 166, "competit": 166, "gqi_vector": [166, 223], "small_25": 166, "10x8x2": 166, "test_piesno": 166, "cb_2": 166, "wild": 166, "bruker": 166, "hour": [19, 166], "80x160x5": 166, "110x110x500\u03bcm": 166, "eddi": [79, 166, 217, 233, 243, 244], "drawn": [166, 175, 176], "subject1_test": 166, "subject1_retest": 166, "subject2_test": 166, "subject2_retest": 166, "5281": [166, 243, 244], "zenodo": [166, 243, 244], "996889": [166, 243, 244], "scil": [166, 218, 243, 244], "taiwan": [166, 243, 244], "ntu": [166, 243, 244], "with_raw": 166, "meta": 166, "uw": 166, "exp_bundles_map": 166, "renauld": [166, 231, 233], "bernier": 166, "thalamu": 166, "eeg": [166, 219], "submiss": 166, "bundles_list": 166, "ref_anat": 166, "file1": 166, "file2": 166, "arraysequ": [166, 169, 175, 215, 216, 232], "dataset_descript": [166, 233], "json": [79, 166, 177], "bidsvers": 166, "dump": [166, 232], "bid": [166, 233], "hcp_bucket": 166, "openaccess": 166, "profile_nam": 166, "hcp_1200": 166, "aws_access_key_id": 166, "aws_secret_access_kei": 166, "bucket": 166, "aw": 166, "credenti": 166, "xxxxxxxxxxxxxxxx": 166, "publicdata": 166, "gorgolewski": [166, 218], "160044": 166, "ndarek918ec2": 166, "ima": [167, 168, 175], "fimau": 167, "fimao": 167, "5x5": 167, "fima": 167, "dim_siz": 167, "force_recomput": 167, "meesters2016_ismrm": 167, "duitsandfranken_ijcv": 167, "evaluate_kernel": [167, 178], "kernel_valu": 167, "get_lookup_t": [167, 178], "dataerror": [167, 178], "tempfil": [167, 168, 169, 231], "tempdir": [167, 168, 222], "vg": [167, 177, 199], "num_sampl": 167, "spr": 167, "plu": [167, 171], "patch_siz": [167, 231], "pca_method": [167, 177, 187, 188], "eig": [167, 177, 187, 188], "out_dtyp": 167, "suppress_warn": 167, "svd": [167, 177, 187, 188, 215, 216], "occasion": [167, 177, 187, 188], "tau_": [167, 177, 187], "patch_radius_sigma": 167, "descoteaux08": [167, 177, 189], "wiest": [167, 177, 189], "daessl\u00e9": [167, 177, 189], "nicola": [167, 177, 189, 233], "christian": [167, 171, 177, 189], "rachid": [167, 177, 189], "columnwis": [167, 171], "upfirdn": 167, "port": [167, 231], "itermax": 167, "ep": [167, 171, 172, 175], "realis": 167, "fmri": 167, "cord": 167, "197": [40, 73, 82, 83, 104, 145, 167, 175, 222, 233], "108": [72, 79, 82, 83, 167, 171, 220], "119": [73, 82, 83, 114, 167, 220, 228], "disable_background_mask": 167, "ok": 167, "oversmooth": 167, "un": [167, 217, 222], "inaccuraci": 167, "nonloc": 167, "lasso": [167, 171, 177, 190], "sklearnlinearsolv": [167, 171, 177, 178, 190], "scikit": [167, 171, 172, 177, 190, 245], "linear_model": [167, 171, 177, 190, 225], "linearregress": [167, 177, 190], "regressormixin": [167, 171, 177, 190], "image_as_sampl": 167, "sigma_corr": 167, "stacklevel": [167, 175], "odfs_sh": [167, 171], "odfs_sf": 167, "legaci": [167, 168, 171, 216, 217, 224, 230, 232, 233, 241], "angelino": [167, 168, 171, 173, 241], "fitzgibbon": [167, 168, 171, 173, 241], "510": [82, 106, 167, 168, 171, 173, 222, 241], "raffelt": [167, 171, 241], "tabbara": [167, 171, 241], "dholland": [167, 171, 241], "pietsch": [167, 171, 241], "mrtrix3": [160, 167, 171, 224, 241], "202": [73, 83, 167, 171, 221, 241, 243, 244], "116": [82, 83, 87, 100, 114, 167, 171, 220, 231, 241], "137": [49, 61, 82, 83, 167, 171, 220, 241], "trekker": 168, "tangent": [168, 175], "max_attempt": 168, "b_tol": 168, "get_pmf": [168, 178], "get_pmf_no_boot": [168, 178], "initial_direct": [168, 171, 175, 178, 224], "is_symmetr": 168, "descend": [168, 171], "incom": [168, 169], "shcoeff": 168, "real_sh_descoteaux": [168, 178], "sheric": 168, "sphere_ev": 168, "xtol": [168, 171], "finder": [168, 220], "gfa_thr": 168, "sh_basis_typ": 168, "subprocess": [168, 171, 177, 193, 194], "cpu_count": [168, 171, 177, 193, 194], "fibernavig": [168, 215], "pmf_gen": 168, "cylinder": 168, "k1": 168, "max_curvatur": 168, "probe_radiu": 168, "mitig": [168, 175], "harder": 168, "intric": 168, "erod": 168, "probe_qu": 168, "cylind": [168, 173, 175], "probe_count": 168, "data_support_expon": 168, "datasupportexpon": 168, "generate_streamlin": [168, 175, 178, 230], "dir": 168, "stream_statu": [168, 175], "fixedstep": [168, 175], "min_radius_curvatur": [168, 175], "onlinelibrari": [168, 175], "wilei": [168, 175], "22005": [168, 175], "hdfgroup": 169, "storag": [169, 175], "mkstemp": 169, "temp": [169, 221, 233], "dpy_exampl": 169, "fd": 169, "dpw": 169, "write_track": [169, 178], "dpr": 169, "read_track": [169, 178], "read_tracksi": [169, 178], "as_ndarrai": 169, "arrayproxi": 169, "return_coord": 169, "aff2axcod": 169, "vox_siz": [169, 175], "hdr": 169, "peaksandmetr": [169, 171, 176, 178, 215], "fname_shm": 169, "fname_dir": 169, "fname_valu": 169, "fname_indic": 169, "fname_gfa": 169, "reshape_dir": 169, "attach": 169, "fh": 169, "neat": 169, "voxmm": [43, 169, 172, 175, 178], "data_per_point": [43, 169, 178, 230], "data_per_streamlin": [43, 169, 177, 178, 210, 211, 233], "awar": [169, 175, 238], "verif": 169, "sft_1": 169, "sft_2": 169, "compute_bounding_box": [169, 178], "dtype_dict": [169, 178], "from_sft": [169, 178], "get_data_per_point_kei": [169, 178], "get_data_per_streamline_kei": [169, 178], "get_streamlines_copi": [169, 178], "indices_to_remov": 169, "indices_to_keep": 169, "to_cent": [169, 178], "to_origin": [169, 178], "target_origin": 169, "to_spac": [169, 178], "target_spac": 169, "trk_header_check": 169, "ttype": 169, "loader": 169, "saver": 169, "trx": [169, 232, 233], "image_data": 169, "intent": 169, "img_orig": 169, "compliant": 169, "nimh": 169, "gov": 169, "nifti1field": 169, "nifti1fields_pag": 169, "ext": [169, 171], "trxfile": 169, "reference_1": 169, "reference_2": 169, "tractogram_typ": 169, "datafram": [169, 174], "panda": [169, 245], "helper": [169, 170, 171, 175], "file_nam": [169, 176], "ply": 169, "stl": 169, "xml": 169, "vtkpolydata": 169, "color_array_nam": 169, "to_lp": 169, "mitkdiffus": 169, "crucial": 170, "advers": 170, "layer": [170, 171, 172, 177, 191, 226], "speech": 170, "relu": 170, "vinci": 170, "booher": 170, "wang": 170, "caron": 170, "wen": 170, "newman": 170, "e0274396": 170, "0274396": 170, "sig_length": 170, "mean_squared_error": 170, "loss_weight": 170, "sgd": 170, "rmsprop": 170, "adagrad": 170, "adadelta": 170, "mean_absolute_error": 170, "mean_absolute_percentage_error": 170, "mean_squared_logarithmic_error": 170, "squared_hing": 170, "hing": 170, "categorical_hing": 170, "logcosh": 170, "categorical_crossentropi": 170, "sparse_categorical_crossentropi": 170, "binary_crossentropi": 170, "kullback_leibler_diverg": 170, "poisson": 170, "binary_accuraci": 170, "categorical_accuraci": 170, "top_k_categorical_accuraci": 170, "sparse_categorical_accuraci": 170, "sparse_top_k_categorical_accuraci": 170, "batch_siz": 170, "max_queue_s": 170, "worker": [170, 171, 175], "use_multiprocess": 170, "return_dict": 170, "silent": 170, "queue": [170, 226], "validation_split": 170, "validation_data": 170, "initial_epoch": 170, "steps_per_epoch": 170, "validation_step": 170, "validation_batch_s": 170, "validation_freq": 170, "kera": 170, "x_val": 170, "y_val": 170, "tf": [170, 175], "Its": [170, 171, 173], "load_weight": [170, 178], "filepath": [170, 246], "save_weight": [170, 178], "textual": 170, "nonetyp": 170, "train_test_split": [170, 178], "test_siz": 170, "train_siz": 170, "random_st": 170, "stratifi": 170, "complement": 170, "glossari": 170, "x_train": 170, "x_test": 170, "y_train": 170, "y_test": 170, "out_channel": 170, "kernel_s": 170, "drop_r": 170, "n_layer": 170, "layer_typ": 170, "invoc": [170, 221, 222], "init_scop": 170, "input_shap": 170, "input_spec": 170, "savedmodel": 170, "tfmot": 170, "tflite": 170, "came": 170, "crf": [170, 177], "load_model_weight": [170, 178], "weights_path": 170, "voxsiz": 170, "return_affin": 170, "return_prob": 170, "largest_area": 170, "ndarri": [170, 175], "foreground": 170, "minor": [170, 215, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228], "pred_output": 170, "input_data": 170, "model_scal": 170, "fetch_model_weights_path": 170, "histo_resdnn_weight": 170, "mimick": 170, "chunk_siz": 170, "assembl": 170, "nonzero": [170, 171, 172], "pred_sh_coef": 170, "num_hidden": 170, "act_hidden": 170, "dropout": 170, "num_out": 170, "act_out": 170, "softmax": 170, "perceptron": 170, "batchsiz": 170, "testsiz": 170, "outputs": 170, "disco": 170, "alon": 170, "blaber": 170, "landman": 170, "synthes": 170, "cai": 170, "roger": 170, "e0236418": 170, "min_v": 170, "max_v": 170, "new_min": 170, "new_max": 170, "norm_min": 170, "norm_max": 170, "init_shap": 170, "voxelspac": 170, "transformed_img": 170, "image_shap": 170, "recovered_img": 170, "binary_img": 170, "chunk": [170, 171, 248], "hole": 170, "largest_img": 170, "methodologi": 171, "funk": 171, "radon": 171, "bx": 171, "plug": 171, "rewritten": 171, "sh_coef": 171, "mymodel": 171, "mymodelfit": 171, "cache_get": [171, 178], "odf_basis_matrix": 171, "_compute_basis_matrix": 171, "cache_set": [171, 178], "cache_clear": [171, 178], "compute_expensive_matrix": 171, "expens": [171, 175], "expensive_matrix": 171, "cod": 171, "coefficient_of_determin": 171, "model_arg": 171, "model_kwarg": 171, "divis": [171, 215, 218, 222], "dwi_respons": 171, "reg_spher": 171, "inject": 171, "knowledg": 171, "tractomet": 171, "pred_sig": 171, "sdtmodel": 171, "csdmodel": 171, "opppos": 171, "roi_cent": [171, 177, 194], "roi_radiu": 171, "fa_cal": 171, "return_number_of_voxel": 171, "fa_oper": [171, 216], "versu": 171, "r2_term": 171, "frt": 171, "dwsignal": 171, "b_reg": 171, "r_rh": 171, "fodf_sh": 171, "num_it": 171, "minimis": 171, "f_n": 171, "xf_n": 171, "h_": 171, "b_": [171, 237, 238], "reg": 171, "hf_": 171, "rightarrow": 171, "2x": 171, "th_": 171, "tx": 171, "regularis": 171, "superresolut": 171, "mu": [171, 172], "qf_n": 171, "choleski": [171, 223], "l_y": 171, "tf_n": 171, "rankn": 171, "f_0": 171, "pf_0": 171, "l_": 171, "h_n": 171, "f_": 171, "donald": 171, "odf_sh": [171, 178], "plai": 171, "odfdeconv": [171, 222], "20x20x20": 171, "cti_param": 171, "fifteen": 171, "twenti": 171, "k_": 171, "aniso": 171, "d_c": 171, "overlin": [171, 241], "k_total": [171, 178], "excess": 171, "psi": 171, "2d_": 171, "1111": [80, 82, 171, 218], "2222": [82, 171, 227], "3333": [25, 82, 84, 171], "2w_": 171, "1122": [82, 171, 215], "1133": [82, 171], "2233": [82, 171, 227], "ccti": 171, "columnar": 171, "min_diffus": [171, 220], "inverse_design_matrix": 171, "ull": [171, 177, 195], "wll": 171, "uwll": [171, 177, 195], "lmi": 171, "ardekani": [171, 177, 195], "823": [72, 82, 85, 171, 177, 195], "836": [82, 85, 171, 177, 195, 214], "multi_fit": [171, 178], "dki_param": 171, "min_kurtosi": 171, "42857142857142855": 171, "e1": [171, 173], "analogi": 171, "barmpouti": 171, "zhuo": 171, "8th": 171, "symposium": 171, "nano": [171, 177, 205], "macro": 171, "262": [33, 82, 83, 171, 221], "265": [82, 83, 171, 221], "5872402": 171, "akc": [171, 178], "adc": [171, 178, 221], "equiv": 171, "_f": 171, "frobeniu": 171, "kmax": [171, 178], "gtol": 171, "4pi": 171, "domega_mathbf": 171, "f_1": 171, "f_2": 171, "lambda_2lambda_3": 171, "r_f": 171, "3lambda_1": 171, "lambda_1lambda_2": 171, "lambda_1lambda_3": 171, "r_d": 171, "2lambda_1": 171, "3sqrt": 171, "carlson": 171, "hardin": 171, "1996": [74, 82, 171, 177, 196, 226, 229], "mclaren": 171, "snub": 171, "429": [80, 82, 83, 171, 222], "omega_": 171, "mathnbf": 171, "n_j": 171, "n_l": 171, "tr": 171, "medicine69": 171, "388": [79, 80, 82, 83, 171, 222], "2pi": 171, "domega": 171, "_mathbf": 171, "bot": [171, 213, 217, 218, 222, 224, 233], "g_1": 171, "g_2": 171, "errtol": 171, "incomplet": [171, 213, 215, 216, 217, 218, 219, 224, 225, 226, 228, 229, 230, 231, 232, 233], "infti": [171, 241], "9409227": 171, "adv": 171, "biologicali": 171, "pluasibl": 171, "advc": 171, "eingenvalu": 171, "max_dir": 171, "sunaert": 171, "pitfal": 171, "335": [72, 82, 83, 171, 222], "positivedefiniteleastsquar": [171, 178], "wrot": 171, "hui": 171, "cheung": 171, "qi": 171, "indi": 171, "indj": 171, "indk": 171, "indl": 171, "wre": 171, "ind_i": [171, 173], "ind_j": [171, 173], "ind_k": [171, 173], "ind_l": [171, 173], "k_element": 171, "eigval": 171, "eigvec": 171, "kurtosismicrostruturemodel": 171, "ols_fit_dki": 171, "wls_fit_dki": 171, "006": [140, 171], "awf_onli": 171, "optiom": 171, "kurtosismicrostructur": 171, "axonal_diffus": [171, 178], "hindered_ad": [171, 178], "hindered_ev": [171, 178], "hindered_rd": [171, 178], "adc_": 171, "restricted_ev": [171, 178], "rde": 171, "edt": 171, "idt": 171, "r_start": 171, "r_end": 171, "r_step": 171, "nowrap": 171, "eqnarrai": 171, "i2pimathbf": 171, "cdotmathbf": 171, "dmathbf": 171, "sit": 171, "q_space": 171, "han": [171, 175], "dsi_voxel": [171, 178], "gqrid_siz": 171, "generalizedqsampl": 171, "dr_x": 171, "dr_y": 171, "dr_z": 171, "psi_": 171, "rhat": 171, "dr": 171, "2002": [37, 171, 175, 225], "truncat": [171, 241], "p_": [171, 239], "iiintlimits_": 171, "bigg": 171, "1766": [82, 171, 224], "1775": [82, 171, 224], "qspace": 171, "qgrid": 171, "qtabl": 171, "premultipli": 171, "rradiu": 171, "interp_coord": 171, "diffusionspectrum": 171, "new_data": 171, "new_gtab": 171, "estimated_snr": 171, "qgrid_sampl": 171, "siz_x": 171, "siz_i": 171, "siz_z": 171, "psf": 171, "ifft": 171, "prop": 171, "numit": 171, "acc_factor": 171, "return_s0_hat": 171, "nll": [171, 177, 196, 225, 233], "rt": [171, 177, 196], "min_sign": [171, 222, 224], "consumpt": 171, "1e4": 171, "mattiello": [171, 177, 196], "elucid": [171, 177, 196], "219": [82, 83, 171, 177, 196, 221], "lin": [171, 177, 196], "ching": [171, 177, 196], "1095": [82, 171, 177, 196], "cutoff": 171, "dti_param": 171, "model_s0": 171, "s0_hat": [171, 178], "ec": 171, "pele": 171, "gubjartsson": 171, "kikini": 171, "jolesz": 171, "dodf": 171, "scratch": [171, 215, 224], "566": [82, 171, 173, 223], "ftp": 171, "sop": 171, "athena": [171, 215], "descoteaux_thesi": 171, "heta": 171, "infin": [171, 175], "lambda_i": [171, 237, 238], "lambda_1lambda_2lambda_3": 171, "denomin": 171, "appendix": 171, "batchelor": 171, "moakher": 171, "atkinson": 171, "rigor": 171, "calculu": 171, "221": [73, 82, 83, 171, 221], "225": [82, 83, 84, 171, 220, 221], "newcomb": 171, "1103": [73, 82, 84, 171, 215], "1115": [73, 82, 171, 215], "etal": 171, "thompson": 171, "monozygot": 171, "dizygot": 171, "twin": 171, "943": [74, 82, 85, 171, 215], "946": [74, 82, 85, 171, 215], "arsigni": 171, "fillard": 171, "medecin": 171, "421": [79, 82, 83, 171, 222], "q_form": 171, "a_hat": 171, "daniel": [171, 218], "enni": 171, "kindlmann": 171, "146": [73, 82, 83, 171, 220], "a_squiggl": 171, "widetild": 171, "mo": 171, "orthotropi": 171, "fit_tensor": [171, 213, 215], "counteract": 171, "heteroscedast": 171, "return_lower_triangular": 171, "fail_is_nan": 171, "npar": 171, "gmm": 171, "geman": 171, "mclure": 171, "nlls_param": 171, "n_direct": 171, "5267": [32, 171, 177, 195, 196], "background_nois": [171, 177, 195, 196], "num_vox": 171, "restore_param": 171, "sixth": 171, "dummi": 171, "1994a": 171, "hermitian": 171, "bxx": 171, "byi": 171, "bzz": 171, "bxy": 171, "bxz": 171, "byz": 171, "odf_vertic": [171, 175, 222], "ang_thr": [171, 175, 178], "qa_thr": [171, 175, 178], "total_weight": [171, 175, 178], "lambda_lb": 171, "lambda_csd": 171, "rho": [171, 237, 239], "po": [171, 221], "tessel": 171, "get_3shell_gtab": [171, 178], "0017": [89, 171], "descoteaux07_legacy_msg": 171, "catch_warn": 171, "filterwarn": 171, "pendingdeprecationwarn": 171, "analyticalmodel": 171, "clip_neg": 171, "b_uniqu": 171, "data_norm": 171, "lb_matrix": 171, "fwdti_param": 171, "diso": 171, "003": [89, 171, 177], "sig": 171, "mdreg": 171, "0027": 171, "piter": 171, "md_reg": 171, "inter": 171, "fw_param": 171, "f_transform": 171, "ft": 171, "arcsin": 171, "tensor_el": 171, "cholesky_el": 171, "r0": 171, "r1": 171, "r3": 171, "r4": 171, "r5": 171, "carew": 171, "meyerand": 171, "anomal": 171, "930": [74, 82, 84, 85, 171, 215], "936": [74, 82, 85, 171, 231], "20832": 171, "pg": 171, "1628": [171, 218], "subdivide_octahedron": [171, 178], "create_unit_spher": [171, 178], "gq": 171, "voxel_sign": 171, "max_qa": 171, "nqa": 171, "equatori": 171, "zone": 171, "conjug": [171, 241], "cone": 171, "x_scale": 171, "ftol": 171, "extracellular": 171, "fill_na": 171, "least_squar": 171, "federau": 171, "874": [73, 74, 82, 85, 171, 215], "881": [74, 82, 85, 171, 215, 216], "estimate_f_d_star": [171, 178], "params_f_d_star": 171, "estimate_linear_fit": [171, 178], "split_b": 171, "intercept": 171, "ivim_param": 171, "ivim_sign": 171, "cvx_fit": [171, 178], "f1": 171, "f2": 171, "ivim_mix_cost_on": [171, 178], "stoc_search_cost": [171, 178], "penros": 171, "thorough": 171, "nlls_cost": [171, 178], "x_f": 171, "stationari": 171, "exp_phi1": 171, "x_and_f_to_x_f": [171, 178], "x_f_to_x_and_f": [171, 178], "selector": [171, 216], "eigenvalue_threshold": 171, "dti_scale_estim": 171, "static_diffus": 171, "0007": [171, 173], "eapoc": 171, "ensembl": [171, 173], "ph": [171, 175], "avram": 171, "feasibl": [82, 171], "posiv": 171, "vastli": 171, "golden_direct": 171, "map_model": 171, "mapfit": 171, "mapmri_coef": 171, "lopt": 171, "errorcod": 171, "linalgerror": [171, 214, 218], "unabl": [19, 171, 215, 222, 227, 233], "fitted_sign": [171, 178], "mapmri_r": [171, 178], "mapmri_coeff": [171, 178], "mapmri_mu": [171, 178], "c13": 171, "gaussiann": 171, "act": [171, 175, 215, 223], "c8": 171, "r_point": 171, "recalcul": 171, "qvals_or_gtab": 171, "qvalu": [171, 222], "c14": 171, "44a": 171, "c11": 171, "mu_squar": 171, "u0": 171, "index_matrix": 171, "q_gradient": 171, "rgrad": 171, "binomi": 171, "odf_mat": 171, "n_vertic": 171, "n_mapmri_coef": 171, "odf_sh_mat": 171, "n_sh_coef": 171, "c7": 171, "n_coef": 171, "ind_mat": 171, "gridsiz": 171, "radius_max": 171, "tab": [104, 171, 178, 220, 222, 232], "phi_n": 171, "phi_m": 171, "submatric": 171, "s_mat": 171, "t_mat": 171, "u_mat": 171, "weights_arrai": 171, "ncoef": 171, "n_of_weight": 171, "gcv_startpoint": 171, "startpoint": [171, 178], "optimal_lambda": 171, "coeff": [171, 233], "setter": 171, "warm": 171, "qp": 171, "iso_comp": 171, "osqp": 171, "primal": 171, "002": [75, 171], "multishel": [171, 230], "msdki_param": 171, "diffusit": 171, "msignal": 171, "nub": 171, "fit_arrai": 171, "single_voxel_fit": 171, "sum_i": 171, "psi_i": 171, "bracket": [171, 175], "cohen": 171, "adad": 171, "wald": 171, "jmri": 171, "1194": [73, 82, 84, 171, 215], "1208": [82, 171, 215], "ndrrai": 171, "constrain_q0": 171, "10000000000": 171, "eco": 171, "textbf": 171, "sum_k": 171, "ik": 171, "phi_i": 171, "t_k": 171, "c_i": 171, "q0": 171, "uniti": 171, "cham": 171, "qtdmri_coef": 171, "ut": 171, "tau_scal": 171, "cvxpy_solution_optim": 171, "rt_point": 171, "qtdmri_to_mapmri_coef": [171, 178], "convers": [171, 172, 224, 233, 242], "depen": 171, "sparsity_ab": [171, 178], "sparsity_dens": [171, 178], "part1_ut_precomp": 171, "part23_ut_precomp": 171, "part4_ut_precomp": 171, "part1_uq_iso_precomp": 171, "b2": [171, 176], "c4": 171, "0005": 171, "grid_size_r": 171, "max_radius_r": 171, "grid_size_tau": 171, "min_radius_tau": 171, "max_radius_tau": 171, "weight_arrai": 171, "04": [22, 25, 27, 32, 33, 35, 36, 37, 40, 53, 56, 61, 65, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 87, 100, 120, 171, 232, 233], "big_delta_start": 171, "big_delta_end": 171, "g_start": 171, "g_end": 171, "bval_isolin": 171, "7500": 171, "14000": 171, "alpha_shad": 171, "shade": 171, "_ols_fit": 171, "_wls_fit": 171, "_sdpdc_fit": 171, "c_": [171, 175], "d_sq": [171, 178], "mean_d_sq": [171, 178], "themselv": 171, "egin": 171, "bmatrix": 171, "ig": 171, "bmat": 171, "ight": 171, "otimesmathbf": 171, "_notimesmathbf": 171, "obj_arr": 171, "adj_ind": 171, "adj_indic": 171, "unrol": 171, "vertex_ind": 171, "vertind": 171, "adj_count": 171, "uint32": 171, "odfn": 171, "radiusn": 171, "anglesn": 171, "return_index": 171, "remove_antipod": 171, "return_indic": [171, 172, 178], "unique_vertic": [171, 220], "relative_threshold": 171, "intp": 171, "outn": 171, "summat": 171, "0008": [89, 171, 177], "alongsid": [171, 175, 176], "f_csf": [171, 178], "f_gm": [171, 178], "fit_vec": 171, "s_i": 171, "f_j": 171, "b_i": 171, "_j": 171, "b_id_": 171, "v_i": 171, "d_j": 171, "hf": 171, "modern": 171, "prod_": 171, "i_": 171, "i_n": 171, "t_n": 171, "gautschi": 171, "slavik": 171, "875": [74, 82, 85, 171, 215], "1090": [74, 82, 171, 215], "s0025": 171, "5718": [72, 84, 171], "0470267": 171, "discontinu": 171, "global_fit": 171, "elsewher": 171, "alpha_": 171, "div": 171, "triangledown": 171, "lvert": 171, "rvert": 171, "biggr": 171, "rvert_": 171, "discrep": [171, 215, 222, 227], "chambol": 171, "97": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 114, 135, 171, 173, 220, 224, 232], "boil": 171, "n_vox": 171, "elasticnet": 171, "parallel_backend": 171, "joblib": [171, 230], "parallelbackendbas": 171, "backend": 171, "loki": 171, "bottleneck": 171, "gil": 171, "tensor_matrix": 171, "behrens2007": 171, "stick_matrix": 171, "tej": [171, 215], "berg": 171, "jbabdi": 171, "rushworth": 171, "mf": [171, 173], "woolrich": 171, "mw": 171, "gain": [171, 173, 175], "144": [72, 73, 82, 83, 114, 171, 214, 220], "sampling_matrix": [171, 178], "assume_norm": 171, "qball": [171, 220], "shm_coef": 171, "999": [74, 82, 85, 171, 215], "signal_object": 171, "where_dwi": 171, "residualbootstrapwapp": 171, "rh": 171, "r_sh": 171, "dirac": [171, 231], "colatitudin": 171, "use_scipi": 171, "y_mn": 171, "m_n": 171, "sph_harm": [171, 213], "onward": 171, "interchang": 171, "agre": [171, 241], "0_n": 171, "real_sh": 171, "gadian": 171, "1176": [82, 171, 215, 222], "1185": [82, 171, 215], "m_list": 171, "n_list": 171, "kx1": 171, "lazi": 171, "where_b0": 171, "leverag": [171, 233], "hd": 171, "lcr": 171, "haroon": 171, "return_inv": 171, "n_coeff": 171, "rarrow": 171, "2n": 171, "3l": 171, "8n": 171, "norm_factor": 171, "rectifi": 171, "log_ap": 171, "ixjxkxc": 171, "ixjxkx6": 171, "lacerda": 171, "catani": 171, "simmon": 171, "full_sh_coeff": 171, "out_sh_coeff": 171, "025330295910584444": [171, 173], "constrain_e0": 171, "positive_constraint": 171, "amongst": 171, "rathi": 171, "20e": 171, "get_isbi2013_2shell_gtab": [171, 178], "shore_coef": 171, "pdf_grid": [171, 178], "shore_coeff": [171, 178], "qtextbf": 171, "nlm": 171, "biggl": 171, "dfrac": 171, "expbiggl": 171, "2zeta": 171, "y_l": [171, 241], "rtab": 171, "sphere_vertic": 171, "bxxxx": 171, "byyyi": 171, "bzzzz": 171, "bxxxy": 171, "bxxxz": 171, "bxyyi": 171, "byyyz": 171, "bxzzz": 171, "byzzz": 171, "bxxyi": 171, "bxxzz": 171, "byyzz": 171, "bxxyz": 171, "bxyyz": 171, "bxyzz": 171, "blogs0": 171, "ellid": 171, "cluster_map": 172, "evaluate_result": [172, 178], "slr_select": 172, "neirborhood": 172, "ba_valu": 172, "prune": [172, 175, 177, 205], "bmd_valu": 172, "slr_metric": [172, 177, 205], "slr_x0": 172, "slr_bound": 172, "slr_method": 172, "bundlemindistancemetr": [172, 178], "recognized_transf": 172, "recognized_label": 172, "lt": 172, "dtracks0": 172, "dtracks1": 172, "ba": 172, "recognized_bundl": 172, "expert_bundl": 172, "select_randomli": 172, "500000": 172, "refdata": [172, 178], "id_datum": 172, "add_clust": [172, 178], "clusters_s": [172, 178], "get_large_clust": [172, 178], "get_small_clust": [172, 178], "max_siz": 172, "remove_clust": [172, 178], "mdf_12point": 172, "max_nb_clust": 172, "2147483647": 172, "nk": 172, "farther": 172, "exceed": 172, "191": [73, 79, 82, 83, 111, 172, 221], "tradeoff": [172, 175], "garyfallidis16": 172, "million": [172, 175], "singapor": 172, "4187": [53, 82, 84, 172], "quickbundlex": 172, "child": [172, 177], "is_leaf": [172, 178], "get_clust": [172, 178], "wanted_level": 172, "iter_preord": [172, 178], "traverse_postord": [172, 178], "clusters_list": 172, "centroid_shap": 172, "get_cluster_map": [172, 178], "get_stat": [172, 178], "get_tree_cluster_map": [172, 178], "datum_idx": 172, "nb_dimens": 172, "c_infer_shap": 172, "overrid": [172, 175, 215, 226], "nb_mpt": 172, "bin_siz": 172, "bidirect": 172, "barycent": 172, "use_neg": 172, "nb_sline": 172, "nb_slines_ref": 172, "coo_matrix": [172, 175], "non_zero_id": 172, "nb_non_empty_row": 172, "sline": 172, "nearest_id": 172, "nearest_dist": 172, "nb_non_empty_col": 172, "masked_vol": 172, "npmin": 172, "npmax": 172, "input_volum": [172, 177, 204], "bet": 172, "maskedvolum": 172, "tensor_fit": 172, "r_min": 172, "r_max": 172, "g_min": 172, "g_max": 172, "b_min": 172, "b_max": 172, "coars": 172, "new_cc_mask": 172, "manhattan": [172, 175], "c_dist": 172, "c_are_compat": 172, "features1": 172, "features2": 172, "datum1": 172, "datum2": 172, "data1": 172, "spawn": 172, "llist": 172, "mu_": 172, "sigma_": 172, "eta_": 172, "initialize_param_uniform": [172, 178], "negloglikelihood": [172, 178], "sigmasq": 172, "nloglik": 172, "prob_imag": [172, 178], "p_l_n": 172, "prob_neighborhood": [172, 178], "p_l_y": 172, "seg_stat": [172, 178], "seg_imag": 172, "var": [172, 222, 226, 231], "update_param": [172, 178], "jan": 172, "mu_upd": 172, "var_upd": 172, "icm_is": [172, 178], "seg": 172, "pott": 172, "Ising": 172, "potts_model": 172, "new_seg": 172, "initialize_maximum_likelihood": [172, 178], "loglikelihood": 172, "neglog": 172, "likelihhood": 172, "stan": 172, "pln": 172, "upperbound": 172, "upper_bound": 172, "save_histori": 172, "posteriori": 172, "rice": 173, "rayleigh": 173, "gudbjartson": 173, "patz": 173, "910": [74, 85, 173, 214], "914": [73, 74, 82, 85, 173, 214], "signal_w_nois": 173, "dx": 173, "dy": 173, "dz": 173, "0004": 173, "00628947": 173, "01257895": 173, "01886842": 173, "0251579": 173, "03144737": 173, "03773685": 173, "04402632": 173, "0503158": 173, "05660527": 173, "06289475": 173, "06918422": 173, "0754737": 173, "08176317": 173, "08805265": 173, "09434212": 173, "1006316": 173, "10692107": 173, "11321055": 173, "11950002": 173, "1257895": 173, "13207897": 173, "13836845": 173, "14465792": 173, "15094739": 173, "15723687": 173, "16352634": 173, "16981582": 173, "17610529": 173, "18239477": 173, "18868424": 173, "19497372": 173, "20126319": 173, "20755267": 173, "21384214": 173, "22013162": 173, "22642109": 173, "23271057": 173, "23900004": 173, "24528952": 173, "25157899": 173, "25786847": 173, "26415794": 173, "27044742": 173, "27673689": 173, "28302637": 173, "28931584": 173, "29560531": 173, "30189479": 173, "30818426": 173, "31447374": 173, "32076321": 173, "32705269": 173, "33334216": 173, "33963164": 173, "34592111": 173, "35221059": 173, "35850006": 173, "36478954": 173, "37107901": 173, "37736849": 173, "38365796": 173, "38994744": 173, "39623691": 173, "40252639": 173, "40881586": 173, "41510534": 173, "42139481": 173, "42768429": 173, "43397376": 173, "44026323": 173, "44655271": 173, "45284218": 173, "45913166": 173, "46542113": 173, "47171061": 173, "47800008": 173, "48428956": 173, "49057903": 173, "49686851": 173, "50315798": 173, "50944746": 173, "51573693": 173, "52202641": 173, "52831588": 173, "53460536": 173, "54089483": 173, "54718431": 173, "55347378": 173, "55976326": 173, "56605273": 173, "57234221": 173, "57863168": 173, "58492115": 173, "59121063": 173, "5975001": 173, "60378958": 173, "61007905": 173, "61636853": 173, "622658": 173, "62894748": 173, "63523695": 173, "64152643": 173, "6478159": 173, "65410538": 173, "66039485": 173, "66668433": 173, "6729738": 173, "67926328": 173, "68555275": 173, "69184223": 173, "6981317": 173, "70442118": 173, "71071065": 173, "71700013": 173, "7232896": 173, "72957907": 173, "73586855": 173, "74215802": 173, "7484475": 173, "75473697": 173, "76102645": 173, "76731592": 173, "7736054": 173, "77989487": 173, "78618435": 173, "79247382": 173, "7987633": 173, "80505277": 173, "81134225": 173, "81763172": 173, "8239212": 173, "83021067": 173, "83650015": 173, "84278962": 173, "8490791": 173, "85536857": 173, "86165805": 173, "86794752": 173, "87423699": 173, "88052647": 173, "88681594": 173, "89310542": 173, "89939489": 173, "90568437": 173, "91197384": 173, "91826332": 173, "92455279": 173, "93084227": 173, "93713174": 173, "94342122": 173, "94971069": 173, "95600017": 173, "96228964": 173, "96857912": 173, "97486859": 173, "98115807": 173, "98744754": 173, "99373702": 173, "00002649": 173, "00631597": 173, "01260544": 173, "01889491": 173, "02518439": 173, "03147386": 173, "03776334": 173, "04405281": 173, "05034229": 173, "05663176": 173, "06292124": 173, "06921071": 173, "07550019": 173, "08178966": 173, "08807914": 173, "09436861": 173, "10065809": 173, "10694756": 173, "11323704": 173, "11952651": 173, "12581599": 173, "13210546": 173, "13839494": 173, "14468441": 173, "15097389": 173, "15726336": 173, "16355283": 173, "16984231": 173, "17613178": 173, "18242126": 173, "18871073": 173, "19500021": 173, "20128968": 173, "20757916": 173, "21386863": 173, "22015811": 173, "22644758": 173, "23273706": 173, "23902653": 173, "24531601": 173, "25160548": 173, "25789496": 173, "26418443": 173, "27047391": 173, "27676338": 173, "28305286": 173, "28934233": 173, "29563181": 173, "30192128": 173, "30821075": 173, "31450023": 173, "3207897": 173, "32707918": 173, "33336865": 173, "33965813": 173, "3459476": 173, "35223708": 173, "35852655": 173, "36481603": 173, "3711055": 173, "37739498": 173, "38368445": 173, "38997393": 173, "3962634": 173, "40255288": 173, "40884235": 173, "41513183": 173, "4214213": 173, "42771078": 173, "43400025": 173, "44028973": 173, "4465792": 173, "45286867": 173, "45915815": 173, "46544762": 173, "4717371": 173, "47802657": 173, "48431605": 173, "49060552": 173, "496895": 173, "50318447": 173, "50947395": 173, "51576342": 173, "5220529": 173, "52834237": 173, "53463185": 173, "54092132": 173, "5472108": 173, "55350027": 173, "55978975": 173, "56607922": 173, "5723687": 173, "57865817": 173, "58494765": 173, "59123712": 173, "59752659": 173, "60381607": 173, "61010554": 173, "61639502": 173, "62268449": 173, "62897397": 173, "63526344": 173, "64155292": 173, "64784239": 173, "65413187": 173, "66042134": 173, "66671082": 173, "67300029": 173, "67928977": 173, "68557924": 173, "69186872": 173, "69815819": 173, "70444767": 173, "71073714": 173, "71702662": 173, "72331609": 173, "72960557": 173, "73589504": 173, "74218451": 173, "74847399": 173, "75476346": 173, "76105294": 173, "76734241": 173, "77363189": 173, "77992136": 173, "78621084": 173, "79250031": 173, "79878979": 173, "80507926": 173, "81136874": 173, "81765821": 173, "82394769": 173, "83023716": 173, "83652664": 173, "84281611": 173, "84910559": 173, "85539506": 173, "86168454": 173, "86797401": 173, "87426349": 173, "88055296": 173, "88684243": 173, "89313191": 173, "89942138": 173, "90571086": 173, "91200033": 173, "91828981": 173, "92457928": 173, "93086876": 173, "93715823": 173, "94344771": 173, "94973718": 173, "95602666": 173, "96231613": 173, "96860561": 173, "97489508": 173, "98118456": 173, "98747403": 173, "99376351": 173, "00005298": 173, "00634246": 173, "01263193": 173, "01892141": 173, "02521088": 173, "03150035": 173, "03778983": 173, "0440793": 173, "05036878": 173, "05665825": 173, "06294773": 173, "0692372": 173, "07552668": 173, "08181615": 173, "08810563": 173, "0943951": 173, "10068458": 173, "10697405": 173, "11326353": 173, "119553": 173, "12584248": 173, "13213195": 173, "13842143": 173, "1447109": 173, "15100038": 173, "15728985": 173, "16357932": 173, "1698688": 173, "17615827": 173, "18244775": 173, "18873722": 173, "1950267": 173, "20131617": 173, "20760565": 173, "21389512": 173, "2201846": 173, "22647407": 173, "23276355": 173, "23905302": 173, "2453425": 173, "25163197": 173, "25792145": 173, "26421092": 173, "2705004": 173, "27678987": 173, "28307935": 173, "28936882": 173, "2956583": 173, "30194777": 173, "30823724": 173, "31452672": 173, "32081619": 173, "32710567": 173, "33339514": 173, "33968462": 173, "34597409": 173, "35226357": 173, "35855304": 173, "36484252": 173, "37113199": 173, "37742147": 173, "38371094": 173, "39000042": 173, "39628989": 173, "40257937": 173, "40886884": 173, "41515832": 173, "42144779": 173, "42773727": 173, "43402674": 173, "44031622": 173, "44660569": 173, "45289516": 173, "45918464": 173, "46547411": 173, "47176359": 173, "47805306": 173, "48434254": 173, "49063201": 173, "49692149": 173, "50321096": 173, "50950044": 173, "51578991": 173, "52207939": 173, "52836886": 173, "53465834": 173, "54094781": 173, "54723729": 173, "55352676": 173, "55981624": 173, "56610571": 173, "57239519": 173, "57868466": 173, "58497414": 173, "59126361": 173, "59755308": 173, "60384256": 173, "61013203": 173, "61642151": 173, "62271098": 173, "62900046": 173, "63528993": 173, "64157941": 173, "64786888": 173, "65415836": 173, "66044783": 173, "66673731": 173, "67302678": 173, "67931626": 173, "68560573": 173, "69189521": 173, "69818468": 173, "70447416": 173, "71076363": 173, "71705311": 173, "72334258": 173, "72963206": 173, "73592153": 173, "742211": 173, "74850048": 173, "75478995": 173, "76107943": 173, "7673689": 173, "77365838": 173, "77994785": 173, "78623733": 173, "7925268": 173, "79881628": 173, "80510575": 173, "81139523": 173, "8176847": 173, "82397418": 173, "83026365": 173, "83655313": 173, "8428426": 173, "84913208": 173, "85542155": 173, "86171103": 173, "8680005": 173, "87428998": 173, "88057945": 173, "88686892": 173, "8931584": 173, "89944787": 173, "90573735": 173, "91202682": 173, "9183163": 173, "92460577": 173, "93089525": 173, "93718472": 173, "9434742": 173, "94976367": 173, "95605315": 173, "96234262": 173, "9686321": 173, "97492157": 173, "98121105": 173, "98750052": 173, "99379": 173, "00007947": 173, "00636895": 173, "01265842": 173, "0189479": 173, "02523737": 173, "03152684": 173, "03781632": 173, "04410579": 173, "05039527": 173, "05668474": 173, "06297422": 173, "06926369": 173, "07555317": 173, "08184264": 173, "08813212": 173, "09442159": 173, "10071107": 173, "10700054": 173, "11329002": 173, "11957949": 173, "12586897": 173, "13215844": 173, "13844792": 173, "14473739": 173, "15102687": 173, "15731634": 173, "16360582": 173, "16989529": 173, "17618476": 173, "18247424": 173, "18876371": 173, "19505319": 173, "20134266": 173, "20763214": 173, "21392161": 173, "22021109": 173, "22650056": 173, "23279004": 173, "23907951": 173, "24536899": 173, "25165846": 173, "25794794": 173, "26423741": 173, "27052689": 173, "27681636": 173, "28310584": 173, "28939531": 173, "29568479": 173, "30197426": 173, "30826374": 173, "31455321": 173, "32084268": 173, "32713216": 173, "33342163": 173, "33971111": 173, "34600058": 173, "35229006": 173, "35857953": 173, "36486901": 173, "37115848": 173, "37744796": 173, "38373743": 173, "39002691": 173, "39631638": 173, "40260586": 173, "40889533": 173, "41518481": 173, "42147428": 173, "42776376": 173, "43405323": 173, "44034271": 173, "44663218": 173, "45292166": 173, "45921113": 173, "4655006": 173, "47179008": 173, "47807955": 173, "48436903": 173, "4906585": 173, "49694798": 173, "50323745": 173, "50952693": 173, "5158164": 173, "52210588": 173, "52839535": 173, "53468483": 173, "5409743": 173, "54726378": 173, "55355325": 173, "55984273": 173, "5661322": 173, "57242168": 173, "57871115": 173, "58500063": 173, "5912901": 173, "59757958": 173, "60386905": 173, "61015852": 173, "616448": 173, "62273747": 173, "62902695": 173, "63531642": 173, "6416059": 173, "64789537": 173, "65418485": 173, "66047432": 173, "6667638": 173, "67305327": 173, "67934275": 173, "68563222": 173, "6919217": 173, "69821117": 173, "70450065": 173, "71079012": 173, "7170796": 173, "72336907": 173, "72965855": 173, "73594802": 173, "7422375": 173, "74852697": 173, "75481644": 173, "76110592": 173, "76739539": 173, "77368487": 173, "77997434": 173, "78626382": 173, "79255329": 173, "79884277": 173, "80513224": 173, "81142172": 173, "81771119": 173, "82400067": 173, "83029014": 173, "83657962": 173, "84286909": 173, "84915857": 173, "85544804": 173, "86173752": 173, "86802699": 173, "87431647": 173, "88060594": 173, "88689542": 173, "89318489": 173, "89947436": 173, "90576384": 173, "91205331": 173, "91834279": 173, "92463226": 173, "93092174": 173, "93721121": 173, "94350069": 173, "94979016": 173, "95607964": 173, "96236911": 173, "96865859": 173, "97494806": 173, "98123754": 173, "98752701": 173, "99381649": 173, "00010596": 173, "00639544": 173, "01268491": 173, "01897439": 173, "02526386": 173, "03155334": 173, "03784281": 173, "04413228": 173, "05042176": 173, "05671123": 173, "06300071": 173, "06929018": 173, "07557966": 173, "08186913": 173, "08815861": 173, "09444808": 173, "10073756": 173, "10702703": 173, "11331651": 173, "11960598": 173, "12589546": 173, "13218493": 173, "13847441": 173, "14476388": 173, "15105336": 173, "15734283": 173, "16363231": 173, "16992178": 173, "17621126": 173, "18250073": 173, "1887902": 173, "19507968": 173, "20136915": 173, "20765863": 173, "2139481": 173, "22023758": 173, "22652705": 173, "23281653": 173, "239106": 173, "24539548": 173, "25168495": 173, "25797443": 173, "2642639": 173, "27055338": 173, "27684285": 173, "28313233": 173, "2894218": 173, "29571128": 173, "30200075": 173, "30829023": 173, "3145797": 173, "32086918": 173, "32715865": 173, "33344812": 173, "3397376": 173, "34602707": 173, "35231655": 173, "35860602": 173, "3648955": 173, "37118497": 173, "37747445": 173, "38376392": 173, "3900534": 173, "39634287": 173, "40263235": 173, "40892182": 173, "4152113": 173, "42150077": 173, "42779025": 173, "43407972": 173, "4403692": 173, "44665867": 173, "45294815": 173, "45923762": 173, "4655271": 173, "47181657": 173, "47810604": 173, "48439552": 173, "49068499": 173, "49697447": 173, "50326394": 173, "50955342": 173, "51584289": 173, "52213237": 173, "52842184": 173, "53471132": 173, "54100079": 173, "54729027": 173, "55357974": 173, "55986922": 173, "56615869": 173, "57244817": 173, "57873764": 173, "58502712": 173, "59131659": 173, "59760607": 173, "60389554": 173, "61018502": 173, "61647449": 173, "62276396": 173, "62905344": 173, "63534291": 173, "64163239": 173, "64792186": 173, "65421134": 173, "66050081": 173, "66679029": 173, "67307976": 173, "67936924": 173, "68565871": 173, "69194819": 173, "69823766": 173, "70452714": 173, "71081661": 173, "71710609": 173, "72339556": 173, "72968504": 173, "73597451": 173, "74226399": 173, "74855346": 173, "75484294": 173, "76113241": 173, "76742188": 173, "77371136": 173, "78000083": 173, "78629031": 173, "79257978": 173, "79886926": 173, "80515873": 173, "81144821": 173, "81773768": 173, "82402716": 173, "83031663": 173, "83660611": 173, "84289558": 173, "84918506": 173, "85547453": 173, "86176401": 173, "86805348": 173, "87434296": 173, "88063243": 173, "88692191": 173, "89321138": 173, "89950086": 173, "90579033": 173, "9120798": 173, "91836928": 173, "92465875": 173, "93094823": 173, "9372377": 173, "94352718": 173, "94981665": 173, "95610613": 173, "9623956": 173, "96868508": 173, "97497455": 173, "98126403": 173, "9875535": 173, "99384298": 173, "00013245": 173, "00642193": 173, "0127114": 173, "01900088": 173, "02529035": 173, "03157983": 173, "0378693": 173, "04415878": 173, "05044825": 173, "05673772": 173, "0630272": 173, "06931667": 173, "07560615": 173, "08189562": 173, "0881851": 173, "09447457": 173, "10076405": 173, "10705352": 173, "113343": 173, "11963247": 173, "12592195": 173, "13221142": 173, "1385009": 173, "14479037": 173, "15107985": 173, "15736932": 173, "1636588": 173, "16994827": 173, "17623775": 173, "18252722": 173, "1888167": 173, "19510617": 173, "20139564": 173, "20768512": 173, "21397459": 173, "22026407": 173, "22655354": 173, "23284302": 173, "23913249": 173, "24542197": 173, "25171144": 173, "25800092": 173, "26429039": 173, "27057987": 173, "27686934": 173, "28315882": 173, "28944829": 173, "29573777": 173, "30202724": 173, "30831672": 173, "31460619": 173, "32089567": 173, "32718514": 173, "33347462": 173, "33976409": 173, "34605356": 173, "35234304": 173, "35863251": 173, "36492199": 173, "37121146": 173, "37750094": 173, "38379041": 173, "39007989": 173, "39636936": 173, "40265884": 173, "40894831": 173, "41523779": 173, "42152726": 173, "42781674": 173, "43410621": 173, "44039569": 173, "44668516": 173, "45297464": 173, "45926411": 173, "46555359": 173, "47184306": 173, "47813254": 173, "48442201": 173, "49071148": 173, "49700096": 173, "50329043": 173, "50957991": 173, "51586938": 173, "52215886": 173, "52844833": 173, "53473781": 173, "54102728": 173, "54731676": 173, "55360623": 173, "55989571": 173, "56618518": 173, "57247466": 173, "57876413": 173, "58505361": 173, "59134308": 173, "59763256": 173, "60392203": 173, "61021151": 173, "61650098": 173, "62279046": 173, "62907993": 173, "6353694": 173, "64165888": 173, "64794835": 173, "65423783": 173, "6605273": 173, "66681678": 173, "67310625": 173, "67939573": 173, "6856852": 173, "69197468": 173, "69826415": 173, "70455363": 173, "7108431": 173, "71713258": 173, "72342205": 173, "72971153": 173, "736001": 173, "74229048": 173, "74857995": 173, "75486943": 173, "7611589": 173, "76744838": 173, "77373785": 173, "78002732": 173, "7863168": 173, "79260627": 173, "79889575": 173, "80518522": 173, "8114747": 173, "81776417": 173, "82405365": 173, "83034312": 173, "8366326": 173, "84292207": 173, "84921155": 173, "85550102": 173, "8617905": 173, "86807997": 173, "87436945": 173, "88065892": 173, "8869484": 173, "89323787": 173, "89952735": 173, "90581682": 173, "9121063": 173, "91839577": 173, "92468524": 173, "93097472": 173, "93726419": 173, "94355367": 173, "94984314": 173, "95613262": 173, "96242209": 173, "96871157": 173, "97500104": 173, "98129052": 173, "98757999": 173, "99386947": 173, "00015894": 173, "00644842": 173, "01273789": 173, "01902737": 173, "02531684": 173, "03160632": 173, "03789579": 173, "04418527": 173, "05047474": 173, "05676422": 173, "06305369": 173, "06934316": 173, "07563264": 173, "08192211": 173, "08821159": 173, "09450106": 173, "10079054": 173, "10708001": 173, "11336949": 173, "11965896": 173, "12594844": 173, "13223791": 173, "13852739": 173, "14481686": 173, "15110634": 173, "15739581": 173, "16368529": 173, "16997476": 173, "17626424": 173, "18255371": 173, "18884319": 173, "19513266": 173, "20142214": 173, "20771161": 173, "21400108": 173, "22029056": 173, "22658003": 173, "23286951": 173, "23915898": 173, "24544846": 173, "25173793": 173, "25802741": 173, "26431688": 173, "27060636": 173, "27689583": 173, "28318531": 173, "datashap": 173, "2026834": 173, "40536679": 173, "60805019": 173, "81073359": 173, "01341699": 173, "21610038": 173, "41878378": 173, "62146718": 173, "82415057": 173, "02683397": 173, "22951737": 173, "43220076": 173, "63488416": 173, "83756756": 173, "04025096": 173, "24293435": 173, "44561775": 173, "64830115": 173, "85098454": 173, "05366794": 173, "25635134": 173, "45903473": 173, "66171813": 173, "86440153": 173, "06708493": 173, "26976832": 173, "47245172": 173, "67513512": 173, "87781851": 173, "08050191": 173, "orbit": 173, "thick": 173, "unweight": [173, 175], "remaind": 173, "soderman": 173, "s\u00f6derman": 173, "oll": 173, "bengt": 173, "j\u00f6nsson": 173, "1995": [82, 173, 225], "yaniv": 173, "978": [74, 82, 85, 173, 215], "ten": 173, "nr": 173, "292": [82, 83, 173, 221], "e0": [173, 222, 223], "multicompartment": 173, "imperm": 173, "neglect": [173, 175], "bvals_2": 173, "bvecs_2": 173, "d_comp": 173, "odf_vert": 173, "pdf_point": 173, "pname": 174, "bname": 174, "group_id": [174, 177], "dir_nam": 174, "hd5": 174, "10001": [174, 177], "target_bundl": 174, "return_mahalnobi": 174, "mahalanobi": 174, "return_mahalanobi": 174, "n_streamlin": [174, 175], "profile_stat": 174, "orient_bi": 174, "weights_kwarg": 174, "outlin": [22, 174], "voxel_to_rasmm": [174, 175], "distanch": 175, "phrase": 175, "get_direct": [175, 178], "vec1": 175, "vec2": 175, "392": [72, 79, 82, 83, 175, 225, 227], "rougher": 175, "393": [73, 80, 82, 83, 84, 175, 222], "decahexagon": 175, "7853": 175, "octagon": 175, "characteristic_point": 175, "helix": 175, "xyza": 175, "tracksa": 175, "tracksb": 175, "nm": 175, "hit": 175, "rcd": 175, "refx": 175, "bundlex": 175, "70710683": 175, "70710677": 175, "sa": [175, 177], "sb": [175, 177], "collis": 175, "ericson": 175, "thr": [175, 176], "reassign": 175, "distant": 175, "sqd_thr": 175, "larch_fast_split": 175, "3track": 175, "sqd_trh": 175, "trh": 175, "rep3": 175, "start0": 175, "end0": 175, "start1": 175, "end1": 175, "whang": 175, "sigmod07": 175, "angle_dist": 175, "l_0": 175, "l_1": 175, "cos_theta_squar": 175, "perpendicular_dist": 175, "l0": 175, "k0": 175, "u1": 175, "u2": 175, "pe": 175, "lperp1": 175, "lperp2": 175, "6f": 175, "787888": 175, "d_thr": 175, "t_1": 175, "t_2": 175, "fo": 175, "xyz1": 175, "xyz2": 175, "laidlaw": 175, "ieeexplor": 175, "4479455": 175, "coroug": 175, "avg_mcd": 175, "average_mean_closest_dist": 175, "min_mcd": 175, "minimum_mean_closest_dist": 175, "max_mcd": 175, "maximum_mean_closest_dist": 175, "minab": 175, "minba": 175, "avg_minab": 175, "avg_minba": 175, "min_minab": 175, "min_minba": 175, "vagu": 175, "tracks_combinations_of_2": 175, "mean_closest_dist": 175, "mcd_i": 175, "mcd_j": 175, "vec_out": 175, "sq_dist_thr": 175, "sq_distanc": 175, "f4": 175, "tracka": 175, "trackb": 175, "3pt": 175, "721573": 175, "min_fiberlength": 175, "minimum_length": 175, "max_windows": 175, "meesters2016_hbm": 175, "stress": 175, "leafsiz": 175, "compact_nod": 175, "copy_data": 175, "balanced_tre": 175, "boxsiz": 175, "ckdtree": 175, "kd": 175, "rapidli": 175, "bogu": 175, "brute": 175, "hyperrectangl": 175, "queri": [175, 178], "toroid": 175, "x_i": 175, "l_i": 175, "maneewongvatana": 175, "mount": 175, "count_neighbor": [175, 178], "nearbi": 175, "minkowski": 175, "overflow": [175, 213, 218, 222], "cosmologi": 175, "assembli": 175, "landi": 175, "szalai": 175, "xi": 175, "loos": [175, 237], "redshift": 175, "sky": 175, "astro": 175, "0012333": 175, "astrophys": 175, "adsab": 175, "1993apj": 175, "412": [72, 79, 80, 82, 83, 175, 222], "64l": 175, "sheth": 175, "connolli": 175, "skibba": 175, "galaxi": 175, "0511773": 175, "hawkin": 175, "2df": 175, "survei": [82, 175], "peculiar": 175, "monthli": 175, "astronom": 175, "2003mnra": 175, "78h": 175, "5647": [84, 175], "points1": 175, "points2": 175, "kd_tree1": 175, "kd_tree2": 175, "query_ball_tre": [175, 178], "innernod": [175, 178], "ckdtreenod": 175, "split_dim": [175, 178], "leafnod": [175, 178], "ckdtree_nod": 175, "distance_upper_bound": 175, "kth": 175, "miss": [175, 213, 215, 216, 217, 218, 220, 222, 224, 225, 227, 229, 231, 233], "query_ball_point": [175, 178], "mgrid": 175, "dd": 175, "sep": 175, "2236068": 175, "unsqueez": 175, "23606798": 175, "80622577": 175, "return_sort": 175, "return_length": 175, "nearer": 175, "indici": 175, "nearby_point": 175, "markers": 175, "og": 175, "query_pair": [175, 178], "output_typ": 175, "kd_tree": 175, "sparse_distance_matrix": [175, 178], "max_dist": 175, "dok_matrix": 175, "sdm": 175, "toarrai": 175, "12295571": 175, "28942611": 175, "2333084": 175, "24617575": 175, "29571802": 175, "26836782": 175, "distance_matrix": [175, 177, 178], "56906522": 175, "39923701": 175, "8658745": 175, "79428925": 175, "37327919": 175, "7225693": 175, "87665969": 175, "32580855": 175, "75679479": 175, "30088013": 175, "6395831": 175, "33630734": 175, "31994999": 175, "72658602": 175, "71124834": 175, "55396483": 175, "90785663": 175, "57714465": 175, "6473269": 175, "bounds_error": 175, "fill_valu": [175, 178], "assume_sort": 175, "_interpolator1d": 175, "slinear": 175, "zeroth": 175, "x_new": 175, "monoton": 175, "__call__": 175, "splrep": 175, "splev": 175, "fitpack": 175, "univariatesplin": 175, "interp2d": 175, "xnew": 175, "ynew": 175, "streamlines_length": 175, "streamline_scor": 175, "streamlines_scor": 175, "tracks1": 175, "tracks2": 175, "m1": 175, "track2track": 175, "tl": 175, "indices2": 175, "speedi": 175, "maker": 175, "724": [75, 79, 81, 82, 83, 84, 92, 175, 213, 218], "calc_sign": [175, 178], "reconstmodel": [175, 178], "bunch": [175, 178], "to_fit": 175, "weighted_sign": 175, "relative_sign": 175, "mean_sig": 175, "vox_data": 175, "reconstfit": [175, 178], "interior": 175, "n_node": 175, "unique_idx": 175, "v2f": 175, "v2fn": 175, "minlen": 175, "random_se": 175, "save_se": [175, 177, 210, 211, 227], "unidirect": 175, "randomize_forward_direct": 175, "discart": 175, "stepsiz": [175, 232], "pft_max_trial": 175, "back_tracking_dist": [175, 177, 211], "front_tracking_dist": [175, 177, 211], "trial": 175, "seed_po": 175, "first_step": 175, "workhors": 175, "prev_dir": 175, "fixed_step": 175, "pft_max_nbr_back_step": 175, "pft_max_nbr_front_step": 175, "particle_path": 175, "particle_dir": 175, "particle_weight": 175, "particle_step": 175, "particle_stream_status": 175, "pft_max_step": 175, "triangles_mask": 175, "triangles_weight": 175, "rand_gen": 175, "triangles_indic": 175, "trilinear_coord": 175, "triangles_idx": 175, "trilin_coord": 175, "trilinear_coordin": 175, "vts_valu": 175, "vertices_norm": 175, "vertices_color": 175, "triangles_valu": 175, "expected_len": 175, "len_along": 175, "cumsum": 175, "n_pol": 175, "frenet": 175, "serret": 175, "mathwork": 175, "matlabcentr": 175, "fileexchang": 175, "11169": 175, "parametris": 175, "qquad": 175, "binorm": 175, "kappa": 175, "torsion": 175, "tm": 175, "ic": 175, "longest": [175, 177], "longest_or_indic": 175, "sph_cent": 175, "sph_radiu": 175, "rai": [175, 231], "paulbourk": 175, "circlespher": 175, "cpp": 175, "xyzn": 175, "cookbook": 175, "netlib": 175, "dierckx": 175, "datapoint": 175, "knot": 175, "ascend": 175, "spiral": [165, 175], "splprep": 175, "travel": 175, "va": 175, "51010101": 175, "09883545": 175, "step_sz": 175, "max_point": 175, "lenind": 175, "types": 175, "interp_out_doubl": 175, "interp_out_view": 175, "wm_map": 175, "gm_map": 175, "csf_map": 175, "kw": 175, "get_exclud": [175, 178], "get_includ": [175, 178], "cmc": [175, 177, 211], "correction_factor": 175, "check_point": [175, 178], "intflag": 175, "pyerror": [175, 178], "pxd": 175, "new_streamlin": 175, "inv_shift": 175, "deform_field": 175, "stream_to_current_grid": 175, "current_grid_to_world": 175, "stream_to_ref_grid": 175, "ref_grid_to_world": 175, "in_plac": 175, "selected_streamlin": 175, "roi1": 175, "roi2": 175, "n_roi": 175, "either_end": 175, "both_end": 175, "mask1": 175, "mask2": 175, "max_mdf": 175, "subsamplen": 175, "degrad": 175, "5mm": 175, "jordan17": 175, "as_gener": 175, "ndarrrai": 175, "tol_error": 175, "max_segment_length": 175, "presseau15": 175, "rheault15": 175, "01mm": 175, "probabilit": 175, "compressed_streamlin": 175, "wiggl": 175, "c_streamlin": 175, "houde15": 175, "presseau": 175, "109": [43, 82, 83, 175, 220], "83": [24, 25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85, 86, 87, 175, 220], "common_shap": 175, "expected_length": 175, "modified_streamlin": 175, "vol_dim": 175, "image_volum": 175, "indexerror": [175, 224], "label_volum": 175, "defaultdict": 175, "bincount": 175, "new_label": 175, "among": [19, 175], "output_streamlin": 175, "seeds_count": 175, "seed_count_per_voxel": 175, "23838787": 175, "20150886": 175, "31422574": 175, "41435083": 175, "26318949": 175, "30127447": 175, "44305611": 175, "01132755": 175, "47624371": 175, "30500292": 175, "30794079": 175, "01532556": 175, "03816435": 175, "15672913": 175, "13093276": 175, "12509547": 175, "3972138": 175, "27568569": 175, "3702492": 175, "78681721": 175, "10314815": 175, "target_mask": 175, "whatev": [22, 175], "bresenham5": 175, "bresenham": 175, "jack": 175, "elton": 175, "plotter": 175, "ibm": 175, "roi_coord": 175, "region_of_interest": 175, "in_arrai": 175, "u_return": 175, "tracking_output": 175, "include_roi": 175, "exclude_roi": 175, "aoi": 175, "seq": 175, "plm": 175, "return_el": 175, "trackviz": 175, "tc": 175, "vox_track0": 175, "vox_track1": 175, "vox_dim": 175, "recorded_ev": 176, "return_showm": 176, "order_transpar": 176, "buan_color": 176, "roi_imag": [176, 177, 200], "roi_color": [176, 177, 200], "peakandmetr": 176, "anim": [176, 177, 200, 243, 244], "pictur": [176, 177, 200], "cababl": 176, "peel": [176, 177, 200], "anti": [176, 177, 200], "alias": [176, 177, 200], "horizon_ismrm19": [176, 177, 200], "juneja": [176, 177, 200, 217], "build_scen": [176, 178], "build_show": [176, 178], "selected_valu": [176, 178], "dataclass": 176, "abc": [176, 230], "tab_id": [176, 178], "tab_ui": [176, 178], "tabui": 176, "register_el": [176, 178], "win_siz": 176, "synchronize_slic": [176, 178], "reposit": [176, 178], "active_tab_id": 176, "x_valu": 176, "y_valu": 176, "z_valu": 176, "synchron": [104, 176, 233], "is_horizon_label": 176, "450": [79, 80, 83, 176, 222], "line_width": 176, "1f": 176, "on_moving_slid": 176, "on_value_chang": 176, "label_font_s": 176, "label_style_bold": 176, "is_double_slid": 176, "theme": [22, 145, 176, 233], "knob": 176, "programmat": 176, "checked_label": 176, "checkbox": [176, 218, 233], "initial_select": 176, "on_prev_click": 176, "on_next_click": 176, "switcher": 176, "prev": 176, "horizoncombineel": 176, "clusters_visu": 176, "peak_actor": 176, "contour_actor": 176, "slices_visu": 176, "slice_id": 176, "force_rend": 176, "_tab_ui": 176, "on_tab_select": [176, 178], "update_slic": [176, 178], "x_slice": 176, "y_slice": 176, "z_slice": 176, "show_manag": 176, "enable_callback": 176, "add_cluster_actor": [176, 178], "tract_idx": 176, "centroid_actor": [176, 178], "cluster_actor": [176, 178], "recluster_tractogram": [176, 178], "tractogram_clust": [176, 178], "interactor": [176, 215, 216], "change_volum": [176, 178], "prev_idx": 176, "next_idx": 176, "visible_slic": 176, "data_shap": [176, 178], "intensities_rang": [176, 178], "register_picker_callback": [176, 178], "selected_slic": [176, 178], "volume_max": [176, 178], "volume_min": [176, 178], "fit_kwarg": 176, "fit1": 176, "fit2": 176, "fitnam": 176, "xlimit": 176, "disprang": 176, "cbar": 176, "basemap_arg": 176, "triang": 176, "xlabel": 176, "ylabel": 176, "ylabl": 176, "img0": 176, "img1": 176, "title0": 176, "title_mid": 176, "title1": 176, "fig_kwarg": [176, 226], "segular": 176, "direct_grid_shap": 176, "direct_grid2world": 176, "inverse_grid_shap": 176, "inverse_grid2world": 176, "show_figur": 176, "warped_forward": 176, "warped_backward": 176, "wouldn": 176, "slice_indic": 176, "slice_typ": 176, "ltitl": 176, "rtitl": 176, "sagit": 176, "c2": 176, "magnitdu": 176, "docscrap": 177, "numpydoc": [22, 177], "mentat": 177, "virtanen": 177, "pav": 177, "iki": 177, "fi": 177, "output_strategi": 177, "get_short_nam": [177, 178], "troubl": 177, "subworkflow": 177, "strongli": 177, "new_vox_s": [177, 206], "out_resl": [177, 206], "new_vox_sz": [177, 206], "static_fil": [177, 185, 207], "moving_fil": [177, 185, 207], "out_mov": [177, 179, 186, 207], "out_stat_centroid": [177, 207], "static_centroid": 177, "out_moving_centroid": [177, 207], "moving_centroid": 177, "out_moved_centroid": [177, 207], "moved_centroid": 177, "static_image_fil": [177, 179, 180, 181], "moving_image_fil": [177, 179, 180, 181], "out_qual": [177, 179], "quality_metr": [177, 179], "transform_map_fil": [177, 181], "overwritten": [177, 181], "prealign_fil": [177, 180], "inv_stat": [177, 180], "mopt_sigma_diff": [177, 180], "mopt_radiu": [177, 180], "mopt_smooth": [177, 180], "mopt_inner_it": [177, 180], "mopt_q_level": [177, 180], "mopt_double_gradi": [177, 180], "mopt_step_typ": [177, 180], "out_inv_stat": [177, 180], "inc_stat": 177, "out_field": [177, 180], "bvalues_fil": [177, 186, 187, 193, 194, 195, 196, 197], "bvectors_fil": [177, 186, 187, 193, 194, 195, 196, 197], "bvecs_tol": [177, 186, 187, 193, 194, 196, 201], "out_linear_mov": [177, 185], "linearly_mov": 177, "out_nonlinear_mov": [177, 185], "out_warp_transform": [177, 185], "warp_transform": 177, "out_warp_kernel": [177, 185], "warp_kernel": 177, "out_dist": [177, 185], "out_matched_pair": [177, 185], "cpd": [177, 178, 185], "treamlin": [177, 185], "prog": 177, "epilog": 177, "formatter_class": 177, "rawtexthelpformatt": 177, "prefix_char": 177, "fromfile_prefix_char": 177, "argument_default": 177, "conflict_handl": 177, "add_help": 177, "argumentpars": 177, "augment": 177, "argv": 177, "helpformatt": 177, "charact": [177, 215, 217, 221, 222], "add_descript": [177, 178], "add_epilogu": [177, 178], "add_sub_flow_arg": [177, 178], "sub_flow": 177, "introspect": 177, "sub_flow_opt": 177, "add_workflow": [177, 178], "arpars": 177, "get_flow_arg": [177, 178], "optional_paramet": [177, 178], "output_paramet": [177, 178], "positional_paramet": [177, 178], "show_argu": [177, 178], "dest": 177, "update_argu": [177, 178], "karg": 177, "pyproject": [19, 138, 141, 177, 233], "toml": [19, 138, 141, 177], "get_opt": [177, 178], "get_sub_run": [177, 178], "set_sub_flows_opt": [177, 178], "_option": 177, "bval_fil": [177, 190], "dwi_patch2self": [177, 190], "globe": [177, 189, 190, 195, 196, 197, 204, 242], "dwi_nlmean": 177, "dwi_mppca": 177, "out_sigma": [177, 188], "dwi_sigma": 177, "out_unr": [177, 199], "dwi_unr": 177, "eof": [177, 178], "is_empti": [177, 178], "peek": [177, 178], "read_to_condit": [177, 178], "condition_func": 177, "read_to_next_empty_lin": [177, 178], "read_to_next_unindented_lin": [177, 178], "seek_next_non_empty_lin": [177, 178], "deindent": 177, "lvl": 177, "bshell_thr": [177, 201], "get_fetcher_datanam": [177, 178, 243], "available_data": [177, 243], "load_modul": [177, 178], "module_path": 177, "reload": [177, 215], "data_nam": [177, 192], "out_split": [177, 209], "lb": [177, 203, 232], "ub": [177, 203], "out_fnam": 177, "create_directori": [177, 178], "create_output": [177, 178], "file_existence_check": [177, 178], "set_input": [177, 178], "set_out_dir": [177, 178], "set_out_fnam": [177, 178], "set_output_kei": [177, 178], "substr": 177, "dir_str": 177, "prepend": 177, "multi_input": 177, "out_kei": 177, "fnc": 177, "frameobject": 177, "save_mask": [177, 191, 204], "dwi_mask": 177, "park2022": [177, 191], "data_fil": [177, 198, 208], "out_rtop": [177, 198], "out_lapnorm": [177, 198], "lapnorm": [177, 198], "out_msd": [177, 198], "out_qiv": [177, 198], "out_rtap": [177, 198], "out_rtpp": [177, 198], "out_ng": [177, 198], "out_perng": [177, 198], "perng": [177, 198], "out_parng": [177, 198], "parng": [177, 198], "laplacian_sign": [177, 198], "get_fitted_tensor": [177, 178], "optional_arg": 177, "mask_fil": [177, 193, 194, 195, 196, 197, 208], "out_fa": [177, 195, 196], "out_ga": [177, 195, 196], "out_rgb": [177, 195, 196], "out_md": [177, 195, 196], "out_ad": [177, 195, 196], "out_rd": [177, 195, 196], "out_mod": [177, 195, 196], "out_evec": [177, 195, 196], "out_ev": [177, 195, 196], "nifti_tensor": [177, 196], "hung": [177, 196], "frf": [177, 194], "odf_to_sh_ord": [177, 193, 194], "out_pam": [177, 193, 194], "out_shm": [177, 193, 194], "out_peaks_dir": [177, 193, 194], "peaks_dir": 177, "out_peaks_valu": [177, 193, 194], "peaks_valu": 177, "out_peaks_indic": [177, 193, 194], "peaks_indic": 177, "out_gfa": [177, 193, 194], "peak_from_model": [177, 193, 194, 221], "out_dt_tensor": [177, 195], "out_dk_tensor": [177, 195], "dki_tensor": 177, "out_mk": [177, 195], "out_ak": [177, 195], "out_rk": [177, 195], "joseph": [177, 195], "anita": [177, 195], "hanzhang": [177, 195], "kyle": [177, 195], "get_fitted_ivim": [177, 178], "out_s0_predict": [177, 197], "out_perfusion_fract": [177, 197], "out_d_star": [177, 197], "out_d": [177, 197], "sphere_nam": 177, "streamline_fil": [177, 202, 205], "model_bundle_fil": [177, 205], "no_slr": [177, 205], "slr_matrix": [177, 205], "r_reduction_thr": [177, 205], "r_pruning_thr": [177, 205], "no_r_slr": [177, 205], "out_recognized_transf": [177, 205], "out_recognized_label": [177, 205], "tini": [177, 205, 233], "labels_fil": [177, 202], "out_bundl": [177, 202], "recognized_orig": 177, "bbox_threshold": [177, 208], "out_mask_cc": [177, 208], "out_mask_nois": [177, 208], "model_bundle_fold": [177, 183], "subject_fold": [177, 183, 184], "get_metric_nam": [177, 178], "af_l_fa": 177, "h5_file": [177, 182], "save_lmm_plot": [177, 178], "plot_fil": 177, "bundle_nam": 177, "log10": 177, "bundle_fold": 177, "orig_bundle_fold": 177, "metric_fold": 177, "orig_fold": 177, "pam_fil": [177, 210, 211], "stopping_fil": [177, 210], "seeding_fil": [177, 210, 211], "use_binary_mask": [177, 210], "stopping_thr": [177, 210], "binar": [177, 210], "regularli": [22, 177, 210, 211, 226], "closestpeak": [177, 210, 219], "wm_file": [177, 211], "gm_file": [177, 211], "csf_file": [177, 211], "pft_back": [177, 211], "pft_front": [177, 211], "pft_count": [177, 211], "100000000": 177, "icbm_2009a": [177, 200], "emerg": [177, 200], "icbm_2009c": [177, 200], "manage_output_overwrit": [177, 178], "_force_overwrit": 177, "outcom": 177, "liter": [177, 226, 227], "subpackag": 178, "get_info": [178, 213, 214, 248], "_public": [178, 228], "bundlemin": 178, "crosscorr": [178, 222], "expectmax": 178, "parzenhist": 178, "scalespac": 178, "sumsqdiff": 178, "verbositylevel": 178, "write_map": [178, 231], "read_map": 178, "_method_dict": 178, "register_dwi_seri": 178, "determine_num_thread": 178, "distance_matrix_mdf": 178, "deformableregistr": 178, "gaussian_kernel": 178, "low_rank_eigen": 178, "initialize_sigma2": 178, "lowrankq": 178, "compute_cc_backward_step_2d": 178, "compute_cc_backward_step_3d": 178, "compute_cc_forward_step_2d": 178, "compute_cc_forward_step_3d": 178, "precompute_cc_factors_2d": 178, "precompute_cc_factors_2d_test": 178, "precompute_cc_factors_3d": 178, "precompute_cc_factors_3d_test": 178, "compute_em_demons_step_2d": 178, "compute_em_demons_step_3d": 178, "compute_masked_class_stats_2d": 178, "compute_masked_class_stats_3d": 178, "quantize_positive_2d": 178, "quantize_positive_3d": 178, "affineinversionerror": 178, "affineinvalidvalueserror": 178, "_transform_method": 178, "transform_geometric_cent": 178, "transform_origin": 178, "diffeomorphicregistr": [178, 224], "logger": [178, 231], "mult_aff": 178, "get_direction_and_spac": 178, "similaritymetr": 178, "emmetr": 178, "v_cycle_2d": 178, "v_cycle_3d": 178, "parzenjointhistogram": 178, "compute_parzen_mi": 178, "cubic_splin": 178, "cubic_spline_deriv": 178, "sample_domain_regular": 178, "isotropicscalespac": 178, "streamlinedistancemetr": 178, "bundlemindistancematrixmetr": 178, "bundlemindistanceasymmetricmetr": 178, "bundlesumdistancematrixmetr": 178, "jointbundlemindistancemetr": 178, "streamlineregistrationmap": 178, "jointstreamlineregistrationmap": 178, "bundle_sum_dist": 178, "bundle_min_dist": 178, "bundle_min_distance_fast": 178, "bundle_min_distance_asymmetric_fast": 178, "remove_clusters_by_s": 178, "progressive_slr": 178, "slr_with_qbx": [178, 232], "get_unique_pair": 178, "compose_matrix44": 178, "decompose_matrix44": 178, "average_bundle_length": 178, "find_miss": 178, "compute_energy_ssd_2d": 178, "compute_energy_ssd_3d": 178, "compute_residual_displacement_field_ssd_2d": 178, "compute_residual_displacement_field_ssd_3d": 178, "compute_ssd_demons_step_2d": 178, "compute_ssd_demons_step_3d": 178, "iterate_residual_displacement_field_ssd_2d": 178, "iterate_residual_displacement_field_ssd_3d": 178, "solve_2d_symmetric_positive_definit": 178, "solve_3d_symmetric_positive_definit": 178, "affinetransform2d": 178, "rigidisoscalingtransform2d": 178, "rigidisoscalingtransform3d": 178, "rigidscalingtransform2d": 178, "rigidscalingtransform3d": 178, "rigidtransform2d": 178, "rotationtransform2d": 178, "rotationtransform3d": 178, "scalingtransform2d": 178, "scalingtransform3d": 178, "translationtransform2d": [178, 229], "compose_vector_fields_2d": 178, "compose_vector_fields_3d": 178, "create_circl": 178, "create_harmonic_fields_2d": 178, "create_harmonic_fields_3d": 178, "create_random_displacement_2d": 178, "create_random_displacement_3d": 178, "create_spher": 178, "downsample_displacement_field_2d": 178, "downsample_displacement_field_3d": 178, "downsample_scalar_field_2d": 178, "downsample_scalar_field_3d": 178, "invert_vector_field_fixed_point_2d": 178, "invert_vector_field_fixed_point_3d": 178, "is_valid_affin": 178, "reorient_vector_field_2d": 178, "reorient_vector_field_3d": 178, "resample_displacement_field_2d": 178, "resample_displacement_field_3d": 178, "simplify_warp_function_2d": 178, "simplify_warp_function_3d": [178, 215], "sparse_gradi": 178, "warp_2d": 178, "warp_2d_nn": 178, "warp_3d": 178, "warp_3d_nn": 178, "warp_coordinates_2d": 178, "warp_coordinates_3d": 178, "onetim": 178, "sphere_stat": [178, 221, 222], "_tuple2ax": 178, "sphere2cart": [178, 220, 242], "cart2spher": [178, 220, 223], "sph2latlon": 178, "normalized_vector": 178, "vector_norm": [178, 220], "rodrigues_axis_rot": 178, "nearest_pos_semi_def": 178, "sphere_dist": 178, "cart_dist": 178, "vector_cosin": 178, "lambert_equal_area_projection_polar": 178, "lambert_equal_area_projection_cart": 178, "euler_matrix": 178, "compose_matrix": [178, 222], "decompose_matrix": 178, "circumradiu": 178, "vec2vec_rotmat": [178, 213, 229], "compose_transform": 178, "perpendicular_direct": 178, "dist_to_corn": 178, "is_hemispher": [178, 224], "b0_threshold_empty_gradient_messag": 178, "b0_threshold_update_slicing_messag": 178, "mask_non_weighted_bv": 178, "gradient_table_from_bvals_bvec": 178, "gradient_table_from_qvals_bvec": 178, "gradient_table_from_gradient_strength_bvec": 178, "generate_bvec": 178, "round_bval": 178, "get_bval_indic": 178, "check_multi_b": 178, "btens_to_param": 178, "params_to_bten": 178, "ornt_map": 178, "reorient_vector": 178, "reorient_on_axi": 178, "orientation_from_str": 178, "orientation_to_str": 178, "nearestneighborinterpol": 178, "trilinearinterpol": 178, "interpolate_scalar_2d": 178, "interpolate_scalar_3d": 178, "interpolate_scalar_nn_2d": 178, "interpolate_scalar_nn_3d": 178, "interpolate_vector_2d": 178, "interpolate_vector_3d": 178, "map_coordinates_trilinear_iso": 178, "nearestneighbor_interpol": [178, 215], "trilinear_interp": 178, "trilinear_interpolate4d": [178, 224], "resetmixin": 178, "onetimeproperti": 178, "auto_attr": [178, 222], "nonnegativeleastsquar": 178, "sparse_nnl": 178, "wichmannhill2006": 178, "wichmannhill1982": 178, "lecuy": 178, "faces_from_sphere_vertic": 178, "unique_edg": 178, "unique_set": 178, "disperse_charges_alt": 178, "euler_characteristic_check": 178, "octahedron_vertic": 178, "octahedron_fac": 178, "icosahedron_vertic": 178, "icosahedron_fac": 178, "unit_octahedron": 178, "unit_icosahedron": 178, "hemi_icosahedron": 178, "random_uniform_on_spher": [178, 221, 222], "eigenstat": 178, "compare_orientation_set": 178, "angular_similar": 178, "create_unit_hemispher": 178, "cshift3d": 178, "permutationinvers": 178, "afb3d_a": 178, "sfb3d_a": 178, "sfb3d": 178, "afb3d": 178, "dwt3d": 178, "idwt3d": 178, "loads_compat": 178, "data_dir": 178, "get_sim_voxel": 178, "get_skeleton": 178, "get_gtab_taiwan_dsi": 178, "dsi_deconv_voxel": 178, "mrtrix_spherical_funct": 178, "get_cmap": [178, 222], "matlab_life_result": 178, "load_sdp_constraint": 178, "copyfileobj_withprogress": 178, "check_md5": 178, "fetch_data": 178, "fetch_stanford_label": 178, "fetch_resdnn_weight": 178, "fetch_synb0_weight": 178, "fetch_synb0_test": 178, "fetch_evac_weight": 178, "fetch_evac_test": 178, "fetch_stanford_t1": 178, "fetch_stanford_pve_map": [178, 243, 244], "fetch_taiwan_ntu_dsi": 178, "fetch_scil_b0": 178, "fetch_ivim": [178, 243, 244], "fetch_cfin_multib": 178, "fetch_gold_standard_io": [178, 226], "fetch_qte_lte_pt": 178, "fetch_cti_rat1": 178, "fetch_fury_surfac": 178, "fetch_dib_70_lte_pte_st": 178, "fetch_dib_217_lte_pte_st": 178, "fetch_ptt_minimal_dataset": 178, "read_scil_b0": 178, "read_siemens_scil_b0": 178, "read_isbi2013_2shel": 178, "read_sherbrooke_3shel": 178, "read_stanford_label": 178, "read_stanford_hardi": 178, "read_stanford_t1": 178, "read_stanford_pve_map": 178, "read_taiwan_ntu_dsi": 178, "read_syn_data": 178, "fetch_tissue_data": 178, "read_tissue_data": 178, "fetch_cenir_multib": 178, "read_cfin_dwi": 178, "read_cfin_t1": 178, "read_qte_lte_pt": 178, "extract_example_tract": 178, "to_bids_descript": 178, "fetch_hcp": 178, "denspe": [178, 215], "nlmeans_block": 178, "add_padding_reflect": 178, "correspond_indic": 178, "nlmeans_3d": [178, 222], "remove_pad": 178, "gettempdir": 178, "dimensionality_problem_messag": 178, "create_patch_radius_arr": 178, "compute_patch_s": 178, "compute_num_sampl": 178, "compute_suggested_patch_radiu": 178, "firdn": 178, "upfir": 178, "convolve_sf": 178, "ptt_direction_gett": 178, "peak_directions_nl": 178, "reshape_peaks_for_visu": 178, "shcoeffpmfgen": 178, "simplepmfgen": 178, "min_radius_curvature_from_angl": 178, "read_bvec_fil": 178, "save_qa_metr": 178, "load_peak": [178, 225], "save_peak": 178, "peaks_to_nifti": 178, "set_sft_logger_level": 178, "load_gener": 178, "save_gener": 178, "load_trx": 178, "load_vtk": 178, "load_vtp": 178, "load_fib": 178, "load_dpi": 178, "save_trx": 178, "save_vtk": 178, "save_vtp": 178, "save_fib": 178, "save_dpi": 178, "nifti1_symmat": 178, "make5d": 178, "decfa": [178, 219, 224], "decfa_to_float": 178, "is_reference_info_valid": 178, "split_name_with_gz": 178, "save_buan_profiles_hdf5": 178, "read_img_arr_or_path": 178, "save_polydata": 178, "save_vtk_streamlin": [178, 226], "load_vtk_streamlin": [178, 226], "cnn_1d_denois": 178, "cnn1ddenois": 178, "channelsum": 178, "evacplu": 178, "prepare_img": 178, "init_model": 178, "singlelayerperceptron": 178, "multiplelayerpercepton": 178, "encoderblock": 178, "decoderblock": 178, "unet3d": 178, "unnorm": 178, "set_logger_level": 178, "transform_img": 178, "recover_img": 178, "correct_minor_error": 178, "multi_voxel": [178, 220, 226], "quick_squash": 178, "recspe": 178, "vec_val_sum": 178, "coeff_of_determin": 178, "axsymshrespons": 178, "constrainedsdtmodel": 178, "estimate_respons": 178, "forward_sdt_deconv_mat": 178, "odf_deconv": 178, "fa_trace_to_lambda": 178, "from_qte_to_cti": 178, "multi_gaussian_k_from_c": 178, "split_cti_param": 178, "cti_predict": 178, "params_to_cti_param": 178, "ls_fit_cti": 178, "carlson_rf": 178, "carlson_rd": 178, "directional_diffus": 178, "directional_diffusion_vari": 178, "directional_kurtosi": 178, "apparent_kurtosis_coef": 178, "radial_kurtosi": 178, "kurtosis_maximum": 178, "mean_kurtosis_tensor": 178, "kurtosis_fractional_anisotropi": 178, "dki_predict": 178, "params_to_dki_param": 178, "ls_fit_dki": 178, "cls_fit_dki": 178, "wrotat": 178, "wrotate_el": 178, "wcon": 178, "split_dki_param": 178, "kurtosismicrostructuralfit": 178, "axonal_water_fract": 178, "diffusion_compon": 178, "dkimicro_predict": 178, "diffusionspectrumfit": 178, "diffusionspectrumdeconvfit": 178, "create_qspac": 178, "create_qt": 178, "hanning_filt": 178, "pdf_interp_coord": 178, "pdf_odf": [178, 220], "half_to_full_qspac": 178, "project_hemisph_bvec": 178, "threshold_propag": 178, "gen_psf": 178, "lr_deconv": 178, "geodesic_anisotropi": 178, "axial_diffus": 178, "radial_diffus": 178, "deviator": 178, "apparent_diffusion_coef": 178, "tensor_predict": 178, "iter_fit_tensor": [178, 213], "wls_fit_tensor": 178, "ols_fit_tensor": 178, "nlls_fit_tensor": 178, "restore_fit_tensor": 178, "_lt_indic": 178, "_lt_row": 178, "_lt_col": 178, "quantize_evec": [178, 215, 226], "eig_from_lo_tri": [178, 222], "forecastfit": 178, "find_signal_mean": 178, "forecast_error_func": 178, "psi_l": 178, "forecast_matrix": 178, "rho_matrix": 178, "lb_forecast": 178, "fwdti_predict": 178, "wls_iter": 178, "nls_iter": 178, "nls_fit_tensor": 178, "lower_triangular_to_choleski": 178, "cholesky_to_lower_triangular": 178, "generalizedqsamplingfit": 178, "normalize_qa": 178, "squared_radial_compon": 178, "npa": 178, "equatorial_zone_vertic": 178, "polar_zone_vertic": 178, "upper_hemi_map": 178, "equatorial_maximum": 178, "patch_vertic": 178, "patch_maximum": 178, "odf_sum": 178, "patch_sum": 178, "triple_odf_maxima": 178, "ivimmodeltrr": 178, "ivimmodelvp": 178, "ivim_predict": 178, "f_d_star_predict": 178, "f_d_star_error": 178, "ivim_model_selector": 178, "mapmrifit": 178, "isotropic_scale_factor": 178, "mapmri_index_matrix": 178, "b_mat": 178, "b_mat_isotrop": 178, "mapmri_phi_1d": 178, "mapmri_phi_matrix": 178, "mapmri_psi_1d": 178, "mapmri_psi_matrix": 178, "mapmri_odf_matrix": 178, "mapmri_isotropic_phi_matrix": 178, "mapmri_isotropic_radial_signal_basi": 178, "mapmri_isotropic_m_mu_independ": 178, "mapmri_isotropic_m_mu_depend": 178, "mapmri_isotropic_psi_matrix": 178, "mapmri_isotropic_radial_pdf_basi": 178, "mapmri_isotropic_k_mu_independ": 178, "mapmri_isotropic_k_mu_depend": 178, "binomialfloat": 178, "mapmri_isotropic_odf_matrix": 178, "mapmri_isotropic_odf_sh_matrix": 178, "mapmri_isotropic_laplacian_reg_matrix": 178, "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix": 178, "mapmri_isotropic_index_matrix": 178, "create_rspac": 178, "map_laplace_u": 178, "map_laplace_t": 178, "map_laplace_": 178, "mapmri_stu_reg_matric": 178, "mapmri_laplacian_reg_matrix": 178, "generalized_crossvalidation_arrai": 178, "generalized_crossvalid": 178, "gcv_cost_funct": 178, "msdeconvfit": 178, "qpfitter": 178, "multi_tissue_basi": 178, "solve_qp": [178, 227, 232], "meandiffusionkurtosisfit": 178, "mean_signal_bvalu": 178, "msk_from_awf": 178, "awf_from_msk": 178, "msdki_predict": 178, "wls_fit_msdki": 178, "multivoxelfit": 178, "callablearrai": 178, "multi_voxel_fit": [178, 230], "odfmodel": 178, "odffit": 178, "minmax_norm": [178, 221, 224], "qtdmrifit": 178, "qtdmri_to_mapmri_matrix": 178, "qtdmri_isotropic_to_mapmri_matrix": 178, "qtdmri_temporal_norm": 178, "qtdmri_mapmri_norm": 178, "qtdmri_mapmri_isotropic_norm": 178, "qtdmri_signal_matrix_": 178, "qtdmri_signal_matrix": 178, "qtdmri_eap_matrix": 178, "qtdmri_isotropic_signal_matrix_": 178, "qtdmri_isotropic_signal_matrix": 178, "qtdmri_eap_matrix_": 178, "qtdmri_isotropic_eap_matrix_": 178, "qtdmri_isotropic_eap_matrix": 178, "radial_basis_opt": 178, "angular_basis_opt": 178, "radial_basis_eap_opt": 178, "angular_basis_eap_opt": 178, "temporal_basi": 178, "qtdmri_index_matrix": 178, "qtdmri_isotropic_index_matrix": 178, "qtdmri_laplacian_reg_matrix": 178, "qtdmri_isotropic_laplacian_reg_matrix": 178, "part23_reg_matrix_q": 178, "part23_iso_reg_matrix_q": 178, "part4_reg_matrix_q": 178, "part4_iso_reg_matrix_q": 178, "part1_reg_matrix_tau": 178, "part23_reg_matrix_tau": 178, "part4_reg_matrix_tau": 178, "qtdmri_isotropic_sc": 178, "qtdmri_anisotropic_sc": 178, "design_matrix_spati": 178, "create_rt_space_grid": 178, "qtdmri_number_of_coeffici": 178, "l1_crossvalid": 178, "elastic_crossvalid": 178, "from_3x3_to_6x1": 178, "from_6x1_to_3x3": 178, "from_6x6_to_21x1": 178, "from_21x1_to_6x6": 178, "cvxpy_1x6_to_3x3": 178, "cvxpy_1x21_to_6x6": 178, "dtd_covari": 178, "qti_sign": 178, "adj_to_countarr": 178, "argmax_from_adj": 178, "argmax_from_countarr": 178, "le_to_odf": 178, "local_maxima": 178, "proc_reco_arg": 178, "remove_similar_vertic": [178, 220], "search_descend": 178, "sum_on_blocks_1d": 178, "rumba_deconv": 178, "mbessel_ratio": 178, "generate_kernel": 178, "rumba_deconv_glob": 178, "isotropicmodel": 178, "isotropicfit": 178, "exponentialisotropicmodel": 178, "exponentialisotropicfit": 178, "sparsefasciclefit": 178, "sfm_design_matrix": 178, "sphharmmodel": [178, 221], "qballbasemodel": [178, 224], "sphharmfit": [178, 221], "opdtmodel": 178, "residualbootstrapwrapp": 178, "forward_sdeconv_mat": 178, "sh_to_rh": 178, "gen_dirac": 178, "spherical_harmon": 178, "real_sph_harm": [178, 215], "real_sh_tournier_from_index": 178, "real_sh_descoteaux_from_index": 178, "real_sh_tourni": 178, "real_sym_sh_mrtrix": 178, "real_sym_sh_basi": 178, "sph_harm_ind_list": 178, "order_from_ncoef": [178, 233], "smooth_pinv": 178, "lazy_index": 178, "normalize_data": 178, "lcr_matrix": [178, 233], "bootstrap_data_arrai": 178, "bootstrap_data_voxel": 178, "calculate_max_ord": [178, 218], "convert_sh_to_full_basi": 178, "convert_sh_from_legaci": 178, "convert_sh_to_legaci": [178, 231], "shorefit": 178, "shore_matrix": 178, "shore_matrix_pdf": 178, "shore_matrix_odf": 178, "l_shore": 178, "n_shore": 178, "shore_indic": 178, "shore_ord": 178, "dki_design_matrix": 178, "cti_design_matrix": 178, "vec_val_vect": [178, 220], "clustering_algorithm": 178, "clusteringspe": 178, "cythonutil": 178, "check_rang": 178, "bundle_adjac": 178, "ba_analysi": 178, "cluster_bundl": 178, "clustercentroid": 178, "treeclust": 178, "treeclustermap": 178, "qbx_and_merg": 178, "clusters_centroid2clustermap_centroid": 178, "clusterscentroid": 178, "evaluate_aabb_check": 178, "cythonfeatur": 178, "nearest_from_matrix_col": 178, "applymask": 178, "clean_cc_mask": 178, "mean_manhattan_dist": 178, "mean_euclidean_dist": 178, "cythonmetr": 178, "minimumaveragedirectflipmetr": 178, "constantobservationmodel": 178, "iteratedconditionalmod": 178, "upper_bound_by_r": 178, "upper_bound_by_perc": 178, "diff2eigenvector": 178, "orbital_phantom": 178, "diffusion_ev": 178, "callaghan_perpendicular": 178, "gaussian_parallel": 178, "cylinders_and_ball_soderman": 178, "kurtosis_el": 178, "dki_sign": [178, 215], "all_tensor_evec": [178, 223], "single_tensor_rtop": 178, "multi_tensor_rtop": 178, "single_tensor_pdf": 178, "multi_tensor_pdf": 178, "single_tensor_msd": 178, "multi_tensor_msd": 178, "propspe": [178, 222], "streamlinespe": [178, 215, 222], "vox2track": 178, "add_3vec": 178, "approximate_mdl_trajectori": 178, "bundles_distances_mam": 178, "bundles_distances_mdf": [178, 230], "cut_plan": 178, "inner_3vec": 178, "intersect_segment_cylind": 178, "larch_3merg": 178, "larch_3split": 178, "lee_angle_dist": 178, "lee_perpendicular_dist": 178, "local_skeleton_clust": 178, "local_skeleton_clustering_3pt": 178, "mam_dist": 178, "minimum_closest_dist": 178, "most_similar_track_mam": 178, "mul_3vec": 178, "norm_3vec": 178, "normalized_3vec": 178, "point_segment_sq_dist": 178, "point_track_sq_distance_check": 178, "sub_3vec": 178, "track_dist_3pt": 178, "track_roi_intersection_check": 178, "kdtree": 178, "interp1d": 178, "compute_rfbc": 178, "min_moving_averag": 178, "detect_corresponding_track": 178, "detect_corresponding_tracks_plu": 178, "lifesignalmak": 178, "streamline_sign": 178, "streamline_gradi": 178, "grad_tensor": 178, "streamline_tensor": 178, "pft_tracker": 178, "triangles_area": 178, "vertices_to_triangles_valu": 178, "wind": [178, 215], "midpoint": 178, "frenet_serret": 178, "mean_curvatur": 178, "mean_orient": 178, "generate_combin": 178, "longest_track_bundl": 178, "intersect_spher": 178, "inside_spher": 178, "inside_sphere_point": 178, "arbitrarypoint": 178, "principal_compon": 178, "midpoint2point": 178, "eudx_both_direct": 178, "ndarray_offset": 178, "relist_streamlin": 178, "center_streamlin": 178, "compress_streamlin": [178, 213, 231], "ndbincount": 178, "reduce_label": 178, "subseg": 178, "streamline_near_roi": [178, 230], "unique_row": [178, 222], "transform_tracking_output": [178, 233], "reduce_roi": [178, 230], "max_angle_from_curvatur": 178, "streamline_map": [178, 217], "track_count": 178, "gmem": 178, "app": 178, "globalhorizon": 178, "horizonuiel": 178, "horizontab": 178, "tabmanag": 178, "build_slid": 178, "build_checkbox": 178, "build_switch": 178, "color_single_slid": 178, "color_double_slid": 178, "clusterstab": 178, "peakstab": 178, "roistab": 178, "slicestab": 178, "check_img_shap": 178, "clustersvisu": 178, "slicesvisu": 178, "slicer_panel": 178, "bundle_shape_profil": 178, "sph_project": [178, 220, 222], "simple_plot": 178, "draw_lattice_2d": 178, "plot_slic": 178, "docstring_pars": 178, "multi_io": [178, 216, 218], "resliceflow": 178, "slrwithqbxflow": 178, "applytransformflow": 178, "synregistrationflow": [178, 232], "bundlewarpflow": 178, "check_dimens": 178, "introspectiveargumentpars": 178, "get_args_default": 178, "none_or_dtyp": 178, "patch2selfflow": 178, "mppcaflow": 178, "gibbsringingflow": 178, "numpydocstr": 178, "dedent_lin": 178, "get_level": 178, "ioinfoflow": 178, "splitflow": [178, 225], "maskflow": 178, "common_start": 178, "slash_to_und": 178, "connect_output_path": 178, "concatenate_input": 178, "basename_without_extens": 178, "io_iter": 178, "io_iterator_": 178, "evacplusflow": 178, "reconstmapmriflow": 178, "reconstdtiflow": 178, "reconstcsdflow": 178, "reconstcsaflow": 178, "reconstdkiflow": 178, "reconstivimflow": 178, "reconstrumbaflow": 178, "recobundlesflow": 178, "labelsbundlesflow": 178, "snrinccflow": 178, "bundleanalysistractometryflow": 178, "linearmixedmodelsflow": 178, "bundleshapeanalysi": 178, "buan_bundle_profil": 178, "localfibertrackingpamflow": 178, "pftrackingpamflow": 178, "horizonflow": 178, "alphabet": 213, "1022": [82, 84, 213, 215, 224], "qixiang": 213, "gonzalo": 213, "232": [83, 213, 221], "github_stat": [21, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "769": [82, 84, 213], "altogeth": 213, "772": [72, 74, 82, 213], "xvfb": 213, "headless": 213, "754": [61, 82, 213], "car": 213, "gitter": [213, 214, 217, 226, 236], "chat": [213, 214, 217], "753": [73, 82, 213], "tst": [213, 214, 215, 217, 218, 220, 222, 225, 226, 227], "767": [82, 213], "offscreen": 213, "test_slic": 213, "768": [73, 82, 213], "766": [82, 213], "751": [73, 82, 213], "765": 213, "757": [82, 213], "587": [82, 213], "pr1": [213, 223], "748": [82, 84, 213], "_to_voxel_toler": 213, "678": [82, 213], "714": [73, 82, 213], "739": [82, 213], "733": [82, 213, 233], "743": [82, 213], "memleak": 213, "sinkpoint": 213, "741": [82, 213], "randint": [213, 219], "727": [82, 213], "726": [33, 82, 84, 213], "729": [72, 82, 213], "736": [72, 82, 213], "tk": 213, "735": [73, 79, 82, 85, 93, 213], "732": [82, 213], "wip": [213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "731": [82, 213], "640": [82, 213], "682": [82, 213], "716": [82, 213], "699": [73, 82, 213], "712": [72, 82, 213], "gh707": 213, "713": [82, 213], "677": [82, 213], "pr3": 213, "721": [82, 213], "572": [70, 73, 82, 213], "708": [82, 213], "707": [82, 213, 224], "709": [82, 213], "703": [72, 74, 82, 213], "705": [82, 84, 213], "702": [82, 213], "689": [82, 87, 213], "681": [73, 80, 213], "da": [213, 230], "696": [82, 213], "691": [72, 82, 213], "661": [79, 82, 213], "690": [40, 82, 87, 213], "segfault": [213, 218, 221], "667": [82, 213], "sourceforg": 213, "makefil": 213, "gh": [213, 222], "upl": 213, "676": [31, 73, 82, 213, 218], "infrastructur": 213, "533": [82, 213], "mrg": [213, 214, 215, 216, 217, 221, 222], "686": 213, "pyhon26": 213, "683": 213, "654": [82, 213], "684": [82, 84, 213], "674": [82, 84, 213], "679": [82, 93, 213], "680": [72, 82, 213], "664": [73, 84, 213], "pr2": 213, "671": [82, 92, 213], "663": [73, 82, 213], "usherbrook": [213, 243, 244], "648": [82, 213], "582": [82, 213], "660": 213, "612": [82, 213], "wrt": 213, "651": [82, 213], "659": [82, 213], "658": [82, 213], "resav": 213, "657": [73, 82, 213], "628": [30, 40, 73, 82, 213], "637": [73, 82, 85, 213], "639": [72, 82, 213], "614": 213, "633": [82, 213], "tissuetyp": 213, "632": [82, 87, 213], "627": [79, 82, 213], "626": [82, 84, 213], "loosevers": 213, "625": [82, 213], "624": [73, 213], "619": [82, 213], "618": [82, 213], "616": [30, 35, 82, 84, 213], "576": [82, 213], "615": [82, 213, 243, 244], "387": [79, 80, 82, 83, 84, 213, 218], "610": [72, 73, 82, 213], "609": [82, 213], "607": [82, 84, 213], "606": 213, "605": [82, 213], "594": [213, 223], "771": [79, 82, 213], "761": [73, 213], "dconn": 213, "723": [73, 82, 213], "738": [82, 87, 213], "tkinter": 213, "752": [82, 213], "mesa": 213, "763": 213, "764": [82, 213], "404": [29, 30, 79, 80, 82, 83, 84, 87, 213, 223, 225], "286": [82, 83, 87, 213], "cleanup": [213, 215, 220, 221, 222, 223, 226, 229, 230], "755": [58, 82, 213], "test_shm": 213, "test_sf_to_sh": 213, "typeerror": [213, 221, 222, 232], "same_kind": 213, "737": [82, 84, 213], "672": [82, 213], "730": [82, 213], "734": [73, 82, 213], "688": [35, 82, 213], "cento": [213, 218], "python2": 213, "725": [72, 82, 213], "conda": [19, 22, 213, 215, 216, 218, 223, 233, 248], "611": [82, 213], "715": [82, 84, 213], "719": [82, 213], "693": [73, 82, 213], "694": [82, 213], "timeout": [213, 222, 227, 230], "697": [82, 213], "test_spher": 213, "test_interp_rbf": 213, "649": [82, 213], "656": [82, 213], "701": [82, 213], "704": [69, 82, 213], "hyp1f1": 213, "622": [72, 80, 82, 213], "233": [82, 83, 87, 104, 213, 222], "652": 213, "653": [72, 82, 213], "revisit": [213, 221], "cuba": 213, "655": [72, 82, 84, 213], "638": 213, "630": [72, 82, 213], "623": [82, 213], "604": [27, 82, 213], "arm": [22, 213], "613": [82, 213], "test_vector_field": [213, 215], "test_reorient_vector_field_2d": 213, "icon": [213, 218], "nanmean": [213, 223], "271": [82, 83, 92, 214], "933": [72, 74, 82, 85, 214, 215], "925": [74, 82, 85, 111, 115, 214], "915": [74, 82, 85, 214], "dipy_quickbundl": 214, "922": [74, 85, 214], "921": [74, 82, 85, 214], "918": [73, 74, 85, 214], "test_expectmax": 214, "917": [74, 82, 85, 214], "916": [74, 82, 85, 214], "908": [74, 82, 85, 214], "911": [74, 82, 85, 214], "904": [74, 82, 85, 214], "851": [72, 82, 85, 214], "upcom": [214, 216, 222, 224, 225, 229, 232, 233], "856": [74, 82, 85, 214], "room": 214, "762": [72, 73, 82, 214], "816": [74, 82, 214], "811": [74, 82, 85, 214], "853": [73, 74, 82, 85, 214], "miscellan": [214, 230, 231, 233], "849": [74, 82, 84, 85, 214], "850": [82, 85, 214], "848": [72, 73, 74, 82, 85, 214], "847": [82, 85, 214], "845": [74, 80, 82, 85, 214], "examples_index": 214, "846": [73, 74, 82, 85, 214], "826": [72, 73, 74, 82, 85, 214], "841": [73, 79, 87, 214], "839": [74, 82, 84, 85, 87, 214], "819": [74, 82, 84, 85, 214], "843": [85, 214], "838": [82, 85, 214], "833": [73, 74, 85, 214], "817": [74, 82, 85, 214], "695": [52, 61, 79, 82, 84, 214], "829": [74, 82, 84, 85, 214], "813": [82, 85, 214, 215], "830": [72, 74, 85, 214], "825": [72, 82, 85, 214], "toollib": 214, "802": [82, 214], "760": [82, 129, 131, 214], "824": [82, 214], "815": [82, 85, 214], "anymor": [214, 218, 220, 222, 227, 231], "669": [82, 214], "moco": 214, "809": [74, 82, 84, 85, 214], "821": [82, 85, 214], "revert": [214, 215, 218, 220, 222], "commit_info": 214, "818": [82, 85, 214], "797": [72, 82, 85, 214], "806": [79, 85, 214], "814": [82, 85, 214, 221], "745": [82, 214], "807": [82, 85, 214], "shebang": [214, 215], "801": [82, 87, 214], "886": [73, 74, 85, 214], "863": [74, 82, 85, 214], "919": [73, 74, 82, 84, 85, 214], "896": [73, 74, 82, 85, 214, 215], "906": [73, 74, 82, 85, 214], "890": [74, 82, 84, 85, 214], "905": [74, 85, 214], "broken": [214, 215, 216, 217, 218, 219, 222, 224, 225, 226, 232, 233], "898": [72, 73, 74, 82, 85, 214], "891": [73, 74, 82, 85, 113, 115, 214, 215], "892": [73, 74, 79, 82, 85, 214], "894": [73, 74, 82, 85, 214], "895": [74, 80, 82, 85, 214], "893": [85, 214], "860": [72, 74, 82, 85, 214], "badg": [214, 215, 216, 217, 218, 230], "692": [82, 214], "quickstart": [214, 218], "822": [72, 85, 214], "me": 214, "urlerror": 214, "urlopen": 214, "errno": 214, "10060": 214, "840": [73, 74, 82, 85, 214], "855": [73, 74, 85, 214], "3rc": 214, "153": [73, 82, 83, 84, 214, 229], "665": [82, 214], "macosx": 214, "758": [82, 84, 214], "842": [73, 82, 85, 214], "805": [71, 73, 82, 85, 214], "812": [73, 74, 85, 214], "685": [82, 214, 228], "pr5": [214, 228], "666": [82, 214], "747": [53, 72, 82, 214], "631": [82, 88, 214], "820": [72, 82, 85, 214], "hash": [214, 218], "810": [73, 82, 84, 85, 214], "_voxel2stream": 214, "803": [82, 214], "vm": [22, 214], "1491": [73, 82, 215, 217], "antonio": 215, "ossa": 215, "etienn": [215, 229, 232], "julio": 215, "villalon": 215, "manu": 215, "sharma": [215, 218, 219], "gonzalez": 215, "riddhish": 215, "bhalodia": 215, "sourav": 215, "singh": [215, 217], "stong": 215, "guillaum": [215, 216, 218], "theaud": [215, 216, 218], "tingyi": 215, "wanyan": 215, "wright": 215, "vibhatha": 215, "abeykoon": 215, "theaveragegui": 215, "511": [92, 215, 222], "342": [72, 73, 79, 82, 83, 215, 227], "1273": 215, "1272": [82, 215], "1269": [82, 215], "1271": [74, 82, 215], "tut": 215, "1268": [82, 215], "1243": [82, 215], "1223": [87, 215], "1270": [82, 215], "1263": 215, "mismatch": [215, 218], "1254": [71, 215], "1261": [73, 215], "1255": [82, 84, 215], "1260": [82, 215], "1241": 215, "1250": [33, 35, 82, 215], "1244": [82, 215], "1235": [82, 215], "1231": [82, 215, 243, 244], "1233": [82, 215], "dipy_hom": 215, "1234": [84, 215], "ascii": [215, 217, 221, 222], "1222": [82, 215], "lightweight": [215, 216, 218], "1228": 215, "1227": [82, 215], "1226": [82, 215], "1229": [73, 82, 215], "1225": [82, 215], "1219": [93, 215], "dropbox": 215, "1221": [82, 215], "1212": [73, 82, 215], "1217": [80, 82, 215], "1205": [82, 215], "1166": [82, 215], "1216": [82, 215], "1214": [82, 84, 215], "clarif": 215, "simplify_warp_funcion_3d": 215, "1206": [82, 215], "1204": [73, 82, 84, 215], "1196": [73, 82, 215], "1199": [82, 215], "1202": [82, 215], "1198": [82, 215], "1201": [82, 215], "cla": 215, "1052": [74, 82, 84, 215], "1183": [53, 82, 84, 215], "textbox": 215, "1186": [82, 215], "wheelhous": 215, "1195": [82, 215], "assert_arrays_equ": 215, "1193": [73, 82, 215], "accent": [215, 224], "anticip": 215, "1140": [72, 82, 215], "1171": [82, 215], "int64": 215, "1123": [84, 215], "1174": [82, 84, 215], "1177": [62, 73, 215], "1162": [73, 82, 215], "1147": [82, 215], "1050": [74, 215], "1082": [82, 215], "1153": [82, 215], "1159": [82, 215], "1157": [82, 215], "get_head": 215, "1160": [82, 215], "1158": 215, "1151": [82, 87, 215], "fmin": 215, "studio": [22, 215], "1149": [82, 215], "1137": [82, 215], "942": [73, 74, 82, 85, 215], "1141": [82, 215], "1098": [82, 215], "1136": [82, 215], "1113": [82, 84, 215], "1134": [82, 84, 215], "993": [74, 134, 215], "1064": [73, 82, 215], "1114": [82, 215], "pathlength": 215, "1132": 215, "1125": [73, 82, 215], "1130": 215, "1092": [82, 215], "1129": [82, 215], "1127": [53, 82, 215], "1034": [73, 82, 85, 215], "1060": [82, 215], "1124": [82, 215], "1110": [82, 215], "1120": [82, 215], "1119": [82, 215], "1075": [74, 82, 215], "drop26": 215, "835": [82, 85, 215, 234], "1046": [73, 82, 215], "nbr_process": 215, "1049": [74, 82, 88, 215], "1087": [73, 82, 215], "1112": [82, 215], "1106": [72, 73, 82, 215], "1066": [74, 82, 215], "1091": [82, 215], "python3": [215, 216, 225, 233], "1105": [74, 82, 215], "imp": 215, "1102": [82, 215], "py35": 215, "1100": 215, "1094": 215, "1059": [82, 215], "1061": 215, "1089": [82, 215], "1079": [74, 82, 215], "1080": [82, 215], "828": [73, 82, 85, 215], "1072": [82, 215], "1025": [73, 82, 87, 215], "1077": [82, 215], "1069": [72, 74, 82, 85, 215], "1068": [82, 215], "test_shor": 215, "1067": [72, 73, 74, 215], "omp": [19, 215], "1062": [82, 84, 215], "1056": 215, "1028": [72, 74, 79, 82, 85, 215], "1041": [74, 82, 93, 215], "1039": [82, 215], "1019": [74, 82, 215], "heavi": 215, "1018": [73, 74, 82, 87, 215], "1035": [82, 215], "974": [74, 82, 85, 215], "1021": [74, 82, 215], "1024": [73, 82, 85, 215], "981": [74, 82, 85, 215], "979": [74, 87, 215], "958": [73, 74, 82, 85, 215], "1005": [74, 82, 85, 215], "951": [74, 82, 85, 215], "1015": [74, 82, 215], "progressbar": [215, 227], "992": [74, 82, 215], "1003": [72, 82, 85, 215], "1004": [74, 82, 85, 215], "pkg_info": 215, "1006": [73, 74, 85, 215], "1010": [74, 82, 215], "929": [74, 82, 85, 215], "941": [74, 82, 85, 215], "976": [74, 82, 85, 215], "956": [74, 79, 82, 85, 87, 95, 215, 222, 234], "955": [73, 74, 82, 85, 215], "952": [74, 82, 85, 215], "982": [74, 82, 215], "972": [74, 85, 215, 220], "901": [74, 82, 85, 215], "971": [74, 82, 85, 215], "989": [85, 215], "977": [50, 61, 74, 82, 85, 215], "957": [74, 82, 85, 215], "959": [74, 82, 85, 215], "967": [74, 82, 215], "954": [74, 82, 85, 87, 88, 215], "948": [72, 73, 74, 82, 85, 87, 215], "test_sumsqdiff": 215, "test_scalespac": 215, "964": [74, 82, 85, 215], "test_imaffin": 215, "963": [59, 61, 73, 74, 82, 215], "947": [37, 74, 80, 82, 85, 215], "897": [74, 82, 85, 87, 215], "926": [74, 85, 215], "937": [61, 73, 74, 85, 215], "clamp": 215, "907": [73, 74, 82, 85, 215], "mathjax": 215, "932": [74, 85, 215], "931": [74, 82, 85, 87, 215], "927": [40, 74, 82, 85, 215], "test_bvectxt": 215, "913": [73, 74, 82, 85, 215], "935": [73, 74, 82, 85, 215], "934": [46, 48, 74, 85, 215], "todai": 215, "1143": [73, 82, 215], "1246": [82, 215], "1265": [32, 82, 215], "test_nlmeans_4d_3dsigma_and_thread": 215, "1251": [82, 215], "1238": [82, 215], "cryptic": 215, "1242": [82, 215], "intermittenli": 215, "1252": [82, 215], "revamp": 215, "1179": [36, 82, 215], "1253": [82, 215], "1001": [74, 82, 84, 215], "1258": [82, 215], "369": [82, 83, 215], "1155": [82, 215], "1070": [72, 74, 79, 82, 215], "711": [82, 215], "api_chang": 215, "321": [53, 72, 83, 215], "994": [74, 82, 85, 215], "608": [73, 82, 215], "test_imwarp": 215, "591": [72, 73, 79, 82, 215], "seed_from_mask": [215, 224], "518": [80, 82, 215], "328": [72, 82, 83, 215], "incompat": [215, 222, 231, 232], "1210": [82, 215], "1209": [82, 215], "909": [74, 82, 84, 85, 215], "inconsist": [215, 222, 227, 228], "1182": [82, 215], "1211": [72, 215], "1027": [73, 82, 215], "1218": [82, 215], "1215": 215, "tracking_quick_start": [215, 216, 222], "1213": [73, 82, 215], "1191": [82, 215], "1207": [79, 82, 215], "1107": [73, 82, 215], "swallow": [215, 226], "rework": [215, 220, 222], "1188": [72, 82, 215], "1187": [82, 215], "1170": [82, 215], "1086": [82, 215], "1173": [82, 215], "1190": [82, 215], "test_peaksfrommodelparallel": 215, "1189": [82, 215], "np1": 215, "1139": [82, 215], "1142": 215, "streamlines_format": 215, "1097": 215, "1163": [40, 82, 215], "940": [73, 74, 82, 84, 85, 215], "1040": [74, 82, 215], "ivim_linear": 215, "1128": [82, 215], "1138": 215, "1148": [82, 215], "740": [82, 215], "1045": [82, 215], "1154": [82, 84, 215], "1145": [82, 215], "827": [72, 73, 82, 85, 215], "1051": [82, 215], "673": 215, "859": [74, 82, 84, 85, 215], "983": [73, 74, 82, 215], "884": [73, 74, 82, 85, 87, 215], "984": [35, 74, 85, 215], "1009": [73, 74, 82, 215], "1036": [74, 82, 85, 215], "anaconda": [22, 215, 216, 218, 227], "973": [73, 74, 82, 85, 215], "1121": 215, "1083": [82, 84, 87, 215], "332": [72, 82, 83, 215], "nipyp": [215, 230], "1116": [82, 215], "bufferediobas": 215, "351": [72, 79, 80, 82, 83, 84, 215], "912": [73, 74, 85, 215], "1104": [82, 215], "367": [80, 82, 83, 215, 222], "1101": [82, 85, 215], "1085": [74, 82, 215], "1081": 215, "1031": [74, 82, 215], "1071": [74, 82, 215], "1037": [72, 82, 85, 215], "1078": [24, 215], "953": [73, 74, 82, 85, 93, 215], "883": [73, 74, 82, 85, 215], "1011": [74, 82, 215], "1055": [74, 82, 215], "1057": [82, 215], "workaround": [215, 221], "slowadcopdfmodel": 215, "1054": [82, 215], "1043": [73, 74, 82, 215], "899": [73, 74, 82, 85, 215], "991": [73, 74, 215], "footer": 215, "1008": [74, 82, 215], "charm": 215, "1033": [74, 82, 215], "1032": [82, 84, 215], "1029": [74, 82, 215], "1014": [74, 215], "1013": [74, 82, 85, 215], "make_fetch": 215, "1020": [74, 215], "1023": [74, 82, 215], "882": [74, 82, 85, 215], "885": [73, 74, 82, 85, 215], "902": [73, 74, 82, 85, 215], "997": [74, 82, 215], "675": [36, 82, 215], "stabilis": 215, "1012": [73, 74, 82, 84, 215], "996": [74, 82, 85, 215], "998": [73, 74, 80, 82, 215], "1007": [74, 82, 215], "980": [74, 82, 84, 85, 215], "1017": [74, 82, 215], "877": [74, 82, 85, 215], "887": [74, 82, 85, 215], "995": [25, 74, 85, 215], "344": [72, 79, 82, 83, 215], "970": [73, 74, 82, 84, 215], "986": [74, 85, 215], "pip3": [215, 226], "990": [74, 82, 84, 107, 115, 215], "988": [74, 82, 85, 215], "975": [74, 82, 85, 215], "517": [82, 84, 215], "960": [74, 82, 84, 85, 215], "961": [74, 82, 85, 215], "880": [74, 84, 85, 215, 216], "962": [74, 82, 85, 215], "889": [60, 61, 74, 85, 102, 103, 215, 234], "866": [74, 82, 85, 215], "test_metr": 215, "867": [82, 85, 215], "test_parzenhist": 215, "868": [73, 74, 82, 85, 215], "869": [73, 74, 82, 84, 85, 215], "870": [74, 82, 85, 215], "test_transform": 215, "871": [74, 82, 85, 215], "864": [73, 74, 85, 215], "862": [74, 82, 85, 215], "test_crosscorr": 215, "873": [74, 82, 85, 215], "831": [73, 82, 85, 97, 215], "weird": 215, "876": [73, 74, 82, 85, 215], "968": [72, 74, 82, 85, 215], "872": [74, 82, 85, 215], "966": [74, 82, 85, 215], "920": [73, 74, 215], "950": [74, 82, 84, 85, 215], "949": [74, 82, 85, 215], "878": [73, 74, 85, 215], "939": [73, 74, 79, 82, 85, 215], "945": [74, 85, 215], "indent": 215, "unus": [215, 222, 224, 225, 230, 232, 233], "924": [74, 82, 85, 215], "879": [73, 74, 82, 215], "938": [74, 82, 85, 215], "212": [73, 82, 83, 216, 221], "bennet": [216, 217], "fauber": [216, 217], "saber": 216, "sheybani": 216, "115": [82, 83, 102, 114, 135, 216], "1367": [82, 84, 216], "1361": [82, 216], "1316": [82, 216], "1360": [82, 216], "1348": [82, 216], "1357": [82, 84, 216], "1332": [82, 216], "1239": 216, "1356": [72, 82, 216], "1351": 216, "1353": 216, "epilogu": 216, "1262": [82, 216], "1352": [82, 216], "1314": [82, 216], "1345": [82, 216], "1330": [79, 216], "1315": 216, "gpl": [216, 222, 228], "1328": [82, 216], "1329": [82, 216], "1335": [82, 216], "test_csdeconv": 216, "1319": [82, 216], "1297": [84, 216], "eigh": 216, "1298": [73, 82, 87, 216], "textactor2d": 216, "1312": [80, 82, 216], "1285": [25, 72, 82, 216], "1307": [84, 216], "1310": [82, 216], "1308": [82, 216], "1304": [82, 216], "1303": 216, "reciproc": [216, 237], "1289": [82, 92, 216], "1288": [79, 82, 216], "1290": 216, "1279": 216, "1287": [82, 84, 216], "1286": [82, 216], "1284": [82, 216], "1278": [73, 82, 216], "viz_ui": 216, "1366": [82, 216], "1146": 216, "1084": [82, 216], "1248": [72, 82, 216], "1359": [82, 216], "1324": [82, 216], "1334": [73, 82, 216], "1344": [73, 82, 216], "1346": [82, 216], "1333": [82, 216], "clinicalgraph": 216, "1044": [82, 216], "1247": 216, "1337": [82, 84, 216], "coveral": 216, "baggi": 216, "1341": [82, 216], "activeax": [216, 217], "1325": [82, 216], "1323": [82, 216], "1042": [72, 74, 82, 84, 216], "1317": [82, 84, 216], "1313": [73, 216], "vtkcommoncor": 216, "1318": [82, 216], "func_mul": 216, "1167": [82, 216], "1180": [73, 82, 216], "375": [79, 83, 216], "directiion": 216, "ppc": [216, 222, 227], "804": [72, 216], "662": [82, 216], "1306": [82, 216], "1309": 216, "step_help": 216, "1293": [73, 216], "1292": [72, 82, 216], "570": [82, 216], "1169": [82, 216], "645": [82, 217, 218], "conor": 217, "corbin": 217, "jiri": [217, 218], "borovec": [217, 218, 226], "mendoza": 217, "karandeep": [217, 218], "kumar": 217, "ashutosh": 217, "pradeep": 217, "reddi": 217, "raamana": 217, "ricci": [217, 218, 225], "woo": [217, 218, 225], "aman": 217, "arya": 217, "215": [83, 87, 217], "1504": 217, "test_whole_brain_slr": 217, "1503": [82, 217], "1424": [82, 217], "1502": [73, 82, 217], "1498": [82, 84, 217], "1431": [82, 217], "1443": [82, 217], "1398": [82, 217], "1447": [82, 217], "1423": 217, "1493": [82, 217], "vtk8": 217, "1497": [82, 217], "1496": [82, 217], "1495": [82, 217], "sfm_reconst": 217, "1494": [82, 217], "1474": [79, 82, 217], "1471": 217, "1457": [82, 217], "1468": [73, 82, 84, 217], "1484": [73, 217], "punctuat": 217, "1475": [82, 217], "_iter": 217, "1482": [82, 217], "test_mapmri": 217, "1460": [82, 217], "diskslid": 217, "1452": [82, 85, 217], "1466": [82, 217], "logo": [217, 222], "1464": [82, 93, 217], "banner": [217, 222], "1465": [73, 217], "progit": 217, "1451": [82, 217], "1379": [73, 82, 217], "1445": [73, 82, 93, 217], "1450": [82, 217], "delimit": 217, "1425": [82, 217], "1446": [82, 217], "hyperlink": [217, 219], "1437": [82, 217], "mdfmetric": 217, "qbx": [217, 232], "1428": [82, 84, 217], "1385": [73, 79, 217], "textblock": 217, "1422": [72, 73, 82, 217], "1434": [80, 82, 217], "1430": 217, "1421": [82, 217], "1416": [82, 217], "1413": [82, 217], "getargspec": 217, "1393": [73, 82, 217], "1294": [82, 217], "1419": [82, 217], "rcond": [217, 227], "1384": [73, 82, 217], "1411": [24, 82, 217], "eddy_rotated_bvec": 217, "1407": [82, 84, 217], "1408": 217, "1406": [73, 82, 217], "assert_tru": 217, "assert_equ": [217, 220, 226], "1347": [82, 84, 217], "1322": [73, 217], "1326": 217, "1399": [82, 217], "1391": [82, 217], "1331": [82, 217], "1386": [82, 217], "1165": [82, 89, 217], "1300": [82, 217], "ravel_multi_index": [217, 222], "1381": [82, 217], "1375": [82, 217], "1342": [82, 217], "whatnot": 217, "1378": [82, 93, 217], "1377": [82, 84, 217], "1374": [82, 217], "1368": 217, "affili": [217, 218, 233], "1370": 217, "1369": [82, 217], "1418": [82, 217, 231], "parallel_voxel_fit": [217, 218, 231], "1291": [82, 217], "644": [30, 39, 72, 82, 217], "1490": [82, 217], "1469": [82, 217], "1485": [82, 217], "1483": [82, 217], "1479": [82, 217], "1477": [82, 217], "1448": [84, 217], "1481": [82, 217], "globalimmediatemoderenderingon": 217, "1454": [72, 82, 217], "1467": 217, "1488": [82, 84, 217], "1478": [82, 84, 217], "1476": [80, 82, 217], "1470": [82, 217], "1458": [37, 82, 84, 217], "1438": [82, 84, 217], "1473": [82, 217], "1462": [82, 217], "1461": 217, "1463": 217, "1455": [72, 73, 82, 217], "pyautogui": 217, "monitor": [217, 235], "1456": [82, 217], "1453": 217, "1339": [82, 217], "1441": [82, 217], "1449": [82, 217], "1362": [82, 217], "1395": [74, 82, 217], "1436": [82, 217], "1417": [82, 84, 217], "1435": [82, 217], "1439": [73, 217], "memview": 217, "struct": [217, 230], "1184": [82, 85, 217], "1380": [82, 217], "1429": [79, 82, 217], "syntaxerror": 217, "xe2": [217, 221], "596": [217, 223], "1390": [72, 217], "coding_style_guidelin": 217, "1427": [82, 217], "1426": [73, 82, 217], "987": [74, 82, 217], "faq": [217, 220, 226], "1327": [82, 84, 217], "1181": 217, "1150": [82, 217], "1409": [82, 217], "1415": [82, 217], "1117": [82, 217], "1412": [82, 93, 217], "791": [82, 217], "1410": [82, 217], "1403": 217, "jet": 217, "1387": [73, 84, 88, 217], "1405": [82, 217], "1402": [82, 217], "rint": 217, "1321": [72, 82, 217], "1161": [73, 217], "1394": [80, 82, 217], "misc": [217, 218, 230], "1382": [82, 217], "1350": [82, 217], "1392": 217, "chrome": 217, "1388": [82, 217], "1340": [82, 217], "1383": 217, "mmriflow": 217, "1299": 217, "test_rmi": [217, 222], "1301": 217, "1376": [82, 87, 217], "1343": [82, 217], "1282": [82, 217], "filo": 218, "albai": 218, "parichit": [218, 219], "chandan": 218, "gangwar": 218, "enrico": 218, "cahal": 218, "hunt": 218, "194": [73, 82, 83, 218], "1684": [73, 82, 218], "1686": 218, "1685": [36, 82, 218], "1663": [82, 218], "1681": [72, 82, 84, 218], "1680": [79, 82, 218], "1683": [82, 218], "1667": [82, 218], "1677": [82, 218], "msg": [73, 104, 218], "1678": [82, 218], "1676": [82, 218], "1283": [73, 82, 218], "1670": [82, 93, 218], "1669": 218, "1659": [82, 218], "1621": [82, 218], "1657": [82, 218], "1660": [72, 82, 218], "1658": [82, 218], "honor": 218, "1281": [82, 218], "1651": [73, 80, 82, 84, 218], "1656": [82, 218], "neurostar": [218, 236], "1624": [82, 218], "1655": [82, 218], "1650": [73, 218], "codecov": [218, 229, 232], "1649": [82, 218], "1556": [82, 218], "1645": 218, "1647": 218, "1644": [82, 218], "1643": 218, "787": [82, 85, 218], "starter": 218, "1642": [82, 218], "1641": [79, 84, 218], "evenly_distributed_sphere_642": 218, "1564": [82, 218], "listbox2d": 218, "1636": [73, 82, 218], "1584": 218, "1554": 218, "1528": [82, 84, 218], "timer": 218, "imread": 218, "1526": [82, 218], "1623": [82, 218], "1626": [72, 218], "1619": [82, 218], "1592": [72, 82, 218], "1559": [82, 84, 218], "radiobutton": 218, "1583": [82, 218], "1602": [82, 218], "1609": [73, 82, 218], "1560": [79, 218], "1593": 218, "1597": [80, 82, 218], "1601": [79, 82, 218], "nosetest": [218, 232], "1515": [82, 218], "1590": [82, 218], "1570": [82, 218], "1589": [82, 84, 218], "1580": [82, 218], "1533": [82, 218], "1523": [82, 218], "cmd": [19, 218], "1543": [82, 218], "out_strategi": 218, "1547": [73, 82, 87, 218], "1561": [82, 218], "1578": [82, 218], "1563": [73, 82, 218], "major_vers": 218, "1557": [72, 80, 82, 218], "button2d": 218, "1555": [25, 73, 82, 218], "1522": [82, 218], "1355": 218, "listbox": 218, "1540": [82, 218], "1548": [35, 84, 218], "1542": 218, "1546": 218, "1545": [82, 218], "1492": [82, 218], "1538": [73, 82, 84, 218, 243, 244], "mistakenli": 218, "1536": [82, 218], "1537": [53, 82, 218], "1530": [82, 218], "1529": [72, 73, 82, 218], "1520": [72, 73, 82, 218], "1524": [82, 218], "1521": [82, 218], "1518": [82, 84, 218], "1517": [79, 80, 82, 218], "1516": [82, 218], "1514": [82, 218], "pep8speak": [218, 225], "1513": [82, 218], "1510": [82, 218], "1508": [82, 84, 218], "appeas": 218, "1506": [82, 93, 218], "1679": [82, 218], "1220": [82, 218], "746": [82, 218], "1637": [85, 218], "1673": [82, 218], "1338": [82, 218], "1682": [82, 218], "634": 218, "944": [74, 82, 85, 88, 218], "1099": [82, 218], "1544": 218, "643": [72, 73, 82, 87, 218], "1674": [82, 218], "1397": [82, 84, 218], "1668": [82, 218], "1662": [82, 218], "1296": [82, 218], "ana": 218, "mini": 218, "1653": [82, 218], "1654": [82, 218], "1414": [82, 218], "1093": [82, 84, 218], "1611": [73, 82, 218], "preload": 218, "1615": [82, 218], "1631": [82, 84, 218], "1638": [82, 87, 218], "noddix": 218, "1618": [82, 218], "filemenu2d": 218, "1569": [82, 84, 218], "listboxitem2d": 218, "1532": [82, 218], "sierra": 218, "ananoda": 218, "1420": [82, 218], "1396": 218, "1295": [73, 218], "1232": [73, 218], "disappear": 218, "928": [73, 74, 82, 85, 218], "923": [42, 43, 74, 82, 85, 218, 243, 244], "854": [74, 82, 85, 218], "759": [72, 82, 87, 218], "vtk6": [218, 221, 222], "voxsz": 218, "646": [73, 82, 84, 218], "353": [79, 82, 83, 218], "1203": [82, 218], "1156": [82, 218], "642": [82, 85, 218], "1135": [82, 218], "442": [61, 62, 83, 87, 218], "558": [72, 82, 84, 218], "1236": 218, "1389": [82, 218], "1519": [82, 218], "1596": [73, 82, 218], "gsoc": [218, 219], "noddix_pr": 218, "1576": [82, 218], "1568": [53, 82, 218], "1108": [24, 82, 93, 218], "1629": [73, 82, 218], "userwarn": [73, 82, 84, 88, 100, 104, 218, 224], "1591": [82, 218], "1582": [82, 218], "1575": [82, 218], "1620": [82, 84, 218], "1598": [82, 218], "1595": [73, 82, 218], "1588": 218, "1608": [82, 93, 218], "1610": [84, 218], "tortois": 218, "1607": [82, 218], "1586": [82, 218], "1585": [82, 218], "1594": [82, 218], "1577": [82, 218], "1571": [73, 82, 218], "1579": [35, 84, 93, 218], "1433": [24, 82, 218], "mess": 218, "1541": [82, 218], "1573": [82, 218], "test_ui_listbox_2d": 218, "1566": [82, 218], "1572": [82, 218], "1567": [82, 218], "1551": [82, 218], "1549": [82, 85, 218], "1562": [73, 88, 218], "1550": 218, "1527": 218, "1534": [82, 218], "1487": [72, 82, 218], "check_scratch": 218, "1486": [82, 218], "1539": [82, 218], "1535": [82, 218], "1507": [82, 218], "1512": 218, "1511": [73, 82, 218], "exaampl": 218, "1509": [82, 218], "361": [73, 82, 83, 219, 222], "cl\u00e9ment": 219, "zotti": 219, "katrin": 219, "leinweb": 219, "yijun": 219, "liu": [219, 229], "1755": [82, 219], "1748": [92, 219], "1714": [82, 219], "1726": 219, "1753": [82, 84, 219], "1751": [82, 219], "1743": [82, 84, 219], "1749": [82, 219], "1739": [82, 219], "1695": [80, 82, 219], "1741": [82, 219], "1742": [82, 219], "1745": [82, 219], "1746": [73, 82, 219], "sponsor": 219, "1735": [82, 219], "1738": [82, 219], "1740": [82, 219], "1730": 219, "1666": [73, 82, 219], "1737": [82, 219], "1733": [82, 84, 87, 93, 219], "1732": 219, "maiincrement": 219, "1716": [82, 219], "1640": [82, 219], "1652": 219, "1720": 219, "1719": [82, 219], "1715": 219, "bullet": 219, "quot": [219, 222], "1706": [82, 219], "liner": 219, "1705": 219, "random_integ": 219, "1704": [82, 219], "1701": [73, 84, 219], "1707": [74, 219], "pendingdeprec": 219, "1703": 219, "blank": [219, 222], "1700": [19, 73, 82, 219], "tripl": 219, "1708": [82, 219], "1710": [82, 219], "1702": [82, 219], "1697": [82, 219], "1696": [82, 219], "1690": [82, 84, 88, 219], "1693": 219, "1757": 219, "sensor": 219, "acsept": 219, "deprecationwarn": 219, "usersranjianaconda3libsit": 219, "packagesipykernel_launch": 219, "imsav": 219, "imageio": 219, "imwrit": 219, "1616": [82, 219], "1605": [82, 219], "1661": [82, 84, 219], "1604": [74, 82, 219, 230], "1734": [82, 219], "1565": [82, 219], "1729": [82, 219], "n4": 219, "1280": [82, 219], "1727": [82, 85, 219], "1723": [82, 219], "1718": [82, 219, 224], "1717": [73, 79, 219], "1664": [82, 219], "1633": [82, 219], "1698": 219, "1691": [73, 219], "1692": [82, 219], "1632": [82, 219], "mdesco": 220, "141": [82, 83, 87, 220], "sf2sh": 220, "dsi_deconv": 220, "133": [82, 83, 220], "132": [73, 82, 83, 84, 220], "130": [47, 48, 73, 80, 82, 83, 145, 220, 225, 233], "colorfa": [220, 246], "127": [82, 83, 87, 102, 105, 135, 220], "result_typ": 220, "getitem": [220, 232], "_squash": 220, "112": [53, 82, 83, 84, 102, 114, 135, 220], "114": [82, 83, 220], "einsum": 220, "110": [82, 83, 220], "xp": 220, "sty": 220, "107": [74, 82, 83, 102, 114, 220], "105": [82, 83, 114, 129, 220], "multivoxel": 220, "84": [25, 32, 33, 35, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 88, 114, 220, 221], "82": [24, 25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 86, 100, 114, 220], "ip": 220, "yai": 220, "l2norm": 220, "68": [25, 30, 32, 33, 35, 36, 37, 39, 40, 53, 67, 72, 73, 74, 79, 82, 83, 84, 85, 86, 87, 100, 220, 243, 244], "e1381s6_edcor": 220, "optional_trait": 220, "brought": 220, "_filter": 220, "reduce_antipod": 220, "_filter_peak": 220, "optionalimporterror": 220, "trait": 220, "gitwash": 220, "frontpag": 220, "longest_track_len": 220, "mayavi": 220, "78": [25, 30, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 87, 93, 100, 114, 220], "refacotor": 220, "tb": 220, "hap": 220, "triangle_subdivid": 220, "badrequest": 220, "erik": 221, "279": [82, 83, 221], "257": [82, 83, 221], "274": [65, 66, 82, 83, 221], "275": [24, 83, 221], "261": [80, 83, 221], "273": [82, 83, 221], "autopep8": 221, "shmfit": 221, "260": [82, 83, 221], "270": [82, 83, 85, 114, 221], "267": [82, 83, 84, 114, 221], "peaks_from_model_parallel": 221, "sdeconv": 221, "253": [82, 83, 221, 222], "263": [82, 83, 88, 221], "252": [82, 83, 221], "243": [82, 83, 221], "249": [82, 83, 114, 221], "240": [73, 82, 83, 221], "245": [82, 83, 221], "242": [55, 61, 82, 83, 128, 129, 221, 231], "237": [82, 83, 114, 135, 221], "230": [82, 83, 221], "229": [82, 83, 221], "210": [82, 83, 114, 221], "brainextract": 221, "226": [82, 83, 87, 221], "setinput": 221, "vtk5": 221, "setinputdata": 221, "223": [73, 82, 83, 221], "222": [73, 82, 83, 120, 121, 221], "208": [82, 83, 87, 114, 221], "mask_voxel_s": 221, "promote_dtyp": 221, "wi": 221, "213": [73, 82, 83, 221], "204": [82, 83, 84, 221, 243, 244], "207": [74, 82, 83, 221], "206": [73, 82, 83, 221, 243, 244], "205": [73, 82, 83, 87, 221], "173": [73, 75, 82, 83, 84, 221], "tensor_": 221, "201": [73, 82, 83, 221], "testfail": 221, "189": [73, 82, 83, 104, 221], "196": [73, 83, 221], "probabilisticodfweightedtrack": 221, "190": [73, 82, 83, 221], "182": [73, 82, 83, 87, 221], "185": [73, 74, 82, 83, 87, 114, 221], "soureforg": 221, "180": [73, 82, 83, 85, 91, 114, 221, 243, 244], "py3": [22, 221], "178": [72, 73, 82, 83, 87, 221, 243, 244], "supersed": 221, "174": [73, 82, 83, 221], "172": [73, 82, 83, 221], "stamp": 221, "167": [73, 82, 83, 114, 221], "166": [73, 79, 82, 83, 221], "pyc": 221, "archiv": 221, "164": [73, 82, 83, 84, 221, 226], "163": [73, 82, 83, 84, 221, 226], "159": [35, 73, 82, 83, 114, 221], "544": [82, 222], "543": [72, 82, 222], "plot_2d": 222, "537": [82, 87, 222], "534": [73, 80, 222], "536": [82, 88, 222], "535": [80, 82, 222], "527": [73, 79, 82, 84, 222], "npymath": 222, "528": [82, 87, 222], "530": [72, 73, 82, 222], "ugli": 222, "msvc": [22, 222], "529": [72, 80, 82, 222], "526": [72, 222], "523": [72, 82, 222], "522": [72, 79, 80, 82, 222], "521": [82, 222], "520": [82, 222], "519": [80, 82, 222], "christma": 222, "513": [72, 73, 82, 222], "reinstat": 222, "508": [72, 82, 222], "516": [72, 79, 87, 222], "495": [80, 87, 222], "509": [72, 82, 222], "460": [72, 73, 80, 83, 222], "499": [82, 96, 222], "501": [82, 222], "507": [82, 222], "mergsort": 222, "494": [73, 80, 82, 222], "503": [72, 80, 82, 222], "471": [72, 80, 82, 83, 222], "importlib": 222, "__import__": 222, "419": [82, 83, 222], "489": [80, 82, 222], "484": [72, 73, 80, 82, 222], "490": [82, 222], "341": [30, 31, 82, 83, 222], "traco": 222, "redesign": 222, "483": [79, 82, 222], "485": [72, 80, 82, 100, 222], "482": [79, 82, 222], "479": [72, 82, 222], "481": [79, 80, 82, 222], "476": [72, 82, 84, 222], "478": [72, 73, 79, 82, 87, 222], "477": [82, 126, 129, 222], "474": [72, 80, 82, 83, 222], "473": [72, 82, 83, 222], "469": [72, 80, 83, 87, 222], "463": [30, 36, 82, 83, 222], "466": [72, 82, 83, 84, 222], "465": [72, 74, 82, 83, 222], "433": [40, 79, 80, 82, 83, 222], "458": [72, 80, 82, 83, 222], "npy_math": 222, "447": [82, 83, 222], "439": [53, 61, 72, 79, 80, 82, 83, 222], "443": [82, 83, 222], "456": [72, 82, 83, 84, 222], "454": [83, 222], "checker": 222, "453": [72, 79, 82, 83, 222], "446": [80, 82, 83, 84, 87, 222], "445": [72, 73, 80, 82, 83, 222], "pxi": 222, "440": [30, 37, 72, 79, 80, 82, 83, 133, 135, 222, 234], "431": [72, 79, 80, 83, 222], "408": [82, 83, 222], "438": [82, 83, 222, 239], "405": [72, 79, 83, 222], "418": [79, 82, 83, 222], "437": [72, 83, 222], "435": [82, 83, 84, 222], "434": [72, 79, 80, 83, 93, 222], "430": [79, 82, 83, 222], "427": [79, 80, 82, 83, 222], "422": [73, 79, 83, 222], "415": [79, 80, 82, 83, 222], "420": [67, 79, 80, 83, 222], "413": [74, 79, 82, 83, 222], "416": [71, 79, 80, 82, 83, 89, 90, 222], "memory_leak": 222, "test_strealin": 222, "417": [72, 79, 82, 83, 222], "409": [82, 83, 222], "pipe": 222, "396": [79, 82, 83, 222], "407": [80, 82, 83, 87, 222], "omarocegueda": 222, "402": [72, 79, 80, 83, 222], "ae": 222, "test_peak_directions_thorough": 222, "401": [79, 82, 83, 222], "skiptest": 222, "340": [72, 73, 82, 83, 84, 222], "397": [72, 80, 82, 83, 222], "382": [79, 82, 83, 222], "386": [79, 82, 83, 222], "352": [72, 79, 82, 83, 222], "384": [79, 80, 82, 83, 222, 243, 244], "odf_sh_sharpen": 222, "374": [80, 82, 83, 87, 222], "bumpi": 222, "380": [79, 80, 82, 83, 222], "378": [79, 82, 83, 222], "379": [79, 80, 82, 83, 222], "339": [72, 79, 82, 83, 222], "373": [24, 82, 83, 84, 222], "371": [72, 80, 82, 83, 222], "fopenmp": 222, "372": [72, 80, 83, 222], "crossplatform": 222, "337": [72, 80, 82, 83, 87, 222], "370": [79, 80, 82, 83, 222], "tone": 222, "364": [82, 83, 222], "368": [83, 222], "363": [79, 82, 83, 87, 222], "355": [72, 83, 85, 222], "357": [72, 79, 83, 222], "sent": 222, "356": [72, 82, 83, 222], "349": [30, 34, 72, 82, 83, 222], "348": [72, 82, 83, 222], "347": [72, 82, 83, 222], "338": [72, 82, 83, 222], "334": [72, 79, 82, 83, 222], "vec2vec": 222, "324": [72, 82, 83, 222], "331": [72, 82, 83, 222], "326": [72, 83, 222], "327": [72, 79, 82, 83, 222, 233], "319": [79, 82, 83, 84, 222], "318": [72, 82, 83, 222], "316": [72, 82, 83, 222], "315": [72, 82, 83, 222], "305": [82, 83, 222], "311": [79, 82, 83, 222], "309": [72, 73, 82, 83, 84, 222], "308": [72, 82, 83, 222, 243, 244], "pep": 222, "stuf": 222, "303": [76, 82, 83, 222], "304": [73, 80, 82, 83, 222], "302": [82, 83, 87, 222], "299": [72, 83, 84, 114, 222], "298": [72, 79, 82, 83, 222], "290": [82, 83, 222], "540": [72, 82, 125, 129, 222], "542": [82, 222], "538": [72, 80, 82, 84, 222], "449": [72, 80, 82, 83, 222], "512": [71, 82, 222], "467": [72, 79, 82, 83, 222], "464": [72, 80, 82, 83, 222], "wheezi": [222, 223], "argsort": 222, "mergesort": 222, "506": [82, 84, 95, 222], "399": [82, 83, 222, 243, 244], "383": [30, 33, 73, 79, 82, 83, 84, 222], "350": [72, 82, 83, 222], "424": [25, 79, 83, 112, 115, 222], "493": [72, 80, 82, 222], "dpy_math": 222, "hyp2f1": 222, "502": [82, 222], "492": [65, 72, 79, 80, 82, 222], "410": [73, 80, 82, 83, 222], "487": [80, 82, 222], "428": [72, 79, 80, 82, 83, 222], "travis": 222, "475": [79, 82, 83, 222], "tmp_file": 222, "470": [72, 74, 79, 82, 83, 222], "461": [72, 80, 82, 83, 222], "432": [72, 79, 82, 83, 115, 116, 222], "matrix44": 222, "452": [72, 82, 83, 87, 222], "398": [79, 82, 83, 222], "444": [72, 79, 80, 82, 83, 222], "mkl": 222, "pow": 222, "391": [79, 82, 83, 222], "16gb": 222, "wasn": 222, "385": [72, 80, 82, 83, 87, 222], "376": [73, 80, 82, 83, 222], "demianw": 222, "358": [72, 73, 80, 82, 83, 222], "343": [72, 79, 82, 83, 87, 222], "277": [72, 82, 83, 222], "336": [72, 82, 83, 222], "235": [73, 82, 83, 84, 88, 222, 223], "329": [72, 73, 82, 83, 84, 222], "330": [72, 79, 82, 83, 222], "312": [72, 83, 222], "quicki": 222, "307": [82, 83, 222], "241": [82, 83, 222], "248": [73, 82, 83, 87, 222], "peaksfrommodel": 222, "282": [82, 83, 222], "incomprehens": 222, "228": [82, 83, 222], "dipy_fit_tensor": 222, "brittl": 222, "171": [73, 82, 83, 87, 222], "runtimewarn": [75, 80, 83, 84, 87, 88, 89, 93, 222, 226], "create_half_unit_spher": 222, "306": [72, 82, 83, 88, 222], "310": [74, 82, 83, 222], "575": [82, 223], "595": [82, 223], "599": [82, 87, 223], "dpy_rint": 223, "test_center_of_mass": 223, "601": [72, 82, 223], "598": [82, 84, 223], "undetect": 223, "593": [82, 223], "588": [82, 87, 223], "565": [82, 223], "589": [73, 82, 84, 223], "typograph": 223, "584": [82, 223], "568": [82, 223], "quickbundles2": 223, "559": [82, 223], "586": [82, 87, 223], "574": [82, 223], "581": [80, 82, 223], "580": [82, 223], "579": [84, 223], "577": [82, 223], "553": [72, 73, 79, 82, 223], "552": [82, 223], "571": [82, 223], "557": [72, 82, 223], "563": [82, 223], "564": [82, 223], "561": [82, 223], "francopestilli": 223, "556": [72, 87, 136, 223], "550": [24, 72, 80, 82, 95, 223, 234], "551": [72, 82, 223], "549": [30, 32, 72, 80, 82, 223], "602": [82, 223], "test_feature_center_of_mass": 223, "597": [82, 223], "585": [72, 82, 223], "amico": 223, "567": [79, 82, 223], "414": [73, 79, 80, 82, 83, 84, 223], "560": [72, 74, 98, 223], "three_shells_voxel": 223, "555": [72, 79, 82, 223], "chatroom": 223, "354": [72, 80, 82, 83, 87, 223], "32bit": [223, 248], "532": [82, 223], "sparc": 223, "antoin": 224, "theberg": 224, "clint": 224, "1946": [82, 224], "1947": 224, "1942": [82, 224], "1917": [73, 82, 224], "1940": 224, "1909": 224, "1931": [82, 84, 224], "1944": [72, 82, 224], "1939": [73, 82, 224], "1943": 224, "1941": [79, 82, 84, 224], "1926": [82, 224], "1935": [82, 224], "1903": [82, 224], "endian": 224, "s390x": 224, "1892": [82, 224], "1804": [79, 82, 224], "1937": [24, 82, 224], "1928": [82, 224], "1925": [82, 224], "1927": 224, "1923": [82, 224], "1894": [82, 224], "1812": [82, 224], "stateful": 224, "1922": 224, "1885": [82, 224], "1913": [72, 224], "1915": [82, 224], "1630": 224, "1896": [79, 82, 224], "1912": [82, 224], "1916": [73, 224], "1918": [53, 82, 224], "1881": [82, 84, 224], "python_requir": 224, "1914": [82, 224], "1907": [82, 224], "1908": [82, 224], "1887": [82, 224], "1905": [82, 224], "1849": 224, "1902": 224, "1904": 224, "1771": [73, 82, 224], "1899": [82, 224], "1898": [82, 224], "1897": [82, 224], "1893": [82, 224], "1891": [82, 84, 224], "test_refine_rb": 224, "test_bundl": 224, "1888": 224, "1879": [82, 224], "1884": 224, "1875": [73, 82, 93, 224], "1882": 224, "1880": 224, "1878": 224, "numpy_less_0": 224, "1877": [72, 82, 224], "scipy_less_0": 224, "1876": [73, 82, 224], "1874": [82, 224], "oversight": 224, "1858": [82, 224], "1843": 224, "1866": [82, 224], "1850": [82, 84, 224], "1855": [72, 73, 224], "statsmodel": [224, 245], "1835": [82, 224], "1836": [35, 73, 224], "1792": 224, "1851": 224, "1842": [82, 224], "tput": 224, "1830": [82, 84, 224], "1821": [82, 84, 224], "1816": [82, 224], "1818": [82, 224], "1827": [82, 93, 224], "1824": [25, 73, 82, 224], "1819": [24, 82, 224], "diffeormorph": 224, "1823": [82, 224], "1814": [82, 85, 224], "1815": 224, "1813": 224, "1772": [84, 224], "1810": [73, 82, 224], "1806": [82, 224], "1789": 224, "1770": [82, 224], "1796": [82, 224], "1795": 224, "1768": [72, 82, 224], "1788": [82, 224], "1769": [72, 82, 224], "1767": [73, 82, 224], "1759": [82, 224], "1230": 224, "1798": [82, 88, 224], "1817": 224, "1774": [82, 224], "1587": [73, 82, 224], "1890": [80, 82, 224], "1933": [82, 224], "985": [74, 79, 82, 85, 224], "1558": [82, 224], "1910": [19, 82, 224], "389": [79, 82, 83, 224], "peaks_direct": 224, "590": [82, 224], "1722": [84, 224], "1832": [82, 224], "283": [31, 73, 82, 83, 224, 243, 244], "728": 224, "1920": [19, 82, 224], "bedpostx": 224, "1779": [82, 224], "1906": [82, 224], "1901": [74, 82, 84, 85, 224], "1747": [82, 224], "1839": [82, 224], "583": [82, 224], "1694": [72, 82, 224], "test_streamlin": 224, "1724": [73, 224, 226], "844": [82, 85, 224], "1752": 224, "1856": [32, 82, 224], "1807": 224, "1889": [82, 224], "1713": [82, 224], "668": [82, 224], "592": 224, "shouldn": [224, 230], "nodirect": 224, "1811": [84, 224], "1846": [82, 224, 243, 244], "1831": 224, "1857": 224, "1863": 224, "1781": [84, 224], "1869": [82, 224], "1844": [82, 224], "1865": [35, 82, 224], "1860": [82, 224], "1168": [74, 82, 224], "1854": [82, 224], "1764": 224, "1731": [82, 224], "1845": 224, "1829": 224, "reco": 224, "1606": 224, "1837": [82, 224], "1786": [82, 224], "lab": [224, 225, 226, 227, 243, 244], "1828": [82, 224], "infeas": 224, "1833": [82, 224], "1834": [87, 224], "1721": [82, 224], "b0slice": 224, "implicit": 224, "1499": [82, 224], "dii": 224, "1822": [82, 224], "1825": 224, "1048": [74, 80, 224], "1797": [73, 82, 224], "1802": [82, 224], "1787": [80, 224], "1763": [82, 84, 93, 224], "1756": [82, 224], "1761": [82, 224], "795": [82, 224], "620": [82, 224], "436": [72, 82, 83, 224], "1758": [73, 82, 224], "1808": [82, 224], "1794": [73, 82, 224], "dettrackpamflow": 224, "1801": [84, 224], "1803": 224, "1809": 224, "1799": [82, 224], "nifiti": 224, "1712": [82, 84, 224], "3075": [25, 82, 224], "1783": 224, "1784": [82, 224], "1790": [82, 84, 224], "operand": 224, "1782": [82, 224], "1320": 224, "1245": [73, 82, 84, 224], "1240": [82, 224], "1237": [82, 224], "flesh": 224, "1192": [82, 224], "1096": [82, 224], "832": [82, 85, 224], "578": [72, 80, 82, 224], "behnel": 224, "1780": [82, 224], "randommatrix": [187, 224], "1126": [73, 82, 224], "1603": [72, 82, 224], "2030": 225, "2029": [73, 82, 225], "proxi": 225, "dead": [225, 230], "1862": [82, 225], "1952": [82, 225], "cenir_multib": [225, 243, 244], "1998": [82, 225], "1975": [82, 225], "1711": [24, 225], "1989": [82, 225], "1987": [82, 225], "1986": [82, 225], "1977": [82, 225], "1983": 225, "1981": [82, 225], "1980": [73, 82, 225], "1979": [82, 225], "1956": [82, 225], "stateful_tractogram_post_1": 225, "0_fix": 225, "1971": [73, 82, 225], "1970": 225, "1929": [82, 225], "reloc": 225, "sim_respons": 225, "1966": 225, "1967": [82, 225], "1961": [82, 84, 225], "1963": [82, 225], "1900": [19, 82, 225], "1948": [82, 225], "1951": [82, 84, 225], "1958": [82, 225], "1197": [82, 225], "1959": 225, "1777": [82, 225], "read_": 225, "1634": 225, "1949": [72, 82, 225], "modulenotfounderror": [19, 225], "1870": [82, 225], "1953": 225, "184": [73, 82, 83, 225], "1976": [82, 225], "785": [82, 225], "1859": [82, 225], "1950": 225, "statefulltractogram": 225, "1930": [19, 82, 225], "ioerror": 225, "1968": 225, "1960": [73, 82, 225], "1867": [82, 225], "circleci": 225, "1954": [73, 82, 225], "1964": 225, "1840": [84, 225], "1841": [72, 80, 82, 225], "1955": [40, 225], "intersphinx": 225, "inventori": 225, "1401": [82, 225], "1442": [82, 225], "1791": [40, 82, 92, 225], "aryansh": 226, "omrai": 226, "charl": [226, 227, 232, 233], "poirier": [226, 227, 232, 233], "fabio": 226, "neri": 226, "jirka": 226, "leevi": [226, 230], "kerkela": [226, 230], "leon": [226, 230], "wening": [226, 230], "martijn": 226, "nagtega": 226, "sarath": 226, "chandra": 226, "shrishti": 226, "hore": 226, "shubham": 226, "shaswat": 226, "taki": 226, "panagopoulo": 226, "tashrif": 226, "billah": 226, "kunal": 226, "mehta": 226, "svabhishek29": 226, "areesha": [226, 227, 228], "tariq": [226, 227, 228], "philipp": [226, 227, 228, 233, 243, 244], "karan": [226, 227, 228, 233], "2191": [82, 226], "2212": 226, "2207": 226, "shader": 226, "2208": [73, 82, 226], "2157": [82, 226], "uniniti": [226, 233], "2205": [82, 226], "2204": 226, "2183": [40, 80, 82, 226], "_streamlines_in_mask": 226, "2203": [79, 82, 226], "2142": [82, 226], "2195": 226, "2161": [82, 226], "2163": [82, 226], "2174": 226, "2168": [82, 84, 226], "2178": [24, 82, 84, 226], "2193": 226, "buan_flow": 226, "2196": [73, 82, 226], "2188": [84, 226], "2176": [73, 82, 226], "2173": [82, 226], "ssl": 226, "certif": 226, "2171": [82, 226], "2154": [82, 226], "2162": [73, 82, 226], "2156": [82, 226], "2160": [82, 226], "assert_": 226, "2158": [73, 82, 226], "2155": [79, 226], "2147": 226, "2148": [73, 82, 226], "2150": 226, "2149": [82, 84, 226], "2145": [82, 226], "2152": [82, 226], "2146": [82, 226], "2134": [82, 226], "2135": [36, 82, 226], "2141": [82, 226], "2136": [82, 226], "2140": [73, 82, 226], "rag": 226, "2139": [82, 84, 226], "2108": [73, 84, 226], "2121": 226, "initialis": 226, "2129": [80, 226], "2133": [82, 226], "2125": 226, "2124": [72, 82, 226], "2033": [82, 226], "2111": 226, "2086": [72, 82, 226], "2091": [73, 82, 226], "2057": [53, 82, 84, 226], "2103": [82, 226], "grammar": [226, 231, 233], "2088": [82, 84, 226], "2120": [25, 73, 82, 226], "2113": [79, 226], "cigar_tensor": 226, "2116": [82, 226], "2100": [73, 226], "grammat": 226, "2101": [82, 226], "2095": [82, 226], "2099": [82, 226], "2102": 226, "2055": [82, 226], "2097": [82, 226], "sform": 226, "get_best_affin": 226, "2104": [82, 226], "2065": [73, 226], "2090": [82, 226], "2067": [84, 226], "2093": [82, 226], "2077": [82, 226], "2071": [73, 79, 82, 226], "2084": [82, 226], "kunakl07": 226, "2085": [73, 82, 226], "2068": [40, 82, 226], "2069": [82, 226], "2063": [82, 226], "2045": [82, 226], "2060": 226, "2058": 226, "2059": [82, 226], "2056": [82, 226], "2053": [82, 226], "_gibbs_removal_2d": 226, "2043": [82, 226], "2047": [84, 226], "2044": 226, "2041": 226, "2039": [82, 226], "__future__": 226, "2042": [82, 226], "2040": [82, 226], "2038": 226, "2037": [73, 82, 84, 226], "2028": [79, 226], "2035": [72, 80, 82, 226], "2114": [82, 226], "1793": [82, 226], "wf": 226, "2061": [82, 93, 226], "colab": 226, "kaggl": 226, "2070": [73, 226], "2107": [82, 226], "2153": 226, "2138": [82, 226], "2194": [82, 226], "2177": [82, 226], "maco": [11, 21, 22, 158, 226, 233, 248], "2182": [73, 82, 226], "tp_print": 226, "2199": [82, 226], "2175": [82, 226], "2190": [226, 227], "2051": [72, 82, 226], "2172": [82, 226], "2169": [82, 226], "2170": [25, 82, 226], "2144": [35, 226], "2159": [82, 84, 226], "2151": [72, 82, 226], "2130": [73, 82, 226], "2131": [82, 226], "elementwis": 226, "2128": [82, 84, 226], "1765": [82, 226], "2122": [82, 226], "2127": 226, "2126": [82, 226], "2096": 226, "2118": [72, 82, 84, 226], "1861": [82, 84, 226], "2024": [22, 82, 226], "winter": 226, "2094": 226, "friendli": 226, "regn": 226, "2078": [82, 84, 226], "1305": 226, "polici": 226, "2089": [74, 82, 226], "2072": [82, 226], "2073": [82, 226], "old_highlight": 226, "2074": [82, 226], "2075": [82, 226], "maintainer_workflow": 226, "2076": [82, 226], "2079": [82, 85, 226], "2080": [82, 226], "2081": [82, 226], "2082": [80, 82, 226], "2083": [73, 82, 226], "2066": [82, 226], "1363": [82, 92, 226], "1871": [33, 84, 226], "2052": [82, 226], "1785": [73, 226], "gifti": 226, "1728": [72, 226], "1699": [82, 226], "1671": [82, 84, 226], "1552": 226, "1373": 226, "troubleshoot": 226, "1152": [82, 226], "1047": [74, 82, 226], "2049": [82, 87, 226], "2048": [82, 226], "218": [64, 65, 80, 82, 83, 226], "313": [72, 82, 83, 226], "1848": [73, 82, 226], "hub": 226, "2034": 226, "backlog": 226, "1864": [82, 226], "284": [82, 83, 114, 227], "basil": 227, "pinsard": 227, "jaewon": 227, "siddharth": 227, "kapoor": 227, "2181": [74, 82, 85, 227], "2223": 227, "2238": [80, 82, 227], "2265": [82, 84, 227], "2206": [82, 227], "2266": [82, 227], "2255": [82, 227], "2271": [82, 227], "2263": [82, 227], "part2": 227, "2259": [82, 227], "2264": [73, 82, 227], "2268": [82, 227], "2267": [73, 82, 227], "2262": [82, 227], "2244": [82, 227], "2119": [82, 227], "2260": [24, 227], "2258": [82, 84, 227], "2257": 227, "2261": [82, 227], "1919": [82, 227], "2256": [82, 227], "2253": [82, 227], "2240": [82, 84, 93, 227], "2198": [82, 84, 227], "btensor": 227, "2025": [82, 227], "2197": [82, 227], "2227": [82, 227], "2250": [72, 84, 227], "2252": [82, 227], "2248": [73, 82, 227], "2249": [82, 227], "2247": 227, "2246": [79, 82, 227], "backtick": 227, "2239": [82, 227], "2242": [82, 227], "2241": [82, 227], "2235": [82, 227], "2234": [82, 227], "2231": [82, 227], "2221": [82, 227], "robustifi": 227, "solvererror": 227, "2226": [73, 82, 227], "2225": 227, "rackspac": 227, "nightli": [227, 230], "2224": [82, 227], "xfail": 227, "assert_rais": 227, "2220": [82, 227], "2218": [82, 227], "2217": [72, 73, 82, 227], "lstsq": 227, "2211": [82, 227], "2272": [82, 227], "2180": [82, 227], "2054": [73, 82, 227], "unr": 227, "2046": [73, 82, 227], "2132": [82, 227], "1266": [82, 84, 227], "test_mapmri_isotropic_static_scale_factor": 227, "1264": [82, 227], "2117": 227, "2202": 227, "2115": 227, "1744": [80, 82, 227], "1489": [40, 73, 82, 227], "2192": [82, 227], "2201": [82, 227], "2232": [82, 227], "somesuch": 227, "2219": [82, 84, 227], "2236": 227, "2254": [73, 82, 227], "2251": [82, 227], "2243": [73, 82, 227], "2237": [82, 227], "2245": [82, 227], "verbatim": 227, "2230": [82, 227], "2228": [53, 82, 227], "2109": [82, 227], "spring": [227, 230], "2214": [82, 227], "2216": [72, 82, 227], "test_multi_shell_fiber_respons": 227, "2185": [82, 227], "2215": [82, 227], "1762": [82, 227], "1354": [80, 82, 227], "325": [72, 73, 82, 83, 227], "2318": [82, 228], "p2": [228, 229], "2317": [24, 84, 228], "2315": [82, 228], "weekli": 228, "2307": [82, 84, 228], "2278": [82, 228], "2275": [82, 228], "2277": 228, "2289": [82, 228], "2292": 228, "2296": [84, 228], "2294": [82, 228], "2291": [82, 228], "2295": [82, 228], "2280": [74, 82, 228], "2287": [82, 84, 228], "doctstr": 228, "2286": [73, 228], "2284": [73, 228], "doctsr": 228, "2283": [72, 82, 228], "2282": 228, "2210": [82, 228], "arclength": 228, "722": [25, 82, 87, 228], "2328": [82, 228], "2323": [82, 228], "2229": [82, 84, 228], "2098": [84, 228], "2303": [82, 228], "2279": [73, 82, 228], "felix": 229, "kruper": [229, 233], "2367": 229, "2387": [72, 229], "2386": [82, 229], "2375": [73, 229], "2382": [82, 84, 229], "2385": [35, 229], "2384": [82, 229], "2351": [82, 229], "2381": 229, "2371": [84, 229], "2352": [72, 82, 84, 229], "2373": [74, 229], "2372": [82, 229], "2348": [40, 73, 82, 229], "2363": [84, 229], "2365": [85, 229], "2349": [82, 229], "2350": [40, 82, 229], "size_t": 229, "2346": [82, 229], "mnt": [229, 230], "wherev": [229, 230], "2347": [82, 229], "2340": 229, "reactiv": 229, "2344": [82, 229], "2339": [82, 229], "1648": [73, 82, 229], "2337": [80, 82, 229], "2333": 229, "2335": [82, 229], "2332": [82, 229], "1973": [82, 229], "2377": [32, 229], "2380": [82, 229], "2300": [82, 229], "2320": [73, 82, 229], "2341": [82, 229], "2353": [82, 229], "1311": 229, "1302": [29, 82, 229], "366": [82, 83, 229], "1672": [82, 229], "fault": 229, "1444": [82, 229], "562": [72, 82, 229], "2324": [82, 229], "vr": 229, "2345": [40, 82, 84, 229], "423": [79, 82, 83, 87, 229], "837": [74, 82, 85, 229], "636": [82, 84, 137, 229], "861": [74, 85, 229], "1895": [73, 82, 229], "545": [72, 82, 229], "1847": 229, "1872": [73, 82, 229], "1646": [82, 229], "1635": [82, 229], "2309": [82, 229], "2334": [82, 229], "aphys": 229, "1873": [82, 229], "2343": [73, 82, 88, 229], "2311": [82, 229], "2274": [82, 229], "1675": [82, 229], "2316": [72, 82, 229], "2331": 229, "573": [73, 80, 82, 119, 120, 230], "dan": 230, "franci": 230, "jerom": 230, "giulia": 230, "bert\u00f2": 230, "joshua": 230, "kenji": 230, "marshal": 230, "luca": 230, "costa": 230, "sam": [230, 231, 232, 233], "covenei": [230, 231, 232, 233], "2561": [73, 230], "2520": [82, 230], "2558": [25, 74, 82, 230], "errant": 230, "2557": [35, 230], "2556": [72, 82, 230], "2554": [71, 82, 230], "2555": [24, 84, 230], "2539": [79, 230], "embarrassingli": 230, "2545": [40, 73, 82, 230], "2548": [40, 82, 230], "concurr": 230, "gha": [230, 233], "2549": [82, 230], "2550": [82, 230], "2551": [71, 73, 82, 84, 230], "2536": [82, 230], "2533": [73, 84, 230], "underlin": 230, "2342": [82, 230], "2512": [73, 82, 230], "2526": 230, "2534": [82, 230], "2532": [82, 230], "2529": [73, 82, 230], "2528": 230, "2527": [82, 230], "2493": [79, 230], "2522": [82, 230], "2521": [73, 82, 88, 230], "2420": [82, 230], "2482": 230, "2423": [82, 230], "2518": [82, 230], "2515": [73, 82, 84, 230], "2513": [82, 230], "2506": [82, 230], "2510": [71, 82, 230], "reboot": 230, "2487": 230, "2442": [82, 230], "2470": [73, 230], "2485": [82, 230], "2481": [73, 82, 230], "2480": 230, "2478": [82, 230], "2479": [82, 230], "2475": [82, 84, 230], "2476": [35, 73, 230], "2472": 230, "2471": [82, 230], "2468": [82, 230], "2467": [74, 82, 230], "2466": [82, 84, 230], "2453": [82, 84, 230], "2413": [82, 88, 230], "2447": [82, 84, 230], "bitwis": 230, "2444": [82, 230], "2434": [82, 230], "2435": 230, "2436": [82, 230], "2438": [82, 230], "misplac": 230, "2374": [82, 230], "2390": [82, 230], "2417": [82, 230], "2419": [73, 230], "2406": [73, 79, 82, 230], "2411": [82, 84, 230], "c_compress_streamlin": 230, "2416": [82, 230], "2415": [82, 87, 230], "2410": [35, 230], "2409": [82, 230], "2405": 230, "2407": [82, 230], "2392": [82, 230], "2389": [82, 230], "2368": [82, 230], "_local_track": 230, "2123": 230, "2489": [72, 82, 230], "2525": [82, 230], "2509": [80, 230], "2543": [40, 82, 230], "2546": [82, 84, 230], "2542": [82, 230], "2477": [82, 230], "2541": [82, 230], "2507": [82, 230], "2422": [82, 84, 230], "1969": [82, 230], "2456": [82, 85, 230], "2524": [82, 84, 230], "2449": [82, 230], "nonsens": 230, "2179": [82, 230], "2492": [82, 230], "reusabl": 230, "2497": 230, "2495": [82, 230], "2305": [73, 79, 82, 230], "2499": [37, 82, 230], "2488": [35, 230], "footprint": 230, "2504": [82, 230], "fwdwi": 230, "2502": [82, 230], "2490": [72, 82, 230], "2402": [82, 230], "dipy_to_nipype_interfac": 230, "2486": [82, 84, 230], "2484": [82, 230], "2483": [82, 230], "2463": [73, 230], "2460": [35, 82, 230], "2429": 230, "2461": 230, "2464": [82, 230], "homepag": 230, "2457": [35, 230], "2454": [82, 230], "2446": [82, 230], "bitwise_or": 230, "2443": [82, 230], "2441": [82, 230], "2430": [82, 230], "2431": [84, 230], "2432": [35, 73, 82, 230], "2314": [82, 230], "1805": [72, 74, 230], "2418": [82, 230], "365": [72, 82, 83, 230], "2404": [82, 230], "2209": [84, 230], "_pytest": 230, "pathlib": 230, "importpathmismatcherror": 230, "1934": [82, 230], "2312": [82, 230], "2383": 230, "dcperror": 230, "2391": [82, 84, 230], "2393": [40, 80, 82, 230], "probtrackx2": 230, "fmrib": 230, "toolbox": 230, "2310": [82, 230], "deneb": 231, "jacob": 231, "malinda": 231, "dilhara": 231, "2710": [82, 231], "2711": [35, 82, 231], "temporarydirectori": [231, 243], "2702": [40, 73, 231], "2704": [25, 231], "2701": [35, 40, 82, 231], "progbar": 231, "2700": [25, 40, 231], "2694": [82, 231], "2697": [24, 35, 82, 231], "2692": [82, 231], "2693": [25, 73, 82, 231], "2687": [24, 25, 82, 231], "2690": [25, 40, 231], "2688": [73, 82, 84, 231], "2683": [25, 35, 82, 231], "2668": [25, 82, 231], "2674": [24, 40, 231], "2670": [73, 82, 231], "2672": 231, "2669": [40, 231], "inaccur": [73, 84, 88, 231], "2664": [82, 231], "2553": [82, 231], "2369": [73, 231], "diffeormorphicmap": 231, "2631": [40, 82, 231], "2630": [82, 231], "2629": [82, 84, 231], "2618": [40, 231], "multi_dot": 231, "2606": [24, 231], "2531": 231, "2589": [72, 82, 231], "intemporarydirectori": [231, 233], "tmpfile": 231, "2577": [73, 231], "2595": 231, "2591": [82, 84, 231], "mutabl": 231, "2592": [82, 231], "2579": 231, "2584": [72, 82, 231], "2566": [82, 231], "2581": 231, "2580": [35, 73, 82, 231], "2576": [82, 231], "2568": [82, 231], "2709": [82, 84, 231], "2708": [40, 82, 231], "2699": [35, 82, 84, 231], "noreg": 231, "redux": 231, "2696": [80, 231], "pyafq": 231, "2679": [82, 231], "2676": [82, 231], "2673": [82, 84, 231], "2667": [36, 82, 231], "2662": 231, "cmd_line": 231, "2658": [25, 72, 82, 231], "chanc": 231, "arm64": [22, 231], "2659": [73, 231], "2649": [40, 74, 82, 231], "2424": [82, 231], "2327": [82, 231], "2313": [82, 231], "wholebrain": 231, "2616": [40, 73, 82, 231], "2627": [82, 231], "tvis_hdr": 231, "nii_aff": 231, "2634": [25, 73, 231], "2559": [40, 80, 84, 231], "2564": [82, 231], "2572": [82, 231], "2617": [40, 82, 231], "2602": [40, 82, 84, 231], "dear": 231, "expert": 231, "2603": 231, "dti_peak": 231, "2587": [82, 231], "safeti": 231, "concern": 231, "relianc": 231, "tmpdir": 231, "2450": [79, 82, 231], "2594": [82, 231], "2573": [73, 84, 231], "2567": 231, "2565": 231, "dogu": 232, "baran": 232, "jong": [232, 233], "sung": [232, 233], "martino": 232, "pilia": 232, "mitesh": 232, "gulecha": 232, "rahul": 232, "ubal": 232, "shilpi": [232, 233], "karp2601": 232, "ujjwal": 232, "shekhar": 232, "2765": [82, 232], "2788": [25, 82, 232], "2768": [35, 232], "2749": [35, 82, 84, 232], "2744": [80, 232], "2785": [79, 82, 232], "2540": [82, 84, 232], "2609": [25, 82, 232], "2596": [82, 232], "2740": [74, 82, 84, 232], "2773": [82, 232], "2783": [25, 82, 84, 232], "test_roi_imag": 232, "2782": [35, 232], "mtn": [232, 233], "2780": [73, 232], "2778": [35, 82, 232], "2767": [82, 232], "fast_numpi": 232, "2626": [82, 232], "2763": [72, 82, 232], "2751": [82, 232], "2762": [25, 40, 73, 232], "2753": [82, 232], "2722": [82, 232], "2741": [24, 25, 35, 73, 82, 232], "2739": [25, 82, 232], "codespel": [232, 233], "2590": [82, 232], "2733": [82, 84, 232], "2648": [82, 232, 233], "2723": [35, 82, 232], "2727": [79, 82, 232], "extras_requir": 232, "2725": [35, 82, 232], "2716": [35, 232], "2717": [82, 84, 232], "2628": [82, 232], "2713": [73, 82, 232], "2625": [82, 232], "2537": 232, "1778": [82, 232], "1990": [73, 82, 232], "1073": [74, 84, 232], "2530": [82, 87, 232], "2756": [84, 232], "2754": [84, 232], "2775": [25, 82, 232], "2770": [35, 232], "2750": [82, 232], "2745": [25, 40, 82, 232], "2742": [35, 82, 232], "2729": [82, 84, 85, 232], "attributeerror": 232, "2726": [82, 232], "2707": [82, 232], "fixdenois": 232, "2575": 232, "2414": 232, "2599": [33, 82, 232], "examples_revamp": [93, 234], "fiber_track": 234, "file_format": 234, "streamline_analysi": 234, "broader": [22, 236], "respond": 236, "privat": [237, 238], "req": [237, 238], "g_x": [237, 238], "g_y": [237, 238], "g_z": [237, 238], "supposedli": [237, 238], "envelop": 237, "int_0": 237, "matiello": 237, "onset": 237, "g_i": 237, "g_j": 237, "direcrt": 237, "trse": [237, 238], "ramp": [237, 238], "2b_": [237, 238], "_2": [237, 238], "_3": [237, 238], "dft": [237, 238], "callaghan": 237, "eccl": 237, "xia": 237, "narrow": [237, 239], "mysteri": 237, "exposit": 238, "clearer": 238, "frank": 239, "calaghan": 239, "transit": 239, "orthonorm": 241, "p_l": 241, "legendr": 241, "a_l": 241, "m_l": 241, "formal": 241, "leq": 241, "Their": 241, "foral": 241, "omiss": 241, "motiv": 241, "jorg": 242, "stolfi": 242, "atan2": 242, "cart2sph": 242, "fetch_flow": 243, "bundle_fa_hcp": [243, 244], "bundle_file_formats_exampl": [243, 244], "3352379": [243, 244], "gold_standard_io": [243, 244], "2651349": [243, 244], "bundle_atlas_hcp842": [243, 244], "297": [72, 82, 83, 114, 243, 244], "href": [243, 244], "advanced_atlas_of_80_bundles_in_mni_spac": [243, 244], "7375883": [243, 244], "target_tractogram_hcp": [243, 244], "testing_data": [243, 244], "6084": [243, 244], "m9": [243, 244], "3395704": [243, 244], "ivim_dataset": [243, 244], "mni_templ": [243, 244], "servicesatlas": [243, 244], "icbm152nlin2009": [243, 244], "icbm": [243, 244], "152": [73, 82, 83, 243, 244], "qtdmri_test_retest_2subject": [243, 244], "santin": [243, 244], "leherici": [243, 244], "petiet": [243, 244], "dinf": [243, 244], "3500": [64, 79, 82, 84, 243, 244], "discoveri": [243, 244], "mr750": [243, 244], "purl": [243, 244], "ng782rw8378": [243, 244], "2462": [82, 243, 244], "2769": [82, 233, 243, 244], "3077": [40, 243, 244], "3692": [82, 84, 243, 244], "exercis": 246, "gotten": 248, "greatest": 248, "bleed": 248, "forg": [19, 22, 248], "xcode": [19, 22, 248], "mint": 248, "neurodebian": 248, "uninstal": 248, "__file__": 248, "canopi": 248, "okai": 248, "pythonpath": 19, "bashrc": 19, "bash_profil": 19, "retyp": 19, "user_dir": 19, "restart": 19, "powershel": 19, "python_compil": 19, "msc": 19, "amd64": 19, "visualstudiobuildtool": 19, "msc_ver": 19, "vcvarsal": 19, "bat": 19, "reinstal": [19, 233], "gcc": [19, 22], "clang": [19, 22], "brew": 19, "multilib": [], "bash": [], "usr": 19, "cellar": [], "hombrew": 19, "svv": [19, 21], "encount": [19, 22, 75, 83, 84, 87, 88, 89], "build_modref_templ": 19, "docgen_cmd": 19, "reference_cmd": 19, "make_exampl": 19, "sphinxbuild": 19, "path_to_sphinx": 19, "expertis": 249, "didn": 249, "depict": 249, "dipy_": [], "anaconda_": [], "powershell_": [], "visualstudiobuildtools_": [], "xcode_": [], "openmp_": [], "homebrew_": [], "llvm": [19, 22], "3087": [24, 25, 35, 82], "00it": [24, 25, 32, 35, 36, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "2433": 24, "25it": [24, 25, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "796": [24, 85], "70it": [24, 32, 33, 35, 36, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 93], "32it": [24, 25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 82, 83, 84, 85], "43it": [24, 33, 35, 36, 37, 40, 53, 73, 74, 80, 82, 83, 84, 85], "2653": [24, 82], "64it": [24, 35, 36, 40, 53, 72, 73, 74, 80, 81, 82, 83, 84, 85], "1985": [24, 72], "33it": [24, 25, 32, 35, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "31it": [24, 25, 33, 35, 36, 37, 40, 53, 73, 74, 79, 82, 83, 84, 85], "2766": 24, "96it": [24, 32, 33, 37, 40, 53, 73, 74, 79, 80, 82, 83, 84, 85, 93], "2875": [24, 25, 35, 82, 84, 233], "2890": [24, 35, 82, 233], "34it": [24, 25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "18it": [24, 25, 35, 36, 37, 40, 53, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85], "3700": [24, 53, 82], "02it": [24, 25, 33, 35, 37, 40, 53, 72, 73, 74, 82, 83, 84, 85], "744": [24, 82], "3303": 24, "09it": [24, 25, 32, 35, 36, 37, 40, 53, 72, 73, 74, 75, 79, 82, 83, 84, 85, 93], "3310": [24, 25, 82], "22it": [24, 25, 32, 35, 36, 37, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 93], "3309": [24, 35, 53, 84], "66it": [24, 25, 32, 33, 35, 36, 37, 40, 53, 71, 72, 73, 74, 79, 80, 82, 83, 84, 85], "3569": [24, 82], "95it": [24, 25, 33, 35, 36, 40, 71, 72, 73, 74, 80, 82, 83, 84, 85], "3344": [24, 35, 82], "23it": [24, 25, 32, 33, 35, 40, 72, 73, 74, 80, 82, 83, 84, 85], "2516": [24, 82], "3247": [24, 82], "10it": [24, 25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "2843": [24, 25, 40, 82, 233], "2976": [24, 25, 35, 40, 82, 233], "55it": [24, 25, 32, 35, 37, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85], "3259": [24, 82], "57it": [24, 25, 32, 33, 35, 36, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "69795": 25, "08it": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "2503": [25, 82], "68it": [25, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "2585": [25, 82], "78it": [25, 32, 33, 35, 36, 40, 72, 73, 74, 79, 82, 83, 84, 85], "2691": [25, 72, 82], "46it": [25, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "30it": [25, 33, 35, 36, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "2613": [25, 82], "12it": [25, 32, 35, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 92], "2870": [25, 40, 82, 233], "48it": [25, 35, 36, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85], "2458": [25, 73, 82, 84], "2774": [25, 35, 82, 233], "2759": [25, 82, 233], "75it": [25, 33, 35, 36, 37, 40, 53, 72, 73, 74, 82, 83, 84, 85], "3099": [25, 40, 82], "2895": [25, 82], "11it": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 82, 83, 84, 85], "3393": [25, 82], "2900": [25, 35, 82, 233], "42it": [25, 33, 35, 36, 37, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85], "3686": [25, 53, 82], "2903": [25, 35, 40, 233], "37it": [25, 33, 35, 36, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "3979": 25, "4256": [25, 82], "91it": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "4530": [25, 82], "73it": [25, 32, 33, 35, 36, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85], "4802": [25, 82], "85it": [25, 33, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 93], "5089": [25, 33, 82, 84], "5393": [25, 85], "2820": [25, 233], "83it": [25, 32, 33, 35, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "5679": [25, 37], "2825": [25, 82, 233], "51it": [25, 33, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85], "5967": 25, "2833": [25, 233], "81it": [25, 32, 33, 35, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85], "6251": 25, "2828": [25, 40, 74, 82, 84, 233], "39it": [25, 32, 33, 35, 36, 40, 53, 73, 74, 79, 80, 82, 83, 84, 85], "6535": 25, "2826": 25, "60it": [25, 32, 33, 35, 36, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "6930": 25, "3155": [25, 82], "21it": [25, 35, 36, 37, 53, 72, 73, 74, 82, 83, 84, 85], "7246": 25, "2967": [25, 53, 82, 233], "7546": 25, "2969": [25, 35, 233], "7845": 25, "74it": [25, 32, 33, 35, 36, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "8149": [25, 72], "2818": [25, 35, 73, 82, 233], "84it": [25, 35, 37, 40, 53, 73, 74, 79, 80, 82, 83, 84, 85], "8435": 25, "2731": [25, 82], "8711": 25, "2660": [25, 79, 82], "9002": [25, 84], "2724": [25, 72, 73, 82, 84], "9382": [25, 53], "3024": [25, 35, 79, 82], "26it": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85], "9758": 25, "3230": 25, "10084": 25, "3139": [25, 82, 84], "45it": [25, 32, 33, 35, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85, 93], "10401": 25, "3141": [25, 40, 82, 84], "56it": [25, 32, 33, 35, 37, 40, 53, 73, 74, 80, 82, 83, 84, 85], "10717": [25, 85], "3140": [25, 40, 82], "61it": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85], "11033": 25, "2966": [25, 40, 82, 233], "11333": 25, "2812": [25, 82, 84, 233], "04it": [25, 32, 35, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "11618": 25, "11895": [25, 85], "13it": [25, 32, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "12164": 25, "2639": [25, 82], "58it": [25, 32, 35, 36, 37, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85], "12429": 25, "12691": 25, "2605": 25, "90it": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "13039": 25, "2851": [25, 35, 82, 233], "65it": [25, 32, 35, 40, 72, 73, 74, 80, 82, 83, 84, 85], "13336": 25, "2879": [25, 35, 82, 233], "13625": 25, "2860": [25, 40, 73, 82, 233], "13912": 25, "07it": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85], "14179": 25, "14438": 25, "2491": [25, 233], "14766": 25, "15040": 25, "15306": 25, "2636": [25, 84], "15634": 25, "2815": [25, 82, 85, 233], "05it": [25, 32, 33, 35, 37, 40, 53, 72, 73, 74, 82, 83, 84, 85], "15918": 25, "2816": [25, 82, 233], "16201": 25, "16524": 25, "2814": [25, 82, 233], "69it": [25, 32, 35, 36, 37, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85, 92], "16809": 25, "2755": [25, 35, 82], "17114": [25, 74], "17400": 25, "2819": [25, 82, 84], "17692": 25, "2844": [25, 40, 82, 233], "17978": 25, "18343": 25, "3011": [25, 40, 82], "18646": 25, "71it": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85], "18946": 25, "2882": [25, 35, 40, 80, 82, 233], "72it": [25, 32, 33, 35, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "19281": 25, "3009": [25, 73, 82, 88, 233], "44it": [25, 32, 33, 35, 36, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "19584": 25, "3007": [25, 82, 84, 233], "40it": [25, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "19901": 25, "3047": [25, 40, 53, 82], "20207": 25, "2973": [25, 73, 82], "97it": [25, 33, 35, 36, 40, 71, 72, 73, 74, 82, 83, 84, 85], "20544": 25, "3080": [25, 35, 73], "20878": 25, "3150": [25, 40, 82], "21194": 25, "3126": [25, 82], "21508": 25, "2949": [25, 82, 233], "89it": [25, 33, 35, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "21889": 25, "3188": [25, 82], "22211": 25, "3191": [25, 82], "22533": 25, "49it": [25, 32, 33, 35, 37, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85], "22842": 25, "23130": 25, "2790": [25, 40, 82, 233], "23434": 25, "2853": [25, 82], "23726": 25, "2850": [25, 82, 84], "15it": [25, 32, 33, 35, 36, 37, 40, 53, 73, 74, 79, 82, 83, 84, 85], "24085": 25, "3056": [25, 82], "24395": 25, "2975": [25, 35, 82, 233], "24696": 25, "67it": [25, 32, 35, 36, 37, 40, 53, 73, 74, 79, 80, 82, 83, 84, 85], "24995": 25, "2915": [25, 74, 82, 233], "25326": 25, "3022": [25, 82], "25695": 25, "3209": [25, 82, 84], "59it": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85, 93], "26018": 25, "3208": [25, 82], "06it": [25, 32, 35, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "26340": 25, "3039": [25, 40, 82, 84], "26703": 25, "3200": [25, 35, 82, 84], "63it": [25, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "27026": 25, "3202": [25, 82], "27349": 25, "3114": [25, 74, 79], "27663": 25, "2928": [25, 35, 40, 82, 233], "27978": 25, "2984": [25, 35, 82, 233], "20it": [25, 32, 33, 35, 37, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "28290": 25, "3017": [25, 35, 40], "28626": 25, "3108": [25, 35, 40, 82, 84], "29005": 25, "3297": [25, 35, 40, 74, 82], "29384": 25, "3433": [25, 35, 82], "01it": [25, 32, 35, 36, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "29729": 25, "3331": [25, 53, 82, 84], "30064": 25, "3327": [25, 35], "30398": 25, "47it": [25, 33, 35, 36, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "30715": 25, "2987": [25, 40, 233], "31105": 25, "3233": [25, 82, 84], "31457": 25, "3306": [25, 82], "31791": 25, "3210": [25, 35, 40], "32115": 25, "2936": [25, 40, 73, 233], "32469": 25, "32866": 25, "3323": [25, 53], "33230": 25, "3406": [25, 82], "33575": 25, "3407": [25, 53], "33919": 25, "34253": 25, "3148": [25, 40], "34571": 25, "92it": [25, 32, 33, 35, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 93], "34878": 25, "35185": 25, "3034": [25, 82], "35529": 25, "3092": [25, 82], "14it": [25, 33, 35, 37, 40, 53, 72, 73, 74, 82, 83, 84, 85], "35839": 25, "3067": [25, 35], "36160": 25, "36481": 25, "3125": [25, 82], "36802": 25, "3143": [25, 35, 40, 82, 84], "17it": [25, 32, 35, 36, 40, 53, 73, 74, 80, 82, 83, 84, 85], "37117": 25, "37432": 25, "3136": [25, 40, 82], "37746": 25, "2954": [25, 40, 82, 233], "38068": 25, "19it": [25, 35, 36, 53, 72, 73, 74, 79, 82, 83, 84, 85], "38373": 25, "2937": [25, 82], "38669": 25, "93it": [25, 32, 33, 35, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85], "39010": 25, "3012": [25, 35, 82, 84], "98it": [25, 35, 36, 40, 72, 73, 74, 82, 83, 84, 85], "39325": 25, "3044": [25, 40, 73, 82], "24it": [25, 35, 36, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85, 93], "39631": 25, "3041": [25, 35, 40, 80, 82, 84], "39936": 25, "3020": [25, 35, 40, 82], "40259": 25, "40567": 25, "3070": [25, 35], "40892": 25, "3123": [25, 35, 82], "50it": [25, 32, 33, 40, 72, 73, 74, 79, 80, 82, 83, 84, 85], "41205": 25, "2934": [25, 82, 233], "41501": 25, "41797": 25, "42092": [25, 40], "28it": [25, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "42373": 25, "2771": [25, 82, 233], "27it": [25, 32, 33, 35, 72, 73, 74, 82, 83, 84, 85], "42678": 25, "42999": 25, "2945": [25, 82, 84, 233], "43350": 25, "3102": [25, 40, 82], "43662": 25, "3100": 25, "44003": 25, "3184": [25, 82], "44390": 25, "3378": 25, "44729": 25, "3373": [25, 82], "94it": [25, 32, 33, 35, 36, 53, 72, 73, 74, 79, 82, 83, 84, 85, 92], "45067": 25, "3365": [25, 82], "45504": 25, "3652": [25, 53, 82], "45870": 25, "3539": [25, 82], "46314": 25, "3791": [25, 82], "46695": 25, "47043": 25, "3315": [25, 35, 84], "47381": 25, "3073": [25, 35, 40, 82], "47695": 25, "2961": [25, 40, 82, 233], "86it": [25, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "48076": 25, "3166": [25, 82], "16it": [25, 35, 36, 37, 40, 53, 72, 73, 74, 79, 82, 83, 84, 85, 93], "48453": 25, "3325": [25, 35, 84], "48791": 25, "49128": 25, "3337": [25, 84], "49465": 25, "3320": [25, 40, 82], "49799": 25, "2970": [25, 35, 82], "62it": [25, 33, 35, 36, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "50104": 25, "2983": [25, 35, 40, 79, 82, 233], "50413": [25, 85], "50719": 25, "2864": [25, 40, 233], "51080": 25, "3065": [25, 40, 82], "51517": 25, "3427": [25, 82], "51865": 25, "3321": [25, 84], "52233": 25, "3416": [25, 53, 82, 84], "52578": 25, "3163": [25, 40, 53, 82], "52908": 25, "3194": [25, 40, 84], "53232": 25, "3030": [25, 82, 84], "53576": 25, "3137": [25, 82, 84], "53it": [25, 35, 37, 40, 53, 72, 73, 74, 76, 79, 80, 82, 83, 84, 85], "53920": 25, "3216": [25, 53, 82], "54245": 25, "3043": [25, 82, 84], "54553": 25, "3031": [25, 40, 82], "54859": 25, "55149": 25, "2873": [25, 35, 82, 233], "55439": 25, "99it": [25, 32, 35, 36, 37, 40, 53, 72, 73, 74, 82, 83, 84, 85, 92], "55729": 25, "2719": [25, 82], "29it": [25, 32, 33, 35, 36, 37, 40, 53, 72, 74, 79, 82, 83, 84, 85], "56013": 25, "2747": [25, 73, 82, 233], "56405": 25, "3076": [25, 40, 82], "56725": 25, "3103": [25, 35, 40, 84], "57038": 25, "3104": [25, 35, 40, 82], "57350": 25, "57653": 25, "3010": [25, 53, 82], "57956": 25, "2841": [25, 40, 79, 82, 233], "58243": 25, "2842": [25, 73, 82, 84], "58539": 25, "58828": 25, "2868": [25, 233], "59116": 25, "2865": [25, 35, 40, 82, 84, 233], "59420": 25, "2916": [25, 40, 73, 82, 84, 233], "59755": 25, "3029": [25, 82], "60059": 25, "60341": 25, "2714": [25, 82], "79it": [25, 32, 35, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "60616": 25, "2574": [25, 82], "60879": 25, "2583": [25, 79, 84], "61211": 25, "38it": [25, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "61550": 25, "61848": 25, "2950": [25, 35, 40, 84], "62157": 25, "62470": 25, "3019": [25, 84], "62815": 25, "63130": 25, "2959": [25, 35, 82], "63472": 25, "3082": [25, 35, 85], "63783": 25, "64098": 25, "64399": 25, "2898": [25, 40, 82, 233], "64692": 25, "2899": [25, 40, 82, 233], "65019": 25, "2998": [25, 35, 40, 233], "65321": 25, "65607": 25, "2835": [25, 35, 233], "65899": 25, "2854": [25, 82], "52it": [25, 33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "66204": 25, "66496": 25, "66796": 25, "67103": 25, "2920": [25, 35, 82, 233], "67451": 25, "3078": [25, 82], "67760": 25, "68069": 25, "68376": 25, "2897": [25, 82, 233], "68669": 25, "03it": [25, 33, 35, 36, 37, 40, 53, 73, 74, 79, 80, 82, 83, 84, 85], "68979": 25, "87it": [25, 32, 33, 35, 36, 37, 40, 53, 72, 73, 74, 82, 83, 84, 85], "69305": 25, "3033": [25, 40, 82, 84], "69619": 25, "2977": [25, 40], "80it": [25, 32, 35, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "2810": 31, "3673": [31, 40, 53, 84], "58788": [32, 33, 36, 37], "3581": [32, 35, 82], "793": [32, 72, 73, 80, 82], "3999": [32, 72, 82], "4309": [32, 53], "4926": [32, 37, 79, 82, 84], "5011": [32, 82, 84], "2948": [32, 35, 73], "5229": [32, 84], "3471": [32, 53, 80], "4896": [32, 82], "3975": [32, 82], "4929": [32, 82], "4471": 32, "4781": [32, 72, 82], "4952": [32, 82], "4779": [32, 82], "5476": 32, "4901": [32, 72, 82], "5968": 32, "4876": [32, 82], "6539": 32, "5010": [32, 82], "7164": 32, "5361": 32, "7996": 32, "6213": 32, "8736": 32, "6544": [32, 72], "9393": 32, "6313": [32, 72, 84], "10044": 32, "6353": [32, 84], "10682": 32, "6345": 32, "11318": 32, "5664": 32, "11899": 32, "5692": [32, 36], "12479": 32, "5551": [32, 84], "13042": 32, "5564": 32, "13604": 32, "5262": [32, 84], "14137": 32, "5128": [32, 36, 82], "14654": 32, "4880": [32, 82], "15188": [32, 74], "4993": [32, 37, 82], "15693": 32, "4996": [32, 82, 84], "16196": 32, "4964": [32, 82], "16788": 32, "5225": [32, 84], "17369": 32, "5380": 32, "17951": 32, "5497": [32, 84], "18503": 32, "5335": [32, 84], "19039": [32, 40], "5327": [32, 84], "19574": 32, "5132": [32, 36, 82], "20235": 32, "5461": 32, "20790": 32, "5472": 32, "21339": 32, "5278": 32, "21869": [32, 37], "5127": [32, 72, 82], "22384": 32, "4905": [32, 82], "22902": 32, "4930": [32, 37, 82, 84], "23420": 32, "4990": [32, 82], "23921": 32, "4688": [32, 82], "24464": 32, "4883": [32, 82, 84], "24986": 32, "4966": [32, 82], "25534": 32, "5103": [32, 72, 82], "26138": 32, "5362": [32, 37], "26677": 32, "5357": [32, 36, 37], "27215": 32, "5196": [32, 82], "27737": 32, "5072": [32, 82, 84], "28247": 32, "5069": [32, 36, 72, 82], "28756": 32, "5033": [32, 37, 82, 84], "29299": 32, "5133": [32, 84], "29833": 32, "5184": [32, 82], "30400": 32, "5316": [32, 72], "30933": 32, "5013": [32, 82], "31564": 32, "5371": 32, "32123": 32, "5420": [32, 36], "32669": 32, "5295": 32, "33288": 32, "5540": [32, 84], "33845": 32, "5378": 32, "34386": 32, "5342": 32, "34922": 32, "5332": [32, 36], "35477": 32, "5382": [32, 33, 36], "36026": 32, "5400": 32, "36567": 32, "4976": [32, 82, 84], "37198": 32, "5333": [32, 84], "77it": [32, 33, 35, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "37835": 32, "5613": 32, "38403": 32, "38960": 32, "5238": 32, "39490": 32, "4936": [32, 84], "39990": 32, "4941": [32, 36, 82, 84], "40489": 32, "4939": [32, 36, 82, 84], "41090": 32, "5129": [32, 82, 84], "41635": 32, "5210": 32, "42211": 32, "5356": [32, 84], "42749": 32, "5352": [32, 72, 84], "43473": 32, "5891": [32, 33], "44064": 32, "5369": 32, "44678": 32, "5573": [32, 37], "45244": 32, "5588": [32, 33, 36, 84], "45809": 32, "5288": 32, "46387": 32, "5415": [32, 84], "46935": 32, "5302": 32, "47470": 32, "5272": [32, 36], "48000": [32, 85], "48529": 32, "5261": 32, "49113": 32, "5408": [32, 84], "49656": 32, "5246": 32, "76it": [32, 33, 35, 36, 37, 40, 72, 73, 74, 80, 82, 83, 84, 85], "50217": 32, "5338": 32, "50753": 32, "5328": 32, "51287": 32, "5170": [32, 82], "51806": 32, "5019": [32, 82], "52320": 32, "5042": [32, 82], "52826": 32, "4920": [32, 82], "53320": 32, "4748": [32, 53, 82, 85], "53842": 32, "4872": [32, 82], "54430": 32, "5153": [32, 82, 84], "55097": 32, "5583": 32, "55690": 32, "5674": 32, "56260": 32, "5353": [32, 36, 84], "56813": [32, 85], "5391": 32, "57356": 32, "5092": [32, 82], "57890": 32, "5149": [32, 82], "58428": 32, "5204": [32, 36], "5221": 32, "2598": [33, 82], "3776": [33, 82], "4427": [33, 82], "5114": [33, 82], "5868": 33, "3186": [33, 82, 84], "5520": 33, "3742": [33, 82], "5483": 33, "4303": [33, 82], "5511": 33, "4856": [33, 82], "5337": [33, 84], "5392": [33, 37], "4765": [33, 82], "5897": 33, "4834": [33, 82], "6412": 33, "4913": [33, 82], "6938": 33, "5001": [33, 82], "7469": 33, "5078": [33, 82], "8134": [33, 84], "5530": [33, 84], "8691": 33, "5112": [33, 79, 82], "9308": 33, "5396": [33, 84], "9856": 33, "5381": 33, "10400": 33, "10939": 33, "5161": [33, 36, 82, 84], "11533": 33, "12269": 33, "5926": [33, 84], "12867": 33, "5763": 33, "54it": [33, 35, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "13492": 33, "5892": 33, "14085": 33, "14677": 33, "5560": [33, 72], "15238": 33, "5412": 33, "15783": 33, "5413": 33, "16397": 33, "5612": 33, "16984": 33, "5676": [33, 36, 37], "17554": 33, "5673": 33, "18123": 33, "5667": 33, "82it": [33, 35, 36, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 93], "18691": 33, "5529": [33, 36], "19269": 33, "19881": 33, "5736": 33, "20500": 33, "5856": 33, "21087": 33, "5645": [33, 37], "21717": 33, "5821": [33, 85], "22302": 33, "5655": 33, "22870": 33, "5654": 33, "23534": 33, "5931": 33, "24129": 33, "5921": [33, 37], "24723": [33, 74], "5581": [33, 84], "36it": [33, 35, 36, 40, 53, 71, 72, 73, 74, 79, 80, 82, 83, 84, 85, 93], "25286": 33, "5430": 33, "25833": 33, "5431": [33, 84], "26488": 33, "5741": 33, "27066": 33, "5739": 33, "27642": 33, "5729": 33, "28276": 33, "5896": [33, 84], "28867": 33, "5287": 33, "29408": 33, "5139": [33, 82, 84], "29931": 33, "5156": [33, 82], "30617": 33, "5625": 33, "31187": 33, "5219": [33, 84], "31856": 33, "5609": 33, "32428": 33, "5596": [33, 36], "32995": 33, "5605": 33, "33590": 33, "5691": 33, "41it": [33, 35, 36, 37, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85], "34163": 33, "88it": [33, 35, 36, 40, 53, 72, 73, 74, 79, 80, 82, 83, 84, 85, 92, 93], "34735": 33, "5522": [33, 36], "35290": 33, "5213": 33, "35817": 33, "36401": 33, "5383": [33, 84], "36950": 33, "5402": [33, 88], "37520": 33, "5475": 33, "38070": 33, "5469": 33, "38704": 33, "5711": 33, "39277": 33, "5701": [33, 84], "39974": 33, "6064": 33, "40582": 33, "6058": 33, "41189": 33, "5738": [33, 84], "41817": 33, "5875": 33, "42408": 33, "5838": 33, "43130": 33, "6225": 33, "35it": [33, 35, 36, 37, 40, 53, 72, 73, 74, 80, 82, 83, 84, 85], "43755": 33, "6219": [33, 84], "44379": 33, "5552": [33, 84], "45099": 33, "5988": 33, "45712": 33, "5544": [33, 84], "46282": 33, "5317": [33, 84], "46825": 33, "5168": [33, 82, 84], "47349": 33, "5040": [33, 82], "47858": 33, "5045": [33, 74, 82], "48400": 33, "5141": [33, 82, 84], "49002": 33, "49632": 33, "5635": [33, 84], "50307": 33, "5947": 33, "50965": 33, "6118": 33, "51580": 33, "5937": 33, "52177": 33, "5459": 33, "52785": 33, "5618": 33, "53355": 33, "5619": 33, "53964": 33, "5631": 33, "54531": 33, "5597": 33, "55094": 33, "5437": [33, 84], "55673": 33, "5527": 33, "56228": 33, "5405": [33, 84], "56771": 33, "5065": [33, 37, 82], "57283": 33, "4679": [33, 82], "57823": 33, "4865": [33, 74, 82], "58387": 33, "5070": [33, 72, 82, 84], "77848": [35, 40], "2655": [35, 82], "2712": [35, 82], "3296": 35, "3600": [35, 82], "2811": [35, 40, 82], "3887": [35, 82], "2822": [35, 40, 233], "4170": [35, 82, 84], "2803": [35, 84, 233], "4451": [35, 82], "2571": [35, 82], "4794": [35, 82, 84], "5088": 35, "2836": [35, 82, 84, 233], "5410": 35, "2941": [35, 82, 84, 233], "5713": [35, 36], "2960": [35, 72, 82, 233], "6032": 35, "6336": [35, 72], "2896": [35, 40, 73, 82, 233], "6628": 35, "2862": [35, 233], "6989": 35, "7304": 35, "3085": [35, 40, 82], "7614": 35, "7924": 35, "2992": [35, 82, 84, 233], "8229": 35, "3001": [35, 82, 233], "8569": [35, 84], "3111": [35, 82], "8912": 35, "9233": 35, "3105": 35, "9545": 35, "9859": 35, "3106": [35, 40, 73, 82], "10171": 35, "2946": [35, 82, 233], "10468": 35, "2930": [35, 73, 82, 233], "10819": 35, "3088": [35, 82], "11136": 35, "11448": 35, "11751": 35, "2925": [35, 40, 82, 84, 233], "12045": 35, "2923": [35, 82, 233], "12378": 35, "3032": [35, 73, 82], "12683": 35, "12987": 35, "2874": [35, 40, 73, 82], "13277": 35, "13732": 35, "3349": [35, 82, 84], "14070": 35, "3330": [35, 82], "14405": 35, "14790": 35, "3473": [35, 53], "15139": 35, "3368": 35, "15478": 35, "3366": [35, 40], "15816": 35, "3193": [35, 40, 82], "16138": 35, "16449": [35, 85], "3004": [35, 82, 233], "16751": 35, "17083": 35, "3023": [35, 40, 82, 84], "17476": 35, "3275": [35, 82, 84], "17806": 35, "3183": [35, 82], "18215": 35, "18561": 35, "3434": [35, 82], "18957": 35, "19317": 35, "3444": [35, 82], "19664": 35, "19977": 35, "20310": 35, "3008": [35, 40, 82], "20619": 35, "3026": [35, 40, 72, 82, 84], "20941": 35, "21267": 35, "3119": 35, "21701": 35, "3463": [35, 40, 82], "22051": 35, "3445": [35, 53, 82, 85], "22398": 35, "22744": 35, "3441": [35, 82], "23090": 35, "3439": [35, 82, 84], "23435": 35, "3335": [35, 82, 84], "23770": 35, "24104": 35, "3324": [35, 40, 82], "24437": 35, "3318": [35, 82], "24774": 35, "25107": 35, "3317": [35, 84], "25439": 35, "3212": [35, 80, 82, 84], "25762": 35, "26081": 35, "26390": 35, "26734": 35, "3169": [35, 72, 82], "27057": 35, "3180": [35, 40, 82], "27391": 35, "3219": 35, "27726": 35, "3250": [35, 82], "28071": 35, "3299": [35, 40], "28455": 35, "3452": [35, 82], "28801": 35, "29137": [35, 53], "29449": 35, "29752": 35, "2840": [35, 233], "30058": 35, "2893": [35, 40, 82, 233], "30350": 35, "30656": 35, "2824": [35, 73, 84], "30965": 35, "31301": 35, "31616": 35, "3053": [35, 40, 82], "31942": 35, "3109": [35, 40], "32279": 35, "3177": [35, 82], "32600": 35, "3178": [35, 82, 84], "32961": 35, "33292": 35, "3127": [35, 82, 84], "33637": 35, "33996": 35, "3313": [35, 84], "34329": 35, "3292": [35, 40, 53, 82], "34667": 35, "34999": 35, "35314": 35, "35620": 35, "35920": 35, "2956": [35, 82, 233], "36238": 35, "36551": 35, "36892": 35, "3144": [35, 40], "37208": 35, "3051": [35, 40, 88], "37648": 35, "37994": 35, "3261": [35, 82], "38323": 35, "3245": [35, 82, 88], "38650": 35, "3172": [35, 82], "38969": 35, "3170": [35, 82], "39288": 35, "3149": [35, 80, 82], "39604": 35, "2971": [35, 82, 84], "39908": 35, "40208": 35, "2981": [35, 82, 233], "40508": 35, "2980": [35, 40, 82, 233], "40807": 35, "41109": 35, "41505": 35, "41866": 35, "3357": [35, 82], "42203": 35, "3353": [35, 82], "42539": 35, "3246": [35, 82], "42865": 35, "3241": [35, 72, 82], "43190": 35, "43506": 35, "2906": [35, 73, 85, 233], "43897": 35, "44266": [35, 85], "44602": 35, "3173": [35, 82], "44924": 35, "45226": 35, "45507": 35, "45826": 35, "46147": 35, "2932": [35, 72, 80, 82, 84, 233], "46497": 35, "3089": [35, 40, 82, 84], "46810": 35, "47108": 35, "2931": [35, 40, 82, 233], "47404": 35, "47679": 35, "2638": [35, 85], "47946": 35, "2643": [35, 82], "48242": 35, "48571": 35, "48896": 35, "49275": 35, "49605": 35, "3229": [35, 82, 84, 88], "49930": 35, "3227": [35, 82], "50254": 35, "50556": 35, "2965": [35, 73, 82, 233], "50856": 35, "2902": [35, 40, 82, 84, 233], "51172": 35, "2968": [35, 40, 82, 233], "51471": 35, "51772": 35, "52098": 35, "3038": [35, 40, 82], "52458": 35, "3196": [35, 40, 82], "52779": 35, "53083": 35, "3014": [35, 82], "53387": 35, "2813": [35, 82, 233], "53672": 35, "53990": 35, "54425": 35, "3291": [35, 53, 82], "54762": 35, "3305": [35, 53], "55095": 35, "3211": [35, 82], "55419": 35, "3214": 35, "55742": 35, "3213": [35, 82], "56065": 35, "3121": [35, 73, 84], "56379": 35, "2957": [35, 82, 233], "56678": 35, "2952": [35, 40, 82, 84, 233], "57039": 35, "3132": [35, 82, 84], "57355": 35, "57668": 35, "57979": 35, "3021": [35, 40], "58294": 35, "3050": [35, 82, 84], "58604": 35, "3057": [35, 82], "58925": 35, "3094": [35, 40, 73, 82], "59256": 35, "59572": 35, "59879": 35, "60185": 35, "60486": 35, "2962": [35, 82, 84], "60783": 35, "61140": 35, "3128": [35, 53, 82], "61454": 35, "61767": 35, "3118": [35, 73, 82, 84], "62080": 35, "2939": [35, 79, 82, 233], "62377": 35, "62665": 35, "2801": [35, 40, 82, 233], "62948": 35, "63270": 35, "2914": [35, 36, 40, 82, 233], "63563": 35, "2911": 35, "63883": 35, "2988": [35, 82, 233], "64183": 35, "64604": 35, "3338": [35, 82], "65042": 35, "3636": [35, 82], "65407": 35, "3630": [35, 80, 82], "65771": 35, "3518": [35, 82, 84], "66124": 35, "66497": 35, "3509": [35, 53, 84], "66849": 35, "67182": 35, "3294": [35, 53, 72, 82, 84], "67541": 35, "3369": [35, 82, 84], "67880": 35, "68218": 35, "3362": [35, 82], "68626": 35, "3563": [35, 53, 82], "68984": 35, "3454": [35, 82], "69331": 35, "3267": [35, 84], "69661": 35, "3197": [35, 53, 72], "69983": 35, "70296": 35, "70598": 35, "70892": 35, "2922": [35, 40, 233], "71185": 35, "2837": [35, 73, 82], "71470": 35, "71820": 35, "72119": 35, "72415": 35, "2947": [35, 82, 84, 233], "72715": 35, "73029": 35, "3003": 35, "73381": 35, "73856": 35, "3612": [35, 82, 84], "74218": 35, "3238": [35, 53, 79, 82], "74550": 35, "3167": 35, "74872": 35, "75185": 35, "75476": 35, "2861": [35, 72, 82], "75802": 35, "2964": [35, 53, 233], "76118": 35, "76503": 35, "76922": 35, "3510": [35, 53, 82, 84], "77276": 35, "3391": [35, 82], "77673": 35, "3550": [35, 53, 84], "78031it": 35, "3354": [35, 53, 82], "78370it": 35, "3093": [35, 40, 72, 82], "78685it": 35, "78991it": 35, "79325it": 35, "79658it": 35, "3074": [35, 82], "79984it": 35, "3120": [35, 37, 40, 73, 82], "80299it": 35, "3124": [35, 82, 84], "80614it": 35, "80928it": 35, "81242it": 35, "81524it": 35, "81860it": 35, "2848": [35, 82], "82175it": 35, "82515it": 35, "82825it": 35, "3042": [35, 82], "83145it": 35, "83465it": 35, "83809it": 35, "84146it": 35, "3240": [35, 84], "84471it": 35, "3064": [35, 40, 73], "84780it": 35, "85071it": 35, "85362it": 35, "2799": [35, 82], "85644it": 35, "2721": [35, 82], "85935it": 35, "86220it": 35, "2784": [35, 40], "86545it": 35, "2912": [35, 73, 82, 233], "86864it": 35, "2986": [35, 40, 82, 233], "87164it": 35, "87463it": 35, "2979": [35, 40, 82, 233], "87762it": 35, "2891": [35, 233], "88109it": 35, "88557it": 35, "88905it": 35, "3265": 35, "89235it": 35, "3266": [35, 53, 82], "89564it": 35, "3264": [35, 53, 82], "89892it": 35, "2999": [35, 73, 82, 233], "90197it": 35, "90494it": 35, "90790it": 35, "91116it": 35, "91410it": 35, "2907": [35, 82, 233], "91703it": 35, "91996it": 35, "2908": [35, 82, 233], "92288it": 35, "92614it": 35, "92909it": 35, "2894": [35, 72, 73, 82, 84, 233], "93201it": 35, "93492it": 35, "93815it": 35, "2877": [35, 82], "94105it": 35, "2779": [35, 82], "94385it": 35, "2642": [35, 82], "94652it": 35, "94910it": 35, "95171it": 35, "2517": 35, "95424it": 35, "2459": 35, "95671it": 35, "2360": [35, 82], "95927it": 35, "2370": [35, 82], "96165it": 35, "2354": [35, 82], "96440it": 35, "96687it": 35, "96934it": 35, "96989it": [35, 40], "294": [36, 82, 83], "3419": [36, 40, 53, 82], "4142": [36, 82], "4491": [36, 79, 82, 84], "4324": [36, 82, 84], "4641": [36, 82, 84], "3133": [36, 40, 82], "4637": [36, 82], "3598": [36, 53, 82], "4640": [36, 72, 82], "4063": [36, 82], "4618": [36, 79, 82], "4709": [36, 82], "5538": [36, 72, 84], "5908": 36, "5436": 36, "6473": 36, "5411": [36, 84], "7121": 36, "7694": [36, 85], "5387": [36, 37, 72], "8280": 36, "5506": 36, "8966": 36, "5882": [36, 74, 84], "9558": 36, "5403": 36, "10108": 36, "10654": 36, "5397": 36, "11199": 36, "11743": 36, "5135": [36, 82, 84], "12261": 36, "4995": [36, 82], "12779": 36, "5038": [36, 82], "13390": 36, "13928": 36, "5331": [36, 84], "14504": 36, "5445": [36, 84], "15051": 36, "5106": [36, 82], "15630": 36, "5284": 36, "16218": 36, "5443": [36, 84], "16767": 36, "5296": 36, "17300": 36, "17817": 36, "4958": 36, "18316": 36, "4889": [36, 82], "18893": 36, "19411": 36, "19926": 36, "4686": [36, 82, 84], "20405": 36, "4701": 36, "21006": 36, "5060": [36, 82], "21729": 36, "5669": 36, "22387": 36, "5918": [36, 84], "22985": 36, "5925": 36, "23605": 36, "5989": 36, "24270": 36, "6170": 36, "24890": 36, "6166": 36, "25509": 36, "5985": 36, "26110": 36, "5843": 36, "26697": 36, "5372": 36, "27293": 36, "5519": [36, 84], "27852": 36, "28410": 36, "5341": [36, 84], "28994": 36, "5471": 36, "29645": 36, "5757": [36, 84], "30258": 36, "5847": 36, "30846": 36, "5677": 36, "31417": 36, "5510": 36, "31971": 36, "32496": 36, "5059": [36, 82, 84], "33007": 36, "33517": 36, "5053": [36, 82, 84], "34024": 36, "5048": [36, 82, 84], "34530": 36, "5041": [36, 82, 84], "35035": 36, "5032": [36, 72, 82, 85], "35572": 36, "5120": [36, 82, 84], "36169": 36, "36706": 36, "5191": [36, 82], "37423": 36, "5753": 36, "38043": 36, "5867": 36, "38632": 36, "5690": [36, 84], "39204": 36, "5688": [36, 37], "39775": 36, "40321": 36, "5220": 36, "40847": 36, "41345": 36, "41951": 36, "5242": [36, 72], "42490": 36, "43202": 36, "5792": [36, 88], "43832": 36, "5934": 36, "44429": 36, "5313": 36, "44974": 36, "5339": [36, 84], "45518": 36, "5178": [36, 82], "46072": 36, "5269": 36, "46634": 36, "5358": 36, "47175": 36, "5207": 36, "47700": 36, "48389": 36, "49071": 36, "5995": [36, 84], "49745": 36, "6194": 36, "50544": 36, "6706": 36, "51217": 36, "6697": 36, "51889": 36, "6343": [36, 84], "52529": 36, "53128": 36, "5760": 36, "53715": 36, "54282": 36, "54848": 36, "5603": 36, "55443": 36, "56189": 36, "6187": [36, 84], "56812": 36, "5840": [36, 72], "57402": 36, "5682": 36, "57975": 36, "5685": [36, 84], "58547": 36, "4353": [37, 82], "4602": [37, 82], "4910": [37, 80, 82], "2994": [37, 40, 82], "3564": [37, 40, 53, 82], "5176": [37, 82], "4083": [37, 84], "4937": [37, 82], "5099": [37, 82], "4879": [37, 79, 82], "5630": [37, 84], "4992": [37, 82], "6131": 37, "4843": [37, 82], "6618": 37, "4691": [37, 82], "7104": [37, 53], "4731": [37, 82, 84], "7602": 37, "4792": [37, 82], "8139": 37, "4950": [37, 82, 84], "8650": 37, "4984": [37, 82], "9195": 37, "5107": [37, 82], "9767": 37, "5273": 37, "10441": 37, "5563": 37, "11117": 37, "5901": [37, 72, 84], "11758": 37, "6033": 37, "12362": 37, "5649": [37, 84], "12932": 37, "5491": 37, "13526": 37, "5604": 37, "14184": [37, 53], "5866": 37, "14793": 37, "15416": 37, "5998": 37, "16184": 37, "6488": [37, 84], "16835": 37, "6111": [37, 84], "17457": 37, "6129": 37, "18075": 37, "5946": 37, "18674": 37, "5608": 37, "19241": 37, "5452": [37, 84], "19790": 37, "20301": 37, "4935": [37, 82], "20830": 37, "5021": [37, 82], "21336": 37, "5080": [37, 82], "22417": 37, "5182": [37, 82], "22955": 37, "5230": 37, "23592": 37, "5554": 37, "24159": 37, "24718": 37, "5562": [37, 84], "25301": 37, "5628": [37, 84], "25996": 37, "6002": 37, "26597": 37, "5852": 37, "27184": 37, "27764": 37, "28334": 37, "5508": 37, "28887": 37, "5349": [37, 84], "29424": 37, "5052": [37, 82], "29938": 37, "30448": 37, "5067": [37, 82], "30957": 37, "4923": [37, 82], "31503": 37, "32012": 37, "32507": 37, "4655": [37, 82], "33035": [37, 53], "4822": [37, 82], "33548": 37, "4898": [37, 82], "34041": 37, "4743": [37, 82], "34518": 37, "4724": [37, 84], "35049": 37, "4878": [37, 82], "35639": 37, "5165": [37, 82, 84], "36191": 37, "5260": [37, 84], "36841": 37, "5614": [37, 84], "37405": 37, "5457": [37, 84], "37953": 37, "5450": [37, 84], "38584": 37, "39155": 37, "39756": 37, "5765": [37, 74, 84], "40399": 37, "5945": 37, "40995": 37, "5935": [37, 84], "41589": 37, "5754": 37, "42166": 37, "5428": 37, "42765": 37, "5577": [37, 74], "43327": 37, "5578": 37, "43976": 37, "5830": [37, 84], "44562": 37, "5659": [37, 88], "45131": 37, "5375": 37, "45673": 37, "5345": [37, 84], "46241": 37, "46863": 37, "5641": [37, 84], "47430": 37, "5477": [37, 85], "48060": 37, "5702": 37, "48660": 37, "5775": 37, "49240": 37, "5607": [37, 84], "49844": 37, "5720": [37, 84], "50418": 37, "5237": [37, 84], "50951": 37, "5235": [37, 84], "51481": 37, "5096": [37, 82], "52050": 37, "5253": [37, 84], "52615": 37, "53165": 37, "5388": 37, "53707": 37, "54251": 37, "54843": 37, "5536": [37, 84], "55455": 37, "5698": [37, 84], "56026": 37, "5526": [37, 72, 84], "56581": 37, "5367": 37, "57120": 37, "57658": 37, "5351": [37, 84], "58194": 37, "5340": 37, "58729": 37, "5177": [37, 82], "2593": 40, "2338": [40, 73], "2465": [40, 82], "3142": [40, 53], "3399": [40, 53, 82], "2544": [40, 82], "3657": [40, 82], "3937": [40, 82], "4200": [40, 82, 84, 85], "2614": [40, 82], "4462": [40, 72, 82], "4810": [40, 82], "5117": [40, 82], "2791": [40, 82, 233], "5401": [40, 84], "2661": [40, 82], "5715": 40, "6007": 40, "6292": [40, 84], "2807": [40, 82], "6575": [40, 84], "2665": [40, 82], "6946": 40, "7270": [40, 84], "7576": 40, "2823": [40, 82, 233], "7863": 40, "8245": [40, 53, 84], "3002": [40, 82, 233], "8551": [40, 84], "8856": 40, "2838": [40, 80, 233], "9144": 40, "9461": 40, "2884": [40, 233], "9790": 40, "2991": [40, 73, 82, 233], "10092": 40, "2990": [40, 82, 233], "10393": 40, "10702": 40, "11058": 40, "11386": 40, "3160": [40, 82], "11704": 40, "11999": 40, "2909": 40, "12321": 40, "12633": 40, "12938": 40, "13267": 40, "13581": 40, "13910": 40, "14226": 40, "3052": [40, 82], "14535": 40, "3054": 40, "14842": 40, "15148": 40, "15463": 40, "15766": 40, "16116": 40, "3138": [40, 82], "16447": 40, "3181": [40, 53], "16766": 40, "2997": [40, 82, 233], "17124": 40, "3153": [40, 82], "17448": 40, "3171": [40, 82], "17772": 40, "3185": [40, 82], "18092": 40, "3090": [40, 82], "18403": 40, "2917": 40, "18711": 40, "2955": [40, 73, 233], "19345": 40, "19644": 40, "19976": 40, "20283": 40, "20588": 40, "20891": 40, "21191": 40, "21501": 40, "2953": [40, 82, 233], "21832": 40, "3048": [40, 73, 82, 84], "22149": 40, "22499": 40, "22819": 40, "3161": 40, "23139": 40, "3162": [40, 82], "23456": 40, "23766": 40, "3084": [40, 82], "24075": 40, "2752": [40, 84], "24382": 40, "2831": [40, 233], "24685": 40, "25003": 40, "25320": 40, "3015": [40, 73, 74], "25625": 40, "25931": 40, "26228": 40, "26529": 40, "26879": 40, "27187": 40, "3061": [40, 73], "27495": 40, "3059": [40, 72, 82, 84], "27932": 40, "3436": 40, "28343": 40, "3627": [40, 53, 82], "28707": 40, "3623": [40, 53], "29070": 40, "3571": [40, 82], "29428": 40, "2982": [40, 73, 84], "29743": 40, "2871": [40, 82, 233], "30042": 40, "30341": 40, "2856": [40, 73, 82, 233], "30652": 40, "2921": [40, 82, 84, 233], "30993": 40, "31371": 40, "3253": [40, 82], "31771": 40, "3461": [40, 53, 82], "32121": 40, "3446": 40, "32468": 40, "3345": [40, 80, 82], "32805": 40, "33127": [40, 85], "3107": 40, "33466": 40, "33788": 40, "34147": 40, "3228": [40, 82], "34472": 40, "34779": 40, "35077": 40, "35415": 40, "3068": [40, 82], "35806": 40, "3302": [40, 82], "36139": 40, "3035": [40, 82], "36450": 40, "36763": 40, "3062": [40, 82], "37072": [40, 85], "3063": [40, 82], "37381": 40, "2910": [40, 82, 84, 233], "37776": 40, "3195": [40, 82], "38210": 40, "3519": [40, 82], "38566": 40, "3293": [40, 53], "38901": 40, "2963": [40, 82, 233], "39207": 40, "39512": 40, "39821": 40, "40126": 40, "2938": [40, 84, 233], "40436": 40, "40796": 40, "41123": 40, "41443": 40, "3175": 40, "41762": 40, "42446": 40, "3258": 40, "42773": 40, "43089": 40, "43396": 40, "43687": 40, "2804": [40, 82, 233], "43969": 40, "44267": 40, "44604": 40, "44909": 40, "45212": 40, "45513": 40, "45813": 40, "2989": [40, 82, 233], "46113": 40, "46410": 40, "2919": [40, 233], "46703": 40, "46986": 40, "47296": 40, "47592": 40, "47898": 40, "48228": 40, "48531": 40, "2913": [40, 82, 233], "48826": 40, "2918": [40, 82], "49119": 40, "49403": 40, "49700": [40, 74], "2858": [40, 82, 233], "49987": 40, "2772": [40, 84], "50321": 40, "2929": [40, 82, 84, 233], "50616": 40, "50902": 40, "2685": [40, 82], "51197": 40, "51555": 40, "51876": 40, "52182": 40, "52530": 40, "3156": [40, 82], "52847": 40, "53164": 40, "53465": 40, "53772": 40, "54144": 40, "3152": [40, 82], "54554": 40, "54899": 40, "55214": 40, "2993": [40, 72, 82, 85], "55519": 40, "55838": 40, "3046": [40, 82], "56215": 40, "3244": [40, 82], "56543": 40, "56856": 40, "3018": [40, 82], "57164": 40, "3027": [40, 73, 82], "57528": 40, "57851": 40, "58165": 40, "58520": 40, "58838": 40, "59154": 40, "59460": 40, "59766": 40, "60183": 40, "60609": 40, "60968": 40, "61309": 40, "61642": 40, "3280": 40, "61972": 40, "62285": 40, "3083": [40, 82], "62596": 40, "62891": 40, "63188": 40, "63482": 40, "63776": 40, "64069": 40, "2832": [40, 82, 84, 233], "64354": 40, "64789": 40, "65246": 40, "3532": [40, 53, 82, 84, 85], "65640": 40, "3640": [40, 53], "66008": 40, "3540": [40, 82, 84], "66409": 40, "3664": [40, 82], "66779": 40, "67233": 40, "67725": 40, "4013": [40, 84], "68136": 40, "4031": [40, 82], "68542": 40, "3786": [40, 82], "68926": 40, "3590": [40, 53, 82, 84], "69290": 40, "69628": 40, "3243": [40, 82], "69956": 40, "3096": 40, "70273": 40, "3110": [40, 82], "70587": 40, "70969": 40, "71301": 40, "71610": 40, "2958": [40, 82, 233], "71909": 40, "72208": 40, "72506": 40, "2876": [40, 82, 233], "72795": 40, "73084": 40, "73445": 40, "73816": 40, "74154": 40, "74649": 40, "3656": [40, 53, 79, 82], "75015": 40, "3355": [40, 53, 82], "75444": 40, "3610": [40, 53, 82], "75810": 40, "3396": 40, "76155": 40, "76511": 40, "3187": [40, 53], "76883": 40, "77223": 40, "77679": 40, "3536": [40, 82], "78040it": 40, "3451": [40, 53, 82], "78391it": 40, "3273": [40, 82, 88], "78724it": 40, "3192": [40, 82], "79047it": 40, "3028": [40, 82], "79353it": 40, "79773it": 40, "80108it": 40, "3289": [40, 53, 82, 84], "80440it": 40, "80772it": 40, "81094it": 40, "81407it": 40, "81719it": 40, "82031it": 40, "82342it": 40, "82653it": 40, "82982it": 40, "83297it": 40, "83636it": 40, "3204": [40, 82], "83957it": 40, "3189": 40, "84277it": 40, "84575it": 40, "84864it": 40, "2650": [40, 82, 84], "85152it": 40, "85483it": 40, "85886it": 40, "86210it": 40, "86541it": 40, "86863it": 40, "87253it": 40, "3301": [40, 53, 84, 85], "87605it": 40, "87988it": 40, "3485": [40, 53, 82], "88396it": 40, "3649": [40, 53, 82], "88763it": 40, "3277": [40, 82], "89099it": 40, "89417it": 40, "89718it": 40, "2888": [40, 73, 82, 233], "90011it": 40, "90416it": 40, "90870it": 40, "3481": [40, 53, 82], "91226it": 40, "91552it": 40, "91867it": 40, "92173it": 40, "92468it": 40, "2889": [40, 82, 233], "92761it": 40, "93053it": 40, "93328it": 40, "93611it": 40, "2720": 40, "93886it": 40, "2646": [40, 82, 84], "94153it": 40, "2632": [40, 82], "94418it": 40, "94708it": 40, "2703": [40, 82, 233], "94980it": 40, "95251it": 40, "95522it": 40, "95782it": 40, "96146it": 40, "96496it": 40, "96802it": 40, "998783": 43, "041415": 43, "026771": 43, "003548": 43, "044491": 43, "990912": 43, "126939": 43, "781647": 43, "021270": 43, "127975": 43, "991549": 43, "033348": 43, "000000": [43, 64, 76, 93], "224": [43, 82, 83, 114], "streamline_count": 43, "6276": 43, "point_count": 43, "205884": 43, "9878335e": 43, "1415159e": 43, "6770778e": 43, "0900355e": 43, "4491168e": 43, "9091226e": 43, "2693870e": 43, "2678165e": 43, "1270305e": 43, "2797531e": 43, "9154925e": 43, "7033348e": 43, "0000000e": 43, "18507480621338": 46, "74393367767334": 46, "4989851301573556": 46, "48861312866211": 47, "761403560638428": 47, "9367017097817125": 47, "064": 48, "axesimag": [49, 107], "0x00000183351ffbe0": 49, "42318344116211": 50, "3992626667022705": 52, "49157977104187": 52, "24217367172241": 53, "57378": 53, "782": [53, 82], "4007": [53, 74, 84, 85], "3836": [53, 82], "3992": [53, 82, 84], "2570": [53, 82], "4349": 53, "4219": [53, 82], "3464": [53, 82], "3898": [53, 82, 84], "4331": 53, "4304": [53, 82], "4763": [53, 82, 84], "4054": [53, 82], "5172": [53, 72, 82], "4053": [53, 82], "5580": 53, "3625": [53, 82, 84], "5952": 53, "3546": [53, 82], "6333": 53, "6699": 53, "3423": [53, 82], "3586": [53, 82], "7497": 53, "3675": [53, 82], "7869": 53, "3575": [53, 82, 84], "8230": 53, "3576": [53, 82], "8590": 53, "3379": [53, 82], "8932": 53, "9264": 53, "9595": 53, "9960": 53, "10304": 53, "3395": [53, 82, 84], "10675": 53, "3479": 53, "11088": 53, "3662": [53, 82], "11455": 53, "3375": [53, 82], "11828": 53, "3467": [53, 82, 84], "12197": 53, "3524": [53, 82, 84], "12560": 53, "3548": [53, 82], "12927": 53, "3578": [53, 82], "13290": 53, "3584": [53, 74, 82, 84], "13699": 53, "3722": [53, 80, 82], "14073": 53, "14434": 53, "14792": 53, "3504": [53, 82, 84], "15224": 53, "3733": 53, "15698": 53, "4026": [53, 82], "16134": 53, "4118": [53, 82], "16548": 53, "3990": [53, 82, 84], "17020": 53, "4194": [53, 82], "17442": 53, "4193": [53, 82, 84], "3956": [53, 82], "18262": 53, "3871": [53, 80, 82], "18652": 53, "3743": [53, 82, 84], "19029": 53, "3638": [53, 82], "19466": [53, 74], "3834": [53, 82], "19852": 53, "3833": [53, 84], "20237": 53, "3520": [53, 82, 84], "20595": 53, "20944": 53, "3435": [53, 82], "21301": 53, "3466": 53, "21650": [53, 85], "21983": 53, "3278": [53, 79], "22313": 53, "22642": 53, "23025": 53, "3370": [53, 82], "23411": 53, "3506": [53, 82, 84], "23808": 53, "3633": [53, 72], "24173": 53, "3505": [53, 82, 84], "24536": 53, "3535": [53, 82], "24913": 53, "3596": [53, 82, 84], "25317": 53, "3719": [53, 84], "25690": 53, "3607": [53, 82, 84], "26053": 53, "26415": 53, "3601": [53, 79, 82, 84], "26776": 53, "3492": [53, 82], "27127": 53, "27573": 53, "27944": 53, "3685": 53, "28314": 53, "3574": [53, 82], "28673": 53, "3572": [53, 82], "29153": 53, "3921": [53, 82], "29556": 53, "3944": 53, "29980": 53, "4021": [53, 82], "30384": 53, "3588": [53, 82], "30752": 53, "3422": [53, 84], "31129": 53, "3512": [53, 84], "31487": 53, "3525": [53, 82], "31844": 53, "3453": [53, 72, 82], "32193": 53, "3437": [53, 82], "32596": 53, "3599": [53, 82, 84], "3821": [53, 82], "33430": 53, "33817": 53, "3847": [53, 82], "34203": 53, "34569": 53, "3432": [53, 82, 84], "34950": 53, "3529": [53, 82], "35307": 53, "3530": [53, 82], "35663": 53, "3249": [53, 82], "35994": 53, "3260": [53, 82], "36324": 53, "36660": 53, "3285": [53, 80, 82], "36993": 53, "3290": 53, "37367": 53, "3411": 53, "37832": 53, "3766": [53, 82], "38259": 53, "3906": [53, 82, 84], "38678": 53, "3982": [53, 84], "39078": 53, "3864": 53, "39466": 53, "3751": [53, 82, 84], "39843": 53, "40352": 53, "40755": 53, "3750": 53, "41136": 53, "3760": [53, 82], "41516": 53, "3562": [53, 82], "41877": 53, "42228": 53, "3478": [53, 82], "42578": 53, "42967": 53, "43324": 53, "43675": 53, "44009": 53, "44341": 53, "44669": 53, "44988": 53, "45345": 53, "3207": [53, 74], "45780": 53, "3527": [53, 80, 82, 84], "46135": 53, "46478": 53, "46821": 53, "3408": [53, 82, 84], "47163": 53, "3405": [53, 82, 84], "47505": 53, "47872": 53, "48285": 53, "3616": [53, 82, 84], "48648": 53, "49001": 53, "3488": [53, 72, 84], "49359": 53, "49749": 53, "50112": 53, "3611": [53, 82], "50474": 53, "3501": [53, 82], "50826": 53, "51238": 53, "51594": 53, "51973": 53, "3594": [53, 72, 82], "52357": 53, "52724": 53, "3653": [53, 82], "53091": 53, "53457": 53, "3559": [53, 72, 82], "53814": 53, "3553": [53, 82], "54305": 53, "3941": 53, "54701": 53, "55077": 53, "3620": [53, 82, 84], "55487": 53, "3749": [53, 82], "55865": 53, "56230": 53, "56578": 53, "3428": [53, 82, 84], "56923": 53, "57302": 53, "3455": 53, "3799": 53, "3792": [53, 82], "3666": [53, 82], "2302": [53, 73, 82], "3715": [53, 82, 84], "2675": [53, 82], "3713": [53, 82], "3709": 53, "3430": [53, 82, 84], "3737": [53, 82], "3873": [53, 82, 84], "3940": [53, 82], "4268": [53, 82], "3935": 53, "5167": [53, 82], "4012": [53, 82], "5570": [53, 84], "3830": [53, 82], "5956": 53, "3724": [53, 82], "6331": 53, "6743": 53, "3768": [53, 82], "7122": [53, 84], "7490": 53, "3639": [53, 82], "7855": 53, "3634": [53, 82], "3702": [53, 82], "8616": 53, "8976": 53, "3482": [53, 82], "9862": 53, "3969": [53, 82, 88], "10262": 53, "10641": 53, "3755": [53, 79, 82], "11020": 53, "11388": 53, "3655": [53, 82], "11755": 53, "3449": [53, 82], "12103": 53, "12433": 53, "12793": 53, "13148": 53, "3356": [53, 82], "13512": 53, "3429": 53, "13857": 53, "14600": 53, "2640": 53, "15006": 53, "15510": 53, "15897": 53, "3440": [53, 82], "16268": 53, "16633": 53, "3412": [53, 80, 82, 84], "16999": 53, "17395": 53, "3901": 53, "18260": 53, "3824": [53, 82], "18648": 53, "19022": 53, "3704": [53, 84], "19450": 53, "3861": [53, 72, 82, 84], "19918": 53, "4090": [53, 80, 82], "20330": 53, "3974": [53, 82], "20730": 53, "21131": 53, "3757": [53, 82], "21512": 53, "21888": 53, "3351": 53, "22245": 53, "3402": [53, 84], "22595": 53, "3403": [53, 82], "22943": 53, "23339": 53, "23716": 53, "3617": [53, 82], "24081": 53, "3516": [53, 82], "24495": 53, "3689": [53, 82], "24931": 53, "3874": 53, "25321": 53, "3782": 53, "25702": 53, "3761": [53, 82], "26080": 53, "3650": [53, 82], "26496": 53, "3789": [53, 82], "26877": 53, "3783": [53, 82, 84], "27257": 53, "3779": 53, "27636": 53, "3774": [53, 82, 84], "28014": 53, "3769": [53, 82], "28392": 53, "3762": [53, 72, 82], "28769": 53, "3671": [53, 82], "3561": [53, 82], "29495": 53, "3558": 53, "29852": 53, "30206": 53, "3528": [53, 82, 85], "30580": 53, "3583": [53, 82], "30939": 53, "3380": [53, 72], "31280": 53, "3288": [53, 82], "31673": 53, "32090": 53, "3659": [53, 82], "32459": 53, "3557": [53, 82], "32958": 53, "3960": [53, 82, 84], "33358": [53, 74], "33739": 53, "3644": 53, "34107": 53, "34506": 53, "3592": 53, "34870": 53, "3597": 53, "35233": 53, "35588": 53, "3483": [53, 82], "35938": 53, "36281": [53, 85], "36648": 53, "3494": [53, 82, 84], "37015": 53, "3545": [53, 82], "37371": 53, "37713": 53, "38054": 53, "3358": [53, 82, 85], "38391": 53, "38728": 53, "39064": 53, "3348": 53, "39505": 53, "39980": 53, "40378": 53, "40766": 53, "3844": [53, 82], "41176": 53, "3910": [53, 82, 84], "41568": 53, "3902": [53, 82, 84], "41959": 53, "3895": [53, 82, 84], "42349": 53, "3798": [53, 82, 84], "42730": 53, "3663": [53, 72, 82], "43098": 53, "43502": 53, "3614": [53, 82, 84], "43867": 53, "44231": 53, "3615": [53, 82], "44594": 53, "3613": [53, 82], "44957": 53, "3465": [53, 82], "45362": 53, "45723": 53, "3591": [53, 82], "46088": 53, "46449": 53, "3573": [53, 82], "46906": 53, "3856": [53, 82, 84], "47397": [53, 85], "4159": [53, 82, 84], "47814": 53, "3919": [53, 82, 84], "48210": 53, "3522": [53, 82, 84], "48587": 53, "3582": [53, 82], "48965": 53, "3631": [53, 84], "49334": 53, "3642": [53, 82], "49703": 53, "50071": 53, "3547": 53, "50431": 53, "3554": 53, "50813": 53, "51177": 53, "51538": 53, "3513": [53, 82], "51897": 53, "52251": 53, "52605": 53, "3523": [53, 72], "52981": 53, "53340": 53, "3579": [53, 82], "53740": 53, "3696": [53, 72, 82], "54110": 53, "3688": [53, 82, 84], "54479": 53, "3420": [53, 82], "54825": 53, "3283": [53, 82], "55157": 53, "3232": 53, "55483": 53, "3131": [53, 82], "55798": 53, "56220": 53, "56656": 53, "57098": 53, "3819": [53, 82, 85], "6821175": 53, "55836398873534": 53, "30635929107666016": 54, "27885155e": 56, "64159326e": 56, "27225652e": 56, "04956532e": 56, "14476942e": 56, "09238401e": 56, "48231836e": 56, "14724759e": 56, "99118618e": 56, "00922316e": 56, "45151719e": 56, "57523690e": 56, "64420512e": 56, "15781188e": 56, "80867207e": 56, "95126627e": 56, "65137634e": 56, "99155582e": 56, "60252416e": 56, "00425673e": 56, "61332937e": 56, "90254498e": 56, "27307059e": 56, "60603081e": 56, "47183356e": 56, "20574051e": 56, "83350236e": 56, "14125513e": 56, "69816089e": 56, "41652973e": 56, "65810184e": 56, "09091550e": 56, "02803519e": 56, "37797281e": 56, "66794736e": 56, "05071178e": 56, "30152910e": 56, "47732225e": 56, "69695667e": 56, "43331519e": 56, "69521432e": 56, "86000650e": 56, "22564143e": 56, "81940542e": 56, "23114694e": 56, "00411690e": 56, "18859166e": 56, "31035692e": 56, "09236625e": 56, "16271490e": 56, "60896368e": 56, "80550544e": 56, "23850748e": 56, "34660211e": 56, "96064718e": 56, "52281460e": 56, "41685604e": 56, "09835740e": 56, "95468440e": 56, "05191670e": 56, "51188733e": 56, "00786901e": 56, "90451676e": 56, "93070189e": 56, "12520447e": 56, "29184549e": 56, "66782014e": 56, "01089180e": 56, "57783647e": 56, "01069525e": 56, "18025460e": 56, "83424315e": 56, "11557516e": 56, "80938562e": 56, "39982228e": 56, "61383543e": 56, "75562311e": 56, "11942345e": 56, "07862309e": 56, "95208621e": 56, "03685788e": 56, "63824336e": 56, "00533276e": 56, "36499825e": 56, "32508829e": 56, "89067045e": 56, "48093695e": 56, "12065103e": 56, "91460692e": 56, "66866436e": 56, "47163529e": 56, "20706070e": 56, "44065968e": 56, "26151379e": 56, "47377861e": 56, "27322976e": 56, "01437214e": 56, "82193078e": 56, "53461624e": 56, "97581082e": 56, "82253815e": 56, "38772869e": 56, "99438100e": 56, "43088764e": 56, "97296486e": 56, "37956803e": 56, "61572643e": 56, "41256174e": 56, "13171913e": 56, "66345739e": 56, "72236557e": 56, "53787832e": 56, "38142282e": 56, "15152605e": 56, "64290833e": 56, "51043362e": 56, "05048944e": 56, "37789170e": 56, "67265431e": 56, "19853384e": 56, "47688569e": 56, "58048740e": 56, "98682008e": 56, "71511170e": 56, "91995691e": 56, "04274365e": 56, "20178672e": 56, "75742692e": 56, "77915777e": 56, "09793985e": 56, "64951228e": 56, "72851497e": 56, "47828696e": 56, "11290023e": 56, "40602328e": 56, "17479328e": 56, "49340714e": 56, "28222540e": 56, "58545459e": 56, "19730483e": 56, "43187991e": 56, "08331445e": 56, "73162399e": 56, "12249446e": 56, "64081315e": 56, "39019407e": 56, "22940214e": 56, "91596059e": 56, "48597307e": 56, "29372460e": 56, "74627718e": 56, "76592265e": 56, "05317780e": 56, "64336996e": 56, "67491316e": 56, "78465601e": 56, "87691754e": 56, "73805354e": 56, "43293397e": 56, "94403472e": 56, "27721773e": 56, "18652792e": 56, "59382086e": 56, "55431988e": 56, "82425816e": 56, "58213108e": 56, "86074216e": 56, "09931726e": 56, "67597364e": 56, "77106875e": 56, "18251571e": 56, "33868483e": 56, "87414687e": 56, "18055391e": 56, "46964089e": 56, "09944164e": 56, "79754597e": 56, "78018827e": 56, "86908466e": 56, "58900919e": 56, "17480219e": 56, "99431568e": 56, "59130012e": 56, "65355974e": 56, "65040013e": 56, "87884425e": 56, "50682215e": 56, "56091908e": 56, "75862147e": 56, "13578748e": 56, "02792752e": 56, "93455869e": 56, "263329": 59, "933178": 59, "5934806": 59, "708311737182022": 59, "126699956862897": 62, "625329686133504": 62, "98875": 62, "09229": 62, "950791142080666": 62, "05039": 62, "99871": 62, "0054406": 62, "86677697627236": 62, "11825": 62, "039925": 62, "99218": 62, "743516616940774": 62, "38475": 64, "0b735e8f16695a37bfbd66aab136eb66": 64, "e9b9bb56252503ea49d31fb30a0ac637": 64, "0c83f7e8b917cd677ad58a078658ebb7": 64, "skoudoro": [64, 73, 75, 79, 80, 82, 83, 84, 87, 88, 89, 93, 100, 104, 134], "964050": 64, "999992": 64, "999979": 64, "00504001": 64, "00402795": 64, "00398794": 64, "0257055": 64, "653861": 64, "756178": 64, "589518": 64, "769236": 64, "246462": 64, "235785": 64, "529095": 64, "815147": 64, "893578": 64, "263559": 64, "363394": 64, "79784": 64, "133726": 64, "587851": 64, "232937": 64, "931884": 64, "278087": 64, "93672": 64, "144139": 64, "31903": 64, "eta": 67, "1m": 67, "910u": 67, "2m": 67, "976u": 67, "975u": 67, "974u": 67, "978u": 67, "973u": 67, "977u": 67, "3m": 67, "7828795917129362": 69, "8051656184264874": 69, "43192536287591415": 69, "6038698891074246": 69, "00139919": [71, 89, 90], "0003007": [71, 89, 90], "7372408293461": [71, 89, 90], "21491283972219186": 71, "2281": [71, 82], "9317": 72, "151": [72, 73, 82, 83, 105, 114], "1026": [72, 82], "788": [72, 82, 85], "2308": [72, 82], "798": [72, 77, 93], "2399": 72, "2677": [72, 73, 82], "2849": [72, 82, 233], "3013": [72, 82], "779": [72, 82, 84], "3101": 72, "781": [72, 82], "3390": [72, 74], "3487": [72, 82], "3570": [72, 82], "3694": [72, 82], "3753": 72, "3810": [72, 82, 84], "3866": [72, 82], "3922": [72, 82], "3994": [72, 82, 84], "4066": [72, 82], "4138": [72, 82], "4210": [72, 82], "4282": [72, 82, 84], "4356": [72, 82], "4430": [72, 82], "4505": [72, 82], "4571": 72, "4631": [72, 82], "4684": [72, 82], "4737": [72, 82, 84], "4791": [72, 82], "4846": [72, 82, 84], "4957": [72, 82, 84], "5014": [72, 82], "5185": [72, 82], "5300": 72, "5359": [72, 84], "5418": [72, 84], "5478": 72, "5598": [72, 84], "5658": [72, 84], "5778": 72, "5963": 72, "6025": [72, 84], "6087": 72, "6150": 72, "6212": 72, "6274": [72, 74, 84], "547": [72, 80, 82], "6399": [72, 84], "6463": 72, "6526": 72, "6589": [72, 84], "6652": 72, "6716": 72, "6778": [72, 84], "6842": 72, "6906": 72, "6968": [72, 84], "7024": 72, "7074": 72, "7119": 72, "7165": 72, "7211": 72, "7257": 72, "7303": 72, "7351": 72, "7399": 72, "7447": 72, "7495": 72, "7542": [72, 84], "7591": 72, "7640": 72, "7690": 72, "7740": [72, 84], "7790": 72, "7840": 72, "7891": 72, "7942": 72, "7993": 72, "8045": 72, "8097": 72, "8201": 72, "8254": 72, "8306": [72, 84], "8358": 72, "8411": 72, "8464": 72, "8517": 72, "468": [72, 80, 82, 83], "8570": 72, "8623": 72, "8677": 72, "8730": [72, 84], "8784": 72, "8837": 72, "8891": 72, "8945": 72, "8999": [72, 85], "9052": [72, 84], "9107": 72, "9161": 72, "9215": 72, "9269": 72, "7516": 72, "244": [72, 82, 83], "291": [72, 82, 83], "1175": [72, 82], "2184": [72, 82], "2421": 72, "2455": [72, 80], "2523": [72, 233], "2758": 72, "2793": [72, 80, 82, 84], "2827": [72, 82, 233], "2927": [72, 82, 233], "3129": [72, 82], "3205": [72, 82, 84], "3276": 72, "3312": [72, 82], "3346": [72, 82], "3418": [72, 82, 84], "3629": 72, "3729": 72, "3795": [72, 82], "3828": [72, 80, 82], "3894": 72, "3927": [72, 82], "3961": [72, 82], "4035": [72, 82], "4070": [72, 82], "4104": [72, 82, 84], "4145": 72, "4181": [72, 82, 84], "4216": [72, 82], "4251": [72, 82], "4286": [72, 82, 84], "4321": [72, 82], "4354": [72, 82], "4387": [72, 82, 84], "4425": [72, 82], "4500": [72, 82], "4536": [72, 82], "4572": [72, 82, 84], "4606": [72, 82, 84], "4674": [72, 82], "4710": [72, 82], "4744": 72, "4816": [72, 80, 82], "4851": [72, 82], "4885": [72, 82], "4925": [72, 82], "4961": [72, 82], "4997": [72, 82], "5138": [72, 82], "5206": 72, "5240": 72, "5280": 72, "5421": [72, 84], "5458": 72, "5492": [72, 84], "5595": 72, "5629": 72, "5663": 72, "5697": 72, "5731": 72, "5772": 72, "5810": 72, "5846": 72, "5881": 72, "5915": [72, 85], "5949": 72, "5983": [72, 74, 84], "6017": 72, "6050": 72, "6083": [72, 85], "6116": [72, 84], "6149": 72, "6182": 72, "6215": 72, "6248": [72, 88], "6281": [72, 84], "6352": 72, "6390": 72, "6430": [72, 84], "6470": 72, "6508": 72, "6580": 72, "6617": 72, "6653": 72, "6689": 72, "6723": 72, "6755": 72, "6788": [72, 84], "6824": [72, 84], "6858": 72, "6891": 72, "6924": 72, "6958": 72, "6991": 72, "7026": [72, 84], "7060": [72, 84], "7098": 72, "7134": 72, "7171": [72, 84], "7207": 72, "7244": 72, "7280": 72, "7317": 72, "7354": 72, "7391": 72, "7426": 72, "7461": 72, "7496": 72, "1883": [73, 82, 233], "2802": [73, 82], "156": [73, 82, 83], "186": [73, 82, 83], "276": [73, 82, 83], "293": [73, 82, 83, 114], "157": [73, 83], "158": [73, 82, 83, 87], "770": [73, 82], "786": [73, 82], "198": [73, 82, 83], "154": [73, 82, 83], "165": [73, 82, 83], "1256": [73, 82, 233], "1365": [73, 82, 85], "148": [73, 82, 83, 114], "1936": 73, "2356": [73, 82], "2396": [73, 82], "2439": [73, 82], "2494": [73, 82], "147": [73, 82, 83], "2601": 73, "2641": [73, 82, 84], "2695": [73, 82], "2730": [73, 82, 233], "2764": 73, "2787": [73, 82, 233], "2806": [73, 82, 233], "2878": [73, 82, 233], "3097": [73, 82, 84], "3113": [73, 82], "834": [73, 74, 82, 85], "2610": 73, "2792": [73, 233], "2995": [73, 82, 233], "appdata": [73, 80, 84, 88], "continuum": [73, 80, 84, 88], "anaconda3": [73, 80, 84, 88], "env": [73, 80, 84, 88], "py310": [73, 80, 84, 88], "optimal_inaccur": 73, "1144": [73, 82, 84], "195": [73, 82, 83], "1617": [73, 82], "1736": [73, 82, 92], "1776": [73, 82], "2166": [73, 82, 87], "2189": [73, 82], "2325": [73, 82], "2388": [73, 82], "2426": [73, 82], "2445": [73, 82], "2498": [73, 82], "2597": [73, 82], "2652": [73, 82], "2706": [73, 233], "2798": [73, 82, 233], "3016": [73, 82, 84], "3081": [73, 82], "57580": [74, 85], "281": [74, 82, 83], "1501": [74, 82], "903": [74, 85], "3489": [74, 82], "3684": [74, 82], "3800": [74, 82, 84], "3905": [74, 82], "4109": [74, 82, 84], "4208": [74, 82], "4307": [74, 82], "4401": [74, 82], "4490": 74, "4589": [74, 82, 84], "4681": [74, 82], "4773": [74, 82], "4956": 74, "5131": [74, 84], "5217": [74, 85], "5311": [74, 84], "5399": 74, "5487": 74, "5665": 74, "6082": 74, "6178": [74, 84], "6367": 74, "6458": [74, 84], "6548": 74, "6637": 74, "6725": [74, 84], "6812": 74, "6897": 74, "6982": 74, "7067": 74, "7166": 74, "7275": 74, "7390": 74, "7491": [74, 84], "7600": 74, "7718": 74, "7824": 74, "7929": 74, "8042": 74, "8151": [74, 85], "8257": 74, "8360": 74, "8460": 74, "8557": 74, "8654": 74, "8748": 74, "8842": 74, "8933": 74, "9027": 74, "9117": 74, "9212": 74, "9316": 74, "9416": 74, "9512": 74, "9611": 74, "9715": 74, "9814": 74, "9911": 74, "10004": 74, "10102": 74, "10199": 74, "10294": 74, "10389": 74, "10482": 74, "10579": 74, "10674": 74, "10774": 74, "10874": 74, "10973": 74, "11081": 74, "11187": 74, "11290": 74, "11392": 74, "11494": 74, "11591": 74, "11688": 74, "11782": 74, "11876": 74, "11973": 74, "12075": [74, 85], "12181": 74, "12284": 74, "12382": 74, "12480": 74, "12578": 74, "12676": 74, "12778": 74, "12877": 74, "12976": 74, "13072": 74, "13184": 74, "13284": 74, "13393": 74, "13494": 74, "13592": 74, "969": [74, 85], "13703": 74, "13807": 74, "13909": 74, "14008": 74, "14104": 74, "14198": 74, "14294": 74, "14396": 74, "14498": 74, "14594": 74, "14690": 74, "14787": 74, "14892": 74, "14994": 74, "15091": 74, "15282": 74, "15390": 74, "15486": 74, "15580": 74, "15676": 74, "15790": 74, "15889": 74, "15988": 74, "16085": 74, "16182": 74, "16299": 74, "16401": 74, "16503": 74, "16596": 74, "16684": 74, "16793": 74, "16891": 74, "16990": 74, "17221": 74, "17326": 74, "17431": 74, "17533": 74, "17632": 74, "17733": 74, "17840": 74, "17941": 74, "18042": 74, "18145": 74, "18250": 74, "18349": 74, "18455": 74, "18554": 74, "18650": 74, "18743": 74, "18830": 74, "18916": 74, "18998": 74, "19099": 74, "19186": 74, "19273": 74, "19360": 74, "19563": 74, "19658": 74, "19751": 74, "19843": 74, "19933": 74, "20023": 74, "20112": 74, "20216": 74, "20317": 74, "20431": 74, "20535": 74, "20636": 74, "20736": 74, "20829": 74, "20922": 74, "21015": 74, "21111": 74, "21203": 74, "21299": 74, "21396": 74, "21490": 74, "21584": 74, "21678": 74, "21766": 74, "21853": 74, "21938": 74, "22022": 74, "22121": 74, "22213": 74, "22334": 74, "22448": 74, "22551": 74, "22654": 74, "22753": 74, "22847": 74, "22959": 74, "23079": 74, "23184": 74, "23284": 74, "23381": 74, "23485": 74, "23585": 74, "23683": 74, "23784": 74, "23882": 74, "23978": 74, "24064": 74, "24171": 74, "24266": 74, "24359": 74, "24449": 74, "24540": 74, "24633": 74, "24812": 74, "24912": 74, "25004": 74, "25096": 74, "25195": 74, "25289": 74, "25383": 74, "25487": 74, "25585": 74, "25679": 74, "25784": 74, "25881": 74, "25975": 74, "26069": 74, "26191": 74, "26296": 74, "26398": 74, "26498": 74, "26594": 74, "26687": 74, "26780": 74, "26869": 74, "26973": 74, "27073": 74, "27182": 74, "27283": 74, "27382": 74, "27479": 74, "27575": 74, "27673": 74, "27783": 74, "27908": 74, "28016": 74, "28123": 74, "28227": 74, "28326": 74, "28422": 74, "28518": 74, "28613": 74, "28711": 74, "28806": 74, "28900": 74, "28989": 74, "29078": 74, "29167": 74, "29284": 74, "29401": 74, "29503": 74, "29605": 74, "29703": 74, "29798": 74, "29891": 74, "29987": 74, "30096": 74, "30197": 74, "30296": 74, "30401": 74, "30501": 74, "30601": 74, "30701": 74, "30804": 74, "30905": 74, "31003": 74, "31101": 74, "31212": 74, "31334": 74, "31441": 74, "31542": 74, "31638": 74, "31732": 74, "31823": 74, "31925": 74, "32027": 74, "32142": 74, "32267": 74, "32375": 74, "32483": 74, "32587": 74, "32690": 74, "32787": 74, "32892": 74, "32988": 74, "33079": 74, "33172": 74, "33259": 74, "33445": 74, "33534": 74, "33643": 74, "33737": 74, "33834": 74, "33929": 74, "34023": 74, "34117": 74, "34208": 74, "34324": 74, "34421": 74, "34526": 74, "34623": 74, "34720": 74, "34817": 74, "34912": 74, "35019": 74, "35117": 74, "35210": 74, "35300": 74, "35390": 74, "35478": 74, "35578": 74, "35688": 74, "35790": 74, "35888": [74, 85], "35983": 74, "36076": 74, "36178": 74, "36273": 74, "36369": 74, "36463": 74, "36558": 74, "36659": 74, "36755": 74, "36863": 74, "36971": 74, "37073": 74, "37172": 74, "37291": 74, "37411": 74, "37518": 74, "37624": 74, "37730": 74, "37839": 74, "37958": 74, "38066": 74, "38170": 74, "38265": 74, "38360": 74, "38455": 74, "38563": 74, "38659": 74, "38752": 74, "38844": 74, "38936": 74, "39033": 74, "39132": 74, "39227": 74, "39322": 74, "39427": 74, "39525": 74, "39620": 74, "39715": 74, "39828": 74, "39928": 74, "40018": 74, "40110": 74, "40198": 74, "40296": 74, "40387": 74, "40482": [74, 85], "40572": 74, "40668": 74, "40756": 74, "40844": 74, "40932": 74, "41020": 74, "41144": 74, "41260": 74, "41371": 74, "41491": 74, "41606": 74, "41717": 74, "41825": 74, "41930": 74, "42044": 74, "42164": 74, "42289": 74, "42402": 74, "42516": 74, "42625": 74, "42744": 74, "42854": 74, "42960": 74, "43063": 74, "43163": 74, "43263": 74, "43361": 74, "43470": 74, "43571": 74, "43669": 74, "43767": 74, "43875": 74, "43986": 74, "44110": 74, "44219": 74, "44324": 74, "44433": 74, "44537": 74, "44641": 74, "44741": 74, "44835": 74, "44927": 74, "45018": 74, "45109": 74, "45201": 74, "45292": 74, "45383": 74, "45470": 74, "45557": 74, "45644": 74, "45736": 74, "45830": 74, "45922": 74, "46016": 74, "46114": 74, "46219": 74, "46315": 74, "46411": 74, "46512": 74, "46616": 74, "46714": 74, "46809": 74, "46911": 74, "47005": 74, "47103": 74, "47197": 74, "47291": 74, "47395": 74, "47487": 74, "47595": 74, "47692": 74, "47795": 74, "47892": 74, "47986": 74, "48080": 74, "48174": 74, "48268": 74, "48359": 74, "48460": 74, "48552": 74, "48653": 74, "48758": 74, "48855": [74, 85], "48954": 74, "49050": 74, "49144": 74, "49237": 74, "49324": 74, "49421": 74, "49516": 74, "49607": 74, "49793": 74, "49884": 74, "49974": 74, "50068": 74, "50162": 74, "50253": 74, "50351": 74, "50444": 74, "50537": 74, "50633": 74, "50730": 74, "50824": 74, "50938": 74, "51038": 74, "51138": 74, "51231": 74, "51321": 74, "51412": 74, "51504": 74, "51615": 74, "51710": 74, "51804": 74, "51898": 74, "51989": 74, "52080": 74, "52181": 74, "52276": 74, "52370": 74, "52463": 74, "52556": 74, "52650": 74, "52746": 74, "52845": 74, "52939": 74, "53030": 74, "53117": 74, "53204": 74, "53292": 74, "53391": 74, "53486": 74, "53584": 74, "53678": 74, "53780": 74, "53876": [74, 85], "53975": 74, "54070": 74, "54165": 74, "54257": 74, "54357": 74, "54449": 74, "54547": 74, "54641": 74, "54735": 74, "54833": 74, "54928": 74, "55038": 74, "55136": 74, "55248": 74, "55357": 74, "55461": 74, "55567": 74, "55671": 74, "55775": 74, "55872": 74, "55967": 74, "56061": 74, "56152": 74, "56247": 74, "56336": 74, "56446": 74, "56541": 74, "56636": 74, "56734": 74, "56829": 74, "56930": 74, "57026": 74, "57126": 74, "57221": 74, "57316": 74, "57421": 74, "57521": 74, "9216": [75, 84], "325505": 75, "1134106": 76, "235321": 76, "236682": 76, "client": [], "boto3": [], "signature_vers": [], "tripwir": [], "__getattr__": [], "tripwireerror": [], "_msg": [], "importerror": [], "010": [], "4733": [81, 82], "587900": 81, "088": 81, "bounds_warn": 82, "5200": 82, "leastsq": 82, "warningmsg": 82, "unfeas": 82, "706": 82, "773": 82, "783": [82, 85], "792": [82, 85], "1249": [79, 82], "1259": 82, "1505": 82, "1689": 82, "1991": 82, "2330": 82, "2473": 82, "2496": [82, 84], "2547": [82, 85], "2569": 82, "2588": 82, "2829": [82, 233], "2951": 82, "3058": 82, "3115": [82, 84], "3248": [82, 84], "3424": [82, 84], "3484": [82, 84], "3577": 82, "3672": 82, "3687": 82, "3717": [82, 84], "3731": 82, "3744": 82, "3759": [82, 84], "3771": 82, "3818": [82, 84], "3829": 82, "3843": [79, 82, 84], "3869": [82, 84], "3885": 82, "3899": 82, "3912": [82, 84], "3925": [82, 84], "3947": 82, "3962": 82, "3986": [82, 84], "3996": [82, 84], "4006": 82, "4030": [82, 84], "4044": [80, 82], "4056": [82, 84], "4067": [82, 84], "4077": 82, "4091": [82, 84], "4107": [82, 84, 85], "4119": 82, "4130": 82, "4141": 82, "4151": [82, 84], "4160": 82, "4171": 82, "4185": 82, "4203": 82, "4212": 82, "4222": 82, "4231": 82, "4240": [82, 84], "4255": [79, 82], "4279": 82, "4290": 82, "4300": [79, 80, 82], "4310": 82, "4319": 82, "4332": [82, 84], "4344": [82, 84], "4355": [82, 84], "4365": 82, "4375": 82, "4385": 82, "4394": [82, 84], "4403": 82, "4420": 82, "4439": 82, "4449": 82, "4458": 82, "4467": [82, 84, 85], "4475": [82, 84], "4488": [82, 84], "4517": [82, 84], "4528": 82, "4538": [82, 84], "4547": 82, "4556": 82, "4568": [82, 84], "4584": 82, "4595": 82, "4605": 82, "4615": 82, "4625": 82, "4635": 82, "4649": [82, 84], "4660": [82, 84], "4670": 82, "4680": 82, "4689": 82, "4698": 82, "4706": 82, "4714": 82, "4722": 82, "4730": 82, "4738": 82, "4757": 82, "4766": 82, "4774": [82, 84], "4782": 82, "4800": 82, "4819": 82, "4828": 82, "4837": 82, "4855": 82, "4866": 82, "4875": 82, "4884": 82, "4893": 82, "4909": 82, "4918": 82, "4948": 82, "4974": 82, "4982": 82, "4998": 82, "5006": 82, "5022": 82, "5030": [82, 84], "5046": [82, 84], "5055": [80, 82, 84], "5063": 82, "5081": 82, "5090": 82, "5100": 82, "5109": [82, 84], "5118": 82, "5136": 82, "5145": [82, 84], "5154": 82, "5163": [82, 84], "5171": 82, "5179": [82, 84], "5188": 82, "97863113e": 82, "69394176e": 82, "71052305e": 82, "214": [82, 83, 84], "236": [82, 83, 87], "246": [82, 83, 84, 114], "269": [82, 83], "272": [82, 83, 87], "280": [82, 83, 114], "296": [82, 83, 114], "395": [82, 83, 124, 129], "457": [82, 83, 93], "546": 82, "548": [82, 84, 85], "687": 82, "718": [82, 233], "750": 82, "775": [82, 94], "776": 82, "778": [82, 85], "780": 82, "784": 82, "789": [82, 84, 87], "790": 82, "799": [82, 84], "1074": 82, "1131": 82, "1164": [79, 80, 82, 84], "1172": 82, "1178": 82, "1224": [82, 84], "1274": 82, "1275": 82, "1276": [82, 93], "1404": 82, "1525": 82, "1531": 82, "1553": 82, "1599": [82, 84], "1612": 82, "1613": 82, "1625": 82, "1627": [82, 233], "1639": 82, "1665": 82, "1687": 82, "1688": 82, "1725": 82, "1820": 82, "1826": 82, "1838": 82, "1852": 82, "1868": 82, "1921": [82, 84], "1932": 82, "2026": [82, 84], "2027": 82, "2031": 82, "2036": 82, "2050": 82, "2064": 82, "2087": 82, "2092": 82, "2110": 82, "2137": 82, "2143": 82, "2164": 82, "2165": 82, "2167": 82, "2187": 82, "2213": 82, "2269": 82, "2270": 82, "2273": [82, 85], "2276": [82, 84], "2285": [82, 88], "2293": 82, "2297": 82, "2298": 82, "2299": 82, "2301": 82, "2306": 82, "2319": 82, "2322": 82, "2326": [82, 84], "2336": [82, 84], "2358": [82, 84], "2361": 82, "2362": 82, "2364": 82, "2366": 82, "2376": 82, "2378": 82, "2395": 82, "2398": 82, "2427": 82, "2428": 82, "2437": 82, "2440": [82, 84], "2452": 82, "2469": 82, "2501": 82, "2505": [82, 84], "2508": 82, "2511": 82, "2514": [82, 233], "2519": 82, "2538": 82, "2552": 82, "2560": [82, 233], "2562": 82, "2578": 82, "2582": 82, "2586": 82, "2604": [80, 82], "2607": 82, "2611": [82, 84], "2619": 82, "2621": 82, "2623": 82, "2624": 82, "2633": 82, "2637": 82, "2644": 82, "2645": 82, "2651": 82, "2656": 82, "2657": [82, 84], "2663": [82, 84], "2666": 82, "2671": 82, "2681": [82, 84], "2684": 82, "2689": [82, 233], "2705": 82, "2715": [82, 233], "2732": 82, "2735": 82, "2736": [82, 233], "2737": [82, 84], "2738": 82, "2743": [82, 84], "2746": [82, 84, 233], "2748": 82, "2757": 82, "2761": [82, 84, 233], "2776": 82, "2781": [82, 233], "2794": [82, 233], "2795": [82, 233], "2797": [82, 233], "2805": [82, 233], "2808": [82, 233], "2809": 82, "2817": 82, "2821": [82, 233], "2830": 82, "2834": 82, "2839": [82, 84, 233], "2846": [82, 233], "2852": [82, 84], "2855": [82, 84], "2863": [82, 233], "2867": [82, 233], "2869": 82, "2872": [82, 233], "2880": 82, "2881": [82, 233], "2883": [82, 84, 233], "2885": [82, 233], "2886": 82, "2887": [82, 233], "2892": [79, 82, 233], "2904": [82, 233], "2905": [82, 233], "2935": [82, 84], "2940": [82, 233], "2942": [82, 233], "2943": [82, 84, 233], "2944": [82, 233], "2972": 82, "2978": [82, 233], "2985": [80, 82, 233], "2996": [82, 233], "3005": [82, 233], "3025": 82, "3036": [82, 84], "3037": 82, "3045": [82, 84], "3049": 82, "3055": 82, "3060": 82, "3066": 82, "3069": [82, 84], "3071": 82, "3072": [79, 82], "3079": [82, 84], "3091": [80, 82], "3095": 82, "3112": [82, 84], "3116": 82, "3122": 82, "3130": [82, 84], "3134": 82, "3145": 82, "3147": [82, 84], "3151": 82, "3154": 82, "3157": [79, 82], "3158": [82, 84], "3159": 82, "3164": 82, "3165": 82, "3168": [82, 84], "3176": 82, "3182": 82, "3190": 82, "3198": [79, 82], "3201": 82, "3203": 82, "3206": 82, "3215": [82, 84], "3218": 82, "3220": [82, 84], "3222": 82, "3224": 82, "3225": 82, "3226": [82, 84], "3231": 82, "3234": 82, "3236": 82, "3237": [82, 84], "3239": 82, "3251": 82, "3252": 82, "3254": 82, "3255": 82, "3256": 82, "3257": [82, 84], "3263": 82, "3268": 82, "3270": 82, "3272": 82, "3274": 82, "3279": 82, "3281": 82, "3282": [82, 84], "3284": 82, "3286": 82, "3287": 82, "3295": 82, "3298": [82, 84], "3300": 82, "3304": [82, 84], "3308": 82, "3314": 82, "3316": 82, "3322": 82, "3326": 82, "3328": [79, 82, 84], "3329": 82, "3334": 82, "3336": 82, "3340": 82, "3342": 82, "3347": 82, "3350": 82, "3352": 82, "3359": [82, 84], "3361": 82, "3363": 82, "3367": 82, "3371": [79, 82], "3374": 82, "3377": 82, "3381": 82, "3386": 82, "3397": 82, "3401": 82, "3410": [82, 84], "3414": [79, 82], "3421": 82, "3425": 82, "3426": [82, 84], "3431": 82, "3438": 82, "3443": 82, "3447": 82, "3450": 82, "3456": 82, "3458": 82, "3460": 82, "3462": 82, "3469": 82, "3470": 82, "3472": 82, "3474": [82, 84], "3475": 82, "3476": 82, "3477": 82, "3480": [82, 84], "3486": 82, "3490": 82, "3491": [82, 84], "3493": 82, "3495": 82, "3496": [82, 84], "3497": 82, "3498": [82, 84], "3499": 82, "3502": [82, 84], "3503": 82, "3507": [82, 84], "3508": [82, 84], "3511": 82, "3514": 82, "3515": [82, 84], "3517": 82, "3521": 82, "3531": 82, "3533": 82, "3534": 82, "3537": 82, "3538": 82, "3541": [79, 82], "3542": 82, "3543": 82, "3549": 82, "3551": 82, "3555": 82, "3556": 82, "3560": [82, 84], "3566": 82, "3567": 82, "3568": [82, 84], "3580": [80, 82, 84], "3585": 82, "3587": [82, 84], "3589": 82, "3593": [82, 84], "3595": 82, "3603": [82, 84], "3604": 82, "3605": [82, 84], "3609": [82, 84], "3618": [82, 84], "3619": [82, 85], "3621": 82, "3622": [82, 84], "3624": 82, "3628": [82, 84], "3632": 82, "3635": 82, "3637": 82, "3641": [82, 84], "3643": 82, "3645": 82, "3646": 82, "3647": 82, "3648": 82, "3651": [82, 84], "3658": 82, "3660": [82, 84], "3661": 82, "3665": 82, "3667": [82, 84], "3668": 82, "3669": 82, "3670": 82, "3674": 82, "3676": [80, 82], "3677": 82, "3679": 82, "3681": 82, "3682": [82, 84], "3690": 82, "3691": 82, "3695": [82, 84], "3697": 82, "3698": [82, 84], "3699": 82, "3701": [82, 84], "3703": 82, "3705": 82, "3706": [79, 82, 84], "3708": [82, 84], "3710": [82, 84], "3712": [82, 84], "3714": [82, 84], "3716": 82, "3718": 82, "3720": 82, "3723": [82, 84, 85], "3725": [82, 84], "3726": 82, "3727": [82, 84], "3728": 82, "3730": 82, "3732": [82, 88], "3734": [82, 84], "3736": 82, "3738": 82, "3739": 82, "3740": 82, "3741": 82, "3745": 82, "3746": 82, "3747": 82, "3748": 82, "3752": 82, "3754": 82, "3756": 82, "3758": 82, "3763": 82, "3764": 82, "3765": [82, 84], "3767": 82, "3770": [82, 84], "3772": 82, "3773": 82, "3775": 82, "3777": [82, 84], "3778": 82, "3780": 82, "3781": 82, "3785": [80, 82], "3787": [82, 84], "3790": [82, 84], "3793": [82, 84], "3794": 82, "3796": [82, 84], "3797": 82, "3801": [79, 82], "3803": 82, "3804": [82, 84], "3807": 82, "3808": [82, 84], "3811": 82, "3812": [82, 84], "3813": 82, "3814": [82, 84], "3816": [82, 84], "3817": 82, "3820": 82, "3822": 82, "3823": [82, 84], "3825": 82, "3827": 82, "3831": 82, "3832": 82, "3835": 82, "3837": 82, "3838": 82, "3839": 82, "3840": 82, "3841": 82, "3842": 82, "3846": 82, "3848": 82, "3849": 82, "3852": 82, "3854": 82, "3857": 82, "3858": 82, "3859": 82, "3863": 82, "3865": [82, 84], "3868": 82, "3875": 82, "3876": [82, 84], "3877": 82, "3879": 82, "3881": [82, 84], "3882": [79, 82], "3883": 82, "3884": [82, 84], "3886": [82, 84], "3888": [82, 84], "3889": 82, "3890": 82, "3891": [82, 84], "3892": 82, "3893": [82, 84], "3896": 82, "3897": 82, "3900": [82, 84], "3903": 82, "3904": [82, 84], "3907": [82, 84], "3908": [82, 84], "3909": [82, 84], "3911": [82, 84], "3913": 82, "3915": 82, "3916": [80, 82], "3917": [82, 84], "3918": 82, "3924": [79, 82], "3926": 82, "3928": 82, "3930": 82, "3932": 82, "3934": [82, 84], "3936": 82, "3938": 82, "3939": 82, "3942": [82, 84], "3943": 82, "3945": 82, "3946": 82, "3948": 82, "3950": 82, "3952": 82, "3953": 82, "3955": [82, 84], "3957": [80, 82], "3958": 82, "3959": 82, "3963": 82, "3964": [82, 84], "3965": [79, 82], "3966": 82, "3967": [82, 84], "3968": 82, "3970": [82, 84], "3972": 82, "3973": [82, 84], "3976": 82, "3977": [82, 84], "3978": 82, "3980": [82, 84], "3981": 82, "3983": 82, "3984": [82, 84], "3985": 82, "3987": 82, "3988": [82, 84], "3989": 82, "3993": 82, "3995": 82, "3997": 82, "3998": [82, 84], "4001": [82, 84], "4002": 82, "4003": [80, 82, 84], "4004": 82, "4005": [82, 84], "4008": [82, 84], "4010": [82, 84], "4014": [82, 84], "4015": 82, "4016": [82, 84], "4017": 82, "4019": 82, "4022": 82, "4023": [82, 84], "4024": 82, "4025": 82, "4027": 82, "4028": 82, "4029": 82, "4032": 82, "4033": 82, "4037": 82, "4039": 82, "4040": 82, "4041": [82, 84], "4042": 82, "4043": 82, "4046": 82, "4048": 82, "4050": 82, "4051": 82, "4052": [82, 84], "4055": 82, "4057": 82, "4058": 82, "4059": [82, 84], "4061": 82, "4062": [82, 84], "4064": 82, "4068": 82, "4069": [82, 84], "4071": 82, "4072": [82, 84], "4074": [82, 84], "4075": 82, "4076": [82, 84], "4079": 82, "4080": [82, 84], "4081": 82, "4082": [82, 84], "4084": [82, 84], "4086": [82, 84], "4087": 82, "4088": [82, 84], "4089": 82, "4092": 82, "4093": 82, "4094": 82, "4095": 82, "4097": 82, "4099": 82, "4100": [82, 84], "4102": [82, 84], "4103": [79, 82], "4105": [82, 84], "4106": [82, 84], "4108": [82, 84], "4110": [82, 84], "4111": 82, "4112": 82, "4113": [82, 84], "4115": 82, "4117": 82, "4121": 82, "4122": 82, "4123": [82, 84], "4124": 82, "4125": 82, "4127": 82, "4128": 82, "4131": 82, "4132": [80, 82], "4133": [82, 84], "4134": 82, "4135": 82, "4136": 82, "4137": 82, "4139": 82, "4140": [82, 84], "4143": 82, "4144": 82, "4146": [82, 84], "4147": 82, "4148": 82, "4149": 82, "4150": 82, "4152": 82, "4153": 82, "4154": 82, "4155": [82, 84], "4157": 82, "4158": 82, "4161": 82, "4162": [82, 84], "4164": [82, 84], "4165": 82, "4166": [82, 84], "4168": [82, 84], "4173": 82, "4174": [82, 84], "4175": [80, 82], "4176": [82, 84], "4177": 82, "4179": 82, "4183": 82, "4184": [82, 84], "4186": 82, "4189": 82, "4190": 82, "4192": 82, "4195": [82, 84], "4196": 82, "4197": 82, "4198": [82, 84], "4201": 82, "4202": [82, 84], "4204": [82, 84], "4205": 82, "4207": [82, 84], "4209": 82, "4211": 82, "4214": 82, "4215": [82, 84], "4217": 82, "4218": 82, "4220": 82, "4223": [82, 84], "4225": 82, "4226": 82, "4227": 82, "4229": 82, "4230": 82, "4232": 82, "4234": [80, 82], "4235": 82, "4237": 82, "4238": 82, "4239": 82, "4241": 82, "4243": 82, "4244": 82, "4246": [82, 84], "4248": 82, "4249": 82, "4252": 82, "4253": 82, "4258": [82, 84], "4259": 82, "4260": 82, "4261": [82, 84], "4262": 82, "4263": [82, 84], "4264": 82, "4266": 82, "4269": [82, 84], "4270": 82, "4271": [82, 84], "4273": [82, 84], "4274": [82, 84], "4276": 82, "4277": [82, 84], "4278": 82, "4280": [82, 84], "4281": 82, "4283": 82, "4284": 82, "4287": 82, "4288": 82, "4289": [82, 84, 85], "4291": [82, 84], "4292": 82, "4293": 82, "4294": 82, "4296": 82, "4297": 82, "4298": [82, 84], "4299": 82, "4301": [82, 84], "4302": 82, "4305": [82, 84], "4306": 82, "4308": 82, "4311": 82, "4312": 82, "4314": [82, 84], "4316": 82, "4317": 82, "4318": 82, "4322": 82, "4323": 82, "4325": 82, "4326": 82, "4327": 82, "4328": 82, "4329": 82, "4330": 82, "4333": 82, "4334": 82, "4335": 82, "4337": 82, "4338": 82, "4339": [82, 84], "4340": 82, "4341": 82, "4342": [79, 82], "4343": 82, "4345": 82, "4346": 82, "4347": 82, "4348": [82, 84], "4350": 82, "4351": 82, "4357": 82, "4358": [82, 84], "4359": 82, "4360": 82, "4361": [82, 84], "4362": 82, "4364": [82, 84], "4366": [82, 84], "4367": 82, "4368": [82, 84], "4369": 82, "4370": [82, 84], "4371": 82, "4372": 82, "4374": [82, 84], "4376": 82, "4377": 82, "4378": [82, 85], "4379": 82, "4381": 82, "4382": 82, "4383": 82, "4384": [82, 84], "4386": 82, "4388": 82, "4389": 82, "4390": 82, "4391": [79, 82, 84], "4392": 82, "4393": 82, "4395": 82, "4396": [82, 84], "4398": [82, 84], "4400": 82, "4402": 82, "4404": 82, "4405": 82, "4406": [82, 84], "4407": 82, "4408": 82, "4410": 82, "4411": 82, "4412": 82, "4413": 82, "4415": [82, 84], "4417": 82, "4418": 82, "4419": [80, 82], "4421": 82, "4422": 82, "4423": 82, "4424": [82, 84], "4426": 82, "4428": 82, "4429": 82, "4431": [82, 84], "4432": 82, "4434": 82, "4435": 82, "4436": 82, "4437": 82, "4438": [82, 84], "4440": 82, "4441": 82, "4442": 82, "4444": 82, "4445": [79, 82], "4446": 82, "4447": 82, "4448": [82, 84], "4450": 82, "4452": [82, 84], "4453": 82, "4454": 82, "4456": 82, "4457": 82, "4459": [82, 88], "4461": 82, "4463": [82, 84], "4464": 82, "4465": [82, 84], "4468": 82, "4469": 82, "4470": 82, "4472": 82, "4473": [80, 82], "4474": 82, "4476": 82, "4478": 82, "4480": 82, "4482": [82, 84], "4484": [82, 114], "4485": [82, 84], "4486": 82, "4487": 82, "4489": 82, "4493": 82, "4494": [82, 84], "4496": 82, "4497": 82, "4498": [82, 84], "4499": 82, "4501": 82, "4502": 82, "4504": 82, "4506": 82, "4508": [82, 84], "4510": 82, "4511": 82, "4512": 82, "4513": 82, "4514": 82, "4515": 82, "4516": 82, "4518": 82, "4520": 82, "4522": 82, "4524": 82, "4525": 82, "4526": [80, 82, 84], "4527": 82, "4529": 82, "4531": 82, "4532": 82, "4533": [82, 84], "4534": 82, "4535": [79, 82], "4537": 82, "4539": 82, "4541": 82, "4542": [82, 84], "4543": 82, "4544": 82, "4545": 82, "4546": [82, 84], "4548": 82, "4549": [82, 84], "4550": 82, "4551": 82, "4552": [82, 84], "4553": 82, "4554": 82, "4555": 82, "4557": [82, 84], "4559": 82, "4561": 82, "4562": [82, 84], "4564": [82, 85], "4565": 82, "4566": 82, "4567": 82, "4570": 82, "4573": 82, "4575": 82, "4576": [80, 82, 84], "4577": [79, 82], "4578": 82, "4579": [82, 84], "4580": 82, "4581": 82, "4582": [82, 84], "4583": 82, "4586": [82, 84], "4588": 82, "4590": 82, "4591": 82, "4592": 82, "4593": 82, "4594": 82, "4596": 82, "4597": [82, 84], "4599": 82, "4600": 82, "4601": 82, "4603": 82, "4604": 82, "4607": 82, "4608": 82, "4609": 82, "4610": 82, "4612": 82, "4613": 82, "4614": 82, "4616": [82, 84], "4617": 82, "4619": 82, "4621": 82, "4622": 82, "4623": [82, 84], "4624": 82, "4626": [80, 82], "4627": 82, "4628": 82, "4629": 82, "4630": [82, 84], "4632": 82, "4633": 82, "4639": 82, "4643": 82, "4644": 82, "4645": [82, 84], "4646": 82, "4647": 82, "4648": 82, "4650": 82, "4651": 82, "4652": 82, "4653": 82, "4654": 82, "4656": [82, 84], "4657": [82, 85], "4658": 82, "4659": [79, 82], "4661": 82, "4662": 82, "4663": 82, "4664": 82, "4665": 82, "4667": [82, 84], "4668": 82, "4669": 82, "4671": [82, 84], "4672": 82, "4673": 82, "4675": [80, 82, 84], "4676": 82, "4677": 82, "4678": [82, 84], "4682": 82, "4683": 82, "4685": 82, "4690": [82, 88], "4693": 82, "4694": 82, "4695": 82, "4696": [82, 84], "4697": 82, "4699": 82, "4700": 82, "4702": 82, "4703": [79, 82], "4704": 82, "4705": [82, 84], "4707": 82, "4708": 82, "4711": 82, "4712": 82, "4713": 82, "4715": 82, "4716": [82, 84], "4718": 82, "4720": 82, "4723": [80, 82], "4725": 82, "4726": 82, "4727": 82, "4728": 82, "4729": 82, "4732": 82, "4734": 82, "4735": 82, "4736": 82, "4739": 82, "4740": 82, "4741": 82, "4742": [82, 84], "4745": 82, "4746": [82, 84], "4750": [79, 82, 84, 88], "4752": 82, "4753": [82, 84], "4754": 82, "4756": [82, 84], "4758": 82, "4759": 82, "4760": 82, "4762": 82, "4768": 82, "4769": 82, "4770": [80, 82, 84], "4771": 82, "4772": 82, "4775": 82, "4776": 82, "4777": 82, "4778": [82, 84], "4784": 82, "4785": [82, 84], "4786": 82, "4787": 82, "4788": 82, "4789": 82, "4790": 82, "4795": 82, "4796": 82, "4798": 82, "4799": 82, "4804": [82, 84], "4806": 82, "4807": 82, "4808": 82, "4811": 82, "4812": 82, "4813": [82, 84], "4814": 82, "4817": 82, "4818": 82, "4820": 82, "4821": [82, 84], "4823": 82, "4825": 82, "4826": 82, "4829": 82, "4830": 82, "4831": 82, "4832": 82, "4833": [82, 84], "4835": 82, "4838": [82, 84, 85], "4839": 82, "4840": 82, "4842": [82, 84], "4845": 82, "4847": 82, "4848": 82, "4849": [82, 84], "4850": 82, "4852": [82, 84], "4853": 82, "4854": 82, "4857": 82, "4859": 82, "4861": 82, "4862": 82, "4863": 82, "4864": [80, 82, 84], "4867": [82, 84], "4868": 82, "4869": 82, "4870": [82, 84], "4873": [82, 84], "4874": 82, "4877": [82, 84], "4881": 82, "4882": 82, "4886": 82, "4887": 82, "4890": 82, "4891": 82, "4892": 82, "4894": [82, 84], "4895": 82, "4897": 82, "4899": 82, "4900": 82, "4902": 82, "4903": 82, "4904": [82, 84], "4906": 82, "4907": 82, "4911": [82, 84], "4912": 82, "4914": 82, "4915": 82, "4916": 82, "4917": [82, 84], "4919": 82, "4922": [82, 84], "4927": 82, "4928": 82, "4931": 82, "4932": 82, "4933": [82, 84], "4934": 82, "4940": 82, "4942": 82, "4943": [82, 84], "4944": 82, "4945": [82, 84], "4946": [82, 84], "4947": [82, 84], "4949": 82, "4953": 82, "4954": [82, 84], "4955": [80, 82], "4959": 82, "4960": [82, 84], "4963": 82, "4965": [82, 84], "4967": [82, 84], "4968": 82, "4969": 82, "4970": [82, 84], "4971": 82, "4972": [79, 82], "4973": [82, 84], "4975": 82, "4977": 82, "4978": 82, "4979": 82, "4980": 82, "4981": 82, "4983": 82, "4985": [82, 84], "4986": 82, "4988": 82, "4989": 82, "4991": 82, "4999": 82, "5003": [80, 82], "5004": [82, 84], "5005": 82, "5007": 82, "5008": 82, "5009": 82, "5012": 82, "5015": 82, "5016": [82, 84], "5017": 82, "5018": [79, 82], "5020": [82, 84], "5024": [82, 84], "5025": 82, "5026": 82, "5027": [82, 84], "5029": 82, "5031": 82, "5034": 82, "5035": [82, 84], "5036": 82, "5039": [82, 84], "5043": [82, 84], "5044": [82, 84], "5047": 82, "5050": [82, 84], "5051": 82, "5057": [82, 84], "5058": 82, "5061": [82, 84], "5062": 82, "5064": [82, 84], "5066": [79, 82, 84], "5068": [82, 84], "5071": 82, "5073": 82, "5074": 82, "5075": 82, "5076": 82, "5077": 82, "5079": [82, 84], "5082": 82, "5084": 82, "5085": 82, "5086": 82, "5087": 82, "5091": 82, "5093": 82, "5094": 82, "5095": 82, "5097": 82, "5098": [82, 84], "5101": 82, "5102": 82, "5104": [80, 82, 84], "5105": 82, "5108": 82, "5110": 82, "5111": 82, "5113": [82, 84], "5116": [82, 84], "5119": 82, "5121": 82, "5122": 82, "5123": [82, 84], "5124": 82, "5125": [82, 85], "5126": [82, 84], "5130": 82, "5134": 82, "5142": 82, "5143": [82, 84], "5144": 82, "5146": 82, "5147": [82, 84], "5148": [79, 80, 82], "5150": 82, "5151": [82, 84], "5152": 82, "5155": [82, 84], "5157": [82, 84], "5158": 82, "5159": 82, "5160": 82, "5162": 82, "5166": 82, "5169": 82, "5173": 82, "5174": 82, "5175": 82, "5180": 82, "5186": 82, "5187": 82, "5189": 82, "5190": [82, 84], "5192": 82, "5193": 82, "5194": 82, "5195": 82, "5197": [82, 84], "5198": 82, "5199": 82, "15609783e": 82, "09732577e": 82, "86659300e": 82, "19170291e": 82, "295": 83, "777": 83, "thetax": 84, "msg_bval": 84, "56692320e": 84, "46085143e": 84, "62131485e": 84, "34276461e": 84, "52534556e": 84, "72067588e": 84, "03258278e": 84, "83944994e": 84, "84867552e": 84, "24112459e": 84, "48269864e": 84, "33687318e": 84, "54087379e": 84, "19307328e": 84, "03487796e": 84, "70814058e": 84, "99497542e": 84, "66589967e": 84, "37647490e": 84, "22844899e": 84, "02876747e": 84, "64284096e": 84, "90155949e": 84, "05450074e": 84, "52760292e": 84, "33298612e": 84, "19461602e": 84, "31346774e": 84, "09567957e": 84, "48548376e": 84, "2401": 84, "2563": 84, "2620": 84, "2654": 84, "2845": [84, 233], "2847": [84, 233], "3135": [84, 88], "3223": 84, "3235": 84, "3242": 84, "3307": 84, "3339": 84, "3376": 84, "3388": 84, "3398": 84, "3400": 84, "3448": 84, "3459": 84, "3526": 84, "3608": 84, "3678": 84, "3721": 84, "3802": 84, "3815": 84, "3914": [84, 85], "3949": 84, "4009": 84, "4011": 84, "4047": 84, "4065": 84, "4078": 84, "4096": 84, "4098": 84, "4172": 84, "4178": 84, "4180": 84, "4182": 84, "4191": 84, "4233": 84, "4250": 84, "4254": 84, "4265": 84, "4267": 84, "4272": 84, "4275": 84, "4295": 84, "4352": 84, "4380": 84, "4443": 84, "4455": 84, "4460": 84, "4479": 84, "4560": 84, "4636": 84, "4767": 84, "4827": 84, "4860": 84, "4962": 84, "5037": 84, "5137": 84, "5203": 84, "5208": 84, "5212": 84, "5216": 84, "5222": 84, "5227": 84, "5231": 84, "5233": 84, "5239": 84, "5241": 84, "5243": 84, "5247": 84, "5249": 84, "5251": 84, "5256": 84, "5258": 84, "5264": 84, "5274": 84, "5283": 84, "5291": 84, "5298": 84, "5304": 84, "5308": 84, "5314": 84, "5321": 84, "5323": 84, "5325": [84, 88], "5329": 84, "5343": 84, "5346": 84, "5347": 84, "5348": 84, "5350": 84, "5354": 84, "5363": 84, "5373": 84, "5390": 84, "5423": 84, "5425": 84, "5427": 84, "5429": 84, "5433": 84, "5435": 84, "5439": 84, "5440": 84, "5441": 84, "5442": 84, "5444": 84, "5446": 84, "5447": 84, "5448": 84, "5449": 84, "5451": 84, "5454": 84, "5455": 84, "5468": 84, "5479": 84, "5486": 84, "5501": 84, "5504": 84, "5507": 84, "5512": 84, "5515": 84, "5517": 84, "5521": 84, "5523": 84, "5528": 84, "5532": 84, "5534": 84, "5539": 84, "5541": 84, "5542": 84, "5543": 84, "5545": 84, "5547": 84, "5549": 84, "5550": 84, "5594": 84, "5602": 84, "5611": 84, "5617": 84, "5620": 84, "5622": 84, "5624": 84, "5626": 84, "5632": 84, "5633": 84, "5634": 84, "5636": 84, "5637": 84, "5638": 84, "5639": 84, "5640": 84, "5642": 84, "5643": 84, "5668": 84, "5678": 84, "5694": 84, "5704": 84, "5706": 84, "5710": 84, "5712": 84, "5714": 84, "5716": 84, "5721": 84, "5723": 84, "5724": 84, "5726": 84, "5728": 84, "5730": 84, "5732": 84, "5733": 84, "5735": 84, "5740": 84, "5742": 84, "5749": 84, "5774": 84, "5781": 84, "5786": 84, "5790": 84, "5793": 84, "5796": 84, "5798": 84, "5800": 84, "5802": 84, "5804": 84, "5806": 84, "5808": 84, "5809": 84, "5811": 84, "5812": 84, "5813": 84, "5815": 84, "5818": 84, "5820": 84, "5822": 84, "5824": 84, "5826": 84, "5828": 84, "5831": 84, "5832": 84, "5834": 84, "5836": 84, "5844": 84, "5853": 84, "5859": 84, "5869": 84, "5876": 84, "5886": 84, "5890": 84, "5893": 84, "5898": 84, "5903": 84, "5905": 84, "5907": 84, "5909": 84, "5912": 84, "5916": 84, "5920": 84, "5922": 84, "5924": 84, "5929": 84, "5944": 84, "5954": 84, "5964": 84, "5971": 84, "5978": 84, "5987": 84, "5990": 84, "5993": 84, "5997": 84, "5999": 84, "6001": [84, 85], "6003": 84, "6006": 84, "6009": 84, "6012": 84, "6015": 84, "6018": 84, "6020": 84, "6023": 84, "6027": 84, "6031": 84, "6041": 84, "6052": 84, "6062": 84, "6070": 84, "6076": 84, "6081": 84, "6085": 84, "6088": 84, "6091": 84, "6093": 84, "6095": 84, "6098": 84, "6102": 84, "6105": 84, "6108": 84, "6114": 84, "6119": 84, "6121": 84, "6123": 84, "6125": 84, "6133": 84, "6144": 84, "6153": 84, "6162": 84, "6169": 84, "6174": [84, 88], "6181": 84, "6184": 84, "6189": 84, "6193": 84, "6196": 84, "6200": 84, "6203": 84, "6206": 84, "6209": 84, "6211": 84, "6214": 84, "6217": 84, "6226": 84, "6236": 84, "6245": 84, "6254": 84, "6262": 84, "6269": 84, "6278": 84, "6284": 84, "6287": 84, "6295": 84, "6298": 84, "6301": 84, "6303": 84, "6305": 84, "6307": 84, "6309": 84, "6316": 84, "6325": 84, "6334": [84, 88], "6361": 84, "6368": 84, "6373": 84, "6377": 84, "6381": 84, "6385": 84, "6388": 84, "6391": 84, "6393": 84, "6395": 84, "6397": 84, "6401": 84, "6403": 84, "6405": 84, "6406": 84, "6410": 84, "6420": 84, "6440": 84, "6450": 84, "6465": 84, "6471": 84, "6475": 84, "6479": 84, "6482": 84, "6485": 84, "6490": 84, "6493": 84, "6495": 84, "6497": 84, "6499": 84, "6503": 84, "6510": 84, "6521": 84, "6530": 84, "6540": 84, "6550": 84, "6559": 84, "6566": 84, "6571": [84, 88], "6579": 84, "6583": 84, "6586": 84, "6592": 84, "6594": 84, "6596": 84, "6598": 84, "6601": 84, "6611": 84, "6619": 84, "6629": 84, "6639": 84, "6648": 84, "6657": 84, "6664": 84, "6669": 84, "6674": 84, "6678": 84, "6681": 84, "6684": 84, "6687": 84, "6690": 84, "6695": 84, "6704": 84, "6715": 84, "6734": 84, "6745": 84, "6754": 84, "6761": 84, "6766": 84, "6770": 84, "6774": 84, "6782": 84, "6785": 84, "6797": 84, "6808": 84, "6817": 84, "6831": 84, "6841": 84, "6849": 84, "6855": 84, "6860": 84, "6864": 84, "6868": 84, "6872": 84, "6875": 84, "6878": 84, "6883": 84, "6893": 84, "6901": 84, "6911": 84, "6922": 84, "6931": 84, "6941": [84, 88], "6950": 84, "6957": 84, "6963": 84, "6975": 84, "6986": 84, "6997": 84, "7006": 84, "7015": 84, "7035": 84, "7044": 84, "7053": 84, "7070": 84, "7081": 84, "7091": 84, "7100": 84, "7111": 84, "7132": 84, "7142": 84, "7151": 84, "7160": 84, "7180": 84, "7189": 84, "7200": 84, "7210": 84, "7221": 84, "7231": 84, "7241": 84, "7250": 84, "7260": 84, "7281": 84, "7291": 84, "7302": 84, "7312": 84, "7322": 84, "7332": 84, "7342": [84, 85], "7352": 84, "7362": 84, "7372": 84, "7383": 84, "7393": 84, "7403": 84, "7413": 84, "7423": 84, "7433": 84, "7443": 84, "7453": 84, "7463": 84, "7473": 84, "7482": 84, "7501": 84, "7512": 84, "7522": 84, "7532": 84, "7552": 84, "7562": 84, "7573": 84, "7583": 84, "7593": 84, "7604": 84, "7615": 84, "7626": 84, "7636": 84, "7646": 84, "7656": 84, "7666": 84, "7676": 84, "7687": 84, "7697": 84, "7708": 84, "7719": 84, "7730": 84, "7750": 84, "7760": 84, "7771": 84, "7782": 84, "7792": 84, "7802": 84, "7812": 84, "7822": 84, "7832": 84, "7842": 84, "7852": 84, "7864": 84, "7874": [84, 85], "7884": 84, "7894": 84, "7904": 84, "7914": 84, "7925": 84, "7935": 84, "7945": 84, "7956": 84, "7966": 84, "7977": 84, "7988": 84, "7999": 84, "8010": 84, "8020": 84, "8030": 84, "8040": 84, "8050": 84, "8061": 84, "8072": 84, "8083": 84, "8093": 84, "8103": 84, "8114": 84, "8124": 84, "8144": 84, "8154": 84, "8164": 84, "8175": 84, "8185": 84, "8194": 84, "8203": 84, "8214": 84, "8224": 84, "8234": 84, "8255": 84, "8265": 84, "8275": 84, "8286": 84, "8296": 84, "8316": 84, "8326": 84, "8336": 84, "8346": 84, "8356": 84, "8366": 84, "8377": 84, "8387": 84, "8398": 84, "8408": 84, "8418": 84, "8428": 84, "8438": 84, "8447": 84, "8456": 84, "8465": 84, "8475": 84, "8485": 84, "8494": 84, "8503": 84, "8512": 84, "8522": 84, "8531": 84, "8540": 84, "8560": 84, "8578": 84, "8588": 84, "8597": 84, "8608": 84, "8619": 84, "8629": 84, "8639": 84, "8649": 84, "8659": 84, "8669": 84, "8679": 84, "8689": 84, "8699": 84, "8709": 84, "8719": 84, "8741": 84, "8752": 84, "8762": 84, "8772": 84, "8783": 84, "8794": 84, "8804": 84, "8814": [84, 85], "8825": 84, "8836": 84, "8847": 84, "8857": 84, "8868": 84, "8879": 84, "8890": 84, "8901": 84, "8911": 84, "8921": 84, "8931": 84, "8941": 84, "8951": 84, "8961": 84, "8971": 84, "8982": 84, "8992": 84, "9012": 84, "9022": 84, "9032": 84, "9042": 84, "9062": 84, "9072": 84, "9081": 84, "9091": 84, "9101": 84, "9111": 84, "9122": 84, "9132": 84, "9142": 84, "9153": 84, "9163": 84, "9173": 84, "9183": 84, "9193": 84, "9203": 84, "9213": 84, "07819397e": 84, "48056889e": 84, "86317738e": 84, "80318112e": 84, "13450501e": 84, "90510861e": 84, "91056542e": 84, "78808950e": 84, "18908921e": 84, "61958970e": 84, "17237838e": 84, "23186090e": 84, "38676232e": 84, "99152866e": 84, "14832163e": 84, "06892957e": 84, "41825726e": 84, "65070379e": 84, "38250941e": 84, "38942356e": 84, "67702568e": 84, "34357229e": 84, "36801020e": 84, "26912924e": 84, "69950448e": 84, "43861871e": 84, "76332334e": 84, "76965057e": 84, "30105513e": 84, "04356019e": 84, "12702942e": 84, "57674067e": 84, "04510936e": 84, "23442424e": 84, "49056228e": 84, "99149700e": 84, "66042016e": 84, "10946414e": 84, "39300078e": 84, "83495625e": 84, "67843779e": 84, "53254789e": 84, "33471409e": 84, "11565718e": 84, "00278022e": 84, "98227330e": 84, "41515801e": 84, "36097977e": 84, "15859621e": 84, "28331076e": 84, "97839734e": 84, "42637736e": 84, "32416120e": 84, "95430344e": 84, "73620758e": 84, "07359260e": 84, "61738361e": 84, "29678673e": 84, "62750988e": 84, "58723140e": 84, "94548779e": 84, "10784012e": 84, "20042914e": 84, "50135856e": 84, "07379628e": 84, "28699862e": 84, "87638912e": 84, "55356793e": 84, "39732048e": 84, "96030402e": 84, "09439424e": 84, "07074878e": 84, "64342252e": 84, "94125547e": 84, "86817699e": 84, "04562301e": 84, "90321192e": 84, "46903789e": 84, "94198316e": 84, "67351437e": 84, "07922379e": 84, "42989381e": 84, "02894434e": 84, "06017373e": 84, "00443786e": 84, "01026621e": 84, "62710991e": 84, "05185017e": 84, "29846537e": 84, "48944537e": 84, "69262470e": 84, "72415715e": 84, "83042591e": 84, "02239573e": 84, "61051689e": 84, "71427461e": 84, "70664466e": 84, "20885237e": 84, "81182893e": 84, "72282936e": 84, "35450334e": 84, "03993364e": 84, "83646690e": 84, "88310692e": 84, "98688769e": 84, "12299493e": 84, "16502966e": 84, "87089565e": 84, "11524042e": 84, "34079283e": 84, "65542623e": 84, "88922363e": 84, "12219624e": 84, "70655936e": 84, "23346100e": 84, "43813347e": 84, "15633085e": 84, "97143551e": 84, "90622199e": 84, "01889036e": 84, "93710007e": 84, "52279438e": 84, "17271730e": 84, "25254560e": 84, "87380649e": 84, "43598600e": 84, "60994960e": 84, "65058430e": 84, "63470182e": 84, "22384636e": 84, "12773778e": 84, "85653822e": 84, "14586308e": 84, "77664617e": 84, "21709957e": 84, "36277507e": 84, "00149315e": 84, "15089758e": 84, "70157210e": 84, "43197131e": 84, "28292374e": 84, "31501996e": 84, "25902169e": 84, "38710836e": 84, "73876799e": 84, "15229642e": 84, "47936185e": 84, "56338317e": 84, "83792975e": 84, "77440136e": 84, "96635855e": 84, "26243670e": 84, "85722562e": 84, "64078001e": 84, "06838050e": 84, "04555163e": 84, "53992561e": 84, "45864228e": 84, "04756400e": 84, "09634648e": 84, "54845037e": 84, "48961940e": 84, "38681294e": 84, "19466814e": 84, "19583387e": 84, "42192035e": 84, "49746735e": 84, "49303974e": 84, "41843434e": 84, "33030323e": 84, "63123941e": 84, "10201510e": 84, "68332713e": 84, "72911840e": 84, "44350286e": 84, "39052455e": 84, "86860441e": 84, "73857661e": 84, "33382036e": 84, "02057132e": 84, "03885597e": 84, "29565370e": 84, "82095643e": 84, "01674891e": 84, "40213897e": 84, "21585971e": 84, "75680535e": 84, "81140382e": 84, "34829726e": 84, "39614203e": 84, "33580077e": 84, "94860840e": 84, "65061333e": 84, "70904466e": 84, "38132479e": 84, "45167177e": 84, "18533114e": 84, "13296334e": 84, "50528233e": 84, "23909465e": 84, "07433362e": 84, "45461738e": 84, "95002361e": 84, "10818063e": 84, "53487264e": 84, "02700617e": 84, "42558305e": 84, "29635527e": 84, "63540384e": 84, "46209339e": 84, "24832761e": 84, "35102386e": 84, "88873403e": 84, "82259677e": 84, "01056189e": 84, "98621188e": 84, "64901754e": 84, "95809057e": 84, "06006364e": 84, "48670256e": 84, "63229030e": 84, "61980546e": 84, "67269383e": 84, "00770942e": 84, "80023822e": 84, "02478689e": 84, "59898050e": 84, "19738552e": 84, "13595424e": 84, "04725397e": 84, "31177763e": 84, "03230831e": 84, "00851960e": 84, "63056657e": 84, "32697472e": 84, "46096185e": 84, "48486417e": 84, "25061276e": 84, "11447111e": 84, "54846471e": 84, "66207618e": 84, "69827448e": 84, "88722223e": 84, "62563824e": 84, "45950496e": 84, "50953589e": 84, "06737025e": 84, "63297210e": 84, "05470615e": 84, "54984383e": 84, "20058485e": 84, "53633515e": 84, "93584964e": 84, "00639040e": 84, "04792098e": 84, "22611069e": 84, "35319468e": 84, "34433859e": 84, "25263335e": 84, "55943878e": 84, "72215430e": 84, "38473404e": 84, "31554116e": 84, "29384830e": 84, "74368496e": 84, "71571848e": 84, "98499400e": 84, "77486229e": 84, "76454989e": 84, "38067351e": 84, "90919442e": 84, "26599617e": 84, "27656479e": 84, "24225059e": 84, "30608450e": 84, "83647236e": 84, "39530201e": 84, "23380689e": 84, "02865238e": 84, "60562810e": 84, "71004378e": 84, "55224326e": 84, "17127333e": 84, "57579584e": 84, "33600452e": 84, "51661163e": 84, "63708143e": 84, "99784929e": 84, "82597409e": 84, "44015531e": 84, "19105865e": 84, "07878237e": 84, "10037403e": 84, "87524277e": 84, "63229514e": 84, "18749803e": 84, "56688954e": 84, "79054622e": 84, "10357390e": 84, "45220433e": 84, "85215698e": 84, "51322362e": 84, "20937098e": 84, "85036124e": 84, "66356111e": 84, "13196136e": 84, "16839829e": 84, "33405933e": 84, "49660975e": 84, "33779555e": 84, "62828367e": 84, "43129847e": 84, "14112316e": 84, "27402686e": 84, "17155893e": 84, "94753072e": 84, "09286280e": 84, "61274058e": 84, "80868616e": 84, "55720392e": 84, "38598149e": 84, "84370835e": 84, "10953917e": 84, "72244551e": 84, "11560295e": 84, "28019034e": 84, "27587415e": 84, "83522763e": 84, "39934601e": 84, "66755842e": 84, "42426690e": 84, "12527850e": 84, "83709433e": 84, "57704045e": 84, "48342871e": 84, "04452619e": 84, "09923080e": 84, "60720306e": 84, "72655725e": 84, "45779054e": 84, "54721773e": 84, "73331175e": 84, "52938382e": 84, "17779632e": 84, "58762993e": 84, "04042480e": 84, "07066651e": 84, "70571341e": 84, "25624177e": 84, "14091580e": 84, "35477744e": 84, "99773766e": 84, "17731612e": 84, "65009051e": 84, "12298936e": 84, "90775556e": 84, "60863347e": 84, "51733843e": 84, "28036399e": 84, "78310481e": 84, "35960381e": 84, "46777795e": 84, "3179": 85, "3269": 85, "4938": 85, "5306": 85, "5559": 85, "5651": 85, "5737": 85, "6165": 85, "6257": 85, "6344": 85, "6429": 85, "6514": 85, "6610": 85, "6712": 85, "6804": 85, "6896": 85, "6988": 85, "7078": 85, "7167": 85, "7256": 85, "7428": 85, "7514": 85, "7607": 85, "7786": 85, "7968": 85, "8062": 85, "8240": 85, "8329": 85, "8423": 85, "8513": 85, "8603": 85, "8718": 85, "8907": 85, "9083": 85, "9167": 85, "9251": 85, "9333": 85, "9435": 85, "9531": 85, "9621": 85, "9711": 85, "9800": 85, "9897": 85, "9987": 85, "10077": 85, "10167": 85, "10257": 85, "10348": 85, "10438": 85, "10528": 85, "10625": 85, "10809": 85, "10896": 85, "10981": 85, "11080": 85, "11176": 85, "11267": 85, "11355": 85, "11440": 85, "11523": 85, "11612": 85, "11701": 85, "11805": 85, "11985": 85, "12161": 85, "12244": 85, "12337": 85, "12421": 85, "12505": 85, "12593": 85, "12692": 85, "12802": 85, "12897": 85, "12989": 85, "13081": 85, "13171": 85, "13258": 85, "13345": 85, "13432": 85, "13519": 85, "13606": 85, "13689": 85, "13775": 85, "13861": 85, "13945": 85, "14027": 85, "14109": 85, "14191": 85, "14273": 85, "14354": 85, "14441": 85, "14530": 85, "14614": 85, "14698": 85, "14802": 85, "14914": 85, "15012": 85, "15108": 85, "15204": 85, "15300": 85, "15394": 85, "15485": 85, "15576": 85, "15665": 85, "15749": 85, "15831": 85, "15912": 85, "16009": 85, "16104": 85, "16192": 85, "16277": 85, "16363": 85, "16534": 85, "16625": 85, "16732": 85, "16846": 85, "16944": 85, "17039": 85, "17145": 85, "17241": 85, "17337": 85, "17433": 85, "17529": 85, "17625": 85, "17726": 85, "17823": 85, "17918": 85, "18012": 85, "18103": 85, "18201": 85, "18294": 85, "18387": 85, "18475": 85, "18563": 85, "18659": 85, "18749": 85, "18839": 85, "18927": 85, "19014": 85, "19101": 85, "19187": 85, "19272": 85, "19364": 85, "19467": 85, "19559": 85, "19659": 85, "19765": 85, "19862": 85, "19959": 85, "20067": 85, "20167": 85, "20264": 85, "20354": 85, "20440": 85, "20526": 85, "20612": 85, "20698": 85, "20784": 85, "20870": 85, "20965": 85, "21056": 85, "21145": 85, "21247": 85, "21350": 85, "21454": 85, "21552": 85, "21745": 85, "21837": 85, "21929": 85, "22021": 85, "22110": 85, "22203": 85, "22293": 85, "22385": 85, "22484": 85, "22581": 85, "22674": 85, "22780": 85, "22877": 85, "22974": 85, "23070": 85, "23166": 85, "23262": 85, "23356": 85, "23449": 85, "23540": 85, "23634": 85, "23727": 85, "23817": 85, "23905": 85, "23997": 85, "24097": 85, "24208": 85, "24307": 85, "24405": 85, "24501": 85, "24602": 85, "24697": 85, "24789": 85, "24886": 85, "24988": 85, "25095": 85, "25205": 85, "25306": 85, "25417": 85, "25523": 85, "25639": 85, "25747": 85, "25847": 85, "25942": 85, "26046": 85, "26144": 85, "26250": 85, "26355": 85, "26455": 85, "26548": 85, "26640": 85, "26728": 85, "26816": 85, "26904": 85, "26992": 85, "27089": 85, "27179": 85, "27269": 85, "27359": 85, "27447": 85, "27539": 85, "27626": 85, "27713": 85, "27803": 85, "27889": 85, "27975": 85, "28063": 85, "28149": 85, "28237": 85, "28324": 85, "28420": 85, "28521": 85, "28621": 85, "28715": 85, "28816": 85, "28912": 85, "29007": 85, "29100": 85, "29195": 85, "29292": 85, "29398": 85, "29504": 85, "29603": 85, "29702": 85, "29801": 85, "29899": 85, "29996": 85, "30090": 85, "30181": 85, "30276": 85, "30377": 85, "30468": 85, "30559": 85, "30674": 85, "30772": 85, "30870": 85, "30968": 85, "31063": 85, "31155": 85, "31259": 85, "31355": 85, "31448": 85, "31541": 85, "31662": 85, "31768": 85, "31876": 85, "31984": 85, "32088": 85, "32189": 85, "32290": 85, "32387": 85, "32482": 85, "32574": 85, "32666": 85, "32756": 85, "32851": 85, "32941": 85, "33036": 85, "33218": 85, "33310": 85, "33409": 85, "33502": 85, "33605": 85, "33700": 85, "33794": 85, "33886": 85, "33977": 85, "34069": 85, "34159": 85, "34249": 85, "34338": 85, "34443": 85, "34552": 85, "34669": 85, "34772": 85, "34872": 85, "34972": 85, "35069": 85, "35165": 85, "35260": 85, "35366": 85, "35468": 85, "35586": 85, "35690": 85, "35789": 85, "35987": 85, "36084": 85, "36183": 85, "36378": 85, "36472": 85, "36564": 85, "36651": 85, "36738": 85, "36822": 85, "36906": 85, "36990": 85, "37155": 85, "37245": 85, "37331": 85, "37417": 85, "37502": 85, "37591": 85, "37675": 85, "37777": 85, "37866": 85, "37977": 85, "38086": 85, "38184": 85, "38282": 85, "38375": 85, "38465": 85, "38551": 85, "38637": 85, "38739": 85, "38837": 85, "38929": 85, "39018": 85, "39107": 85, "39194": 85, "39295": 85, "39391": 85, "39483": 85, "39573": 85, "39676": 85, "39767": 85, "39866": 85, "39967": 85, "40073": 85, "40181": 85, "40282": 85, "40383": 85, "40580": 85, "40675": 85, "40770": 85, "40873": 85, "40967": 85, "41075": 85, "41171": 85, "41267": 85, "41361": 85, "41448": 85, "41538": 85, "41629": 85, "41723": 85, "41814": 85, "41922": 85, "42017": 85, "42112": 85, "42202": 85, "42292": 85, "42382": 85, "42472": 85, "42562": 85, "42652": 85, "42739": 85, "42826": 85, "42919": 85, "43008": 85, "43094": 85, "43196": 85, "43295": 85, "43388": 85, "43478": 85, "43568": 85, "43671": 85, "43784": 85, "43883": 85, "43980": 85, "44075": 85, "44159": 85, "44358": 85, "44450": 85, "44541": 85, "44646": 85, "44763": 85, "44865": 85, "44964": 85, "45085": 85, "45182": 85, "45276": 85, "45370": 85, "45463": 85, "45564": 85, "45660": 85, "45755": 85, "45850": 85, "45955": 85, "46052": 85, "46148": 85, "46255": 85, "46363": 85, "46462": 85, "46558": 85, "46651": 85, "46742": 85, "46833": 85, "46925": 85, "47024": 85, "47116": 85, "47212": 85, "47305": 85, "47489": 85, "47575": 85, "47660": 85, "47746": 85, "47830": 85, "47915": 85, "48091": 85, "48188": 85, "48296": 85, "48391": 85, "48486": 85, "48581": 85, "48674": 85, "48766": 85, "48945": 85, "49046": 85, "49140": 85, "49244": 85, "49340": 85, "49433": 85, "49526": 85, "49623": 85, "49719": 85, "49837": 85, "49937": 85, "50037": 85, "50132": 85, "50224": 85, "50314": 85, "50508": 85, "50622": 85, "50721": 85, "50817": 85, "50913": 85, "51009": 85, "51111": 85, "51207": 85, "51303": 85, "51397": 85, "51488": 85, "51579": 85, "51670": 85, "51758": 85, "51849": 85, "51944": 85, "52035": 85, "52123": 85, "52209": 85, "52297": 85, "52391": 85, "52478": 85, "52564": 85, "52652": 85, "52738": 85, "52824": 85, "52912": 85, "53006": 85, "53095": 85, "53184": 85, "53276": 85, "53380": 85, "53490": 85, "53588": 85, "53686": 85, "53781": 85, "53971": 85, "54066": 85, "54158": 85, "54253": 85, "54359": 85, "54455": 85, "54551": 85, "54647": 85, "54743": 85, "54832": 85, "54919": 85, "55003": 85, "55091": 85, "55184": 85, "55271": 85, "55363": 85, "55450": 85, "55544": 85, "55642": 85, "55733": 85, "55824": 85, "55915": 85, "56004": 85, "56093": 85, "56182": 85, "56271": 85, "56368": 85, "56459": 85, "56547": 85, "56633": 85, "56716": 85, "56906": 85, "56995": 85, "57084": 85, "57171": 85, "57256": 85, "57341": 85, "57438": 85, "57538": 85, "2288": [80, 87], "6800": 88, "6953": 88, "6612": 88, "6590": 88, "6798": 88, "6934": 88, "6317": 88, "4642": 88, "6640": 88, "6139": 88, "single_peak_mask": 89, "rcparam": 93, "max_open_warn": 93, "091": [], "640x480": [96, 97, 104, 105, 106], "108546495437622": 100, "7756237983703613": 100, "004": [], "resiz": 104, "99999": [102, 105], "88535": 105, "92105": 105, "85171": 105, "99705": 105, "9998": 105, "99429": 105, "0x000001833dfc3280": 107, "0x000001833d3ba530": 112, "0x000001833d3bb7f0": 112, "0x000001833c7df6a0": 114, "83774": 114, "9259": 114, "322784": 114, "108505": 114, "84363": 114, "91885": 114, "40357": 114, "25677": 114, "7293": 114, "48337": 114, "60328": 114, "137825": 114, "238976": 114, "51007": 114, "29447": 114, "04564": 114, "460205": 114, "542404": 114, "6024": 114, "14851": 114, "84209": 114, "98937": 114, "57682": 114, "63652": 114, "72344": 114, "60828": 114, "939186": 114, "40846": 114, "158745": 114, "745346": 114, "002625": 114, "82582": 114, "02451": 114, "43942": 114, "06974": 114, "086": [114, 115], "5817060470581": 116, "6833333333333333": 125, "9583333333333333": 125, "tar": 134, "38477": 134, "97756fbef11ce2df31f1bedf1fc7aac7": 134, "poly_data": [], "color_is_scalar": [], "lines_to_vtk_polydata": [], "cols_arr": [], "inhomogen": [], "007": 140, "013": 140, "toolchain": [18, 245], "roadmap": [18, 245], "release_not": 21, "release1": 21, "nse": 21, "pyarg": 21, "meson": [21, 22, 145, 233], "version_util": 21, "isreleas": 21, "twine": 21, "notabl": 22, "evolv": 22, "strive": 22, "toolset": 22, "moder": 22, "conserv": 22, "stanc": 22, "foremost": 22, "sphinx_design": 22, "sphinxcontrib": 22, "bibtex": 22, "pydata": [22, 233], "grg": 22, "guidanc": 22, "spec": [22, 245], "py2": 22, "preced": 22, "necessit": 22, "sole": 22, "exhaust": 22, "transpil": 22, "secondari": 22, "untest": 22, "aix": 22, "alpin": 22, "freebsd": 22, "vc142": 22, "x86": 22, "cibuildwheel": 22, "docker": 22, "monterei": 22, "implic": 22, "seamlessli": 22, "pythonwheel": 22, "runner": 22, "cirru": 22, "hood": 22, "cirruslab": 22, "ndaraa948vfh_desc": 79, "preproc_t1w": 79, "ndaraa948vfh_dseg": 79, "ndaraa948vfh_from": 79, "mni152nlin2009casym_to": 79, "t1w_mode": 79, "image_xfm": 79, "t1w_to": 79, "mni152nlin2009casym_mod": 79, "ndaraa948vfh_label": 79, "csf_probseg": 79, "gm_probseg": 79, "wm_probseg": 79, "ndaraa948vfh_spac": 79, "mni152nlin2009casym_desc": 79, "mni152nlin2009casym_dseg": 79, "mni152nlin2009casym_label": 79, "ndaraa948vfh_seg_brainmask": 79, "svg": 79, "87i": 79, "92i": 79, "64dir_carpetplot": 79, "64dir_coreg": 79, "64dir_desc": 79, "resampled_b0ref": 79, "sdc_b0": 79, "64dir_dwi_denoise_ses_hbnsiteru_acq": 79, "64dir_sampling_schem": 79, "gif": 79, "ndaraa948vfh_t1_2_mni": 79, "hcp_from": 79, "orig_to": 79, "t1w_mod": 79, "64dir_confound": 79, "tsv": 79, "imageqc_dwi": 79, "sliceqc_dwi": 79, "64dir_dwiqc": 79, "brai": 79, "prep": 79, "t1w_dwiref": 79, "1853": 79, "2357": 79, "3457": 79, "4036": 79, "4156": 79, "4206": 79, "4793": 79, "4836": 79, "_minpack_pi": 80, "maxfev": 80, "2647": 80, "4363": 80, "38297": 102, "57499": 102, "00001": 102, "71281": 102, "51155": 102, "138626": 102, "743256": 102, "57159": 102, "77189": 102, "51843": 102, "39175": 102, "77338": 102, "40704": 102, "40047": 102, "26481": 102, "818726": 102, "22971": 102, "945564": 102, "12815": 102, "529335": 102, "99735": 102, "59097": 102, "39428": 102, "35901": 102, "08593": 102, "9184668": 102, "04836": 102, "811745": 102, "83968": 102, "33975": 102, "619865": 102, "683014": 102, "771965": 102, "96909": 102, "14295": 102, "97683": 102, "927216": 102, "678276": 102, "898346": 102, "99135": 102, "97298": 102, "460953": 102, "87729": 102, "2770734": 102, "dipy_root": [138, 141], "dipy_denoise_seg": 138, "cli_flow": [138, 141], "my_combined_workflow": 138, "dipy_append_text": 141, "my_fib_file_path": 160, "my_fold": 160, "my_path": 160, "my_tractogram": 160, "my_trk_file_path": 160, "my_trk": 160, "convert_sh": 160, "convert_tensor": 160, "andgaryfallidi": [183, 184, 205], "forinvestig": [183, 184, 205], "acrosspopul": [183, 184, 205], "atharva": 233, "shah": 233, "papadopoulo": 233, "maharshi": 233, "gor": 233, "cruso": 233, "delint": 233, "paul": 233, "camacho": 233, "prasad": 233, "theodor": 233, "vara": 233, "lakshmi": 233, "bayanagari": 233, "dependabot": 233, "\u00e9tienn": 233, "mollier": 233, "clarabel": 233, "3006": 233, "optional_packag": 233, "_importlib": 233, "resort": 233, "swap": 233, "test_mcsd": 233, "incub": 233, "miniconda": 233, "negat": 233, "sctype": 233, "int_t": 233, "2974": 233, "2924": 233, "deleg": 233, "jhlegarreta": 233, "2933": 233, "2926": 233, "dep": 233, "sec": 233, "refurb": 233, "pyupgrad": 233, "trail": 233, "license_fil": 233, "cfg": 233, "blog": 233, "week0": 233, "week1": 233, "submit": 233, "week13": 233, "week12": 233, "to_x": 233, "7th_blog": 233, "4thblog": 233, "week6": 233, "clearn": 233, "nisext": 233, "prereleas": 233, "test_icm_squar": 233, "2786": 233, "streamlines_registr": 233, "2777": 233, "dipy_motion_correct": 233, "2901": 233, "gab": 233, "week14blog": 233, "test_fil": 233, "topup": 233, "worsen": 233, "orbitofront": 233, "odffp": 233, "2857": 233, "fyi": 233, "2718": 233, "fibonacci": 165, "fibonacci_spher": 178, "noisemap": [187, 188], "inmedicin": 187, "matrixtheori": 188, "andprima": 189, "onhardi": 189, "featurecrf": 191, "mridata": 199, "ringingartifact": 199, "2016doi": 199, "linearregistr": 207, "ofstreamlin": 207, "fiberbundl": 207, "matterbundl": 207, "registrationand": 207, "towardsquantit": 211, "dipy_denoise_patch2self": 212, "dipy_evac_plu": 212, "dipy_reslic": 212, "dipy_snr_in_cc": 212, "dipy_split": 212}, "objects": {"": [[162, 0, 0, "-", "dipy"]], "dipy": [[163, 0, 0, "-", "align"], [164, 0, 0, "-", "boots"], [165, 0, 0, "-", "core"], [166, 0, 0, "-", "data"], [167, 0, 0, "-", "denoise"], [168, 0, 0, "-", "direction"], [162, 3, 1, "", "get_info"], [169, 0, 0, "-", "io"], [170, 0, 0, "-", "nn"], [171, 0, 0, "-", "reconst"], [172, 0, 0, "-", "segment"], [173, 0, 0, "-", "sims"], [174, 0, 0, "-", "stats"], [175, 0, 0, "-", "tracking"], [176, 0, 0, "-", "viz"], [177, 0, 0, "-", "workflows"]], "dipy.align": [[163, 1, 1, "", "Bunch"], [163, 3, 1, "", "VerbosityLevels"], [163, 0, 0, "-", "_public"], [163, 0, 0, "-", "bundlemin"], [163, 0, 0, "-", "cpd"], [163, 0, 0, "-", "crosscorr"], [163, 0, 0, "-", "expectmax"], [163, 0, 0, "-", "imaffine"], [163, 0, 0, "-", "imwarp"], [163, 0, 0, "-", "metrics"], [163, 0, 0, "-", "parzenhist"], [163, 0, 0, "-", "reslice"], [163, 0, 0, "-", "scalespace"], [163, 0, 0, "-", "streamlinear"], [163, 0, 0, "-", "streamwarp"], [163, 0, 0, "-", "sumsqdiff"], [163, 0, 0, "-", "transforms"], [163, 0, 0, "-", "vector_fields"]], "dipy.align.Bunch": [[163, 2, 1, "", "__init__"]], "dipy.align._public": [[163, 3, 1, "", "_METHOD_DICT"], [163, 3, 1, "", "affine"], [163, 3, 1, "", "affine_registration"], [163, 3, 1, "", "center_of_mass"], [163, 3, 1, "", "motion_correction"], [163, 3, 1, "", "read_mapping"], [163, 3, 1, "", "register_dwi_series"], [163, 3, 1, "", "register_dwi_to_template"], [163, 3, 1, "", "register_series"], [163, 3, 1, "", "resample"], [163, 3, 1, "", "rigid"], [163, 3, 1, "", "rigid_isoscaling"], [163, 3, 1, "", "rigid_scaling"], [163, 3, 1, "", "streamline_registration"], [163, 3, 1, "", "syn_registration"], [163, 3, 1, "", "translation"], [163, 3, 1, "", "write_mapping"]], "dipy.align.bundlemin": [[163, 3, 1, "", "determine_num_threads"], [163, 3, 1, "", "distance_matrix_mdf"]], "dipy.align.cpd": [[163, 1, 1, "", "DeformableRegistration"], [163, 3, 1, "", "gaussian_kernel"], [163, 3, 1, "", "initialize_sigma2"], [163, 3, 1, "", "low_rank_eigen"], [163, 3, 1, "", "lowrankQS"]], "dipy.align.cpd.DeformableRegistration": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "expectation"], [163, 2, 1, "", "get_registration_parameters"], [163, 2, 1, "", "iterate"], [163, 2, 1, "", "maximization"], [163, 2, 1, "", "register"], [163, 2, 1, "", "transform_point_cloud"], [163, 2, 1, "", "update_transform"], [163, 2, 1, "", "update_variance"]], "dipy.align.crosscorr": [[163, 3, 1, "", "compute_cc_backward_step_2d"], [163, 3, 1, "", "compute_cc_backward_step_3d"], [163, 3, 1, "", "compute_cc_forward_step_2d"], [163, 3, 1, "", "compute_cc_forward_step_3d"], [163, 3, 1, "", "precompute_cc_factors_2d"], [163, 3, 1, "", "precompute_cc_factors_2d_test"], [163, 3, 1, "", "precompute_cc_factors_3d"], [163, 3, 1, "", "precompute_cc_factors_3d_test"]], "dipy.align.expectmax": [[163, 3, 1, "", "compute_em_demons_step_2d"], [163, 3, 1, "", "compute_em_demons_step_3d"], [163, 3, 1, "", "compute_masked_class_stats_2d"], [163, 3, 1, "", "compute_masked_class_stats_3d"], [163, 3, 1, "", "quantize_positive_2d"], [163, 3, 1, "", "quantize_positive_3d"]], "dipy.align.imaffine": [[163, 1, 1, "", "AffineInvalidValuesError"], [163, 1, 1, "", "AffineInversionError"], [163, 1, 1, "", "AffineMap"], [163, 1, 1, "", "AffineRegistration"], [163, 1, 1, "", "MutualInformationMetric"], [163, 3, 1, "", "_transform_method"], [163, 3, 1, "", "transform_centers_of_mass"], [163, 3, 1, "", "transform_geometric_centers"], [163, 3, 1, "", "transform_origins"]], "dipy.align.imaffine.AffineInvalidValuesError": [[163, 2, 1, "", "__init__"]], "dipy.align.imaffine.AffineInversionError": [[163, 2, 1, "", "__init__"]], "dipy.align.imaffine.AffineMap": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "get_affine"], [163, 2, 1, "", "set_affine"], [163, 2, 1, "", "transform"], [163, 2, 1, "", "transform_inverse"]], "dipy.align.imaffine.AffineRegistration": [[163, 2, 1, "", "__init__"], [163, 4, 1, "", "docstring_addendum"], [163, 2, 1, "", "optimize"]], "dipy.align.imaffine.MutualInformationMetric": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "distance"], [163, 2, 1, "", "distance_and_gradient"], [163, 2, 1, "", "gradient"], [163, 2, 1, "", "setup"]], "dipy.align.imwarp": [[163, 1, 1, "", "DiffeomorphicMap"], [163, 1, 1, "", "DiffeomorphicRegistration"], [163, 3, 1, "", "RegistrationStages"], [163, 1, 1, "", "SymmetricDiffeomorphicRegistration"], [163, 3, 1, "", "get_direction_and_spacings"], [163, 3, 1, "", "logger"], [163, 3, 1, "", "mult_aff"]], "dipy.align.imwarp.DiffeomorphicMap": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "allocate"], [163, 2, 1, "", "compute_inversion_error"], [163, 2, 1, "", "expand_fields"], [163, 2, 1, "", "get_backward_field"], [163, 2, 1, "", "get_forward_field"], [163, 2, 1, "", "get_simplified_transform"], [163, 2, 1, "", "interpret_matrix"], [163, 2, 1, "", "inverse"], [163, 2, 1, "", "shallow_copy"], [163, 2, 1, "", "transform"], [163, 2, 1, "", "transform_inverse"], [163, 2, 1, "", "transform_points"], [163, 2, 1, "", "transform_points_inverse"], [163, 2, 1, "", "warp_endomorphism"]], "dipy.align.imwarp.DiffeomorphicRegistration": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "get_map"], [163, 2, 1, "", "optimize"], [163, 2, 1, "", "set_level_iters"]], "dipy.align.imwarp.SymmetricDiffeomorphicRegistration": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "get_map"], [163, 2, 1, "", "optimize"], [163, 2, 1, "", "update"]], "dipy.align.metrics": [[163, 1, 1, "", "CCMetric"], [163, 1, 1, "", "EMMetric"], [163, 1, 1, "", "SSDMetric"], [163, 1, 1, "", "SimilarityMetric"], [163, 3, 1, "", "v_cycle_2d"], [163, 3, 1, "", "v_cycle_3d"]], "dipy.align.metrics.CCMetric": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "compute_backward"], [163, 2, 1, "", "compute_forward"], [163, 2, 1, "", "free_iteration"], [163, 2, 1, "", "get_energy"], [163, 2, 1, "", "initialize_iteration"]], "dipy.align.metrics.EMMetric": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "compute_backward"], [163, 2, 1, "", "compute_demons_step"], [163, 2, 1, "", "compute_forward"], [163, 2, 1, "", "compute_gauss_newton_step"], [163, 2, 1, "", "free_iteration"], [163, 2, 1, "", "get_energy"], [163, 2, 1, "", "initialize_iteration"], [163, 2, 1, "", "use_moving_image_dynamics"], [163, 2, 1, "", "use_static_image_dynamics"]], "dipy.align.metrics.SSDMetric": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "compute_backward"], [163, 2, 1, "", "compute_demons_step"], [163, 2, 1, "", "compute_forward"], [163, 2, 1, "", "compute_gauss_newton_step"], [163, 2, 1, "", "free_iteration"], [163, 2, 1, "", "get_energy"], [163, 2, 1, "", "initialize_iteration"]], "dipy.align.metrics.SimilarityMetric": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "compute_backward"], [163, 2, 1, "", "compute_forward"], [163, 2, 1, "", "free_iteration"], [163, 2, 1, "", "get_energy"], [163, 2, 1, "", "initialize_iteration"], [163, 2, 1, "", "set_levels_above"], [163, 2, 1, "", "set_levels_below"], [163, 2, 1, "", "set_moving_image"], [163, 2, 1, "", "set_static_image"], [163, 2, 1, "", "use_moving_image_dynamics"], [163, 2, 1, "", "use_static_image_dynamics"]], "dipy.align.parzenhist": [[163, 1, 1, "", "ParzenJointHistogram"], [163, 3, 1, "", "compute_parzen_mi"], [163, 3, 1, "", "cubic_spline"], [163, 3, 1, "", "cubic_spline_derivative"], [163, 3, 1, "", "sample_domain_regular"]], "dipy.align.parzenhist.ParzenJointHistogram": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "bin_index"], [163, 2, 1, "", "bin_normalize_moving"], [163, 2, 1, "", "bin_normalize_static"], [163, 2, 1, "", "setup"], [163, 2, 1, "", "update_gradient_dense"], [163, 2, 1, "", "update_gradient_sparse"], [163, 2, 1, "", "update_pdfs_dense"], [163, 2, 1, "", "update_pdfs_sparse"]], "dipy.align.reslice": [[163, 3, 1, "", "reslice"]], "dipy.align.scalespace": [[163, 1, 1, "", "IsotropicScaleSpace"], [163, 1, 1, "", "ScaleSpace"], [163, 3, 1, "", "logger"]], "dipy.align.scalespace.IsotropicScaleSpace": [[163, 2, 1, "", "__init__"]], "dipy.align.scalespace.ScaleSpace": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "get_affine"], [163, 2, 1, "", "get_affine_inv"], [163, 2, 1, "", "get_domain_shape"], [163, 2, 1, "", "get_expand_factors"], [163, 2, 1, "", "get_image"], [163, 2, 1, "", "get_scaling"], [163, 2, 1, "", "get_sigmas"], [163, 2, 1, "", "get_spacing"], [163, 2, 1, "", "print_level"]], "dipy.align.streamlinear": [[163, 1, 1, "", "BundleMinDistanceAsymmetricMetric"], [163, 1, 1, "", "BundleMinDistanceMatrixMetric"], [163, 1, 1, "", "BundleMinDistanceMetric"], [163, 1, 1, "", "BundleSumDistanceMatrixMetric"], [163, 1, 1, "", "JointBundleMinDistanceMetric"], [163, 1, 1, "", "JointStreamlineRegistrationMap"], [163, 1, 1, "", "StreamlineDistanceMetric"], [163, 1, 1, "", "StreamlineLinearRegistration"], [163, 1, 1, "", "StreamlineRegistrationMap"], [163, 3, 1, "", "bundle_min_distance"], [163, 3, 1, "", "bundle_min_distance_asymmetric_fast"], [163, 3, 1, "", "bundle_min_distance_fast"], [163, 3, 1, "", "bundle_sum_distance"], [163, 3, 1, "", "compose_matrix44"], [163, 3, 1, "", "decompose_matrix44"], [163, 3, 1, "", "get_unique_pairs"], [163, 3, 1, "", "groupwise_slr"], [163, 3, 1, "", "logger"], [163, 3, 1, "", "progressive_slr"], [163, 3, 1, "", "remove_clusters_by_size"], [163, 3, 1, "", "slr_with_qbx"]], "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "distance"]], "dipy.align.streamlinear.BundleMinDistanceMatrixMetric": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "distance"], [163, 2, 1, "", "setup"]], "dipy.align.streamlinear.BundleMinDistanceMetric": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "distance"], [163, 2, 1, "", "setup"]], "dipy.align.streamlinear.BundleSumDistanceMatrixMetric": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "distance"]], "dipy.align.streamlinear.JointBundleMinDistanceMetric": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "distance"], [163, 2, 1, "", "setup"]], "dipy.align.streamlinear.JointStreamlineRegistrationMap": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "transform"]], "dipy.align.streamlinear.StreamlineDistanceMetric": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "distance"], [163, 2, 1, "", "setup"]], "dipy.align.streamlinear.StreamlineLinearRegistration": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "optimize"]], "dipy.align.streamlinear.StreamlineRegistrationMap": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "transform"]], "dipy.align.streamwarp": [[163, 3, 1, "", "average_bundle_length"], [163, 3, 1, "", "bundlewarp"], [163, 3, 1, "", "bundlewarp_shape_analysis"], [163, 3, 1, "", "bundlewarp_vector_filed"], [163, 3, 1, "", "find_missing"]], "dipy.align.sumsqdiff": [[163, 3, 1, "", "compute_energy_ssd_2d"], [163, 3, 1, "", "compute_energy_ssd_3d"], [163, 3, 1, "", "compute_residual_displacement_field_ssd_2d"], [163, 3, 1, "", "compute_residual_displacement_field_ssd_3d"], [163, 3, 1, "", "compute_ssd_demons_step_2d"], [163, 3, 1, "", "compute_ssd_demons_step_3d"], [163, 3, 1, "", "iterate_residual_displacement_field_ssd_2d"], [163, 3, 1, "", "iterate_residual_displacement_field_ssd_3d"], [163, 3, 1, "", "solve_2d_symmetric_positive_definite"], [163, 3, 1, "", "solve_3d_symmetric_positive_definite"]], "dipy.align.transforms": [[163, 1, 1, "", "AffineTransform2D"], [163, 1, 1, "", "AffineTransform3D"], [163, 1, 1, "", "RigidIsoScalingTransform2D"], [163, 1, 1, "", "RigidIsoScalingTransform3D"], [163, 1, 1, "", "RigidScalingTransform2D"], [163, 1, 1, "", "RigidScalingTransform3D"], [163, 1, 1, "", "RigidTransform2D"], [163, 1, 1, "", "RigidTransform3D"], [163, 1, 1, "", "RotationTransform2D"], [163, 1, 1, "", "RotationTransform3D"], [163, 1, 1, "", "ScalingTransform2D"], [163, 1, 1, "", "ScalingTransform3D"], [163, 1, 1, "", "Transform"], [163, 1, 1, "", "TranslationTransform2D"], [163, 1, 1, "", "TranslationTransform3D"]], "dipy.align.transforms.AffineTransform2D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.AffineTransform3D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidIsoScalingTransform2D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidIsoScalingTransform3D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidScalingTransform2D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidScalingTransform3D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidTransform2D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.RigidTransform3D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.RotationTransform2D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.RotationTransform3D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.ScalingTransform2D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.ScalingTransform3D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.Transform": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "get_dim"], [163, 2, 1, "", "get_identity_parameters"], [163, 2, 1, "", "get_number_of_parameters"], [163, 2, 1, "", "jacobian"], [163, 2, 1, "", "param_to_matrix"]], "dipy.align.transforms.TranslationTransform2D": [[163, 2, 1, "", "__init__"]], "dipy.align.transforms.TranslationTransform3D": [[163, 2, 1, "", "__init__"]], "dipy.align.vector_fields": [[163, 3, 1, "", "compose_vector_fields_2d"], [163, 3, 1, "", "compose_vector_fields_3d"], [163, 3, 1, "", "create_circle"], [163, 3, 1, "", "create_harmonic_fields_2d"], [163, 3, 1, "", "create_harmonic_fields_3d"], [163, 3, 1, "", "create_random_displacement_2d"], [163, 3, 1, "", "create_random_displacement_3d"], [163, 3, 1, "", "create_sphere"], [163, 3, 1, "", "downsample_displacement_field_2d"], [163, 3, 1, "", "downsample_displacement_field_3d"], [163, 3, 1, "", "downsample_scalar_field_2d"], [163, 3, 1, "", "downsample_scalar_field_3d"], [163, 3, 1, "", "gradient"], [163, 3, 1, "", "invert_vector_field_fixed_point_2d"], [163, 3, 1, "", "invert_vector_field_fixed_point_3d"], [163, 3, 1, "", "is_valid_affine"], [163, 3, 1, "", "reorient_vector_field_2d"], [163, 3, 1, "", "reorient_vector_field_3d"], [163, 3, 1, "", "resample_displacement_field_2d"], [163, 3, 1, "", "resample_displacement_field_3d"], [163, 3, 1, "", "simplify_warp_function_2d"], [163, 3, 1, "", "simplify_warp_function_3d"], [163, 3, 1, "", "sparse_gradient"], [163, 3, 1, "", "transform_2d_affine"], [163, 3, 1, "", "transform_2d_affine_nn"], [163, 3, 1, "", "transform_3d_affine"], [163, 3, 1, "", "transform_3d_affine_nn"], [163, 3, 1, "", "warp_2d"], [163, 3, 1, "", "warp_2d_nn"], [163, 3, 1, "", "warp_3d"], [163, 3, 1, "", "warp_3d_nn"], [163, 3, 1, "", "warp_coordinates_2d"], [163, 3, 1, "", "warp_coordinates_3d"]], "dipy.core": [[165, 0, 0, "-", "geometry"], [165, 0, 0, "-", "gradients"], [165, 0, 0, "-", "graph"], [165, 0, 0, "-", "histeq"], [165, 0, 0, "-", "interpolation"], [165, 0, 0, "-", "ndindex"], [165, 0, 0, "-", "onetime"], [165, 0, 0, "-", "optimize"], [165, 0, 0, "-", "profile"], [165, 0, 0, "-", "rng"], [165, 0, 0, "-", "sphere"], [165, 0, 0, "-", "sphere_stats"], [165, 0, 0, "-", "subdivide_octahedron"], [165, 0, 0, "-", "wavelet"]], "dipy.core.geometry": [[165, 3, 1, "", "_TUPLE2AXES"], [165, 3, 1, "", "cart2sphere"], [165, 3, 1, "", "cart_distance"], [165, 3, 1, "", "circumradius"], [165, 3, 1, "", "compose_matrix"], [165, 3, 1, "", "compose_transformations"], [165, 3, 1, "", "decompose_matrix"], [165, 3, 1, "", "dist_to_corner"], [165, 3, 1, "", "euler_matrix"], [165, 3, 1, "", "is_hemispherical"], [165, 3, 1, "", "lambert_equal_area_projection_cart"], [165, 3, 1, "", "lambert_equal_area_projection_polar"], [165, 3, 1, "", "nearest_pos_semi_def"], [165, 3, 1, "", "normalized_vector"], [165, 3, 1, "", "perpendicular_directions"], [165, 3, 1, "", "rodrigues_axis_rotation"], [165, 3, 1, "", "sph2latlon"], [165, 3, 1, "", "sphere2cart"], [165, 3, 1, "", "sphere_distance"], [165, 3, 1, "", "vec2vec_rotmat"], [165, 3, 1, "", "vector_cosine"], [165, 3, 1, "", "vector_norm"]], "dipy.core.gradients": [[165, 1, 1, "", "GradientTable"], [165, 3, 1, "", "b0_threshold_empty_gradient_message"], [165, 3, 1, "", "b0_threshold_update_slicing_message"], [165, 3, 1, "", "btens_to_params"], [165, 3, 1, "", "check_multi_b"], [165, 3, 1, "", "generate_bvecs"], [165, 3, 1, "", "get_bval_indices"], [165, 3, 1, "", "gradient_table"], [165, 3, 1, "", "gradient_table_from_bvals_bvecs"], [165, 3, 1, "", "gradient_table_from_gradient_strength_bvecs"], [165, 3, 1, "", "gradient_table_from_qvals_bvecs"], [165, 3, 1, "", "logger"], [165, 3, 1, "", "mask_non_weighted_bvals"], [165, 3, 1, "", "orientation_from_string"], [165, 3, 1, "", "orientation_to_string"], [165, 3, 1, "", "ornt_mapping"], [165, 3, 1, "", "params_to_btens"], [165, 3, 1, "", "reorient_bvecs"], [165, 3, 1, "", "reorient_on_axis"], [165, 3, 1, "", "reorient_vectors"], [165, 3, 1, "", "round_bvals"], [165, 3, 1, "", "unique_bvals"], [165, 3, 1, "", "unique_bvals_magnitude"], [165, 3, 1, "", "unique_bvals_tolerance"]], "dipy.core.gradients.GradientTable": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "b0s_mask"], [165, 2, 1, "", "bvals"], [165, 2, 1, "", "bvecs"], [165, 2, 1, "", "gradient_strength"], [165, 5, 1, "", "info"], [165, 2, 1, "", "qvals"], [165, 2, 1, "", "tau"]], "dipy.core.graph": [[165, 1, 1, "", "Graph"]], "dipy.core.graph.Graph": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "add_edge"], [165, 2, 1, "", "add_node"], [165, 2, 1, "", "all_paths"], [165, 2, 1, "", "children"], [165, 2, 1, "", "del_node"], [165, 2, 1, "", "del_node_and_edges"], [165, 2, 1, "", "down"], [165, 2, 1, "", "down_short"], [165, 2, 1, "", "parents"], [165, 2, 1, "", "shortest_path"], [165, 2, 1, "", "up"], [165, 2, 1, "", "up_short"]], "dipy.core.histeq": [[165, 3, 1, "", "histeq"]], "dipy.core.interpolation": [[165, 1, 1, "", "Interpolator"], [165, 1, 1, "", "NearestNeighborInterpolator"], [165, 1, 1, "", "OutsideImage"], [165, 1, 1, "", "TriLinearInterpolator"], [165, 3, 1, "", "interp_rbf"], [165, 3, 1, "", "interpolate_scalar_2d"], [165, 3, 1, "", "interpolate_scalar_3d"], [165, 3, 1, "", "interpolate_scalar_nn_2d"], [165, 3, 1, "", "interpolate_scalar_nn_3d"], [165, 3, 1, "", "interpolate_vector_2d"], [165, 3, 1, "", "interpolate_vector_3d"], [165, 3, 1, "", "map_coordinates_trilinear_iso"], [165, 3, 1, "", "nearestneighbor_interpolate"], [165, 3, 1, "", "trilinear_interp"], [165, 3, 1, "", "trilinear_interpolate4d"]], "dipy.core.interpolation.Interpolator": [[165, 2, 1, "", "__init__"]], "dipy.core.interpolation.NearestNeighborInterpolator": [[165, 2, 1, "", "__init__"]], "dipy.core.interpolation.OutsideImage": [[165, 2, 1, "", "__init__"]], "dipy.core.interpolation.TriLinearInterpolator": [[165, 2, 1, "", "__init__"]], "dipy.core.ndindex": [[165, 3, 1, "", "ndindex"]], "dipy.core.onetime": [[165, 1, 1, "", "OneTimeProperty"], [165, 1, 1, "", "ResetMixin"], [165, 3, 1, "", "auto_attr"]], "dipy.core.onetime.OneTimeProperty": [[165, 2, 1, "", "__init__"]], "dipy.core.onetime.ResetMixin": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "reset"]], "dipy.core.optimize": [[165, 1, 1, "", "NonNegativeLeastSquares"], [165, 1, 1, "", "Optimizer"], [165, 1, 1, "", "PositiveDefiniteLeastSquares"], [165, 1, 1, "", "SKLearnLinearSolver"], [165, 3, 1, "", "sparse_nnls"], [165, 3, 1, "", "spdot"]], "dipy.core.optimize.NonNegativeLeastSquares": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "fit"]], "dipy.core.optimize.Optimizer": [[165, 2, 1, "", "__init__"], [165, 5, 1, "", "evolution"], [165, 5, 1, "", "fopt"], [165, 5, 1, "", "message"], [165, 5, 1, "", "nfev"], [165, 5, 1, "", "nit"], [165, 2, 1, "", "print_summary"], [165, 5, 1, "", "xopt"]], "dipy.core.optimize.PositiveDefiniteLeastSquares": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "solve"]], "dipy.core.optimize.SKLearnLinearSolver": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "fit"], [165, 2, 1, "", "predict"]], "dipy.core.profile": [[165, 1, 1, "", "Profiler"]], "dipy.core.profile.Profiler": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "print_stats"]], "dipy.core.rng": [[165, 3, 1, "", "LEcuyer"], [165, 3, 1, "", "WichmannHill1982"], [165, 3, 1, "", "WichmannHill2006"]], "dipy.core.sphere": [[165, 1, 1, "", "HemiSphere"], [165, 1, 1, "", "Sphere"], [165, 3, 1, "", "disperse_charges"], [165, 3, 1, "", "disperse_charges_alt"], [165, 3, 1, "", "euler_characteristic_check"], [165, 3, 1, "", "faces_from_sphere_vertices"], [165, 3, 1, "", "fibonacci_sphere"], [165, 3, 1, "", "hemi_icosahedron"], [165, 3, 1, "", "icosahedron_faces"], [165, 3, 1, "", "icosahedron_vertices"], [165, 3, 1, "", "octahedron_faces"], [165, 3, 1, "", "octahedron_vertices"], [165, 3, 1, "", "unique_edges"], [165, 3, 1, "", "unique_sets"], [165, 3, 1, "", "unit_icosahedron"], [165, 3, 1, "", "unit_octahedron"]], "dipy.core.sphere.HemiSphere": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "faces"], [165, 2, 1, "", "find_closest"], [165, 2, 1, "", "from_sphere"], [165, 2, 1, "", "mirror"], [165, 2, 1, "", "subdivide"]], "dipy.core.sphere.Sphere": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "edges"], [165, 2, 1, "", "faces"], [165, 2, 1, "", "find_closest"], [165, 2, 1, "", "subdivide"], [165, 2, 1, "", "vertices"], [165, 5, 1, "", "x"], [165, 5, 1, "", "y"], [165, 5, 1, "", "z"]], "dipy.core.sphere_stats": [[165, 3, 1, "", "angular_similarity"], [165, 3, 1, "", "compare_orientation_sets"], [165, 3, 1, "", "eigenstats"], [165, 3, 1, "", "random_uniform_on_sphere"]], "dipy.core.subdivide_octahedron": [[165, 3, 1, "", "create_unit_hemisphere"], [165, 3, 1, "", "create_unit_sphere"]], "dipy.core.wavelet": [[165, 3, 1, "", "afb3D"], [165, 3, 1, "", "afb3D_A"], [165, 3, 1, "", "cshift3D"], [165, 3, 1, "", "dwt3D"], [165, 3, 1, "", "idwt3D"], [165, 3, 1, "", "permutationinverse"], [165, 3, 1, "", "sfb3D"], [165, 3, 1, "", "sfb3D_A"]], "dipy.data": [[166, 3, 1, "", "DATA_DIR"], [166, 1, 1, "", "DataError"], [166, 3, 1, "", "default_sphere"], [166, 3, 1, "", "dsi_deconv_voxels"], [166, 3, 1, "", "dsi_voxels"], [166, 0, 0, "-", "fetcher"], [166, 3, 1, "", "get_3shell_gtab"], [166, 3, 1, "", "get_cmap"], [166, 3, 1, "", "get_gtab_taiwan_dsi"], [166, 3, 1, "", "get_isbi2013_2shell_gtab"], [166, 3, 1, "", "get_sim_voxels"], [166, 3, 1, "", "get_skeleton"], [166, 3, 1, "", "get_sphere"], [166, 3, 1, "", "load_sdp_constraints"], [166, 3, 1, "", "loads_compat"], [166, 3, 1, "", "matlab_life_results"], [166, 3, 1, "", "mrtrix_spherical_functions"], [166, 3, 1, "", "small_sphere"], [166, 3, 1, "", "two_cingulum_bundles"]], "dipy.data.DataError": [[166, 2, 1, "", "__init__"]], "dipy.data.fetcher": [[166, 3, 1, "", "check_md5"], [166, 3, 1, "", "copyfileobj_withprogress"], [166, 3, 1, "", "extract_example_tracts"], [166, 3, 1, "", "fetch_DiB_217_lte_pte_ste"], [166, 3, 1, "", "fetch_DiB_70_lte_pte_ste"], [166, 3, 1, "", "fetch_bundle_atlas_hcp842"], [166, 3, 1, "", "fetch_bundle_fa_hcp"], [166, 3, 1, "", "fetch_bundle_warp_dataset"], [166, 3, 1, "", "fetch_bundles_2_subjects"], [166, 3, 1, "", "fetch_cenir_multib"], [166, 3, 1, "", "fetch_cfin_multib"], [166, 3, 1, "", "fetch_cti_rat1"], [166, 3, 1, "", "fetch_data"], [166, 3, 1, "", "fetch_evac_test"], [166, 3, 1, "", "fetch_evac_weights"], [166, 3, 1, "", "fetch_file_formats"], [166, 3, 1, "", "fetch_fury_surface"], [166, 3, 1, "", "fetch_gold_standard_io"], [166, 3, 1, "", "fetch_hbn"], [166, 3, 1, "", "fetch_hcp"], [166, 3, 1, "", "fetch_isbi2013_2shell"], [166, 3, 1, "", "fetch_ivim"], [166, 3, 1, "", "fetch_mni_template"], [166, 3, 1, "", "fetch_ptt_minimal_dataset"], [166, 3, 1, "", "fetch_qtdMRI_test_retest_2subjects"], [166, 3, 1, "", "fetch_qte_lte_pte"], [166, 3, 1, "", "fetch_resdnn_weights"], [166, 3, 1, "", "fetch_scil_b0"], [166, 3, 1, "", "fetch_sherbrooke_3shell"], [166, 3, 1, "", "fetch_stanford_hardi"], [166, 3, 1, "", "fetch_stanford_labels"], [166, 3, 1, "", "fetch_stanford_pve_maps"], [166, 3, 1, "", "fetch_stanford_t1"], [166, 3, 1, "", "fetch_stanford_tracks"], [166, 3, 1, "", "fetch_syn_data"], [166, 3, 1, "", "fetch_synb0_test"], [166, 3, 1, "", "fetch_synb0_weights"], [166, 3, 1, "", "fetch_taiwan_ntu_dsi"], [166, 3, 1, "", "fetch_target_tractogram_hcp"], [166, 3, 1, "", "fetch_tissue_data"], [166, 3, 1, "", "get_bundle_atlas_hcp842"], [166, 3, 1, "", "get_file_formats"], [166, 3, 1, "", "get_fnames"], [166, 3, 1, "", "get_target_tractogram_hcp"], [166, 3, 1, "", "get_two_hcp842_bundles"], [166, 3, 1, "", "read_DiB_217_lte_pte_ste"], [166, 3, 1, "", "read_DiB_70_lte_pte_ste"], [166, 3, 1, "", "read_bundles_2_subjects"], [166, 3, 1, "", "read_cenir_multib"], [166, 3, 1, "", "read_cfin_dwi"], [166, 3, 1, "", "read_cfin_t1"], [166, 3, 1, "", "read_five_af_bundles"], [166, 3, 1, "", "read_isbi2013_2shell"], [166, 3, 1, "", "read_ivim"], [166, 3, 1, "", "read_mni_template"], [166, 3, 1, "", "read_qtdMRI_test_retest_2subjects"], [166, 3, 1, "", "read_qte_lte_pte"], [166, 3, 1, "", "read_scil_b0"], [166, 3, 1, "", "read_sherbrooke_3shell"], [166, 3, 1, "", "read_siemens_scil_b0"], [166, 3, 1, "", "read_stanford_hardi"], [166, 3, 1, "", "read_stanford_labels"], [166, 3, 1, "", "read_stanford_pve_maps"], [166, 3, 1, "", "read_stanford_t1"], [166, 3, 1, "", "read_syn_data"], [166, 3, 1, "", "read_taiwan_ntu_dsi"], [166, 3, 1, "", "read_tissue_data"], [166, 3, 1, "", "to_bids_description"]], "dipy.denoise": [[167, 0, 0, "-", "adaptive_soft_matching"], [167, 0, 0, "-", "denspeed"], [167, 0, 0, "-", "enhancement_kernel"], [167, 0, 0, "-", "gibbs"], [167, 0, 0, "-", "localpca"], [167, 0, 0, "-", "nlmeans"], [167, 0, 0, "-", "nlmeans_block"], [167, 0, 0, "-", "noise_estimate"], [167, 0, 0, "-", "non_local_means"], [167, 0, 0, "-", "patch2self"], [167, 0, 0, "-", "pca_noise_estimate"], [167, 0, 0, "-", "shift_twist_convolution"]], "dipy.denoise.adaptive_soft_matching": [[167, 3, 1, "", "adaptive_soft_matching"]], "dipy.denoise.denspeed": [[167, 3, 1, "", "add_padding_reflection"], [167, 3, 1, "", "correspond_indices"], [167, 3, 1, "", "determine_num_threads"], [167, 3, 1, "", "nlmeans_3d"], [167, 3, 1, "", "remove_padding"]], "dipy.denoise.enhancement_kernel": [[167, 1, 1, "", "EnhancementKernel"], [167, 1, 1, "", "HemiSphere"], [167, 1, 1, "", "Sphere"], [167, 3, 1, "", "ceil"], [167, 3, 1, "", "disperse_charges"], [167, 3, 1, "", "get_sphere"], [167, 3, 1, "", "gettempdir"]], "dipy.denoise.enhancement_kernel.EnhancementKernel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "evaluate_kernel"], [167, 2, 1, "", "get_lookup_table"], [167, 2, 1, "", "get_orientations"], [167, 2, 1, "", "get_sphere"]], "dipy.denoise.enhancement_kernel.HemiSphere": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "faces"], [167, 2, 1, "", "find_closest"], [167, 2, 1, "", "from_sphere"], [167, 2, 1, "", "mirror"], [167, 2, 1, "", "subdivide"]], "dipy.denoise.enhancement_kernel.Sphere": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "edges"], [167, 2, 1, "", "faces"], [167, 2, 1, "", "find_closest"], [167, 2, 1, "", "subdivide"], [167, 2, 1, "", "vertices"], [167, 5, 1, "", "x"], [167, 5, 1, "", "y"], [167, 5, 1, "", "z"]], "dipy.denoise.gibbs": [[167, 3, 1, "", "gibbs_removal"]], "dipy.denoise.localpca": [[167, 3, 1, "", "compute_num_samples"], [167, 3, 1, "", "compute_patch_size"], [167, 3, 1, "", "compute_suggested_patch_radius"], [167, 3, 1, "", "create_patch_radius_arr"], [167, 3, 1, "", "dimensionality_problem_message"], [167, 3, 1, "", "genpca"], [167, 3, 1, "", "localpca"], [167, 3, 1, "", "mppca"]], "dipy.denoise.nlmeans": [[167, 3, 1, "", "nlmeans"]], "dipy.denoise.nlmeans_block": [[167, 3, 1, "", "firdn"], [167, 3, 1, "", "nlmeans_block"], [167, 3, 1, "", "upfir"]], "dipy.denoise.noise_estimate": [[167, 3, 1, "", "estimate_sigma"], [167, 3, 1, "", "piesno"]], "dipy.denoise.non_local_means": [[167, 3, 1, "", "non_local_means"]], "dipy.denoise.patch2self": [[167, 3, 1, "", "patch2self"]], "dipy.denoise.pca_noise_estimate": [[167, 3, 1, "", "pca_noise_estimate"], [167, 3, 1, "", "warn"]], "dipy.denoise.shift_twist_convolution": [[167, 3, 1, "", "convolve"], [167, 3, 1, "", "convolve_sf"], [167, 3, 1, "", "determine_num_threads"], [167, 3, 1, "", "sf_to_sh"], [167, 3, 1, "", "sh_to_sf"]], "dipy.direction": [[168, 0, 0, "-", "bootstrap_direction_getter"], [168, 0, 0, "-", "closest_peak_direction_getter"], [168, 0, 0, "-", "peaks"], [168, 0, 0, "-", "pmf"], [168, 0, 0, "-", "probabilistic_direction_getter"], [168, 0, 0, "-", "ptt_direction_getter"]], "dipy.direction.bootstrap_direction_getter": [[168, 1, 1, "", "BootDirectionGetter"], [168, 3, 1, "", "peak_directions"]], "dipy.direction.bootstrap_direction_getter.BootDirectionGetter": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "from_data"], [168, 2, 1, "", "get_pmf"], [168, 2, 1, "", "get_pmf_no_boot"], [168, 2, 1, "", "initial_direction"]], "dipy.direction.closest_peak_direction_getter": [[168, 1, 1, "", "BaseDirectionGetter"], [168, 1, 1, "", "BasePmfDirectionGetter"], [168, 1, 1, "", "ClosestPeakDirectionGetter"], [168, 1, 1, "", "PmfGenDirectionGetter"], [168, 3, 1, "", "peak_directions"]], "dipy.direction.closest_peak_direction_getter.BaseDirectionGetter": [[168, 2, 1, "", "__init__"]], "dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "initial_direction"]], "dipy.direction.closest_peak_direction_getter.ClosestPeakDirectionGetter": [[168, 2, 1, "", "__init__"]], "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "from_pmf"], [168, 2, 1, "", "from_shcoeff"]], "dipy.direction.peaks": [[168, 1, 1, "", "PeaksAndMetrics"], [168, 3, 1, "", "peak_directions"], [168, 3, 1, "", "peak_directions_nl"], [168, 3, 1, "", "peaks_from_model"], [168, 3, 1, "", "reshape_peaks_for_visualization"]], "dipy.direction.peaks.PeaksAndMetrics": [[168, 2, 1, "", "__init__"]], "dipy.direction.pmf": [[168, 1, 1, "", "PmfGen"], [168, 1, 1, "", "SHCoeffPmfGen"], [168, 1, 1, "", "SimplePmfGen"]], "dipy.direction.pmf.PmfGen": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "get_pmf"], [168, 2, 1, "", "get_pmf_value"]], "dipy.direction.pmf.SHCoeffPmfGen": [[168, 2, 1, "", "__init__"]], "dipy.direction.pmf.SimplePmfGen": [[168, 2, 1, "", "__init__"]], "dipy.direction.probabilistic_direction_getter": [[168, 1, 1, "", "DeterministicMaximumDirectionGetter"], [168, 1, 1, "", "ProbabilisticDirectionGetter"], [168, 3, 1, "", "random"]], "dipy.direction.probabilistic_direction_getter.DeterministicMaximumDirectionGetter": [[168, 2, 1, "", "__init__"]], "dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter": [[168, 2, 1, "", "__init__"]], "dipy.direction.ptt_direction_getter": [[168, 1, 1, "", "PTTDirectionGetter"], [168, 3, 1, "", "min_radius_curvature_from_angle"]], "dipy.direction.ptt_direction_getter.PTTDirectionGetter": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "generate_streamline"]], "dipy.io": [[169, 0, 0, "-", "bvectxt"], [169, 0, 0, "-", "dpy"], [169, 0, 0, "-", "gradients"], [169, 0, 0, "-", "image"], [169, 0, 0, "-", "peaks"], [169, 0, 0, "-", "pickles"], [169, 0, 0, "-", "stateful_tractogram"], [169, 0, 0, "-", "streamline"], [169, 0, 0, "-", "utils"], [169, 0, 0, "-", "vtk"]], "dipy.io.bvectxt": [[169, 3, 1, "", "orientation_from_string"], [169, 3, 1, "", "orientation_to_string"], [169, 3, 1, "", "ornt_mapping"], [169, 3, 1, "", "read_bvec_file"], [169, 3, 1, "", "reorient_on_axis"], [169, 3, 1, "", "reorient_vectors"]], "dipy.io.dpy": [[169, 1, 1, "", "Dpy"]], "dipy.io.dpy.Dpy": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "close"], [169, 2, 1, "", "read_track"], [169, 2, 1, "", "read_tracks"], [169, 2, 1, "", "read_tracksi"], [169, 2, 1, "", "version"], [169, 2, 1, "", "write_track"], [169, 2, 1, "", "write_tracks"]], "dipy.io.gradients": [[169, 3, 1, "", "read_bvals_bvecs"]], "dipy.io.image": [[169, 3, 1, "", "load_nifti"], [169, 3, 1, "", "load_nifti_data"], [169, 3, 1, "", "save_nifti"], [169, 3, 1, "", "save_qa_metric"]], "dipy.io.peaks": [[169, 3, 1, "", "load_peaks"], [169, 3, 1, "", "peaks_to_niftis"], [169, 3, 1, "", "save_peaks"]], "dipy.io.pickles": [[169, 3, 1, "", "load_pickle"], [169, 3, 1, "", "save_pickle"]], "dipy.io.stateful_tractogram": [[169, 1, 1, "", "Origin"], [169, 1, 1, "", "Space"], [169, 1, 1, "", "StatefulTractogram"], [169, 3, 1, "", "logger"], [169, 3, 1, "", "set_sft_logger_level"]], "dipy.io.stateful_tractogram.Origin": [[169, 4, 1, "", "NIFTI"], [169, 4, 1, "", "TRACKVIS"], [169, 2, 1, "", "__init__"]], "dipy.io.stateful_tractogram.Space": [[169, 4, 1, "", "RASMM"], [169, 4, 1, "", "VOX"], [169, 4, 1, "", "VOXMM"], [169, 2, 1, "", "__init__"]], "dipy.io.stateful_tractogram.StatefulTractogram": [[169, 2, 1, "", "__init__"], [169, 5, 1, "", "affine"], [169, 2, 1, "", "are_compatible"], [169, 2, 1, "", "compute_bounding_box"], [169, 5, 1, "", "data_per_point"], [169, 5, 1, "", "data_per_streamline"], [169, 5, 1, "", "dimensions"], [169, 5, 1, "", "dtype_dict"], [169, 2, 1, "", "from_sft"], [169, 2, 1, "", "get_data_per_point_keys"], [169, 2, 1, "", "get_data_per_streamline_keys"], [169, 2, 1, "", "get_streamlines_copy"], [169, 2, 1, "", "is_bbox_in_vox_valid"], [169, 5, 1, "", "origin"], [169, 2, 1, "", "remove_invalid_streamlines"], [169, 5, 1, "", "space"], [169, 5, 1, "", "space_attributes"], [169, 5, 1, "", "streamlines"], [169, 2, 1, "", "to_center"], [169, 2, 1, "", "to_corner"], [169, 2, 1, "", "to_origin"], [169, 2, 1, "", "to_rasmm"], [169, 2, 1, "", "to_space"], [169, 2, 1, "", "to_vox"], [169, 2, 1, "", "to_voxmm"], [169, 5, 1, "", "voxel_order"], [169, 5, 1, "", "voxel_sizes"]], "dipy.io.streamline": [[169, 3, 1, "", "load_dpy"], [169, 3, 1, "", "load_fib"], [169, 3, 1, "", "load_generator"], [169, 3, 1, "", "load_tck"], [169, 3, 1, "", "load_tractogram"], [169, 3, 1, "", "load_trk"], [169, 3, 1, "", "load_trx"], [169, 3, 1, "", "load_vtk"], [169, 3, 1, "", "load_vtp"], [169, 3, 1, "", "save_dpy"], [169, 3, 1, "", "save_fib"], [169, 3, 1, "", "save_generator"], [169, 3, 1, "", "save_tck"], [169, 3, 1, "", "save_tractogram"], [169, 3, 1, "", "save_trk"], [169, 3, 1, "", "save_trx"], [169, 3, 1, "", "save_vtk"], [169, 3, 1, "", "save_vtp"]], "dipy.io.utils": [[169, 3, 1, "", "create_nifti_header"], [169, 3, 1, "", "create_tractogram_header"], [169, 3, 1, "", "decfa"], [169, 3, 1, "", "decfa_to_float"], [169, 3, 1, "", "get_reference_info"], [169, 3, 1, "", "is_header_compatible"], [169, 3, 1, "", "is_reference_info_valid"], [169, 3, 1, "", "make5d"], [169, 3, 1, "", "nifti1_symmat"], [169, 3, 1, "", "read_img_arr_or_path"], [169, 3, 1, "", "save_buan_profiles_hdf5"], [169, 3, 1, "", "split_name_with_gz"]], "dipy.io.vtk": [[169, 3, 1, "", "load_polydata"], [169, 3, 1, "", "load_vtk_streamlines"], [169, 3, 1, "", "save_polydata"], [169, 3, 1, "", "save_vtk_streamlines"]], "dipy.nn": [[170, 0, 0, "-", "cnn_1d_denoising"], [170, 0, 0, "-", "evac"], [170, 0, 0, "-", "histo_resdnn"], [170, 0, 0, "-", "model"], [170, 0, 0, "-", "synb0"], [170, 0, 0, "-", "utils"]], "dipy.nn.cnn_1d_denoising": [[170, 1, 1, "", "Cnn1DDenoiser"]], "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "compile"], [170, 2, 1, "", "evaluate"], [170, 2, 1, "", "fit"], [170, 2, 1, "", "load_weights"], [170, 2, 1, "", "predict"], [170, 2, 1, "", "save_weights"], [170, 2, 1, "", "summary"], [170, 2, 1, "", "train_test_split"]], "dipy.nn.evac": [[170, 1, 1, "", "Block"], [170, 1, 1, "", "ChannelSum"], [170, 1, 1, "", "EVACPlus"], [170, 3, 1, "", "init_model"], [170, 3, 1, "", "logger"], [170, 3, 1, "", "prepare_img"]], "dipy.nn.evac.Block": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "call"]], "dipy.nn.evac.ChannelSum": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "call"]], "dipy.nn.evac.EVACPlus": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fetch_default_weights"], [170, 2, 1, "", "load_model_weights"], [170, 2, 1, "", "predict"]], "dipy.nn.histo_resdnn": [[170, 1, 1, "", "HistoResDNN"], [170, 3, 1, "", "logger"]], "dipy.nn.histo_resdnn.HistoResDNN": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fetch_default_weights"], [170, 2, 1, "", "load_model_weights"], [170, 2, 1, "", "predict"]], "dipy.nn.model": [[170, 1, 1, "", "MultipleLayerPercepton"], [170, 1, 1, "", "SingleLayerPerceptron"]], "dipy.nn.model.MultipleLayerPercepton": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "evaluate"], [170, 2, 1, "", "fit"], [170, 2, 1, "", "predict"], [170, 2, 1, "", "summary"]], "dipy.nn.model.SingleLayerPerceptron": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "evaluate"], [170, 2, 1, "", "fit"], [170, 2, 1, "", "predict"], [170, 2, 1, "", "summary"]], "dipy.nn.synb0": [[170, 1, 1, "id57", "DecoderBlock"], [170, 1, 1, "id0", "EncoderBlock"], [170, 1, 1, "", "Synb0"], [170, 3, 1, "id74", "UNet3D"], [170, 3, 1, "", "logger"], [170, 3, 1, "", "normalize"], [170, 3, 1, "", "unnormalize"]], "dipy.nn.synb0.DecoderBlock": [[170, 2, 1, "id58", "__init__"], [170, 2, 1, "id59", "call"]], "dipy.nn.synb0.EncoderBlock": [[170, 2, 1, "id54", "__init__"], [170, 2, 1, "id55", "call"]], "dipy.nn.synb0.Synb0": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "fetch_default_weights"], [170, 2, 1, "", "load_model_weights"], [170, 2, 1, "", "predict"]], "dipy.nn.utils": [[170, 3, 1, "", "correct_minor_errors"], [170, 3, 1, "", "normalize"], [170, 3, 1, "", "recover_img"], [170, 3, 1, "", "set_logger_level"], [170, 3, 1, "", "transform_img"], [170, 3, 1, "", "unnormalize"]], "dipy.reconst": [[171, 0, 0, "-", "base"], [171, 0, 0, "-", "cache"], [171, 0, 0, "-", "cross_validation"], [171, 0, 0, "-", "csdeconv"], [171, 0, 0, "-", "cti"], [171, 0, 0, "-", "dki"], [171, 0, 0, "-", "dki_micro"], [171, 0, 0, "-", "dsi"], [171, 0, 0, "-", "dti"], [171, 0, 0, "-", "eudx_direction_getter"], [171, 0, 0, "-", "forecast"], [171, 0, 0, "-", "fwdti"], [171, 0, 0, "-", "gqi"], [171, 0, 0, "-", "ivim"], [171, 0, 0, "-", "mapmri"], [171, 0, 0, "-", "mcsd"], [171, 0, 0, "-", "msdki"], [171, 0, 0, "-", "multi_voxel"], [171, 0, 0, "-", "odf"], [171, 0, 0, "-", "qtdmri"], [171, 0, 0, "-", "qti"], [171, 0, 0, "-", "quick_squash"], [171, 0, 0, "-", "recspeed"], [171, 0, 0, "-", "rumba"], [171, 0, 0, "-", "sfm"], [171, 0, 0, "-", "shm"], [171, 0, 0, "-", "shore"], [171, 0, 0, "-", "utils"], [171, 0, 0, "-", "vec_val_sum"]], "dipy.reconst.base": [[171, 1, 1, "", "ReconstFit"], [171, 1, 1, "", "ReconstModel"]], "dipy.reconst.base.ReconstFit": [[171, 2, 1, "", "__init__"]], "dipy.reconst.base.ReconstModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fit"]], "dipy.reconst.cache": [[171, 1, 1, "", "Cache"]], "dipy.reconst.cache.Cache": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "cache_clear"], [171, 2, 1, "", "cache_get"], [171, 2, 1, "", "cache_set"]], "dipy.reconst.cross_validation": [[171, 3, 1, "", "coeff_of_determination"], [171, 3, 1, "", "kfold_xval"]], "dipy.reconst.csdeconv": [[171, 1, 1, "", "AxSymShResponse"], [171, 1, 1, "", "ConstrainedSDTModel"], [171, 1, 1, "", "ConstrainedSphericalDeconvModel"], [171, 3, 1, "", "auto_response"], [171, 3, 1, "", "auto_response_ssst"], [171, 3, 1, "", "csdeconv"], [171, 3, 1, "", "estimate_response"], [171, 3, 1, "", "fa_trace_to_lambdas"], [171, 3, 1, "", "forward_sdt_deconv_mat"], [171, 3, 1, "", "mask_for_response_ssst"], [171, 3, 1, "", "odf_deconv"], [171, 3, 1, "", "odf_sh_to_sharp"], [171, 3, 1, "", "recursive_response"], [171, 3, 1, "", "response_from_mask"], [171, 3, 1, "", "response_from_mask_ssst"]], "dipy.reconst.csdeconv.AxSymShResponse": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "basis"], [171, 2, 1, "", "on_sphere"]], "dipy.reconst.csdeconv.ConstrainedSDTModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fit"]], "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fit"], [171, 2, 1, "", "predict"]], "dipy.reconst.cti": [[171, 1, 1, "", "CorrelationTensorFit"], [171, 1, 1, "", "CorrelationTensorModel"], [171, 3, 1, "", "cti_prediction"], [171, 3, 1, "", "from_qte_to_cti"], [171, 3, 1, "", "ls_fit_cti"], [171, 3, 1, "", "multi_gaussian_k_from_c"], [171, 3, 1, "", "params_to_cti_params"], [171, 3, 1, "", "split_cti_params"]], "dipy.reconst.cti.CorrelationTensorFit": [[171, 5, 1, "", "K_aniso"], [171, 5, 1, "", "K_iso"], [171, 5, 1, "", "K_micro"], [171, 2, 1, "", "K_total"], [171, 2, 1, "", "__init__"], [171, 5, 1, "", "ct"], [171, 2, 1, "", "predict"]], "dipy.reconst.cti.CorrelationTensorModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fit"], [171, 2, 1, "", "predict"]], "dipy.reconst.dki": [[171, 1, 1, "", "DiffusionKurtosisFit"], [171, 1, 1, "", "DiffusionKurtosisModel"], [171, 3, 1, "", "Wcons"], [171, 3, 1, "", "Wrotate"], [171, 3, 1, "", "Wrotate_element"], [171, 3, 1, "", "apparent_kurtosis_coef"], [171, 3, 1, "", "axial_kurtosis"], [171, 3, 1, "", "carlson_rd"], [171, 3, 1, "", "carlson_rf"], [171, 3, 1, "", "cls_fit_dki"], [171, 3, 1, "", "directional_diffusion"], [171, 3, 1, "", "directional_diffusion_variance"], [171, 3, 1, "", "directional_kurtosis"], [171, 3, 1, "", "dki_prediction"], [171, 3, 1, "", "kurtosis_fractional_anisotropy"], [171, 3, 1, "", "kurtosis_maximum"], [171, 3, 1, "", "ls_fit_dki"], [171, 3, 1, "", "mean_kurtosis"], [171, 3, 1, "", "mean_kurtosis_tensor"], [171, 3, 1, "", "params_to_dki_params"], [171, 3, 1, "", "radial_kurtosis"], [171, 3, 1, "", "split_dki_param"]], "dipy.reconst.dki.DiffusionKurtosisFit": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "ak"], [171, 2, 1, "", "akc"], [171, 5, 1, "", "kfa"], [171, 2, 1, "", "kmax"], [171, 5, 1, "", "kt"], [171, 2, 1, "", "mk"], [171, 2, 1, "", "mkt"], [171, 2, 1, "", "predict"], [171, 2, 1, "", "rk"]], "dipy.reconst.dki.DiffusionKurtosisModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fit"], [171, 2, 1, "", "multi_fit"], [171, 2, 1, "", "predict"]], "dipy.reconst.dki_micro": [[171, 1, 1, "", "KurtosisMicrostructuralFit"], [171, 1, 1, "", "KurtosisMicrostructureModel"], [171, 3, 1, "", "axonal_water_fraction"], [171, 3, 1, "", "diffusion_components"], [171, 3, 1, "", "dkimicro_prediction"], [171, 3, 1, "", "tortuosity"]], "dipy.reconst.dki_micro.KurtosisMicrostructuralFit": [[171, 2, 1, "", "__init__"], [171, 5, 1, "", "awf"], [171, 5, 1, "", "axonal_diffusivity"], [171, 5, 1, "", "hindered_ad"], [171, 5, 1, "", "hindered_evals"], [171, 5, 1, "", "hindered_rd"], [171, 2, 1, "", "predict"], [171, 5, 1, "", "restricted_evals"], [171, 5, 1, "", "tortuosity"]], "dipy.reconst.dki_micro.KurtosisMicrostructureModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fit"], [171, 2, 1, "", "predict"]], "dipy.reconst.dsi": [[171, 1, 1, "", "DiffusionSpectrumDeconvFit"], [171, 1, 1, "", "DiffusionSpectrumDeconvModel"], [171, 1, 1, "", "DiffusionSpectrumFit"], [171, 1, 1, "", "DiffusionSpectrumModel"], [171, 3, 1, "", "LR_deconv"], [171, 3, 1, "", "create_qspace"], [171, 3, 1, "", "create_qtable"], [171, 3, 1, "", "gen_PSF"], [171, 3, 1, "", "half_to_full_qspace"], [171, 3, 1, "", "hanning_filter"], [171, 3, 1, "", "pdf_interp_coords"], [171, 3, 1, "", "pdf_odf"], [171, 3, 1, "", "project_hemisph_bvecs"], [171, 3, 1, "", "threshold_propagator"]], "dipy.reconst.dsi.DiffusionSpectrumDeconvFit": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "pdf"]], "dipy.reconst.dsi.DiffusionSpectrumDeconvModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fit"]], "dipy.reconst.dsi.DiffusionSpectrumFit": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "msd_discrete"], [171, 2, 1, "", "odf"], [171, 2, 1, "", "pdf"], [171, 2, 1, "", "rtop_pdf"], [171, 2, 1, "", "rtop_signal"]], "dipy.reconst.dsi.DiffusionSpectrumModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fit"]], "dipy.reconst.dti": [[171, 1, 1, "", "TensorFit"], [171, 1, 1, "", "TensorModel"], [171, 3, 1, "", "_lt_cols"], [171, 3, 1, "", "_lt_indices"], [171, 3, 1, "", "_lt_rows"], [171, 3, 1, "", "apparent_diffusion_coef"], [171, 3, 1, "", "axial_diffusivity"], [171, 3, 1, "", "color_fa"], [171, 3, 1, "", "decompose_tensor"], [171, 3, 1, "", "design_matrix"], [171, 3, 1, "", "determinant"], [171, 3, 1, "", "deviatoric"], [171, 3, 1, "", "eig_from_lo_tri"], [171, 3, 1, "", "fractional_anisotropy"], [171, 3, 1, "", "from_lower_triangular"], [171, 3, 1, "", "geodesic_anisotropy"], [171, 3, 1, "", "isotropic"], [171, 3, 1, "", "iter_fit_tensor"], [171, 3, 1, "", "linearity"], [171, 3, 1, "", "lower_triangular"], [171, 3, 1, "", "mean_diffusivity"], [171, 3, 1, "", "mode"], [171, 3, 1, "", "nlls_fit_tensor"], [171, 3, 1, "", "norm"], [171, 3, 1, "", "ols_fit_tensor"], [171, 3, 1, "", "planarity"], [171, 3, 1, "", "quantize_evecs"], [171, 3, 1, "", "radial_diffusivity"], [171, 3, 1, "", "restore_fit_tensor"], [171, 3, 1, "", "sphericity"], [171, 3, 1, "", "tensor_prediction"], [171, 3, 1, "", "trace"], [171, 3, 1, "", "wls_fit_tensor"]], "dipy.reconst.dti.TensorFit": [[171, 5, 1, "", "S0_hat"], [171, 2, 1, "", "__init__"], [171, 2, 1, "", "ad"], [171, 2, 1, "", "adc"], [171, 2, 1, "", "color_fa"], [171, 5, 1, "", "directions"], [171, 5, 1, "", "evals"], [171, 5, 1, "", "evecs"], [171, 2, 1, "", "fa"], [171, 2, 1, "", "ga"], [171, 2, 1, "", "linearity"], [171, 2, 1, "", "lower_triangular"], [171, 2, 1, "", "md"], [171, 2, 1, "", "mode"], [171, 2, 1, "", "odf"], [171, 2, 1, "", "planarity"], [171, 2, 1, "", "predict"], [171, 5, 1, "", "quadratic_form"], [171, 2, 1, "", "rd"], [171, 5, 1, "", "shape"], [171, 2, 1, "", "sphericity"], [171, 2, 1, "", "trace"]], "dipy.reconst.dti.TensorModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fit"], [171, 2, 1, "", "predict"]], "dipy.reconst.eudx_direction_getter": [[171, 1, 1, "", "EuDXDirectionGetter"]], "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter": [[171, 2, 1, "", "__init__"], [171, 4, 1, "", "ang_thr"], [171, 2, 1, "", "initial_direction"], [171, 4, 1, "", "qa_thr"], [171, 4, 1, "", "total_weight"]], "dipy.reconst.forecast": [[171, 1, 1, "", "ForecastFit"], [171, 1, 1, "", "ForecastModel"], [171, 3, 1, "", "find_signal_means"], [171, 3, 1, "", "forecast_error_func"], [171, 3, 1, "", "forecast_matrix"], [171, 3, 1, "", "lb_forecast"], [171, 3, 1, "", "psi_l"], [171, 3, 1, "", "rho_matrix"]], "dipy.reconst.forecast.ForecastFit": [[171, 2, 1, "", "__init__"], [171, 5, 1, "", "dpar"], [171, 5, 1, "", "dperp"], [171, 2, 1, "", "fractional_anisotropy"], [171, 2, 1, "", "mean_diffusivity"], [171, 2, 1, "", "odf"], [171, 2, 1, "", "predict"], [171, 5, 1, "", "sh_coeff"]], "dipy.reconst.forecast.ForecastModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fit"]], "dipy.reconst.fwdti": [[171, 1, 1, "", "FreeWaterTensorFit"], [171, 1, 1, "", "FreeWaterTensorModel"], [171, 3, 1, "", "cholesky_to_lower_triangular"], [171, 3, 1, "", "fwdti_prediction"], [171, 3, 1, "", "lower_triangular_to_cholesky"], [171, 3, 1, "", "nls_fit_tensor"], [171, 3, 1, "", "nls_iter"], [171, 3, 1, "", "wls_fit_tensor"], [171, 3, 1, "", "wls_iter"]], "dipy.reconst.fwdti.FreeWaterTensorFit": [[171, 2, 1, "", "__init__"], [171, 5, 1, "", "f"], [171, 2, 1, "", "predict"]], "dipy.reconst.fwdti.FreeWaterTensorModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fit"], [171, 2, 1, "", "predict"]], "dipy.reconst.gqi": [[171, 1, 1, "", "GeneralizedQSamplingFit"], [171, 1, 1, "", "GeneralizedQSamplingModel"], [171, 3, 1, "", "equatorial_maximum"], [171, 3, 1, "", "equatorial_zone_vertices"], [171, 3, 1, "", "normalize_qa"], [171, 3, 1, "", "npa"], [171, 3, 1, "", "odf_sum"], [171, 3, 1, "", "patch_maximum"], [171, 3, 1, "", "patch_sum"], [171, 3, 1, "", "patch_vertices"], [171, 3, 1, "", "polar_zone_vertices"], [171, 3, 1, "", "squared_radial_component"], [171, 3, 1, "", "triple_odf_maxima"], [171, 3, 1, "", "upper_hemi_map"]], "dipy.reconst.gqi.GeneralizedQSamplingFit": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "odf"]], "dipy.reconst.gqi.GeneralizedQSamplingModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fit"]], "dipy.reconst.ivim": [[171, 1, 1, "", "IvimFit"], [171, 1, 1, "", "IvimModelTRR"], [171, 1, 1, "", "IvimModelVP"], [171, 3, 1, "", "f_D_star_error"], [171, 3, 1, "", "f_D_star_prediction"], [171, 3, 1, "", "ivim_model_selector"], [171, 3, 1, "", "ivim_prediction"]], "dipy.reconst.ivim.IvimFit": [[171, 5, 1, "", "D"], [171, 5, 1, "", "D_star"], [171, 5, 1, "", "S0_predicted"], [171, 2, 1, "", "__init__"], [171, 5, 1, "", "perfusion_fraction"], [171, 2, 1, "", "predict"], [171, 5, 1, "", "shape"]], "dipy.reconst.ivim.IvimModelTRR": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "estimate_f_D_star"], [171, 2, 1, "", "estimate_linear_fit"], [171, 2, 1, "", "fit"], [171, 2, 1, "", "predict"]], "dipy.reconst.ivim.IvimModelVP": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "cvx_fit"], [171, 2, 1, "", "fit"], [171, 2, 1, "", "ivim_mix_cost_one"], [171, 2, 1, "", "nlls_cost"], [171, 2, 1, "", "phi"], [171, 2, 1, "", "stoc_search_cost"], [171, 2, 1, "", "x_and_f_to_x_f"], [171, 2, 1, "", "x_f_to_x_and_f"]], "dipy.reconst.mapmri": [[171, 1, 1, "", "MapmriFit"], [171, 1, 1, "", "MapmriModel"], [171, 3, 1, "", "b_mat"], [171, 3, 1, "", "b_mat_isotropic"], [171, 3, 1, "", "binomialfloat"], [171, 3, 1, "", "create_rspace"], [171, 3, 1, "", "delta"], [171, 3, 1, "", "gcv_cost_function"], [171, 3, 1, "", "generalized_crossvalidation"], [171, 3, 1, "", "generalized_crossvalidation_array"], [171, 3, 1, "", "isotropic_scale_factor"], [171, 3, 1, "", "map_laplace_s"], [171, 3, 1, "", "map_laplace_t"], [171, 3, 1, "", "map_laplace_u"], [171, 3, 1, "", "mapmri_STU_reg_matrices"], [171, 3, 1, "", "mapmri_index_matrix"], [171, 3, 1, "", "mapmri_isotropic_K_mu_dependent"], [171, 3, 1, "", "mapmri_isotropic_K_mu_independent"], [171, 3, 1, "", "mapmri_isotropic_M_mu_dependent"], [171, 3, 1, "", "mapmri_isotropic_M_mu_independent"], [171, 3, 1, "", "mapmri_isotropic_index_matrix"], [171, 3, 1, "", "mapmri_isotropic_laplacian_reg_matrix"], [171, 3, 1, "", "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix"], [171, 3, 1, "", "mapmri_isotropic_odf_matrix"], [171, 3, 1, "", "mapmri_isotropic_odf_sh_matrix"], [171, 3, 1, "", "mapmri_isotropic_phi_matrix"], [171, 3, 1, "", "mapmri_isotropic_psi_matrix"], [171, 3, 1, "", "mapmri_isotropic_radial_pdf_basis"], [171, 3, 1, "", "mapmri_isotropic_radial_signal_basis"], [171, 3, 1, "", "mapmri_laplacian_reg_matrix"], [171, 3, 1, "", "mapmri_odf_matrix"], [171, 3, 1, "", "mapmri_phi_1d"], [171, 3, 1, "", "mapmri_phi_matrix"], [171, 3, 1, "", "mapmri_psi_1d"], [171, 3, 1, "", "mapmri_psi_matrix"]], "dipy.reconst.mapmri.MapmriFit": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fitted_signal"], [171, 5, 1, "", "mapmri_R"], [171, 5, 1, "", "mapmri_coeff"], [171, 5, 1, "", "mapmri_mu"], [171, 2, 1, "", "msd"], [171, 2, 1, "", "ng"], [171, 2, 1, "", "ng_parallel"], [171, 2, 1, "", "ng_perpendicular"], [171, 2, 1, "", "norm_of_laplacian_signal"], [171, 2, 1, "", "odf"], [171, 2, 1, "", "odf_sh"], [171, 2, 1, "", "pdf"], [171, 2, 1, "", "predict"], [171, 2, 1, "", "qiv"], [171, 2, 1, "", "rtap"], [171, 2, 1, "", "rtop"], [171, 2, 1, "", "rtpp"]], "dipy.reconst.mapmri.MapmriModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fit"]], "dipy.reconst.mcsd": [[171, 1, 1, "", "MSDeconvFit"], [171, 1, 1, "", "MultiShellDeconvModel"], [171, 1, 1, "", "MultiShellResponse"], [171, 1, 1, "", "QpFitter"], [171, 3, 1, "", "auto_response_msmt"], [171, 3, 1, "", "mask_for_response_msmt"], [171, 3, 1, "", "multi_shell_fiber_response"], [171, 3, 1, "", "multi_tissue_basis"], [171, 3, 1, "", "response_from_mask_msmt"], [171, 3, 1, "", "solve_qp"]], "dipy.reconst.mcsd.MSDeconvFit": [[171, 2, 1, "", "__init__"], [171, 5, 1, "", "all_shm_coeff"], [171, 5, 1, "", "shm_coeff"], [171, 5, 1, "", "volume_fractions"]], "dipy.reconst.mcsd.MultiShellDeconvModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fit"], [171, 2, 1, "", "predict"]], "dipy.reconst.mcsd.MultiShellResponse": [[171, 2, 1, "", "__init__"], [171, 5, 1, "", "iso"]], "dipy.reconst.mcsd.QpFitter": [[171, 2, 1, "", "__init__"]], "dipy.reconst.msdki": [[171, 1, 1, "", "MeanDiffusionKurtosisFit"], [171, 1, 1, "", "MeanDiffusionKurtosisModel"], [171, 3, 1, "", "awf_from_msk"], [171, 3, 1, "", "design_matrix"], [171, 3, 1, "", "mean_signal_bvalue"], [171, 3, 1, "", "msdki_prediction"], [171, 3, 1, "", "msk_from_awf"], [171, 3, 1, "", "wls_fit_msdki"]], "dipy.reconst.msdki.MeanDiffusionKurtosisFit": [[171, 5, 1, "", "S0_hat"], [171, 2, 1, "", "__init__"], [171, 2, 1, "", "msd"], [171, 2, 1, "", "msk"], [171, 2, 1, "", "predict"], [171, 2, 1, "", "smt2di"], [171, 2, 1, "", "smt2f"], [171, 2, 1, "", "smt2uFA"]], "dipy.reconst.msdki.MeanDiffusionKurtosisModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fit"], [171, 2, 1, "", "predict"]], "dipy.reconst.multi_voxel": [[171, 1, 1, "", "CallableArray"], [171, 1, 1, "", "MultiVoxelFit"], [171, 3, 1, "", "multi_voxel_fit"]], "dipy.reconst.multi_voxel.CallableArray": [[171, 2, 1, "", "__init__"]], "dipy.reconst.multi_voxel.MultiVoxelFit": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "predict"], [171, 5, 1, "", "shape"]], "dipy.reconst.odf": [[171, 1, 1, "", "OdfFit"], [171, 1, 1, "", "OdfModel"], [171, 3, 1, "", "gfa"], [171, 3, 1, "", "minmax_normalize"]], "dipy.reconst.odf.OdfFit": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "odf"]], "dipy.reconst.odf.OdfModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fit"]], "dipy.reconst.qtdmri": [[171, 3, 1, "", "GCV_cost_function"], [171, 3, 1, "", "H"], [171, 1, 1, "", "QtdmriFit"], [171, 1, 1, "", "QtdmriModel"], [171, 3, 1, "", "angular_basis_EAP_opt"], [171, 3, 1, "", "angular_basis_opt"], [171, 3, 1, "", "create_rt_space_grid"], [171, 3, 1, "", "design_matrix_spatial"], [171, 3, 1, "", "elastic_crossvalidation"], [171, 3, 1, "", "generalized_crossvalidation"], [171, 3, 1, "", "l1_crossvalidation"], [171, 3, 1, "", "part1_reg_matrix_tau"], [171, 3, 1, "", "part23_iso_reg_matrix_q"], [171, 3, 1, "", "part23_reg_matrix_q"], [171, 3, 1, "", "part23_reg_matrix_tau"], [171, 3, 1, "", "part4_iso_reg_matrix_q"], [171, 3, 1, "", "part4_reg_matrix_q"], [171, 3, 1, "", "part4_reg_matrix_tau"], [171, 3, 1, "", "qtdmri_anisotropic_scaling"], [171, 3, 1, "", "qtdmri_eap_matrix"], [171, 3, 1, "", "qtdmri_eap_matrix_"], [171, 3, 1, "", "qtdmri_index_matrix"], [171, 3, 1, "", "qtdmri_isotropic_eap_matrix"], [171, 3, 1, "", "qtdmri_isotropic_eap_matrix_"], [171, 3, 1, "", "qtdmri_isotropic_index_matrix"], [171, 3, 1, "", "qtdmri_isotropic_laplacian_reg_matrix"], [171, 3, 1, "", "qtdmri_isotropic_scaling"], [171, 3, 1, "", "qtdmri_isotropic_signal_matrix"], [171, 3, 1, "", "qtdmri_isotropic_signal_matrix_"], [171, 3, 1, "", "qtdmri_isotropic_to_mapmri_matrix"], [171, 3, 1, "", "qtdmri_laplacian_reg_matrix"], [171, 3, 1, "", "qtdmri_mapmri_isotropic_normalization"], [171, 3, 1, "", "qtdmri_mapmri_normalization"], [171, 3, 1, "", "qtdmri_number_of_coefficients"], [171, 3, 1, "", "qtdmri_signal_matrix"], [171, 3, 1, "", "qtdmri_signal_matrix_"], [171, 3, 1, "", "qtdmri_temporal_normalization"], [171, 3, 1, "", "qtdmri_to_mapmri_matrix"], [171, 3, 1, "", "radial_basis_EAP_opt"], [171, 3, 1, "", "radial_basis_opt"], [171, 3, 1, "", "temporal_basis"], [171, 3, 1, "", "visualise_gradient_table_G_Delta_rainbow"]], "dipy.reconst.qtdmri.QtdmriFit": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fitted_signal"], [171, 2, 1, "", "msd"], [171, 2, 1, "", "norm_of_laplacian_signal"], [171, 2, 1, "", "odf"], [171, 2, 1, "", "odf_sh"], [171, 2, 1, "", "pdf"], [171, 2, 1, "", "predict"], [171, 2, 1, "", "qiv"], [171, 2, 1, "", "qtdmri_to_mapmri_coef"], [171, 2, 1, "", "rtap"], [171, 2, 1, "", "rtop"], [171, 2, 1, "", "rtpp"], [171, 2, 1, "", "sparsity_abs"], [171, 2, 1, "", "sparsity_density"]], "dipy.reconst.qtdmri.QtdmriModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fit"]], "dipy.reconst.qti": [[171, 1, 1, "", "QtiFit"], [171, 1, 1, "", "QtiModel"], [171, 3, 1, "", "cvxpy_1x21_to_6x6"], [171, 3, 1, "", "cvxpy_1x6_to_3x3"], [171, 3, 1, "", "design_matrix"], [171, 3, 1, "", "dtd_covariance"], [171, 3, 1, "", "from_21x1_to_6x6"], [171, 3, 1, "", "from_3x3_to_6x1"], [171, 3, 1, "", "from_6x1_to_3x3"], [171, 3, 1, "", "from_6x6_to_21x1"], [171, 3, 1, "", "qti_signal"]], "dipy.reconst.qti.QtiFit": [[171, 2, 1, "", "S0_hat"], [171, 2, 1, "", "__init__"], [171, 2, 1, "", "c_c"], [171, 2, 1, "", "c_m"], [171, 2, 1, "", "c_md"], [171, 2, 1, "", "c_mu"], [171, 2, 1, "", "d_sq"], [171, 2, 1, "", "fa"], [171, 2, 1, "", "k_bulk"], [171, 2, 1, "", "k_mu"], [171, 2, 1, "", "k_shear"], [171, 2, 1, "", "md"], [171, 2, 1, "", "mean_d_sq"], [171, 2, 1, "", "mk"], [171, 2, 1, "", "predict"], [171, 2, 1, "", "ufa"], [171, 2, 1, "", "v_iso"], [171, 2, 1, "", "v_md"], [171, 2, 1, "", "v_shear"]], "dipy.reconst.qti.QtiModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fit"], [171, 2, 1, "", "predict"]], "dipy.reconst.quick_squash": [[171, 3, 1, "", "quick_squash"], [171, 3, 1, "", "reduce"]], "dipy.reconst.recspeed": [[171, 3, 1, "", "adj_to_countarrs"], [171, 3, 1, "", "argmax_from_adj"], [171, 3, 1, "", "argmax_from_countarrs"], [171, 3, 1, "", "le_to_odf"], [171, 3, 1, "", "local_maxima"], [171, 3, 1, "", "proc_reco_args"], [171, 3, 1, "", "remove_similar_vertices"], [171, 3, 1, "", "search_descending"], [171, 3, 1, "", "sum_on_blocks_1d"]], "dipy.reconst.rumba": [[171, 1, 1, "", "RumbaFit"], [171, 1, 1, "", "RumbaSDModel"], [171, 3, 1, "", "generate_kernel"], [171, 3, 1, "", "logger"], [171, 3, 1, "", "mbessel_ratio"], [171, 3, 1, "", "rumba_deconv"], [171, 3, 1, "", "rumba_deconv_global"]], "dipy.reconst.rumba.RumbaFit": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "combined_odf_iso"], [171, 2, 1, "", "f_csf"], [171, 2, 1, "", "f_gm"], [171, 2, 1, "", "f_iso"], [171, 2, 1, "", "f_wm"], [171, 2, 1, "", "odf"], [171, 2, 1, "", "predict"]], "dipy.reconst.rumba.RumbaSDModel": [[171, 2, 1, "", "__init__"]], "dipy.reconst.sfm": [[171, 1, 1, "", "ExponentialIsotropicFit"], [171, 1, 1, "", "ExponentialIsotropicModel"], [171, 1, 1, "", "IsotropicFit"], [171, 1, 1, "", "IsotropicModel"], [171, 1, 1, "", "SparseFascicleFit"], [171, 1, 1, "", "SparseFascicleModel"], [171, 3, 1, "", "sfm_design_matrix"]], "dipy.reconst.sfm.ExponentialIsotropicFit": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "predict"]], "dipy.reconst.sfm.ExponentialIsotropicModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fit"]], "dipy.reconst.sfm.IsotropicFit": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "predict"]], "dipy.reconst.sfm.IsotropicModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fit"]], "dipy.reconst.sfm.SparseFascicleFit": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "odf"], [171, 2, 1, "", "predict"]], "dipy.reconst.sfm.SparseFascicleModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "design_matrix"], [171, 2, 1, "", "fit"]], "dipy.reconst.shm": [[171, 1, 1, "", "CsaOdfModel"], [171, 1, 1, "", "OpdtModel"], [171, 1, 1, "", "QballBaseModel"], [171, 1, 1, "", "QballModel"], [171, 1, 1, "", "ResidualBootstrapWrapper"], [171, 1, 1, "", "SphHarmFit"], [171, 1, 1, "", "SphHarmModel"], [171, 3, 1, "", "anisotropic_power"], [171, 3, 1, "", "bootstrap_data_array"], [171, 3, 1, "", "bootstrap_data_voxel"], [171, 3, 1, "", "calculate_max_order"], [171, 3, 1, "", "convert_sh_from_legacy"], [171, 3, 1, "", "convert_sh_to_full_basis"], [171, 3, 1, "", "convert_sh_to_legacy"], [171, 3, 1, "", "forward_sdeconv_mat"], [171, 3, 1, "", "gen_dirac"], [171, 3, 1, "", "hat"], [171, 3, 1, "", "lazy_index"], [171, 3, 1, "", "lcr_matrix"], [171, 3, 1, "", "normalize_data"], [171, 3, 1, "", "order_from_ncoef"], [171, 3, 1, "", "real_sh_descoteaux"], [171, 3, 1, "", "real_sh_descoteaux_from_index"], [171, 3, 1, "", "real_sh_tournier"], [171, 3, 1, "", "real_sh_tournier_from_index"], [171, 3, 1, "", "real_sph_harm"], [171, 3, 1, "", "real_sym_sh_basis"], [171, 3, 1, "", "real_sym_sh_mrtrix"], [171, 3, 1, "", "sf_to_sh"], [171, 3, 1, "", "sh_to_rh"], [171, 3, 1, "", "sh_to_sf"], [171, 3, 1, "", "sh_to_sf_matrix"], [171, 3, 1, "", "smooth_pinv"], [171, 3, 1, "", "sph_harm_ind_list"], [171, 3, 1, "", "spherical_harmonics"]], "dipy.reconst.shm.CsaOdfModel": [[171, 2, 1, "", "__init__"], [171, 4, 1, "", "max"], [171, 4, 1, "", "min"]], "dipy.reconst.shm.OpdtModel": [[171, 2, 1, "", "__init__"]], "dipy.reconst.shm.QballBaseModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fit"]], "dipy.reconst.shm.QballModel": [[171, 2, 1, "", "__init__"]], "dipy.reconst.shm.ResidualBootstrapWrapper": [[171, 2, 1, "", "__init__"]], "dipy.reconst.shm.SphHarmFit": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "gfa"], [171, 2, 1, "", "odf"], [171, 2, 1, "", "predict"], [171, 5, 1, "", "shape"], [171, 5, 1, "", "shm_coeff"]], "dipy.reconst.shm.SphHarmModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "sampling_matrix"]], "dipy.reconst.shore": [[171, 1, 1, "", "ShoreFit"], [171, 1, 1, "", "ShoreModel"], [171, 3, 1, "", "create_rspace"], [171, 3, 1, "", "l_shore"], [171, 3, 1, "", "n_shore"], [171, 3, 1, "", "shore_indices"], [171, 3, 1, "", "shore_matrix"], [171, 3, 1, "", "shore_matrix_odf"], [171, 3, 1, "", "shore_matrix_pdf"], [171, 3, 1, "", "shore_order"]], "dipy.reconst.shore.ShoreFit": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fitted_signal"], [171, 2, 1, "", "msd"], [171, 2, 1, "", "odf"], [171, 2, 1, "", "odf_sh"], [171, 2, 1, "", "pdf"], [171, 2, 1, "", "pdf_grid"], [171, 2, 1, "", "rtop_pdf"], [171, 2, 1, "", "rtop_signal"], [171, 5, 1, "", "shore_coeff"]], "dipy.reconst.shore.ShoreModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "fit"]], "dipy.reconst.utils": [[171, 3, 1, "", "cti_design_matrix"], [171, 3, 1, "", "dki_design_matrix"]], "dipy.reconst.vec_val_sum": [[171, 3, 1, "", "vec_val_vect"]], "dipy.segment": [[172, 0, 0, "-", "bundles"], [172, 0, 0, "-", "clustering"], [172, 0, 0, "-", "clustering_algorithms"], [172, 0, 0, "-", "clusteringspeed"], [172, 0, 0, "-", "cythonutils"], [172, 0, 0, "-", "featurespeed"], [172, 0, 0, "-", "fss"], [172, 0, 0, "-", "mask"], [172, 0, 0, "-", "metric"], [172, 0, 0, "-", "metricspeed"], [172, 0, 0, "-", "mrf"], [172, 0, 0, "-", "threshold"], [172, 0, 0, "-", "tissue"]], "dipy.segment.bundles": [[172, 1, 1, "", "RecoBundles"], [172, 3, 1, "", "ba_analysis"], [172, 3, 1, "", "bundle_adjacency"], [172, 3, 1, "", "bundle_shape_similarity"], [172, 3, 1, "", "check_range"], [172, 3, 1, "", "cluster_bundle"], [172, 3, 1, "", "logger"]], "dipy.segment.bundles.RecoBundles": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "evaluate_results"], [172, 2, 1, "", "recognize"], [172, 2, 1, "", "refine"]], "dipy.segment.clustering": [[172, 1, 1, "", "Cluster"], [172, 1, 1, "", "ClusterCentroid"], [172, 1, 1, "", "ClusterMap"], [172, 1, 1, "", "ClusterMapCentroid"], [172, 1, 1, "", "Clustering"], [172, 1, 1, "", "Identity"], [172, 1, 1, "", "QuickBundles"], [172, 1, 1, "", "QuickBundlesX"], [172, 1, 1, "", "TreeCluster"], [172, 1, 1, "", "TreeClusterMap"], [172, 3, 1, "", "logger"], [172, 3, 1, "", "qbx_and_merge"]], "dipy.segment.clustering.Cluster": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "assign"]], "dipy.segment.clustering.ClusterCentroid": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "assign"], [172, 2, 1, "", "update"]], "dipy.segment.clustering.ClusterMap": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "add_cluster"], [172, 2, 1, "", "clear"], [172, 5, 1, "", "clusters"], [172, 2, 1, "", "clusters_sizes"], [172, 2, 1, "", "get_large_clusters"], [172, 2, 1, "", "get_small_clusters"], [172, 5, 1, "", "refdata"], [172, 2, 1, "", "remove_cluster"], [172, 2, 1, "", "size"]], "dipy.segment.clustering.ClusterMapCentroid": [[172, 2, 1, "", "__init__"], [172, 5, 1, "", "centroids"]], "dipy.segment.clustering.Clustering": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "cluster"]], "dipy.segment.clustering.Identity": [[172, 2, 1, "", "__init__"]], "dipy.segment.clustering.QuickBundles": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "cluster"]], "dipy.segment.clustering.QuickBundlesX": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "cluster"]], "dipy.segment.clustering.TreeCluster": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "add"], [172, 5, 1, "", "is_leaf"], [172, 2, 1, "", "return_indices"]], "dipy.segment.clustering.TreeClusterMap": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "get_clusters"], [172, 2, 1, "", "iter_preorder"], [172, 5, 1, "", "refdata"], [172, 2, 1, "", "traverse_postorder"]], "dipy.segment.clustering_algorithms": [[172, 1, 1, "", "ClusterCentroid"], [172, 1, 1, "", "ClusterMapCentroid"], [172, 4, 1, "", "DTYPE"], [172, 3, 1, "", "clusters_centroid2clustermap_centroid"], [172, 3, 1, "", "peek"], [172, 3, 1, "", "quickbundles"], [172, 3, 1, "", "quickbundlesx"]], "dipy.segment.clustering_algorithms.ClusterCentroid": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "assign"], [172, 2, 1, "", "update"]], "dipy.segment.clustering_algorithms.ClusterMapCentroid": [[172, 2, 1, "", "__init__"], [172, 5, 1, "", "centroids"]], "dipy.segment.clusteringspeed": [[172, 1, 1, "", "ClusterCentroid"], [172, 1, 1, "", "ClusterMapCentroid"], [172, 1, 1, "", "Clusters"], [172, 1, 1, "", "ClustersCentroid"], [172, 4, 1, "", "DTYPE"], [172, 1, 1, "", "QuickBundles"], [172, 1, 1, "", "QuickBundlesX"], [172, 1, 1, "", "TreeCluster"], [172, 1, 1, "", "TreeClusterMap"], [172, 3, 1, "", "evaluate_aabb_checks"]], "dipy.segment.clusteringspeed.ClusterCentroid": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "assign"], [172, 2, 1, "", "update"]], "dipy.segment.clusteringspeed.ClusterMapCentroid": [[172, 2, 1, "", "__init__"], [172, 5, 1, "", "centroids"]], "dipy.segment.clusteringspeed.Clusters": [[172, 2, 1, "", "__init__"]], "dipy.segment.clusteringspeed.ClustersCentroid": [[172, 2, 1, "", "__init__"]], "dipy.segment.clusteringspeed.QuickBundles": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "get_cluster_map"], [172, 2, 1, "", "get_stats"]], "dipy.segment.clusteringspeed.QuickBundlesX": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "get_stats"], [172, 2, 1, "", "get_tree_cluster_map"], [172, 2, 1, "", "insert"]], "dipy.segment.clusteringspeed.TreeCluster": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "add"], [172, 5, 1, "", "is_leaf"], [172, 2, 1, "", "return_indices"]], "dipy.segment.clusteringspeed.TreeClusterMap": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "get_clusters"], [172, 2, 1, "", "iter_preorder"], [172, 5, 1, "", "refdata"], [172, 2, 1, "", "traverse_postorder"]], "dipy.segment.featurespeed": [[172, 1, 1, "", "ArcLengthFeature"], [172, 1, 1, "", "CenterOfMassFeature"], [172, 1, 1, "", "CythonFeature"], [172, 1, 1, "", "Feature"], [172, 1, 1, "", "IdentityFeature"], [172, 1, 1, "", "MidpointFeature"], [172, 1, 1, "", "ResampleFeature"], [172, 1, 1, "", "VectorOfEndpointsFeature"], [172, 3, 1, "", "extract"], [172, 3, 1, "", "infer_shape"]], "dipy.segment.featurespeed.ArcLengthFeature": [[172, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.CenterOfMassFeature": [[172, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.CythonFeature": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "extract"], [172, 2, 1, "", "infer_shape"]], "dipy.segment.featurespeed.Feature": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "extract"], [172, 2, 1, "", "infer_shape"], [172, 4, 1, "", "is_order_invariant"]], "dipy.segment.featurespeed.IdentityFeature": [[172, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.MidpointFeature": [[172, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.ResampleFeature": [[172, 2, 1, "", "__init__"]], "dipy.segment.featurespeed.VectorOfEndpointsFeature": [[172, 2, 1, "", "__init__"]], "dipy.segment.fss": [[172, 1, 1, "", "FastStreamlineSearch"], [172, 3, 1, "", "nearest_from_matrix_col"], [172, 3, 1, "", "nearest_from_matrix_row"]], "dipy.segment.fss.FastStreamlineSearch": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "radius_search"]], "dipy.segment.mask": [[172, 3, 1, "", "applymask"], [172, 3, 1, "", "bounding_box"], [172, 3, 1, "", "clean_cc_mask"], [172, 3, 1, "", "crop"], [172, 3, 1, "", "median_otsu"], [172, 3, 1, "", "multi_median"], [172, 3, 1, "", "segment_from_cfa"]], "dipy.segment.metric": [[172, 3, 1, "", "mdf"], [172, 3, 1, "", "mean_euclidean_distance"], [172, 3, 1, "", "mean_manhattan_distance"]], "dipy.segment.metricspeed": [[172, 1, 1, "", "AveragePointwiseEuclideanMetric"], [172, 1, 1, "", "CosineMetric"], [172, 1, 1, "", "CythonMetric"], [172, 1, 1, "", "Metric"], [172, 1, 1, "", "MinimumAverageDirectFlipMetric"], [172, 1, 1, "", "SumPointwiseEuclideanMetric"], [172, 3, 1, "", "dist"], [172, 3, 1, "", "distance_matrix"]], "dipy.segment.metricspeed.AveragePointwiseEuclideanMetric": [[172, 2, 1, "", "__init__"]], "dipy.segment.metricspeed.CosineMetric": [[172, 2, 1, "", "__init__"]], "dipy.segment.metricspeed.CythonMetric": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "are_compatible"], [172, 2, 1, "", "dist"]], "dipy.segment.metricspeed.Metric": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "are_compatible"], [172, 2, 1, "", "dist"], [172, 4, 1, "", "feature"], [172, 4, 1, "", "is_order_invariant"]], "dipy.segment.metricspeed.MinimumAverageDirectFlipMetric": [[172, 2, 1, "", "__init__"], [172, 4, 1, "", "is_order_invariant"]], "dipy.segment.metricspeed.SumPointwiseEuclideanMetric": [[172, 2, 1, "", "__init__"]], "dipy.segment.mrf": [[172, 1, 1, "", "ConstantObservationModel"], [172, 1, 1, "", "IteratedConditionalModes"]], "dipy.segment.mrf.ConstantObservationModel": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "initialize_param_uniform"], [172, 2, 1, "", "negloglikelihood"], [172, 2, 1, "", "prob_image"], [172, 2, 1, "", "seg_stats"], [172, 2, 1, "", "update_param"]], "dipy.segment.mrf.IteratedConditionalModes": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "icm_ising"], [172, 2, 1, "", "initialize_maximum_likelihood"], [172, 2, 1, "", "prob_neighborhood"]], "dipy.segment.threshold": [[172, 3, 1, "", "otsu"], [172, 3, 1, "", "upper_bound_by_percent"], [172, 3, 1, "", "upper_bound_by_rate"]], "dipy.segment.tissue": [[172, 1, 1, "", "TissueClassifierHMRF"]], "dipy.segment.tissue.TissueClassifierHMRF": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "classify"]], "dipy.sims": [[173, 0, 0, "-", "phantom"], [173, 0, 0, "-", "voxel"]], "dipy.sims.phantom": [[173, 3, 1, "", "add_noise"], [173, 3, 1, "", "diff2eigenvectors"], [173, 3, 1, "", "orbital_phantom"]], "dipy.sims.voxel": [[173, 3, 1, "", "add_noise"], [173, 3, 1, "", "all_tensor_evecs"], [173, 3, 1, "", "callaghan_perpendicular"], [173, 3, 1, "", "cylinders_and_ball_soderman"], [173, 3, 1, "", "diffusion_evals"], [173, 3, 1, "", "dki_signal"], [173, 3, 1, "", "gaussian_parallel"], [173, 3, 1, "", "kurtosis_element"], [173, 3, 1, "", "multi_tensor"], [173, 3, 1, "", "multi_tensor_dki"], [173, 3, 1, "", "multi_tensor_msd"], [173, 3, 1, "", "multi_tensor_odf"], [173, 3, 1, "", "multi_tensor_pdf"], [173, 3, 1, "", "multi_tensor_rtop"], [173, 3, 1, "", "single_tensor"], [173, 3, 1, "", "single_tensor_msd"], [173, 3, 1, "", "single_tensor_odf"], [173, 3, 1, "", "single_tensor_pdf"], [173, 3, 1, "", "single_tensor_rtop"], [173, 3, 1, "", "sticks_and_ball"]], "dipy.stats": [[174, 0, 0, "-", "analysis"]], "dipy.stats.analysis": [[174, 3, 1, "", "afq_profile"], [174, 3, 1, "", "anatomical_measures"], [174, 3, 1, "", "assignment_map"], [174, 3, 1, "", "gaussian_weights"], [174, 3, 1, "", "peak_values"]], "dipy.tracking": [[175, 0, 0, "-", "_utils"], [175, 0, 0, "-", "direction_getter"], [175, 0, 0, "-", "distances"], [175, 0, 0, "-", "fbcmeasures"], [175, 0, 0, "-", "learning"], [175, 0, 0, "-", "life"], [175, 0, 0, "-", "local_tracking"], [175, 0, 0, "-", "localtrack"], [175, 0, 0, "-", "mesh"], [175, 0, 0, "-", "metrics"], [175, 0, 0, "-", "propspeed"], [175, 0, 0, "-", "stopping_criterion"], [175, 0, 0, "-", "streamline"], [175, 0, 0, "-", "streamlinespeed"], [175, 0, 0, "-", "utils"], [175, 0, 0, "-", "vox2track"]], "dipy.tracking.direction_getter": [[175, 1, 1, "", "DirectionGetter"]], "dipy.tracking.direction_getter.DirectionGetter": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "generate_streamline"], [175, 2, 1, "", "get_direction"], [175, 2, 1, "", "initial_direction"]], "dipy.tracking.distances": [[175, 3, 1, "", "add_3vecs"], [175, 3, 1, "", "approx_polygon_track"], [175, 3, 1, "", "approximate_mdl_trajectory"], [175, 3, 1, "", "bundles_distances_mam"], [175, 3, 1, "", "bundles_distances_mdf"], [175, 3, 1, "", "cut_plane"], [175, 3, 1, "", "inner_3vecs"], [175, 3, 1, "", "intersect_segment_cylinder"], [175, 3, 1, "", "larch_3merge"], [175, 3, 1, "", "larch_3split"], [175, 3, 1, "", "lee_angle_distance"], [175, 3, 1, "", "lee_perpendicular_distance"], [175, 3, 1, "", "local_skeleton_clustering"], [175, 3, 1, "", "local_skeleton_clustering_3pts"], [175, 3, 1, "", "mam_distances"], [175, 3, 1, "", "minimum_closest_distance"], [175, 3, 1, "", "most_similar_track_mam"], [175, 3, 1, "", "mul_3vec"], [175, 3, 1, "", "mul_3vecs"], [175, 3, 1, "", "norm_3vec"], [175, 3, 1, "", "normalized_3vec"], [175, 3, 1, "", "point_segment_sq_distance"], [175, 3, 1, "", "point_track_sq_distance_check"], [175, 3, 1, "", "sub_3vecs"], [175, 3, 1, "", "track_dist_3pts"], [175, 3, 1, "", "track_roi_intersection_check"], [175, 3, 1, "", "warn"]], "dipy.tracking.fbcmeasures": [[175, 1, 1, "", "FBCMeasures"], [175, 1, 1, "", "KDTree"], [175, 3, 1, "", "compute_rfbc"], [175, 3, 1, "", "determine_num_threads"], [175, 1, 1, "", "interp1d"], [175, 3, 1, "", "min_moving_average"]], "dipy.tracking.fbcmeasures.FBCMeasures": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "get_points_rfbc_thresholded"]], "dipy.tracking.fbcmeasures.KDTree": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "count_neighbors"], [175, 1, 1, "", "innernode"], [175, 1, 1, "", "leafnode"], [175, 1, 1, "", "node"], [175, 2, 1, "", "query"], [175, 2, 1, "", "query_ball_point"], [175, 2, 1, "", "query_ball_tree"], [175, 2, 1, "", "query_pairs"], [175, 2, 1, "", "sparse_distance_matrix"], [175, 5, 1, "", "tree"]], "dipy.tracking.fbcmeasures.KDTree.innernode": [[175, 5, 1, "", "children"], [175, 5, 1, "", "split"], [175, 5, 1, "", "split_dim"]], "dipy.tracking.fbcmeasures.KDTree.leafnode": [[175, 5, 1, "", "children"], [175, 5, 1, "", "idx"]], "dipy.tracking.fbcmeasures.interp1d": [[175, 2, 1, "", "__init__"], [175, 4, 1, "", "dtype"], [175, 5, 1, "", "fill_value"]], "dipy.tracking.learning": [[175, 3, 1, "", "detect_corresponding_tracks"], [175, 3, 1, "", "detect_corresponding_tracks_plus"]], "dipy.tracking.life": [[175, 1, 1, "", "FiberFit"], [175, 1, 1, "", "FiberModel"], [175, 1, 1, "", "LifeSignalMaker"], [175, 3, 1, "", "grad_tensor"], [175, 3, 1, "", "gradient"], [175, 3, 1, "", "streamline_gradients"], [175, 3, 1, "", "streamline_signal"], [175, 3, 1, "", "streamline_tensors"], [175, 3, 1, "", "voxel2streamline"]], "dipy.tracking.life.FiberFit": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "predict"]], "dipy.tracking.life.FiberModel": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "fit"], [175, 2, 1, "", "setup"]], "dipy.tracking.life.LifeSignalMaker": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "calc_signal"], [175, 2, 1, "", "streamline_signal"]], "dipy.tracking.local_tracking": [[175, 1, 1, "", "LocalTracking"], [175, 1, 1, "", "ParticleFilteringTracking"]], "dipy.tracking.local_tracking.LocalTracking": [[175, 2, 1, "", "__init__"]], "dipy.tracking.local_tracking.ParticleFilteringTracking": [[175, 2, 1, "", "__init__"]], "dipy.tracking.localtrack": [[175, 3, 1, "", "local_tracker"], [175, 3, 1, "", "pft_tracker"], [175, 3, 1, "", "random"]], "dipy.tracking.mesh": [[175, 3, 1, "", "random_coordinates_from_surface"], [175, 3, 1, "", "seeds_from_surface_coordinates"], [175, 3, 1, "", "triangles_area"], [175, 3, 1, "", "vertices_to_triangles_values"]], "dipy.tracking.metrics": [[175, 3, 1, "", "arbitrarypoint"], [175, 3, 1, "", "bytes"], [175, 3, 1, "", "center_of_mass"], [175, 3, 1, "", "downsample"], [175, 3, 1, "", "endpoint"], [175, 3, 1, "", "frenet_serret"], [175, 3, 1, "", "generate_combinations"], [175, 3, 1, "", "inside_sphere"], [175, 3, 1, "", "inside_sphere_points"], [175, 3, 1, "", "intersect_sphere"], [175, 3, 1, "", "length"], [175, 3, 1, "", "longest_track_bundle"], [175, 3, 1, "", "magn"], [175, 3, 1, "", "mean_curvature"], [175, 3, 1, "", "mean_orientation"], [175, 3, 1, "", "midpoint"], [175, 3, 1, "", "midpoint2point"], [175, 3, 1, "", "principal_components"], [175, 3, 1, "", "spline"], [175, 3, 1, "", "startpoint"], [175, 3, 1, "", "winding"]], "dipy.tracking.propspeed": [[175, 3, 1, "", "eudx_both_directions"], [175, 3, 1, "", "ndarray_offset"]], "dipy.tracking.stopping_criterion": [[175, 1, 1, "", "ActStoppingCriterion"], [175, 1, 1, "", "AnatomicalStoppingCriterion"], [175, 1, 1, "", "BinaryStoppingCriterion"], [175, 1, 1, "", "CmcStoppingCriterion"], [175, 1, 1, "", "StoppingCriterion"], [175, 1, 1, "", "StreamlineStatus"], [175, 1, 1, "", "ThresholdStoppingCriterion"]], "dipy.tracking.stopping_criterion.ActStoppingCriterion": [[175, 2, 1, "", "__init__"]], "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "from_pve"], [175, 2, 1, "", "get_exclude"], [175, 2, 1, "", "get_include"]], "dipy.tracking.stopping_criterion.BinaryStoppingCriterion": [[175, 2, 1, "", "__init__"]], "dipy.tracking.stopping_criterion.CmcStoppingCriterion": [[175, 2, 1, "", "__init__"]], "dipy.tracking.stopping_criterion.StoppingCriterion": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "check_point"]], "dipy.tracking.stopping_criterion.StreamlineStatus": [[175, 4, 1, "", "ENDPOINT"], [175, 4, 1, "", "INVALIDPOINT"], [175, 4, 1, "", "OUTSIDEIMAGE"], [175, 4, 1, "", "PYERROR"], [175, 4, 1, "", "TRACKPOINT"], [175, 2, 1, "", "__init__"]], "dipy.tracking.stopping_criterion.ThresholdStoppingCriterion": [[175, 2, 1, "", "__init__"]], "dipy.tracking.streamline": [[175, 3, 1, "", "center_streamlines"], [175, 3, 1, "", "cluster_confidence"], [175, 3, 1, "", "deform_streamlines"], [175, 3, 1, "", "nbytes"], [175, 3, 1, "", "orient_by_rois"], [175, 3, 1, "", "orient_by_streamline"], [175, 3, 1, "", "relist_streamlines"], [175, 3, 1, "", "select_by_rois"], [175, 3, 1, "", "select_random_set_of_streamlines"], [175, 3, 1, "", "transform_streamlines"], [175, 3, 1, "", "unlist_streamlines"], [175, 3, 1, "", "values_from_volume"]], "dipy.tracking.streamlinespeed": [[175, 4, 1, "", "Streamlines"], [175, 3, 1, "", "compress_streamlines"], [175, 3, 1, "", "length"], [175, 3, 1, "", "set_number_of_points"]], "dipy.tracking.utils": [[175, 3, 1, "", "connectivity_matrix"], [175, 3, 1, "", "density_map"], [175, 3, 1, "", "length"], [175, 3, 1, "", "max_angle_from_curvature"], [175, 3, 1, "", "min_radius_curvature_from_angle"], [175, 3, 1, "", "ndbincount"], [175, 3, 1, "", "near_roi"], [175, 3, 1, "", "path_length"], [175, 3, 1, "", "random_seeds_from_mask"], [175, 3, 1, "", "reduce_labels"], [175, 3, 1, "", "reduce_rois"], [175, 3, 1, "", "seeds_from_mask"], [175, 3, 1, "", "streamline_near_roi"], [175, 3, 1, "", "subsegment"], [175, 3, 1, "", "target"], [175, 3, 1, "", "target_line_based"], [175, 3, 1, "", "transform_tracking_output"], [175, 3, 1, "", "unique_rows"]], "dipy.tracking.vox2track": [[175, 3, 1, "", "streamline_mapping"], [175, 3, 1, "", "track_counts"]], "dipy.viz": [[176, 0, 0, "-", "gmem"], [176, 0, 0, "-", "horizon"], [176, 0, 0, "-", "panel"], [176, 0, 0, "-", "plotting"], [176, 0, 0, "-", "projections"], [176, 0, 0, "-", "regtools"], [176, 0, 0, "-", "streamline"]], "dipy.viz.gmem": [[176, 1, 1, "", "GlobalHorizon"]], "dipy.viz.gmem.GlobalHorizon": [[176, 2, 1, "", "__init__"]], "dipy.viz.horizon": [[176, 0, 0, "-", "app"], [176, 0, 0, "-", "tab"], [176, 0, 0, "-", "util"], [176, 0, 0, "-", "visualizer"]], "dipy.viz.horizon.app": [[176, 1, 1, "", "Horizon"], [176, 3, 1, "", "horizon"]], "dipy.viz.horizon.app.Horizon": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "build_scene"], [176, 2, 1, "", "build_show"]], "dipy.viz.horizon.tab": [[176, 0, 0, "-", "base"], [176, 0, 0, "-", "cluster"], [176, 0, 0, "-", "peak"], [176, 0, 0, "-", "roi"], [176, 0, 0, "-", "slice"]], "dipy.viz.horizon.tab.base": [[176, 1, 1, "", "HorizonTab"], [176, 1, 1, "", "HorizonUIElement"], [176, 1, 1, "", "TabManager"], [176, 3, 1, "", "build_checkbox"], [176, 3, 1, "", "build_label"], [176, 3, 1, "", "build_slider"], [176, 3, 1, "", "build_switcher"], [176, 3, 1, "", "color_double_slider"], [176, 3, 1, "", "color_single_slider"]], "dipy.viz.horizon.tab.base.HorizonTab": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "build"], [176, 5, 1, "", "elements"], [176, 5, 1, "", "name"], [176, 2, 1, "", "register_elements"]], "dipy.viz.horizon.tab.base.HorizonUIElement": [[176, 2, 1, "", "__init__"], [176, 4, 1, "", "obj"], [176, 4, 1, "", "position"], [176, 4, 1, "", "selected_value"], [176, 4, 1, "", "visibility"]], "dipy.viz.horizon.tab.base.TabManager": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "reposition"], [176, 2, 1, "", "synchronize_slices"], [176, 5, 1, "", "tab_ui"]], "dipy.viz.horizon.tab.cluster": [[176, 1, 1, "", "ClustersTab"]], "dipy.viz.horizon.tab.cluster.ClustersTab": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "build"], [176, 5, 1, "", "name"]], "dipy.viz.horizon.tab.peak": [[176, 1, 1, "", "PeaksTab"]], "dipy.viz.horizon.tab.peak.PeaksTab": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "build"], [176, 5, 1, "", "name"]], "dipy.viz.horizon.tab.roi": [[176, 1, 1, "", "ROIsTab"]], "dipy.viz.horizon.tab.roi.ROIsTab": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "build"], [176, 5, 1, "", "name"]], "dipy.viz.horizon.tab.slice": [[176, 1, 1, "", "SlicesTab"]], "dipy.viz.horizon.tab.slice.SlicesTab": [[176, 2, 1, "", "__init__"], [176, 5, 1, "", "actors"], [176, 2, 1, "", "build"], [176, 5, 1, "", "name"], [176, 2, 1, "", "on_tab_selected"], [176, 5, 1, "", "tab_id"], [176, 2, 1, "", "update_slices"]], "dipy.viz.horizon.util": [[176, 3, 1, "", "check_img_shapes"]], "dipy.viz.horizon.visualizer": [[176, 0, 0, "-", "cluster"], [176, 0, 0, "-", "slice"]], "dipy.viz.horizon.visualizer.cluster": [[176, 1, 1, "", "ClustersVisualizer"]], "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "add_cluster_actors"], [176, 5, 1, "", "centroid_actors"], [176, 5, 1, "", "cluster_actors"], [176, 5, 1, "", "lengths"], [176, 2, 1, "", "recluster_tractograms"], [176, 5, 1, "", "sizes"], [176, 5, 1, "", "tractogram_clusters"]], "dipy.viz.horizon.visualizer.slice": [[176, 1, 1, "", "SlicesVisualizer"]], "dipy.viz.horizon.visualizer.slice.SlicesVisualizer": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "change_volume"], [176, 5, 1, "", "data_shape"], [176, 5, 1, "", "intensities_range"], [176, 2, 1, "", "register_picker_callback"], [176, 5, 1, "", "rgb"], [176, 5, 1, "", "selected_slices"], [176, 5, 1, "", "slice_actors"], [176, 5, 1, "", "volume_max"], [176, 5, 1, "", "volume_min"]], "dipy.viz.panel": [[176, 3, 1, "", "build_label"], [176, 3, 1, "", "slicer_panel"]], "dipy.viz.plotting": [[176, 3, 1, "", "bundle_shape_profile"], [176, 3, 1, "", "compare_maps"], [176, 3, 1, "", "compare_qti_maps"]], "dipy.viz.projections": [[176, 3, 1, "", "sph_project"]], "dipy.viz.regtools": [[176, 3, 1, "", "draw_lattice_2d"], [176, 3, 1, "", "overlay_images"], [176, 3, 1, "", "overlay_slices"], [176, 3, 1, "", "plot_2d_diffeomorphic_map"], [176, 3, 1, "", "plot_slices"], [176, 3, 1, "", "simple_plot"]], "dipy.viz.streamline": [[176, 3, 1, "", "show_bundles"], [176, 3, 1, "", "viz_displacement_mag"], [176, 3, 1, "", "viz_two_bundles"], [176, 3, 1, "", "viz_vector_field"]], "dipy.workflows": [[177, 0, 0, "-", "align"], [177, 0, 0, "-", "base"], [177, 0, 0, "-", "cli"], [177, 0, 0, "-", "combined_workflow"], [177, 0, 0, "-", "denoise"], [177, 0, 0, "-", "docstring_parser"], [177, 0, 0, "-", "flow_runner"], [177, 0, 0, "-", "io"], [177, 0, 0, "-", "mask"], [177, 0, 0, "-", "multi_io"], [177, 0, 0, "-", "nn"], [177, 0, 0, "-", "reconst"], [177, 0, 0, "-", "segment"], [177, 0, 0, "-", "stats"], [177, 0, 0, "-", "tracking"], [177, 0, 0, "-", "viz"], [177, 0, 0, "-", "workflow"]], "dipy.workflows.align": [[177, 1, 1, "", "ApplyTransformFlow"], [177, 1, 1, "", "BundleWarpFlow"], [177, 1, 1, "", "ImageRegistrationFlow"], [177, 1, 1, "", "MotionCorrectionFlow"], [177, 1, 1, "", "ResliceFlow"], [177, 1, 1, "", "SlrWithQbxFlow"], [177, 1, 1, "", "SynRegistrationFlow"], [177, 3, 1, "", "check_dimensions"]], "dipy.workflows.align.ApplyTransformFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "run"]], "dipy.workflows.align.BundleWarpFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.align.ImageRegistrationFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "run"]], "dipy.workflows.align.MotionCorrectionFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "run"]], "dipy.workflows.align.ResliceFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.align.SlrWithQbxFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.align.SynRegistrationFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "run"]], "dipy.workflows.base": [[177, 1, 1, "", "IntrospectiveArgumentParser"], [177, 3, 1, "", "get_args_default"], [177, 3, 1, "", "none_or_dtype"]], "dipy.workflows.base.IntrospectiveArgumentParser": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "add_description"], [177, 2, 1, "", "add_epilogue"], [177, 2, 1, "", "add_sub_flow_args"], [177, 2, 1, "", "add_workflow"], [177, 2, 1, "", "get_flow_args"], [177, 5, 1, "", "optional_parameters"], [177, 5, 1, "", "output_parameters"], [177, 5, 1, "", "positional_parameters"], [177, 2, 1, "", "show_argument"], [177, 2, 1, "", "update_argument"]], "dipy.workflows.cli": [[177, 3, 1, "", "run"]], "dipy.workflows.combined_workflow": [[177, 1, 1, "", "CombinedWorkflow"]], "dipy.workflows.combined_workflow.CombinedWorkflow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_optionals"], [177, 2, 1, "", "get_sub_runs"], [177, 2, 1, "", "run_sub_flow"], [177, 2, 1, "", "set_sub_flows_optionals"]], "dipy.workflows.denoise": [[177, 1, 1, "", "GibbsRingingFlow"], [177, 1, 1, "", "LPCAFlow"], [177, 1, 1, "", "MPPCAFlow"], [177, 1, 1, "", "NLMeansFlow"], [177, 1, 1, "", "Patch2SelfFlow"]], "dipy.workflows.denoise.GibbsRingingFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.denoise.LPCAFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.denoise.MPPCAFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.denoise.NLMeansFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.denoise.Patch2SelfFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.docstring_parser": [[177, 1, 1, "", "NumpyDocString"], [177, 1, 1, "", "Reader"], [177, 3, 1, "", "dedent_lines"]], "dipy.workflows.docstring_parser.NumpyDocString": [[177, 2, 1, "", "__init__"]], "dipy.workflows.docstring_parser.Reader": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "eof"], [177, 2, 1, "", "is_empty"], [177, 2, 1, "", "peek"], [177, 2, 1, "", "read"], [177, 2, 1, "", "read_to_condition"], [177, 2, 1, "", "read_to_next_empty_line"], [177, 2, 1, "", "read_to_next_unindented_line"], [177, 2, 1, "", "reset"], [177, 2, 1, "", "seek_next_non_empty_line"]], "dipy.workflows.flow_runner": [[177, 3, 1, "", "get_level"], [177, 3, 1, "", "run_flow"]], "dipy.workflows.io": [[177, 1, 1, "", "FetchFlow"], [177, 1, 1, "", "IoInfoFlow"], [177, 1, 1, "", "SplitFlow"]], "dipy.workflows.io.FetchFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_fetcher_datanames"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "load_module"], [177, 2, 1, "", "run"]], "dipy.workflows.io.IoInfoFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.io.SplitFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.mask": [[177, 1, 1, "", "MaskFlow"]], "dipy.workflows.mask.MaskFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.multi_io": [[177, 1, 1, "", "IOIterator"], [177, 3, 1, "", "basename_without_extension"], [177, 3, 1, "", "common_start"], [177, 3, 1, "", "concatenate_inputs"], [177, 3, 1, "", "connect_output_paths"], [177, 3, 1, "", "io_iterator"], [177, 3, 1, "", "io_iterator_"], [177, 3, 1, "", "slash_to_under"]], "dipy.workflows.multi_io.IOIterator": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "create_directories"], [177, 2, 1, "", "create_outputs"], [177, 2, 1, "", "file_existence_check"], [177, 2, 1, "", "set_inputs"], [177, 2, 1, "", "set_out_dir"], [177, 2, 1, "", "set_out_fnames"], [177, 2, 1, "", "set_output_keys"]], "dipy.workflows.nn": [[177, 1, 1, "", "EVACPlusFlow"]], "dipy.workflows.nn.EVACPlusFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.reconst": [[177, 1, 1, "", "ReconstCSAFlow"], [177, 1, 1, "", "ReconstCSDFlow"], [177, 1, 1, "", "ReconstDkiFlow"], [177, 1, 1, "", "ReconstDtiFlow"], [177, 1, 1, "", "ReconstIvimFlow"], [177, 1, 1, "", "ReconstMAPMRIFlow"], [177, 1, 1, "", "ReconstRUMBAFlow"]], "dipy.workflows.reconst.ReconstCSAFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstCSDFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstDkiFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_fitted_tensor"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstDtiFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_fitted_tensor"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstIvimFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_fitted_ivim"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstMAPMRIFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.reconst.ReconstRUMBAFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.segment": [[177, 1, 1, "", "LabelsBundlesFlow"], [177, 1, 1, "", "MedianOtsuFlow"], [177, 1, 1, "", "RecoBundlesFlow"]], "dipy.workflows.segment.LabelsBundlesFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.segment.MedianOtsuFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.segment.RecoBundlesFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.stats": [[177, 1, 1, "", "BundleAnalysisTractometryFlow"], [177, 1, 1, "", "BundleShapeAnalysis"], [177, 1, 1, "", "LinearMixedModelsFlow"], [177, 1, 1, "", "SNRinCCFlow"], [177, 3, 1, "", "buan_bundle_profiles"]], "dipy.workflows.stats.BundleAnalysisTractometryFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.stats.BundleShapeAnalysis": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.stats.LinearMixedModelsFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_metric_name"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"], [177, 2, 1, "", "save_lmm_plot"]], "dipy.workflows.stats.SNRinCCFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.tracking": [[177, 1, 1, "", "LocalFiberTrackingPAMFlow"], [177, 1, 1, "", "PFTrackingPAMFlow"]], "dipy.workflows.tracking.LocalFiberTrackingPAMFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.tracking.PFTrackingPAMFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.viz": [[177, 1, 1, "", "HorizonFlow"]], "dipy.workflows.viz.HorizonFlow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "run"]], "dipy.workflows.workflow": [[177, 1, 1, "", "Workflow"]], "dipy.workflows.workflow.Workflow": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "get_io_iterator"], [177, 2, 1, "", "get_short_name"], [177, 2, 1, "", "get_sub_runs"], [177, 2, 1, "", "manage_output_overwrite"], [177, 2, 1, "", "run"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"api": [0, 178], "chang": [0, 6, 15], "dipi": [0, 2, 3, 9, 14, 18, 21, 22, 44, 64, 150, 153, 161, 162, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 243, 244, 247, 249], "1": [0, 4, 32, 34, 66, 71, 89, 160, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "8": [0, 160, 222, 233], "0": [0, 4, 160, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224], "7": [0, 4, 160, 221, 232], "6": [0, 160, 220, 231], "5": [0, 4, 160, 230], "4": [0, 4, 228, 229], "3": [0, 4, 34, 66, 160, 227], "2": [0, 4, 32, 34, 66, 71, 89, 160, 226], "16": [0, 4, 160, 219], "15": [0, 218], "14": [0, 217], "13": [0, 160, 216], "12": [0, 215], "10": [0, 213], "9": [0, 223], "between": [0, 58, 85, 111, 154], "public": 1, "A": [1, 15, 21, 235], "note": [1, 40, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 248], "cite": 1, "our": 1, "work": [1, 14, 98], "benchmark": [2, 22], "prerequisit": 2, "get": [2, 8, 19, 34, 64, 66, 243, 246], "start": [2, 44, 63, 64, 246], "run": [2, 177], "compar": 2, "result": [2, 147], "version": [2, 4, 22, 160, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 245, 248], "contribut": 2, "write": [2, 43], "embrac": 2, "speed": 2, "code": [3, 4, 8, 14], "style": 3, "guidelin": 3, "import": [3, 175], "cython": 3, "variabl": 3, "declar": 3, "us": [3, 40, 46, 47, 50, 52, 53, 54, 59, 67, 80, 85, 86, 91, 94, 151, 170, 248], "c": 3, "librari": 3, "error": 3, "return": [3, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "valu": [3, 135, 137], "pointer": 3, "refer": [3, 22, 24, 25, 29, 31, 32, 34, 35, 37, 38, 39, 40, 50, 51, 52, 53, 54, 55, 56, 58, 59, 62, 66, 67, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 104, 105, 106, 108, 109, 111, 112, 113, 114, 116, 119, 121, 123, 124, 125, 126, 128, 134, 146, 148, 149, 151, 152, 154, 155, 156, 157, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 241], "cast": 3, "loop": 3, "document": [3, 19, 22, 145], "commit": [4, 6, 15], "messag": 4, "configur": [5, 9], "git": [4, 5, 10, 11, 13], "overview": [5, 6, 11, 16, 17, 43, 151, 157, 235], "In": [5, 6, 11, 16, 17, 145], "detail": [5, 6, 11, 16, 17], "user": [5, 247], "name": 5, "email": 5, "alias": 5, "editor": 5, "merg": [5, 6], "fanci": 5, "log": 5, "output": [5, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "develop": [6, 10, 16, 18, 23], "workflow": [6, 13, 15, 44, 138, 139, 141, 153, 177], "summari": [6, 13], "consid": 6, "delet": 6, "your": [6, 9, 17, 135, 137], "master": 6, "branch": 6, "updat": [6, 8], "mirror": 6, "trunk": [6, 15], "make": [6, 9, 16, 21], "new": [6, 138, 141], "featur": [6, 111, 113, 172, 235], "The": [6, 237, 238, 242], "edit": 6, "more": 6, "ask": [6, 142], "review": 6, "some": 6, "other": [6, 21, 165], "thing": 6, "you": 6, "might": 6, "want": 6, "do": [6, 21], "github": [6, 9], "sever": 6, "peopl": 6, "share": 6, "singl": 6, "repositori": [6, 17], "explor": 6, "rebas": 6, "recov": 6, "from": [6, 16, 19, 34, 66, 123, 135, 137], "mess": 6, "up": [6, 9, 17], "rewrit": 6, "histori": [6, 15], "two": 7, "three": 7, "dot": 7, "differ": [7, 113, 135], "spec": 7, "follow": 8, "latest": 8, "sourc": [8, 14, 19], "local": [8, 52, 54, 67, 151, 157, 167], "copi": [8, 9], "own": 9, "fork": [9, 17], "set": [9, 17, 34, 66], "account": 9, "creat": [9, 137, 138, 141], "instal": [11, 19, 88, 248], "introduct": [12, 20, 33, 34, 36, 66, 146], "resourc": 13, "tutori": 13, "advanc": [13, 134], "manual": 13, "page": 13, "onlin": 13, "maintain": 15, "integr": 15, "few": 15, "long": 15, "seri": 15, "check": 15, "push": 15, "patch": 16, "move": 16, "clone": 17, "link": [17, 145], "upstream": 17, "repo": 17, "guid": [18, 21, 247], "releas": [21, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 248], "checklist": 21, "upload": 21, "binari": [21, 40, 102], "build": [19, 21, 22], "stuff": [21, 237], "need": 21, "cross": [24, 69, 79], "preserv": 24, "contextu": [24, 26, 44], "enhanc": [24, 26, 44, 113], "fiber": [25, 28, 44, 71, 79, 89, 108, 157], "bundl": [25, 98, 99, 100, 108, 123, 124, 125, 135, 147, 148, 149, 172], "coher": 25, "measur": 25, "acknowledg": 25, "comput": [27, 30, 42, 48, 61, 65, 95, 103, 115, 117, 120, 129, 133, 140, 234], "time": [27, 30, 42, 48, 61, 65, 86, 95, 103, 115, 117, 120, 129, 133, 140, 234], "track": [28, 34, 38, 39, 44, 66, 157, 175, 177], "linear": [29, 148, 171], "fascicl": [29, 39, 90], "evalu": 29, "life": [29, 175], "surfac": [31, 136], "seed": [31, 34, 66], "tractographi": [31, 35, 37, 40, 111, 112, 114], "displai": 31, "gener": [31, 81], "list": [31, 243], "posit": [31, 88, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "bootstrap": 32, "closest": [32, 157], "peak": [32, 157, 168, 169, 176], "direct": [32, 33, 34, 36, 66, 99, 168], "getter": [32, 33, 36], "exampl": [32, 44, 87, 88, 98, 163, 165, 166, 167, 169, 171, 173, 175, 176], "csd": [32, 47, 84, 155], "model": [32, 38, 39, 69, 72, 73, 74, 78, 79, 80, 83, 89, 90, 92, 170], "an": [33, 36, 135], "determinist": [33, 157], "maximum": 33, "basic": [34, 66], "step": [34, 66, 71, 89, 246], "diffus": [34, 60, 62, 66, 72, 73, 74, 75, 78, 83, 85, 86, 92, 145, 151, 155, 162, 170], "dataset": [34, 58, 60, 66, 147, 150, 243, 244], "identifi": [34, 66], "when": [34, 66], "must": [34, 66], "stop": [34, 35, 40, 66], "defin": [34, 66], "which": [34, 66], "begin": [34, 66], "particl": [35, 157], "filter": [35, 157], "cmc": 35, "act": [35, 40], "criterion": [35, 40], "probabilist": [36, 157], "parallel": [37, 46, 47], "transport": 37, "robust": [38, 89, 94], "unbias": [38, 89], "base": [38, 76, 89, 104, 148, 156, 167, 171, 176, 177, 241], "spheric": [38, 71, 89, 91, 155, 171, 241, 242], "deconvolut": [38, 71, 77, 89, 119, 155], "rumba": [38, 171], "sd": [4, 38, 160], "spars": [39, 90], "variou": 40, "threshold": [40, 52, 172], "file": [41, 43, 44], "format": [41, 44], "read": 43, "streamlin": [43, 44, 104, 109, 127, 130, 135, 136, 148, 156, 169, 175, 176], "content": 44, "quick": [44, 63, 145, 235], "preprocess": [44, 57], "reconstruct": [44, 46, 47, 67, 68, 70, 71, 72, 73, 74, 75, 78, 81, 84, 85, 87, 89, 90, 91, 155, 161], "method": [44, 151, 157, 161, 163, 175], "avail": [44, 111, 112, 161, 243, 244], "analysi": [44, 127, 174], "connect": [44, 127, 131], "registr": [44, 96, 97, 98, 99, 100, 101, 102, 105, 106, 148, 149, 156], "segment": [44, 49, 107, 110, 123, 148, 172, 177], "simul": [44, 118, 121, 122], "multiprocess": [44, 45], "visual": [44, 132, 134, 135, 136, 176], "q": [46, 70, 81, 86, 87, 88, 237, 239], "ball": [46, 70], "brain": [49, 107], "median_otsu": [49, 107, 172], "denois": [50, 52, 53, 54, 55, 151, 167, 170, 177], "imag": [50, 52, 53, 54, 62, 75, 81, 85, 87, 88, 102, 104, 116, 145, 155, 156, 162, 169, 170, 239], "adapt": 50, "soft": 50, "coeffici": 50, "match": 50, "ascm": 50, "suppress": [51, 152], "gibb": [51, 152, 167], "oscil": [51, 152], "pca": [52, 53, 151, 167], "via": [52, 55], "empir": 52, "estim": [52, 53, 59, 62, 71, 86, 89, 167], "nois": [52, 53, 59, 167], "standard": [52, 53], "deviat": [52, 53], "perform": 52, "localpca": [52, 167], "function": [52, 71, 79, 89], "marcenko": [53, 151], "pastur": [53, 151], "algorithm": [53, 94], "marchenko": 53, "non": 54, "mean": [54, 73, 85, 155], "nlmean": [54, 151, 167], "patch2self": [55, 167], "self": 55, "supervis": 55, "statist": 55, "independ": 55, "gradient": [56, 163, 165, 169, 175], "sphere": [56, 165, 167], "volum": [58, 135, 137, 154], "motion": [58, 82, 154, 155], "correct": [58, 154], "dwi": 58, "piesno": [59, 167], "reslic": [60, 163], "snr": 62, "weight": [62, 116, 170], "histolog": 67, "resdnn": 67, "k": 69, "fold": 69, "valid": 69, "comparison": [69, 147], "constant": [70, 155], "solid": [70, 155], "angl": [70, 155], "constrain": [71, 73, 155], "respons": [71, 79, 89], "fodf": [71, 89], "signal": [72, 73, 74, 78, 83, 85, 91, 92], "correl": 72, "tensor": [72, 73, 78, 94, 155], "kurtosi": [73, 85, 155], "optim": [73, 165], "dki": [73, 121, 155, 171], "fraction": 73, "anisotropi": 73, "wmti": 74, "spectrum": 75, "calcul": [76, 93, 126, 128], "dsi": [76, 77, 119, 171], "scalar": [76, 93], "map": [76, 83, 93, 124, 128, 131, 155], "v": [77, 119], "invari": 79, "forecast": [79, 171], "free": 80, "water": 80, "elimin": 80, "remov": 80, "dti": [80, 155, 171], "contamin": 80, "sampl": [81, 239], "intravoxel": [82, 155], "incoher": [82, 155], "continu": [83, 92], "analyt": [83, 92, 147], "mri": [83, 155], "multi": 84, "shell": 84, "tissu": [84, 116, 172], "msdki": [85, 171], "test": [19, 22, 85], "synthet": 85, "data": [85, 166, 170, 243], "relationship": 85, "smt2": 85, "depend": [86, 245], "space": [86, 87, 88, 169], "indic": 86, "qt": 86, "dmri": 86, "trajectori": [87, 88], "qti": [87, 88, 171], "theori": [87, 88, 240], "usag": [87, 88, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "appli": [88, 104, 156], "constraint": 88, "harmon": [91, 241], "3d": [92, 96, 106], "shore": [92, 93, 171], "restor": 94, "fit": 94, "affin": [96, 97, 163], "mask": [97, 172, 177], "groupwis": 98, "how": [98, 243], "extend": [98, 113], "capabl": 98, "nonrigid": [100, 149], "bundlewarp": [100, 149, 163], "diffeomorph": [102, 105, 106, 156], "fuzzi": 102, "deform": [104, 149], "symmetr": [105, 106, 156], "2d": 105, "automat": 108, "extract": [108, 123, 172], "recobundl": [108, 148, 172], "fast": 109, "search": 109, "cluster": [111, 112, 113, 114, 126, 172, 176], "ident": [111, 172], "resampl": [111, 163], "center": 111, "mass": 111, "midpoint": [111, 175], "arclength": 111, "vector": 111, "endpoint": [111, 175], "metric": [112, 113, 135, 163, 172, 175], "averag": 112, "pointwis": 112, "euclidean": 112, "sum": 112, "cosin": 112, "quickbundl": [113, 114, 172], "framework": [113, 147], "classif": 116, "t1": [116, 137], "structur": [116, 151], "multitensor": [121, 122], "afq": 123, "tract": 123, "profil": [123, 147, 165], "buan": [124, 125, 147], "assign": 124, "creation": 124, "shape": [125, 147], "similar": [125, 147], "score": 125, "outlier": 126, "confid": 126, "index": 126, "path": [4, 128, 160], "length": [128, 130, 175], "size": 130, "reduct": 130, "matric": 131, "roi": [131, 136, 176], "intersect": 131, "densiti": 131, "interact": 134, "show": 135, "everi": 135, "orient": 135, "color": 135, "point": 135, "default": 135, "colormap": [135, 137], "specif": [135, 137, 147], "render": [136, 137], "simpl": 137, "slice": [137, 176], "rang": 137, "fa": 137, "mosaic": 137, "combin": 138, "frequent": 142, "question": 142, "theoret": 142, "practic": 142, "gimbal": 143, "lock": 143, "mathemat": [143, 242], "glossari": 144, "python": [19, 22, 145, 162, 245, 248], "highlight": [145, 158], "announc": [145, 159], "support": [145, 235, 248], "command": [146, 212], "line": [146, 212], "interfac": [146, 153], "group": 147, "across": 147, "popul": 147, "reproduc": 147, "larger": 147, "white": [148, 149], "matter": [148, 149], "partial": 149, "fulli": 149, "download": 150, "overcomplet": 151, "unring": 152, "appar": 155, "propag": 155, "csa": 155, "ivim": [155, 171], "transform": [156, 163], "eudx": 157, "pft": 157, "older": 158, "past": 159, "subpackag": 162, "util": [162, 169, 170, 171, 175, 176, 212], "get_info": 162, "align": [163, 177], "modul": [163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "_public": 163, "bundlemin": 163, "cpd": 163, "crosscorr": 163, "expectmax": 163, "imaffin": 163, "imwarp": 163, "parzenhist": 163, "scalespac": 163, "streamlinear": 163, "streamwarp": 163, "sumsqdiff": 163, "vector_field": 163, "bunch": 163, "verbositylevel": 163, "syn_registr": 163, "paramet": [163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "register_dwi_to_templ": 163, "write_map": 163, "read_map": 163, "affine_registr": 163, "center_of_mass": [163, 175], "translat": 163, "rigid": 163, "rigid_isosc": 163, "rigid_sc": 163, "_method_dict": 163, "register_seri": 163, "register_dwi_seri": 163, "motion_correct": 163, "streamline_registr": 163, "determine_num_thread": [163, 167, 175], "distance_matrix_mdf": 163, "deformableregistr": 163, "attribut": [163, 165, 171, 173, 175, 176], "gaussian_kernel": 163, "low_rank_eigen": 163, "initialize_sigma2": 163, "lowrankq": 163, "compute_cc_backward_step_2d": 163, "compute_cc_backward_step_3d": 163, "compute_cc_forward_step_2d": 163, "compute_cc_forward_step_3d": 163, "precompute_cc_factors_2d": 163, "precompute_cc_factors_2d_test": 163, "precompute_cc_factors_3d": 163, "precompute_cc_factors_3d_test": 163, "compute_em_demons_step_2d": 163, "compute_em_demons_step_3d": 163, "compute_masked_class_stats_2d": 163, "compute_masked_class_stats_3d": 163, "quantize_positive_2d": 163, "quantize_positive_3d": 163, "affineinversionerror": 163, "affineinvalidvalueserror": 163, "affinemap": 163, "mutualinformationmetr": 163, "affineregistr": 163, "_transform_method": 163, "transform_centers_of_mass": 163, "transform_geometric_cent": 163, "transform_origin": 163, "diffeomorphicmap": 163, "diffeomorphicregistr": 163, "symmetricdiffeomorphicregistr": 163, "registrationstag": 163, "logger": [163, 165, 169, 170, 171, 172], "mult_aff": 163, "get_direction_and_spac": 163, "similaritymetr": 163, "ccmetric": 163, "emmetr": 163, "ssdmetric": 163, "v_cycle_2d": 163, "v_cycle_3d": 163, "parzenjointhistogram": 163, "compute_parzen_mi": 163, "cubic_splin": 163, "cubic_spline_deriv": 163, "sample_domain_regular": 163, "isotropicscalespac": 163, "streamlinedistancemetr": 163, "bundlemindistancemetr": 163, "bundlemindistancematrixmetr": 163, "bundlemindistanceasymmetricmetr": 163, "bundlesumdistancematrixmetr": 163, "jointbundlemindistancemetr": 163, "streamlinelinearregistr": 163, "streamlineregistrationmap": 163, "jointstreamlineregistrationmap": 163, "bundle_sum_dist": 163, "bundle_min_dist": 163, "bundle_min_distance_fast": 163, "bundle_min_distance_asymmetric_fast": 163, "remove_clusters_by_s": 163, "progressive_slr": 163, "slr_with_qbx": 163, "groupwise_slr": 163, "get_unique_pair": 163, "compose_matrix44": 163, "decompose_matrix44": 163, "average_bundle_length": 163, "find_miss": 163, "bundlewarp_vector_fil": 163, "bundlewarp_shape_analysi": 163, "compute_energy_ssd_2d": 163, "compute_energy_ssd_3d": 163, "compute_residual_displacement_field_ssd_2d": 163, "compute_residual_displacement_field_ssd_3d": 163, "compute_ssd_demons_step_2d": 163, "compute_ssd_demons_step_3d": 163, "iterate_residual_displacement_field_ssd_2d": 163, "iterate_residual_displacement_field_ssd_3d": 163, "solve_2d_symmetric_positive_definit": 163, "solve_3d_symmetric_positive_definit": 163, "affinetransform2d": 163, "affinetransform3d": 163, "rigidisoscalingtransform2d": 163, "rigidisoscalingtransform3d": 163, "rigidscalingtransform2d": 163, "rigidscalingtransform3d": 163, "rigidtransform2d": 163, "rigidtransform3d": 163, "rotationtransform2d": 163, "rotationtransform3d": 163, "scalingtransform2d": 163, "scalingtransform3d": 163, "translationtransform2d": 163, "translationtransform3d": 163, "compose_vector_fields_2d": 163, "compose_vector_fields_3d": 163, "create_circl": 163, "create_harmonic_fields_2d": 163, "create_harmonic_fields_3d": 163, "create_random_displacement_2d": 163, "create_random_displacement_3d": 163, "create_spher": 163, "downsample_displacement_field_2d": 163, "downsample_displacement_field_3d": 163, "downsample_scalar_field_2d": 163, "downsample_scalar_field_3d": 163, "invert_vector_field_fixed_point_2d": 163, "invert_vector_field_fixed_point_3d": 163, "is_valid_affin": 163, "reorient_vector_field_2d": 163, "reorient_vector_field_3d": 163, "resample_displacement_field_2d": 163, "resample_displacement_field_3d": 163, "simplify_warp_function_2d": 163, "simplify_warp_function_3d": 163, "sparse_gradi": 163, "transform_2d_affin": 163, "transform_2d_affine_nn": 163, "transform_3d_affin": 163, "transform_3d_affine_nn": 163, "warp_2d": 163, "warp_2d_nn": 163, "warp_3d": 163, "warp_3d_nn": 163, "warp_coordinates_2d": 163, "warp_coordinates_3d": 163, "boot": 164, "core": 165, "geometri": 165, "graph": 165, "histeq": 165, "interpol": 165, "ndindex": 165, "onetim": 165, "rng": 165, "sphere_stat": 165, "subdivide_octahedron": 165, "wavelet": 165, "_tuple2ax": 165, "sphere2cart": 165, "cart2spher": 165, "sph2latlon": 165, "normalized_vector": 165, "vector_norm": 165, "rodrigues_axis_rot": 165, "nearest_pos_semi_def": 165, "sphere_dist": 165, "see": [165, 166, 167, 168, 169, 171, 173, 175], "also": [165, 166, 167, 168, 169, 171, 173, 175], "cart_dist": 165, "vector_cosin": 165, "lambert_equal_area_projection_polar": 165, "lambert_equal_area_projection_cart": 165, "euler_matrix": 165, "compose_matrix": 165, "decompose_matrix": 165, "rais": [165, 166, 171, 175], "circumradiu": 165, "vec2vec_rotmat": 165, "compose_transform": 165, "perpendicular_direct": 165, "dist_to_corn": 165, "is_hemispher": 165, "gradientt": 165, "unique_bv": 165, "b0_threshold_empty_gradient_messag": 165, "b0_threshold_update_slicing_messag": 165, "mask_non_weighted_bv": 165, "gradient_table_from_bvals_bvec": 165, "gradient_table_from_qvals_bvec": 165, "gradient_table_from_gradient_strength_bvec": 165, "gradient_t": 165, "reorient_bvec": 165, "generate_bvec": 165, "round_bval": 165, "unique_bvals_toler": 165, "get_bval_indic": 165, "unique_bvals_magnitud": 165, "check_multi_b": 165, "btens_to_param": 165, "params_to_bten": 165, "ornt_map": [165, 169], "reorient_vector": [165, 169], "reorient_on_axi": [165, 169], "orientation_from_str": [165, 169], "orientation_to_str": [165, 169], "nearestneighborinterpol": 165, "outsideimag": 165, "trilinearinterpol": 165, "interp_rbf": 165, "interpolate_scalar_2d": 165, "interpolate_scalar_3d": 165, "interpolate_scalar_nn_2d": 165, "interpolate_scalar_nn_3d": 165, "interpolate_vector_2d": 165, "interpolate_vector_3d": 165, "map_coordinates_trilinear_iso": 165, "nearestneighbor_interpol": 165, "trilinear_interp": 165, "trilinear_interpolate4d": 165, "resetmixin": 165, "onetimeproperti": 165, "auto_attr": 165, "sklearnlinearsolv": 165, "nonnegativeleastsquar": 165, "positivedefiniteleastsquar": 165, "spdot": 165, "sparse_nnl": 165, "wichmannhill2006": 165, "wichmannhill1982": 165, "lecuy": 165, "hemispher": [165, 167], "faces_from_sphere_vertic": 165, "unique_edg": 165, "unique_set": 165, "disperse_charg": [165, 167], "disperse_charges_alt": 165, "euler_characteristic_check": 165, "octahedron_vertic": 165, "octahedron_fac": 165, "icosahedron_vertic": 165, "icosahedron_fac": 165, "unit_octahedron": 165, "unit_icosahedron": 165, "hemi_icosahedron": 165, "random_uniform_on_spher": 165, "eigenstat": 165, "compare_orientation_set": 165, "angular_similar": 165, "create_unit_spher": 165, "create_unit_hemispher": 165, "cshift3d": 165, "permutationinvers": 165, "afb3d_a": 165, "sfb3d_a": 165, "sfb3d": 165, "afb3d": 165, "dwt3d": 165, "idwt3d": 165, "fetcher": 166, "dataerror": 166, "loads_compat": 166, "data_dir": 166, "get_sim_voxel": 166, "get_skeleton": 166, "get_spher": [166, 167], "default_spher": 166, "small_spher": 166, "get_3shell_gtab": 166, "get_isbi2013_2shell_gtab": 166, "get_gtab_taiwan_dsi": 166, "dsi_voxel": 166, "dsi_deconv_voxel": 166, "mrtrix_spherical_funct": 166, "get_cmap": 166, "two_cingulum_bundl": 166, "matlab_life_result": 166, "load_sdp_constraint": 166, "copyfileobj_withprogress": 166, "check_md5": 166, "fetch_data": 166, "fetch_isbi2013_2shel": 166, "fetch_stanford_label": 166, "fetch_sherbrooke_3shel": 166, "fetch_stanford_hardi": 166, "fetch_resdnn_weight": 166, "fetch_synb0_weight": 166, "fetch_synb0_test": 166, "fetch_evac_weight": 166, "fetch_evac_test": 166, "fetch_stanford_t1": 166, "fetch_stanford_pve_map": 166, "fetch_stanford_track": 166, "fetch_taiwan_ntu_dsi": 166, "fetch_syn_data": 166, "fetch_mni_templ": 166, "fetch_scil_b0": 166, "fetch_bundles_2_subject": 166, "fetch_ivim": 166, "fetch_cfin_multib": 166, "fetch_file_format": 166, "fetch_bundle_atlas_hcp842": 166, "fetch_target_tractogram_hcp": 166, "fetch_bundle_fa_hcp": 166, "fetch_qtdmri_test_retest_2subject": 166, "fetch_gold_standard_io": 166, "fetch_qte_lte_pt": 166, "fetch_cti_rat1": 166, "fetch_fury_surfac": 166, "fetch_dib_70_lte_pte_st": 166, "fetch_dib_217_lte_pte_st": 166, "fetch_ptt_minimal_dataset": 166, "fetch_bundle_warp_dataset": 166, "get_fnam": 166, "read_qtdmri_test_retest_2subject": 166, "read_scil_b0": 166, "read_siemens_scil_b0": 166, "read_isbi2013_2shel": 166, "read_sherbrooke_3shel": 166, "read_stanford_label": 166, "read_stanford_hardi": 166, "read_stanford_t1": 166, "read_stanford_pve_map": 166, "read_taiwan_ntu_dsi": 166, "read_syn_data": 166, "fetch_tissue_data": 166, "read_tissue_data": 166, "read_mni_templ": 166, "fetch_cenir_multib": 166, "read_cenir_multib": 166, "read_bundles_2_subject": 166, "read_ivim": 166, "read_cfin_dwi": 166, "read_cfin_t1": 166, "get_file_format": 166, "get_bundle_atlas_hcp842": 166, "get_two_hcp842_bundl": 166, "get_target_tractogram_hcp": 166, "read_qte_lte_pt": 166, "read_dib_70_lte_pte_st": 166, "read_dib_217_lte_pte_st": 166, "extract_example_tract": 166, "read_five_af_bundl": 166, "to_bids_descript": 166, "fetch_hcp": 166, "fetch_hbn": 166, "adaptive_soft_match": 167, "denspe": 167, "enhancement_kernel": 167, "nlmeans_block": 167, "noise_estim": 167, "non_local_mean": 167, "pca_noise_estim": 167, "shift_twist_convolut": 167, "add_padding_reflect": 167, "correspond_indic": 167, "nlmeans_3d": 167, "remove_pad": 167, "enhancementkernel": 167, "ceil": 167, "gettempdir": 167, "gibbs_remov": 167, "dimensionality_problem_messag": 167, "create_patch_radius_arr": 167, "compute_patch_s": 167, "compute_num_sampl": 167, "compute_suggested_patch_radiu": 167, "genpca": 167, "mppca": 167, "firdn": 167, "upfir": 167, "estimate_sigma": 167, "warn": [167, 175], "convolv": 167, "convolve_sf": 167, "sf_to_sh": [167, 171], "sh_to_sf": [167, 171], "bootstrap_direction_gett": 168, "closest_peak_direction_gett": 168, "pmf": 168, "probabilistic_direction_gett": 168, "ptt_direction_gett": 168, "bootdirectiongett": 168, "peak_direct": 168, "basedirectiongett": 168, "basepmfdirectiongett": 168, "closestpeakdirectiongett": 168, "pmfgendirectiongett": 168, "peaksandmetr": 168, "peak_directions_nl": 168, "peaks_from_model": 168, "reshape_peaks_for_visu": 168, "pmfgen": 168, "shcoeffpmfgen": 168, "simplepmfgen": 168, "deterministicmaximumdirectiongett": 168, "probabilisticdirectiongett": 168, "random": [168, 175], "pttdirectiongett": 168, "min_radius_curvature_from_angl": [168, 175], "io": [169, 177], "bvectxt": 169, "dpy": 169, "pickl": 169, "stateful_tractogram": 169, "vtk": 169, "read_bvec_fil": 169, "read_bvals_bvec": 169, "load_nifti_data": 169, "load_nifti": 169, "save_nifti": 169, "save_qa_metr": 169, "load_peak": 169, "save_peak": 169, "peaks_to_nifti": 169, "save_pickl": 169, "load_pickl": 169, "origin": 169, "statefultractogram": 169, "set_sft_logger_level": 169, "save_tractogram": 169, "load_tractogram": 169, "load_gener": 169, "save_gener": 169, "load_trk": 169, "load_tck": 169, "load_trx": 169, "load_vtk": 169, "load_vtp": 169, "load_fib": 169, "load_dpi": 169, "save_trk": 169, "save_tck": 169, "save_trx": 169, "save_vtk": 169, "save_vtp": 169, "save_fib": 169, "save_dpi": 169, "nifti1_symmat": 169, "make5d": 169, "decfa": 169, "decfa_to_float": 169, "is_reference_info_valid": 169, "split_name_with_gz": 169, "get_reference_info": 169, "is_header_compat": 169, "create_tractogram_head": 169, "create_nifti_head": 169, "save_buan_profiles_hdf5": 169, "read_img_arr_or_path": 169, "load_polydata": 169, "save_polydata": 169, "save_vtk_streamlin": 169, "load_vtk_streamlin": 169, "nn": [170, 177], "cnn_1d_denois": 170, "titl": 170, "cnn": 170, "evac": 170, "histo_resdnn": 170, "synb0": 170, "cnn1ddenois": 170, "block": 170, "channelsum": 170, "evacplu": 170, "prepare_img": 170, "init_model": 170, "historesdnn": 170, "singlelayerperceptron": 170, "multiplelayerpercepton": 170, "encoderblock": 170, "decoderblock": 170, "unet3d": 170, "normal": 170, "unnorm": 170, "set_logger_level": 170, "transform_img": 170, "recover_img": 170, "correct_minor_error": 170, "reconst": [171, 177], "cach": 171, "cross_valid": 171, "csdeconv": 171, "cti": 171, "dki_micro": 171, "eudx_direction_gett": 171, "fwdti": 171, "gqi": 171, "mapmri": 171, "mcsd": 171, "multi_voxel": 171, "odf": 171, "qtdmri": 171, "quick_squash": 171, "recspe": 171, "sfm": 171, "shm": 171, "vec_val_sum": 171, "reconstmodel": 171, "reconstfit": 171, "coeff_of_determin": 171, "kfold_xval": 171, "axsymshrespons": 171, "constrainedsphericaldeconvmodel": 171, "constrainedsdtmodel": 171, "auto_respons": 171, "response_from_mask": 171, "estimate_respons": 171, "forward_sdt_deconv_mat": 171, "odf_deconv": 171, "odf_sh_to_sharp": 171, "mask_for_response_ssst": 171, "response_from_mask_ssst": 171, "auto_response_ssst": 171, "recursive_respons": 171, "fa_trace_to_lambda": 171, "correlationtensormodel": 171, "correlationtensorfit": 171, "from_qte_to_cti": 171, "multi_gaussian_k_from_c": 171, "split_cti_param": 171, "cti_predict": 171, "params_to_cti_param": 171, "ls_fit_cti": 171, "diffusionkurtosismodel": 171, "diffusionkurtosisfit": 171, "carlson_rf": 171, "carlson_rd": 171, "directional_diffus": 171, "directional_diffusion_vari": 171, "directional_kurtosi": 171, "apparent_kurtosis_coef": 171, "mean_kurtosi": 171, "radial_kurtosi": 171, "axial_kurtosi": 171, "kurtosis_maximum": 171, "mean_kurtosis_tensor": 171, "kurtosis_fractional_anisotropi": 171, "dki_predict": 171, "params_to_dki_param": 171, "ls_fit_dki": 171, "cls_fit_dki": 171, "wrotat": 171, "wrotate_el": 171, "wcon": 171, "split_dki_param": 171, "kurtosismicrostructuremodel": 171, "kurtosismicrostructuralfit": 171, "axonal_water_fract": 171, "diffusion_compon": 171, "dkimicro_predict": 171, "tortuos": 171, "diffusionspectrummodel": 171, "diffusionspectrumfit": 171, "diffusionspectrumdeconvmodel": 171, "diffusionspectrumdeconvfit": 171, "create_qspac": 171, "create_qt": 171, "hanning_filt": 171, "pdf_interp_coord": 171, "pdf_odf": 171, "half_to_full_qspac": 171, "project_hemisph_bvec": 171, "threshold_propag": 171, "gen_psf": 171, "lr_deconv": 171, "tensormodel": 171, "tensorfit": 171, "fractional_anisotropi": 171, "geodesic_anisotropi": 171, "mean_diffus": 171, "axial_diffus": 171, "radial_diffus": 171, "trace": 171, "color_fa": 171, "determin": 171, "isotrop": 171, "deviator": 171, "norm": 171, "mode": 171, "planar": 171, "apparent_diffusion_coef": 171, "tensor_predict": 171, "iter_fit_tensor": 171, "wls_fit_tensor": 171, "ols_fit_tensor": 171, "nlls_fit_tensor": 171, "restore_fit_tensor": 171, "_lt_indic": 171, "from_lower_triangular": 171, "_lt_row": 171, "_lt_col": 171, "lower_triangular": 171, "decompose_tensor": 171, "design_matrix": 171, "quantize_evec": 171, "eig_from_lo_tri": 171, "eudxdirectiongett": 171, "forecastmodel": 171, "forecastfit": 171, "find_signal_mean": 171, "forecast_error_func": 171, "psi_l": 171, "forecast_matrix": 171, "rho_matrix": 171, "lb_forecast": 171, "freewatertensormodel": 171, "freewatertensorfit": 171, "fwdti_predict": 171, "wls_iter": 171, "nls_iter": 171, "nls_fit_tensor": 171, "lower_triangular_to_choleski": 171, "cholesky_to_lower_triangular": 171, "generalizedqsamplingmodel": 171, "generalizedqsamplingfit": 171, "normalize_qa": 171, "squared_radial_compon": 171, "npa": 171, "equatorial_zone_vertic": 171, "polar_zone_vertic": 171, "upper_hemi_map": 171, "equatorial_maximum": 171, "patch_vertic": 171, "patch_maximum": 171, "odf_sum": 171, "patch_sum": 171, "triple_odf_maxima": 171, "ivimmodeltrr": 171, "ivimmodelvp": 171, "ivimfit": 171, "ivim_predict": 171, "f_d_star_predict": 171, "f_d_star_error": 171, "ivim_model_selector": 171, "mapmrimodel": 171, "mapmrifit": 171, "isotropic_scale_factor": 171, "mapmri_index_matrix": 171, "b_mat": 171, "b_mat_isotrop": 171, "mapmri_phi_1d": 171, "mapmri_phi_matrix": 171, "mapmri_psi_1d": 171, "mapmri_psi_matrix": 171, "mapmri_odf_matrix": 171, "mapmri_isotropic_phi_matrix": 171, "mapmri_isotropic_radial_signal_basi": 171, "mapmri_isotropic_m_mu_independ": 171, "mapmri_isotropic_m_mu_depend": 171, "mapmri_isotropic_psi_matrix": 171, "mapmri_isotropic_radial_pdf_basi": 171, "mapmri_isotropic_k_mu_independ": 171, "mapmri_isotropic_k_mu_depend": 171, "binomialfloat": 171, "mapmri_isotropic_odf_matrix": 171, "mapmri_isotropic_odf_sh_matrix": 171, "mapmri_isotropic_laplacian_reg_matrix": 171, "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix": 171, "mapmri_isotropic_index_matrix": 171, "create_rspac": 171, "delta": 171, "map_laplace_u": 171, "map_laplace_t": 171, "map_laplace_": 171, "mapmri_stu_reg_matric": 171, "mapmri_laplacian_reg_matrix": 171, "generalized_crossvalidation_arrai": 171, "generalized_crossvalid": 171, "gcv_cost_funct": 171, "multishellrespons": 171, "multishelldeconvmodel": 171, "msdeconvfit": 171, "qpfitter": 171, "multi_tissue_basi": 171, "solve_qp": 171, "multi_shell_fiber_respons": 171, "mask_for_response_msmt": 171, "response_from_mask_msmt": 171, "auto_response_msmt": 171, "meandiffusionkurtosismodel": 171, "meandiffusionkurtosisfit": 171, "mean_signal_bvalu": 171, "msk_from_awf": 171, "awf_from_msk": 171, "msdki_predict": 171, "wls_fit_msdki": 171, "multivoxelfit": 171, "callablearrai": 171, "multi_voxel_fit": 171, "odfmodel": 171, "odffit": 171, "gfa": 171, "minmax_norm": 171, "qtdmrimodel": 171, "qtdmrifit": 171, "qtdmri_to_mapmri_matrix": 171, "qtdmri_isotropic_to_mapmri_matrix": 171, "qtdmri_temporal_norm": 171, "qtdmri_mapmri_norm": 171, "qtdmri_mapmri_isotropic_norm": 171, "qtdmri_signal_matrix_": 171, "qtdmri_signal_matrix": 171, "qtdmri_eap_matrix": 171, "qtdmri_isotropic_signal_matrix_": 171, "qtdmri_isotropic_signal_matrix": 171, "qtdmri_eap_matrix_": 171, "qtdmri_isotropic_eap_matrix_": 171, "qtdmri_isotropic_eap_matrix": 171, "radial_basis_opt": 171, "angular_basis_opt": 171, "radial_basis_eap_opt": 171, "angular_basis_eap_opt": 171, "temporal_basi": 171, "qtdmri_index_matrix": 171, "qtdmri_isotropic_index_matrix": 171, "qtdmri_laplacian_reg_matrix": 171, "qtdmri_isotropic_laplacian_reg_matrix": 171, "part23_reg_matrix_q": 171, "part23_iso_reg_matrix_q": 171, "part4_reg_matrix_q": 171, "part4_iso_reg_matrix_q": 171, "part1_reg_matrix_tau": 171, "part23_reg_matrix_tau": 171, "part4_reg_matrix_tau": 171, "h": 171, "qtdmri_isotropic_sc": 171, "qtdmri_anisotropic_sc": 171, "design_matrix_spati": 171, "create_rt_space_grid": 171, "qtdmri_number_of_coeffici": 171, "l1_crossvalid": 171, "elastic_crossvalid": 171, "visualise_gradient_table_g_delta_rainbow": 171, "qtimodel": 171, "qtifit": 171, "from_3x3_to_6x1": 171, "from_6x1_to_3x3": 171, "from_6x6_to_21x1": 171, "from_21x1_to_6x6": 171, "cvxpy_1x6_to_3x3": 171, "cvxpy_1x21_to_6x6": 171, "dtd_covari": 171, "qti_sign": 171, "reduc": 171, "adj_to_countarr": 171, "argmax_from_adj": 171, "argmax_from_countarr": 171, "le_to_odf": 171, "local_maxima": 171, "proc_reco_arg": 171, "remove_similar_vertic": 171, "search_descend": 171, "sum_on_blocks_1d": 171, "rumbasdmodel": 171, "rumbafit": 171, "rumba_deconv": 171, "mbessel_ratio": 171, "generate_kernel": 171, "rumba_deconv_glob": 171, "isotropicmodel": 171, "isotropicfit": 171, "exponentialisotropicmodel": 171, "exponentialisotropicfit": 171, "sparsefasciclemodel": 171, "sparsefasciclefit": 171, "sfm_design_matrix": 171, "sphharmmodel": 171, "qballbasemodel": 171, "sphharmfit": 171, "csaodfmodel": 171, "opdtmodel": 171, "qballmodel": 171, "residualbootstrapwrapp": 171, "forward_sdeconv_mat": 171, "sh_to_rh": 171, "gen_dirac": 171, "spherical_harmon": 171, "real_sph_harm": 171, "real_sh_tournier_from_index": 171, "real_sh_descoteaux_from_index": 171, "real_sh_tourni": 171, "real_sh_descoteaux": 171, "real_sym_sh_mrtrix": 171, "real_sym_sh_basi": 171, "sph_harm_ind_list": 171, "order_from_ncoef": 171, "smooth_pinv": 171, "lazy_index": 171, "normalize_data": 171, "hat": 171, "lcr_matrix": 171, "bootstrap_data_arrai": 171, "bootstrap_data_voxel": 171, "sh_to_sf_matrix": 171, "calculate_max_ord": 171, "anisotropic_pow": 171, "convert_sh_to_full_basi": 171, "convert_sh_from_legaci": 171, "convert_sh_to_legaci": 171, "shoremodel": 171, "shorefit": 171, "shore_matrix": 171, "shore_matrix_pdf": 171, "shore_matrix_odf": 171, "l_shore": 171, "n_shore": 171, "shore_indic": 171, "shore_ord": 171, "dki_design_matrix": 171, "cti_design_matrix": 171, "vec_val_vect": 171, "clustering_algorithm": 172, "clusteringspe": 172, "cythonutil": 172, "featurespe": 172, "fss": 172, "metricspe": 172, "mrf": 172, "check_rang": 172, "bundle_adjac": 172, "ba_analysi": 172, "cluster_bundl": 172, "bundle_shape_similar": 172, "clustercentroid": 172, "clustermap": 172, "clustermapcentroid": 172, "quickbundlesx": 172, "treeclust": 172, "treeclustermap": 172, "qbx_and_merg": 172, "dtype": 172, "clusters_centroid2clustermap_centroid": 172, "peek": 172, "clusterscentroid": 172, "evaluate_aabb_check": 172, "arclengthfeatur": 172, "centerofmassfeatur": 172, "cythonfeatur": 172, "identityfeatur": 172, "midpointfeatur": 172, "resamplefeatur": 172, "vectorofendpointsfeatur": 172, "infer_shap": 172, "faststreamlinesearch": 172, "nearest_from_matrix_row": 172, "nearest_from_matrix_col": 172, "multi_median": 172, "applymask": 172, "bounding_box": 172, "crop": 172, "segment_from_cfa": 172, "clean_cc_mask": 172, "mdf": 172, "mean_manhattan_dist": 172, "mean_euclidean_dist": 172, "averagepointwiseeuclideanmetr": 172, "cosinemetr": 172, "cythonmetr": 172, "minimumaveragedirectflipmetr": 172, "sumpointwiseeuclideanmetr": 172, "dist": 172, "distance_matrix": 172, "constantobservationmodel": 172, "iteratedconditionalmod": 172, "otsu": 172, "upper_bound_by_r": 172, "upper_bound_by_perc": 172, "tissueclassifierhmrf": 172, "sim": 173, "phantom": 173, "voxel": 173, "add_nois": 173, "diff2eigenvector": 173, "orbital_phantom": 173, "diffusion_ev": 173, "sticks_and_bal": 173, "callaghan_perpendicular": 173, "gaussian_parallel": 173, "cylinders_and_ball_soderman": 173, "single_tensor": 173, "multi_tensor": 173, "multi_tensor_dki": 173, "kurtosis_el": 173, "dki_sign": 173, "single_tensor_odf": 173, "all_tensor_evec": 173, "multi_tensor_odf": 173, "single_tensor_rtop": 173, "multi_tensor_rtop": 173, "single_tensor_pdf": 173, "multi_tensor_pdf": 173, "single_tensor_msd": 173, "multi_tensor_msd": 173, "stat": [174, 177], "peak_valu": 174, "anatomical_measur": 174, "assignment_map": 174, "gaussian_weight": 174, "afq_profil": 174, "_util": 175, "direction_gett": 175, "distanc": 175, "fbcmeasur": 175, "learn": 175, "local_track": 175, "localtrack": 175, "mesh": 175, "propspe": 175, "stopping_criterion": 175, "streamlinespe": 175, "vox2track": 175, "directiongett": 175, "add_3vec": 175, "approx_polygon_track": 175, "approximate_mdl_trajectori": 175, "bundles_distances_mam": 175, "bundles_distances_mdf": 175, "cut_plan": 175, "inner_3vec": 175, "intersect_segment_cylind": 175, "larch_3merg": 175, "larch_3split": 175, "lee_angle_dist": 175, "lee_perpendicular_dist": 175, "local_skeleton_clust": 175, "local_skeleton_clustering_3pt": 175, "mam_dist": 175, "minimum_closest_dist": 175, "most_similar_track_mam": 175, "mul_3vec": 175, "norm_3vec": 175, "normalized_3vec": 175, "point_segment_sq_dist": 175, "point_track_sq_distance_check": 175, "sub_3vec": 175, "track_dist_3pt": 175, "track_roi_intersection_check": 175, "kdtree": 175, "interp1d": 175, "compute_rfbc": 175, "min_moving_averag": 175, "detect_corresponding_track": 175, "detect_corresponding_tracks_plu": 175, "lifesignalmak": 175, "fibermodel": 175, "fiberfit": 175, "streamline_gradi": 175, "grad_tensor": 175, "streamline_tensor": 175, "streamline_sign": 175, "voxel2streamlin": 175, "particlefilteringtrack": 175, "pft_tracker": 175, "random_coordinates_from_surfac": 175, "seeds_from_surface_coordin": 175, "triangles_area": 175, "vertices_to_triangles_valu": 175, "wind": 175, "byte": 175, "downsampl": 175, "magn": 175, "frenet_serret": 175, "mean_curvatur": 175, "mean_orient": 175, "generate_combin": 175, "longest_track_bundl": 175, "intersect_spher": 175, "inside_spher": 175, "inside_sphere_point": 175, "spline": 175, "startpoint": 175, "arbitrarypoint": 175, "principal_compon": 175, "midpoint2point": 175, "eudx_both_direct": 175, "ndarray_offset": 175, "actstoppingcriterion": 175, "anatomicalstoppingcriterion": 175, "binarystoppingcriterion": 175, "cmcstoppingcriterion": 175, "stoppingcriterion": 175, "streamlinestatu": 175, "thresholdstoppingcriterion": 175, "unlist_streamlin": 175, "relist_streamlin": 175, "center_streamlin": 175, "deform_streamlin": 175, "transform_streamlin": 175, "select_random_set_of_streamlin": 175, "select_by_roi": 175, "cluster_confid": 175, "orient_by_roi": 175, "orient_by_streamlin": 175, "values_from_volum": 175, "nbyte": 175, "compress_streamlin": 175, "set_number_of_point": 175, "density_map": 175, "connectivity_matrix": 175, "ndbincount": 175, "reduce_label": 175, "subseg": 175, "seeds_from_mask": 175, "random_seeds_from_mask": 175, "target": 175, "target_line_bas": 175, "streamline_near_roi": 175, "near_roi": 175, "unique_row": 175, "transform_tracking_output": 175, "reduce_roi": 175, "path_length": 175, "max_angle_from_curvatur": 175, "streamline_map": 175, "track_count": 175, "viz": [176, 177], "gmem": 176, "horizon": 176, "app": 176, "tab": 176, "panel": 176, "plot": 176, "project": 176, "regtool": 176, "globalhorizon": 176, "horizonuiel": 176, "horizontab": 176, "tabmanag": 176, "build_label": 176, "build_slid": 176, "build_checkbox": 176, "build_switch": 176, "color_single_slid": 176, "color_double_slid": 176, "clusterstab": 176, "peakstab": 176, "roistab": 176, "slicestab": 176, "check_img_shap": 176, "clustersvisu": 176, "slicesvisu": 176, "slicer_panel": 176, "compare_map": 176, "compare_qti_map": 176, "bundle_shape_profil": 176, "sph_project": 176, "simple_plot": 176, "overlay_imag": 176, "draw_lattice_2d": 176, "plot_2d_diffeomorphic_map": 176, "plot_slic": 176, "overlay_slic": 176, "show_bundl": 176, "viz_two_bundl": 176, "viz_vector_field": 176, "viz_displacement_mag": 176, "cli": 177, "combined_workflow": 177, "docstring_pars": 177, "flow_runn": 177, "multi_io": 177, "resliceflow": 177, "slrwithqbxflow": 177, "imageregistrationflow": 177, "applytransformflow": 177, "synregistrationflow": 177, "motioncorrectionflow": 177, "bundlewarpflow": 177, "check_dimens": 177, "introspectiveargumentpars": 177, "get_args_default": 177, "none_or_dtyp": 177, "combinedworkflow": 177, "patch2selfflow": 177, "nlmeansflow": 177, "lpcaflow": 177, "mppcaflow": 177, "gibbsringingflow": 177, "reader": 177, "numpydocstr": 177, "dedent_lin": 177, "get_level": 177, "run_flow": 177, "ioinfoflow": 177, "fetchflow": 177, "splitflow": 177, "maskflow": 177, "ioiter": 177, "common_start": 177, "slash_to_und": 177, "connect_output_path": 177, "concatenate_input": 177, "basename_without_extens": 177, "io_iter": 177, "io_iterator_": 177, "evacplusflow": 177, "reconstmapmriflow": 177, "reconstdtiflow": 177, "reconstcsdflow": 177, "reconstcsaflow": 177, "reconstdkiflow": 177, "reconstivimflow": 177, "reconstrumbaflow": 177, "medianotsuflow": 177, "recobundlesflow": 177, "labelsbundlesflow": 177, "snrinccflow": 177, "bundleanalysistractometryflow": 177, "linearmixedmodelsflow": 177, "bundleshapeanalysi": 177, "buan_bundle_profil": 177, "localfibertrackingpamflow": 177, "pftrackingpamflow": 177, "horizonflow": 177, "11": [4, 160, 214], "system": [19, 235], "subscrib": 236, "dii": 237, "about": 237, "b": [237, 238], "matrix": [237, 238], "siemen": [237, 238], "dicom": [237, 238], "what": [237, 249], "generalis": 239, "concept": 240, "coordin": 242, "term": 242, "physic": 242, "convent": 242, "matlab": 242, "next": 246, "pip": 248, "anaconda": [19, 248], "packag": [22, 248], "window": [19, 248], "osx": 248, "linux": [19, 248], "contact": 248, "u": 248, "common": 248, "problem": 248, "multipl": 248, "altern": 248, "memori": 248, "issu": 248, "all": 19, "oper": 19, "unix": 19, "e": 19, "g": 19, "ubuntu": 19, "debian": 19, "fedora": 19, "mandriva": 19, "mayb": 19, "redhat": 19, "openmp": 19, "under": 19, "homebrew": 19, "org": 19, "onli": [], "tip": 19, "troubleshoot": 19, "i": 249, "mission": 250, "statement": 250, "recommend": 19, "svg": [4, 160], "width": [4, 160], "0em": [4, 160], "height": [4, 160], "class": [4, 160], "octicon": [4, 160], "text": 4, "info": 4, "viewbox": [4, 160], "aria": [4, 160], "hidden": [4, 160], "true": [4, 160], "fill": [4, 160], "rule": [4, 160], "evenodd": [4, 160], "d": [4, 160], "m10": 4, "75a2": 4, "015": 4, "0zm1": 4, "43": 4, "75a4": 4, "002": 4, "01": [4, 160], "86": 4, "0h": 4, "75a": 4, "75": [4, 160], "110": 4, "5h3": 4, "32a4": 4, "001": 4, "017": 4, "0h3": 4, "32a": 4, "5h": 4, "32z": 4, "maco": 19, "toolchain": 22, "roadmap": 22, "numpi": 22, "compil": 22, "offici": 22, "mortar": 160, "board": 160, "m7": 160, "693": 160, "066a": 160, "614": 160, "0l7": 160, "25": 160, "25a": 160, "010": 160, "368l13": 160, "831v2": 160, "794c0": 160, "024": 160, "81": 160, "749": 160, "66": 160, "173": 160, "893": 160, "447": 160, "075": 160, "702": 160, "34": 160, "278": 160, "55": 160, "012": 160, "816": 160, "036a": 160, "133": 160, "494c": 160, "22": 160, "02": 160, "45": 160, "03": 160, "683": 160, "082": 160, "025": 160, "221": 160, "67": 160, "543": 160, "69": 160, "345": 160, "83": 160, "682": 160, "832v7": 160, "503l8": 160, "307": 160, "934a": 160, "0l4": 160, "28v1": 160, "663c": 160, "296": 160, "105": 160, "575": 160, "275": 160, "812": 160, "512": 160, "438": 160, "688": 160, "059": 160, "796v3a": 160, "75h": 160, "3a": 160, "75v": 160, "3c0": 160, "737": 160, "358": 160, "796": 160, "237": 160, "516": 160, "407": 160, "512v6": 160, "606l": 160, "443": 160, "684a": 160, "368l7": 160, "25zm2": 160, "583": 160, "5l8": 160, "428": 160, "416": 160, "572": 160, "5zm2": 160, "25c0": 160, "388": 160, "125": 160, "611": 160, "735a": 160, "704": 160, "203c": 160, "19": 160, "37": 160, "071": 160, "203": 160, "124": 160, "347": 160, "735v2": 160, "25h2": 160, "5v": 160, "25z": 160, "recip": 160, "dipy_align_affin": 179, "argument": [179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "option": [179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "dipy_align_syn": 180, "dipy_apply_transform": 181, "dipy_buan_lmm": 182, "dipy_buan_profil": 183, "dipy_buan_shap": 184, "dipy_bundlewarp": 185, "fibonacci_spher": 165, "dipy_correct_mot": 186, "dipy_denoise_lpca": 187, "dipy_denoise_mppca": 188, "dipy_denoise_nlmean": 189, "dipy_denoise_patch2self": 190, "dipy_evac_plu": 191, "dipy_fetch": 192, "dipy_fit_csa": 193, "dipy_fit_csd": 194, "dipy_fit_dki": 195, "dipy_fit_dti": 196, "dipy_fit_ivim": 197, "dipy_fit_mapmri": 198, "dipy_gibbs_ring": 199, "dipy_horizon": 200, "dipy_info": 201, "dipy_labelsbundl": 202, "dipy_mask": 203, "dipy_median_otsu": 204, "dipy_recobundl": 205, "dipy_reslic": 206, "dipy_slr": 207, "dipy_snr_in_cc": 208, "dipy_split": 209, "dipy_track": 210, "dipy_track_pft": 211}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"API changes": [[0, "api-changes"]], "DIPY 1.8.0 changes": [[0, "dipy-1-8-0-changes"]], "DIPY 1.7.0 changes": [[0, "dipy-1-7-0-changes"]], "DIPY 1.6.0 changes": [[0, "dipy-1-6-0-changes"]], "DIPY 1.5.0 changes": [[0, "dipy-1-5-0-changes"]], "DIPY 1.4.1 changes": [[0, "dipy-1-4-1-changes"]], "DIPY 1.4.0 changes": [[0, "dipy-1-4-0-changes"]], "DIPY 1.3.0 changes": [[0, "dipy-1-3-0-changes"]], "DIPY 1.2.0 changes": [[0, "dipy-1-2-0-changes"]], "DIPY 1.1.1 changes": [[0, "dipy-1-1-1-changes"]], "DIPY 1.0.0 changes": [[0, "dipy-1-0-0-changes"]], "DIPY 0.16 Changes": [[0, "dipy-0-16-changes"]], "DIPY 0.15 Changes": [[0, "dipy-0-15-changes"]], "DIPY 0.14 Changes": [[0, "dipy-0-14-changes"]], "DIPY 0.13 Changes": [[0, "dipy-0-13-changes"]], "DIPY 0.12 Changes": [[0, "dipy-0-12-changes"]], "DIPY 0.10 Changes": [[0, "dipy-0-10-changes"]], "DIPY 0.9 Changes": [[0, "dipy-0-9-changes"]], "DIPY 0.8 Changes": [[0, "dipy-0-8-changes"]], "Changes between 0.7.1 and 0.6": [[0, "changes-between-0-7-1-and-0-6"]], "Publications": [[1, "publications"]], "A note on citing our work": [[1, "a-note-on-citing-our-work"]], "\ud83d\ude80 DIPY Benchmarks \ud83d\udcca": [[2, "dipy-benchmarks"]], "Prerequisites \u2699\ufe0f": [[2, "prerequisites"]], "Getting Started \ud83c\udfc3\u200d\u2642\ufe0f": [[2, "getting-started"]], "Running Benchmarks \ud83d\udcc8": [[2, "running-benchmarks"]], "Comparing Results \ud83d\udcca": [[2, "comparing-results"]], "Benchmarking Versions \ud83d\udcbb": [[2, "benchmarking-versions"]], "Contributing \ud83e\udd1d": [[2, "contributing"]], "Writing Benchmarks \u270f\ufe0f": [[2, "writing-benchmarks"]], "Embrace the Speed! \u23e9": [[2, "embrace-the-speed"]], "\ud83d\udcbb DIPY Coding Style Guideline": [[3, "dipy-coding-style-guideline"]], "Coding style": [[3, "coding-style"]], "Imports": [[3, "imports"], [3, "id1"]], "Cython coding style": [[3, "cython-coding-style"]], "Variable declaration": [[3, "variable-declaration"]], "Using C libraries": [[3, "using-c-libraries"]], "Error return values": [[3, "error-return-values"]], "Pointers and references": [[3, "pointers-and-references"]], "Casting": [[3, "casting"]], "Loops": [[3, "loops"]], "Documentation": [[3, "documentation"], [19, "documentation"]], "References": [[3, "references"], [22, "references"], [24, "references"], [25, "references"], [29, "references"], [31, "references"], [32, "references"], [34, "references"], [35, "references"], [37, "references"], [38, "references"], [39, "references"], [40, "references"], [50, "references"], [51, "references"], [52, "references"], [53, "references"], [54, "references"], [55, "references"], [56, "references"], [58, "references"], [59, "references"], [62, "references"], [66, "references"], [67, "references"], [69, "references"], [70, "references"], [71, "references"], [72, "references"], [73, "references"], [74, "references"], [77, "references"], [78, "references"], [79, "references"], [80, "references"], [81, "references"], [82, "references"], [83, "references"], [84, "references"], [85, "references"], [86, "references"], [87, "references"], [88, "references"], [89, "references"], [90, "references"], [92, "references"], [93, "references"], [94, "references"], [96, "references"], [97, "references"], [98, "references"], [99, "references"], [100, "references"], [104, "references"], [105, "references"], [106, "references"], [108, "references"], [109, "references"], [111, "references"], [112, "references"], [113, "references"], [114, "references"], [116, "references"], [119, "references"], [121, "references"], [123, "references"], [124, "references"], [125, "references"], [126, "references"], [128, "references"], [134, "references"], [146, "references"], [148, "references"], [149, "references"], [151, "references"], [152, "references"], [154, "references"], [155, "references"], [156, "references"], [157, "references"], [163, "references"], [163, "id42"], [163, "id47"], [163, "id55"], [163, "id60"], [163, "id65"], [163, "id71"], [163, "id149"], [163, "id155"], [163, "id160"], [163, "id164"], [163, "id205"], [163, "id230"], [163, "id253"], [163, "id258"], [163, "id262"], [163, "id276"], [163, "id289"], [163, "id292"], [163, "id295"], [163, "id298"], [165, "references"], [165, "id17"], [165, "id52"], [165, "id82"], [165, "id96"], [165, "id140"], [166, "references"], [167, "references"], [167, "id7"], [167, "id25"], [167, "id39"], [167, "id51"], [167, "id58"], [167, "id63"], [167, "id67"], [167, "id72"], [167, "id80"], [167, "id85"], [167, "id89"], [167, "id98"], [167, "id102"], [167, "id110"], [167, "id117"], [168, "references"], [168, "id32"], [169, "references"], [170, "references"], [170, "id30"], [170, "id61"], [171, "references"], [171, "id91"], [171, "id102"], [171, "id114"], [171, "id122"], [171, "id145"], [171, "id150"], [171, "id158"], [171, "id181"], [171, "id194"], [171, "id212"], [171, "id223"], [171, "id230"], [171, "id238"], [171, "id244"], [171, "id250"], [171, "id268"], [171, "id281"], [171, "id293"], [171, "id302"], [171, "id306"], [171, "id311"], [171, "id315"], [171, "id326"], [171, "id332"], [171, "id337"], [171, "id341"], [171, "id344"], [171, "id348"], [171, "id352"], [171, "id356"], [171, "id360"], [171, "id365"], [171, "id370"], [171, "id377"], [171, "id393"], [171, "id416"], [171, "id427"], [171, "id438"], [171, "id447"], [171, "id454"], [171, "id491"], [171, "id504"], [171, "id510"], [171, "id516"], [171, "id526"], [171, "id533"], [171, "id541"], [171, "id570"], [171, "id589"], [171, "id594"], [171, "id606"], [171, "id611"], [171, "id617"], [171, "id630"], [171, "id639"], [171, "id651"], [171, "id679"], [171, "id700"], [171, "id711"], [171, "id716"], [171, "id721"], [171, "id726"], [171, "id730"], [171, "id734"], [171, "id738"], [171, "id743"], [171, "id748"], [171, "id753"], [171, "id758"], [171, "id763"], [171, "id768"], [171, "id773"], [171, "id778"], [171, "id782"], [171, "id786"], [171, "id790"], [171, "id794"], [171, "id798"], [171, "id802"], [171, "id806"], [171, "id810"], [171, "id814"], [171, "id821"], [171, "id829"], [171, "id835"], [171, "id840"], [171, "id845"], [171, "id852"], [171, "id857"], [171, "id862"], [171, "id867"], [171, "id872"], [171, "id879"], [171, "id887"], [171, "id912"], [171, "id915"], [171, "id922"], [171, "id930"], [171, "id938"], [171, "id945"], [171, "id953"], [171, "id959"], [171, "id972"], [171, "id976"], [171, "id980"], [171, "id986"], [171, "id992"], [171, "id997"], [171, "id1002"], [171, "id1008"], [171, "id1014"], [171, "id1018"], [171, "id1021"], [171, "id1027"], [171, "id1029"], [171, "id1031"], [171, "id1033"], [171, "id1035"], [171, "id1037"], [171, "id1039"], [171, "id1041"], [171, "id1043"], [171, "id1046"], [171, "id1049"], [171, "id1053"], [171, "id1059"], [171, "id1123"], [171, "id1185"], [171, "id1189"], [171, "id1194"], [171, "id1204"], [171, "id1224"], [171, "id1231"], [171, "id1238"], [171, "id1245"], [171, "id1257"], [171, "id1265"], [171, "id1276"], [171, "id1279"], [171, "id1284"], [171, "id1288"], [172, "references"], [172, "id15"], [172, "id21"], [172, "id25"], [172, "id28"], [172, "id32"], [172, "id36"], [172, "id69"], [172, "id76"], [172, "id91"], [172, "id96"], [172, "id135"], [172, "id140"], [172, "id164"], [173, "references"], [173, "id20"], [173, "id26"], [173, "id31"], [173, "id39"], [173, "id44"], [173, "id54"], [173, "id60"], [173, "id64"], [173, "id68"], [173, "id77"], [173, "id81"], [173, "id85"], [173, "id89"], [173, "id93"], [173, "id97"], [174, "references"], [174, "id8"], [175, "references"], [175, "id144"], [175, "id217"], [175, "id221"], [175, "id243"], [175, "id264"], [175, "id297"], [175, "id317"], [175, "id320"], [176, "references"], [176, "id3"], [177, "references"], [177, "id12"], [177, "id19"], [177, "id21"], [177, "id25"], [177, "id31"], [177, "id35"], [177, "id53"], [177, "id57"], [177, "id64"], [177, "id67"], [177, "id71"], [177, "id76"], [177, "id79"], [177, "id83"], [177, "id86"], [177, "id90"], [177, "id96"], [177, "id99"], [177, "id102"], [177, "id104"], [177, "id106"], [179, "references"], [180, "references"], [181, "references"], [182, "references"], [183, "references"], [184, "references"], [185, "references"], [186, "references"], [187, "references"], [188, "references"], [189, "references"], [190, "references"], [191, "references"], [192, "references"], [193, "references"], [194, "references"], [195, "references"], [196, "references"], [197, "references"], [198, "references"], [199, "references"], [200, "references"], [201, "references"], [202, "references"], [203, "references"], [204, "references"], [205, "references"], [206, "references"], [207, "references"], [208, "references"], [209, "references"], [210, "references"], [211, "references"], [241, "references"]], "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-git-commit sd-text-info\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M10.5 7.75a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm1.43.75a4.002 4.002 0 01-7.86 0H.75a.75.75 0 110-1.5h3.32a4.001 4.001 0 017.86 0h3.32a.75.75 0 110 1.5h-3.32z\"></path></svg> Commit message codes": [[4, "svg-version-1-1-width-1-0em-height-1-0em-class-sd-octicon-sd-octicon-git-commit-sd-text-info-viewbox-0-0-16-16-aria-hidden-true-path-fill-rule-evenodd-d-m10-5-7-75a2-5-2-5-0-11-5-0-2-5-2-5-0-015-0zm1-43-75a4-002-4-002-0-01-7-86-0h-75a-75-75-0-110-1-5h3-32a4-001-4-001-0-017-86-0h3-32a-75-75-0-110-1-5h-3-32z-path-svg-commit-message-codes"]], "Configure git": [[5, "configure-git"]], "Overview": [[5, "overview"], [6, "overview"], [11, "overview"], [16, "overview"], [17, "overview"], [43, "overview"]], "In detail": [[5, "in-detail"], [11, "in-detail"], [16, "in-detail"], [17, "in-detail"]], "user.name and user.email": [[5, "user-name-and-user-email"]], "Aliases": [[5, "aliases"]], "Editor": [[5, "editor"]], "Merging": [[5, "merging"]], "Fancy log output": [[5, "fancy-log-output"]], "Development workflow": [[6, "development-workflow"]], "Workflow summary": [[6, "workflow-summary"]], "Consider deleting your master branch": [[6, "consider-deleting-your-master-branch"]], "Update the mirror of trunk": [[6, "update-the-mirror-of-trunk"]], "Make a new feature branch": [[6, "make-a-new-feature-branch"]], "The editing workflow": [[6, "the-editing-workflow"]], "In more detail": [[6, "in-more-detail"]], "Ask for your changes to be reviewed or merged": [[6, "ask-for-your-changes-to-be-reviewed-or-merged"]], "Some other things you might want to do": [[6, "some-other-things-you-might-want-to-do"]], "Delete a branch on github": [[6, "delete-a-branch-on-github"]], "Several people sharing a single repository": [[6, "several-people-sharing-a-single-repository"]], "Explore your repository": [[6, "explore-your-repository"]], "Rebasing on trunk": [[6, "rebasing-on-trunk"]], "Recovering from mess-ups": [[6, "recovering-from-mess-ups"]], "Rewriting commit history": [[6, "rewriting-commit-history"]], "Two and three dots in difference specs": [[7, "two-and-three-dots-in-difference-specs"]], "Following the latest source": [[8, "following-the-latest-source"]], "Get the local copy of the code": [[8, "get-the-local-copy-of-the-code"]], "Updating the code": [[8, "updating-the-code"]], "Making your own copy (fork) of DIPY": [[9, "making-your-own-copy-fork-of-dipy"]], "Set up and configure a github account": [[9, "set-up-and-configure-a-github-account"]], "Create your own forked copy of DIPY": [[9, "create-your-own-forked-copy-of-dipy"]], "Git for development": [[10, "git-for-development"]], "Install git": [[11, "install-git"]], "Introduction": [[12, "introduction"], [20, "introduction"]], "git resources": [[13, "git-resources"]], "Tutorials and summaries": [[13, "tutorials-and-summaries"]], "Advanced git workflow": [[13, "advanced-git-workflow"]], "Manual pages online": [[13, "manual-pages-online"]], "Working with DIPY source code": [[14, "working-with-dipy-source-code"]], "Maintainer workflow": [[15, "maintainer-workflow"]], "Integrating changes": [[15, "integrating-changes"]], "A few commits": [[15, "a-few-commits"]], "A long series of commits": [[15, "a-long-series-of-commits"]], "Check the history": [[15, "check-the-history"]], "Push to trunk": [[15, "push-to-trunk"]], "Making a patch": [[16, "making-a-patch"]], "Making patches": [[16, "making-patches"]], "Moving from patching to development": [[16, "moving-from-patching-to-development"]], "Set up your fork": [[17, "set-up-your-fork"]], "Clone your fork": [[17, "clone-your-fork"]], "Linking your repository to the upstream repo": [[17, "linking-your-repository-to-the-upstream-repo"]], "DIPY Developer Guide": [[18, "dipy-developer-guide"]], "Installing from source": [[19, "installing-from-source"]], "Getting the source": [[19, "getting-the-source"]], "Building and installing": [[19, "building-and-installing"], [19, "id1"]], "Install from source (all operating systems - recommended)": [[19, "install-from-source-all-operating-systems-recommended"]], "Install from source for Unix (e.g Linux, macOS)": [[19, "install-from-source-for-unix-e-g-linux-macos"]], "Ubuntu/Debian": [[19, "ubuntu-debian"]], "Fedora / Mandriva maybe Redhat": [[19, "fedora-mandriva-maybe-redhat"]], "Windows": [[19, "windows"], [248, "windows"]], "macOS": [[19, "macos"]], "OpenMP with macOS": [[19, "openmp-with-macos"]], "Under Anaconda": [[19, "under-anaconda"]], "Under Homebrew Python or python.org Python": [[19, "under-homebrew-python-or-python-org-python"]], "Testing": [[19, "testing"]], "Tip": [[19, "tip"]], "Troubleshooting": [[19, "troubleshooting"]], "A guide to making a DIPY release": [[21, "a-guide-to-making-a-dipy-release"]], "Release checklist": [[21, "release-checklist"]], "Doing the release": [[21, "doing-the-release"]], "Uploading binary builds for the release": [[21, "uploading-binary-builds-for-the-release"]], "Other stuff that needs doing for the release": [[21, "other-stuff-that-needs-doing-for-the-release"]], "\ud83d\udee0\ufe0f Toolchain Roadmap": [[22, "toolchain-roadmap"]], "Building DIPY": [[22, "building-dipy"]], "Python Versions": [[22, "python-versions"]], "NumPy": [[22, "numpy"]], "Compilers": [[22, "compilers"]], "Official Builds": [[22, "official-builds"]], "Testing and Benchmarking": [[22, "testing-and-benchmarking"]], "Building the Documentation": [[22, "building-the-documentation"]], "Packaging": [[22, "packaging"]], "Developers": [[23, "developers"]], "Crossing-preserving contextual enhancement": [[24, "crossing-preserving-contextual-enhancement"]], "Fiber to bundle coherence measures": [[25, "fiber-to-bundle-coherence-measures"]], "Acknowledgments": [[25, "acknowledgments"]], "Contextual Enhancement": [[26, "contextual-enhancement"], [44, "contextual-enhancement"]], "Computation times": [[27, "computation-times"], [30, "computation-times"], [42, "computation-times"], [48, "computation-times"], [61, "computation-times"], [65, "computation-times"], [95, "computation-times"], [103, "computation-times"], [115, "computation-times"], [117, "computation-times"], [120, "computation-times"], [129, "computation-times"], [133, "computation-times"], [140, "computation-times"], [234, "computation-times"]], "Fiber Tracking": [[28, "fiber-tracking"], [44, "fiber-tracking"]], "Linear fascicle evaluation (LiFE)": [[29, "linear-fascicle-evaluation-life"]], "Surface seeding for tractography": [[31, "surface-seeding-for-tractography"]], "Display the surface": [[31, "display-the-surface"]], "Generate a list of seeding positions": [[31, "generate-a-list-of-seeding-positions"]], "Bootstrap and Closest Peak Direction Getters Example": [[32, "bootstrap-and-closest-peak-direction-getters-example"]], "Example #1: Bootstrap direction getter with CSD Model": [[32, "example-1-bootstrap-direction-getter-with-csd-model"]], "Example #2: Closest peak direction getter with CSD Model": [[32, "example-2-closest-peak-direction-getter-with-csd-model"]], "An introduction to the Deterministic Maximum Direction Getter": [[33, "an-introduction-to-the-deterministic-maximum-direction-getter"]], "Introduction to Basic Tracking": [[34, "introduction-to-basic-tracking"], [66, "introduction-to-basic-tracking"]], "Step 1: Getting directions from a diffusion dataset": [[34, "step-1-getting-directions-from-a-diffusion-dataset"], [66, "step-1-getting-directions-from-a-diffusion-dataset"]], "Step 2: Identifying when the tracking must stop": [[34, "step-2-identifying-when-the-tracking-must-stop"], [66, "step-2-identifying-when-the-tracking-must-stop"]], "Step 3: Defining a set of seeds from which to begin tracking": [[34, "step-3-defining-a-set-of-seeds-from-which-to-begin-tracking"], [66, "step-3-defining-a-set-of-seeds-from-which-to-begin-tracking"]], "Particle Filtering Tractography": [[35, "particle-filtering-tractography"], [35, "id4"]], "CMC/ACT Stopping Criterion": [[35, "cmc-act-stopping-criterion"]], "An introduction to the Probabilistic Direction Getter": [[36, "an-introduction-to-the-probabilistic-direction-getter"]], "Parallel Transport Tractography": [[37, "parallel-transport-tractography"]], "Tracking with Robust Unbiased Model-BAsed Spherical Deconvolution (RUMBA-SD)": [[38, "tracking-with-robust-unbiased-model-based-spherical-deconvolution-rumba-sd"]], "Tracking with the Sparse Fascicle Model": [[39, "tracking-with-the-sparse-fascicle-model"]], "Using Various Stopping Criterion for Tractography": [[40, "using-various-stopping-criterion-for-tractography"]], "Threshold Stopping Criterion": [[40, "threshold-stopping-criterion"]], "Binary Stopping Criterion": [[40, "binary-stopping-criterion"]], "ACT Stopping Criterion": [[40, "act-stopping-criterion"]], "Notes": [[40, "notes"], [163, "notes"], [163, "id8"], [163, "id11"], [163, "id16"], [163, "id54"], [163, "id88"], [163, "id108"], [163, "id116"], [163, "id119"], [163, "id124"], [163, "id165"], [163, "id209"], [163, "id211"], [163, "id215"], [163, "id219"], [163, "id223"], [163, "id227"], [163, "id237"], [163, "id248"], [163, "id256"], [163, "id283"], [163, "id286"], [163, "id308"], [163, "id333"], [163, "id336"], [163, "id345"], [163, "id348"], [163, "id353"], [163, "id356"], [163, "id359"], [163, "id362"], [163, "id365"], [163, "id368"], [163, "id371"], [163, "id374"], [165, "notes"], [165, "id28"], [165, "id47"], [165, "id55"], [165, "id70"], [165, "id74"], [165, "id78"], [165, "id91"], [165, "id95"], [165, "id118"], [165, "id168"], [165, "id176"], [165, "id181"], [165, "id186"], [165, "id191"], [166, "notes"], [166, "id15"], [166, "id19"], [166, "id43"], [166, "id48"], [166, "id51"], [166, "id67"], [166, "id71"], [167, "notes"], [167, "id24"], [167, "id71"], [167, "id77"], [167, "id94"], [168, "notes"], [168, "id12"], [168, "id18"], [169, "notes"], [169, "id23"], [169, "id70"], [169, "id73"], [171, "notes"], [171, "id90"], [171, "id118"], [171, "id121"], [171, "id143"], [171, "id149"], [171, "id154"], [171, "id157"], [171, "id190"], [171, "id210"], [171, "id219"], [171, "id229"], [171, "id234"], [171, "id264"], [171, "id277"], [171, "id291"], [171, "id310"], [171, "id314"], [171, "id330"], [171, "id335"], [171, "id339"], [171, "id346"], [171, "id350"], [171, "id354"], [171, "id358"], [171, "id363"], [171, "id375"], [171, "id411"], [171, "id413"], [171, "id426"], [171, "id434"], [171, "id437"], [171, "id441"], [171, "id446"], [171, "id450"], [171, "id453"], [171, "id457"], [171, "id460"], [171, "id471"], [171, "id474"], [171, "id477"], [171, "id480"], [171, "id483"], [171, "id489"], [171, "id497"], [171, "id503"], [171, "id509"], [171, "id515"], [171, "id519"], [171, "id525"], [171, "id532"], [171, "id545"], [171, "id552"], [171, "id557"], [171, "id574"], [171, "id620"], [171, "id628"], [171, "id645"], [171, "id650"], [171, "id656"], [171, "id902"], [171, "id905"], [171, "id908"], [171, "id920"], [171, "id928"], [171, "id936"], [171, "id943"], [171, "id951"], [171, "id1070"], [171, "id1072"], [171, "id1076"], [171, "id1078"], [171, "id1080"], [171, "id1082"], [171, "id1085"], [171, "id1088"], [171, "id1091"], [171, "id1094"], [171, "id1097"], [171, "id1100"], [171, "id1115"], [171, "id1158"], [171, "id1174"], [172, "notes"], [172, "id40"], [172, "id45"], [172, "id81"], [172, "id101"], [172, "id113"], [172, "id116"], [172, "id119"], [172, "id121"], [172, "id134"], [172, "id139"], [172, "id154"], [172, "id173"], [172, "id176"], [172, "id179"], [172, "id181"], [173, "notes"], [173, "id12"], [173, "id17"], [173, "id52"], [173, "id58"], [174, "notes"], [175, "notes"], [175, "id17"], [175, "id24"], [175, "id28"], [175, "id32"], [175, "id39"], [175, "id42"], [175, "id45"], [175, "id48"], [175, "id67"], [175, "id71"], [175, "id88"], [175, "id102"], [175, "id112"], [175, "id116"], [175, "id119"], [175, "id131"], [175, "id137"], [175, "id190"], [175, "id235"], [175, "id237"], [175, "id251"], [175, "id262"], [175, "id274"], [175, "id281"], [175, "id312"], [176, "notes"], [176, "id17"], [176, "id19"], [176, "id21"], [176, "id23"], [176, "id26"], [176, "id44"], [177, "notes"]], "File Formats": [[41, "file-formats"], [44, "file-formats"]], "Read/Write streamline files": [[43, "read-write-streamline-files"]], "Examples": [[44, "examples"], [163, "examples"], [163, "id184"], [165, "examples"], [165, "id10"], [165, "id13"], [165, "id16"], [165, "id21"], [165, "id25"], [165, "id31"], [165, "id34"], [165, "id37"], [165, "id42"], [165, "id69"], [165, "id73"], [165, "id77"], [165, "id92"], [165, "id98"], [165, "id122"], [165, "id123"], [165, "id126"], [165, "id139"], [165, "id144"], [165, "id147"], [165, "id150"], [165, "id177"], [165, "id182"], [165, "id187"], [165, "id192"], [165, "id199"], [165, "id202"], [166, "examples"], [166, "id7"], [166, "id10"], [166, "id28"], [166, "id42"], [167, "examples"], [169, "examples"], [169, "id17"], [169, "id21"], [171, "examples"], [171, "id546"], [171, "id553"], [171, "id558"], [171, "id623"], [171, "id707"], [171, "id1106"], [171, "id1119"], [171, "id1171"], [171, "id1301"], [173, "examples"], [173, "id9"], [173, "id13"], [173, "id23"], [173, "id49"], [173, "id53"], [173, "id74"], [175, "examples"], [175, "id18"], [175, "id19"], [175, "id25"], [175, "id29"], [175, "id33"], [175, "id38"], [175, "id53"], [175, "id56"], [175, "id59"], [175, "id62"], [175, "id82"], [175, "id85"], [175, "id89"], [175, "id92"], [175, "id95"], [175, "id98"], [175, "id103"], [175, "id111"], [175, "id115"], [175, "id130"], [175, "id166"], [175, "id171"], [175, "id176"], [175, "id179"], [175, "id184"], [175, "id187"], [175, "id193"], [175, "id197"], [175, "id200"], [175, "id203"], [175, "id206"], [175, "id209"], [175, "id214"], [175, "id240"], [175, "id246"], [175, "id261"], [175, "id268"], [175, "id271"], [175, "id278"], [175, "id282"], [175, "id286"], [175, "id290"], [175, "id323"], [175, "id326"], [176, "examples"]], "Contents": [[44, "contents"]], "Quick Start": [[44, "quick-start"], [63, "quick-start"]], "Preprocessing": [[44, "preprocessing"], [57, "preprocessing"]], "Reconstruction": [[44, "reconstruction"], [68, "reconstruction"], [155, "reconstruction"]], "Reconstruction methods available in DIPY": [[44, "id2"], [161, "id1"]], "Streamlines Analysis and Connectivity": [[44, "streamlines-analysis-and-connectivity"], [127, "streamlines-analysis-and-connectivity"]], "Registration": [[44, "registration"], [101, "registration"], [156, "registration"]], "Segmentation": [[44, "segmentation"], [110, "segmentation"]], "Simulation": [[44, "simulation"], [118, "simulation"]], "Multiprocessing": [[44, "multiprocessing"], [45, "multiprocessing"]], "Visualization": [[44, "visualization"], [132, "visualization"]], "Workflows": [[44, "workflows"], [139, "workflows"]], "Parallel reconstruction using Q-Ball": [[46, "parallel-reconstruction-using-q-ball"]], "Parallel reconstruction using CSD": [[47, "parallel-reconstruction-using-csd"]], "Brain segmentation with median_otsu": [[49, "brain-segmentation-with-median-otsu"], [107, "brain-segmentation-with-median-otsu"]], "Denoise images using Adaptive Soft Coefficient Matching (ASCM)": [[50, "denoise-images-using-adaptive-soft-coefficient-matching-ascm"]], "Suppress Gibbs oscillations": [[51, "suppress-gibbs-oscillations"]], "Denoise images using Local PCA via empirical thresholds": [[52, "denoise-images-using-local-pca-via-empirical-thresholds"]], "Estimate the noise standard deviation": [[52, "estimate-the-noise-standard-deviation"]], "Perform the localPCA using the function localpca": [[52, "perform-the-localpca-using-the-function-localpca"]], "Denoise images using the Marcenko-Pastur PCA algorithm": [[53, "denoise-images-using-the-marcenko-pastur-pca-algorithm"]], "Noise standard deviation estimation using the Marchenko-Pastur PCA algorithm": [[53, "noise-standard-deviation-estimation-using-the-marchenko-pastur-pca-algorithm"]], "Denoise images using Non-Local Means (NLMEANS)": [[54, "denoise-images-using-non-local-means-nlmeans"]], "Patch2Self: Self-Supervised Denoising via Statistical Independence": [[55, "patch2self-self-supervised-denoising-via-statistical-independence"]], "Gradients and Spheres": [[56, "gradients-and-spheres"]], "Between-volumes Motion Correction on DWI datasets": [[58, "between-volumes-motion-correction-on-dwi-datasets"]], "Noise estimation using PIESNO": [[59, "noise-estimation-using-piesno"]], "Reslice diffusion datasets": [[60, "reslice-diffusion-datasets"]], "SNR estimation for Diffusion-Weighted Images": [[62, "snr-estimation-for-diffusion-weighted-images"]], "Getting started with DIPY": [[64, "getting-started-with-dipy"]], "Local reconstruction using the Histological ResDNN": [[67, "local-reconstruction-using-the-histological-resdnn"]], "K-fold cross-validation for model comparison": [[69, "k-fold-cross-validation-for-model-comparison"]], "Reconstruct with Constant Solid Angle (Q-Ball)": [[70, "reconstruct-with-constant-solid-angle-q-ball"]], "Reconstruction with Constrained Spherical Deconvolution": [[71, "reconstruction-with-constrained-spherical-deconvolution"]], "Step 1. Estimation of the fiber response function": [[71, "step-1-estimation-of-the-fiber-response-function"], [89, "step-1-estimation-of-the-fiber-response-function"]], "Step 2. fODF reconstruction": [[71, "step-2-fodf-reconstruction"]], "Reconstruction of the diffusion signal with the correlation tensor model": [[72, "reconstruction-of-the-diffusion-signal-with-the-correlation-tensor-model"]], "Reconstruction of the diffusion signal with the kurtosis tensor model": [[73, "reconstruction-of-the-diffusion-signal-with-the-kurtosis-tensor-model"]], "Constrained optimization for DKI": [[73, "constrained-optimization-for-dki"]], "Mean kurtosis tensor and kurtosis fractional anisotropy": [[73, "mean-kurtosis-tensor-and-kurtosis-fractional-anisotropy"]], "Reconstruction of the diffusion signal with the WMTI model": [[74, "reconstruction-of-the-diffusion-signal-with-the-wmti-model"]], "Reconstruct with Diffusion Spectrum Imaging": [[75, "reconstruct-with-diffusion-spectrum-imaging"]], "Calculate DSI-based scalar maps": [[76, "calculate-dsi-based-scalar-maps"]], "DSI Deconvolution vs DSI": [[77, "dsi-deconvolution-vs-dsi"], [119, "dsi-deconvolution-vs-dsi"]], "Reconstruction of the diffusion signal with the Tensor model": [[78, "reconstruction-of-the-diffusion-signal-with-the-tensor-model"]], "Crossing invariant fiber response function with FORECAST model": [[79, "crossing-invariant-fiber-response-function-with-forecast-model"]], "Using the free water elimination model to remove DTI free water contamination": [[80, "using-the-free-water-elimination-model-to-remove-dti-free-water-contamination"]], "Reconstruct with Generalized Q-Sampling Imaging": [[81, "reconstruct-with-generalized-q-sampling-imaging"]], "Intravoxel incoherent motion": [[82, "intravoxel-incoherent-motion"]], "Continuous and analytical diffusion signal modelling with MAP-MRI": [[83, "continuous-and-analytical-diffusion-signal-modelling-with-map-mri"]], "Reconstruction with Multi-Shell Multi-Tissue CSD": [[84, "reconstruction-with-multi-shell-multi-tissue-csd"]], "Mean signal diffusion kurtosis imaging (MSDKI)": [[85, "mean-signal-diffusion-kurtosis-imaging-msdki"]], "Testing MSDKI in synthetic data": [[85, "testing-msdki-in-synthetic-data"]], "Reconstructing diffusion data using MSDKI": [[85, "reconstructing-diffusion-data-using-msdki"]], "Relationship between MSDKI and SMT2": [[85, "relationship-between-msdki-and-smt2"]], "Estimating diffusion time dependent q-space indices using qt-dMRI": [[86, "estimating-diffusion-time-dependent-q-space-indices-using-qt-dmri"]], "Reconstruct with Q-space Trajectory Imaging (QTI)": [[87, "reconstruct-with-q-space-trajectory-imaging-qti"]], "Theory": [[87, "theory"], [88, "theory"]], "Usage example": [[87, "usage-example"], [88, "usage-example"]], "Applying positivity constraints to Q-space Trajectory Imaging (QTI+)": [[88, "applying-positivity-constraints-to-q-space-trajectory-imaging-qti"]], "Installation": [[88, "installation"], [248, "installation"]], "Reconstruction with Robust and Unbiased Model-BAsed Spherical Deconvolution": [[89, "reconstruction-with-robust-and-unbiased-model-based-spherical-deconvolution"]], "Step 2. fODF Reconstruction": [[89, "step-2-fodf-reconstruction"]], "Reconstruction with the Sparse Fascicle Model": [[90, "reconstruction-with-the-sparse-fascicle-model"]], "Signal Reconstruction Using Spherical Harmonics": [[91, "signal-reconstruction-using-spherical-harmonics"]], "Continuous and analytical diffusion signal modelling with 3D-SHORE": [[92, "continuous-and-analytical-diffusion-signal-modelling-with-3d-shore"]], "Calculate SHORE scalar maps": [[93, "calculate-shore-scalar-maps"]], "Using the RESTORE algorithm for robust tensor fitting": [[94, "using-the-restore-algorithm-for-robust-tensor-fitting"]], "Affine Registration in 3D": [[96, "affine-registration-in-3d"]], "Affine Registration with Masks": [[97, "affine-registration-with-masks"]], "Groupwise Bundle Registration": [[98, "groupwise-bundle-registration"]], "How it works": [[98, "how-it-works"]], "Example": [[98, "example"]], "Extended capabilities": [[98, "extended-capabilities"]], "Direct Bundle Registration": [[99, "direct-bundle-registration"]], "Nonrigid Bundle Registration with BundleWarp": [[100, "nonrigid-bundle-registration-with-bundlewarp"]], "Diffeomorphic Registration with binary and fuzzy images": [[102, "diffeomorphic-registration-with-binary-and-fuzzy-images"]], "Applying image-based deformations to streamlines": [[104, "applying-image-based-deformations-to-streamlines"]], "Symmetric Diffeomorphic Registration in 2D": [[105, "symmetric-diffeomorphic-registration-in-2d"]], "Symmetric Diffeomorphic Registration in 3D": [[106, "symmetric-diffeomorphic-registration-in-3d"]], "Automatic Fiber Bundle Extraction with RecoBundles": [[108, "automatic-fiber-bundle-extraction-with-recobundles"]], "Fast Streamline Search": [[109, "fast-streamline-search"]], "Tractography Clustering - Available Features": [[111, "tractography-clustering-available-features"]], "Available Features": [[111, "available-features"]], "Identity Feature": [[111, "clustering-examples-identityfeature"]], "Resample Feature": [[111, "resample-feature"]], "Center of Mass Feature": [[111, "center-of-mass-feature"]], "Midpoint Feature": [[111, "midpoint-feature"]], "ArcLength Feature": [[111, "arclength-feature"]], "Vector Between Endpoints Feature": [[111, "vector-between-endpoints-feature"]], "Tractography Clustering - Available Metrics": [[112, "tractography-clustering-available-metrics"]], "Available Metrics": [[112, "available-metrics"]], "Average of Pointwise Euclidean Metric": [[112, "average-of-pointwise-euclidean-metric"]], "Sum of Pointwise Euclidean Metric": [[112, "sum-of-pointwise-euclidean-metric"]], "Cosine Metric": [[112, "cosine-metric"]], "Enhancing QuickBundles with different metrics and features": [[113, "enhancing-quickbundles-with-different-metrics-and-features"]], "Clustering framework": [[113, "clustering-framework"]], "Extending Feature": [[113, "extending-feature"]], "Extending Metric": [[113, "extending-metric"]], "Tractography Clustering with QuickBundles": [[114, "tractography-clustering-with-quickbundles"]], "Tissue Classification of a T1-weighted Structural Image": [[116, "tissue-classification-of-a-t1-weighted-structural-image"]], "DKI MultiTensor Simulation": [[121, "dki-multitensor-simulation"]], "MultiTensor Simulation": [[122, "multitensor-simulation"]], "Extracting AFQ tract profiles from segmented bundles": [[123, "extracting-afq-tract-profiles-from-segmented-bundles"]], "BUAN Bundle Assignment Maps Creation": [[124, "buan-bundle-assignment-maps-creation"]], "BUAN Bundle Shape Similarity Score": [[125, "buan-bundle-shape-similarity-score"]], "Calculation of Outliers with Cluster Confidence Index": [[126, "calculation-of-outliers-with-cluster-confidence-index"]], "Calculate Path Length Map": [[128, "calculate-path-length-map"]], "Streamline length and size reduction": [[130, "streamline-length-and-size-reduction"]], "Connectivity Matrices, ROI Intersections and Density Maps": [[131, "connectivity-matrices-roi-intersections-and-density-maps"]], "Advanced interactive visualization": [[134, "advanced-interactive-visualization"]], "Visualize bundles and metrics on bundles": [[135, "visualize-bundles-and-metrics-on-bundles"]], "Show every streamline with an orientation color": [[135, "show-every-streamline-with-an-orientation-color"]], "Show every point with a value from a volume with default colormap": [[135, "show-every-point-with-a-value-from-a-volume-with-default-colormap"]], "Show every point with a value from a volume with your colormap": [[135, "show-every-point-with-a-value-from-a-volume-with-your-colormap"]], "Show every bundle with a specific color": [[135, "show-every-bundle-with-a-specific-color"]], "Show every streamline of a bundle with a different color": [[135, "show-every-streamline-of-a-bundle-with-a-different-color"]], "Visualization of ROI Surface Rendered with Streamlines": [[136, "visualization-of-roi-surface-rendered-with-streamlines"]], "Simple volume slicing": [[137, "simple-volume-slicing"]], "Render slices from T1 with a specific value range": [[137, "render-slices-from-t1-with-a-specific-value-range"]], "Render slices from FA with your colormap": [[137, "render-slices-from-fa-with-your-colormap"]], "Create a mosaic": [[137, "create-a-mosaic"]], "Creating a new combined workflow": [[138, "creating-a-new-combined-workflow"]], "Creating a new workflow.": [[141, "creating-a-new-workflow"]], "Frequently Asked Questions": [[142, "frequently-asked-questions"]], "Theoretical": [[142, "theoretical"]], "Practical": [[142, "practical"]], "Gimbal lock": [[143, "gimbal-lock"]], "Mathematics of gimbal lock": [[143, "mathematics-of-gimbal-lock"]], "Glossary": [[144, "glossary"]], "Diffusion Imaging In Python - Documentation": [[145, "diffusion-imaging-in-python-documentation"]], "Quick links": [[145, "quick-links"]], "Highlights": [[145, "highlights"]], "Announcements": [[145, "announcements"]], "Support": [[145, "support"], [248, "support"]], "Introduction to command line interfaces": [[146, "introduction-to-command-line-interfaces"]], "BUndle ANalytics (BUAN) framework": [[147, "bundle-analytics-buan-framework"]], "Group Comparison of Bundle Profiles": [[147, "group-comparison-of-bundle-profiles"]], "Shape similarity of specific bundles across the populations": [[147, "shape-similarity-of-specific-bundles-across-the-populations"]], "Reproducing results on larger dataset:": [[147, "reproducing-results-on-larger-dataset"]], "White Matter Bundle Segmentation with RecoBundles": [[148, "white-matter-bundle-segmentation-with-recobundles"]], "Streamline-Based Linear Registration": [[148, "streamline-based-linear-registration"]], "RecoBundles": [[148, "recobundles"], [172, "recobundles"]], "Nonrigid White Matter Bundle Registration with BundleWarp": [[149, "nonrigid-white-matter-bundle-registration-with-bundlewarp"]], "Partially Deformable BundleWarp Registration": [[149, "partially-deformable-bundlewarp-registration"]], "Fully Deformable BundleWarp Registration": [[149, "fully-deformable-bundlewarp-registration"]], "Downloading DIPY datasets": [[150, "downloading-dipy-datasets"]], "Denoising": [[151, "denoising"]], "Denoising using Overcomplete Local PCA": [[151, "denoising-using-overcomplete-local-pca"]], "Denoising using Marcenko-Pastur PCA": [[151, "denoising-using-marcenko-pastur-pca"]], "Denoising using NLMEANS": [[151, "denoising-using-nlmeans"]], "Overview of Denoising Methods": [[151, "overview-of-denoising-methods"]], "Diffusion": [[151, "diffusion"]], "Structural": [[151, "structural"]], "Gibbs Unringing": [[152, "gibbs-unringing"]], "Suppress Gibbs Oscillations": [[152, "suppress-gibbs-oscillations"]], "DIPY Workflows Interfaces": [[153, "dipy-workflows-interfaces"]], "Between-Volumes Motion Correction": [[154, "between-volumes-motion-correction"]], "Motion Correction": [[154, "motion-correction"]], "Constrained Spherical Deconvolution (CSD)": [[155, "constrained-spherical-deconvolution-csd"]], "Mean Apparent Propagator (MAP)-MRI": [[155, "mean-apparent-propagator-map-mri"]], "Diffusion Tensor Imaging (DTI)": [[155, "diffusion-tensor-imaging-dti"]], "Diffusion Kurtosis Imaging (DKI)": [[155, "diffusion-kurtosis-imaging-dki"]], "Constant Solid Angle (CSA)": [[155, "constant-solid-angle-csa"]], "Intravoxel Incoherent Motion (IVIM)": [[155, "intravoxel-incoherent-motion-ivim"]], "Image Registration": [[156, "image-registration"]], "Symmetric Diffeomorphic Registration": [[156, "symmetric-diffeomorphic-registration"]], "Apply a Transformation": [[156, "apply-a-transformation"]], "Streamline-based Registration": [[156, "streamline-based-registration"]], "Tracking": [[157, "tracking"]], "Local Fiber Tracking": [[157, "local-fiber-tracking"]], "EuDX Tracking": [[157, "eudx-tracking"]], "Deterministic Tracking": [[157, "deterministic-tracking"]], "Probabilistic Tracking": [[157, "probabilistic-tracking"]], "Closest Peaks Tracking": [[157, "closest-peaks-tracking"]], "Particle Filtering Tracking (PFT)": [[157, "particle-filtering-tracking-pft"]], "Overview of Fiber Tracking Methods": [[157, "overview-of-fiber-tracking-methods"]], "Older Highlights": [[158, "older-highlights"]], "Past Announcements": [[159, "past-announcements"]], "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-mortar-board\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.693 1.066a.75.75 0 01.614 0l7.25 3.25a.75.75 0 010 1.368L13 6.831v2.794c0 1.024-.81 1.749-1.66 2.173-.893.447-2.075.702-3.34.702-.278 0-.55-.012-.816-.036a.75.75 0 01.133-1.494c.22.02.45.03.683.03 1.082 0 2.025-.221 2.67-.543.69-.345.83-.682.83-.832V7.503L8.307 8.934a.75.75 0 01-.614 0L4 7.28v1.663c.296.105.575.275.812.512.438.438.688 1.059.688 1.796v3a.75.75 0 01-.75.75h-3a.75.75 0 01-.75-.75v-3c0-.737.25-1.358.688-1.796.237-.237.516-.407.812-.512V6.606L.443 5.684a.75.75 0 010-1.368l7.25-3.25zM2.583 5L8 7.428 13.416 5 8 2.572 2.583 5zM2.5 11.25c0-.388.125-.611.25-.735a.704.704 0 01.5-.203c.19 0 .37.071.5.203.125.124.25.347.25.735v2.25H2.5v-2.25z\"></path></svg> Recipes": [[160, "svg-version-1-1-width-1-0em-height-1-0em-class-sd-octicon-sd-octicon-mortar-board-viewbox-0-0-16-16-aria-hidden-true-path-fill-rule-evenodd-d-m7-693-1-066a-75-75-0-01-614-0l7-25-3-25a-75-75-0-010-1-368l13-6-831v2-794c0-1-024-81-1-749-1-66-2-173-893-447-2-075-702-3-34-702-278-0-55-012-816-036a-75-75-0-01-133-1-494c-22-02-45-03-683-03-1-082-0-2-025-221-2-67-543-69-345-83-682-83-832v7-503l8-307-8-934a-75-75-0-01-614-0l4-7-28v1-663c-296-105-575-275-812-512-438-438-688-1-059-688-1-796v3a-75-75-0-01-75-75h-3a-75-75-0-01-75-75v-3c0-737-25-1-358-688-1-796-237-237-516-407-812-512v6-606l-443-5-684a-75-75-0-010-1-368l7-25-3-25zm2-583-5l8-7-428-13-416-5-8-2-572-2-583-5zm2-5-11-25c0-388-125-611-25-735a-704-704-0-01-5-203c-19-0-37-071-5-203-125-124-25-347-25-735v2-25h2-5v-2-25z-path-svg-recipes"]], "dipy": [[162, "module-dipy"]], "Diffusion Imaging in Python": [[162, "diffusion-imaging-in-python"]], "Subpackages": [[162, "subpackages"]], "Utilities": [[162, "utilities"]], "get_info": [[162, "get-info"]], "align": [[163, "module-dipy.align"]], "Module: align._public": [[163, "module-dipy.align._public"]], "Module: align.bundlemin": [[163, "module-dipy.align.bundlemin"]], "Module: align.cpd": [[163, "module-dipy.align.cpd"]], "Note": [[163, "note"]], "Module: align.crosscorr": [[163, "module-dipy.align.crosscorr"]], "Module: align.expectmax": [[163, "module-dipy.align.expectmax"]], "Module: align.imaffine": [[163, "module-dipy.align.imaffine"]], "Module: align.imwarp": [[163, "module-dipy.align.imwarp"]], "Module: align.metrics": [[163, "module-dipy.align.metrics"]], "Module: align.parzenhist": [[163, "module-dipy.align.parzenhist"]], "Module: align.reslice": [[163, "module-dipy.align.reslice"]], "Module: align.scalespace": [[163, "module-dipy.align.scalespace"]], "Module: align.streamlinear": [[163, "module-dipy.align.streamlinear"]], "Module: align.streamwarp": [[163, "module-dipy.align.streamwarp"]], "Module: align.sumsqdiff": [[163, "module-dipy.align.sumsqdiff"]], "Module: align.transforms": [[163, "module-dipy.align.transforms"]], "Module: align.vector_fields": [[163, "module-dipy.align.vector_fields"]], "Bunch": [[163, "bunch"]], "VerbosityLevels": [[163, "verbositylevels"]], "syn_registration": [[163, "syn-registration"]], "Parameters": [[163, "parameters"], [163, "id5"], [163, "id7"], [163, "id9"], [163, "id12"], [163, "id14"], [163, "id19"], [163, "id21"], [163, "id23"], [163, "id25"], [163, "id27"], [163, "id28"], [163, "id31"], [163, "id33"], [163, "id35"], [163, "id37"], [163, "id40"], [163, "id45"], [163, "id52"], [163, "id58"], [163, "id63"], [163, "id69"], [163, "id72"], [163, "id74"], [163, "id76"], [163, "id78"], [163, "id80"], [163, "id82"], [163, "id83"], [163, "id85"], [163, "id87"], [163, "id89"], [163, "id91"], [163, "id93"], [163, "id95"], [163, "id96"], [163, "id100"], [163, "id102"], [163, "id104"], [163, "id106"], [163, "id109"], [163, "id110"], [163, "id114"], [163, "id117"], [163, "id120"], [163, "id121"], [163, "id122"], [163, "id125"], [163, "id126"], [163, "id127"], [163, "id128"], [163, "id130"], [163, "id132"], [163, "id134"], [163, "id136"], [163, "id137"], [163, "id138"], [163, "id139"], [163, "id140"], [163, "id141"], [163, "id142"], [163, "id143"], [163, "id144"], [163, "id145"], [163, "id147"], [163, "id150"], [163, "id151"], [163, "id152"], [163, "id153"], [163, "id156"], [163, "id158"], [163, "id161"], [163, "id163"], [163, "id166"], [163, "id168"], [163, "id170"], [163, "id172"], [163, "id173"], [163, "id174"], [163, "id175"], [163, "id176"], [163, "id177"], [163, "id178"], [163, "id179"], [163, "id180"], [163, "id182"], [163, "id185"], [163, "id187"], [163, "id189"], [163, "id191"], [163, "id193"], [163, "id195"], [163, "id197"], [163, "id199"], [163, "id201"], [163, "id202"], [163, "id204"], [163, "id206"], [163, "id207"], [163, "id208"], [163, "id212"], [163, "id213"], [163, "id214"], [163, "id216"], [163, "id217"], [163, "id220"], [163, "id221"], [163, "id224"], [163, "id225"], [163, "id226"], [163, "id229"], [163, "id232"], [163, "id234"], [163, "id235"], [163, "id238"], [163, "id239"], [163, "id242"], [163, "id244"], [163, "id246"], [163, "id249"], [163, "id252"], [163, "id255"], [163, "id261"], [163, "id265"], [163, "id266"], [163, "id268"], [163, "id270"], [163, "id272"], [163, "id274"], [163, "id277"], [163, "id279"], [163, "id281"], [163, "id284"], [163, "id287"], [163, "id290"], [163, "id293"], [163, "id296"], [163, "id300"], [163, "id302"], [163, "id304"], [163, "id306"], [163, "id309"], [163, "id311"], [163, "id313"], [163, "id315"], [163, "id317"], [163, "id319"], [163, "id321"], [163, "id323"], [163, "id325"], [163, "id327"], [163, "id329"], [163, "id331"], [163, "id334"], [163, "id337"], [163, "id338"], [163, "id339"], [163, "id341"], [163, "id343"], [163, "id346"], [163, "id349"], [163, "id351"], [163, "id354"], [163, "id357"], [163, "id360"], [163, "id363"], [163, "id366"], [163, "id369"], [163, "id372"], [163, "id375"], [163, "id376"], [165, "parameters"], [165, "id6"], [165, "id8"], [165, "id11"], [165, "id14"], [165, "id19"], [165, "id22"], [165, "id26"], [165, "id29"], [165, "id32"], [165, "id35"], [165, "id38"], [165, "id40"], [165, "id43"], [165, "id45"], [165, "id48"], [165, "id50"], [165, "id53"], [165, "id56"], [165, "id58"], [165, "id60"], [165, "id62"], [165, "id67"], [165, "id71"], [165, "id75"], [165, "id80"], [165, "id83"], [165, "id85"], [165, "id87"], [165, "id89"], [165, "id93"], [165, "id99"], [165, "id101"], [165, "id104"], [165, "id106"], [165, "id108"], [165, "id110"], [165, "id112"], [165, "id114"], [165, "id116"], [165, "id119"], [165, "id121"], [165, "id124"], [165, "id125"], [165, "id127"], [165, "id129"], [165, "id131"], [165, "id133"], [165, "id135"], [165, "id137"], [165, "id141"], [165, "id142"], [165, "id145"], [165, "id148"], [165, "id151"], [165, "id152"], [165, "id154"], [165, "id156"], [165, "id158"], [165, "id160"], [165, "id162"], [165, "id164"], [165, "id166"], [165, "id169"], [165, "id171"], [165, "id173"], [165, "id178"], [165, "id183"], [165, "id188"], [165, "id193"], [165, "id194"], [165, "id195"], [165, "id197"], [165, "id200"], [165, "id203"], [165, "id205"], [165, "id207"], [165, "id209"], [165, "id211"], [165, "id213"], [165, "id215"], [165, "id217"], [166, "parameters"], [166, "id5"], [166, "id8"], [166, "id11"], [166, "id12"], [166, "id17"], [166, "id21"], [166, "id22"], [166, "id26"], [166, "id38"], [166, "id40"], [166, "id47"], [166, "id49"], [166, "id62"], [166, "id65"], [166, "id69"], [167, "parameters"], [167, "id3"], [167, "id4"], [167, "id6"], [167, "id8"], [167, "id10"], [167, "id11"], [167, "id13"], [167, "id14"], [167, "id16"], [167, "id18"], [167, "id20"], [167, "id22"], [167, "id27"], [167, "id29"], [167, "id31"], [167, "id33"], [167, "id35"], [167, "id44"], [167, "id55"], [167, "id61"], [167, "id64"], [167, "id65"], [167, "id68"], [167, "id69"], [167, "id75"], [167, "id83"], [167, "id87"], [167, "id90"], [167, "id100"], [167, "id103"], [167, "id106"], [167, "id107"], [167, "id114"], [168, "parameters"], [168, "id1"], [168, "id2"], [168, "id4"], [168, "id6"], [168, "id7"], [168, "id10"], [168, "id13"], [168, "id16"], [168, "id19"], [168, "id25"], [168, "id27"], [168, "id29"], [168, "id30"], [169, "parameters"], [169, "id3"], [169, "id4"], [169, "id5"], [169, "id7"], [169, "id10"], [169, "id12"], [169, "id13"], [169, "id15"], [169, "id16"], [169, "id19"], [169, "id22"], [169, "id25"], [169, "id27"], [169, "id29"], [169, "id30"], [169, "id32"], [169, "id34"], [169, "id36"], [169, "id38"], [169, "id40"], [169, "id42"], [169, "id44"], [169, "id46"], [169, "id48"], [169, "id50"], [169, "id52"], [169, "id54"], [169, "id56"], [169, "id58"], [169, "id60"], [169, "id62"], [169, "id64"], [169, "id66"], [169, "id68"], [169, "id71"], [169, "id74"], [169, "id76"], [169, "id78"], [169, "id80"], [169, "id82"], [169, "id83"], [169, "id85"], [169, "id87"], [169, "id88"], [169, "id89"], [170, "parameters"], [170, "id1"], [170, "id2"], [170, "id3"], [170, "id5"], [170, "id6"], [170, "id8"], [170, "id10"], [170, "id20"], [170, "id22"], [170, "id23"], [170, "id25"], [170, "id27"], [170, "id29"], [170, "id33"], [170, "id34"], [170, "id37"], [170, "id38"], [170, "id40"], [170, "id42"], [170, "id45"], [170, "id46"], [170, "id48"], [170, "id50"], [170, "id60"], [170, "id64"], [170, "id65"], [170, "id66"], [170, "id69"], [170, "id71"], [170, "id76"], [170, "id79"], [170, "id81"], [170, "id82"], [170, "id84"], [170, "id86"], [171, "parameters"], [171, "id87"], [171, "id88"], [171, "id89"], [171, "id93"], [171, "id98"], [171, "id107"], [171, "id111"], [171, "id116"], [171, "id119"], [171, "id124"], [171, "id141"], [171, "id147"], [171, "id152"], [171, "id155"], [171, "id160"], [171, "id161"], [171, "id163"], [171, "id166"], [171, "id168"], [171, "id170"], [171, "id172"], [171, "id174"], [171, "id176"], [171, "id184"], [171, "id185"], [171, "id187"], [171, "id201"], [171, "id207"], [171, "id216"], [171, "id227"], [171, "id232"], [171, "id236"], [171, "id241"], [171, "id247"], [171, "id261"], [171, "id274"], [171, "id285"], [171, "id288"], [171, "id300"], [171, "id304"], [171, "id308"], [171, "id312"], [171, "id316"], [171, "id318"], [171, "id321"], [171, "id328"], [171, "id329"], [171, "id334"], [171, "id368"], [171, "id373"], [171, "id382"], [171, "id386"], [171, "id391"], [171, "id397"], [171, "id400"], [171, "id401"], [171, "id403"], [171, "id405"], [171, "id407"], [171, "id408"], [171, "id409"], [171, "id412"], [171, "id414"], [171, "id420"], [171, "id431"], [171, "id432"], [171, "id458"], [171, "id469"], [171, "id472"], [171, "id475"], [171, "id478"], [171, "id481"], [171, "id484"], [171, "id487"], [171, "id495"], [171, "id501"], [171, "id507"], [171, "id513"], [171, "id518"], [171, "id520"], [171, "id522"], [171, "id529"], [171, "id535"], [171, "id538"], [171, "id543"], [171, "id547"], [171, "id549"], [171, "id554"], [171, "id559"], [171, "id561"], [171, "id563"], [171, "id565"], [171, "id567"], [171, "id576"], [171, "id577"], [171, "id578"], [171, "id579"], [171, "id582"], [171, "id591"], [171, "id593"], [171, "id596"], [171, "id603"], [171, "id608"], [171, "id616"], [171, "id625"], [171, "id626"], [171, "id629"], [171, "id633"], [171, "id635"], [171, "id637"], [171, "id643"], [171, "id648"], [171, "id654"], [171, "id657"], [171, "id659"], [171, "id661"], [171, "id663"], [171, "id665"], [171, "id666"], [171, "id668"], [171, "id670"], [171, "id672"], [171, "id674"], [171, "id698"], [171, "id708"], [171, "id733"], [171, "id761"], [171, "id766"], [171, "id771"], [171, "id776"], [171, "id781"], [171, "id785"], [171, "id789"], [171, "id793"], [171, "id797"], [171, "id801"], [171, "id805"], [171, "id809"], [171, "id813"], [171, "id819"], [171, "id827"], [171, "id833"], [171, "id838"], [171, "id843"], [171, "id847"], [171, "id850"], [171, "id855"], [171, "id860"], [171, "id865"], [171, "id870"], [171, "id875"], [171, "id877"], [171, "id881"], [171, "id886"], [171, "id891"], [171, "id892"], [171, "id893"], [171, "id894"], [171, "id896"], [171, "id898"], [171, "id900"], [171, "id903"], [171, "id906"], [171, "id910"], [171, "id941"], [171, "id949"], [171, "id957"], [171, "id962"], [171, "id964"], [171, "id966"], [171, "id968"], [171, "id971"], [171, "id979"], [171, "id985"], [171, "id991"], [171, "id996"], [171, "id1001"], [171, "id1007"], [171, "id1013"], [171, "id1017"], [171, "id1020"], [171, "id1051"], [171, "id1055"], [171, "id1057"], [171, "id1062"], [171, "id1064"], [171, "id1066"], [171, "id1073"], [171, "id1083"], [171, "id1086"], [171, "id1089"], [171, "id1092"], [171, "id1095"], [171, "id1098"], [171, "id1104"], [171, "id1107"], [171, "id1109"], [171, "id1111"], [171, "id1113"], [171, "id1117"], [171, "id1122"], [171, "id1126"], [171, "id1132"], [171, "id1134"], [171, "id1140"], [171, "id1145"], [171, "id1146"], [171, "id1148"], [171, "id1149"], [171, "id1150"], [171, "id1151"], [171, "id1153"], [171, "id1154"], [171, "id1155"], [171, "id1162"], [171, "id1164"], [171, "id1165"], [171, "id1167"], [171, "id1169"], [171, "id1177"], [171, "id1178"], [171, "id1180"], [171, "id1182"], [171, "id1184"], [171, "id1187"], [171, "id1192"], [171, "id1196"], [171, "id1198"], [171, "id1199"], [171, "id1201"], [171, "id1206"], [171, "id1219"], [171, "id1222"], [171, "id1228"], [171, "id1235"], [171, "id1242"], [171, "id1251"], [171, "id1254"], [171, "id1262"], [171, "id1272"], [171, "id1283"], [171, "id1287"], [171, "id1291"], [171, "id1293"], [171, "id1295"], [171, "id1297"], [171, "id1299"], [172, "parameters"], [172, "id10"], [172, "id11"], [172, "id17"], [172, "id23"], [172, "id26"], [172, "id30"], [172, "id34"], [172, "id39"], [172, "id41"], [172, "id44"], [172, "id46"], [172, "id48"], [172, "id49"], [172, "id53"], [172, "id55"], [172, "id57"], [172, "id60"], [172, "id61"], [172, "id65"], [172, "id67"], [172, "id71"], [172, "id74"], [172, "id80"], [172, "id82"], [172, "id85"], [172, "id86"], [172, "id89"], [172, "id94"], [172, "id100"], [172, "id102"], [172, "id105"], [172, "id106"], [172, "id112"], [172, "id114"], [172, "id117"], [172, "id120"], [172, "id122"], [172, "id124"], [172, "id128"], [172, "id130"], [172, "id133"], [172, "id137"], [172, "id142"], [172, "id144"], [172, "id146"], [172, "id148"], [172, "id150"], [172, "id152"], [172, "id157"], [172, "id159"], [172, "id162"], [172, "id166"], [172, "id168"], [172, "id172"], [172, "id174"], [172, "id177"], [172, "id180"], [172, "id182"], [172, "id184"], [172, "id190"], [172, "id192"], [172, "id194"], [172, "id196"], [172, "id198"], [172, "id200"], [172, "id202"], [172, "id204"], [172, "id206"], [172, "id208"], [172, "id210"], [172, "id212"], [172, "id214"], [172, "id216"], [173, "parameters"], [173, "id7"], [173, "id10"], [173, "id15"], [173, "id24"], [173, "id29"], [173, "id33"], [173, "id37"], [173, "id42"], [173, "id47"], [173, "id50"], [173, "id56"], [173, "id62"], [173, "id66"], [173, "id70"], [173, "id72"], [173, "id75"], [173, "id79"], [173, "id83"], [173, "id87"], [173, "id91"], [173, "id95"], [174, "parameters"], [174, "id1"], [174, "id2"], [174, "id3"], [174, "id6"], [175, "parameters"], [175, "id8"], [175, "id10"], [175, "id12"], [175, "id15"], [175, "id20"], [175, "id22"], [175, "id26"], [175, "id30"], [175, "id36"], [175, "id40"], [175, "id43"], [175, "id46"], [175, "id49"], [175, "id51"], [175, "id54"], [175, "id57"], [175, "id60"], [175, "id63"], [175, "id64"], [175, "id66"], [175, "id69"], [175, "id83"], [175, "id86"], [175, "id90"], [175, "id93"], [175, "id96"], [175, "id99"], [175, "id104"], [175, "id106"], [175, "id107"], [175, "id109"], [175, "id113"], [175, "id118"], [175, "id121"], [175, "id122"], [175, "id124"], [175, "id125"], [175, "id126"], [175, "id128"], [175, "id132"], [175, "id134"], [175, "id135"], [175, "id138"], [175, "id139"], [175, "id141"], [175, "id143"], [175, "id146"], [175, "id148"], [175, "id150"], [175, "id153"], [175, "id156"], [175, "id159"], [175, "id162"], [175, "id164"], [175, "id167"], [175, "id169"], [175, "id172"], [175, "id174"], [175, "id177"], [175, "id180"], [175, "id182"], [175, "id185"], [175, "id188"], [175, "id191"], [175, "id195"], [175, "id198"], [175, "id201"], [175, "id204"], [175, "id207"], [175, "id210"], [175, "id212"], [175, "id219"], [175, "id223"], [175, "id225"], [175, "id227"], [175, "id229"], [175, "id231"], [175, "id233"], [175, "id236"], [175, "id241"], [175, "id244"], [175, "id247"], [175, "id249"], [175, "id258"], [175, "id266"], [175, "id269"], [175, "id272"], [175, "id275"], [175, "id277"], [175, "id279"], [175, "id283"], [175, "id287"], [175, "id291"], [175, "id295"], [175, "id299"], [175, "id301"], [175, "id304"], [175, "id306"], [175, "id308"], [175, "id310"], [175, "id313"], [175, "id315"], [175, "id318"], [175, "id321"], [175, "id324"], [176, "parameters"], [176, "id2"], [176, "id5"], [176, "id6"], [176, "id9"], [176, "id10"], [176, "id11"], [176, "id12"], [176, "id13"], [176, "id15"], [176, "id18"], [176, "id20"], [176, "id22"], [176, "id25"], [176, "id27"], [176, "id29"], [176, "id31"], [176, "id33"], [176, "id34"], [176, "id35"], [176, "id36"], [176, "id38"], [176, "id39"], [176, "id40"], [176, "id42"], [176, "id45"], [176, "id46"], [176, "id47"], [176, "id48"], [176, "id49"], [176, "id50"], [177, "parameters"], [177, "id3"], [177, "id5"], [177, "id6"], [177, "id9"], [177, "id10"], [177, "id11"], [177, "id13"], [177, "id14"], [177, "id15"], [177, "id16"], [177, "id18"], [177, "id20"], [177, "id22"], [177, "id29"], [177, "id34"], [177, "id38"], [177, "id40"], [177, "id42"], [177, "id43"], [177, "id44"], [177, "id45"], [177, "id47"], [177, "id50"], [177, "id52"], [177, "id54"], [177, "id55"], [177, "id63"], [177, "id66"], [177, "id69"], [177, "id75"], [177, "id78"], [177, "id81"], [177, "id82"], [177, "id85"], [177, "id88"], [177, "id89"], [177, "id92"], [177, "id93"], [177, "id94"], [177, "id95"], [177, "id98"], [177, "id101"], [177, "id103"], [177, "id105"]], "Returns": [[163, "returns"], [163, "id6"], [163, "id10"], [163, "id13"], [163, "id15"], [163, "id20"], [163, "id22"], [163, "id24"], [163, "id26"], [163, "id29"], [163, "id30"], [163, "id32"], [163, "id34"], [163, "id36"], [163, "id41"], [163, "id46"], [163, "id53"], [163, "id59"], [163, "id64"], [163, "id70"], [163, "id73"], [163, "id75"], [163, "id77"], [163, "id79"], [163, "id81"], [163, "id84"], [163, "id86"], [163, "id90"], [163, "id92"], [163, "id94"], [163, "id97"], [163, "id101"], [163, "id103"], [163, "id105"], [163, "id107"], [163, "id111"], [163, "id112"], [163, "id113"], [163, "id115"], [163, "id118"], [163, "id123"], [163, "id129"], [163, "id131"], [163, "id133"], [163, "id135"], [163, "id146"], [163, "id148"], [163, "id154"], [163, "id157"], [163, "id159"], [163, "id162"], [163, "id167"], [163, "id169"], [163, "id171"], [163, "id181"], [163, "id183"], [163, "id186"], [163, "id188"], [163, "id190"], [163, "id192"], [163, "id194"], [163, "id196"], [163, "id198"], [163, "id200"], [163, "id233"], [163, "id236"], [163, "id240"], [163, "id243"], [163, "id245"], [163, "id247"], [163, "id250"], [163, "id267"], [163, "id269"], [163, "id271"], [163, "id273"], [163, "id275"], [163, "id278"], [163, "id280"], [163, "id282"], [163, "id285"], [163, "id288"], [163, "id291"], [163, "id294"], [163, "id297"], [163, "id299"], [163, "id301"], [163, "id303"], [163, "id305"], [163, "id307"], [163, "id310"], [163, "id312"], [163, "id314"], [163, "id316"], [163, "id318"], [163, "id320"], [163, "id322"], [163, "id324"], [163, "id326"], [163, "id328"], [163, "id330"], [163, "id332"], [163, "id335"], [163, "id340"], [163, "id342"], [163, "id344"], [163, "id347"], [163, "id350"], [163, "id352"], [163, "id355"], [163, "id358"], [163, "id361"], [163, "id364"], [163, "id367"], [163, "id370"], [163, "id373"], [165, "returns"], [165, "id5"], [165, "id7"], [165, "id9"], [165, "id12"], [165, "id15"], [165, "id20"], [165, "id23"], [165, "id27"], [165, "id30"], [165, "id33"], [165, "id36"], [165, "id39"], [165, "id41"], [165, "id44"], [165, "id46"], [165, "id49"], [165, "id51"], [165, "id57"], [165, "id59"], [165, "id61"], [165, "id65"], [165, "id68"], [165, "id72"], [165, "id76"], [165, "id81"], [165, "id84"], [165, "id86"], [165, "id88"], [165, "id90"], [165, "id94"], [165, "id100"], [165, "id102"], [165, "id105"], [165, "id107"], [165, "id109"], [165, "id111"], [165, "id113"], [165, "id115"], [165, "id117"], [165, "id120"], [165, "id130"], [165, "id134"], [165, "id136"], [165, "id143"], [165, "id146"], [165, "id149"], [165, "id153"], [165, "id155"], [165, "id159"], [165, "id161"], [165, "id163"], [165, "id165"], [165, "id167"], [165, "id170"], [165, "id172"], [165, "id198"], [165, "id201"], [165, "id204"], [165, "id206"], [165, "id208"], [165, "id210"], [165, "id212"], [165, "id214"], [165, "id216"], [165, "id218"], [166, "returns"], [166, "id6"], [166, "id9"], [166, "id14"], [166, "id18"], [166, "id27"], [166, "id31"], [166, "id32"], [166, "id33"], [166, "id34"], [166, "id35"], [166, "id36"], [166, "id37"], [166, "id39"], [166, "id41"], [166, "id50"], [166, "id52"], [166, "id53"], [166, "id54"], [166, "id55"], [166, "id56"], [166, "id57"], [166, "id58"], [166, "id59"], [166, "id60"], [166, "id61"], [166, "id63"], [166, "id66"], [166, "id70"], [167, "returns"], [167, "id5"], [167, "id9"], [167, "id12"], [167, "id15"], [167, "id17"], [167, "id19"], [167, "id21"], [167, "id23"], [167, "id28"], [167, "id30"], [167, "id32"], [167, "id34"], [167, "id38"], [167, "id50"], [167, "id57"], [167, "id62"], [167, "id66"], [167, "id70"], [167, "id76"], [167, "id84"], [167, "id88"], [167, "id93"], [167, "id101"], [167, "id104"], [167, "id109"], [167, "id116"], [168, "returns"], [168, "id3"], [168, "id5"], [168, "id11"], [168, "id14"], [168, "id17"], [168, "id22"], [168, "id26"], [168, "id31"], [169, "returns"], [169, "id6"], [169, "id8"], [169, "id11"], [169, "id14"], [169, "id20"], [169, "id24"], [169, "id26"], [169, "id28"], [169, "id31"], [169, "id33"], [169, "id35"], [169, "id37"], [169, "id39"], [169, "id41"], [169, "id43"], [169, "id45"], [169, "id47"], [169, "id49"], [169, "id51"], [169, "id53"], [169, "id55"], [169, "id57"], [169, "id59"], [169, "id61"], [169, "id63"], [169, "id65"], [169, "id67"], [169, "id69"], [169, "id72"], [169, "id75"], [169, "id77"], [169, "id79"], [169, "id81"], [169, "id84"], [169, "id86"], [169, "id90"], [170, "returns"], [170, "id4"], [170, "id7"], [170, "id9"], [170, "id11"], [170, "id24"], [170, "id26"], [170, "id28"], [170, "id35"], [170, "id39"], [170, "id41"], [170, "id43"], [170, "id44"], [170, "id47"], [170, "id49"], [170, "id51"], [170, "id52"], [170, "id67"], [170, "id70"], [170, "id72"], [170, "id77"], [170, "id80"], [170, "id83"], [170, "id85"], [170, "id87"], [171, "returns"], [171, "id108"], [171, "id117"], [171, "id120"], [171, "id125"], [171, "id142"], [171, "id148"], [171, "id153"], [171, "id156"], [171, "id162"], [171, "id165"], [171, "id167"], [171, "id169"], [171, "id171"], [171, "id173"], [171, "id175"], [171, "id189"], [171, "id202"], [171, "id209"], [171, "id218"], [171, "id228"], [171, "id233"], [171, "id237"], [171, "id243"], [171, "id249"], [171, "id263"], [171, "id276"], [171, "id286"], [171, "id290"], [171, "id301"], [171, "id305"], [171, "id309"], [171, "id313"], [171, "id317"], [171, "id319"], [171, "id369"], [171, "id374"], [171, "id383"], [171, "id392"], [171, "id398"], [171, "id402"], [171, "id404"], [171, "id406"], [171, "id410"], [171, "id433"], [171, "id435"], [171, "id440"], [171, "id444"], [171, "id449"], [171, "id451"], [171, "id456"], [171, "id459"], [171, "id470"], [171, "id473"], [171, "id476"], [171, "id479"], [171, "id482"], [171, "id485"], [171, "id488"], [171, "id496"], [171, "id502"], [171, "id508"], [171, "id514"], [171, "id523"], [171, "id530"], [171, "id536"], [171, "id540"], [171, "id548"], [171, "id560"], [171, "id562"], [171, "id564"], [171, "id566"], [171, "id568"], [171, "id580"], [171, "id592"], [171, "id597"], [171, "id604"], [171, "id610"], [171, "id627"], [171, "id634"], [171, "id636"], [171, "id638"], [171, "id644"], [171, "id649"], [171, "id655"], [171, "id658"], [171, "id660"], [171, "id662"], [171, "id664"], [171, "id667"], [171, "id669"], [171, "id671"], [171, "id673"], [171, "id762"], [171, "id767"], [171, "id772"], [171, "id777"], [171, "id820"], [171, "id828"], [171, "id834"], [171, "id839"], [171, "id844"], [171, "id848"], [171, "id851"], [171, "id856"], [171, "id861"], [171, "id866"], [171, "id871"], [171, "id878"], [171, "id895"], [171, "id897"], [171, "id899"], [171, "id901"], [171, "id904"], [171, "id907"], [171, "id911"], [171, "id914"], [171, "id919"], [171, "id927"], [171, "id935"], [171, "id942"], [171, "id950"], [171, "id958"], [171, "id963"], [171, "id967"], [171, "id1052"], [171, "id1063"], [171, "id1065"], [171, "id1067"], [171, "id1068"], [171, "id1069"], [171, "id1071"], [171, "id1074"], [171, "id1075"], [171, "id1077"], [171, "id1079"], [171, "id1081"], [171, "id1084"], [171, "id1087"], [171, "id1090"], [171, "id1093"], [171, "id1096"], [171, "id1099"], [171, "id1105"], [171, "id1108"], [171, "id1110"], [171, "id1112"], [171, "id1114"], [171, "id1118"], [171, "id1127"], [171, "id1128"], [171, "id1129"], [171, "id1130"], [171, "id1131"], [171, "id1133"], [171, "id1135"], [171, "id1141"], [171, "id1147"], [171, "id1152"], [171, "id1161"], [171, "id1163"], [171, "id1166"], [171, "id1168"], [171, "id1170"], [171, "id1179"], [171, "id1183"], [171, "id1200"], [171, "id1202"], [171, "id1208"], [171, "id1220"], [171, "id1223"], [171, "id1230"], [171, "id1237"], [171, "id1244"], [171, "id1252"], [171, "id1256"], [171, "id1264"], [171, "id1292"], [171, "id1294"], [171, "id1296"], [171, "id1298"], [171, "id1300"], [172, "returns"], [172, "id14"], [172, "id20"], [172, "id24"], [172, "id27"], [172, "id31"], [172, "id35"], [172, "id47"], [172, "id52"], [172, "id54"], [172, "id56"], [172, "id62"], [172, "id66"], [172, "id72"], [172, "id75"], [172, "id83"], [172, "id87"], [172, "id90"], [172, "id95"], [172, "id103"], [172, "id115"], [172, "id118"], [172, "id123"], [172, "id125"], [172, "id129"], [172, "id131"], [172, "id138"], [172, "id143"], [172, "id145"], [172, "id147"], [172, "id149"], [172, "id151"], [172, "id153"], [172, "id158"], [172, "id160"], [172, "id163"], [172, "id167"], [172, "id169"], [172, "id175"], [172, "id178"], [172, "id183"], [172, "id185"], [172, "id191"], [172, "id193"], [172, "id195"], [172, "id197"], [172, "id199"], [172, "id201"], [172, "id203"], [172, "id205"], [172, "id207"], [172, "id209"], [172, "id211"], [172, "id213"], [172, "id215"], [172, "id217"], [173, "returns"], [173, "id8"], [173, "id16"], [173, "id25"], [173, "id30"], [173, "id34"], [173, "id38"], [173, "id43"], [173, "id48"], [173, "id51"], [173, "id57"], [173, "id63"], [173, "id67"], [173, "id71"], [173, "id73"], [173, "id76"], [173, "id80"], [173, "id84"], [173, "id88"], [173, "id92"], [173, "id96"], [174, "returns"], [174, "id4"], [174, "id7"], [175, "returns"], [175, "id9"], [175, "id11"], [175, "id13"], [175, "id16"], [175, "id21"], [175, "id23"], [175, "id27"], [175, "id31"], [175, "id37"], [175, "id41"], [175, "id44"], [175, "id47"], [175, "id50"], [175, "id52"], [175, "id55"], [175, "id58"], [175, "id61"], [175, "id65"], [175, "id70"], [175, "id84"], [175, "id87"], [175, "id91"], [175, "id94"], [175, "id97"], [175, "id105"], [175, "id108"], [175, "id110"], [175, "id114"], [175, "id123"], [175, "id127"], [175, "id129"], [175, "id133"], [175, "id136"], [175, "id140"], [175, "id147"], [175, "id149"], [175, "id151"], [175, "id154"], [175, "id157"], [175, "id160"], [175, "id163"], [175, "id165"], [175, "id168"], [175, "id170"], [175, "id173"], [175, "id175"], [175, "id178"], [175, "id181"], [175, "id183"], [175, "id186"], [175, "id189"], [175, "id192"], [175, "id196"], [175, "id199"], [175, "id202"], [175, "id205"], [175, "id208"], [175, "id211"], [175, "id213"], [175, "id224"], [175, "id226"], [175, "id228"], [175, "id230"], [175, "id232"], [175, "id234"], [175, "id238"], [175, "id242"], [175, "id245"], [175, "id248"], [175, "id250"], [175, "id260"], [175, "id267"], [175, "id270"], [175, "id273"], [175, "id276"], [175, "id280"], [175, "id292"], [175, "id296"], [175, "id300"], [175, "id302"], [175, "id305"], [175, "id307"], [175, "id309"], [175, "id311"], [175, "id314"], [175, "id316"], [175, "id319"], [175, "id322"], [175, "id325"], [176, "returns"], [176, "id14"], [176, "id16"], [176, "id30"], [176, "id32"], [176, "id37"], [176, "id41"], [176, "id43"], [177, "returns"], [177, "id17"], [177, "id39"], [177, "id41"], [177, "id46"], [177, "id48"], [177, "id51"]], "register_dwi_to_template": [[163, "register-dwi-to-template"]], "write_mapping": [[163, "write-mapping"]], "read_mapping": [[163, "read-mapping"]], "resample": [[163, "resample"]], "affine_registration": [[163, "affine-registration"]], "center_of_mass": [[163, "center-of-mass"], [175, "center-of-mass"]], "translation": [[163, "translation"]], "rigid": [[163, "rigid"]], "rigid_isoscaling": [[163, "rigid-isoscaling"]], "rigid_scaling": [[163, "rigid-scaling"]], "affine": [[163, "affine"]], "_METHOD_DICT": [[163, "method-dict"]], "register_series": [[163, "register-series"]], "register_dwi_series": [[163, "register-dwi-series"]], "motion_correction": [[163, "motion-correction"]], "streamline_registration": [[163, "streamline-registration"]], "determine_num_threads": [[163, "determine-num-threads"], [167, "determine-num-threads"], [167, "id105"], [175, "determine-num-threads"]], "distance_matrix_mdf": [[163, "distance-matrix-mdf"]], "DeformableRegistration": [[163, "deformableregistration"]], "Attributes": [[163, "attributes"], [165, "attributes"], [165, "id138"], [165, "id174"], [165, "id179"], [165, "id184"], [165, "id189"], [171, "attributes"], [171, "id550"], [171, "id555"], [173, "attributes"], [175, "attributes"], [175, "id100"], [176, "attributes"], [176, "id24"]], "gaussian_kernel": [[163, "gaussian-kernel"]], "low_rank_eigen": [[163, "low-rank-eigen"]], "initialize_sigma2": [[163, "initialize-sigma2"]], "lowrankQS": [[163, "lowrankqs"]], "compute_cc_backward_step_2d": [[163, "compute-cc-backward-step-2d"]], "compute_cc_backward_step_3d": [[163, "compute-cc-backward-step-3d"]], "compute_cc_forward_step_2d": [[163, "compute-cc-forward-step-2d"]], "compute_cc_forward_step_3d": [[163, "compute-cc-forward-step-3d"]], "precompute_cc_factors_2d": [[163, "precompute-cc-factors-2d"]], "precompute_cc_factors_2d_test": [[163, "precompute-cc-factors-2d-test"]], "precompute_cc_factors_3d": [[163, "precompute-cc-factors-3d"]], "precompute_cc_factors_3d_test": [[163, "precompute-cc-factors-3d-test"]], "compute_em_demons_step_2d": [[163, "compute-em-demons-step-2d"]], "compute_em_demons_step_3d": [[163, "compute-em-demons-step-3d"]], "compute_masked_class_stats_2d": [[163, "compute-masked-class-stats-2d"]], "compute_masked_class_stats_3d": [[163, "compute-masked-class-stats-3d"]], "quantize_positive_2d": [[163, "quantize-positive-2d"]], "quantize_positive_3d": [[163, "quantize-positive-3d"]], "AffineInversionError": [[163, "affineinversionerror"]], "AffineInvalidValuesError": [[163, "affineinvalidvalueserror"]], "AffineMap": [[163, "affinemap"]], "MutualInformationMetric": [[163, "mutualinformationmetric"]], "AffineRegistration": [[163, "affineregistration"]], "_transform_method": [[163, "transform-method"]], "transform_centers_of_mass": [[163, "transform-centers-of-mass"]], "transform_geometric_centers": [[163, "transform-geometric-centers"]], "transform_origins": [[163, "transform-origins"]], "DiffeomorphicMap": [[163, "diffeomorphicmap"]], "DiffeomorphicRegistration": [[163, "diffeomorphicregistration"]], "SymmetricDiffeomorphicRegistration": [[163, "symmetricdiffeomorphicregistration"]], "RegistrationStages": [[163, "registrationstages"]], "logger": [[163, "logger"], [163, "id203"], [163, "id241"], [165, "logger"], [169, "logger"], [170, "logger"], [170, "id36"], [170, "id68"], [171, "logger"], [172, "logger"], [172, "id73"]], "mult_aff": [[163, "mult-aff"]], "get_direction_and_spacings": [[163, "get-direction-and-spacings"]], "SimilarityMetric": [[163, "similaritymetric"]], "CCMetric": [[163, "ccmetric"]], "EMMetric": [[163, "emmetric"]], "SSDMetric": [[163, "ssdmetric"]], "v_cycle_2d": [[163, "v-cycle-2d"]], "v_cycle_3d": [[163, "v-cycle-3d"]], "ParzenJointHistogram": [[163, "parzenjointhistogram"]], "compute_parzen_mi": [[163, "compute-parzen-mi"]], "cubic_spline": [[163, "cubic-spline"]], "cubic_spline_derivative": [[163, "cubic-spline-derivative"]], "sample_domain_regular": [[163, "sample-domain-regular"]], "reslice": [[163, "reslice"]], "ScaleSpace": [[163, "scalespace"]], "IsotropicScaleSpace": [[163, "isotropicscalespace"]], "StreamlineDistanceMetric": [[163, "streamlinedistancemetric"]], "BundleMinDistanceMetric": [[163, "bundlemindistancemetric"]], "Methods": [[163, "methods"], [163, "id210"], [163, "id218"], [163, "id222"], [175, "methods"]], "BundleMinDistanceMatrixMetric": [[163, "bundlemindistancematrixmetric"]], "BundleMinDistanceAsymmetricMetric": [[163, "bundlemindistanceasymmetricmetric"]], "BundleSumDistanceMatrixMetric": [[163, "bundlesumdistancematrixmetric"]], "JointBundleMinDistanceMetric": [[163, "jointbundlemindistancemetric"]], "StreamlineLinearRegistration": [[163, "streamlinelinearregistration"]], "StreamlineRegistrationMap": [[163, "streamlineregistrationmap"]], "JointStreamlineRegistrationMap": [[163, "jointstreamlineregistrationmap"]], "bundle_sum_distance": [[163, "bundle-sum-distance"]], "bundle_min_distance": [[163, "bundle-min-distance"]], "bundle_min_distance_fast": [[163, "bundle-min-distance-fast"]], "bundle_min_distance_asymmetric_fast": [[163, "bundle-min-distance-asymmetric-fast"]], "remove_clusters_by_size": [[163, "remove-clusters-by-size"]], "progressive_slr": [[163, "progressive-slr"]], "slr_with_qbx": [[163, "slr-with-qbx"]], "groupwise_slr": [[163, "groupwise-slr"]], "get_unique_pairs": [[163, "get-unique-pairs"]], "compose_matrix44": [[163, "compose-matrix44"]], "decompose_matrix44": [[163, "decompose-matrix44"]], "average_bundle_length": [[163, "average-bundle-length"]], "find_missing": [[163, "find-missing"]], "bundlewarp": [[163, "bundlewarp"]], "bundlewarp_vector_filed": [[163, "bundlewarp-vector-filed"]], "bundlewarp_shape_analysis": [[163, "bundlewarp-shape-analysis"]], "compute_energy_ssd_2d": [[163, "compute-energy-ssd-2d"]], "compute_energy_ssd_3d": [[163, "compute-energy-ssd-3d"]], "compute_residual_displacement_field_ssd_2d": [[163, "compute-residual-displacement-field-ssd-2d"]], "compute_residual_displacement_field_ssd_3d": [[163, "compute-residual-displacement-field-ssd-3d"]], "compute_ssd_demons_step_2d": [[163, "compute-ssd-demons-step-2d"]], "compute_ssd_demons_step_3d": [[163, "compute-ssd-demons-step-3d"]], "iterate_residual_displacement_field_ssd_2d": [[163, "iterate-residual-displacement-field-ssd-2d"]], "iterate_residual_displacement_field_ssd_3d": [[163, "iterate-residual-displacement-field-ssd-3d"]], "solve_2d_symmetric_positive_definite": [[163, "solve-2d-symmetric-positive-definite"]], "solve_3d_symmetric_positive_definite": [[163, "solve-3d-symmetric-positive-definite"]], "AffineTransform2D": [[163, "affinetransform2d"]], "AffineTransform3D": [[163, "affinetransform3d"]], "RigidIsoScalingTransform2D": [[163, "rigidisoscalingtransform2d"]], "RigidIsoScalingTransform3D": [[163, "rigidisoscalingtransform3d"]], "RigidScalingTransform2D": [[163, "rigidscalingtransform2d"]], "RigidScalingTransform3D": [[163, "rigidscalingtransform3d"]], "RigidTransform2D": [[163, "rigidtransform2d"]], "RigidTransform3D": [[163, "rigidtransform3d"]], "RotationTransform2D": [[163, "rotationtransform2d"]], "RotationTransform3D": [[163, "rotationtransform3d"]], "ScalingTransform2D": [[163, "scalingtransform2d"]], "ScalingTransform3D": [[163, "scalingtransform3d"]], "Transform": [[163, "transform"]], "TranslationTransform2D": [[163, "translationtransform2d"]], "TranslationTransform3D": [[163, "translationtransform3d"]], "compose_vector_fields_2d": [[163, "compose-vector-fields-2d"]], "compose_vector_fields_3d": [[163, "compose-vector-fields-3d"]], "create_circle": [[163, "create-circle"]], "create_harmonic_fields_2d": [[163, "create-harmonic-fields-2d"]], "create_harmonic_fields_3d": [[163, "create-harmonic-fields-3d"]], "create_random_displacement_2d": [[163, "create-random-displacement-2d"]], "create_random_displacement_3d": [[163, "create-random-displacement-3d"]], "create_sphere": [[163, "create-sphere"]], "downsample_displacement_field_2d": [[163, "downsample-displacement-field-2d"]], "downsample_displacement_field_3d": [[163, "downsample-displacement-field-3d"]], "downsample_scalar_field_2d": [[163, "downsample-scalar-field-2d"]], "downsample_scalar_field_3d": [[163, "downsample-scalar-field-3d"]], "gradient": [[163, "gradient"], [175, "gradient"]], "invert_vector_field_fixed_point_2d": [[163, "invert-vector-field-fixed-point-2d"]], "invert_vector_field_fixed_point_3d": [[163, "invert-vector-field-fixed-point-3d"]], "is_valid_affine": [[163, "is-valid-affine"]], "reorient_vector_field_2d": [[163, "reorient-vector-field-2d"]], "reorient_vector_field_3d": [[163, "reorient-vector-field-3d"]], "resample_displacement_field_2d": [[163, "resample-displacement-field-2d"]], "resample_displacement_field_3d": [[163, "resample-displacement-field-3d"]], "simplify_warp_function_2d": [[163, "simplify-warp-function-2d"]], "simplify_warp_function_3d": [[163, "simplify-warp-function-3d"]], "sparse_gradient": [[163, "sparse-gradient"]], "transform_2d_affine": [[163, "transform-2d-affine"]], "transform_2d_affine_nn": [[163, "transform-2d-affine-nn"]], "transform_3d_affine": [[163, "transform-3d-affine"]], "transform_3d_affine_nn": [[163, "transform-3d-affine-nn"]], "warp_2d": [[163, "warp-2d"]], "warp_2d_nn": [[163, "warp-2d-nn"]], "warp_3d": [[163, "warp-3d"]], "warp_3d_nn": [[163, "warp-3d-nn"]], "warp_coordinates_2d": [[163, "warp-coordinates-2d"]], "warp_coordinates_3d": [[163, "warp-coordinates-3d"]], "boots": [[164, "module-dipy.boots"]], "core": [[165, "module-dipy.core"]], "Module: core.geometry": [[165, "module-dipy.core.geometry"]], "Module: core.gradients": [[165, "module-dipy.core.gradients"]], "Module: core.graph": [[165, "module-dipy.core.graph"]], "Module: core.histeq": [[165, "module-dipy.core.histeq"]], "Module: core.interpolation": [[165, "module-dipy.core.interpolation"]], "Module: core.ndindex": [[165, "module-dipy.core.ndindex"]], "Module: core.onetime": [[165, "module-dipy.core.onetime"]], "Module: core.optimize": [[165, "module-dipy.core.optimize"]], "Module: core.profile": [[165, "module-dipy.core.profile"]], "Module: core.rng": [[165, "module-dipy.core.rng"]], "Module: core.sphere": [[165, "module-dipy.core.sphere"]], "Module: core.sphere_stats": [[165, "module-dipy.core.sphere_stats"]], "Module: core.subdivide_octahedron": [[165, "module-dipy.core.subdivide_octahedron"]], "Module: core.wavelet": [[165, "module-dipy.core.wavelet"]], "_TUPLE2AXES": [[165, "tuple2axes"]], "sphere2cart": [[165, "sphere2cart"]], "cart2sphere": [[165, "cart2sphere"]], "sph2latlon": [[165, "sph2latlon"]], "normalized_vector": [[165, "normalized-vector"]], "vector_norm": [[165, "vector-norm"]], "rodrigues_axis_rotation": [[165, "rodrigues-axis-rotation"]], "nearest_pos_semi_def": [[165, "nearest-pos-semi-def"]], "sphere_distance": [[165, "sphere-distance"]], "See Also": [[165, "see-also"], [165, "id24"], [165, "id54"], [165, "id66"], [165, "id103"], [165, "id128"], [165, "id157"], [165, "id175"], [165, "id180"], [165, "id185"], [165, "id190"], [165, "id196"], [166, "see-also"], [166, "id13"], [167, "see-also"], [168, "see-also"], [168, "id8"], [168, "id28"], [169, "see-also"], [169, "id9"], [169, "id18"], [171, "see-also"], [171, "id524"], [171, "id531"], [171, "id544"], [171, "id551"], [171, "id556"], [171, "id624"], [171, "id1116"], [171, "id1181"], [171, "id1188"], [171, "id1193"], [171, "id1197"], [171, "id1203"], [171, "id1207"], [171, "id1221"], [173, "see-also"], [173, "id11"], [175, "see-also"], [175, "id14"], [175, "id101"], [175, "id117"], [175, "id152"], [175, "id155"], [175, "id158"], [175, "id161"], [175, "id194"], [175, "id284"], [175, "id288"], [175, "id294"], [175, "id298"]], "cart_distance": [[165, "cart-distance"]], "vector_cosine": [[165, "vector-cosine"]], "lambert_equal_area_projection_polar": [[165, "lambert-equal-area-projection-polar"]], "lambert_equal_area_projection_cart": [[165, "lambert-equal-area-projection-cart"]], "euler_matrix": [[165, "euler-matrix"]], "compose_matrix": [[165, "compose-matrix"]], "decompose_matrix": [[165, "decompose-matrix"]], "Raises": [[165, "raises"], [166, "raises"], [171, "raises"], [175, "raises"], [175, "id285"], [175, "id289"], [175, "id293"]], "circumradius": [[165, "circumradius"]], "vec2vec_rotmat": [[165, "vec2vec-rotmat"]], "compose_transformations": [[165, "compose-transformations"]], "perpendicular_directions": [[165, "perpendicular-directions"]], "dist_to_corner": [[165, "dist-to-corner"]], "is_hemispherical": [[165, "is-hemispherical"]], "GradientTable": [[165, "gradienttable"]], "unique_bvals": [[165, "unique-bvals"]], "b0_threshold_empty_gradient_message": [[165, "b0-threshold-empty-gradient-message"]], "b0_threshold_update_slicing_message": [[165, "b0-threshold-update-slicing-message"]], "mask_non_weighted_bvals": [[165, "mask-non-weighted-bvals"]], "gradient_table_from_bvals_bvecs": [[165, "gradient-table-from-bvals-bvecs"]], "Other Parameters": [[165, "other-parameters"]], "gradient_table_from_qvals_bvecs": [[165, "gradient-table-from-qvals-bvecs"]], "gradient_table_from_gradient_strength_bvecs": [[165, "gradient-table-from-gradient-strength-bvecs"]], "gradient_table": [[165, "gradient-table"]], "reorient_bvecs": [[165, "reorient-bvecs"]], "generate_bvecs": [[165, "generate-bvecs"]], "round_bvals": [[165, "round-bvals"]], "unique_bvals_tolerance": [[165, "unique-bvals-tolerance"]], "get_bval_indices": [[165, "get-bval-indices"]], "unique_bvals_magnitude": [[165, "unique-bvals-magnitude"]], "check_multi_b": [[165, "check-multi-b"]], "btens_to_params": [[165, "btens-to-params"]], "params_to_btens": [[165, "params-to-btens"]], "ornt_mapping": [[165, "ornt-mapping"], [169, "ornt-mapping"]], "reorient_vectors": [[165, "reorient-vectors"], [169, "reorient-vectors"]], "reorient_on_axis": [[165, "reorient-on-axis"], [169, "reorient-on-axis"]], "orientation_from_string": [[165, "orientation-from-string"], [169, "orientation-from-string"]], "orientation_to_string": [[165, "orientation-to-string"], [169, "orientation-to-string"]], "Graph": [[165, "graph"]], "histeq": [[165, "histeq"]], "Interpolator": [[165, "interpolator"]], "NearestNeighborInterpolator": [[165, "nearestneighborinterpolator"]], "OutsideImage": [[165, "outsideimage"]], "TriLinearInterpolator": [[165, "trilinearinterpolator"]], "interp_rbf": [[165, "interp-rbf"]], "interpolate_scalar_2d": [[165, "interpolate-scalar-2d"]], "interpolate_scalar_3d": [[165, "interpolate-scalar-3d"]], "interpolate_scalar_nn_2d": [[165, "interpolate-scalar-nn-2d"]], "interpolate_scalar_nn_3d": [[165, "interpolate-scalar-nn-3d"]], "interpolate_vector_2d": [[165, "interpolate-vector-2d"]], "interpolate_vector_3d": [[165, "interpolate-vector-3d"]], "map_coordinates_trilinear_iso": [[165, "map-coordinates-trilinear-iso"]], "nearestneighbor_interpolate": [[165, "nearestneighbor-interpolate"]], "trilinear_interp": [[165, "trilinear-interp"]], "trilinear_interpolate4d": [[165, "trilinear-interpolate4d"]], "ndindex": [[165, "ndindex"]], "ResetMixin": [[165, "resetmixin"]], "OneTimeProperty": [[165, "onetimeproperty"]], "auto_attr": [[165, "auto-attr"]], "Optimizer": [[165, "optimizer"]], "SKLearnLinearSolver": [[165, "sklearnlinearsolver"]], "NonNegativeLeastSquares": [[165, "nonnegativeleastsquares"]], "PositiveDefiniteLeastSquares": [[165, "positivedefiniteleastsquares"]], "spdot": [[165, "spdot"]], "sparse_nnls": [[165, "sparse-nnls"]], "Profiler": [[165, "profiler"]], "WichmannHill2006": [[165, "wichmannhill2006"]], "WichmannHill1982": [[165, "wichmannhill1982"]], "LEcuyer": [[165, "lecuyer"]], "Sphere": [[165, "sphere"], [167, "sphere"]], "HemiSphere": [[165, "hemisphere"], [167, "hemisphere"]], "faces_from_sphere_vertices": [[165, "faces-from-sphere-vertices"]], "unique_edges": [[165, "unique-edges"]], "unique_sets": [[165, "unique-sets"]], "disperse_charges": [[165, "disperse-charges"], [167, "disperse-charges"]], "fibonacci_sphere": [[165, "fibonacci-sphere"]], "disperse_charges_alt": [[165, "disperse-charges-alt"]], "euler_characteristic_check": [[165, "euler-characteristic-check"]], "octahedron_vertices": [[165, "octahedron-vertices"]], "octahedron_faces": [[165, "octahedron-faces"]], "icosahedron_vertices": [[165, "icosahedron-vertices"]], "icosahedron_faces": [[165, "icosahedron-faces"]], "unit_octahedron": [[165, "unit-octahedron"]], "unit_icosahedron": [[165, "unit-icosahedron"]], "hemi_icosahedron": [[165, "hemi-icosahedron"]], "random_uniform_on_sphere": [[165, "random-uniform-on-sphere"]], "eigenstats": [[165, "eigenstats"]], "compare_orientation_sets": [[165, "compare-orientation-sets"]], "angular_similarity": [[165, "angular-similarity"]], "create_unit_sphere": [[165, "create-unit-sphere"]], "create_unit_hemisphere": [[165, "create-unit-hemisphere"]], "cshift3D": [[165, "cshift3d"]], "permutationinverse": [[165, "permutationinverse"]], "afb3D_A": [[165, "afb3d-a"]], "sfb3D_A": [[165, "sfb3d-a"]], "sfb3D": [[165, "sfb3d"]], "afb3D": [[165, "afb3d"]], "dwt3D": [[165, "dwt3d"]], "idwt3D": [[165, "idwt3d"]], "data": [[166, "module-dipy.data"]], "Module: data.fetcher": [[166, "module-dipy.data.fetcher"]], "DataError": [[166, "dataerror"]], "loads_compat": [[166, "loads-compat"]], "DATA_DIR": [[166, "data-dir"]], "get_sim_voxels": [[166, "get-sim-voxels"]], "get_skeleton": [[166, "get-skeleton"]], "get_sphere": [[166, "get-sphere"], [167, "get-sphere"]], "default_sphere": [[166, "default-sphere"]], "small_sphere": [[166, "small-sphere"]], "get_3shell_gtab": [[166, "get-3shell-gtab"]], "get_isbi2013_2shell_gtab": [[166, "get-isbi2013-2shell-gtab"]], "get_gtab_taiwan_dsi": [[166, "get-gtab-taiwan-dsi"]], "dsi_voxels": [[166, "dsi-voxels"]], "dsi_deconv_voxels": [[166, "dsi-deconv-voxels"]], "mrtrix_spherical_functions": [[166, "mrtrix-spherical-functions"]], "get_cmap": [[166, "get-cmap"]], "two_cingulum_bundles": [[166, "two-cingulum-bundles"]], "matlab_life_results": [[166, "matlab-life-results"]], "load_sdp_constraints": [[166, "load-sdp-constraints"]], "copyfileobj_withprogress": [[166, "copyfileobj-withprogress"]], "check_md5": [[166, "check-md5"]], "fetch_data": [[166, "fetch-data"]], "fetch_isbi2013_2shell": [[166, "fetch-isbi2013-2shell"]], "fetch_stanford_labels": [[166, "fetch-stanford-labels"]], "fetch_sherbrooke_3shell": [[166, "fetch-sherbrooke-3shell"]], "fetch_stanford_hardi": [[166, "fetch-stanford-hardi"]], "fetch_resdnn_weights": [[166, "fetch-resdnn-weights"]], "fetch_synb0_weights": [[166, "fetch-synb0-weights"]], "fetch_synb0_test": [[166, "fetch-synb0-test"]], "fetch_evac_weights": [[166, "fetch-evac-weights"]], "fetch_evac_test": [[166, "fetch-evac-test"]], "fetch_stanford_t1": [[166, "fetch-stanford-t1"]], "fetch_stanford_pve_maps": [[166, "fetch-stanford-pve-maps"]], "fetch_stanford_tracks": [[166, "fetch-stanford-tracks"]], "fetch_taiwan_ntu_dsi": [[166, "fetch-taiwan-ntu-dsi"]], "fetch_syn_data": [[166, "fetch-syn-data"]], "fetch_mni_template": [[166, "fetch-mni-template"]], "fetch_scil_b0": [[166, "fetch-scil-b0"]], "fetch_bundles_2_subjects": [[166, "fetch-bundles-2-subjects"]], "fetch_ivim": [[166, "fetch-ivim"]], "fetch_cfin_multib": [[166, "fetch-cfin-multib"]], "fetch_file_formats": [[166, "fetch-file-formats"]], "fetch_bundle_atlas_hcp842": [[166, "fetch-bundle-atlas-hcp842"]], "fetch_target_tractogram_hcp": [[166, "fetch-target-tractogram-hcp"]], "fetch_bundle_fa_hcp": [[166, "fetch-bundle-fa-hcp"]], "fetch_qtdMRI_test_retest_2subjects": [[166, "fetch-qtdmri-test-retest-2subjects"]], "fetch_gold_standard_io": [[166, "fetch-gold-standard-io"]], "fetch_qte_lte_pte": [[166, "fetch-qte-lte-pte"]], "fetch_cti_rat1": [[166, "fetch-cti-rat1"]], "fetch_fury_surface": [[166, "fetch-fury-surface"]], "fetch_DiB_70_lte_pte_ste": [[166, "fetch-dib-70-lte-pte-ste"]], "fetch_DiB_217_lte_pte_ste": [[166, "fetch-dib-217-lte-pte-ste"]], "fetch_ptt_minimal_dataset": [[166, "fetch-ptt-minimal-dataset"]], "fetch_bundle_warp_dataset": [[166, "fetch-bundle-warp-dataset"]], "get_fnames": [[166, "get-fnames"]], "read_qtdMRI_test_retest_2subjects": [[166, "read-qtdmri-test-retest-2subjects"]], "read_scil_b0": [[166, "read-scil-b0"]], "read_siemens_scil_b0": [[166, "read-siemens-scil-b0"]], "read_isbi2013_2shell": [[166, "read-isbi2013-2shell"]], "read_sherbrooke_3shell": [[166, "read-sherbrooke-3shell"]], "read_stanford_labels": [[166, "read-stanford-labels"]], "read_stanford_hardi": [[166, "read-stanford-hardi"]], "read_stanford_t1": [[166, "read-stanford-t1"]], "read_stanford_pve_maps": [[166, "read-stanford-pve-maps"]], "read_taiwan_ntu_dsi": [[166, "read-taiwan-ntu-dsi"]], "read_syn_data": [[166, "read-syn-data"]], "fetch_tissue_data": [[166, "fetch-tissue-data"]], "read_tissue_data": [[166, "read-tissue-data"]], "read_mni_template": [[166, "read-mni-template"]], "fetch_cenir_multib": [[166, "fetch-cenir-multib"]], "read_cenir_multib": [[166, "read-cenir-multib"]], "read_bundles_2_subjects": [[166, "read-bundles-2-subjects"]], "read_ivim": [[166, "read-ivim"]], "read_cfin_dwi": [[166, "read-cfin-dwi"]], "read_cfin_t1": [[166, "read-cfin-t1"]], "get_file_formats": [[166, "get-file-formats"]], "get_bundle_atlas_hcp842": [[166, "get-bundle-atlas-hcp842"]], "get_two_hcp842_bundles": [[166, "get-two-hcp842-bundles"]], "get_target_tractogram_hcp": [[166, "get-target-tractogram-hcp"]], "read_qte_lte_pte": [[166, "read-qte-lte-pte"]], "read_DiB_70_lte_pte_ste": [[166, "read-dib-70-lte-pte-ste"]], "read_DiB_217_lte_pte_ste": [[166, "read-dib-217-lte-pte-ste"]], "extract_example_tracts": [[166, "extract-example-tracts"]], "read_five_af_bundles": [[166, "read-five-af-bundles"]], "to_bids_description": [[166, "to-bids-description"]], "fetch_hcp": [[166, "fetch-hcp"]], "fetch_hbn": [[166, "fetch-hbn"]], "denoise": [[167, "module-dipy.denoise"]], "Module: denoise.adaptive_soft_matching": [[167, "module-dipy.denoise.adaptive_soft_matching"]], "Module: denoise.denspeed": [[167, "module-dipy.denoise.denspeed"]], "Module: denoise.enhancement_kernel": [[167, "module-dipy.denoise.enhancement_kernel"]], "Module: denoise.gibbs": [[167, "module-dipy.denoise.gibbs"]], "Module: denoise.localpca": [[167, "module-dipy.denoise.localpca"]], "Module: denoise.nlmeans": [[167, "module-dipy.denoise.nlmeans"]], "Module: denoise.nlmeans_block": [[167, "module-dipy.denoise.nlmeans_block"]], "Module: denoise.noise_estimate": [[167, "module-dipy.denoise.noise_estimate"]], "Module: denoise.non_local_means": [[167, "module-dipy.denoise.non_local_means"]], "Module: denoise.patch2self": [[167, "module-dipy.denoise.patch2self"]], "Module: denoise.pca_noise_estimate": [[167, "module-dipy.denoise.pca_noise_estimate"]], "PCA Based Local Noise Estimation": [[167, "pca-based-local-noise-estimation"]], "Module: denoise.shift_twist_convolution": [[167, "module-dipy.denoise.shift_twist_convolution"]], "adaptive_soft_matching": [[167, "adaptive-soft-matching"]], "add_padding_reflection": [[167, "add-padding-reflection"]], "correspond_indices": [[167, "correspond-indices"]], "nlmeans_3d": [[167, "nlmeans-3d"]], "remove_padding": [[167, "remove-padding"]], "EnhancementKernel": [[167, "enhancementkernel"]], "ceil": [[167, "ceil"]], "gettempdir": [[167, "gettempdir"]], "gibbs_removal": [[167, "gibbs-removal"]], "dimensionality_problem_message": [[167, "dimensionality-problem-message"]], "create_patch_radius_arr": [[167, "create-patch-radius-arr"]], "compute_patch_size": [[167, "compute-patch-size"]], "compute_num_samples": [[167, "compute-num-samples"]], "compute_suggested_patch_radius": [[167, "compute-suggested-patch-radius"]], "genpca": [[167, "genpca"]], "localpca": [[167, "localpca"]], "mppca": [[167, "mppca"]], "nlmeans": [[167, "nlmeans"]], "firdn": [[167, "firdn"]], "nlmeans_block": [[167, "nlmeans-block"]], "upfir": [[167, "upfir"]], "piesno": [[167, "piesno"]], "estimate_sigma": [[167, "estimate-sigma"]], "non_local_means": [[167, "non-local-means"]], "patch2self": [[167, "patch2self"]], "pca_noise_estimate": [[167, "pca-noise-estimate"]], "warn": [[167, "warn"], [175, "warn"]], "convolve": [[167, "convolve"]], "convolve_sf": [[167, "convolve-sf"]], "sf_to_sh": [[167, "sf-to-sh"], [171, "sf-to-sh"]], "sh_to_sf": [[167, "sh-to-sf"], [171, "sh-to-sf"]], "direction": [[168, "module-dipy.direction"]], "Module: direction.bootstrap_direction_getter": [[168, "module-dipy.direction.bootstrap_direction_getter"]], "Module: direction.closest_peak_direction_getter": [[168, "module-dipy.direction.closest_peak_direction_getter"]], "Module: direction.peaks": [[168, "module-dipy.direction.peaks"]], "Module: direction.pmf": [[168, "module-dipy.direction.pmf"]], "Module: direction.probabilistic_direction_getter": [[168, "module-dipy.direction.probabilistic_direction_getter"]], "Module: direction.ptt_direction_getter": [[168, "module-dipy.direction.ptt_direction_getter"]], "BootDirectionGetter": [[168, "bootdirectiongetter"]], "peak_directions": [[168, "peak-directions"], [168, "id9"], [168, "id15"]], "BaseDirectionGetter": [[168, "basedirectiongetter"]], "BasePmfDirectionGetter": [[168, "basepmfdirectiongetter"]], "ClosestPeakDirectionGetter": [[168, "closestpeakdirectiongetter"]], "PmfGenDirectionGetter": [[168, "pmfgendirectiongetter"]], "PeaksAndMetrics": [[168, "peaksandmetrics"]], "peak_directions_nl": [[168, "peak-directions-nl"]], "peaks_from_model": [[168, "peaks-from-model"]], "reshape_peaks_for_visualization": [[168, "reshape-peaks-for-visualization"]], "PmfGen": [[168, "pmfgen"]], "SHCoeffPmfGen": [[168, "shcoeffpmfgen"]], "SimplePmfGen": [[168, "simplepmfgen"]], "DeterministicMaximumDirectionGetter": [[168, "deterministicmaximumdirectiongetter"]], "ProbabilisticDirectionGetter": [[168, "probabilisticdirectiongetter"]], "random": [[168, "random"], [175, "random"]], "PTTDirectionGetter": [[168, "pttdirectiongetter"]], "min_radius_curvature_from_angle": [[168, "min-radius-curvature-from-angle"], [175, "min-radius-curvature-from-angle"]], "io": [[169, "module-dipy.io"]], "Module: io.bvectxt": [[169, "module-dipy.io.bvectxt"]], "Module: io.dpy": [[169, "module-dipy.io.dpy"]], "Module: io.gradients": [[169, "module-dipy.io.gradients"]], "Module: io.image": [[169, "module-dipy.io.image"]], "Module: io.peaks": [[169, "module-dipy.io.peaks"]], "Module: io.pickles": [[169, "module-dipy.io.pickles"]], "Module: io.stateful_tractogram": [[169, "module-dipy.io.stateful_tractogram"]], "Module: io.streamline": [[169, "module-dipy.io.streamline"]], "Module: io.utils": [[169, "module-dipy.io.utils"]], "Module: io.vtk": [[169, "module-dipy.io.vtk"]], "read_bvec_file": [[169, "read-bvec-file"]], "Dpy": [[169, "dpy"]], "read_bvals_bvecs": [[169, "read-bvals-bvecs"]], "load_nifti_data": [[169, "load-nifti-data"]], "load_nifti": [[169, "load-nifti"]], "save_nifti": [[169, "save-nifti"]], "save_qa_metric": [[169, "save-qa-metric"]], "load_peaks": [[169, "load-peaks"]], "save_peaks": [[169, "save-peaks"]], "peaks_to_niftis": [[169, "peaks-to-niftis"]], "save_pickle": [[169, "save-pickle"]], "load_pickle": [[169, "load-pickle"]], "Space": [[169, "space"]], "Origin": [[169, "origin"]], "StatefulTractogram": [[169, "statefultractogram"]], "set_sft_logger_level": [[169, "set-sft-logger-level"]], "save_tractogram": [[169, "save-tractogram"]], "load_tractogram": [[169, "load-tractogram"]], "load_generator": [[169, "load-generator"]], "save_generator": [[169, "save-generator"]], "load_trk": [[169, "load-trk"]], "load_tck": [[169, "load-tck"]], "load_trx": [[169, "load-trx"]], "load_vtk": [[169, "load-vtk"]], "load_vtp": [[169, "load-vtp"]], "load_fib": [[169, "load-fib"]], "load_dpy": [[169, "load-dpy"]], "save_trk": [[169, "save-trk"]], "save_tck": [[169, "save-tck"]], "save_trx": [[169, "save-trx"]], "save_vtk": [[169, "save-vtk"]], "save_vtp": [[169, "save-vtp"]], "save_fib": [[169, "save-fib"]], "save_dpy": [[169, "save-dpy"]], "nifti1_symmat": [[169, "nifti1-symmat"]], "make5d": [[169, "make5d"]], "decfa": [[169, "decfa"]], "decfa_to_float": [[169, "decfa-to-float"]], "is_reference_info_valid": [[169, "is-reference-info-valid"]], "split_name_with_gz": [[169, "split-name-with-gz"]], "get_reference_info": [[169, "get-reference-info"]], "is_header_compatible": [[169, "is-header-compatible"]], "create_tractogram_header": [[169, "create-tractogram-header"]], "create_nifti_header": [[169, "create-nifti-header"]], "save_buan_profiles_hdf5": [[169, "save-buan-profiles-hdf5"]], "read_img_arr_or_path": [[169, "read-img-arr-or-path"]], "load_polydata": [[169, "load-polydata"]], "save_polydata": [[169, "save-polydata"]], "save_vtk_streamlines": [[169, "save-vtk-streamlines"]], "load_vtk_streamlines": [[169, "load-vtk-streamlines"]], "nn": [[170, "module-dipy.nn"]], "Module: nn.cnn_1d_denoising": [[170, "module-dipy.nn.cnn_1d_denoising"]], "Title : Denoising diffusion weighted imaging data using CNN": [[170, "title-denoising-diffusion-weighted-imaging-data-using-cnn"]], "Reference": [[170, "reference"]], "Module: nn.evac": [[170, "module-dipy.nn.evac"]], "Module: nn.histo_resdnn": [[170, "module-dipy.nn.histo_resdnn"]], "Module: nn.model": [[170, "module-dipy.nn.model"]], "Module: nn.synb0": [[170, "module-dipy.nn.synb0"]], "Module: nn.utils": [[170, "module-dipy.nn.utils"]], "Cnn1DDenoiser": [[170, "cnn1ddenoiser"]], "Block": [[170, "block"]], "ChannelSum": [[170, "channelsum"]], "EVACPlus": [[170, "evacplus"]], "prepare_img": [[170, "prepare-img"]], "init_model": [[170, "init-model"]], "HistoResDNN": [[170, "historesdnn"]], "SingleLayerPerceptron": [[170, "singlelayerperceptron"]], "MultipleLayerPercepton": [[170, "multiplelayerpercepton"]], "EncoderBlock": [[170, "encoderblock"], [170, "id53"]], "DecoderBlock": [[170, "decoderblock"], [170, "id56"]], "Synb0": [[170, "synb0"]], "UNet3D": [[170, "unet3d"], [170, "id73"]], "normalize": [[170, "normalize"], [170, "id75"]], "unnormalize": [[170, "unnormalize"], [170, "id78"]], "set_logger_level": [[170, "set-logger-level"]], "transform_img": [[170, "transform-img"]], "recover_img": [[170, "recover-img"]], "correct_minor_errors": [[170, "correct-minor-errors"]], "reconst": [[171, "module-dipy.reconst"]], "Module: reconst.base": [[171, "module-dipy.reconst.base"]], "Module: reconst.cache": [[171, "module-dipy.reconst.cache"]], "Module: reconst.cross_validation": [[171, "module-dipy.reconst.cross_validation"]], "Module: reconst.csdeconv": [[171, "module-dipy.reconst.csdeconv"]], "Module: reconst.cti": [[171, "module-dipy.reconst.cti"]], "Module: reconst.dki": [[171, "module-dipy.reconst.dki"]], "Module: reconst.dki_micro": [[171, "module-dipy.reconst.dki_micro"]], "Module: reconst.dsi": [[171, "module-dipy.reconst.dsi"]], "Module: reconst.dti": [[171, "module-dipy.reconst.dti"]], "Module: reconst.eudx_direction_getter": [[171, "module-dipy.reconst.eudx_direction_getter"]], "Module: reconst.forecast": [[171, "module-dipy.reconst.forecast"]], "Module: reconst.fwdti": [[171, "module-dipy.reconst.fwdti"]], "Module: reconst.gqi": [[171, "module-dipy.reconst.gqi"]], "Module: reconst.ivim": [[171, "module-dipy.reconst.ivim"]], "Module: reconst.mapmri": [[171, "module-dipy.reconst.mapmri"]], "Module: reconst.mcsd": [[171, "module-dipy.reconst.mcsd"]], "Module: reconst.msdki": [[171, "module-dipy.reconst.msdki"]], "Module: reconst.multi_voxel": [[171, "module-dipy.reconst.multi_voxel"]], "Module: reconst.odf": [[171, "module-dipy.reconst.odf"]], "Module: reconst.qtdmri": [[171, "module-dipy.reconst.qtdmri"]], "Module: reconst.qti": [[171, "module-dipy.reconst.qti"]], "Module: reconst.quick_squash": [[171, "module-dipy.reconst.quick_squash"]], "Module: reconst.recspeed": [[171, "module-dipy.reconst.recspeed"]], "Module: reconst.rumba": [[171, "module-dipy.reconst.rumba"]], "Module: reconst.sfm": [[171, "module-dipy.reconst.sfm"]], "Module: reconst.shm": [[171, "module-dipy.reconst.shm"]], "Module: reconst.shore": [[171, "module-dipy.reconst.shore"]], "Module: reconst.utils": [[171, "module-dipy.reconst.utils"]], "Module: reconst.vec_val_sum": [[171, "module-dipy.reconst.vec_val_sum"]], "ReconstModel": [[171, "reconstmodel"]], "ReconstFit": [[171, "reconstfit"]], "Cache": [[171, "cache"]], "coeff_of_determination": [[171, "coeff-of-determination"]], "kfold_xval": [[171, "kfold-xval"]], "AxSymShResponse": [[171, "axsymshresponse"]], "ConstrainedSphericalDeconvModel": [[171, "constrainedsphericaldeconvmodel"]], "ConstrainedSDTModel": [[171, "constrainedsdtmodel"]], "auto_response": [[171, "auto-response"]], "response_from_mask": [[171, "response-from-mask"]], "estimate_response": [[171, "estimate-response"]], "forward_sdt_deconv_mat": [[171, "forward-sdt-deconv-mat"]], "csdeconv": [[171, "csdeconv"]], "odf_deconv": [[171, "odf-deconv"]], "odf_sh_to_sharp": [[171, "odf-sh-to-sharp"]], "mask_for_response_ssst": [[171, "mask-for-response-ssst"]], "response_from_mask_ssst": [[171, "response-from-mask-ssst"]], "auto_response_ssst": [[171, "auto-response-ssst"]], "recursive_response": [[171, "recursive-response"]], "fa_trace_to_lambdas": [[171, "fa-trace-to-lambdas"]], "CorrelationTensorModel": [[171, "correlationtensormodel"]], "CorrelationTensorFit": [[171, "correlationtensorfit"]], "Parameters:": [[171, "id164"]], "from_qte_to_cti": [[171, "from-qte-to-cti"]], "multi_gaussian_k_from_c": [[171, "multi-gaussian-k-from-c"]], "split_cti_params": [[171, "split-cti-params"]], "cti_prediction": [[171, "cti-prediction"]], "params_to_cti_params": [[171, "params-to-cti-params"]], "ls_fit_cti": [[171, "ls-fit-cti"]], "DiffusionKurtosisModel": [[171, "diffusionkurtosismodel"]], "DiffusionKurtosisFit": [[171, "diffusionkurtosisfit"]], "carlson_rf": [[171, "carlson-rf"]], "carlson_rd": [[171, "carlson-rd"]], "directional_diffusion": [[171, "directional-diffusion"]], "directional_diffusion_variance": [[171, "directional-diffusion-variance"]], "directional_kurtosis": [[171, "directional-kurtosis"]], "apparent_kurtosis_coef": [[171, "apparent-kurtosis-coef"]], "mean_kurtosis": [[171, "mean-kurtosis"]], "radial_kurtosis": [[171, "radial-kurtosis"]], "axial_kurtosis": [[171, "axial-kurtosis"]], "kurtosis_maximum": [[171, "kurtosis-maximum"]], "mean_kurtosis_tensor": [[171, "mean-kurtosis-tensor"]], "kurtosis_fractional_anisotropy": [[171, "kurtosis-fractional-anisotropy"]], "dki_prediction": [[171, "dki-prediction"]], "params_to_dki_params": [[171, "params-to-dki-params"]], "ls_fit_dki": [[171, "ls-fit-dki"]], "cls_fit_dki": [[171, "cls-fit-dki"]], "Wrotate": [[171, "wrotate"]], "Wrotate_element": [[171, "wrotate-element"]], "Wcons": [[171, "wcons"]], "split_dki_param": [[171, "split-dki-param"]], "KurtosisMicrostructureModel": [[171, "kurtosismicrostructuremodel"]], "KurtosisMicrostructuralFit": [[171, "kurtosismicrostructuralfit"]], "axonal_water_fraction": [[171, "axonal-water-fraction"]], "diffusion_components": [[171, "diffusion-components"]], "dkimicro_prediction": [[171, "dkimicro-prediction"]], "tortuosity": [[171, "tortuosity"]], "DiffusionSpectrumModel": [[171, "diffusionspectrummodel"]], "DiffusionSpectrumFit": [[171, "diffusionspectrumfit"]], "DiffusionSpectrumDeconvModel": [[171, "diffusionspectrumdeconvmodel"]], "DiffusionSpectrumDeconvFit": [[171, "diffusionspectrumdeconvfit"]], "create_qspace": [[171, "create-qspace"]], "create_qtable": [[171, "create-qtable"]], "hanning_filter": [[171, "hanning-filter"]], "pdf_interp_coords": [[171, "pdf-interp-coords"]], "pdf_odf": [[171, "pdf-odf"]], "half_to_full_qspace": [[171, "half-to-full-qspace"]], "project_hemisph_bvecs": [[171, "project-hemisph-bvecs"]], "threshold_propagator": [[171, "threshold-propagator"]], "gen_PSF": [[171, "gen-psf"]], "LR_deconv": [[171, "lr-deconv"]], "TensorModel": [[171, "tensormodel"]], "TensorFit": [[171, "tensorfit"]], "fractional_anisotropy": [[171, "fractional-anisotropy"]], "geodesic_anisotropy": [[171, "geodesic-anisotropy"]], "mean_diffusivity": [[171, "mean-diffusivity"]], "axial_diffusivity": [[171, "axial-diffusivity"]], "radial_diffusivity": [[171, "radial-diffusivity"]], "trace": [[171, "trace"]], "color_fa": [[171, "color-fa"]], "determinant": [[171, "determinant"]], "isotropic": [[171, "isotropic"]], "deviatoric": [[171, "deviatoric"]], "norm": [[171, "norm"]], "mode": [[171, "mode"]], "linearity": [[171, "linearity"]], "planarity": [[171, "planarity"]], "sphericity": [[171, "sphericity"]], "apparent_diffusion_coef": [[171, "apparent-diffusion-coef"]], "tensor_prediction": [[171, "tensor-prediction"]], "iter_fit_tensor": [[171, "iter-fit-tensor"]], "wls_fit_tensor": [[171, "wls-fit-tensor"], [171, "id599"]], "ols_fit_tensor": [[171, "ols-fit-tensor"]], "nlls_fit_tensor": [[171, "nlls-fit-tensor"]], "restore_fit_tensor": [[171, "restore-fit-tensor"]], "_lt_indices": [[171, "lt-indices"]], "from_lower_triangular": [[171, "from-lower-triangular"]], "_lt_rows": [[171, "lt-rows"]], "_lt_cols": [[171, "lt-cols"]], "lower_triangular": [[171, "lower-triangular"]], "decompose_tensor": [[171, "decompose-tensor"]], "design_matrix": [[171, "design-matrix"], [171, "id961"], [171, "id1103"]], "quantize_evecs": [[171, "quantize-evecs"]], "eig_from_lo_tri": [[171, "eig-from-lo-tri"]], "EuDXDirectionGetter": [[171, "eudxdirectiongetter"]], "ForecastModel": [[171, "forecastmodel"]], "ForecastFit": [[171, "forecastfit"]], "find_signal_means": [[171, "find-signal-means"]], "forecast_error_func": [[171, "forecast-error-func"]], "psi_l": [[171, "psi-l"]], "forecast_matrix": [[171, "forecast-matrix"]], "rho_matrix": [[171, "rho-matrix"]], "lb_forecast": [[171, "lb-forecast"]], "FreeWaterTensorModel": [[171, "freewatertensormodel"]], "FreeWaterTensorFit": [[171, "freewatertensorfit"]], "fwdti_prediction": [[171, "fwdti-prediction"]], "wls_iter": [[171, "wls-iter"]], "nls_iter": [[171, "nls-iter"]], "nls_fit_tensor": [[171, "nls-fit-tensor"]], "lower_triangular_to_cholesky": [[171, "lower-triangular-to-cholesky"]], "cholesky_to_lower_triangular": [[171, "cholesky-to-lower-triangular"]], "GeneralizedQSamplingModel": [[171, "generalizedqsamplingmodel"]], "GeneralizedQSamplingFit": [[171, "generalizedqsamplingfit"]], "normalize_qa": [[171, "normalize-qa"]], "squared_radial_component": [[171, "squared-radial-component"]], "npa": [[171, "npa"]], "equatorial_zone_vertices": [[171, "equatorial-zone-vertices"]], "polar_zone_vertices": [[171, "polar-zone-vertices"]], "upper_hemi_map": [[171, "upper-hemi-map"]], "equatorial_maximum": [[171, "equatorial-maximum"]], "patch_vertices": [[171, "patch-vertices"]], "patch_maximum": [[171, "patch-maximum"]], "odf_sum": [[171, "odf-sum"]], "patch_sum": [[171, "patch-sum"]], "triple_odf_maxima": [[171, "triple-odf-maxima"]], "IvimModelTRR": [[171, "ivimmodeltrr"]], "IvimModelVP": [[171, "ivimmodelvp"]], "IvimFit": [[171, "ivimfit"]], "ivim_prediction": [[171, "ivim-prediction"]], "f_D_star_prediction": [[171, "f-d-star-prediction"]], "f_D_star_error": [[171, "f-d-star-error"]], "ivim_model_selector": [[171, "ivim-model-selector"]], "MapmriModel": [[171, "mapmrimodel"]], "MapmriFit": [[171, "mapmrifit"]], "isotropic_scale_factor": [[171, "isotropic-scale-factor"]], "mapmri_index_matrix": [[171, "mapmri-index-matrix"]], "b_mat": [[171, "b-mat"]], "b_mat_isotropic": [[171, "b-mat-isotropic"]], "mapmri_phi_1d": [[171, "mapmri-phi-1d"]], "mapmri_phi_matrix": [[171, "mapmri-phi-matrix"]], "mapmri_psi_1d": [[171, "mapmri-psi-1d"]], "mapmri_psi_matrix": [[171, "mapmri-psi-matrix"]], "mapmri_odf_matrix": [[171, "mapmri-odf-matrix"]], "mapmri_isotropic_phi_matrix": [[171, "mapmri-isotropic-phi-matrix"]], "mapmri_isotropic_radial_signal_basis": [[171, "mapmri-isotropic-radial-signal-basis"]], "mapmri_isotropic_M_mu_independent": [[171, "mapmri-isotropic-m-mu-independent"]], "mapmri_isotropic_M_mu_dependent": [[171, "mapmri-isotropic-m-mu-dependent"]], "mapmri_isotropic_psi_matrix": [[171, "mapmri-isotropic-psi-matrix"]], "mapmri_isotropic_radial_pdf_basis": [[171, "mapmri-isotropic-radial-pdf-basis"]], "mapmri_isotropic_K_mu_independent": [[171, "mapmri-isotropic-k-mu-independent"]], "mapmri_isotropic_K_mu_dependent": [[171, "mapmri-isotropic-k-mu-dependent"]], "binomialfloat": [[171, "binomialfloat"]], "mapmri_isotropic_odf_matrix": [[171, "mapmri-isotropic-odf-matrix"]], "mapmri_isotropic_odf_sh_matrix": [[171, "mapmri-isotropic-odf-sh-matrix"]], "mapmri_isotropic_laplacian_reg_matrix": [[171, "mapmri-isotropic-laplacian-reg-matrix"]], "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix": [[171, "mapmri-isotropic-laplacian-reg-matrix-from-index-matrix"]], "mapmri_isotropic_index_matrix": [[171, "mapmri-isotropic-index-matrix"]], "create_rspace": [[171, "create-rspace"], [171, "id1290"]], "delta": [[171, "delta"]], "map_laplace_u": [[171, "map-laplace-u"]], "map_laplace_t": [[171, "map-laplace-t"]], "map_laplace_s": [[171, "map-laplace-s"]], "mapmri_STU_reg_matrices": [[171, "mapmri-stu-reg-matrices"]], "mapmri_laplacian_reg_matrix": [[171, "mapmri-laplacian-reg-matrix"]], "generalized_crossvalidation_array": [[171, "generalized-crossvalidation-array"]], "generalized_crossvalidation": [[171, "generalized-crossvalidation"], [171, "id1045"]], "gcv_cost_function": [[171, "gcv-cost-function"]], "MultiShellResponse": [[171, "multishellresponse"]], "MultiShellDeconvModel": [[171, "multishelldeconvmodel"]], "MSDeconvFit": [[171, "msdeconvfit"]], "QpFitter": [[171, "qpfitter"]], "multi_tissue_basis": [[171, "multi-tissue-basis"]], "solve_qp": [[171, "solve-qp"]], "multi_shell_fiber_response": [[171, "multi-shell-fiber-response"]], "mask_for_response_msmt": [[171, "mask-for-response-msmt"]], "response_from_mask_msmt": [[171, "response-from-mask-msmt"]], "auto_response_msmt": [[171, "auto-response-msmt"]], "MeanDiffusionKurtosisModel": [[171, "meandiffusionkurtosismodel"]], "MeanDiffusionKurtosisFit": [[171, "meandiffusionkurtosisfit"]], "mean_signal_bvalue": [[171, "mean-signal-bvalue"]], "msk_from_awf": [[171, "msk-from-awf"]], "awf_from_msk": [[171, "awf-from-msk"]], "msdki_prediction": [[171, "msdki-prediction"]], "wls_fit_msdki": [[171, "wls-fit-msdki"]], "MultiVoxelFit": [[171, "multivoxelfit"]], "CallableArray": [[171, "callablearray"]], "multi_voxel_fit": [[171, "multi-voxel-fit"]], "OdfModel": [[171, "odfmodel"]], "OdfFit": [[171, "odffit"]], "gfa": [[171, "gfa"]], "minmax_normalize": [[171, "minmax-normalize"]], "QtdmriModel": [[171, "qtdmrimodel"]], "QtdmriFit": [[171, "qtdmrifit"]], "qtdmri_to_mapmri_matrix": [[171, "qtdmri-to-mapmri-matrix"]], "qtdmri_isotropic_to_mapmri_matrix": [[171, "qtdmri-isotropic-to-mapmri-matrix"]], "qtdmri_temporal_normalization": [[171, "qtdmri-temporal-normalization"]], "qtdmri_mapmri_normalization": [[171, "qtdmri-mapmri-normalization"]], "qtdmri_mapmri_isotropic_normalization": [[171, "qtdmri-mapmri-isotropic-normalization"]], "qtdmri_signal_matrix_": [[171, "qtdmri-signal-matrix"]], "qtdmri_signal_matrix": [[171, "id1023"]], "qtdmri_eap_matrix": [[171, "qtdmri-eap-matrix"]], "qtdmri_isotropic_signal_matrix_": [[171, "qtdmri-isotropic-signal-matrix"]], "qtdmri_isotropic_signal_matrix": [[171, "id1024"]], "qtdmri_eap_matrix_": [[171, "id1025"]], "qtdmri_isotropic_eap_matrix_": [[171, "qtdmri-isotropic-eap-matrix"]], "qtdmri_isotropic_eap_matrix": [[171, "id1026"]], "radial_basis_opt": [[171, "radial-basis-opt"]], "angular_basis_opt": [[171, "angular-basis-opt"]], "radial_basis_EAP_opt": [[171, "radial-basis-eap-opt"]], "angular_basis_EAP_opt": [[171, "angular-basis-eap-opt"]], "temporal_basis": [[171, "temporal-basis"]], "qtdmri_index_matrix": [[171, "qtdmri-index-matrix"]], "qtdmri_isotropic_index_matrix": [[171, "qtdmri-isotropic-index-matrix"]], "qtdmri_laplacian_reg_matrix": [[171, "qtdmri-laplacian-reg-matrix"]], "qtdmri_isotropic_laplacian_reg_matrix": [[171, "qtdmri-isotropic-laplacian-reg-matrix"]], "part23_reg_matrix_q": [[171, "part23-reg-matrix-q"]], "part23_iso_reg_matrix_q": [[171, "part23-iso-reg-matrix-q"]], "part4_reg_matrix_q": [[171, "part4-reg-matrix-q"]], "part4_iso_reg_matrix_q": [[171, "part4-iso-reg-matrix-q"]], "part1_reg_matrix_tau": [[171, "part1-reg-matrix-tau"]], "part23_reg_matrix_tau": [[171, "part23-reg-matrix-tau"]], "part4_reg_matrix_tau": [[171, "part4-reg-matrix-tau"]], "H": [[171, "h"]], "GCV_cost_function": [[171, "id1048"]], "qtdmri_isotropic_scaling": [[171, "qtdmri-isotropic-scaling"]], "qtdmri_anisotropic_scaling": [[171, "qtdmri-anisotropic-scaling"]], "design_matrix_spatial": [[171, "design-matrix-spatial"]], "create_rt_space_grid": [[171, "create-rt-space-grid"]], "qtdmri_number_of_coefficients": [[171, "qtdmri-number-of-coefficients"]], "l1_crossvalidation": [[171, "l1-crossvalidation"]], "elastic_crossvalidation": [[171, "elastic-crossvalidation"]], "visualise_gradient_table_G_Delta_rainbow": [[171, "visualise-gradient-table-g-delta-rainbow"]], "QtiModel": [[171, "qtimodel"]], "QtiFit": [[171, "qtifit"]], "from_3x3_to_6x1": [[171, "from-3x3-to-6x1"]], "from_6x1_to_3x3": [[171, "from-6x1-to-3x3"]], "from_6x6_to_21x1": [[171, "from-6x6-to-21x1"]], "from_21x1_to_6x6": [[171, "from-21x1-to-6x6"]], "cvxpy_1x6_to_3x3": [[171, "cvxpy-1x6-to-3x3"]], "cvxpy_1x21_to_6x6": [[171, "cvxpy-1x21-to-6x6"]], "dtd_covariance": [[171, "dtd-covariance"]], "qti_signal": [[171, "qti-signal"]], "quick_squash": [[171, "quick-squash"]], "reduce": [[171, "reduce"]], "adj_to_countarrs": [[171, "adj-to-countarrs"]], "argmax_from_adj": [[171, "argmax-from-adj"]], "argmax_from_countarrs": [[171, "argmax-from-countarrs"]], "le_to_odf": [[171, "le-to-odf"]], "local_maxima": [[171, "local-maxima"]], "proc_reco_args": [[171, "proc-reco-args"]], "remove_similar_vertices": [[171, "remove-similar-vertices"]], "search_descending": [[171, "search-descending"]], "sum_on_blocks_1d": [[171, "sum-on-blocks-1d"]], "RumbaSDModel": [[171, "rumbasdmodel"]], "RumbaFit": [[171, "rumbafit"]], "rumba_deconv": [[171, "rumba-deconv"]], "mbessel_ratio": [[171, "mbessel-ratio"]], "generate_kernel": [[171, "generate-kernel"]], "rumba_deconv_global": [[171, "rumba-deconv-global"]], "IsotropicModel": [[171, "isotropicmodel"]], "IsotropicFit": [[171, "isotropicfit"]], "ExponentialIsotropicModel": [[171, "exponentialisotropicmodel"]], "ExponentialIsotropicFit": [[171, "exponentialisotropicfit"]], "SparseFascicleModel": [[171, "sparsefasciclemodel"]], "SparseFascicleFit": [[171, "sparsefasciclefit"]], "sfm_design_matrix": [[171, "sfm-design-matrix"]], "SphHarmModel": [[171, "sphharmmodel"]], "QballBaseModel": [[171, "qballbasemodel"]], "SphHarmFit": [[171, "sphharmfit"]], "CsaOdfModel": [[171, "csaodfmodel"]], "OpdtModel": [[171, "opdtmodel"]], "QballModel": [[171, "qballmodel"]], "ResidualBootstrapWrapper": [[171, "residualbootstrapwrapper"]], "forward_sdeconv_mat": [[171, "forward-sdeconv-mat"]], "sh_to_rh": [[171, "sh-to-rh"]], "gen_dirac": [[171, "gen-dirac"]], "spherical_harmonics": [[171, "spherical-harmonics"]], "real_sph_harm": [[171, "real-sph-harm"]], "real_sh_tournier_from_index": [[171, "real-sh-tournier-from-index"]], "real_sh_descoteaux_from_index": [[171, "real-sh-descoteaux-from-index"]], "real_sh_tournier": [[171, "real-sh-tournier"]], "real_sh_descoteaux": [[171, "real-sh-descoteaux"]], "real_sym_sh_mrtrix": [[171, "real-sym-sh-mrtrix"]], "real_sym_sh_basis": [[171, "real-sym-sh-basis"]], "sph_harm_ind_list": [[171, "sph-harm-ind-list"]], "order_from_ncoef": [[171, "order-from-ncoef"]], "smooth_pinv": [[171, "smooth-pinv"]], "lazy_index": [[171, "lazy-index"]], "normalize_data": [[171, "normalize-data"]], "hat": [[171, "hat"]], "lcr_matrix": [[171, "lcr-matrix"]], "bootstrap_data_array": [[171, "bootstrap-data-array"]], "bootstrap_data_voxel": [[171, "bootstrap-data-voxel"]], "sh_to_sf_matrix": [[171, "sh-to-sf-matrix"]], "calculate_max_order": [[171, "calculate-max-order"]], "anisotropic_power": [[171, "anisotropic-power"]], "convert_sh_to_full_basis": [[171, "convert-sh-to-full-basis"]], "convert_sh_from_legacy": [[171, "convert-sh-from-legacy"]], "convert_sh_to_legacy": [[171, "convert-sh-to-legacy"]], "ShoreModel": [[171, "shoremodel"]], "ShoreFit": [[171, "shorefit"]], "shore_matrix": [[171, "shore-matrix"]], "shore_matrix_pdf": [[171, "shore-matrix-pdf"]], "shore_matrix_odf": [[171, "shore-matrix-odf"]], "l_shore": [[171, "l-shore"]], "n_shore": [[171, "n-shore"]], "shore_indices": [[171, "shore-indices"]], "shore_order": [[171, "shore-order"]], "dki_design_matrix": [[171, "dki-design-matrix"]], "cti_design_matrix": [[171, "cti-design-matrix"]], "vec_val_vect": [[171, "vec-val-vect"]], "segment": [[172, "module-dipy.segment"]], "Module: segment.bundles": [[172, "module-dipy.segment.bundles"]], "Module: segment.clustering": [[172, "module-dipy.segment.clustering"]], "Module: segment.clustering_algorithms": [[172, "module-dipy.segment.clustering_algorithms"]], "Module: segment.clusteringspeed": [[172, "module-dipy.segment.clusteringspeed"]], "Module: segment.cythonutils": [[172, "module-dipy.segment.cythonutils"]], "Module: segment.featurespeed": [[172, "module-dipy.segment.featurespeed"]], "Module: segment.fss": [[172, "module-dipy.segment.fss"]], "Module: segment.mask": [[172, "module-dipy.segment.mask"]], "Module: segment.metric": [[172, "module-dipy.segment.metric"]], "Module: segment.metricspeed": [[172, "module-dipy.segment.metricspeed"]], "Module: segment.mrf": [[172, "module-dipy.segment.mrf"]], "Module: segment.threshold": [[172, "module-dipy.segment.threshold"]], "Module: segment.tissue": [[172, "module-dipy.segment.tissue"]], "check_range": [[172, "check-range"]], "bundle_adjacency": [[172, "bundle-adjacency"]], "ba_analysis": [[172, "ba-analysis"]], "cluster_bundle": [[172, "cluster-bundle"]], "bundle_shape_similarity": [[172, "bundle-shape-similarity"]], "Identity": [[172, "identity"]], "Cluster": [[172, "cluster"]], "ClusterCentroid": [[172, "clustercentroid"], [172, "id79"], [172, "id99"]], "ClusterMap": [[172, "clustermap"]], "ClusterMapCentroid": [[172, "clustermapcentroid"], [172, "id84"], [172, "id104"]], "Clustering": [[172, "clustering"]], "QuickBundles": [[172, "quickbundles"], [172, "id108"]], "QuickBundlesX": [[172, "quickbundlesx"], [172, "id109"]], "TreeCluster": [[172, "treecluster"], [172, "id110"]], "TreeClusterMap": [[172, "treeclustermap"], [172, "id111"]], "qbx_and_merge": [[172, "qbx-and-merge"]], "DTYPE": [[172, "dtype"], [172, "id107"]], "clusters_centroid2clustermap_centroid": [[172, "clusters-centroid2clustermap-centroid"]], "peek": [[172, "peek"]], "quickbundles": [[172, "id88"]], "quickbundlesx": [[172, "id93"]], "Clusters": [[172, "clusters"]], "ClustersCentroid": [[172, "clusterscentroid"]], "evaluate_aabb_checks": [[172, "evaluate-aabb-checks"]], "ArcLengthFeature": [[172, "arclengthfeature"]], "CenterOfMassFeature": [[172, "centerofmassfeature"]], "CythonFeature": [[172, "cythonfeature"]], "Feature": [[172, "feature"]], "IdentityFeature": [[172, "identityfeature"]], "MidpointFeature": [[172, "midpointfeature"]], "ResampleFeature": [[172, "resamplefeature"]], "VectorOfEndpointsFeature": [[172, "vectorofendpointsfeature"]], "extract": [[172, "extract"]], "infer_shape": [[172, "infer-shape"]], "FastStreamlineSearch": [[172, "faststreamlinesearch"]], "nearest_from_matrix_row": [[172, "nearest-from-matrix-row"]], "nearest_from_matrix_col": [[172, "nearest-from-matrix-col"]], "multi_median": [[172, "multi-median"]], "applymask": [[172, "applymask"]], "bounding_box": [[172, "bounding-box"]], "crop": [[172, "crop"]], "median_otsu": [[172, "median-otsu"]], "segment_from_cfa": [[172, "segment-from-cfa"]], "clean_cc_mask": [[172, "clean-cc-mask"]], "mdf": [[172, "mdf"]], "mean_manhattan_distance": [[172, "mean-manhattan-distance"]], "mean_euclidean_distance": [[172, "mean-euclidean-distance"]], "AveragePointwiseEuclideanMetric": [[172, "averagepointwiseeuclideanmetric"]], "CosineMetric": [[172, "cosinemetric"]], "CythonMetric": [[172, "cythonmetric"]], "Metric": [[172, "metric"]], "MinimumAverageDirectFlipMetric": [[172, "minimumaveragedirectflipmetric"]], "SumPointwiseEuclideanMetric": [[172, "sumpointwiseeuclideanmetric"]], "dist": [[172, "dist"]], "distance_matrix": [[172, "distance-matrix"]], "ConstantObservationModel": [[172, "constantobservationmodel"]], "IteratedConditionalModes": [[172, "iteratedconditionalmodes"]], "otsu": [[172, "otsu"]], "upper_bound_by_rate": [[172, "upper-bound-by-rate"]], "upper_bound_by_percent": [[172, "upper-bound-by-percent"]], "TissueClassifierHMRF": [[172, "tissueclassifierhmrf"]], "sims": [[173, "module-dipy.sims"]], "Module: sims.phantom": [[173, "module-dipy.sims.phantom"]], "Module: sims.voxel": [[173, "module-dipy.sims.voxel"]], "add_noise": [[173, "add-noise"], [173, "id14"]], "diff2eigenvectors": [[173, "diff2eigenvectors"]], "orbital_phantom": [[173, "orbital-phantom"]], "diffusion_evals": [[173, "diffusion-evals"]], "sticks_and_ball": [[173, "sticks-and-ball"]], "callaghan_perpendicular": [[173, "callaghan-perpendicular"]], "gaussian_parallel": [[173, "gaussian-parallel"]], "cylinders_and_ball_soderman": [[173, "cylinders-and-ball-soderman"]], "single_tensor": [[173, "single-tensor"]], "multi_tensor": [[173, "multi-tensor"]], "multi_tensor_dki": [[173, "multi-tensor-dki"]], "kurtosis_element": [[173, "kurtosis-element"]], "dki_signal": [[173, "dki-signal"]], "single_tensor_odf": [[173, "single-tensor-odf"]], "all_tensor_evecs": [[173, "all-tensor-evecs"]], "multi_tensor_odf": [[173, "multi-tensor-odf"]], "single_tensor_rtop": [[173, "single-tensor-rtop"]], "multi_tensor_rtop": [[173, "multi-tensor-rtop"]], "single_tensor_pdf": [[173, "single-tensor-pdf"]], "multi_tensor_pdf": [[173, "multi-tensor-pdf"]], "single_tensor_msd": [[173, "single-tensor-msd"]], "multi_tensor_msd": [[173, "multi-tensor-msd"]], "stats": [[174, "module-dipy.stats"]], "Module: stats.analysis": [[174, "module-dipy.stats.analysis"]], "peak_values": [[174, "peak-values"]], "anatomical_measures": [[174, "anatomical-measures"]], "assignment_map": [[174, "assignment-map"]], "gaussian_weights": [[174, "gaussian-weights"]], "afq_profile": [[174, "afq-profile"]], "tracking": [[175, "module-dipy.tracking"]], "Module: tracking._utils": [[175, "module-dipy.tracking._utils"]], "Module: tracking.direction_getter": [[175, "module-dipy.tracking.direction_getter"]], "Module: tracking.distances": [[175, "module-dipy.tracking.distances"]], "Module: tracking.fbcmeasures": [[175, "module-dipy.tracking.fbcmeasures"]], "Module: tracking.learning": [[175, "module-dipy.tracking.learning"]], "Module: tracking.life": [[175, "module-dipy.tracking.life"]], "Module: tracking.local_tracking": [[175, "module-dipy.tracking.local_tracking"]], "Module: tracking.localtrack": [[175, "module-dipy.tracking.localtrack"]], "Module: tracking.mesh": [[175, "module-dipy.tracking.mesh"]], "Module: tracking.metrics": [[175, "module-dipy.tracking.metrics"]], "Module: tracking.propspeed": [[175, "module-dipy.tracking.propspeed"]], "Module: tracking.stopping_criterion": [[175, "module-dipy.tracking.stopping_criterion"]], "Module: tracking.streamline": [[175, "module-dipy.tracking.streamline"]], "Module: tracking.streamlinespeed": [[175, "module-dipy.tracking.streamlinespeed"]], "Module: tracking.utils": [[175, "module-dipy.tracking.utils"]], "Important Notes": [[175, "important-notes"]], "Module: tracking.vox2track": [[175, "module-dipy.tracking.vox2track"]], "DirectionGetter": [[175, "directiongetter"]], "add_3vecs": [[175, "add-3vecs"]], "approx_polygon_track": [[175, "approx-polygon-track"]], "approximate_mdl_trajectory": [[175, "approximate-mdl-trajectory"]], "bundles_distances_mam": [[175, "bundles-distances-mam"]], "bundles_distances_mdf": [[175, "bundles-distances-mdf"]], "cut_plane": [[175, "cut-plane"]], "inner_3vecs": [[175, "inner-3vecs"]], "intersect_segment_cylinder": [[175, "intersect-segment-cylinder"]], "larch_3merge": [[175, "larch-3merge"]], "larch_3split": [[175, "larch-3split"]], "lee_angle_distance": [[175, "lee-angle-distance"]], "lee_perpendicular_distance": [[175, "lee-perpendicular-distance"]], "local_skeleton_clustering": [[175, "local-skeleton-clustering"]], "local_skeleton_clustering_3pts": [[175, "local-skeleton-clustering-3pts"]], "mam_distances": [[175, "mam-distances"]], "minimum_closest_distance": [[175, "minimum-closest-distance"]], "most_similar_track_mam": [[175, "most-similar-track-mam"]], "mul_3vec": [[175, "mul-3vec"]], "mul_3vecs": [[175, "mul-3vecs"]], "norm_3vec": [[175, "norm-3vec"]], "normalized_3vec": [[175, "normalized-3vec"]], "point_segment_sq_distance": [[175, "point-segment-sq-distance"]], "point_track_sq_distance_check": [[175, "point-track-sq-distance-check"]], "sub_3vecs": [[175, "sub-3vecs"]], "track_dist_3pts": [[175, "track-dist-3pts"]], "track_roi_intersection_check": [[175, "track-roi-intersection-check"]], "FBCMeasures": [[175, "fbcmeasures"]], "KDTree": [[175, "kdtree"]], "interp1d": [[175, "interp1d"]], "compute_rfbc": [[175, "compute-rfbc"]], "min_moving_average": [[175, "min-moving-average"]], "detect_corresponding_tracks": [[175, "detect-corresponding-tracks"]], "detect_corresponding_tracks_plus": [[175, "detect-corresponding-tracks-plus"]], "LifeSignalMaker": [[175, "lifesignalmaker"]], "FiberModel": [[175, "fibermodel"]], "FiberFit": [[175, "fiberfit"]], "streamline_gradients": [[175, "streamline-gradients"]], "grad_tensor": [[175, "grad-tensor"]], "streamline_tensors": [[175, "streamline-tensors"]], "streamline_signal": [[175, "streamline-signal"]], "voxel2streamline": [[175, "voxel2streamline"]], "LocalTracking": [[175, "localtracking"]], "ParticleFilteringTracking": [[175, "particlefilteringtracking"]], "local_tracker": [[175, "local-tracker"]], "pft_tracker": [[175, "pft-tracker"]], "random_coordinates_from_surface": [[175, "random-coordinates-from-surface"]], "seeds_from_surface_coordinates": [[175, "seeds-from-surface-coordinates"]], "triangles_area": [[175, "triangles-area"]], "vertices_to_triangles_values": [[175, "vertices-to-triangles-values"]], "winding": [[175, "winding"]], "length": [[175, "length"], [175, "id265"], [175, "id303"]], "bytes": [[175, "bytes"]], "midpoint": [[175, "midpoint"]], "downsample": [[175, "downsample"]], "magn": [[175, "magn"]], "frenet_serret": [[175, "frenet-serret"]], "mean_curvature": [[175, "mean-curvature"]], "mean_orientation": [[175, "mean-orientation"]], "generate_combinations": [[175, "generate-combinations"]], "longest_track_bundle": [[175, "longest-track-bundle"]], "intersect_sphere": [[175, "intersect-sphere"]], "inside_sphere": [[175, "inside-sphere"]], "inside_sphere_points": [[175, "inside-sphere-points"]], "spline": [[175, "spline"]], "startpoint": [[175, "startpoint"]], "endpoint": [[175, "endpoint"]], "arbitrarypoint": [[175, "arbitrarypoint"]], "principal_components": [[175, "principal-components"]], "midpoint2point": [[175, "midpoint2point"]], "eudx_both_directions": [[175, "eudx-both-directions"]], "ndarray_offset": [[175, "ndarray-offset"]], "ActStoppingCriterion": [[175, "actstoppingcriterion"]], "AnatomicalStoppingCriterion": [[175, "anatomicalstoppingcriterion"]], "BinaryStoppingCriterion": [[175, "binarystoppingcriterion"]], "CmcStoppingCriterion": [[175, "cmcstoppingcriterion"]], "StoppingCriterion": [[175, "stoppingcriterion"]], "StreamlineStatus": [[175, "streamlinestatus"]], "ThresholdStoppingCriterion": [[175, "thresholdstoppingcriterion"]], "unlist_streamlines": [[175, "unlist-streamlines"]], "relist_streamlines": [[175, "relist-streamlines"]], "center_streamlines": [[175, "center-streamlines"]], "deform_streamlines": [[175, "deform-streamlines"]], "transform_streamlines": [[175, "transform-streamlines"]], "select_random_set_of_streamlines": [[175, "select-random-set-of-streamlines"]], "select_by_rois": [[175, "select-by-rois"]], "See also": [[175, "id239"]], "cluster_confidence": [[175, "cluster-confidence"]], "orient_by_rois": [[175, "orient-by-rois"]], "orient_by_streamline": [[175, "orient-by-streamline"]], "values_from_volume": [[175, "values-from-volume"]], "nbytes": [[175, "nbytes"]], "Streamlines": [[175, "streamlines"]], "compress_streamlines": [[175, "compress-streamlines"]], "set_number_of_points": [[175, "set-number-of-points"]], "density_map": [[175, "density-map"]], "connectivity_matrix": [[175, "connectivity-matrix"]], "ndbincount": [[175, "ndbincount"]], "reduce_labels": [[175, "reduce-labels"]], "subsegment": [[175, "subsegment"]], "seeds_from_mask": [[175, "seeds-from-mask"]], "random_seeds_from_mask": [[175, "random-seeds-from-mask"]], "target": [[175, "target"]], "target_line_based": [[175, "target-line-based"]], "streamline_near_roi": [[175, "streamline-near-roi"]], "near_roi": [[175, "near-roi"]], "unique_rows": [[175, "unique-rows"]], "transform_tracking_output": [[175, "transform-tracking-output"]], "reduce_rois": [[175, "reduce-rois"]], "path_length": [[175, "path-length"]], "max_angle_from_curvature": [[175, "max-angle-from-curvature"]], "streamline_mapping": [[175, "streamline-mapping"]], "track_counts": [[175, "track-counts"]], "viz": [[176, "module-dipy.viz"]], "Module: viz.gmem": [[176, "module-dipy.viz.gmem"]], "Module: viz.horizon": [[176, "module-dipy.viz.horizon"]], "Module: viz.horizon.app": [[176, "module-dipy.viz.horizon.app"]], "Module: viz.horizon.tab": [[176, "module-dipy.viz.horizon.tab"]], "Module: viz.horizon.tab.base": [[176, "module-dipy.viz.horizon.tab.base"]], "Module: viz.horizon.tab.cluster": [[176, "module-dipy.viz.horizon.tab.cluster"]], "Module: viz.horizon.tab.peak": [[176, "module-dipy.viz.horizon.tab.peak"]], "Module: viz.horizon.tab.roi": [[176, "module-dipy.viz.horizon.tab.roi"]], "Module: viz.horizon.tab.slice": [[176, "module-dipy.viz.horizon.tab.slice"]], "Module: viz.horizon.util": [[176, "module-dipy.viz.horizon.util"]], "Module: viz.horizon.visualizer": [[176, "module-dipy.viz.horizon.visualizer"]], "Module: viz.horizon.visualizer.cluster": [[176, "module-dipy.viz.horizon.visualizer.cluster"]], "Module: viz.horizon.visualizer.slice": [[176, "module-dipy.viz.horizon.visualizer.slice"]], "Module: viz.panel": [[176, "module-dipy.viz.panel"]], "Module: viz.plotting": [[176, "module-dipy.viz.plotting"]], "Module: viz.projections": [[176, "module-dipy.viz.projections"]], "Module: viz.regtools": [[176, "module-dipy.viz.regtools"]], "Module: viz.streamline": [[176, "module-dipy.viz.streamline"]], "GlobalHorizon": [[176, "globalhorizon"]], "Horizon": [[176, "horizon"]], "horizon": [[176, "id1"]], "HorizonUIElement": [[176, "horizonuielement"]], "HorizonTab": [[176, "horizontab"]], "TabManager": [[176, "tabmanager"]], "build_label": [[176, "build-label"], [176, "id28"]], "build_slider": [[176, "build-slider"]], "Return": [[176, "return"]], "build_checkbox": [[176, "build-checkbox"]], "build_switcher": [[176, "build-switcher"]], "color_single_slider": [[176, "color-single-slider"]], "color_double_slider": [[176, "color-double-slider"]], "ClustersTab": [[176, "clusterstab"]], "PeaksTab": [[176, "peakstab"]], "ROIsTab": [[176, "roistab"]], "SlicesTab": [[176, "slicestab"]], "check_img_shapes": [[176, "check-img-shapes"]], "ClustersVisualizer": [[176, "clustersvisualizer"]], "SlicesVisualizer": [[176, "slicesvisualizer"]], "slicer_panel": [[176, "slicer-panel"]], "compare_maps": [[176, "compare-maps"]], "compare_qti_maps": [[176, "compare-qti-maps"]], "bundle_shape_profile": [[176, "bundle-shape-profile"]], "sph_project": [[176, "sph-project"]], "simple_plot": [[176, "simple-plot"]], "overlay_images": [[176, "overlay-images"]], "draw_lattice_2d": [[176, "draw-lattice-2d"]], "plot_2d_diffeomorphic_map": [[176, "plot-2d-diffeomorphic-map"]], "plot_slices": [[176, "plot-slices"]], "overlay_slices": [[176, "overlay-slices"]], "show_bundles": [[176, "show-bundles"]], "viz_two_bundles": [[176, "viz-two-bundles"]], "viz_vector_field": [[176, "viz-vector-field"]], "viz_displacement_mag": [[176, "viz-displacement-mag"]], "workflows": [[177, "module-dipy.workflows"]], "Module: workflows.align": [[177, "module-dipy.workflows.align"]], "Module: workflows.base": [[177, "module-dipy.workflows.base"]], "Module: workflows.cli": [[177, "module-dipy.workflows.cli"]], "Module: workflows.combined_workflow": [[177, "module-dipy.workflows.combined_workflow"]], "Module: workflows.denoise": [[177, "module-dipy.workflows.denoise"]], "Module: workflows.docstring_parser": [[177, "module-dipy.workflows.docstring_parser"]], "Module: workflows.flow_runner": [[177, "module-dipy.workflows.flow_runner"]], "Module: workflows.io": [[177, "module-dipy.workflows.io"]], "Module: workflows.mask": [[177, "module-dipy.workflows.mask"]], "Module: workflows.multi_io": [[177, "module-dipy.workflows.multi_io"]], "Module: workflows.nn": [[177, "module-dipy.workflows.nn"]], "Module: workflows.reconst": [[177, "module-dipy.workflows.reconst"]], "Module: workflows.segment": [[177, "module-dipy.workflows.segment"]], "Module: workflows.stats": [[177, "module-dipy.workflows.stats"]], "Module: workflows.tracking": [[177, "module-dipy.workflows.tracking"]], "Module: workflows.viz": [[177, "module-dipy.workflows.viz"]], "Module: workflows.workflow": [[177, "module-dipy.workflows.workflow"]], "ResliceFlow": [[177, "resliceflow"]], "SlrWithQbxFlow": [[177, "slrwithqbxflow"]], "ImageRegistrationFlow": [[177, "imageregistrationflow"]], "ApplyTransformFlow": [[177, "applytransformflow"]], "SynRegistrationFlow": [[177, "synregistrationflow"]], "MotionCorrectionFlow": [[177, "motioncorrectionflow"]], "BundleWarpFlow": [[177, "bundlewarpflow"]], "check_dimensions": [[177, "check-dimensions"]], "IntrospectiveArgumentParser": [[177, "introspectiveargumentparser"]], "get_args_default": [[177, "get-args-default"]], "none_or_dtype": [[177, "none-or-dtype"]], "run": [[177, "run"]], "CombinedWorkflow": [[177, "combinedworkflow"]], "Patch2SelfFlow": [[177, "patch2selfflow"]], "NLMeansFlow": [[177, "nlmeansflow"]], "LPCAFlow": [[177, "lpcaflow"]], "MPPCAFlow": [[177, "mppcaflow"]], "GibbsRingingFlow": [[177, "gibbsringingflow"]], "Reader": [[177, "reader"]], "NumpyDocString": [[177, "numpydocstring"]], "dedent_lines": [[177, "dedent-lines"]], "get_level": [[177, "get-level"]], "run_flow": [[177, "run-flow"]], "IoInfoFlow": [[177, "ioinfoflow"]], "FetchFlow": [[177, "fetchflow"]], "SplitFlow": [[177, "splitflow"]], "MaskFlow": [[177, "maskflow"]], "IOIterator": [[177, "ioiterator"]], "common_start": [[177, "common-start"]], "slash_to_under": [[177, "slash-to-under"]], "connect_output_paths": [[177, "connect-output-paths"]], "concatenate_inputs": [[177, "concatenate-inputs"]], "basename_without_extension": [[177, "basename-without-extension"]], "io_iterator": [[177, "io-iterator"]], "io_iterator_": [[177, "id49"]], "EVACPlusFlow": [[177, "evacplusflow"]], "ReconstMAPMRIFlow": [[177, "reconstmapmriflow"]], "ReconstDtiFlow": [[177, "reconstdtiflow"]], "ReconstCSDFlow": [[177, "reconstcsdflow"]], "ReconstCSAFlow": [[177, "reconstcsaflow"]], "ReconstDkiFlow": [[177, "reconstdkiflow"]], "ReconstIvimFlow": [[177, "reconstivimflow"]], "ReconstRUMBAFlow": [[177, "reconstrumbaflow"]], "MedianOtsuFlow": [[177, "medianotsuflow"]], "RecoBundlesFlow": [[177, "recobundlesflow"]], "LabelsBundlesFlow": [[177, "labelsbundlesflow"]], "SNRinCCFlow": [[177, "snrinccflow"]], "BundleAnalysisTractometryFlow": [[177, "bundleanalysistractometryflow"]], "LinearMixedModelsFlow": [[177, "linearmixedmodelsflow"]], "BundleShapeAnalysis": [[177, "bundleshapeanalysis"]], "buan_bundle_profiles": [[177, "buan-bundle-profiles"]], "LocalFiberTrackingPAMFlow": [[177, "localfibertrackingpamflow"]], "PFTrackingPAMFlow": [[177, "pftrackingpamflow"]], "HorizonFlow": [[177, "horizonflow"]], "Workflow": [[177, "workflow"]], "API Reference": [[178, "api-reference"]], "dipy_align_affine": [[179, "dipy-align-affine"]], "Usage": [[179, "usage"], [180, "usage"], [181, "usage"], [182, "usage"], [183, "usage"], [184, "usage"], [185, "usage"], [186, "usage"], [187, "usage"], [188, "usage"], [189, "usage"], [190, "usage"], [191, "usage"], [192, "usage"], [193, "usage"], [194, "usage"], [195, "usage"], [196, "usage"], [197, "usage"], [198, "usage"], [199, "usage"], [200, "usage"], [201, "usage"], [202, "usage"], [203, "usage"], [204, "usage"], [205, "usage"], [206, "usage"], [207, "usage"], [208, "usage"], [209, "usage"], [210, "usage"], [211, "usage"]], "Positional Arguments": [[179, "positional-arguments"], [180, "positional-arguments"], [181, "positional-arguments"], [182, "positional-arguments"], [183, "positional-arguments"], [184, "positional-arguments"], [185, "positional-arguments"], [186, "positional-arguments"], [187, "positional-arguments"], [188, "positional-arguments"], [189, "positional-arguments"], [190, "positional-arguments"], [191, "positional-arguments"], [192, "positional-arguments"], [193, "positional-arguments"], [194, "positional-arguments"], [195, "positional-arguments"], [196, "positional-arguments"], [197, "positional-arguments"], [198, "positional-arguments"], [199, "positional-arguments"], [200, "positional-arguments"], [201, "positional-arguments"], [202, "positional-arguments"], [203, "positional-arguments"], [204, "positional-arguments"], [205, "positional-arguments"], [206, "positional-arguments"], [207, "positional-arguments"], [208, "positional-arguments"], [209, "positional-arguments"], [210, "positional-arguments"], [211, "positional-arguments"]], "Output Arguments(Optional)": [[179, "output-arguments-optional"], [180, "output-arguments-optional"], [181, "output-arguments-optional"], [182, "output-arguments-optional"], [183, "output-arguments-optional"], [184, "output-arguments-optional"], [185, "output-arguments-optional"], [186, "output-arguments-optional"], [187, "output-arguments-optional"], [188, "output-arguments-optional"], [189, "output-arguments-optional"], [190, "output-arguments-optional"], [191, "output-arguments-optional"], [192, "output-arguments-optional"], [193, "output-arguments-optional"], [194, "output-arguments-optional"], [195, "output-arguments-optional"], [196, "output-arguments-optional"], [197, "output-arguments-optional"], [198, "output-arguments-optional"], [199, "output-arguments-optional"], [200, "output-arguments-optional"], [202, "output-arguments-optional"], [203, "output-arguments-optional"], [204, "output-arguments-optional"], [205, "output-arguments-optional"], [206, "output-arguments-optional"], [207, "output-arguments-optional"], [208, "output-arguments-optional"], [209, "output-arguments-optional"], [210, "output-arguments-optional"], [211, "output-arguments-optional"]], "dipy_align_syn": [[180, "dipy-align-syn"]], "dipy_apply_transform": [[181, "dipy-apply-transform"]], "dipy_buan_lmm": [[182, "dipy-buan-lmm"]], "dipy_buan_profiles": [[183, "dipy-buan-profiles"]], "dipy_buan_shapes": [[184, "dipy-buan-shapes"]], "dipy_bundlewarp": [[185, "dipy-bundlewarp"]], "dipy_correct_motion": [[186, "dipy-correct-motion"]], "dipy_denoise_lpca": [[187, "dipy-denoise-lpca"]], "dipy_denoise_mppca": [[188, "dipy-denoise-mppca"]], "dipy_denoise_nlmeans": [[189, "dipy-denoise-nlmeans"]], "dipy_denoise_patch2self": [[190, "dipy-denoise-patch2self"]], "dipy_evac_plus": [[191, "dipy-evac-plus"]], "dipy_fetch": [[192, "dipy-fetch"]], "dipy_fit_csa": [[193, "dipy-fit-csa"]], "dipy_fit_csd": [[194, "dipy-fit-csd"]], "dipy_fit_dki": [[195, "dipy-fit-dki"]], "dipy_fit_dti": [[196, "dipy-fit-dti"]], "dipy_fit_ivim": [[197, "dipy-fit-ivim"]], "dipy_fit_mapmri": [[198, "dipy-fit-mapmri"]], "dipy_gibbs_ringing": [[199, "dipy-gibbs-ringing"]], "dipy_horizon": [[200, "dipy-horizon"]], "dipy_info": [[201, "dipy-info"]], "dipy_labelsbundles": [[202, "dipy-labelsbundles"]], "dipy_mask": [[203, "dipy-mask"]], "dipy_median_otsu": [[204, "dipy-median-otsu"]], "dipy_recobundles": [[205, "dipy-recobundles"]], "dipy_reslice": [[206, "dipy-reslice"]], "dipy_slr": [[207, "dipy-slr"]], "dipy_snr_in_cc": [[208, "dipy-snr-in-cc"]], "dipy_split": [[209, "dipy-split"]], "dipy_track": [[210, "dipy-track"]], "dipy_track_pft": [[211, "dipy-track-pft"]], "Command Line Utilities Reference": [[212, "command-line-utilities-reference"]], "Release notes for DIPY version 0.10": [[213, "release-notes-for-dipy-version-0-10"]], "Release notes for DIPY version 0.11": [[214, "release-notes-for-dipy-version-0-11"]], "Release notes for DIPY version 0.12": [[215, "release-notes-for-dipy-version-0-12"]], "Release notes for DIPY version 0.13": [[216, "release-notes-for-dipy-version-0-13"]], "Release notes for DIPY version 0.14": [[217, "release-notes-for-dipy-version-0-14"]], "Release notes for DIPY version 0.15": [[218, "release-notes-for-dipy-version-0-15"]], "Release notes for DIPY version 0.16": [[219, "release-notes-for-dipy-version-0-16"]], "Release notes for DIPY version 0.6": [[220, "release-notes-for-dipy-version-0-6"]], "Release notes for DIPY version 0.7": [[221, "release-notes-for-dipy-version-0-7"]], "Release notes for DIPY version 0.8": [[222, "release-notes-for-dipy-version-0-8"]], "Release notes for DIPY version 0.9": [[223, "release-notes-for-dipy-version-0-9"]], "Release notes for DIPY version 1.0": [[224, "release-notes-for-dipy-version-1-0"]], "Release notes for DIPY version 1.1": [[225, "release-notes-for-dipy-version-1-1"]], "Release notes for DIPY version 1.2": [[226, "release-notes-for-dipy-version-1-2"]], "Release notes for DIPY version 1.3": [[227, "release-notes-for-dipy-version-1-3"]], "Release notes for DIPY version 1.4": [[228, "release-notes-for-dipy-version-1-4"]], "Release notes for DIPY version 1.4.1": [[229, "release-notes-for-dipy-version-1-4-1"]], "Release notes for DIPY version 1.5": [[230, "release-notes-for-dipy-version-1-5"]], "Release notes for DIPY version 1.6": [[231, "release-notes-for-dipy-version-1-6"]], "Release notes for DIPY version 1.7": [[232, "release-notes-for-dipy-version-1-7"]], "Release notes for DIPY version 1.8": [[233, "release-notes-for-dipy-version-1-8"]], "A quick overview of features": [[235, "a-quick-overview-of-features"]], "Systems supported": [[235, "systems-supported"]], "Subscribe": [[236, "subscribe"]], "DIY Stuff about b and q": [[237, "diy-stuff-about-b-and-q"]], "The B matrix and Siemens DICOM": [[237, "the-b-matrix-and-siemens-dicom"], [238, "the-b-matrix-and-siemens-dicom"]], "\u2026 and what about \u2018q\u2019?": [[237, "and-what-about-q"]], "Generalised Q-Sampling Imaging": [[239, "generalised-q-sampling-imaging"]], "Theory and concepts": [[240, "theory-and-concepts"]], "Spherical Harmonic bases": [[241, "spherical-harmonic-bases"]], "Spherical coordinates": [[242, "spherical-coordinates"]], "Terms": [[242, "terms"]], "The physics convention": [[242, "the-physics-convention"]], "The mathematics convention": [[242, "the-mathematics-convention"]], "Matlab convention": [[242, "matlab-convention"]], "Data": [[243, "data"]], "How to get data": [[243, "how-to-get-data"]], "Datasets List": [[243, "datasets-list"]], "Datasets available in DIPY": [[243, "id2"], [244, "id1"]], "Python versions and dependencies": [[245, "python-versions-and-dependencies"]], "Dependencies": [[245, "id1"]], "Getting Started": [[246, "getting-started"]], "Next Steps": [[246, "next-steps"]], "DIPY User Guide": [[247, "dipy-user-guide"]], "Installing a release": [[248, "installing-a-release"]], "Using pip:": [[248, "using-pip"]], "Using Anaconda:": [[248, "using-anaconda"]], "Using packages:": [[248, "using-packages"]], "OSX": [[248, "osx"]], "Linux": [[248, "linux"]], "Contact us:": [[248, "contact-us"]], "Common problems:": [[248, "common-problems"]], "Multiple installations": [[248, "multiple-installations"]], "Alternatives to Anaconda": [[248, "alternatives-to-anaconda"]], "Memory issues": [[248, "memory-issues"]], "Note on python versions": [[248, "note-on-python-versions"]], "What is DIPY?": [[249, "what-is-dipy"]], "Mission statement": [[250, "mission-statement"]]}, "indexentries": {"affine matrix": [[144, "term-Affine-matrix"]], "affine transformation": [[144, "term-Affine-transformation"]], "axis angle": [[144, "term-Axis-angle"]], "euclidean norm": [[144, "term-Euclidean-norm"]], "euler angles": [[144, "term-Euler-angles"]], "gimbal lock": [[144, "term-Gimbal-lock"]], "homogeneous coordinates": [[144, "term-Homogeneous-coordinates"]], "linear transformation": [[144, "term-Linear-transformation"]], "quaternion": [[144, "term-Quaternion"]], "reflection": [[144, "term-Reflection"]], "rotation matrix": [[144, "term-Rotation-matrix"]], "rotation vector": [[144, "term-Rotation-vector"]], "shear matrix": [[144, "term-Shear-matrix"]], "unit vector": [[144, "term-Unit-vector"]], "dipy": [[162, "module-dipy"]], "get_info() (in module dipy)": [[162, "dipy.get_info"]], "module": [[162, "module-dipy"], [163, "module-dipy.align"], [163, "module-dipy.align._public"], [163, "module-dipy.align.bundlemin"], [163, "module-dipy.align.cpd"], [163, "module-dipy.align.crosscorr"], [163, "module-dipy.align.expectmax"], [163, "module-dipy.align.imaffine"], [163, "module-dipy.align.imwarp"], [163, "module-dipy.align.metrics"], [163, "module-dipy.align.parzenhist"], [163, "module-dipy.align.reslice"], [163, "module-dipy.align.scalespace"], [163, "module-dipy.align.streamlinear"], [163, "module-dipy.align.streamwarp"], [163, "module-dipy.align.sumsqdiff"], [163, "module-dipy.align.transforms"], [163, "module-dipy.align.vector_fields"], [164, "module-dipy.boots"], [165, "module-dipy.core"], [165, "module-dipy.core.geometry"], [165, "module-dipy.core.gradients"], [165, "module-dipy.core.graph"], [165, "module-dipy.core.histeq"], [165, "module-dipy.core.interpolation"], [165, "module-dipy.core.ndindex"], [165, "module-dipy.core.onetime"], [165, "module-dipy.core.optimize"], [165, "module-dipy.core.profile"], [165, "module-dipy.core.rng"], [165, "module-dipy.core.sphere"], [165, "module-dipy.core.sphere_stats"], [165, "module-dipy.core.subdivide_octahedron"], [165, "module-dipy.core.wavelet"], [166, "module-dipy.data"], [166, "module-dipy.data.fetcher"], [167, "module-dipy.denoise"], [167, "module-dipy.denoise.adaptive_soft_matching"], [167, "module-dipy.denoise.denspeed"], [167, "module-dipy.denoise.enhancement_kernel"], [167, "module-dipy.denoise.gibbs"], [167, "module-dipy.denoise.localpca"], [167, "module-dipy.denoise.nlmeans"], [167, "module-dipy.denoise.nlmeans_block"], [167, "module-dipy.denoise.noise_estimate"], [167, "module-dipy.denoise.non_local_means"], [167, "module-dipy.denoise.patch2self"], [167, "module-dipy.denoise.pca_noise_estimate"], [167, "module-dipy.denoise.shift_twist_convolution"], [168, "module-dipy.direction"], [168, "module-dipy.direction.bootstrap_direction_getter"], [168, "module-dipy.direction.closest_peak_direction_getter"], [168, "module-dipy.direction.peaks"], [168, "module-dipy.direction.pmf"], [168, "module-dipy.direction.probabilistic_direction_getter"], [168, "module-dipy.direction.ptt_direction_getter"], [169, "module-dipy.io"], [169, "module-dipy.io.bvectxt"], [169, "module-dipy.io.dpy"], [169, "module-dipy.io.gradients"], [169, "module-dipy.io.image"], [169, "module-dipy.io.peaks"], [169, "module-dipy.io.pickles"], [169, "module-dipy.io.stateful_tractogram"], [169, "module-dipy.io.streamline"], [169, "module-dipy.io.utils"], [169, "module-dipy.io.vtk"], [170, "module-dipy.nn"], [170, "module-dipy.nn.cnn_1d_denoising"], [170, "module-dipy.nn.evac"], [170, "module-dipy.nn.histo_resdnn"], [170, "module-dipy.nn.model"], [170, "module-dipy.nn.synb0"], [170, "module-dipy.nn.utils"], [171, "module-dipy.reconst"], [171, "module-dipy.reconst.base"], [171, "module-dipy.reconst.cache"], [171, "module-dipy.reconst.cross_validation"], [171, "module-dipy.reconst.csdeconv"], [171, "module-dipy.reconst.cti"], [171, "module-dipy.reconst.dki"], [171, "module-dipy.reconst.dki_micro"], [171, "module-dipy.reconst.dsi"], [171, "module-dipy.reconst.dti"], [171, "module-dipy.reconst.eudx_direction_getter"], [171, "module-dipy.reconst.forecast"], [171, "module-dipy.reconst.fwdti"], [171, "module-dipy.reconst.gqi"], [171, "module-dipy.reconst.ivim"], [171, "module-dipy.reconst.mapmri"], [171, "module-dipy.reconst.mcsd"], [171, "module-dipy.reconst.msdki"], [171, "module-dipy.reconst.multi_voxel"], [171, "module-dipy.reconst.odf"], [171, "module-dipy.reconst.qtdmri"], [171, "module-dipy.reconst.qti"], [171, "module-dipy.reconst.quick_squash"], [171, "module-dipy.reconst.recspeed"], [171, "module-dipy.reconst.rumba"], [171, "module-dipy.reconst.sfm"], [171, "module-dipy.reconst.shm"], [171, "module-dipy.reconst.shore"], [171, "module-dipy.reconst.utils"], [171, "module-dipy.reconst.vec_val_sum"], [172, "module-dipy.segment"], [172, "module-dipy.segment.bundles"], [172, "module-dipy.segment.clustering"], [172, "module-dipy.segment.clustering_algorithms"], [172, "module-dipy.segment.clusteringspeed"], [172, "module-dipy.segment.cythonutils"], [172, "module-dipy.segment.featurespeed"], [172, "module-dipy.segment.fss"], [172, "module-dipy.segment.mask"], [172, "module-dipy.segment.metric"], [172, "module-dipy.segment.metricspeed"], [172, "module-dipy.segment.mrf"], [172, "module-dipy.segment.threshold"], [172, "module-dipy.segment.tissue"], [173, "module-dipy.sims"], [173, "module-dipy.sims.phantom"], [173, "module-dipy.sims.voxel"], [174, "module-dipy.stats"], [174, "module-dipy.stats.analysis"], [175, "module-dipy.tracking"], [175, "module-dipy.tracking._utils"], [175, "module-dipy.tracking.direction_getter"], [175, "module-dipy.tracking.distances"], [175, "module-dipy.tracking.fbcmeasures"], [175, "module-dipy.tracking.learning"], [175, "module-dipy.tracking.life"], [175, "module-dipy.tracking.local_tracking"], [175, "module-dipy.tracking.localtrack"], [175, "module-dipy.tracking.mesh"], [175, "module-dipy.tracking.metrics"], [175, "module-dipy.tracking.propspeed"], [175, "module-dipy.tracking.stopping_criterion"], [175, "module-dipy.tracking.streamline"], [175, "module-dipy.tracking.streamlinespeed"], [175, "module-dipy.tracking.utils"], [175, "module-dipy.tracking.vox2track"], [176, "module-dipy.viz"], [176, "module-dipy.viz.gmem"], [176, "module-dipy.viz.horizon"], [176, "module-dipy.viz.horizon.app"], [176, "module-dipy.viz.horizon.tab"], [176, "module-dipy.viz.horizon.tab.base"], [176, "module-dipy.viz.horizon.tab.cluster"], [176, "module-dipy.viz.horizon.tab.peak"], [176, "module-dipy.viz.horizon.tab.roi"], [176, "module-dipy.viz.horizon.tab.slice"], [176, "module-dipy.viz.horizon.util"], [176, "module-dipy.viz.horizon.visualizer"], [176, "module-dipy.viz.horizon.visualizer.cluster"], [176, "module-dipy.viz.horizon.visualizer.slice"], [176, "module-dipy.viz.panel"], [176, "module-dipy.viz.plotting"], [176, "module-dipy.viz.projections"], [176, "module-dipy.viz.regtools"], [176, "module-dipy.viz.streamline"], [177, "module-dipy.workflows"], [177, "module-dipy.workflows.align"], [177, "module-dipy.workflows.base"], [177, "module-dipy.workflows.cli"], [177, "module-dipy.workflows.combined_workflow"], [177, "module-dipy.workflows.denoise"], [177, "module-dipy.workflows.docstring_parser"], [177, "module-dipy.workflows.flow_runner"], [177, "module-dipy.workflows.io"], [177, "module-dipy.workflows.mask"], [177, "module-dipy.workflows.multi_io"], [177, "module-dipy.workflows.nn"], [177, "module-dipy.workflows.reconst"], [177, "module-dipy.workflows.segment"], [177, "module-dipy.workflows.stats"], [177, "module-dipy.workflows.tracking"], [177, "module-dipy.workflows.viz"], [177, "module-dipy.workflows.workflow"]], "affineinvalidvalueserror (class in dipy.align.imaffine)": [[163, "dipy.align.imaffine.AffineInvalidValuesError"]], "affineinversionerror (class in dipy.align.imaffine)": [[163, "dipy.align.imaffine.AffineInversionError"]], "affinemap (class in dipy.align.imaffine)": [[163, "dipy.align.imaffine.AffineMap"]], "affineregistration (class in dipy.align.imaffine)": [[163, "dipy.align.imaffine.AffineRegistration"]], "affinetransform2d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.AffineTransform2D"]], "affinetransform3d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.AffineTransform3D"]], "bunch (class in dipy.align)": [[163, "dipy.align.Bunch"]], "bundlemindistanceasymmetricmetric (class in dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric"]], "bundlemindistancematrixmetric (class in dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric"]], "bundlemindistancemetric (class in dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.BundleMinDistanceMetric"]], "bundlesumdistancematrixmetric (class in dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.BundleSumDistanceMatrixMetric"]], "ccmetric (class in dipy.align.metrics)": [[163, "dipy.align.metrics.CCMetric"]], "deformableregistration (class in dipy.align.cpd)": [[163, "dipy.align.cpd.DeformableRegistration"]], "diffeomorphicmap (class in dipy.align.imwarp)": [[163, "dipy.align.imwarp.DiffeomorphicMap"]], "diffeomorphicregistration (class in dipy.align.imwarp)": [[163, "dipy.align.imwarp.DiffeomorphicRegistration"]], "emmetric (class in dipy.align.metrics)": [[163, "dipy.align.metrics.EMMetric"]], "isotropicscalespace (class in dipy.align.scalespace)": [[163, "dipy.align.scalespace.IsotropicScaleSpace"]], "jointbundlemindistancemetric (class in dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.JointBundleMinDistanceMetric"]], "jointstreamlineregistrationmap (class in dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.JointStreamlineRegistrationMap"]], "mutualinformationmetric (class in dipy.align.imaffine)": [[163, "dipy.align.imaffine.MutualInformationMetric"]], "parzenjointhistogram (class in dipy.align.parzenhist)": [[163, "dipy.align.parzenhist.ParzenJointHistogram"]], "registrationstages() (in module dipy.align.imwarp)": [[163, "dipy.align.imwarp.RegistrationStages"]], "rigidisoscalingtransform2d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.RigidIsoScalingTransform2D"]], "rigidisoscalingtransform3d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.RigidIsoScalingTransform3D"]], "rigidscalingtransform2d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.RigidScalingTransform2D"]], "rigidscalingtransform3d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.RigidScalingTransform3D"]], "rigidtransform2d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.RigidTransform2D"]], "rigidtransform3d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.RigidTransform3D"]], "rotationtransform2d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.RotationTransform2D"]], "rotationtransform3d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.RotationTransform3D"]], "ssdmetric (class in dipy.align.metrics)": [[163, "dipy.align.metrics.SSDMetric"]], "scalespace (class in dipy.align.scalespace)": [[163, "dipy.align.scalespace.ScaleSpace"]], "scalingtransform2d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.ScalingTransform2D"]], "scalingtransform3d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.ScalingTransform3D"]], "similaritymetric (class in dipy.align.metrics)": [[163, "dipy.align.metrics.SimilarityMetric"]], "streamlinedistancemetric (class in dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.StreamlineDistanceMetric"]], "streamlinelinearregistration (class in dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.StreamlineLinearRegistration"]], "streamlineregistrationmap (class in dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.StreamlineRegistrationMap"]], "symmetricdiffeomorphicregistration (class in dipy.align.imwarp)": [[163, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration"]], "transform (class in dipy.align.transforms)": [[163, "dipy.align.transforms.Transform"]], "translationtransform2d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.TranslationTransform2D"]], "translationtransform3d (class in dipy.align.transforms)": [[163, "dipy.align.transforms.TranslationTransform3D"]], "verbositylevels() (in module dipy.align)": [[163, "dipy.align.VerbosityLevels"]], "_method_dict() (in module dipy.align._public)": [[163, "dipy.align._public._METHOD_DICT"]], "__init__() (dipy.align.bunch method)": [[163, "dipy.align.Bunch.__init__"]], "__init__() (dipy.align.cpd.deformableregistration method)": [[163, "dipy.align.cpd.DeformableRegistration.__init__"]], "__init__() (dipy.align.imaffine.affineinvalidvalueserror method)": [[163, "dipy.align.imaffine.AffineInvalidValuesError.__init__"]], "__init__() (dipy.align.imaffine.affineinversionerror method)": [[163, "dipy.align.imaffine.AffineInversionError.__init__"]], "__init__() (dipy.align.imaffine.affinemap method)": [[163, "dipy.align.imaffine.AffineMap.__init__"]], "__init__() (dipy.align.imaffine.affineregistration method)": [[163, "dipy.align.imaffine.AffineRegistration.__init__"]], "__init__() (dipy.align.imaffine.mutualinformationmetric method)": [[163, "dipy.align.imaffine.MutualInformationMetric.__init__"]], "__init__() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.__init__"]], "__init__() (dipy.align.imwarp.diffeomorphicregistration method)": [[163, "dipy.align.imwarp.DiffeomorphicRegistration.__init__"]], "__init__() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[163, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.__init__"]], "__init__() (dipy.align.metrics.ccmetric method)": [[163, "dipy.align.metrics.CCMetric.__init__"]], "__init__() (dipy.align.metrics.emmetric method)": [[163, "dipy.align.metrics.EMMetric.__init__"]], "__init__() (dipy.align.metrics.ssdmetric method)": [[163, "dipy.align.metrics.SSDMetric.__init__"]], "__init__() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.__init__"]], "__init__() (dipy.align.parzenhist.parzenjointhistogram method)": [[163, "dipy.align.parzenhist.ParzenJointHistogram.__init__"]], "__init__() (dipy.align.scalespace.isotropicscalespace method)": [[163, "dipy.align.scalespace.IsotropicScaleSpace.__init__"]], "__init__() (dipy.align.scalespace.scalespace method)": [[163, "dipy.align.scalespace.ScaleSpace.__init__"]], "__init__() (dipy.align.streamlinear.bundlemindistanceasymmetricmetric method)": [[163, "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric.__init__"]], "__init__() (dipy.align.streamlinear.bundlemindistancematrixmetric method)": [[163, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric.__init__"]], "__init__() (dipy.align.streamlinear.bundlemindistancemetric method)": [[163, "dipy.align.streamlinear.BundleMinDistanceMetric.__init__"]], "__init__() (dipy.align.streamlinear.bundlesumdistancematrixmetric method)": [[163, "dipy.align.streamlinear.BundleSumDistanceMatrixMetric.__init__"]], "__init__() (dipy.align.streamlinear.jointbundlemindistancemetric method)": [[163, "dipy.align.streamlinear.JointBundleMinDistanceMetric.__init__"]], "__init__() (dipy.align.streamlinear.jointstreamlineregistrationmap method)": [[163, "dipy.align.streamlinear.JointStreamlineRegistrationMap.__init__"]], "__init__() (dipy.align.streamlinear.streamlinedistancemetric method)": [[163, "dipy.align.streamlinear.StreamlineDistanceMetric.__init__"]], "__init__() (dipy.align.streamlinear.streamlinelinearregistration method)": [[163, "dipy.align.streamlinear.StreamlineLinearRegistration.__init__"]], "__init__() (dipy.align.streamlinear.streamlineregistrationmap method)": [[163, "dipy.align.streamlinear.StreamlineRegistrationMap.__init__"]], "__init__() (dipy.align.transforms.affinetransform2d method)": [[163, "dipy.align.transforms.AffineTransform2D.__init__"]], "__init__() (dipy.align.transforms.affinetransform3d method)": [[163, "dipy.align.transforms.AffineTransform3D.__init__"]], "__init__() (dipy.align.transforms.rigidisoscalingtransform2d method)": [[163, "dipy.align.transforms.RigidIsoScalingTransform2D.__init__"]], "__init__() (dipy.align.transforms.rigidisoscalingtransform3d method)": [[163, "dipy.align.transforms.RigidIsoScalingTransform3D.__init__"]], "__init__() (dipy.align.transforms.rigidscalingtransform2d method)": [[163, "dipy.align.transforms.RigidScalingTransform2D.__init__"]], "__init__() (dipy.align.transforms.rigidscalingtransform3d method)": [[163, "dipy.align.transforms.RigidScalingTransform3D.__init__"]], "__init__() (dipy.align.transforms.rigidtransform2d method)": [[163, "dipy.align.transforms.RigidTransform2D.__init__"]], "__init__() (dipy.align.transforms.rigidtransform3d method)": [[163, "dipy.align.transforms.RigidTransform3D.__init__"]], "__init__() (dipy.align.transforms.rotationtransform2d method)": [[163, "dipy.align.transforms.RotationTransform2D.__init__"]], "__init__() (dipy.align.transforms.rotationtransform3d method)": [[163, "dipy.align.transforms.RotationTransform3D.__init__"]], "__init__() (dipy.align.transforms.scalingtransform2d method)": [[163, "dipy.align.transforms.ScalingTransform2D.__init__"]], "__init__() (dipy.align.transforms.scalingtransform3d method)": [[163, "dipy.align.transforms.ScalingTransform3D.__init__"]], "__init__() (dipy.align.transforms.transform method)": [[163, "dipy.align.transforms.Transform.__init__"]], "__init__() (dipy.align.transforms.translationtransform2d method)": [[163, "dipy.align.transforms.TranslationTransform2D.__init__"]], "__init__() (dipy.align.transforms.translationtransform3d method)": [[163, "dipy.align.transforms.TranslationTransform3D.__init__"]], "_transform_method() (in module dipy.align.imaffine)": [[163, "dipy.align.imaffine._transform_method"]], "affine() (in module dipy.align._public)": [[163, "dipy.align._public.affine"]], "affine_registration() (in module dipy.align._public)": [[163, "dipy.align._public.affine_registration"]], "allocate() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.allocate"]], "average_bundle_length() (in module dipy.align.streamwarp)": [[163, "dipy.align.streamwarp.average_bundle_length"]], "bin_index() (dipy.align.parzenhist.parzenjointhistogram method)": [[163, "dipy.align.parzenhist.ParzenJointHistogram.bin_index"]], "bin_normalize_moving() (dipy.align.parzenhist.parzenjointhistogram method)": [[163, "dipy.align.parzenhist.ParzenJointHistogram.bin_normalize_moving"]], "bin_normalize_static() (dipy.align.parzenhist.parzenjointhistogram method)": [[163, "dipy.align.parzenhist.ParzenJointHistogram.bin_normalize_static"]], "bundle_min_distance() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.bundle_min_distance"]], "bundle_min_distance_asymmetric_fast() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.bundle_min_distance_asymmetric_fast"]], "bundle_min_distance_fast() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.bundle_min_distance_fast"]], "bundle_sum_distance() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.bundle_sum_distance"]], "bundlewarp() (in module dipy.align.streamwarp)": [[163, "dipy.align.streamwarp.bundlewarp"]], "bundlewarp_shape_analysis() (in module dipy.align.streamwarp)": [[163, "dipy.align.streamwarp.bundlewarp_shape_analysis"]], "bundlewarp_vector_filed() (in module dipy.align.streamwarp)": [[163, "dipy.align.streamwarp.bundlewarp_vector_filed"]], "center_of_mass() (in module dipy.align._public)": [[163, "dipy.align._public.center_of_mass"]], "compose_matrix44() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.compose_matrix44"]], "compose_vector_fields_2d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.compose_vector_fields_2d"]], "compose_vector_fields_3d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.compose_vector_fields_3d"]], "compute_backward() (dipy.align.metrics.ccmetric method)": [[163, "dipy.align.metrics.CCMetric.compute_backward"]], "compute_backward() (dipy.align.metrics.emmetric method)": [[163, "dipy.align.metrics.EMMetric.compute_backward"]], "compute_backward() (dipy.align.metrics.ssdmetric method)": [[163, "dipy.align.metrics.SSDMetric.compute_backward"]], "compute_backward() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.compute_backward"]], "compute_cc_backward_step_2d() (in module dipy.align.crosscorr)": [[163, "dipy.align.crosscorr.compute_cc_backward_step_2d"]], "compute_cc_backward_step_3d() (in module dipy.align.crosscorr)": [[163, "dipy.align.crosscorr.compute_cc_backward_step_3d"]], "compute_cc_forward_step_2d() (in module dipy.align.crosscorr)": [[163, "dipy.align.crosscorr.compute_cc_forward_step_2d"]], "compute_cc_forward_step_3d() (in module dipy.align.crosscorr)": [[163, "dipy.align.crosscorr.compute_cc_forward_step_3d"]], "compute_demons_step() (dipy.align.metrics.emmetric method)": [[163, "dipy.align.metrics.EMMetric.compute_demons_step"]], "compute_demons_step() (dipy.align.metrics.ssdmetric method)": [[163, "dipy.align.metrics.SSDMetric.compute_demons_step"]], "compute_em_demons_step_2d() (in module dipy.align.expectmax)": [[163, "dipy.align.expectmax.compute_em_demons_step_2d"]], "compute_em_demons_step_3d() (in module dipy.align.expectmax)": [[163, "dipy.align.expectmax.compute_em_demons_step_3d"]], "compute_energy_ssd_2d() (in module dipy.align.sumsqdiff)": [[163, "dipy.align.sumsqdiff.compute_energy_ssd_2d"]], "compute_energy_ssd_3d() (in module dipy.align.sumsqdiff)": [[163, "dipy.align.sumsqdiff.compute_energy_ssd_3d"]], "compute_forward() (dipy.align.metrics.ccmetric method)": [[163, "dipy.align.metrics.CCMetric.compute_forward"]], "compute_forward() (dipy.align.metrics.emmetric method)": [[163, "dipy.align.metrics.EMMetric.compute_forward"]], "compute_forward() (dipy.align.metrics.ssdmetric method)": [[163, "dipy.align.metrics.SSDMetric.compute_forward"]], "compute_forward() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.compute_forward"]], "compute_gauss_newton_step() (dipy.align.metrics.emmetric method)": [[163, "dipy.align.metrics.EMMetric.compute_gauss_newton_step"]], "compute_gauss_newton_step() (dipy.align.metrics.ssdmetric method)": [[163, "dipy.align.metrics.SSDMetric.compute_gauss_newton_step"]], "compute_inversion_error() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.compute_inversion_error"]], "compute_masked_class_stats_2d() (in module dipy.align.expectmax)": [[163, "dipy.align.expectmax.compute_masked_class_stats_2d"]], "compute_masked_class_stats_3d() (in module dipy.align.expectmax)": [[163, "dipy.align.expectmax.compute_masked_class_stats_3d"]], "compute_parzen_mi() (in module dipy.align.parzenhist)": [[163, "dipy.align.parzenhist.compute_parzen_mi"]], "compute_residual_displacement_field_ssd_2d() (in module dipy.align.sumsqdiff)": [[163, "dipy.align.sumsqdiff.compute_residual_displacement_field_ssd_2d"]], "compute_residual_displacement_field_ssd_3d() (in module dipy.align.sumsqdiff)": [[163, "dipy.align.sumsqdiff.compute_residual_displacement_field_ssd_3d"]], "compute_ssd_demons_step_2d() (in module dipy.align.sumsqdiff)": [[163, "dipy.align.sumsqdiff.compute_ssd_demons_step_2d"]], "compute_ssd_demons_step_3d() (in module dipy.align.sumsqdiff)": [[163, "dipy.align.sumsqdiff.compute_ssd_demons_step_3d"]], "create_circle() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.create_circle"]], "create_harmonic_fields_2d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.create_harmonic_fields_2d"]], "create_harmonic_fields_3d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.create_harmonic_fields_3d"]], "create_random_displacement_2d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.create_random_displacement_2d"]], "create_random_displacement_3d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.create_random_displacement_3d"]], "create_sphere() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.create_sphere"]], "cubic_spline() (in module dipy.align.parzenhist)": [[163, "dipy.align.parzenhist.cubic_spline"]], "cubic_spline_derivative() (in module dipy.align.parzenhist)": [[163, "dipy.align.parzenhist.cubic_spline_derivative"]], "decompose_matrix44() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.decompose_matrix44"]], "determine_num_threads() (in module dipy.align.bundlemin)": [[163, "dipy.align.bundlemin.determine_num_threads"]], "dipy.align": [[163, "module-dipy.align"]], "dipy.align._public": [[163, "module-dipy.align._public"]], "dipy.align.bundlemin": [[163, "module-dipy.align.bundlemin"]], "dipy.align.cpd": [[163, "module-dipy.align.cpd"]], "dipy.align.crosscorr": [[163, "module-dipy.align.crosscorr"]], "dipy.align.expectmax": [[163, "module-dipy.align.expectmax"]], "dipy.align.imaffine": [[163, "module-dipy.align.imaffine"]], "dipy.align.imwarp": [[163, "module-dipy.align.imwarp"]], "dipy.align.metrics": [[163, "module-dipy.align.metrics"]], "dipy.align.parzenhist": [[163, "module-dipy.align.parzenhist"]], "dipy.align.reslice": [[163, "module-dipy.align.reslice"]], "dipy.align.scalespace": [[163, "module-dipy.align.scalespace"]], "dipy.align.streamlinear": [[163, "module-dipy.align.streamlinear"]], "dipy.align.streamwarp": [[163, "module-dipy.align.streamwarp"]], "dipy.align.sumsqdiff": [[163, "module-dipy.align.sumsqdiff"]], "dipy.align.transforms": [[163, "module-dipy.align.transforms"]], "dipy.align.vector_fields": [[163, "module-dipy.align.vector_fields"]], "distance() (dipy.align.imaffine.mutualinformationmetric method)": [[163, "dipy.align.imaffine.MutualInformationMetric.distance"]], "distance() (dipy.align.streamlinear.bundlemindistanceasymmetricmetric method)": [[163, "dipy.align.streamlinear.BundleMinDistanceAsymmetricMetric.distance"]], "distance() (dipy.align.streamlinear.bundlemindistancematrixmetric method)": [[163, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric.distance"]], "distance() (dipy.align.streamlinear.bundlemindistancemetric method)": [[163, "dipy.align.streamlinear.BundleMinDistanceMetric.distance"]], "distance() (dipy.align.streamlinear.bundlesumdistancematrixmetric method)": [[163, "dipy.align.streamlinear.BundleSumDistanceMatrixMetric.distance"]], "distance() (dipy.align.streamlinear.jointbundlemindistancemetric method)": [[163, "dipy.align.streamlinear.JointBundleMinDistanceMetric.distance"]], "distance() (dipy.align.streamlinear.streamlinedistancemetric method)": [[163, "dipy.align.streamlinear.StreamlineDistanceMetric.distance"]], "distance_and_gradient() (dipy.align.imaffine.mutualinformationmetric method)": [[163, "dipy.align.imaffine.MutualInformationMetric.distance_and_gradient"]], "distance_matrix_mdf() (in module dipy.align.bundlemin)": [[163, "dipy.align.bundlemin.distance_matrix_mdf"]], "docstring_addendum (dipy.align.imaffine.affineregistration attribute)": [[163, "dipy.align.imaffine.AffineRegistration.docstring_addendum"]], "downsample_displacement_field_2d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.downsample_displacement_field_2d"]], "downsample_displacement_field_3d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.downsample_displacement_field_3d"]], "downsample_scalar_field_2d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.downsample_scalar_field_2d"]], "downsample_scalar_field_3d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.downsample_scalar_field_3d"]], "expand_fields() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.expand_fields"]], "expectation() (dipy.align.cpd.deformableregistration method)": [[163, "dipy.align.cpd.DeformableRegistration.expectation"]], "find_missing() (in module dipy.align.streamwarp)": [[163, "dipy.align.streamwarp.find_missing"]], "free_iteration() (dipy.align.metrics.ccmetric method)": [[163, "dipy.align.metrics.CCMetric.free_iteration"]], "free_iteration() (dipy.align.metrics.emmetric method)": [[163, "dipy.align.metrics.EMMetric.free_iteration"]], "free_iteration() (dipy.align.metrics.ssdmetric method)": [[163, "dipy.align.metrics.SSDMetric.free_iteration"]], "free_iteration() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.free_iteration"]], "gaussian_kernel() (in module dipy.align.cpd)": [[163, "dipy.align.cpd.gaussian_kernel"]], "get_affine() (dipy.align.imaffine.affinemap method)": [[163, "dipy.align.imaffine.AffineMap.get_affine"]], "get_affine() (dipy.align.scalespace.scalespace method)": [[163, "dipy.align.scalespace.ScaleSpace.get_affine"]], "get_affine_inv() (dipy.align.scalespace.scalespace method)": [[163, "dipy.align.scalespace.ScaleSpace.get_affine_inv"]], "get_backward_field() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.get_backward_field"]], "get_dim() (dipy.align.transforms.transform method)": [[163, "dipy.align.transforms.Transform.get_dim"]], "get_direction_and_spacings() (in module dipy.align.imwarp)": [[163, "dipy.align.imwarp.get_direction_and_spacings"]], "get_domain_shape() (dipy.align.scalespace.scalespace method)": [[163, "dipy.align.scalespace.ScaleSpace.get_domain_shape"]], "get_energy() (dipy.align.metrics.ccmetric method)": [[163, "dipy.align.metrics.CCMetric.get_energy"]], "get_energy() (dipy.align.metrics.emmetric method)": [[163, "dipy.align.metrics.EMMetric.get_energy"]], "get_energy() (dipy.align.metrics.ssdmetric method)": [[163, "dipy.align.metrics.SSDMetric.get_energy"]], "get_energy() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.get_energy"]], "get_expand_factors() (dipy.align.scalespace.scalespace method)": [[163, "dipy.align.scalespace.ScaleSpace.get_expand_factors"]], "get_forward_field() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.get_forward_field"]], "get_identity_parameters() (dipy.align.transforms.transform method)": [[163, "dipy.align.transforms.Transform.get_identity_parameters"]], "get_image() (dipy.align.scalespace.scalespace method)": [[163, "dipy.align.scalespace.ScaleSpace.get_image"]], "get_map() (dipy.align.imwarp.diffeomorphicregistration method)": [[163, "dipy.align.imwarp.DiffeomorphicRegistration.get_map"]], "get_map() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[163, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.get_map"]], "get_number_of_parameters() (dipy.align.transforms.transform method)": [[163, "dipy.align.transforms.Transform.get_number_of_parameters"]], "get_registration_parameters() (dipy.align.cpd.deformableregistration method)": [[163, "dipy.align.cpd.DeformableRegistration.get_registration_parameters"]], "get_scaling() (dipy.align.scalespace.scalespace method)": [[163, "dipy.align.scalespace.ScaleSpace.get_scaling"]], "get_sigmas() (dipy.align.scalespace.scalespace method)": [[163, "dipy.align.scalespace.ScaleSpace.get_sigmas"]], "get_simplified_transform() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.get_simplified_transform"]], "get_spacing() (dipy.align.scalespace.scalespace method)": [[163, "dipy.align.scalespace.ScaleSpace.get_spacing"]], "get_unique_pairs() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.get_unique_pairs"]], "gradient() (dipy.align.imaffine.mutualinformationmetric method)": [[163, "dipy.align.imaffine.MutualInformationMetric.gradient"]], "gradient() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.gradient"]], "groupwise_slr() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.groupwise_slr"]], "initialize_iteration() (dipy.align.metrics.ccmetric method)": [[163, "dipy.align.metrics.CCMetric.initialize_iteration"]], "initialize_iteration() (dipy.align.metrics.emmetric method)": [[163, "dipy.align.metrics.EMMetric.initialize_iteration"]], "initialize_iteration() (dipy.align.metrics.ssdmetric method)": [[163, "dipy.align.metrics.SSDMetric.initialize_iteration"]], "initialize_iteration() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.initialize_iteration"]], "initialize_sigma2() (in module dipy.align.cpd)": [[163, "dipy.align.cpd.initialize_sigma2"]], "interpret_matrix() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.interpret_matrix"]], "inverse() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.inverse"]], "invert_vector_field_fixed_point_2d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.invert_vector_field_fixed_point_2d"]], "invert_vector_field_fixed_point_3d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.invert_vector_field_fixed_point_3d"]], "is_valid_affine() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.is_valid_affine"]], "iterate() (dipy.align.cpd.deformableregistration method)": [[163, "dipy.align.cpd.DeformableRegistration.iterate"]], "iterate_residual_displacement_field_ssd_2d() (in module dipy.align.sumsqdiff)": [[163, "dipy.align.sumsqdiff.iterate_residual_displacement_field_ssd_2d"]], "iterate_residual_displacement_field_ssd_3d() (in module dipy.align.sumsqdiff)": [[163, "dipy.align.sumsqdiff.iterate_residual_displacement_field_ssd_3d"]], "jacobian() (dipy.align.transforms.transform method)": [[163, "dipy.align.transforms.Transform.jacobian"]], "logger() (in module dipy.align.imwarp)": [[163, "dipy.align.imwarp.logger"]], "logger() (in module dipy.align.scalespace)": [[163, "dipy.align.scalespace.logger"]], "logger() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.logger"]], "low_rank_eigen() (in module dipy.align.cpd)": [[163, "dipy.align.cpd.low_rank_eigen"]], "lowrankqs() (in module dipy.align.cpd)": [[163, "dipy.align.cpd.lowrankQS"]], "maximization() (dipy.align.cpd.deformableregistration method)": [[163, "dipy.align.cpd.DeformableRegistration.maximization"]], "motion_correction() (in module dipy.align._public)": [[163, "dipy.align._public.motion_correction"]], "mult_aff() (in module dipy.align.imwarp)": [[163, "dipy.align.imwarp.mult_aff"]], "optimize() (dipy.align.imaffine.affineregistration method)": [[163, "dipy.align.imaffine.AffineRegistration.optimize"]], "optimize() (dipy.align.imwarp.diffeomorphicregistration method)": [[163, "dipy.align.imwarp.DiffeomorphicRegistration.optimize"]], "optimize() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[163, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.optimize"]], "optimize() (dipy.align.streamlinear.streamlinelinearregistration method)": [[163, "dipy.align.streamlinear.StreamlineLinearRegistration.optimize"]], "param_to_matrix() (dipy.align.transforms.transform method)": [[163, "dipy.align.transforms.Transform.param_to_matrix"]], "precompute_cc_factors_2d() (in module dipy.align.crosscorr)": [[163, "dipy.align.crosscorr.precompute_cc_factors_2d"]], "precompute_cc_factors_2d_test() (in module dipy.align.crosscorr)": [[163, "dipy.align.crosscorr.precompute_cc_factors_2d_test"]], "precompute_cc_factors_3d() (in module dipy.align.crosscorr)": [[163, "dipy.align.crosscorr.precompute_cc_factors_3d"]], "precompute_cc_factors_3d_test() (in module dipy.align.crosscorr)": [[163, "dipy.align.crosscorr.precompute_cc_factors_3d_test"]], "print_level() (dipy.align.scalespace.scalespace method)": [[163, "dipy.align.scalespace.ScaleSpace.print_level"]], "progressive_slr() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.progressive_slr"]], "quantize_positive_2d() (in module dipy.align.expectmax)": [[163, "dipy.align.expectmax.quantize_positive_2d"]], "quantize_positive_3d() (in module dipy.align.expectmax)": [[163, "dipy.align.expectmax.quantize_positive_3d"]], "read_mapping() (in module dipy.align._public)": [[163, "dipy.align._public.read_mapping"]], "register() (dipy.align.cpd.deformableregistration method)": [[163, "dipy.align.cpd.DeformableRegistration.register"]], "register_dwi_series() (in module dipy.align._public)": [[163, "dipy.align._public.register_dwi_series"]], "register_dwi_to_template() (in module dipy.align._public)": [[163, "dipy.align._public.register_dwi_to_template"]], "register_series() (in module dipy.align._public)": [[163, "dipy.align._public.register_series"]], "remove_clusters_by_size() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.remove_clusters_by_size"]], "reorient_vector_field_2d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.reorient_vector_field_2d"]], "reorient_vector_field_3d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.reorient_vector_field_3d"]], "resample() (in module dipy.align._public)": [[163, "dipy.align._public.resample"]], "resample_displacement_field_2d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.resample_displacement_field_2d"]], "resample_displacement_field_3d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.resample_displacement_field_3d"]], "reslice() (in module dipy.align.reslice)": [[163, "dipy.align.reslice.reslice"]], "rigid() (in module dipy.align._public)": [[163, "dipy.align._public.rigid"]], "rigid_isoscaling() (in module dipy.align._public)": [[163, "dipy.align._public.rigid_isoscaling"]], "rigid_scaling() (in module dipy.align._public)": [[163, "dipy.align._public.rigid_scaling"]], "sample_domain_regular() (in module dipy.align.parzenhist)": [[163, "dipy.align.parzenhist.sample_domain_regular"]], "set_affine() (dipy.align.imaffine.affinemap method)": [[163, "dipy.align.imaffine.AffineMap.set_affine"]], "set_level_iters() (dipy.align.imwarp.diffeomorphicregistration method)": [[163, "dipy.align.imwarp.DiffeomorphicRegistration.set_level_iters"]], "set_levels_above() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.set_levels_above"]], "set_levels_below() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.set_levels_below"]], "set_moving_image() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.set_moving_image"]], "set_static_image() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.set_static_image"]], "setup() (dipy.align.imaffine.mutualinformationmetric method)": [[163, "dipy.align.imaffine.MutualInformationMetric.setup"]], "setup() (dipy.align.parzenhist.parzenjointhistogram method)": [[163, "dipy.align.parzenhist.ParzenJointHistogram.setup"]], "setup() (dipy.align.streamlinear.bundlemindistancematrixmetric method)": [[163, "dipy.align.streamlinear.BundleMinDistanceMatrixMetric.setup"]], "setup() (dipy.align.streamlinear.bundlemindistancemetric method)": [[163, "dipy.align.streamlinear.BundleMinDistanceMetric.setup"]], "setup() (dipy.align.streamlinear.jointbundlemindistancemetric method)": [[163, "dipy.align.streamlinear.JointBundleMinDistanceMetric.setup"]], "setup() (dipy.align.streamlinear.streamlinedistancemetric method)": [[163, "dipy.align.streamlinear.StreamlineDistanceMetric.setup"]], "shallow_copy() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.shallow_copy"]], "simplify_warp_function_2d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.simplify_warp_function_2d"]], "simplify_warp_function_3d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.simplify_warp_function_3d"]], "slr_with_qbx() (in module dipy.align.streamlinear)": [[163, "dipy.align.streamlinear.slr_with_qbx"]], "solve_2d_symmetric_positive_definite() (in module dipy.align.sumsqdiff)": [[163, "dipy.align.sumsqdiff.solve_2d_symmetric_positive_definite"]], "solve_3d_symmetric_positive_definite() (in module dipy.align.sumsqdiff)": [[163, "dipy.align.sumsqdiff.solve_3d_symmetric_positive_definite"]], "sparse_gradient() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.sparse_gradient"]], "streamline_registration() (in module dipy.align._public)": [[163, "dipy.align._public.streamline_registration"]], "syn_registration() (in module dipy.align._public)": [[163, "dipy.align._public.syn_registration"]], "transform() (dipy.align.imaffine.affinemap method)": [[163, "dipy.align.imaffine.AffineMap.transform"]], "transform() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.transform"]], "transform() (dipy.align.streamlinear.jointstreamlineregistrationmap method)": [[163, "dipy.align.streamlinear.JointStreamlineRegistrationMap.transform"]], "transform() (dipy.align.streamlinear.streamlineregistrationmap method)": [[163, "dipy.align.streamlinear.StreamlineRegistrationMap.transform"]], "transform_2d_affine() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.transform_2d_affine"]], "transform_2d_affine_nn() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.transform_2d_affine_nn"]], "transform_3d_affine() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.transform_3d_affine"]], "transform_3d_affine_nn() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.transform_3d_affine_nn"]], "transform_centers_of_mass() (in module dipy.align.imaffine)": [[163, "dipy.align.imaffine.transform_centers_of_mass"]], "transform_geometric_centers() (in module dipy.align.imaffine)": [[163, "dipy.align.imaffine.transform_geometric_centers"]], "transform_inverse() (dipy.align.imaffine.affinemap method)": [[163, "dipy.align.imaffine.AffineMap.transform_inverse"]], "transform_inverse() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.transform_inverse"]], "transform_origins() (in module dipy.align.imaffine)": [[163, "dipy.align.imaffine.transform_origins"]], "transform_point_cloud() (dipy.align.cpd.deformableregistration method)": [[163, "dipy.align.cpd.DeformableRegistration.transform_point_cloud"]], "transform_points() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.transform_points"]], "transform_points_inverse() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.transform_points_inverse"]], "translation() (in module dipy.align._public)": [[163, "dipy.align._public.translation"]], "update() (dipy.align.imwarp.symmetricdiffeomorphicregistration method)": [[163, "dipy.align.imwarp.SymmetricDiffeomorphicRegistration.update"]], "update_gradient_dense() (dipy.align.parzenhist.parzenjointhistogram method)": [[163, "dipy.align.parzenhist.ParzenJointHistogram.update_gradient_dense"]], "update_gradient_sparse() (dipy.align.parzenhist.parzenjointhistogram method)": [[163, "dipy.align.parzenhist.ParzenJointHistogram.update_gradient_sparse"]], "update_pdfs_dense() (dipy.align.parzenhist.parzenjointhistogram method)": [[163, "dipy.align.parzenhist.ParzenJointHistogram.update_pdfs_dense"]], "update_pdfs_sparse() (dipy.align.parzenhist.parzenjointhistogram method)": [[163, "dipy.align.parzenhist.ParzenJointHistogram.update_pdfs_sparse"]], "update_transform() (dipy.align.cpd.deformableregistration method)": [[163, "dipy.align.cpd.DeformableRegistration.update_transform"]], "update_variance() (dipy.align.cpd.deformableregistration method)": [[163, "dipy.align.cpd.DeformableRegistration.update_variance"]], "use_moving_image_dynamics() (dipy.align.metrics.emmetric method)": [[163, "dipy.align.metrics.EMMetric.use_moving_image_dynamics"]], "use_moving_image_dynamics() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.use_moving_image_dynamics"]], "use_static_image_dynamics() (dipy.align.metrics.emmetric method)": [[163, "dipy.align.metrics.EMMetric.use_static_image_dynamics"]], "use_static_image_dynamics() (dipy.align.metrics.similaritymetric method)": [[163, "dipy.align.metrics.SimilarityMetric.use_static_image_dynamics"]], "v_cycle_2d() (in module dipy.align.metrics)": [[163, "dipy.align.metrics.v_cycle_2d"]], "v_cycle_3d() (in module dipy.align.metrics)": [[163, "dipy.align.metrics.v_cycle_3d"]], "warp_2d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.warp_2d"]], "warp_2d_nn() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.warp_2d_nn"]], "warp_3d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.warp_3d"]], "warp_3d_nn() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.warp_3d_nn"]], "warp_coordinates_2d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.warp_coordinates_2d"]], "warp_coordinates_3d() (in module dipy.align.vector_fields)": [[163, "dipy.align.vector_fields.warp_coordinates_3d"]], "warp_endomorphism() (dipy.align.imwarp.diffeomorphicmap method)": [[163, "dipy.align.imwarp.DiffeomorphicMap.warp_endomorphism"]], "write_mapping() (in module dipy.align._public)": [[163, "dipy.align._public.write_mapping"]], "dipy.boots": [[164, "module-dipy.boots"]], "gradienttable (class in dipy.core.gradients)": [[165, "dipy.core.gradients.GradientTable"]], "graph (class in dipy.core.graph)": [[165, "dipy.core.graph.Graph"]], "hemisphere (class in dipy.core.sphere)": [[165, "dipy.core.sphere.HemiSphere"]], "interpolator (class in dipy.core.interpolation)": [[165, "dipy.core.interpolation.Interpolator"]], "lecuyer() (in module dipy.core.rng)": [[165, "dipy.core.rng.LEcuyer"]], "nearestneighborinterpolator (class in dipy.core.interpolation)": [[165, "dipy.core.interpolation.NearestNeighborInterpolator"]], "nonnegativeleastsquares (class in dipy.core.optimize)": [[165, "dipy.core.optimize.NonNegativeLeastSquares"]], "onetimeproperty (class in dipy.core.onetime)": [[165, "dipy.core.onetime.OneTimeProperty"]], "optimizer (class in dipy.core.optimize)": [[165, "dipy.core.optimize.Optimizer"]], "outsideimage (class in dipy.core.interpolation)": [[165, "dipy.core.interpolation.OutsideImage"]], "positivedefiniteleastsquares (class in dipy.core.optimize)": [[165, "dipy.core.optimize.PositiveDefiniteLeastSquares"]], "profiler (class in dipy.core.profile)": [[165, "dipy.core.profile.Profiler"]], "resetmixin (class in dipy.core.onetime)": [[165, "dipy.core.onetime.ResetMixin"]], "sklearnlinearsolver (class in dipy.core.optimize)": [[165, "dipy.core.optimize.SKLearnLinearSolver"]], "sphere (class in dipy.core.sphere)": [[165, "dipy.core.sphere.Sphere"]], "trilinearinterpolator (class in dipy.core.interpolation)": [[165, "dipy.core.interpolation.TriLinearInterpolator"]], "wichmannhill1982() (in module dipy.core.rng)": [[165, "dipy.core.rng.WichmannHill1982"]], "wichmannhill2006() (in module dipy.core.rng)": [[165, "dipy.core.rng.WichmannHill2006"]], "_tuple2axes() (in module dipy.core.geometry)": [[165, "dipy.core.geometry._TUPLE2AXES"]], "__init__() (dipy.core.gradients.gradienttable method)": [[165, "dipy.core.gradients.GradientTable.__init__"]], "__init__() (dipy.core.graph.graph method)": [[165, "dipy.core.graph.Graph.__init__"]], "__init__() (dipy.core.interpolation.interpolator method)": [[165, "dipy.core.interpolation.Interpolator.__init__"]], "__init__() (dipy.core.interpolation.nearestneighborinterpolator method)": [[165, "dipy.core.interpolation.NearestNeighborInterpolator.__init__"]], "__init__() (dipy.core.interpolation.outsideimage method)": [[165, "dipy.core.interpolation.OutsideImage.__init__"]], "__init__() (dipy.core.interpolation.trilinearinterpolator method)": [[165, "dipy.core.interpolation.TriLinearInterpolator.__init__"]], "__init__() (dipy.core.onetime.onetimeproperty method)": [[165, "dipy.core.onetime.OneTimeProperty.__init__"]], "__init__() (dipy.core.onetime.resetmixin method)": [[165, "dipy.core.onetime.ResetMixin.__init__"]], "__init__() (dipy.core.optimize.nonnegativeleastsquares method)": [[165, "dipy.core.optimize.NonNegativeLeastSquares.__init__"]], "__init__() (dipy.core.optimize.optimizer method)": [[165, "dipy.core.optimize.Optimizer.__init__"]], "__init__() (dipy.core.optimize.positivedefiniteleastsquares method)": [[165, "dipy.core.optimize.PositiveDefiniteLeastSquares.__init__"]], "__init__() (dipy.core.optimize.sklearnlinearsolver method)": [[165, "dipy.core.optimize.SKLearnLinearSolver.__init__"]], "__init__() (dipy.core.profile.profiler method)": [[165, "dipy.core.profile.Profiler.__init__"]], "__init__() (dipy.core.sphere.hemisphere method)": [[165, "dipy.core.sphere.HemiSphere.__init__"]], "__init__() (dipy.core.sphere.sphere method)": [[165, "dipy.core.sphere.Sphere.__init__"]], "add_edge() (dipy.core.graph.graph method)": [[165, "dipy.core.graph.Graph.add_edge"]], "add_node() (dipy.core.graph.graph method)": [[165, "dipy.core.graph.Graph.add_node"]], "afb3d() (in module dipy.core.wavelet)": [[165, "dipy.core.wavelet.afb3D"]], "afb3d_a() (in module dipy.core.wavelet)": [[165, "dipy.core.wavelet.afb3D_A"]], "all_paths() (dipy.core.graph.graph method)": [[165, "dipy.core.graph.Graph.all_paths"]], "angular_similarity() (in module dipy.core.sphere_stats)": [[165, "dipy.core.sphere_stats.angular_similarity"]], "auto_attr() (in module dipy.core.onetime)": [[165, "dipy.core.onetime.auto_attr"]], "b0_threshold_empty_gradient_message() (in module dipy.core.gradients)": [[165, "dipy.core.gradients.b0_threshold_empty_gradient_message"]], "b0_threshold_update_slicing_message() (in module dipy.core.gradients)": [[165, "dipy.core.gradients.b0_threshold_update_slicing_message"]], "b0s_mask() (dipy.core.gradients.gradienttable method)": [[165, "dipy.core.gradients.GradientTable.b0s_mask"]], "btens_to_params() (in module dipy.core.gradients)": [[165, "dipy.core.gradients.btens_to_params"]], "bvals() (dipy.core.gradients.gradienttable method)": [[165, "dipy.core.gradients.GradientTable.bvals"]], "bvecs() (dipy.core.gradients.gradienttable method)": [[165, "dipy.core.gradients.GradientTable.bvecs"]], "cart2sphere() (in module dipy.core.geometry)": [[165, "dipy.core.geometry.cart2sphere"]], "cart_distance() (in module dipy.core.geometry)": [[165, "dipy.core.geometry.cart_distance"]], "check_multi_b() (in module dipy.core.gradients)": [[165, "dipy.core.gradients.check_multi_b"]], "children() (dipy.core.graph.graph method)": [[165, "dipy.core.graph.Graph.children"]], "circumradius() (in module dipy.core.geometry)": [[165, "dipy.core.geometry.circumradius"]], "compare_orientation_sets() (in module dipy.core.sphere_stats)": [[165, "dipy.core.sphere_stats.compare_orientation_sets"]], "compose_matrix() (in module dipy.core.geometry)": [[165, "dipy.core.geometry.compose_matrix"]], "compose_transformations() (in module dipy.core.geometry)": [[165, "dipy.core.geometry.compose_transformations"]], "create_unit_hemisphere() (in module dipy.core.subdivide_octahedron)": [[165, "dipy.core.subdivide_octahedron.create_unit_hemisphere"]], "create_unit_sphere() (in module dipy.core.subdivide_octahedron)": [[165, "dipy.core.subdivide_octahedron.create_unit_sphere"]], "cshift3d() (in module dipy.core.wavelet)": [[165, "dipy.core.wavelet.cshift3D"]], "decompose_matrix() (in module dipy.core.geometry)": [[165, "dipy.core.geometry.decompose_matrix"]], "del_node() (dipy.core.graph.graph method)": [[165, "dipy.core.graph.Graph.del_node"]], "del_node_and_edges() (dipy.core.graph.graph method)": [[165, "dipy.core.graph.Graph.del_node_and_edges"]], "dipy.core": [[165, "module-dipy.core"]], "dipy.core.geometry": [[165, "module-dipy.core.geometry"]], "dipy.core.gradients": [[165, "module-dipy.core.gradients"]], "dipy.core.graph": [[165, "module-dipy.core.graph"]], "dipy.core.histeq": [[165, "module-dipy.core.histeq"]], "dipy.core.interpolation": [[165, "module-dipy.core.interpolation"]], "dipy.core.ndindex": [[165, "module-dipy.core.ndindex"]], "dipy.core.onetime": [[165, "module-dipy.core.onetime"]], "dipy.core.optimize": [[165, "module-dipy.core.optimize"]], "dipy.core.profile": [[165, "module-dipy.core.profile"]], "dipy.core.rng": [[165, "module-dipy.core.rng"]], "dipy.core.sphere": [[165, "module-dipy.core.sphere"]], "dipy.core.sphere_stats": [[165, "module-dipy.core.sphere_stats"]], "dipy.core.subdivide_octahedron": [[165, "module-dipy.core.subdivide_octahedron"]], "dipy.core.wavelet": [[165, "module-dipy.core.wavelet"]], "disperse_charges() (in module dipy.core.sphere)": [[165, "dipy.core.sphere.disperse_charges"]], "disperse_charges_alt() (in module dipy.core.sphere)": [[165, "dipy.core.sphere.disperse_charges_alt"]], "dist_to_corner() (in module dipy.core.geometry)": [[165, "dipy.core.geometry.dist_to_corner"]], "down() (dipy.core.graph.graph method)": [[165, "dipy.core.graph.Graph.down"]], "down_short() (dipy.core.graph.graph method)": [[165, "dipy.core.graph.Graph.down_short"]], "dwt3d() (in module dipy.core.wavelet)": [[165, "dipy.core.wavelet.dwt3D"]], "edges() (dipy.core.sphere.sphere method)": [[165, "dipy.core.sphere.Sphere.edges"]], "eigenstats() (in module dipy.core.sphere_stats)": [[165, "dipy.core.sphere_stats.eigenstats"]], "euler_characteristic_check() (in module dipy.core.sphere)": [[165, "dipy.core.sphere.euler_characteristic_check"]], "euler_matrix() (in module dipy.core.geometry)": [[165, "dipy.core.geometry.euler_matrix"]], "evolution (dipy.core.optimize.optimizer property)": [[165, "dipy.core.optimize.Optimizer.evolution"]], "faces() (dipy.core.sphere.hemisphere method)": [[165, "dipy.core.sphere.HemiSphere.faces"]], "faces() (dipy.core.sphere.sphere method)": [[165, "dipy.core.sphere.Sphere.faces"]], "faces_from_sphere_vertices() (in module dipy.core.sphere)": [[165, "dipy.core.sphere.faces_from_sphere_vertices"]], "fibonacci_sphere() (in module dipy.core.sphere)": [[165, "dipy.core.sphere.fibonacci_sphere"]], "find_closest() (dipy.core.sphere.hemisphere method)": [[165, "dipy.core.sphere.HemiSphere.find_closest"]], "find_closest() (dipy.core.sphere.sphere method)": [[165, "dipy.core.sphere.Sphere.find_closest"]], "fit() (dipy.core.optimize.nonnegativeleastsquares method)": [[165, "dipy.core.optimize.NonNegativeLeastSquares.fit"]], "fit() (dipy.core.optimize.sklearnlinearsolver method)": [[165, "dipy.core.optimize.SKLearnLinearSolver.fit"]], "fopt (dipy.core.optimize.optimizer property)": [[165, "dipy.core.optimize.Optimizer.fopt"]], "from_sphere() (dipy.core.sphere.hemisphere class method)": [[165, "dipy.core.sphere.HemiSphere.from_sphere"]], "generate_bvecs() (in module dipy.core.gradients)": [[165, "dipy.core.gradients.generate_bvecs"]], "get_bval_indices() (in module dipy.core.gradients)": [[165, "dipy.core.gradients.get_bval_indices"]], "gradient_strength() (dipy.core.gradients.gradienttable method)": [[165, "dipy.core.gradients.GradientTable.gradient_strength"]], "gradient_table() (in module dipy.core.gradients)": [[165, "dipy.core.gradients.gradient_table"]], "gradient_table_from_bvals_bvecs() (in module dipy.core.gradients)": [[165, "dipy.core.gradients.gradient_table_from_bvals_bvecs"]], "gradient_table_from_gradient_strength_bvecs() (in module dipy.core.gradients)": [[165, "dipy.core.gradients.gradient_table_from_gradient_strength_bvecs"]], "gradient_table_from_qvals_bvecs() (in module dipy.core.gradients)": [[165, "dipy.core.gradients.gradient_table_from_qvals_bvecs"]], "hemi_icosahedron() (in module dipy.core.sphere)": [[165, "dipy.core.sphere.hemi_icosahedron"]], "histeq() (in module dipy.core.histeq)": [[165, "dipy.core.histeq.histeq"]], "icosahedron_faces() (in module dipy.core.sphere)": [[165, "dipy.core.sphere.icosahedron_faces"]], "icosahedron_vertices() (in module dipy.core.sphere)": [[165, "dipy.core.sphere.icosahedron_vertices"]], "idwt3d() (in module dipy.core.wavelet)": [[165, "dipy.core.wavelet.idwt3D"]], "info (dipy.core.gradients.gradienttable property)": [[165, "dipy.core.gradients.GradientTable.info"]], "interp_rbf() (in module dipy.core.interpolation)": [[165, "dipy.core.interpolation.interp_rbf"]], "interpolate_scalar_2d() (in module dipy.core.interpolation)": [[165, "dipy.core.interpolation.interpolate_scalar_2d"]], "interpolate_scalar_3d() (in module dipy.core.interpolation)": [[165, "dipy.core.interpolation.interpolate_scalar_3d"]], "interpolate_scalar_nn_2d() (in module dipy.core.interpolation)": [[165, "dipy.core.interpolation.interpolate_scalar_nn_2d"]], "interpolate_scalar_nn_3d() (in module dipy.core.interpolation)": [[165, "dipy.core.interpolation.interpolate_scalar_nn_3d"]], "interpolate_vector_2d() (in module dipy.core.interpolation)": [[165, "dipy.core.interpolation.interpolate_vector_2d"]], "interpolate_vector_3d() (in module dipy.core.interpolation)": [[165, "dipy.core.interpolation.interpolate_vector_3d"]], "is_hemispherical() (in module dipy.core.geometry)": [[165, "dipy.core.geometry.is_hemispherical"]], "lambert_equal_area_projection_cart() (in module dipy.core.geometry)": [[165, "dipy.core.geometry.lambert_equal_area_projection_cart"]], "lambert_equal_area_projection_polar() (in module dipy.core.geometry)": [[165, "dipy.core.geometry.lambert_equal_area_projection_polar"]], "logger() (in module dipy.core.gradients)": [[165, "dipy.core.gradients.logger"]], "map_coordinates_trilinear_iso() (in module dipy.core.interpolation)": [[165, "dipy.core.interpolation.map_coordinates_trilinear_iso"]], "mask_non_weighted_bvals() (in module dipy.core.gradients)": [[165, "dipy.core.gradients.mask_non_weighted_bvals"]], "message (dipy.core.optimize.optimizer property)": [[165, "dipy.core.optimize.Optimizer.message"]], "mirror() (dipy.core.sphere.hemisphere method)": [[165, "dipy.core.sphere.HemiSphere.mirror"]], "ndindex() (in module dipy.core.ndindex)": [[165, "dipy.core.ndindex.ndindex"]], "nearest_pos_semi_def() (in module dipy.core.geometry)": [[165, "dipy.core.geometry.nearest_pos_semi_def"]], "nearestneighbor_interpolate() (in module dipy.core.interpolation)": [[165, "dipy.core.interpolation.nearestneighbor_interpolate"]], "nfev (dipy.core.optimize.optimizer property)": [[165, "dipy.core.optimize.Optimizer.nfev"]], "nit (dipy.core.optimize.optimizer property)": [[165, "dipy.core.optimize.Optimizer.nit"]], "normalized_vector() (in module dipy.core.geometry)": [[165, "dipy.core.geometry.normalized_vector"]], "octahedron_faces() (in module dipy.core.sphere)": [[165, "dipy.core.sphere.octahedron_faces"]], "octahedron_vertices() (in module dipy.core.sphere)": [[165, "dipy.core.sphere.octahedron_vertices"]], "orientation_from_string() (in module dipy.core.gradients)": [[165, "dipy.core.gradients.orientation_from_string"]], "orientation_to_string() (in module dipy.core.gradients)": [[165, "dipy.core.gradients.orientation_to_string"]], "ornt_mapping() (in module dipy.core.gradients)": [[165, "dipy.core.gradients.ornt_mapping"]], "params_to_btens() (in module dipy.core.gradients)": [[165, "dipy.core.gradients.params_to_btens"]], "parents() (dipy.core.graph.graph method)": [[165, "dipy.core.graph.Graph.parents"]], "permutationinverse() (in module dipy.core.wavelet)": [[165, "dipy.core.wavelet.permutationinverse"]], "perpendicular_directions() (in module dipy.core.geometry)": [[165, "dipy.core.geometry.perpendicular_directions"]], "predict() (dipy.core.optimize.sklearnlinearsolver method)": [[165, "dipy.core.optimize.SKLearnLinearSolver.predict"]], "print_stats() (dipy.core.profile.profiler method)": [[165, "dipy.core.profile.Profiler.print_stats"]], "print_summary() (dipy.core.optimize.optimizer method)": [[165, "dipy.core.optimize.Optimizer.print_summary"]], "qvals() (dipy.core.gradients.gradienttable method)": [[165, "dipy.core.gradients.GradientTable.qvals"]], "random_uniform_on_sphere() (in module dipy.core.sphere_stats)": [[165, "dipy.core.sphere_stats.random_uniform_on_sphere"]], "reorient_bvecs() (in module dipy.core.gradients)": [[165, "dipy.core.gradients.reorient_bvecs"]], "reorient_on_axis() (in module dipy.core.gradients)": [[165, "dipy.core.gradients.reorient_on_axis"]], "reorient_vectors() (in module dipy.core.gradients)": [[165, "dipy.core.gradients.reorient_vectors"]], "reset() (dipy.core.onetime.resetmixin method)": [[165, "dipy.core.onetime.ResetMixin.reset"]], "rodrigues_axis_rotation() (in module dipy.core.geometry)": [[165, "dipy.core.geometry.rodrigues_axis_rotation"]], "round_bvals() (in module dipy.core.gradients)": [[165, "dipy.core.gradients.round_bvals"]], "sfb3d() (in module dipy.core.wavelet)": [[165, "dipy.core.wavelet.sfb3D"]], "sfb3d_a() (in module dipy.core.wavelet)": [[165, "dipy.core.wavelet.sfb3D_A"]], "shortest_path() (dipy.core.graph.graph method)": [[165, "dipy.core.graph.Graph.shortest_path"]], "solve() (dipy.core.optimize.positivedefiniteleastsquares method)": [[165, "dipy.core.optimize.PositiveDefiniteLeastSquares.solve"]], "sparse_nnls() (in module dipy.core.optimize)": [[165, "dipy.core.optimize.sparse_nnls"]], "spdot() (in module dipy.core.optimize)": [[165, "dipy.core.optimize.spdot"]], "sph2latlon() (in module dipy.core.geometry)": [[165, "dipy.core.geometry.sph2latlon"]], "sphere2cart() (in module dipy.core.geometry)": [[165, "dipy.core.geometry.sphere2cart"]], "sphere_distance() (in module dipy.core.geometry)": [[165, "dipy.core.geometry.sphere_distance"]], "subdivide() (dipy.core.sphere.hemisphere method)": [[165, "dipy.core.sphere.HemiSphere.subdivide"]], "subdivide() (dipy.core.sphere.sphere method)": [[165, "dipy.core.sphere.Sphere.subdivide"]], "tau() (dipy.core.gradients.gradienttable method)": [[165, "dipy.core.gradients.GradientTable.tau"]], "trilinear_interp() (in module dipy.core.interpolation)": [[165, "dipy.core.interpolation.trilinear_interp"]], "trilinear_interpolate4d() (in module dipy.core.interpolation)": [[165, "dipy.core.interpolation.trilinear_interpolate4d"]], "unique_bvals() (in module dipy.core.gradients)": [[165, "dipy.core.gradients.unique_bvals"]], "unique_bvals_magnitude() (in module dipy.core.gradients)": [[165, "dipy.core.gradients.unique_bvals_magnitude"]], "unique_bvals_tolerance() (in module dipy.core.gradients)": [[165, "dipy.core.gradients.unique_bvals_tolerance"]], "unique_edges() (in module dipy.core.sphere)": [[165, "dipy.core.sphere.unique_edges"]], "unique_sets() (in module dipy.core.sphere)": [[165, "dipy.core.sphere.unique_sets"]], "unit_icosahedron() (in module dipy.core.sphere)": [[165, "dipy.core.sphere.unit_icosahedron"]], "unit_octahedron() (in module dipy.core.sphere)": [[165, "dipy.core.sphere.unit_octahedron"]], "up() (dipy.core.graph.graph method)": [[165, "dipy.core.graph.Graph.up"]], "up_short() (dipy.core.graph.graph method)": [[165, "dipy.core.graph.Graph.up_short"]], "vec2vec_rotmat() (in module dipy.core.geometry)": [[165, "dipy.core.geometry.vec2vec_rotmat"]], "vector_cosine() (in module dipy.core.geometry)": [[165, "dipy.core.geometry.vector_cosine"]], "vector_norm() (in module dipy.core.geometry)": [[165, "dipy.core.geometry.vector_norm"]], "vertices() (dipy.core.sphere.sphere method)": [[165, "dipy.core.sphere.Sphere.vertices"]], "x (dipy.core.sphere.sphere property)": [[165, "dipy.core.sphere.Sphere.x"]], "xopt (dipy.core.optimize.optimizer property)": [[165, "dipy.core.optimize.Optimizer.xopt"]], "y (dipy.core.sphere.sphere property)": [[165, "dipy.core.sphere.Sphere.y"]], "z (dipy.core.sphere.sphere property)": [[165, "dipy.core.sphere.Sphere.z"]], "data_dir() (in module dipy.data)": [[166, "dipy.data.DATA_DIR"]], "dataerror (class in dipy.data)": [[166, "dipy.data.DataError"]], "__init__() (dipy.data.dataerror method)": [[166, "dipy.data.DataError.__init__"]], "check_md5() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.check_md5"]], "copyfileobj_withprogress() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.copyfileobj_withprogress"]], "default_sphere() (in module dipy.data)": [[166, "dipy.data.default_sphere"]], "dipy.data": [[166, "module-dipy.data"]], "dipy.data.fetcher": [[166, "module-dipy.data.fetcher"]], "dsi_deconv_voxels() (in module dipy.data)": [[166, "dipy.data.dsi_deconv_voxels"]], "dsi_voxels() (in module dipy.data)": [[166, "dipy.data.dsi_voxels"]], "extract_example_tracts() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.extract_example_tracts"]], "fetch_dib_217_lte_pte_ste() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_DiB_217_lte_pte_ste"]], "fetch_dib_70_lte_pte_ste() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_DiB_70_lte_pte_ste"]], "fetch_bundle_atlas_hcp842() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_bundle_atlas_hcp842"]], "fetch_bundle_fa_hcp() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_bundle_fa_hcp"]], "fetch_bundle_warp_dataset() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_bundle_warp_dataset"]], "fetch_bundles_2_subjects() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_bundles_2_subjects"]], "fetch_cenir_multib() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_cenir_multib"]], "fetch_cfin_multib() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_cfin_multib"]], "fetch_cti_rat1() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_cti_rat1"]], "fetch_data() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_data"]], "fetch_evac_test() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_evac_test"]], "fetch_evac_weights() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_evac_weights"]], "fetch_file_formats() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_file_formats"]], "fetch_fury_surface() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_fury_surface"]], "fetch_gold_standard_io() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_gold_standard_io"]], "fetch_hbn() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_hbn"]], "fetch_hcp() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_hcp"]], "fetch_isbi2013_2shell() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_isbi2013_2shell"]], "fetch_ivim() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_ivim"]], "fetch_mni_template() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_mni_template"]], "fetch_ptt_minimal_dataset() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_ptt_minimal_dataset"]], "fetch_qtdmri_test_retest_2subjects() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_qtdMRI_test_retest_2subjects"]], "fetch_qte_lte_pte() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_qte_lte_pte"]], "fetch_resdnn_weights() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_resdnn_weights"]], "fetch_scil_b0() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_scil_b0"]], "fetch_sherbrooke_3shell() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_sherbrooke_3shell"]], "fetch_stanford_hardi() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_stanford_hardi"]], "fetch_stanford_labels() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_stanford_labels"]], "fetch_stanford_pve_maps() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_stanford_pve_maps"]], "fetch_stanford_t1() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_stanford_t1"]], "fetch_stanford_tracks() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_stanford_tracks"]], "fetch_syn_data() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_syn_data"]], "fetch_synb0_test() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_synb0_test"]], "fetch_synb0_weights() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_synb0_weights"]], "fetch_taiwan_ntu_dsi() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_taiwan_ntu_dsi"]], "fetch_target_tractogram_hcp() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_target_tractogram_hcp"]], "fetch_tissue_data() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.fetch_tissue_data"]], "get_3shell_gtab() (in module dipy.data)": [[166, "dipy.data.get_3shell_gtab"]], "get_bundle_atlas_hcp842() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.get_bundle_atlas_hcp842"]], "get_cmap() (in module dipy.data)": [[166, "dipy.data.get_cmap"]], "get_file_formats() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.get_file_formats"]], "get_fnames() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.get_fnames"]], "get_gtab_taiwan_dsi() (in module dipy.data)": [[166, "dipy.data.get_gtab_taiwan_dsi"]], "get_isbi2013_2shell_gtab() (in module dipy.data)": [[166, "dipy.data.get_isbi2013_2shell_gtab"]], "get_sim_voxels() (in module dipy.data)": [[166, "dipy.data.get_sim_voxels"]], "get_skeleton() (in module dipy.data)": [[166, "dipy.data.get_skeleton"]], "get_sphere() (in module dipy.data)": [[166, "dipy.data.get_sphere"]], "get_target_tractogram_hcp() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.get_target_tractogram_hcp"]], "get_two_hcp842_bundles() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.get_two_hcp842_bundles"]], "load_sdp_constraints() (in module dipy.data)": [[166, "dipy.data.load_sdp_constraints"]], "loads_compat() (in module dipy.data)": [[166, "dipy.data.loads_compat"]], "matlab_life_results() (in module dipy.data)": [[166, "dipy.data.matlab_life_results"]], "mrtrix_spherical_functions() (in module dipy.data)": [[166, "dipy.data.mrtrix_spherical_functions"]], "read_dib_217_lte_pte_ste() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.read_DiB_217_lte_pte_ste"]], "read_dib_70_lte_pte_ste() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.read_DiB_70_lte_pte_ste"]], "read_bundles_2_subjects() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.read_bundles_2_subjects"]], "read_cenir_multib() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.read_cenir_multib"]], "read_cfin_dwi() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.read_cfin_dwi"]], "read_cfin_t1() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.read_cfin_t1"]], "read_five_af_bundles() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.read_five_af_bundles"]], "read_isbi2013_2shell() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.read_isbi2013_2shell"]], "read_ivim() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.read_ivim"]], "read_mni_template() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.read_mni_template"]], "read_qtdmri_test_retest_2subjects() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.read_qtdMRI_test_retest_2subjects"]], "read_qte_lte_pte() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.read_qte_lte_pte"]], "read_scil_b0() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.read_scil_b0"]], "read_sherbrooke_3shell() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.read_sherbrooke_3shell"]], "read_siemens_scil_b0() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.read_siemens_scil_b0"]], "read_stanford_hardi() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.read_stanford_hardi"]], "read_stanford_labels() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.read_stanford_labels"]], "read_stanford_pve_maps() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.read_stanford_pve_maps"]], "read_stanford_t1() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.read_stanford_t1"]], "read_syn_data() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.read_syn_data"]], "read_taiwan_ntu_dsi() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.read_taiwan_ntu_dsi"]], "read_tissue_data() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.read_tissue_data"]], "small_sphere() (in module dipy.data)": [[166, "dipy.data.small_sphere"]], "to_bids_description() (in module dipy.data.fetcher)": [[166, "dipy.data.fetcher.to_bids_description"]], "two_cingulum_bundles() (in module dipy.data)": [[166, "dipy.data.two_cingulum_bundles"]], "enhancementkernel (class in dipy.denoise.enhancement_kernel)": [[167, "dipy.denoise.enhancement_kernel.EnhancementKernel"]], "hemisphere (class in dipy.denoise.enhancement_kernel)": [[167, "dipy.denoise.enhancement_kernel.HemiSphere"]], "sphere (class in dipy.denoise.enhancement_kernel)": [[167, "dipy.denoise.enhancement_kernel.Sphere"]], "__init__() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[167, "dipy.denoise.enhancement_kernel.EnhancementKernel.__init__"]], "__init__() (dipy.denoise.enhancement_kernel.hemisphere method)": [[167, "dipy.denoise.enhancement_kernel.HemiSphere.__init__"]], "__init__() (dipy.denoise.enhancement_kernel.sphere method)": [[167, "dipy.denoise.enhancement_kernel.Sphere.__init__"]], "adaptive_soft_matching() (in module dipy.denoise.adaptive_soft_matching)": [[167, "dipy.denoise.adaptive_soft_matching.adaptive_soft_matching"]], "add_padding_reflection() (in module dipy.denoise.denspeed)": [[167, "dipy.denoise.denspeed.add_padding_reflection"]], "ceil() (in module dipy.denoise.enhancement_kernel)": [[167, "dipy.denoise.enhancement_kernel.ceil"]], "compute_num_samples() (in module dipy.denoise.localpca)": [[167, "dipy.denoise.localpca.compute_num_samples"]], "compute_patch_size() (in module dipy.denoise.localpca)": [[167, "dipy.denoise.localpca.compute_patch_size"]], "compute_suggested_patch_radius() (in module dipy.denoise.localpca)": [[167, "dipy.denoise.localpca.compute_suggested_patch_radius"]], "convolve() (in module dipy.denoise.shift_twist_convolution)": [[167, "dipy.denoise.shift_twist_convolution.convolve"]], "convolve_sf() (in module dipy.denoise.shift_twist_convolution)": [[167, "dipy.denoise.shift_twist_convolution.convolve_sf"]], "correspond_indices() (in module dipy.denoise.denspeed)": [[167, "dipy.denoise.denspeed.correspond_indices"]], "create_patch_radius_arr() (in module dipy.denoise.localpca)": [[167, "dipy.denoise.localpca.create_patch_radius_arr"]], "determine_num_threads() (in module dipy.denoise.denspeed)": [[167, "dipy.denoise.denspeed.determine_num_threads"]], "determine_num_threads() (in module dipy.denoise.shift_twist_convolution)": [[167, "dipy.denoise.shift_twist_convolution.determine_num_threads"]], "dimensionality_problem_message() (in module dipy.denoise.localpca)": [[167, "dipy.denoise.localpca.dimensionality_problem_message"]], "dipy.denoise": [[167, "module-dipy.denoise"]], "dipy.denoise.adaptive_soft_matching": [[167, "module-dipy.denoise.adaptive_soft_matching"]], "dipy.denoise.denspeed": [[167, "module-dipy.denoise.denspeed"]], "dipy.denoise.enhancement_kernel": [[167, "module-dipy.denoise.enhancement_kernel"]], "dipy.denoise.gibbs": [[167, "module-dipy.denoise.gibbs"]], "dipy.denoise.localpca": [[167, "module-dipy.denoise.localpca"]], "dipy.denoise.nlmeans": [[167, "module-dipy.denoise.nlmeans"]], "dipy.denoise.nlmeans_block": [[167, "module-dipy.denoise.nlmeans_block"]], "dipy.denoise.noise_estimate": [[167, "module-dipy.denoise.noise_estimate"]], "dipy.denoise.non_local_means": [[167, "module-dipy.denoise.non_local_means"]], "dipy.denoise.patch2self": [[167, "module-dipy.denoise.patch2self"]], "dipy.denoise.pca_noise_estimate": [[167, "module-dipy.denoise.pca_noise_estimate"]], "dipy.denoise.shift_twist_convolution": [[167, "module-dipy.denoise.shift_twist_convolution"]], "disperse_charges() (in module dipy.denoise.enhancement_kernel)": [[167, "dipy.denoise.enhancement_kernel.disperse_charges"]], "edges() (dipy.denoise.enhancement_kernel.sphere method)": [[167, "dipy.denoise.enhancement_kernel.Sphere.edges"]], "estimate_sigma() (in module dipy.denoise.noise_estimate)": [[167, "dipy.denoise.noise_estimate.estimate_sigma"]], "evaluate_kernel() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[167, "dipy.denoise.enhancement_kernel.EnhancementKernel.evaluate_kernel"]], "faces() (dipy.denoise.enhancement_kernel.hemisphere method)": [[167, "dipy.denoise.enhancement_kernel.HemiSphere.faces"]], "faces() (dipy.denoise.enhancement_kernel.sphere method)": [[167, "dipy.denoise.enhancement_kernel.Sphere.faces"]], "find_closest() (dipy.denoise.enhancement_kernel.hemisphere method)": [[167, "dipy.denoise.enhancement_kernel.HemiSphere.find_closest"]], "find_closest() (dipy.denoise.enhancement_kernel.sphere method)": [[167, "dipy.denoise.enhancement_kernel.Sphere.find_closest"]], "firdn() (in module dipy.denoise.nlmeans_block)": [[167, "dipy.denoise.nlmeans_block.firdn"]], "from_sphere() (dipy.denoise.enhancement_kernel.hemisphere class method)": [[167, "dipy.denoise.enhancement_kernel.HemiSphere.from_sphere"]], "genpca() (in module dipy.denoise.localpca)": [[167, "dipy.denoise.localpca.genpca"]], "get_lookup_table() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[167, "dipy.denoise.enhancement_kernel.EnhancementKernel.get_lookup_table"]], "get_orientations() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[167, "dipy.denoise.enhancement_kernel.EnhancementKernel.get_orientations"]], "get_sphere() (dipy.denoise.enhancement_kernel.enhancementkernel method)": [[167, "dipy.denoise.enhancement_kernel.EnhancementKernel.get_sphere"]], "get_sphere() (in module dipy.denoise.enhancement_kernel)": [[167, "dipy.denoise.enhancement_kernel.get_sphere"]], "gettempdir() (in module dipy.denoise.enhancement_kernel)": [[167, "dipy.denoise.enhancement_kernel.gettempdir"]], "gibbs_removal() (in module dipy.denoise.gibbs)": [[167, "dipy.denoise.gibbs.gibbs_removal"]], "localpca() (in module dipy.denoise.localpca)": [[167, "dipy.denoise.localpca.localpca"]], "mirror() (dipy.denoise.enhancement_kernel.hemisphere method)": [[167, "dipy.denoise.enhancement_kernel.HemiSphere.mirror"]], "mppca() (in module dipy.denoise.localpca)": [[167, "dipy.denoise.localpca.mppca"]], "nlmeans() (in module dipy.denoise.nlmeans)": [[167, "dipy.denoise.nlmeans.nlmeans"]], "nlmeans_3d() (in module dipy.denoise.denspeed)": [[167, "dipy.denoise.denspeed.nlmeans_3d"]], "nlmeans_block() (in module dipy.denoise.nlmeans_block)": [[167, "dipy.denoise.nlmeans_block.nlmeans_block"]], "non_local_means() (in module dipy.denoise.non_local_means)": [[167, "dipy.denoise.non_local_means.non_local_means"]], "patch2self() (in module dipy.denoise.patch2self)": [[167, "dipy.denoise.patch2self.patch2self"]], "pca_noise_estimate() (in module dipy.denoise.pca_noise_estimate)": [[167, "dipy.denoise.pca_noise_estimate.pca_noise_estimate"]], "piesno() (in module dipy.denoise.noise_estimate)": [[167, "dipy.denoise.noise_estimate.piesno"]], "remove_padding() (in module dipy.denoise.denspeed)": [[167, "dipy.denoise.denspeed.remove_padding"]], "sf_to_sh() (in module dipy.denoise.shift_twist_convolution)": [[167, "dipy.denoise.shift_twist_convolution.sf_to_sh"]], "sh_to_sf() (in module dipy.denoise.shift_twist_convolution)": [[167, "dipy.denoise.shift_twist_convolution.sh_to_sf"]], "subdivide() (dipy.denoise.enhancement_kernel.hemisphere method)": [[167, "dipy.denoise.enhancement_kernel.HemiSphere.subdivide"]], "subdivide() (dipy.denoise.enhancement_kernel.sphere method)": [[167, "dipy.denoise.enhancement_kernel.Sphere.subdivide"]], "upfir() (in module dipy.denoise.nlmeans_block)": [[167, "dipy.denoise.nlmeans_block.upfir"]], "vertices() (dipy.denoise.enhancement_kernel.sphere method)": [[167, "dipy.denoise.enhancement_kernel.Sphere.vertices"]], "warn() (in module dipy.denoise.pca_noise_estimate)": [[167, "dipy.denoise.pca_noise_estimate.warn"]], "x (dipy.denoise.enhancement_kernel.sphere property)": [[167, "dipy.denoise.enhancement_kernel.Sphere.x"]], "y (dipy.denoise.enhancement_kernel.sphere property)": [[167, "dipy.denoise.enhancement_kernel.Sphere.y"]], "z (dipy.denoise.enhancement_kernel.sphere property)": [[167, "dipy.denoise.enhancement_kernel.Sphere.z"]], "basedirectiongetter (class in dipy.direction.closest_peak_direction_getter)": [[168, "dipy.direction.closest_peak_direction_getter.BaseDirectionGetter"]], "basepmfdirectiongetter (class in dipy.direction.closest_peak_direction_getter)": [[168, "dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter"]], "bootdirectiongetter (class in dipy.direction.bootstrap_direction_getter)": [[168, "dipy.direction.bootstrap_direction_getter.BootDirectionGetter"]], "closestpeakdirectiongetter (class in dipy.direction.closest_peak_direction_getter)": [[168, "dipy.direction.closest_peak_direction_getter.ClosestPeakDirectionGetter"]], "deterministicmaximumdirectiongetter (class in dipy.direction.probabilistic_direction_getter)": [[168, "dipy.direction.probabilistic_direction_getter.DeterministicMaximumDirectionGetter"]], "pttdirectiongetter (class in dipy.direction.ptt_direction_getter)": [[168, "dipy.direction.ptt_direction_getter.PTTDirectionGetter"]], "peaksandmetrics (class in dipy.direction.peaks)": [[168, "dipy.direction.peaks.PeaksAndMetrics"]], "pmfgen (class in dipy.direction.pmf)": [[168, "dipy.direction.pmf.PmfGen"]], "pmfgendirectiongetter (class in dipy.direction.closest_peak_direction_getter)": [[168, "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter"]], "probabilisticdirectiongetter (class in dipy.direction.probabilistic_direction_getter)": [[168, "dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter"]], "shcoeffpmfgen (class in dipy.direction.pmf)": [[168, "dipy.direction.pmf.SHCoeffPmfGen"]], "simplepmfgen (class in dipy.direction.pmf)": [[168, "dipy.direction.pmf.SimplePmfGen"]], "__init__() (dipy.direction.bootstrap_direction_getter.bootdirectiongetter method)": [[168, "dipy.direction.bootstrap_direction_getter.BootDirectionGetter.__init__"]], "__init__() (dipy.direction.closest_peak_direction_getter.basedirectiongetter method)": [[168, "dipy.direction.closest_peak_direction_getter.BaseDirectionGetter.__init__"]], "__init__() (dipy.direction.closest_peak_direction_getter.basepmfdirectiongetter method)": [[168, "dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter.__init__"]], "__init__() (dipy.direction.closest_peak_direction_getter.closestpeakdirectiongetter method)": [[168, "dipy.direction.closest_peak_direction_getter.ClosestPeakDirectionGetter.__init__"]], "__init__() (dipy.direction.closest_peak_direction_getter.pmfgendirectiongetter method)": [[168, "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.__init__"]], "__init__() (dipy.direction.peaks.peaksandmetrics method)": [[168, "dipy.direction.peaks.PeaksAndMetrics.__init__"]], "__init__() (dipy.direction.pmf.pmfgen method)": [[168, "dipy.direction.pmf.PmfGen.__init__"]], "__init__() (dipy.direction.pmf.shcoeffpmfgen method)": [[168, "dipy.direction.pmf.SHCoeffPmfGen.__init__"]], "__init__() (dipy.direction.pmf.simplepmfgen method)": [[168, "dipy.direction.pmf.SimplePmfGen.__init__"]], "__init__() (dipy.direction.probabilistic_direction_getter.deterministicmaximumdirectiongetter method)": [[168, "dipy.direction.probabilistic_direction_getter.DeterministicMaximumDirectionGetter.__init__"]], "__init__() (dipy.direction.probabilistic_direction_getter.probabilisticdirectiongetter method)": [[168, "dipy.direction.probabilistic_direction_getter.ProbabilisticDirectionGetter.__init__"]], "__init__() (dipy.direction.ptt_direction_getter.pttdirectiongetter method)": [[168, "dipy.direction.ptt_direction_getter.PTTDirectionGetter.__init__"]], "dipy.direction": [[168, "module-dipy.direction"]], "dipy.direction.bootstrap_direction_getter": [[168, "module-dipy.direction.bootstrap_direction_getter"]], "dipy.direction.closest_peak_direction_getter": [[168, "module-dipy.direction.closest_peak_direction_getter"]], "dipy.direction.peaks": [[168, "module-dipy.direction.peaks"]], "dipy.direction.pmf": [[168, "module-dipy.direction.pmf"]], "dipy.direction.probabilistic_direction_getter": [[168, "module-dipy.direction.probabilistic_direction_getter"]], "dipy.direction.ptt_direction_getter": [[168, "module-dipy.direction.ptt_direction_getter"]], "from_data() (dipy.direction.bootstrap_direction_getter.bootdirectiongetter class method)": [[168, "dipy.direction.bootstrap_direction_getter.BootDirectionGetter.from_data"]], "from_pmf() (dipy.direction.closest_peak_direction_getter.pmfgendirectiongetter class method)": [[168, "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.from_pmf"]], "from_shcoeff() (dipy.direction.closest_peak_direction_getter.pmfgendirectiongetter class method)": [[168, "dipy.direction.closest_peak_direction_getter.PmfGenDirectionGetter.from_shcoeff"]], "generate_streamline() (dipy.direction.ptt_direction_getter.pttdirectiongetter method)": [[168, "dipy.direction.ptt_direction_getter.PTTDirectionGetter.generate_streamline"]], "get_pmf() (dipy.direction.bootstrap_direction_getter.bootdirectiongetter method)": [[168, "dipy.direction.bootstrap_direction_getter.BootDirectionGetter.get_pmf"]], "get_pmf() (dipy.direction.pmf.pmfgen method)": [[168, "dipy.direction.pmf.PmfGen.get_pmf"]], "get_pmf_no_boot() (dipy.direction.bootstrap_direction_getter.bootdirectiongetter method)": [[168, "dipy.direction.bootstrap_direction_getter.BootDirectionGetter.get_pmf_no_boot"]], "get_pmf_value() (dipy.direction.pmf.pmfgen method)": [[168, "dipy.direction.pmf.PmfGen.get_pmf_value"]], "initial_direction() (dipy.direction.bootstrap_direction_getter.bootdirectiongetter method)": [[168, "dipy.direction.bootstrap_direction_getter.BootDirectionGetter.initial_direction"]], "initial_direction() (dipy.direction.closest_peak_direction_getter.basepmfdirectiongetter method)": [[168, "dipy.direction.closest_peak_direction_getter.BasePmfDirectionGetter.initial_direction"]], "min_radius_curvature_from_angle() (in module dipy.direction.ptt_direction_getter)": [[168, "dipy.direction.ptt_direction_getter.min_radius_curvature_from_angle"]], "peak_directions() (in module dipy.direction.bootstrap_direction_getter)": [[168, "dipy.direction.bootstrap_direction_getter.peak_directions"]], "peak_directions() (in module dipy.direction.closest_peak_direction_getter)": [[168, "dipy.direction.closest_peak_direction_getter.peak_directions"]], "peak_directions() (in module dipy.direction.peaks)": [[168, "dipy.direction.peaks.peak_directions"]], "peak_directions_nl() (in module dipy.direction.peaks)": [[168, "dipy.direction.peaks.peak_directions_nl"]], "peaks_from_model() (in module dipy.direction.peaks)": [[168, "dipy.direction.peaks.peaks_from_model"]], "random() (in module dipy.direction.probabilistic_direction_getter)": [[168, "dipy.direction.probabilistic_direction_getter.random"]], "reshape_peaks_for_visualization() (in module dipy.direction.peaks)": [[168, "dipy.direction.peaks.reshape_peaks_for_visualization"]], "dpy (class in dipy.io.dpy)": [[169, "dipy.io.dpy.Dpy"]], "nifti (dipy.io.stateful_tractogram.origin attribute)": [[169, "dipy.io.stateful_tractogram.Origin.NIFTI"]], "origin (class in dipy.io.stateful_tractogram)": [[169, "dipy.io.stateful_tractogram.Origin"]], "rasmm (dipy.io.stateful_tractogram.space attribute)": [[169, "dipy.io.stateful_tractogram.Space.RASMM"]], "space (class in dipy.io.stateful_tractogram)": [[169, "dipy.io.stateful_tractogram.Space"]], "statefultractogram (class in dipy.io.stateful_tractogram)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram"]], "trackvis (dipy.io.stateful_tractogram.origin attribute)": [[169, "dipy.io.stateful_tractogram.Origin.TRACKVIS"]], "vox (dipy.io.stateful_tractogram.space attribute)": [[169, "dipy.io.stateful_tractogram.Space.VOX"]], "voxmm (dipy.io.stateful_tractogram.space attribute)": [[169, "dipy.io.stateful_tractogram.Space.VOXMM"]], "__init__() (dipy.io.dpy.dpy method)": [[169, "dipy.io.dpy.Dpy.__init__"]], "__init__() (dipy.io.stateful_tractogram.origin method)": [[169, "dipy.io.stateful_tractogram.Origin.__init__"]], "__init__() (dipy.io.stateful_tractogram.space method)": [[169, "dipy.io.stateful_tractogram.Space.__init__"]], "__init__() (dipy.io.stateful_tractogram.statefultractogram method)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.__init__"]], "affine (dipy.io.stateful_tractogram.statefultractogram property)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.affine"]], "are_compatible() (dipy.io.stateful_tractogram.statefultractogram static method)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.are_compatible"]], "close() (dipy.io.dpy.dpy method)": [[169, "dipy.io.dpy.Dpy.close"]], "compute_bounding_box() (dipy.io.stateful_tractogram.statefultractogram method)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.compute_bounding_box"]], "create_nifti_header() (in module dipy.io.utils)": [[169, "dipy.io.utils.create_nifti_header"]], "create_tractogram_header() (in module dipy.io.utils)": [[169, "dipy.io.utils.create_tractogram_header"]], "data_per_point (dipy.io.stateful_tractogram.statefultractogram property)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.data_per_point"]], "data_per_streamline (dipy.io.stateful_tractogram.statefultractogram property)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.data_per_streamline"]], "decfa() (in module dipy.io.utils)": [[169, "dipy.io.utils.decfa"]], "decfa_to_float() (in module dipy.io.utils)": [[169, "dipy.io.utils.decfa_to_float"]], "dimensions (dipy.io.stateful_tractogram.statefultractogram property)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.dimensions"]], "dipy.io": [[169, "module-dipy.io"]], "dipy.io.bvectxt": [[169, "module-dipy.io.bvectxt"]], "dipy.io.dpy": [[169, "module-dipy.io.dpy"]], "dipy.io.gradients": [[169, "module-dipy.io.gradients"]], "dipy.io.image": [[169, "module-dipy.io.image"]], "dipy.io.peaks": [[169, "module-dipy.io.peaks"]], "dipy.io.pickles": [[169, "module-dipy.io.pickles"]], "dipy.io.stateful_tractogram": [[169, "module-dipy.io.stateful_tractogram"]], "dipy.io.streamline": [[169, "module-dipy.io.streamline"]], "dipy.io.utils": [[169, "module-dipy.io.utils"]], "dipy.io.vtk": [[169, "module-dipy.io.vtk"]], "dtype_dict (dipy.io.stateful_tractogram.statefultractogram property)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.dtype_dict"]], "from_sft() (dipy.io.stateful_tractogram.statefultractogram static method)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.from_sft"]], "get_data_per_point_keys() (dipy.io.stateful_tractogram.statefultractogram method)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.get_data_per_point_keys"]], "get_data_per_streamline_keys() (dipy.io.stateful_tractogram.statefultractogram method)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.get_data_per_streamline_keys"]], "get_reference_info() (in module dipy.io.utils)": [[169, "dipy.io.utils.get_reference_info"]], "get_streamlines_copy() (dipy.io.stateful_tractogram.statefultractogram method)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.get_streamlines_copy"]], "is_bbox_in_vox_valid() (dipy.io.stateful_tractogram.statefultractogram method)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.is_bbox_in_vox_valid"]], "is_header_compatible() (in module dipy.io.utils)": [[169, "dipy.io.utils.is_header_compatible"]], "is_reference_info_valid() (in module dipy.io.utils)": [[169, "dipy.io.utils.is_reference_info_valid"]], "load_dpy() (in module dipy.io.streamline)": [[169, "dipy.io.streamline.load_dpy"]], "load_fib() (in module dipy.io.streamline)": [[169, "dipy.io.streamline.load_fib"]], "load_generator() (in module dipy.io.streamline)": [[169, "dipy.io.streamline.load_generator"]], "load_nifti() (in module dipy.io.image)": [[169, "dipy.io.image.load_nifti"]], "load_nifti_data() (in module dipy.io.image)": [[169, "dipy.io.image.load_nifti_data"]], "load_peaks() (in module dipy.io.peaks)": [[169, "dipy.io.peaks.load_peaks"]], "load_pickle() (in module dipy.io.pickles)": [[169, "dipy.io.pickles.load_pickle"]], "load_polydata() (in module dipy.io.vtk)": [[169, "dipy.io.vtk.load_polydata"]], "load_tck() (in module dipy.io.streamline)": [[169, "dipy.io.streamline.load_tck"]], "load_tractogram() (in module dipy.io.streamline)": [[169, "dipy.io.streamline.load_tractogram"]], "load_trk() (in module dipy.io.streamline)": [[169, "dipy.io.streamline.load_trk"]], "load_trx() (in module dipy.io.streamline)": [[169, "dipy.io.streamline.load_trx"]], "load_vtk() (in module dipy.io.streamline)": [[169, "dipy.io.streamline.load_vtk"]], "load_vtk_streamlines() (in module dipy.io.vtk)": [[169, "dipy.io.vtk.load_vtk_streamlines"]], "load_vtp() (in module dipy.io.streamline)": [[169, "dipy.io.streamline.load_vtp"]], "logger() (in module dipy.io.stateful_tractogram)": [[169, "dipy.io.stateful_tractogram.logger"]], "make5d() (in module dipy.io.utils)": [[169, "dipy.io.utils.make5d"]], "nifti1_symmat() (in module dipy.io.utils)": [[169, "dipy.io.utils.nifti1_symmat"]], "orientation_from_string() (in module dipy.io.bvectxt)": [[169, "dipy.io.bvectxt.orientation_from_string"]], "orientation_to_string() (in module dipy.io.bvectxt)": [[169, "dipy.io.bvectxt.orientation_to_string"]], "origin (dipy.io.stateful_tractogram.statefultractogram property)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.origin"]], "ornt_mapping() (in module dipy.io.bvectxt)": [[169, "dipy.io.bvectxt.ornt_mapping"]], "peaks_to_niftis() (in module dipy.io.peaks)": [[169, "dipy.io.peaks.peaks_to_niftis"]], "read_bvals_bvecs() (in module dipy.io.gradients)": [[169, "dipy.io.gradients.read_bvals_bvecs"]], "read_bvec_file() (in module dipy.io.bvectxt)": [[169, "dipy.io.bvectxt.read_bvec_file"]], "read_img_arr_or_path() (in module dipy.io.utils)": [[169, "dipy.io.utils.read_img_arr_or_path"]], "read_track() (dipy.io.dpy.dpy method)": [[169, "dipy.io.dpy.Dpy.read_track"]], "read_tracks() (dipy.io.dpy.dpy method)": [[169, "dipy.io.dpy.Dpy.read_tracks"]], "read_tracksi() (dipy.io.dpy.dpy method)": [[169, "dipy.io.dpy.Dpy.read_tracksi"]], "remove_invalid_streamlines() (dipy.io.stateful_tractogram.statefultractogram method)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.remove_invalid_streamlines"]], "reorient_on_axis() (in module dipy.io.bvectxt)": [[169, "dipy.io.bvectxt.reorient_on_axis"]], "reorient_vectors() (in module dipy.io.bvectxt)": [[169, "dipy.io.bvectxt.reorient_vectors"]], "save_buan_profiles_hdf5() (in module dipy.io.utils)": [[169, "dipy.io.utils.save_buan_profiles_hdf5"]], "save_dpy() (in module dipy.io.streamline)": [[169, "dipy.io.streamline.save_dpy"]], "save_fib() (in module dipy.io.streamline)": [[169, "dipy.io.streamline.save_fib"]], "save_generator() (in module dipy.io.streamline)": [[169, "dipy.io.streamline.save_generator"]], "save_nifti() (in module dipy.io.image)": [[169, "dipy.io.image.save_nifti"]], "save_peaks() (in module dipy.io.peaks)": [[169, "dipy.io.peaks.save_peaks"]], "save_pickle() (in module dipy.io.pickles)": [[169, "dipy.io.pickles.save_pickle"]], "save_polydata() (in module dipy.io.vtk)": [[169, "dipy.io.vtk.save_polydata"]], "save_qa_metric() (in module dipy.io.image)": [[169, "dipy.io.image.save_qa_metric"]], "save_tck() (in module dipy.io.streamline)": [[169, "dipy.io.streamline.save_tck"]], "save_tractogram() (in module dipy.io.streamline)": [[169, "dipy.io.streamline.save_tractogram"]], "save_trk() (in module dipy.io.streamline)": [[169, "dipy.io.streamline.save_trk"]], "save_trx() (in module dipy.io.streamline)": [[169, "dipy.io.streamline.save_trx"]], "save_vtk() (in module dipy.io.streamline)": [[169, "dipy.io.streamline.save_vtk"]], "save_vtk_streamlines() (in module dipy.io.vtk)": [[169, "dipy.io.vtk.save_vtk_streamlines"]], "save_vtp() (in module dipy.io.streamline)": [[169, "dipy.io.streamline.save_vtp"]], "set_sft_logger_level() (in module dipy.io.stateful_tractogram)": [[169, "dipy.io.stateful_tractogram.set_sft_logger_level"]], "space (dipy.io.stateful_tractogram.statefultractogram property)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.space"]], "space_attributes (dipy.io.stateful_tractogram.statefultractogram property)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.space_attributes"]], "split_name_with_gz() (in module dipy.io.utils)": [[169, "dipy.io.utils.split_name_with_gz"]], "streamlines (dipy.io.stateful_tractogram.statefultractogram property)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.streamlines"]], "to_center() (dipy.io.stateful_tractogram.statefultractogram method)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.to_center"]], "to_corner() (dipy.io.stateful_tractogram.statefultractogram method)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.to_corner"]], "to_origin() (dipy.io.stateful_tractogram.statefultractogram method)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.to_origin"]], "to_rasmm() (dipy.io.stateful_tractogram.statefultractogram method)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.to_rasmm"]], "to_space() (dipy.io.stateful_tractogram.statefultractogram method)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.to_space"]], "to_vox() (dipy.io.stateful_tractogram.statefultractogram method)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.to_vox"]], "to_voxmm() (dipy.io.stateful_tractogram.statefultractogram method)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.to_voxmm"]], "version() (dipy.io.dpy.dpy method)": [[169, "dipy.io.dpy.Dpy.version"]], "voxel_order (dipy.io.stateful_tractogram.statefultractogram property)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.voxel_order"]], "voxel_sizes (dipy.io.stateful_tractogram.statefultractogram property)": [[169, "dipy.io.stateful_tractogram.StatefulTractogram.voxel_sizes"]], "write_track() (dipy.io.dpy.dpy method)": [[169, "dipy.io.dpy.Dpy.write_track"]], "write_tracks() (dipy.io.dpy.dpy method)": [[169, "dipy.io.dpy.Dpy.write_tracks"]], "block (class in dipy.nn.evac)": [[170, "dipy.nn.evac.Block"]], "channelsum (class in dipy.nn.evac)": [[170, "dipy.nn.evac.ChannelSum"]], "cnn1ddenoiser (class in dipy.nn.cnn_1d_denoising)": [[170, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser"]], "decoderblock (class in dipy.nn.synb0)": [[170, "dipy.nn.synb0.DecoderBlock"], [170, "id57"]], "evacplus (class in dipy.nn.evac)": [[170, "dipy.nn.evac.EVACPlus"]], "encoderblock (class in dipy.nn.synb0)": [[170, "dipy.nn.synb0.EncoderBlock"], [170, "id0"]], "historesdnn (class in dipy.nn.histo_resdnn)": [[170, "dipy.nn.histo_resdnn.HistoResDNN"]], "multiplelayerpercepton (class in dipy.nn.model)": [[170, "dipy.nn.model.MultipleLayerPercepton"]], "singlelayerperceptron (class in dipy.nn.model)": [[170, "dipy.nn.model.SingleLayerPerceptron"]], "synb0 (class in dipy.nn.synb0)": [[170, "dipy.nn.synb0.Synb0"]], "unet3d() (in module dipy.nn.synb0)": [[170, "dipy.nn.synb0.UNet3D"], [170, "id74"]], "__init__() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[170, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.__init__"]], "__init__() (dipy.nn.evac.block method)": [[170, "dipy.nn.evac.Block.__init__"]], "__init__() (dipy.nn.evac.channelsum method)": [[170, "dipy.nn.evac.ChannelSum.__init__"]], "__init__() (dipy.nn.evac.evacplus method)": [[170, "dipy.nn.evac.EVACPlus.__init__"]], "__init__() (dipy.nn.histo_resdnn.historesdnn method)": [[170, "dipy.nn.histo_resdnn.HistoResDNN.__init__"]], "__init__() (dipy.nn.model.multiplelayerpercepton method)": [[170, "dipy.nn.model.MultipleLayerPercepton.__init__"]], "__init__() (dipy.nn.model.singlelayerperceptron method)": [[170, "dipy.nn.model.SingleLayerPerceptron.__init__"]], "__init__() (dipy.nn.synb0.decoderblock method)": [[170, "dipy.nn.synb0.DecoderBlock.__init__"], [170, "id58"]], "__init__() (dipy.nn.synb0.encoderblock method)": [[170, "dipy.nn.synb0.EncoderBlock.__init__"], [170, "id54"]], "__init__() (dipy.nn.synb0.synb0 method)": [[170, "dipy.nn.synb0.Synb0.__init__"]], "call() (dipy.nn.evac.block method)": [[170, "dipy.nn.evac.Block.call"]], "call() (dipy.nn.evac.channelsum method)": [[170, "dipy.nn.evac.ChannelSum.call"]], "call() (dipy.nn.synb0.decoderblock method)": [[170, "dipy.nn.synb0.DecoderBlock.call"], [170, "id59"]], "call() (dipy.nn.synb0.encoderblock method)": [[170, "dipy.nn.synb0.EncoderBlock.call"], [170, "id55"]], "compile() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[170, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.compile"]], "correct_minor_errors() (in module dipy.nn.utils)": [[170, "dipy.nn.utils.correct_minor_errors"]], "dipy.nn": [[170, "module-dipy.nn"]], "dipy.nn.cnn_1d_denoising": [[170, "module-dipy.nn.cnn_1d_denoising"]], "dipy.nn.evac": [[170, "module-dipy.nn.evac"]], "dipy.nn.histo_resdnn": [[170, "module-dipy.nn.histo_resdnn"]], "dipy.nn.model": [[170, "module-dipy.nn.model"]], "dipy.nn.synb0": [[170, "module-dipy.nn.synb0"]], "dipy.nn.utils": [[170, "module-dipy.nn.utils"]], "evaluate() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[170, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.evaluate"]], "evaluate() (dipy.nn.model.multiplelayerpercepton method)": [[170, "dipy.nn.model.MultipleLayerPercepton.evaluate"]], "evaluate() (dipy.nn.model.singlelayerperceptron method)": [[170, "dipy.nn.model.SingleLayerPerceptron.evaluate"]], "fetch_default_weights() (dipy.nn.evac.evacplus method)": [[170, "dipy.nn.evac.EVACPlus.fetch_default_weights"]], "fetch_default_weights() (dipy.nn.histo_resdnn.historesdnn method)": [[170, "dipy.nn.histo_resdnn.HistoResDNN.fetch_default_weights"]], "fetch_default_weights() (dipy.nn.synb0.synb0 method)": [[170, "dipy.nn.synb0.Synb0.fetch_default_weights"]], "fit() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[170, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.fit"]], "fit() (dipy.nn.model.multiplelayerpercepton method)": [[170, "dipy.nn.model.MultipleLayerPercepton.fit"]], "fit() (dipy.nn.model.singlelayerperceptron method)": [[170, "dipy.nn.model.SingleLayerPerceptron.fit"]], "init_model() (in module dipy.nn.evac)": [[170, "dipy.nn.evac.init_model"]], "load_model_weights() (dipy.nn.evac.evacplus method)": [[170, "dipy.nn.evac.EVACPlus.load_model_weights"]], "load_model_weights() (dipy.nn.histo_resdnn.historesdnn method)": [[170, "dipy.nn.histo_resdnn.HistoResDNN.load_model_weights"]], "load_model_weights() (dipy.nn.synb0.synb0 method)": [[170, "dipy.nn.synb0.Synb0.load_model_weights"]], "load_weights() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[170, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.load_weights"]], "logger() (in module dipy.nn.evac)": [[170, "dipy.nn.evac.logger"]], "logger() (in module dipy.nn.histo_resdnn)": [[170, "dipy.nn.histo_resdnn.logger"]], "logger() (in module dipy.nn.synb0)": [[170, "dipy.nn.synb0.logger"]], "normalize() (in module dipy.nn.synb0)": [[170, "dipy.nn.synb0.normalize"]], "normalize() (in module dipy.nn.utils)": [[170, "dipy.nn.utils.normalize"]], "predict() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[170, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.predict"]], "predict() (dipy.nn.evac.evacplus method)": [[170, "dipy.nn.evac.EVACPlus.predict"]], "predict() (dipy.nn.histo_resdnn.historesdnn method)": [[170, "dipy.nn.histo_resdnn.HistoResDNN.predict"]], "predict() (dipy.nn.model.multiplelayerpercepton method)": [[170, "dipy.nn.model.MultipleLayerPercepton.predict"]], "predict() (dipy.nn.model.singlelayerperceptron method)": [[170, "dipy.nn.model.SingleLayerPerceptron.predict"]], "predict() (dipy.nn.synb0.synb0 method)": [[170, "dipy.nn.synb0.Synb0.predict"]], "prepare_img() (in module dipy.nn.evac)": [[170, "dipy.nn.evac.prepare_img"]], "recover_img() (in module dipy.nn.utils)": [[170, "dipy.nn.utils.recover_img"]], "save_weights() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[170, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.save_weights"]], "set_logger_level() (in module dipy.nn.utils)": [[170, "dipy.nn.utils.set_logger_level"]], "summary() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[170, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.summary"]], "summary() (dipy.nn.model.multiplelayerpercepton method)": [[170, "dipy.nn.model.MultipleLayerPercepton.summary"]], "summary() (dipy.nn.model.singlelayerperceptron method)": [[170, "dipy.nn.model.SingleLayerPerceptron.summary"]], "train_test_split() (dipy.nn.cnn_1d_denoising.cnn1ddenoiser method)": [[170, "dipy.nn.cnn_1d_denoising.Cnn1DDenoiser.train_test_split"]], "transform_img() (in module dipy.nn.utils)": [[170, "dipy.nn.utils.transform_img"]], "unnormalize() (in module dipy.nn.synb0)": [[170, "dipy.nn.synb0.unnormalize"]], "unnormalize() (in module dipy.nn.utils)": [[170, "dipy.nn.utils.unnormalize"]], "axsymshresponse (class in dipy.reconst.csdeconv)": [[171, "dipy.reconst.csdeconv.AxSymShResponse"]], "cache (class in dipy.reconst.cache)": [[171, "dipy.reconst.cache.Cache"]], "callablearray (class in dipy.reconst.multi_voxel)": [[171, "dipy.reconst.multi_voxel.CallableArray"]], "constrainedsdtmodel (class in dipy.reconst.csdeconv)": [[171, "dipy.reconst.csdeconv.ConstrainedSDTModel"]], "constrainedsphericaldeconvmodel (class in dipy.reconst.csdeconv)": [[171, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel"]], "correlationtensorfit (class in dipy.reconst.cti)": [[171, "dipy.reconst.cti.CorrelationTensorFit"]], "correlationtensormodel (class in dipy.reconst.cti)": [[171, "dipy.reconst.cti.CorrelationTensorModel"]], "csaodfmodel (class in dipy.reconst.shm)": [[171, "dipy.reconst.shm.CsaOdfModel"]], "d (dipy.reconst.ivim.ivimfit property)": [[171, "dipy.reconst.ivim.IvimFit.D"]], "d_star (dipy.reconst.ivim.ivimfit property)": [[171, "dipy.reconst.ivim.IvimFit.D_star"]], "diffusionkurtosisfit (class in dipy.reconst.dki)": [[171, "dipy.reconst.dki.DiffusionKurtosisFit"]], "diffusionkurtosismodel (class in dipy.reconst.dki)": [[171, "dipy.reconst.dki.DiffusionKurtosisModel"]], "diffusionspectrumdeconvfit (class in dipy.reconst.dsi)": [[171, "dipy.reconst.dsi.DiffusionSpectrumDeconvFit"]], "diffusionspectrumdeconvmodel (class in dipy.reconst.dsi)": [[171, "dipy.reconst.dsi.DiffusionSpectrumDeconvModel"]], "diffusionspectrumfit (class in dipy.reconst.dsi)": [[171, "dipy.reconst.dsi.DiffusionSpectrumFit"]], "diffusionspectrummodel (class in dipy.reconst.dsi)": [[171, "dipy.reconst.dsi.DiffusionSpectrumModel"]], "eudxdirectiongetter (class in dipy.reconst.eudx_direction_getter)": [[171, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter"]], "exponentialisotropicfit (class in dipy.reconst.sfm)": [[171, "dipy.reconst.sfm.ExponentialIsotropicFit"]], "exponentialisotropicmodel (class in dipy.reconst.sfm)": [[171, "dipy.reconst.sfm.ExponentialIsotropicModel"]], "forecastfit (class in dipy.reconst.forecast)": [[171, "dipy.reconst.forecast.ForecastFit"]], "forecastmodel (class in dipy.reconst.forecast)": [[171, "dipy.reconst.forecast.ForecastModel"]], "freewatertensorfit (class in dipy.reconst.fwdti)": [[171, "dipy.reconst.fwdti.FreeWaterTensorFit"]], "freewatertensormodel (class in dipy.reconst.fwdti)": [[171, "dipy.reconst.fwdti.FreeWaterTensorModel"]], "gcv_cost_function() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.GCV_cost_function"]], "generalizedqsamplingfit (class in dipy.reconst.gqi)": [[171, "dipy.reconst.gqi.GeneralizedQSamplingFit"]], "generalizedqsamplingmodel (class in dipy.reconst.gqi)": [[171, "dipy.reconst.gqi.GeneralizedQSamplingModel"]], "h() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.H"]], "isotropicfit (class in dipy.reconst.sfm)": [[171, "dipy.reconst.sfm.IsotropicFit"]], "isotropicmodel (class in dipy.reconst.sfm)": [[171, "dipy.reconst.sfm.IsotropicModel"]], "ivimfit (class in dipy.reconst.ivim)": [[171, "dipy.reconst.ivim.IvimFit"]], "ivimmodeltrr (class in dipy.reconst.ivim)": [[171, "dipy.reconst.ivim.IvimModelTRR"]], "ivimmodelvp (class in dipy.reconst.ivim)": [[171, "dipy.reconst.ivim.IvimModelVP"]], "k_aniso (dipy.reconst.cti.correlationtensorfit property)": [[171, "dipy.reconst.cti.CorrelationTensorFit.K_aniso"]], "k_iso (dipy.reconst.cti.correlationtensorfit property)": [[171, "dipy.reconst.cti.CorrelationTensorFit.K_iso"]], "k_micro (dipy.reconst.cti.correlationtensorfit property)": [[171, "dipy.reconst.cti.CorrelationTensorFit.K_micro"]], "k_total() (dipy.reconst.cti.correlationtensorfit method)": [[171, "dipy.reconst.cti.CorrelationTensorFit.K_total"]], "kurtosismicrostructuralfit (class in dipy.reconst.dki_micro)": [[171, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit"]], "kurtosismicrostructuremodel (class in dipy.reconst.dki_micro)": [[171, "dipy.reconst.dki_micro.KurtosisMicrostructureModel"]], "lr_deconv() (in module dipy.reconst.dsi)": [[171, "dipy.reconst.dsi.LR_deconv"]], "msdeconvfit (class in dipy.reconst.mcsd)": [[171, "dipy.reconst.mcsd.MSDeconvFit"]], "mapmrifit (class in dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.MapmriFit"]], "mapmrimodel (class in dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.MapmriModel"]], "meandiffusionkurtosisfit (class in dipy.reconst.msdki)": [[171, "dipy.reconst.msdki.MeanDiffusionKurtosisFit"]], "meandiffusionkurtosismodel (class in dipy.reconst.msdki)": [[171, "dipy.reconst.msdki.MeanDiffusionKurtosisModel"]], "multishelldeconvmodel (class in dipy.reconst.mcsd)": [[171, "dipy.reconst.mcsd.MultiShellDeconvModel"]], "multishellresponse (class in dipy.reconst.mcsd)": [[171, "dipy.reconst.mcsd.MultiShellResponse"]], "multivoxelfit (class in dipy.reconst.multi_voxel)": [[171, "dipy.reconst.multi_voxel.MultiVoxelFit"]], "odffit (class in dipy.reconst.odf)": [[171, "dipy.reconst.odf.OdfFit"]], "odfmodel (class in dipy.reconst.odf)": [[171, "dipy.reconst.odf.OdfModel"]], "opdtmodel (class in dipy.reconst.shm)": [[171, "dipy.reconst.shm.OpdtModel"]], "qballbasemodel (class in dipy.reconst.shm)": [[171, "dipy.reconst.shm.QballBaseModel"]], "qballmodel (class in dipy.reconst.shm)": [[171, "dipy.reconst.shm.QballModel"]], "qpfitter (class in dipy.reconst.mcsd)": [[171, "dipy.reconst.mcsd.QpFitter"]], "qtdmrifit (class in dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.QtdmriFit"]], "qtdmrimodel (class in dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.QtdmriModel"]], "qtifit (class in dipy.reconst.qti)": [[171, "dipy.reconst.qti.QtiFit"]], "qtimodel (class in dipy.reconst.qti)": [[171, "dipy.reconst.qti.QtiModel"]], "reconstfit (class in dipy.reconst.base)": [[171, "dipy.reconst.base.ReconstFit"]], "reconstmodel (class in dipy.reconst.base)": [[171, "dipy.reconst.base.ReconstModel"]], "residualbootstrapwrapper (class in dipy.reconst.shm)": [[171, "dipy.reconst.shm.ResidualBootstrapWrapper"]], "rumbafit (class in dipy.reconst.rumba)": [[171, "dipy.reconst.rumba.RumbaFit"]], "rumbasdmodel (class in dipy.reconst.rumba)": [[171, "dipy.reconst.rumba.RumbaSDModel"]], "s0_hat (dipy.reconst.dti.tensorfit property)": [[171, "dipy.reconst.dti.TensorFit.S0_hat"]], "s0_hat (dipy.reconst.msdki.meandiffusionkurtosisfit property)": [[171, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.S0_hat"]], "s0_hat() (dipy.reconst.qti.qtifit method)": [[171, "dipy.reconst.qti.QtiFit.S0_hat"]], "s0_predicted (dipy.reconst.ivim.ivimfit property)": [[171, "dipy.reconst.ivim.IvimFit.S0_predicted"]], "shorefit (class in dipy.reconst.shore)": [[171, "dipy.reconst.shore.ShoreFit"]], "shoremodel (class in dipy.reconst.shore)": [[171, "dipy.reconst.shore.ShoreModel"]], "sparsefasciclefit (class in dipy.reconst.sfm)": [[171, "dipy.reconst.sfm.SparseFascicleFit"]], "sparsefasciclemodel (class in dipy.reconst.sfm)": [[171, "dipy.reconst.sfm.SparseFascicleModel"]], "sphharmfit (class in dipy.reconst.shm)": [[171, "dipy.reconst.shm.SphHarmFit"]], "sphharmmodel (class in dipy.reconst.shm)": [[171, "dipy.reconst.shm.SphHarmModel"]], "tensorfit (class in dipy.reconst.dti)": [[171, "dipy.reconst.dti.TensorFit"]], "tensormodel (class in dipy.reconst.dti)": [[171, "dipy.reconst.dti.TensorModel"]], "wcons() (in module dipy.reconst.dki)": [[171, "dipy.reconst.dki.Wcons"]], "wrotate() (in module dipy.reconst.dki)": [[171, "dipy.reconst.dki.Wrotate"]], "wrotate_element() (in module dipy.reconst.dki)": [[171, "dipy.reconst.dki.Wrotate_element"]], "__init__() (dipy.reconst.base.reconstfit method)": [[171, "dipy.reconst.base.ReconstFit.__init__"]], "__init__() (dipy.reconst.base.reconstmodel method)": [[171, "dipy.reconst.base.ReconstModel.__init__"]], "__init__() (dipy.reconst.cache.cache method)": [[171, "dipy.reconst.cache.Cache.__init__"]], "__init__() (dipy.reconst.csdeconv.axsymshresponse method)": [[171, "dipy.reconst.csdeconv.AxSymShResponse.__init__"]], "__init__() (dipy.reconst.csdeconv.constrainedsdtmodel method)": [[171, "dipy.reconst.csdeconv.ConstrainedSDTModel.__init__"]], "__init__() (dipy.reconst.csdeconv.constrainedsphericaldeconvmodel method)": [[171, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.__init__"]], "__init__() (dipy.reconst.cti.correlationtensorfit method)": [[171, "dipy.reconst.cti.CorrelationTensorFit.__init__"]], "__init__() (dipy.reconst.cti.correlationtensormodel method)": [[171, "dipy.reconst.cti.CorrelationTensorModel.__init__"]], "__init__() (dipy.reconst.dki.diffusionkurtosisfit method)": [[171, "dipy.reconst.dki.DiffusionKurtosisFit.__init__"]], "__init__() (dipy.reconst.dki.diffusionkurtosismodel method)": [[171, "dipy.reconst.dki.DiffusionKurtosisModel.__init__"]], "__init__() (dipy.reconst.dki_micro.kurtosismicrostructuralfit method)": [[171, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.__init__"]], "__init__() (dipy.reconst.dki_micro.kurtosismicrostructuremodel method)": [[171, "dipy.reconst.dki_micro.KurtosisMicrostructureModel.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrumdeconvfit method)": [[171, "dipy.reconst.dsi.DiffusionSpectrumDeconvFit.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrumdeconvmodel method)": [[171, "dipy.reconst.dsi.DiffusionSpectrumDeconvModel.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrumfit method)": [[171, "dipy.reconst.dsi.DiffusionSpectrumFit.__init__"]], "__init__() (dipy.reconst.dsi.diffusionspectrummodel method)": [[171, "dipy.reconst.dsi.DiffusionSpectrumModel.__init__"]], "__init__() (dipy.reconst.dti.tensorfit method)": [[171, "dipy.reconst.dti.TensorFit.__init__"]], "__init__() (dipy.reconst.dti.tensormodel method)": [[171, "dipy.reconst.dti.TensorModel.__init__"]], "__init__() (dipy.reconst.eudx_direction_getter.eudxdirectiongetter method)": [[171, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.__init__"]], "__init__() (dipy.reconst.forecast.forecastfit method)": [[171, "dipy.reconst.forecast.ForecastFit.__init__"]], "__init__() (dipy.reconst.forecast.forecastmodel method)": [[171, "dipy.reconst.forecast.ForecastModel.__init__"]], "__init__() (dipy.reconst.fwdti.freewatertensorfit method)": [[171, "dipy.reconst.fwdti.FreeWaterTensorFit.__init__"]], "__init__() (dipy.reconst.fwdti.freewatertensormodel method)": [[171, "dipy.reconst.fwdti.FreeWaterTensorModel.__init__"]], "__init__() (dipy.reconst.gqi.generalizedqsamplingfit method)": [[171, "dipy.reconst.gqi.GeneralizedQSamplingFit.__init__"]], "__init__() (dipy.reconst.gqi.generalizedqsamplingmodel method)": [[171, "dipy.reconst.gqi.GeneralizedQSamplingModel.__init__"]], "__init__() (dipy.reconst.ivim.ivimfit method)": [[171, "dipy.reconst.ivim.IvimFit.__init__"]], "__init__() (dipy.reconst.ivim.ivimmodeltrr method)": [[171, "dipy.reconst.ivim.IvimModelTRR.__init__"]], "__init__() (dipy.reconst.ivim.ivimmodelvp method)": [[171, "dipy.reconst.ivim.IvimModelVP.__init__"]], "__init__() (dipy.reconst.mapmri.mapmrifit method)": [[171, "dipy.reconst.mapmri.MapmriFit.__init__"]], "__init__() (dipy.reconst.mapmri.mapmrimodel method)": [[171, "dipy.reconst.mapmri.MapmriModel.__init__"]], "__init__() (dipy.reconst.mcsd.msdeconvfit method)": [[171, "dipy.reconst.mcsd.MSDeconvFit.__init__"]], "__init__() (dipy.reconst.mcsd.multishelldeconvmodel method)": [[171, "dipy.reconst.mcsd.MultiShellDeconvModel.__init__"]], "__init__() (dipy.reconst.mcsd.multishellresponse method)": [[171, "dipy.reconst.mcsd.MultiShellResponse.__init__"]], "__init__() (dipy.reconst.mcsd.qpfitter method)": [[171, "dipy.reconst.mcsd.QpFitter.__init__"]], "__init__() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[171, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.__init__"]], "__init__() (dipy.reconst.msdki.meandiffusionkurtosismodel method)": [[171, "dipy.reconst.msdki.MeanDiffusionKurtosisModel.__init__"]], "__init__() (dipy.reconst.multi_voxel.callablearray method)": [[171, "dipy.reconst.multi_voxel.CallableArray.__init__"]], "__init__() (dipy.reconst.multi_voxel.multivoxelfit method)": [[171, "dipy.reconst.multi_voxel.MultiVoxelFit.__init__"]], "__init__() (dipy.reconst.odf.odffit method)": [[171, "dipy.reconst.odf.OdfFit.__init__"]], "__init__() (dipy.reconst.odf.odfmodel method)": [[171, "dipy.reconst.odf.OdfModel.__init__"]], "__init__() (dipy.reconst.qtdmri.qtdmrifit method)": [[171, "dipy.reconst.qtdmri.QtdmriFit.__init__"]], "__init__() (dipy.reconst.qtdmri.qtdmrimodel method)": [[171, "dipy.reconst.qtdmri.QtdmriModel.__init__"]], "__init__() (dipy.reconst.qti.qtifit method)": [[171, "dipy.reconst.qti.QtiFit.__init__"]], "__init__() (dipy.reconst.qti.qtimodel method)": [[171, "dipy.reconst.qti.QtiModel.__init__"]], "__init__() (dipy.reconst.rumba.rumbafit method)": [[171, "dipy.reconst.rumba.RumbaFit.__init__"]], "__init__() (dipy.reconst.rumba.rumbasdmodel method)": [[171, "dipy.reconst.rumba.RumbaSDModel.__init__"]], "__init__() (dipy.reconst.sfm.exponentialisotropicfit method)": [[171, "dipy.reconst.sfm.ExponentialIsotropicFit.__init__"]], "__init__() (dipy.reconst.sfm.exponentialisotropicmodel method)": [[171, "dipy.reconst.sfm.ExponentialIsotropicModel.__init__"]], "__init__() (dipy.reconst.sfm.isotropicfit method)": [[171, "dipy.reconst.sfm.IsotropicFit.__init__"]], "__init__() (dipy.reconst.sfm.isotropicmodel method)": [[171, "dipy.reconst.sfm.IsotropicModel.__init__"]], "__init__() (dipy.reconst.sfm.sparsefasciclefit method)": [[171, "dipy.reconst.sfm.SparseFascicleFit.__init__"]], "__init__() (dipy.reconst.sfm.sparsefasciclemodel method)": [[171, "dipy.reconst.sfm.SparseFascicleModel.__init__"]], "__init__() (dipy.reconst.shm.csaodfmodel method)": [[171, "dipy.reconst.shm.CsaOdfModel.__init__"]], "__init__() (dipy.reconst.shm.opdtmodel method)": [[171, "dipy.reconst.shm.OpdtModel.__init__"]], "__init__() (dipy.reconst.shm.qballbasemodel method)": [[171, "dipy.reconst.shm.QballBaseModel.__init__"]], "__init__() (dipy.reconst.shm.qballmodel method)": [[171, "dipy.reconst.shm.QballModel.__init__"]], "__init__() (dipy.reconst.shm.residualbootstrapwrapper method)": [[171, "dipy.reconst.shm.ResidualBootstrapWrapper.__init__"]], "__init__() (dipy.reconst.shm.sphharmfit method)": [[171, "dipy.reconst.shm.SphHarmFit.__init__"]], "__init__() (dipy.reconst.shm.sphharmmodel method)": [[171, "dipy.reconst.shm.SphHarmModel.__init__"]], "__init__() (dipy.reconst.shore.shorefit method)": [[171, "dipy.reconst.shore.ShoreFit.__init__"]], "__init__() (dipy.reconst.shore.shoremodel method)": [[171, "dipy.reconst.shore.ShoreModel.__init__"]], "_lt_cols() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti._lt_cols"]], "_lt_indices() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti._lt_indices"]], "_lt_rows() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti._lt_rows"]], "ad() (dipy.reconst.dti.tensorfit method)": [[171, "dipy.reconst.dti.TensorFit.ad"]], "adc() (dipy.reconst.dti.tensorfit method)": [[171, "dipy.reconst.dti.TensorFit.adc"]], "adj_to_countarrs() (in module dipy.reconst.recspeed)": [[171, "dipy.reconst.recspeed.adj_to_countarrs"]], "ak() (dipy.reconst.dki.diffusionkurtosisfit method)": [[171, "dipy.reconst.dki.DiffusionKurtosisFit.ak"]], "akc() (dipy.reconst.dki.diffusionkurtosisfit method)": [[171, "dipy.reconst.dki.DiffusionKurtosisFit.akc"]], "all_shm_coeff (dipy.reconst.mcsd.msdeconvfit property)": [[171, "dipy.reconst.mcsd.MSDeconvFit.all_shm_coeff"]], "ang_thr (dipy.reconst.eudx_direction_getter.eudxdirectiongetter attribute)": [[171, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.ang_thr"]], "angular_basis_eap_opt() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.angular_basis_EAP_opt"]], "angular_basis_opt() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.angular_basis_opt"]], "anisotropic_power() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.anisotropic_power"]], "apparent_diffusion_coef() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.apparent_diffusion_coef"]], "apparent_kurtosis_coef() (in module dipy.reconst.dki)": [[171, "dipy.reconst.dki.apparent_kurtosis_coef"]], "argmax_from_adj() (in module dipy.reconst.recspeed)": [[171, "dipy.reconst.recspeed.argmax_from_adj"]], "argmax_from_countarrs() (in module dipy.reconst.recspeed)": [[171, "dipy.reconst.recspeed.argmax_from_countarrs"]], "auto_response() (in module dipy.reconst.csdeconv)": [[171, "dipy.reconst.csdeconv.auto_response"]], "auto_response_msmt() (in module dipy.reconst.mcsd)": [[171, "dipy.reconst.mcsd.auto_response_msmt"]], "auto_response_ssst() (in module dipy.reconst.csdeconv)": [[171, "dipy.reconst.csdeconv.auto_response_ssst"]], "awf (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[171, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.awf"]], "awf_from_msk() (in module dipy.reconst.msdki)": [[171, "dipy.reconst.msdki.awf_from_msk"]], "axial_diffusivity() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.axial_diffusivity"]], "axial_kurtosis() (in module dipy.reconst.dki)": [[171, "dipy.reconst.dki.axial_kurtosis"]], "axonal_diffusivity (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[171, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.axonal_diffusivity"]], "axonal_water_fraction() (in module dipy.reconst.dki_micro)": [[171, "dipy.reconst.dki_micro.axonal_water_fraction"]], "b_mat() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.b_mat"]], "b_mat_isotropic() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.b_mat_isotropic"]], "basis() (dipy.reconst.csdeconv.axsymshresponse method)": [[171, "dipy.reconst.csdeconv.AxSymShResponse.basis"]], "binomialfloat() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.binomialfloat"]], "bootstrap_data_array() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.bootstrap_data_array"]], "bootstrap_data_voxel() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.bootstrap_data_voxel"]], "c_c() (dipy.reconst.qti.qtifit method)": [[171, "dipy.reconst.qti.QtiFit.c_c"]], "c_m() (dipy.reconst.qti.qtifit method)": [[171, "dipy.reconst.qti.QtiFit.c_m"]], "c_md() (dipy.reconst.qti.qtifit method)": [[171, "dipy.reconst.qti.QtiFit.c_md"]], "c_mu() (dipy.reconst.qti.qtifit method)": [[171, "dipy.reconst.qti.QtiFit.c_mu"]], "cache_clear() (dipy.reconst.cache.cache method)": [[171, "dipy.reconst.cache.Cache.cache_clear"]], "cache_get() (dipy.reconst.cache.cache method)": [[171, "dipy.reconst.cache.Cache.cache_get"]], "cache_set() (dipy.reconst.cache.cache method)": [[171, "dipy.reconst.cache.Cache.cache_set"]], "calculate_max_order() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.calculate_max_order"]], "carlson_rd() (in module dipy.reconst.dki)": [[171, "dipy.reconst.dki.carlson_rd"]], "carlson_rf() (in module dipy.reconst.dki)": [[171, "dipy.reconst.dki.carlson_rf"]], "cholesky_to_lower_triangular() (in module dipy.reconst.fwdti)": [[171, "dipy.reconst.fwdti.cholesky_to_lower_triangular"]], "cls_fit_dki() (in module dipy.reconst.dki)": [[171, "dipy.reconst.dki.cls_fit_dki"]], "coeff_of_determination() (in module dipy.reconst.cross_validation)": [[171, "dipy.reconst.cross_validation.coeff_of_determination"]], "color_fa() (dipy.reconst.dti.tensorfit method)": [[171, "dipy.reconst.dti.TensorFit.color_fa"]], "color_fa() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.color_fa"]], "combined_odf_iso() (dipy.reconst.rumba.rumbafit method)": [[171, "dipy.reconst.rumba.RumbaFit.combined_odf_iso"]], "convert_sh_from_legacy() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.convert_sh_from_legacy"]], "convert_sh_to_full_basis() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.convert_sh_to_full_basis"]], "convert_sh_to_legacy() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.convert_sh_to_legacy"]], "create_qspace() (in module dipy.reconst.dsi)": [[171, "dipy.reconst.dsi.create_qspace"]], "create_qtable() (in module dipy.reconst.dsi)": [[171, "dipy.reconst.dsi.create_qtable"]], "create_rspace() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.create_rspace"]], "create_rspace() (in module dipy.reconst.shore)": [[171, "dipy.reconst.shore.create_rspace"]], "create_rt_space_grid() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.create_rt_space_grid"]], "csdeconv() (in module dipy.reconst.csdeconv)": [[171, "dipy.reconst.csdeconv.csdeconv"]], "ct (dipy.reconst.cti.correlationtensorfit property)": [[171, "dipy.reconst.cti.CorrelationTensorFit.ct"]], "cti_design_matrix() (in module dipy.reconst.utils)": [[171, "dipy.reconst.utils.cti_design_matrix"]], "cti_prediction() (in module dipy.reconst.cti)": [[171, "dipy.reconst.cti.cti_prediction"]], "cvx_fit() (dipy.reconst.ivim.ivimmodelvp method)": [[171, "dipy.reconst.ivim.IvimModelVP.cvx_fit"]], "cvxpy_1x21_to_6x6() (in module dipy.reconst.qti)": [[171, "dipy.reconst.qti.cvxpy_1x21_to_6x6"]], "cvxpy_1x6_to_3x3() (in module dipy.reconst.qti)": [[171, "dipy.reconst.qti.cvxpy_1x6_to_3x3"]], "d_sq() (dipy.reconst.qti.qtifit method)": [[171, "dipy.reconst.qti.QtiFit.d_sq"]], "decompose_tensor() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.decompose_tensor"]], "delta() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.delta"]], "design_matrix() (dipy.reconst.sfm.sparsefasciclemodel method)": [[171, "dipy.reconst.sfm.SparseFascicleModel.design_matrix"]], "design_matrix() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.design_matrix"]], "design_matrix() (in module dipy.reconst.msdki)": [[171, "dipy.reconst.msdki.design_matrix"]], "design_matrix() (in module dipy.reconst.qti)": [[171, "dipy.reconst.qti.design_matrix"]], "design_matrix_spatial() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.design_matrix_spatial"]], "determinant() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.determinant"]], "deviatoric() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.deviatoric"]], "diffusion_components() (in module dipy.reconst.dki_micro)": [[171, "dipy.reconst.dki_micro.diffusion_components"]], "dipy.reconst": [[171, "module-dipy.reconst"]], "dipy.reconst.base": [[171, "module-dipy.reconst.base"]], "dipy.reconst.cache": [[171, "module-dipy.reconst.cache"]], "dipy.reconst.cross_validation": [[171, "module-dipy.reconst.cross_validation"]], "dipy.reconst.csdeconv": [[171, "module-dipy.reconst.csdeconv"]], "dipy.reconst.cti": [[171, "module-dipy.reconst.cti"]], "dipy.reconst.dki": [[171, "module-dipy.reconst.dki"]], "dipy.reconst.dki_micro": [[171, "module-dipy.reconst.dki_micro"]], "dipy.reconst.dsi": [[171, "module-dipy.reconst.dsi"]], "dipy.reconst.dti": [[171, "module-dipy.reconst.dti"]], "dipy.reconst.eudx_direction_getter": [[171, "module-dipy.reconst.eudx_direction_getter"]], "dipy.reconst.forecast": [[171, "module-dipy.reconst.forecast"]], "dipy.reconst.fwdti": [[171, "module-dipy.reconst.fwdti"]], "dipy.reconst.gqi": [[171, "module-dipy.reconst.gqi"]], "dipy.reconst.ivim": [[171, "module-dipy.reconst.ivim"]], "dipy.reconst.mapmri": [[171, "module-dipy.reconst.mapmri"]], "dipy.reconst.mcsd": [[171, "module-dipy.reconst.mcsd"]], "dipy.reconst.msdki": [[171, "module-dipy.reconst.msdki"]], "dipy.reconst.multi_voxel": [[171, "module-dipy.reconst.multi_voxel"]], "dipy.reconst.odf": [[171, "module-dipy.reconst.odf"]], "dipy.reconst.qtdmri": [[171, "module-dipy.reconst.qtdmri"]], "dipy.reconst.qti": [[171, "module-dipy.reconst.qti"]], "dipy.reconst.quick_squash": [[171, "module-dipy.reconst.quick_squash"]], "dipy.reconst.recspeed": [[171, "module-dipy.reconst.recspeed"]], "dipy.reconst.rumba": [[171, "module-dipy.reconst.rumba"]], "dipy.reconst.sfm": [[171, "module-dipy.reconst.sfm"]], "dipy.reconst.shm": [[171, "module-dipy.reconst.shm"]], "dipy.reconst.shore": [[171, "module-dipy.reconst.shore"]], "dipy.reconst.utils": [[171, "module-dipy.reconst.utils"]], "dipy.reconst.vec_val_sum": [[171, "module-dipy.reconst.vec_val_sum"]], "directional_diffusion() (in module dipy.reconst.dki)": [[171, "dipy.reconst.dki.directional_diffusion"]], "directional_diffusion_variance() (in module dipy.reconst.dki)": [[171, "dipy.reconst.dki.directional_diffusion_variance"]], "directional_kurtosis() (in module dipy.reconst.dki)": [[171, "dipy.reconst.dki.directional_kurtosis"]], "directions (dipy.reconst.dti.tensorfit property)": [[171, "dipy.reconst.dti.TensorFit.directions"]], "dki_design_matrix() (in module dipy.reconst.utils)": [[171, "dipy.reconst.utils.dki_design_matrix"]], "dki_prediction() (in module dipy.reconst.dki)": [[171, "dipy.reconst.dki.dki_prediction"]], "dkimicro_prediction() (in module dipy.reconst.dki_micro)": [[171, "dipy.reconst.dki_micro.dkimicro_prediction"]], "dpar (dipy.reconst.forecast.forecastfit property)": [[171, "dipy.reconst.forecast.ForecastFit.dpar"]], "dperp (dipy.reconst.forecast.forecastfit property)": [[171, "dipy.reconst.forecast.ForecastFit.dperp"]], "dtd_covariance() (in module dipy.reconst.qti)": [[171, "dipy.reconst.qti.dtd_covariance"]], "eig_from_lo_tri() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.eig_from_lo_tri"]], "elastic_crossvalidation() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.elastic_crossvalidation"]], "equatorial_maximum() (in module dipy.reconst.gqi)": [[171, "dipy.reconst.gqi.equatorial_maximum"]], "equatorial_zone_vertices() (in module dipy.reconst.gqi)": [[171, "dipy.reconst.gqi.equatorial_zone_vertices"]], "estimate_f_d_star() (dipy.reconst.ivim.ivimmodeltrr method)": [[171, "dipy.reconst.ivim.IvimModelTRR.estimate_f_D_star"]], "estimate_linear_fit() (dipy.reconst.ivim.ivimmodeltrr method)": [[171, "dipy.reconst.ivim.IvimModelTRR.estimate_linear_fit"]], "estimate_response() (in module dipy.reconst.csdeconv)": [[171, "dipy.reconst.csdeconv.estimate_response"]], "evals (dipy.reconst.dti.tensorfit property)": [[171, "dipy.reconst.dti.TensorFit.evals"]], "evecs (dipy.reconst.dti.tensorfit property)": [[171, "dipy.reconst.dti.TensorFit.evecs"]], "f (dipy.reconst.fwdti.freewatertensorfit property)": [[171, "dipy.reconst.fwdti.FreeWaterTensorFit.f"]], "f_d_star_error() (in module dipy.reconst.ivim)": [[171, "dipy.reconst.ivim.f_D_star_error"]], "f_d_star_prediction() (in module dipy.reconst.ivim)": [[171, "dipy.reconst.ivim.f_D_star_prediction"]], "f_csf() (dipy.reconst.rumba.rumbafit method)": [[171, "dipy.reconst.rumba.RumbaFit.f_csf"]], "f_gm() (dipy.reconst.rumba.rumbafit method)": [[171, "dipy.reconst.rumba.RumbaFit.f_gm"]], "f_iso() (dipy.reconst.rumba.rumbafit method)": [[171, "dipy.reconst.rumba.RumbaFit.f_iso"]], "f_wm() (dipy.reconst.rumba.rumbafit method)": [[171, "dipy.reconst.rumba.RumbaFit.f_wm"]], "fa() (dipy.reconst.dti.tensorfit method)": [[171, "dipy.reconst.dti.TensorFit.fa"]], "fa() (dipy.reconst.qti.qtifit method)": [[171, "dipy.reconst.qti.QtiFit.fa"]], "fa_trace_to_lambdas() (in module dipy.reconst.csdeconv)": [[171, "dipy.reconst.csdeconv.fa_trace_to_lambdas"]], "find_signal_means() (in module dipy.reconst.forecast)": [[171, "dipy.reconst.forecast.find_signal_means"]], "fit() (dipy.reconst.base.reconstmodel method)": [[171, "dipy.reconst.base.ReconstModel.fit"]], "fit() (dipy.reconst.csdeconv.constrainedsdtmodel method)": [[171, "dipy.reconst.csdeconv.ConstrainedSDTModel.fit"]], "fit() (dipy.reconst.csdeconv.constrainedsphericaldeconvmodel method)": [[171, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.fit"]], "fit() (dipy.reconst.cti.correlationtensormodel method)": [[171, "dipy.reconst.cti.CorrelationTensorModel.fit"]], "fit() (dipy.reconst.dki.diffusionkurtosismodel method)": [[171, "dipy.reconst.dki.DiffusionKurtosisModel.fit"]], "fit() (dipy.reconst.dki_micro.kurtosismicrostructuremodel method)": [[171, "dipy.reconst.dki_micro.KurtosisMicrostructureModel.fit"]], "fit() (dipy.reconst.dsi.diffusionspectrumdeconvmodel method)": [[171, "dipy.reconst.dsi.DiffusionSpectrumDeconvModel.fit"]], "fit() (dipy.reconst.dsi.diffusionspectrummodel method)": [[171, "dipy.reconst.dsi.DiffusionSpectrumModel.fit"]], "fit() (dipy.reconst.dti.tensormodel method)": [[171, "dipy.reconst.dti.TensorModel.fit"]], "fit() (dipy.reconst.forecast.forecastmodel method)": [[171, "dipy.reconst.forecast.ForecastModel.fit"]], "fit() (dipy.reconst.fwdti.freewatertensormodel method)": [[171, "dipy.reconst.fwdti.FreeWaterTensorModel.fit"]], "fit() (dipy.reconst.gqi.generalizedqsamplingmodel method)": [[171, "dipy.reconst.gqi.GeneralizedQSamplingModel.fit"]], "fit() (dipy.reconst.ivim.ivimmodeltrr method)": [[171, "dipy.reconst.ivim.IvimModelTRR.fit"]], "fit() (dipy.reconst.ivim.ivimmodelvp method)": [[171, "dipy.reconst.ivim.IvimModelVP.fit"]], "fit() (dipy.reconst.mapmri.mapmrimodel method)": [[171, "dipy.reconst.mapmri.MapmriModel.fit"]], "fit() (dipy.reconst.mcsd.multishelldeconvmodel method)": [[171, "dipy.reconst.mcsd.MultiShellDeconvModel.fit"]], "fit() (dipy.reconst.msdki.meandiffusionkurtosismodel method)": [[171, "dipy.reconst.msdki.MeanDiffusionKurtosisModel.fit"]], "fit() (dipy.reconst.odf.odfmodel method)": [[171, "dipy.reconst.odf.OdfModel.fit"]], "fit() (dipy.reconst.qtdmri.qtdmrimodel method)": [[171, "dipy.reconst.qtdmri.QtdmriModel.fit"]], "fit() (dipy.reconst.qti.qtimodel method)": [[171, "dipy.reconst.qti.QtiModel.fit"]], "fit() (dipy.reconst.sfm.exponentialisotropicmodel method)": [[171, "dipy.reconst.sfm.ExponentialIsotropicModel.fit"]], "fit() (dipy.reconst.sfm.isotropicmodel method)": [[171, "dipy.reconst.sfm.IsotropicModel.fit"]], "fit() (dipy.reconst.sfm.sparsefasciclemodel method)": [[171, "dipy.reconst.sfm.SparseFascicleModel.fit"]], "fit() (dipy.reconst.shm.qballbasemodel method)": [[171, "dipy.reconst.shm.QballBaseModel.fit"]], "fit() (dipy.reconst.shore.shoremodel method)": [[171, "dipy.reconst.shore.ShoreModel.fit"]], "fitted_signal() (dipy.reconst.mapmri.mapmrifit method)": [[171, "dipy.reconst.mapmri.MapmriFit.fitted_signal"]], "fitted_signal() (dipy.reconst.qtdmri.qtdmrifit method)": [[171, "dipy.reconst.qtdmri.QtdmriFit.fitted_signal"]], "fitted_signal() (dipy.reconst.shore.shorefit method)": [[171, "dipy.reconst.shore.ShoreFit.fitted_signal"]], "forecast_error_func() (in module dipy.reconst.forecast)": [[171, "dipy.reconst.forecast.forecast_error_func"]], "forecast_matrix() (in module dipy.reconst.forecast)": [[171, "dipy.reconst.forecast.forecast_matrix"]], "forward_sdeconv_mat() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.forward_sdeconv_mat"]], "forward_sdt_deconv_mat() (in module dipy.reconst.csdeconv)": [[171, "dipy.reconst.csdeconv.forward_sdt_deconv_mat"]], "fractional_anisotropy() (dipy.reconst.forecast.forecastfit method)": [[171, "dipy.reconst.forecast.ForecastFit.fractional_anisotropy"]], "fractional_anisotropy() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.fractional_anisotropy"]], "from_21x1_to_6x6() (in module dipy.reconst.qti)": [[171, "dipy.reconst.qti.from_21x1_to_6x6"]], "from_3x3_to_6x1() (in module dipy.reconst.qti)": [[171, "dipy.reconst.qti.from_3x3_to_6x1"]], "from_6x1_to_3x3() (in module dipy.reconst.qti)": [[171, "dipy.reconst.qti.from_6x1_to_3x3"]], "from_6x6_to_21x1() (in module dipy.reconst.qti)": [[171, "dipy.reconst.qti.from_6x6_to_21x1"]], "from_lower_triangular() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.from_lower_triangular"]], "from_qte_to_cti() (in module dipy.reconst.cti)": [[171, "dipy.reconst.cti.from_qte_to_cti"]], "fwdti_prediction() (in module dipy.reconst.fwdti)": [[171, "dipy.reconst.fwdti.fwdti_prediction"]], "ga() (dipy.reconst.dti.tensorfit method)": [[171, "dipy.reconst.dti.TensorFit.ga"]], "gcv_cost_function() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.gcv_cost_function"]], "gen_psf() (in module dipy.reconst.dsi)": [[171, "dipy.reconst.dsi.gen_PSF"]], "gen_dirac() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.gen_dirac"]], "generalized_crossvalidation() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.generalized_crossvalidation"]], "generalized_crossvalidation() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.generalized_crossvalidation"]], "generalized_crossvalidation_array() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.generalized_crossvalidation_array"]], "generate_kernel() (in module dipy.reconst.rumba)": [[171, "dipy.reconst.rumba.generate_kernel"]], "geodesic_anisotropy() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.geodesic_anisotropy"]], "gfa() (dipy.reconst.shm.sphharmfit method)": [[171, "dipy.reconst.shm.SphHarmFit.gfa"]], "gfa() (in module dipy.reconst.odf)": [[171, "dipy.reconst.odf.gfa"]], "half_to_full_qspace() (in module dipy.reconst.dsi)": [[171, "dipy.reconst.dsi.half_to_full_qspace"]], "hanning_filter() (in module dipy.reconst.dsi)": [[171, "dipy.reconst.dsi.hanning_filter"]], "hat() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.hat"]], "hindered_ad (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[171, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_ad"]], "hindered_evals (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[171, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_evals"]], "hindered_rd (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[171, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.hindered_rd"]], "initial_direction() (dipy.reconst.eudx_direction_getter.eudxdirectiongetter method)": [[171, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.initial_direction"]], "iso (dipy.reconst.mcsd.multishellresponse property)": [[171, "dipy.reconst.mcsd.MultiShellResponse.iso"]], "isotropic() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.isotropic"]], "isotropic_scale_factor() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.isotropic_scale_factor"]], "iter_fit_tensor() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.iter_fit_tensor"]], "ivim_mix_cost_one() (dipy.reconst.ivim.ivimmodelvp method)": [[171, "dipy.reconst.ivim.IvimModelVP.ivim_mix_cost_one"]], "ivim_model_selector() (in module dipy.reconst.ivim)": [[171, "dipy.reconst.ivim.ivim_model_selector"]], "ivim_prediction() (in module dipy.reconst.ivim)": [[171, "dipy.reconst.ivim.ivim_prediction"]], "k_bulk() (dipy.reconst.qti.qtifit method)": [[171, "dipy.reconst.qti.QtiFit.k_bulk"]], "k_mu() (dipy.reconst.qti.qtifit method)": [[171, "dipy.reconst.qti.QtiFit.k_mu"]], "k_shear() (dipy.reconst.qti.qtifit method)": [[171, "dipy.reconst.qti.QtiFit.k_shear"]], "kfa (dipy.reconst.dki.diffusionkurtosisfit property)": [[171, "dipy.reconst.dki.DiffusionKurtosisFit.kfa"]], "kfold_xval() (in module dipy.reconst.cross_validation)": [[171, "dipy.reconst.cross_validation.kfold_xval"]], "kmax() (dipy.reconst.dki.diffusionkurtosisfit method)": [[171, "dipy.reconst.dki.DiffusionKurtosisFit.kmax"]], "kt (dipy.reconst.dki.diffusionkurtosisfit property)": [[171, "dipy.reconst.dki.DiffusionKurtosisFit.kt"]], "kurtosis_fractional_anisotropy() (in module dipy.reconst.dki)": [[171, "dipy.reconst.dki.kurtosis_fractional_anisotropy"]], "kurtosis_maximum() (in module dipy.reconst.dki)": [[171, "dipy.reconst.dki.kurtosis_maximum"]], "l1_crossvalidation() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.l1_crossvalidation"]], "l_shore() (in module dipy.reconst.shore)": [[171, "dipy.reconst.shore.l_shore"]], "lazy_index() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.lazy_index"]], "lb_forecast() (in module dipy.reconst.forecast)": [[171, "dipy.reconst.forecast.lb_forecast"]], "lcr_matrix() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.lcr_matrix"]], "le_to_odf() (in module dipy.reconst.recspeed)": [[171, "dipy.reconst.recspeed.le_to_odf"]], "linearity() (dipy.reconst.dti.tensorfit method)": [[171, "dipy.reconst.dti.TensorFit.linearity"]], "linearity() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.linearity"]], "local_maxima() (in module dipy.reconst.recspeed)": [[171, "dipy.reconst.recspeed.local_maxima"]], "logger() (in module dipy.reconst.rumba)": [[171, "dipy.reconst.rumba.logger"]], "lower_triangular() (dipy.reconst.dti.tensorfit method)": [[171, "dipy.reconst.dti.TensorFit.lower_triangular"]], "lower_triangular() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.lower_triangular"]], "lower_triangular_to_cholesky() (in module dipy.reconst.fwdti)": [[171, "dipy.reconst.fwdti.lower_triangular_to_cholesky"]], "ls_fit_cti() (in module dipy.reconst.cti)": [[171, "dipy.reconst.cti.ls_fit_cti"]], "ls_fit_dki() (in module dipy.reconst.dki)": [[171, "dipy.reconst.dki.ls_fit_dki"]], "map_laplace_s() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.map_laplace_s"]], "map_laplace_t() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.map_laplace_t"]], "map_laplace_u() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.map_laplace_u"]], "mapmri_r (dipy.reconst.mapmri.mapmrifit property)": [[171, "dipy.reconst.mapmri.MapmriFit.mapmri_R"]], "mapmri_stu_reg_matrices() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.mapmri_STU_reg_matrices"]], "mapmri_coeff (dipy.reconst.mapmri.mapmrifit property)": [[171, "dipy.reconst.mapmri.MapmriFit.mapmri_coeff"]], "mapmri_index_matrix() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.mapmri_index_matrix"]], "mapmri_isotropic_k_mu_dependent() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.mapmri_isotropic_K_mu_dependent"]], "mapmri_isotropic_k_mu_independent() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.mapmri_isotropic_K_mu_independent"]], "mapmri_isotropic_m_mu_dependent() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.mapmri_isotropic_M_mu_dependent"]], "mapmri_isotropic_m_mu_independent() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.mapmri_isotropic_M_mu_independent"]], "mapmri_isotropic_index_matrix() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.mapmri_isotropic_index_matrix"]], "mapmri_isotropic_laplacian_reg_matrix() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.mapmri_isotropic_laplacian_reg_matrix"]], "mapmri_isotropic_laplacian_reg_matrix_from_index_matrix() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.mapmri_isotropic_laplacian_reg_matrix_from_index_matrix"]], "mapmri_isotropic_odf_matrix() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.mapmri_isotropic_odf_matrix"]], "mapmri_isotropic_odf_sh_matrix() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.mapmri_isotropic_odf_sh_matrix"]], "mapmri_isotropic_phi_matrix() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.mapmri_isotropic_phi_matrix"]], "mapmri_isotropic_psi_matrix() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.mapmri_isotropic_psi_matrix"]], "mapmri_isotropic_radial_pdf_basis() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.mapmri_isotropic_radial_pdf_basis"]], "mapmri_isotropic_radial_signal_basis() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.mapmri_isotropic_radial_signal_basis"]], "mapmri_laplacian_reg_matrix() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.mapmri_laplacian_reg_matrix"]], "mapmri_mu (dipy.reconst.mapmri.mapmrifit property)": [[171, "dipy.reconst.mapmri.MapmriFit.mapmri_mu"]], "mapmri_odf_matrix() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.mapmri_odf_matrix"]], "mapmri_phi_1d() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.mapmri_phi_1d"]], "mapmri_phi_matrix() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.mapmri_phi_matrix"]], "mapmri_psi_1d() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.mapmri_psi_1d"]], "mapmri_psi_matrix() (in module dipy.reconst.mapmri)": [[171, "dipy.reconst.mapmri.mapmri_psi_matrix"]], "mask_for_response_msmt() (in module dipy.reconst.mcsd)": [[171, "dipy.reconst.mcsd.mask_for_response_msmt"]], "mask_for_response_ssst() (in module dipy.reconst.csdeconv)": [[171, "dipy.reconst.csdeconv.mask_for_response_ssst"]], "max (dipy.reconst.shm.csaodfmodel attribute)": [[171, "dipy.reconst.shm.CsaOdfModel.max"]], "mbessel_ratio() (in module dipy.reconst.rumba)": [[171, "dipy.reconst.rumba.mbessel_ratio"]], "md() (dipy.reconst.dti.tensorfit method)": [[171, "dipy.reconst.dti.TensorFit.md"]], "md() (dipy.reconst.qti.qtifit method)": [[171, "dipy.reconst.qti.QtiFit.md"]], "mean_d_sq() (dipy.reconst.qti.qtifit method)": [[171, "dipy.reconst.qti.QtiFit.mean_d_sq"]], "mean_diffusivity() (dipy.reconst.forecast.forecastfit method)": [[171, "dipy.reconst.forecast.ForecastFit.mean_diffusivity"]], "mean_diffusivity() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.mean_diffusivity"]], "mean_kurtosis() (in module dipy.reconst.dki)": [[171, "dipy.reconst.dki.mean_kurtosis"]], "mean_kurtosis_tensor() (in module dipy.reconst.dki)": [[171, "dipy.reconst.dki.mean_kurtosis_tensor"]], "mean_signal_bvalue() (in module dipy.reconst.msdki)": [[171, "dipy.reconst.msdki.mean_signal_bvalue"]], "min (dipy.reconst.shm.csaodfmodel attribute)": [[171, "dipy.reconst.shm.CsaOdfModel.min"]], "minmax_normalize() (in module dipy.reconst.odf)": [[171, "dipy.reconst.odf.minmax_normalize"]], "mk() (dipy.reconst.dki.diffusionkurtosisfit method)": [[171, "dipy.reconst.dki.DiffusionKurtosisFit.mk"]], "mk() (dipy.reconst.qti.qtifit method)": [[171, "dipy.reconst.qti.QtiFit.mk"]], "mkt() (dipy.reconst.dki.diffusionkurtosisfit method)": [[171, "dipy.reconst.dki.DiffusionKurtosisFit.mkt"]], "mode() (dipy.reconst.dti.tensorfit method)": [[171, "dipy.reconst.dti.TensorFit.mode"]], "mode() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.mode"]], "msd() (dipy.reconst.mapmri.mapmrifit method)": [[171, "dipy.reconst.mapmri.MapmriFit.msd"]], "msd() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[171, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.msd"]], "msd() (dipy.reconst.qtdmri.qtdmrifit method)": [[171, "dipy.reconst.qtdmri.QtdmriFit.msd"]], "msd() (dipy.reconst.shore.shorefit method)": [[171, "dipy.reconst.shore.ShoreFit.msd"]], "msd_discrete() (dipy.reconst.dsi.diffusionspectrumfit method)": [[171, "dipy.reconst.dsi.DiffusionSpectrumFit.msd_discrete"]], "msdki_prediction() (in module dipy.reconst.msdki)": [[171, "dipy.reconst.msdki.msdki_prediction"]], "msk() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[171, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.msk"]], "msk_from_awf() (in module dipy.reconst.msdki)": [[171, "dipy.reconst.msdki.msk_from_awf"]], "multi_fit() (dipy.reconst.dki.diffusionkurtosismodel method)": [[171, "dipy.reconst.dki.DiffusionKurtosisModel.multi_fit"]], "multi_gaussian_k_from_c() (in module dipy.reconst.cti)": [[171, "dipy.reconst.cti.multi_gaussian_k_from_c"]], "multi_shell_fiber_response() (in module dipy.reconst.mcsd)": [[171, "dipy.reconst.mcsd.multi_shell_fiber_response"]], "multi_tissue_basis() (in module dipy.reconst.mcsd)": [[171, "dipy.reconst.mcsd.multi_tissue_basis"]], "multi_voxel_fit() (in module dipy.reconst.multi_voxel)": [[171, "dipy.reconst.multi_voxel.multi_voxel_fit"]], "n_shore() (in module dipy.reconst.shore)": [[171, "dipy.reconst.shore.n_shore"]], "ng() (dipy.reconst.mapmri.mapmrifit method)": [[171, "dipy.reconst.mapmri.MapmriFit.ng"]], "ng_parallel() (dipy.reconst.mapmri.mapmrifit method)": [[171, "dipy.reconst.mapmri.MapmriFit.ng_parallel"]], "ng_perpendicular() (dipy.reconst.mapmri.mapmrifit method)": [[171, "dipy.reconst.mapmri.MapmriFit.ng_perpendicular"]], "nlls_cost() (dipy.reconst.ivim.ivimmodelvp method)": [[171, "dipy.reconst.ivim.IvimModelVP.nlls_cost"]], "nlls_fit_tensor() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.nlls_fit_tensor"]], "nls_fit_tensor() (in module dipy.reconst.fwdti)": [[171, "dipy.reconst.fwdti.nls_fit_tensor"]], "nls_iter() (in module dipy.reconst.fwdti)": [[171, "dipy.reconst.fwdti.nls_iter"]], "norm() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.norm"]], "norm_of_laplacian_signal() (dipy.reconst.mapmri.mapmrifit method)": [[171, "dipy.reconst.mapmri.MapmriFit.norm_of_laplacian_signal"]], "norm_of_laplacian_signal() (dipy.reconst.qtdmri.qtdmrifit method)": [[171, "dipy.reconst.qtdmri.QtdmriFit.norm_of_laplacian_signal"]], "normalize_data() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.normalize_data"]], "normalize_qa() (in module dipy.reconst.gqi)": [[171, "dipy.reconst.gqi.normalize_qa"]], "npa() (in module dipy.reconst.gqi)": [[171, "dipy.reconst.gqi.npa"]], "odf() (dipy.reconst.dsi.diffusionspectrumfit method)": [[171, "dipy.reconst.dsi.DiffusionSpectrumFit.odf"]], "odf() (dipy.reconst.dti.tensorfit method)": [[171, "dipy.reconst.dti.TensorFit.odf"]], "odf() (dipy.reconst.forecast.forecastfit method)": [[171, "dipy.reconst.forecast.ForecastFit.odf"]], "odf() (dipy.reconst.gqi.generalizedqsamplingfit method)": [[171, "dipy.reconst.gqi.GeneralizedQSamplingFit.odf"]], "odf() (dipy.reconst.mapmri.mapmrifit method)": [[171, "dipy.reconst.mapmri.MapmriFit.odf"]], "odf() (dipy.reconst.odf.odffit method)": [[171, "dipy.reconst.odf.OdfFit.odf"]], "odf() (dipy.reconst.qtdmri.qtdmrifit method)": [[171, "dipy.reconst.qtdmri.QtdmriFit.odf"]], "odf() (dipy.reconst.rumba.rumbafit method)": [[171, "dipy.reconst.rumba.RumbaFit.odf"]], "odf() (dipy.reconst.sfm.sparsefasciclefit method)": [[171, "dipy.reconst.sfm.SparseFascicleFit.odf"]], "odf() (dipy.reconst.shm.sphharmfit method)": [[171, "dipy.reconst.shm.SphHarmFit.odf"]], "odf() (dipy.reconst.shore.shorefit method)": [[171, "dipy.reconst.shore.ShoreFit.odf"]], "odf_deconv() (in module dipy.reconst.csdeconv)": [[171, "dipy.reconst.csdeconv.odf_deconv"]], "odf_sh() (dipy.reconst.mapmri.mapmrifit method)": [[171, "dipy.reconst.mapmri.MapmriFit.odf_sh"]], "odf_sh() (dipy.reconst.qtdmri.qtdmrifit method)": [[171, "dipy.reconst.qtdmri.QtdmriFit.odf_sh"]], "odf_sh() (dipy.reconst.shore.shorefit method)": [[171, "dipy.reconst.shore.ShoreFit.odf_sh"]], "odf_sh_to_sharp() (in module dipy.reconst.csdeconv)": [[171, "dipy.reconst.csdeconv.odf_sh_to_sharp"]], "odf_sum() (in module dipy.reconst.gqi)": [[171, "dipy.reconst.gqi.odf_sum"]], "ols_fit_tensor() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.ols_fit_tensor"]], "on_sphere() (dipy.reconst.csdeconv.axsymshresponse method)": [[171, "dipy.reconst.csdeconv.AxSymShResponse.on_sphere"]], "order_from_ncoef() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.order_from_ncoef"]], "params_to_cti_params() (in module dipy.reconst.cti)": [[171, "dipy.reconst.cti.params_to_cti_params"]], "params_to_dki_params() (in module dipy.reconst.dki)": [[171, "dipy.reconst.dki.params_to_dki_params"]], "part1_reg_matrix_tau() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.part1_reg_matrix_tau"]], "part23_iso_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.part23_iso_reg_matrix_q"]], "part23_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.part23_reg_matrix_q"]], "part23_reg_matrix_tau() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.part23_reg_matrix_tau"]], "part4_iso_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.part4_iso_reg_matrix_q"]], "part4_reg_matrix_q() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.part4_reg_matrix_q"]], "part4_reg_matrix_tau() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.part4_reg_matrix_tau"]], "patch_maximum() (in module dipy.reconst.gqi)": [[171, "dipy.reconst.gqi.patch_maximum"]], "patch_sum() (in module dipy.reconst.gqi)": [[171, "dipy.reconst.gqi.patch_sum"]], "patch_vertices() (in module dipy.reconst.gqi)": [[171, "dipy.reconst.gqi.patch_vertices"]], "pdf() (dipy.reconst.dsi.diffusionspectrumdeconvfit method)": [[171, "dipy.reconst.dsi.DiffusionSpectrumDeconvFit.pdf"]], "pdf() (dipy.reconst.dsi.diffusionspectrumfit method)": [[171, "dipy.reconst.dsi.DiffusionSpectrumFit.pdf"]], "pdf() (dipy.reconst.mapmri.mapmrifit method)": [[171, "dipy.reconst.mapmri.MapmriFit.pdf"]], "pdf() (dipy.reconst.qtdmri.qtdmrifit method)": [[171, "dipy.reconst.qtdmri.QtdmriFit.pdf"]], "pdf() (dipy.reconst.shore.shorefit method)": [[171, "dipy.reconst.shore.ShoreFit.pdf"]], "pdf_grid() (dipy.reconst.shore.shorefit method)": [[171, "dipy.reconst.shore.ShoreFit.pdf_grid"]], "pdf_interp_coords() (in module dipy.reconst.dsi)": [[171, "dipy.reconst.dsi.pdf_interp_coords"]], "pdf_odf() (in module dipy.reconst.dsi)": [[171, "dipy.reconst.dsi.pdf_odf"]], "perfusion_fraction (dipy.reconst.ivim.ivimfit property)": [[171, "dipy.reconst.ivim.IvimFit.perfusion_fraction"]], "phi() (dipy.reconst.ivim.ivimmodelvp method)": [[171, "dipy.reconst.ivim.IvimModelVP.phi"]], "planarity() (dipy.reconst.dti.tensorfit method)": [[171, "dipy.reconst.dti.TensorFit.planarity"]], "planarity() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.planarity"]], "polar_zone_vertices() (in module dipy.reconst.gqi)": [[171, "dipy.reconst.gqi.polar_zone_vertices"]], "predict() (dipy.reconst.csdeconv.constrainedsphericaldeconvmodel method)": [[171, "dipy.reconst.csdeconv.ConstrainedSphericalDeconvModel.predict"]], "predict() (dipy.reconst.cti.correlationtensorfit method)": [[171, "dipy.reconst.cti.CorrelationTensorFit.predict"]], "predict() (dipy.reconst.cti.correlationtensormodel method)": [[171, "dipy.reconst.cti.CorrelationTensorModel.predict"]], "predict() (dipy.reconst.dki.diffusionkurtosisfit method)": [[171, "dipy.reconst.dki.DiffusionKurtosisFit.predict"]], "predict() (dipy.reconst.dki.diffusionkurtosismodel method)": [[171, "dipy.reconst.dki.DiffusionKurtosisModel.predict"]], "predict() (dipy.reconst.dki_micro.kurtosismicrostructuralfit method)": [[171, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.predict"]], "predict() (dipy.reconst.dki_micro.kurtosismicrostructuremodel method)": [[171, "dipy.reconst.dki_micro.KurtosisMicrostructureModel.predict"]], "predict() (dipy.reconst.dti.tensorfit method)": [[171, "dipy.reconst.dti.TensorFit.predict"]], "predict() (dipy.reconst.dti.tensormodel method)": [[171, "dipy.reconst.dti.TensorModel.predict"]], "predict() (dipy.reconst.forecast.forecastfit method)": [[171, "dipy.reconst.forecast.ForecastFit.predict"]], "predict() (dipy.reconst.fwdti.freewatertensorfit method)": [[171, "dipy.reconst.fwdti.FreeWaterTensorFit.predict"]], "predict() (dipy.reconst.fwdti.freewatertensormodel method)": [[171, "dipy.reconst.fwdti.FreeWaterTensorModel.predict"]], "predict() (dipy.reconst.ivim.ivimfit method)": [[171, "dipy.reconst.ivim.IvimFit.predict"]], "predict() (dipy.reconst.ivim.ivimmodeltrr method)": [[171, "dipy.reconst.ivim.IvimModelTRR.predict"]], "predict() (dipy.reconst.mapmri.mapmrifit method)": [[171, "dipy.reconst.mapmri.MapmriFit.predict"]], "predict() (dipy.reconst.mcsd.multishelldeconvmodel method)": [[171, "dipy.reconst.mcsd.MultiShellDeconvModel.predict"]], "predict() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[171, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.predict"]], "predict() (dipy.reconst.msdki.meandiffusionkurtosismodel method)": [[171, "dipy.reconst.msdki.MeanDiffusionKurtosisModel.predict"]], "predict() (dipy.reconst.multi_voxel.multivoxelfit method)": [[171, "dipy.reconst.multi_voxel.MultiVoxelFit.predict"]], "predict() (dipy.reconst.qtdmri.qtdmrifit method)": [[171, "dipy.reconst.qtdmri.QtdmriFit.predict"]], "predict() (dipy.reconst.qti.qtifit method)": [[171, "dipy.reconst.qti.QtiFit.predict"]], "predict() (dipy.reconst.qti.qtimodel method)": [[171, "dipy.reconst.qti.QtiModel.predict"]], "predict() (dipy.reconst.rumba.rumbafit method)": [[171, "dipy.reconst.rumba.RumbaFit.predict"]], "predict() (dipy.reconst.sfm.exponentialisotropicfit method)": [[171, "dipy.reconst.sfm.ExponentialIsotropicFit.predict"]], "predict() (dipy.reconst.sfm.isotropicfit method)": [[171, "dipy.reconst.sfm.IsotropicFit.predict"]], "predict() (dipy.reconst.sfm.sparsefasciclefit method)": [[171, "dipy.reconst.sfm.SparseFascicleFit.predict"]], "predict() (dipy.reconst.shm.sphharmfit method)": [[171, "dipy.reconst.shm.SphHarmFit.predict"]], "proc_reco_args() (in module dipy.reconst.recspeed)": [[171, "dipy.reconst.recspeed.proc_reco_args"]], "project_hemisph_bvecs() (in module dipy.reconst.dsi)": [[171, "dipy.reconst.dsi.project_hemisph_bvecs"]], "psi_l() (in module dipy.reconst.forecast)": [[171, "dipy.reconst.forecast.psi_l"]], "qa_thr (dipy.reconst.eudx_direction_getter.eudxdirectiongetter attribute)": [[171, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.qa_thr"]], "qiv() (dipy.reconst.mapmri.mapmrifit method)": [[171, "dipy.reconst.mapmri.MapmriFit.qiv"]], "qiv() (dipy.reconst.qtdmri.qtdmrifit method)": [[171, "dipy.reconst.qtdmri.QtdmriFit.qiv"]], "qtdmri_anisotropic_scaling() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.qtdmri_anisotropic_scaling"]], "qtdmri_eap_matrix() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.qtdmri_eap_matrix"]], "qtdmri_eap_matrix_() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.qtdmri_eap_matrix_"]], "qtdmri_index_matrix() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.qtdmri_index_matrix"]], "qtdmri_isotropic_eap_matrix() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.qtdmri_isotropic_eap_matrix"]], "qtdmri_isotropic_eap_matrix_() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.qtdmri_isotropic_eap_matrix_"]], "qtdmri_isotropic_index_matrix() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.qtdmri_isotropic_index_matrix"]], "qtdmri_isotropic_laplacian_reg_matrix() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.qtdmri_isotropic_laplacian_reg_matrix"]], "qtdmri_isotropic_scaling() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.qtdmri_isotropic_scaling"]], "qtdmri_isotropic_signal_matrix() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.qtdmri_isotropic_signal_matrix"]], "qtdmri_isotropic_signal_matrix_() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.qtdmri_isotropic_signal_matrix_"]], "qtdmri_isotropic_to_mapmri_matrix() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.qtdmri_isotropic_to_mapmri_matrix"]], "qtdmri_laplacian_reg_matrix() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.qtdmri_laplacian_reg_matrix"]], "qtdmri_mapmri_isotropic_normalization() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.qtdmri_mapmri_isotropic_normalization"]], "qtdmri_mapmri_normalization() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.qtdmri_mapmri_normalization"]], "qtdmri_number_of_coefficients() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.qtdmri_number_of_coefficients"]], "qtdmri_signal_matrix() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.qtdmri_signal_matrix"]], "qtdmri_signal_matrix_() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.qtdmri_signal_matrix_"]], "qtdmri_temporal_normalization() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.qtdmri_temporal_normalization"]], "qtdmri_to_mapmri_coef() (dipy.reconst.qtdmri.qtdmrifit method)": [[171, "dipy.reconst.qtdmri.QtdmriFit.qtdmri_to_mapmri_coef"]], "qtdmri_to_mapmri_matrix() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.qtdmri_to_mapmri_matrix"]], "qti_signal() (in module dipy.reconst.qti)": [[171, "dipy.reconst.qti.qti_signal"]], "quadratic_form (dipy.reconst.dti.tensorfit property)": [[171, "dipy.reconst.dti.TensorFit.quadratic_form"]], "quantize_evecs() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.quantize_evecs"]], "quick_squash() (in module dipy.reconst.quick_squash)": [[171, "dipy.reconst.quick_squash.quick_squash"]], "radial_basis_eap_opt() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.radial_basis_EAP_opt"]], "radial_basis_opt() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.radial_basis_opt"]], "radial_diffusivity() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.radial_diffusivity"]], "radial_kurtosis() (in module dipy.reconst.dki)": [[171, "dipy.reconst.dki.radial_kurtosis"]], "rd() (dipy.reconst.dti.tensorfit method)": [[171, "dipy.reconst.dti.TensorFit.rd"]], "real_sh_descoteaux() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.real_sh_descoteaux"]], "real_sh_descoteaux_from_index() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.real_sh_descoteaux_from_index"]], "real_sh_tournier() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.real_sh_tournier"]], "real_sh_tournier_from_index() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.real_sh_tournier_from_index"]], "real_sph_harm() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.real_sph_harm"]], "real_sym_sh_basis() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.real_sym_sh_basis"]], "real_sym_sh_mrtrix() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.real_sym_sh_mrtrix"]], "recursive_response() (in module dipy.reconst.csdeconv)": [[171, "dipy.reconst.csdeconv.recursive_response"]], "reduce() (in module dipy.reconst.quick_squash)": [[171, "dipy.reconst.quick_squash.reduce"]], "remove_similar_vertices() (in module dipy.reconst.recspeed)": [[171, "dipy.reconst.recspeed.remove_similar_vertices"]], "response_from_mask() (in module dipy.reconst.csdeconv)": [[171, "dipy.reconst.csdeconv.response_from_mask"]], "response_from_mask_msmt() (in module dipy.reconst.mcsd)": [[171, "dipy.reconst.mcsd.response_from_mask_msmt"]], "response_from_mask_ssst() (in module dipy.reconst.csdeconv)": [[171, "dipy.reconst.csdeconv.response_from_mask_ssst"]], "restore_fit_tensor() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.restore_fit_tensor"]], "restricted_evals (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[171, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.restricted_evals"]], "rho_matrix() (in module dipy.reconst.forecast)": [[171, "dipy.reconst.forecast.rho_matrix"]], "rk() (dipy.reconst.dki.diffusionkurtosisfit method)": [[171, "dipy.reconst.dki.DiffusionKurtosisFit.rk"]], "rtap() (dipy.reconst.mapmri.mapmrifit method)": [[171, "dipy.reconst.mapmri.MapmriFit.rtap"]], "rtap() (dipy.reconst.qtdmri.qtdmrifit method)": [[171, "dipy.reconst.qtdmri.QtdmriFit.rtap"]], "rtop() (dipy.reconst.mapmri.mapmrifit method)": [[171, "dipy.reconst.mapmri.MapmriFit.rtop"]], "rtop() (dipy.reconst.qtdmri.qtdmrifit method)": [[171, "dipy.reconst.qtdmri.QtdmriFit.rtop"]], "rtop_pdf() (dipy.reconst.dsi.diffusionspectrumfit method)": [[171, "dipy.reconst.dsi.DiffusionSpectrumFit.rtop_pdf"]], "rtop_pdf() (dipy.reconst.shore.shorefit method)": [[171, "dipy.reconst.shore.ShoreFit.rtop_pdf"]], "rtop_signal() (dipy.reconst.dsi.diffusionspectrumfit method)": [[171, "dipy.reconst.dsi.DiffusionSpectrumFit.rtop_signal"]], "rtop_signal() (dipy.reconst.shore.shorefit method)": [[171, "dipy.reconst.shore.ShoreFit.rtop_signal"]], "rtpp() (dipy.reconst.mapmri.mapmrifit method)": [[171, "dipy.reconst.mapmri.MapmriFit.rtpp"]], "rtpp() (dipy.reconst.qtdmri.qtdmrifit method)": [[171, "dipy.reconst.qtdmri.QtdmriFit.rtpp"]], "rumba_deconv() (in module dipy.reconst.rumba)": [[171, "dipy.reconst.rumba.rumba_deconv"]], "rumba_deconv_global() (in module dipy.reconst.rumba)": [[171, "dipy.reconst.rumba.rumba_deconv_global"]], "sampling_matrix() (dipy.reconst.shm.sphharmmodel method)": [[171, "dipy.reconst.shm.SphHarmModel.sampling_matrix"]], "search_descending() (in module dipy.reconst.recspeed)": [[171, "dipy.reconst.recspeed.search_descending"]], "sf_to_sh() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.sf_to_sh"]], "sfm_design_matrix() (in module dipy.reconst.sfm)": [[171, "dipy.reconst.sfm.sfm_design_matrix"]], "sh_coeff (dipy.reconst.forecast.forecastfit property)": [[171, "dipy.reconst.forecast.ForecastFit.sh_coeff"]], "sh_to_rh() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.sh_to_rh"]], "sh_to_sf() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.sh_to_sf"]], "sh_to_sf_matrix() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.sh_to_sf_matrix"]], "shape (dipy.reconst.dti.tensorfit property)": [[171, "dipy.reconst.dti.TensorFit.shape"]], "shape (dipy.reconst.ivim.ivimfit property)": [[171, "dipy.reconst.ivim.IvimFit.shape"]], "shape (dipy.reconst.multi_voxel.multivoxelfit property)": [[171, "dipy.reconst.multi_voxel.MultiVoxelFit.shape"]], "shape (dipy.reconst.shm.sphharmfit property)": [[171, "dipy.reconst.shm.SphHarmFit.shape"]], "shm_coeff (dipy.reconst.mcsd.msdeconvfit property)": [[171, "dipy.reconst.mcsd.MSDeconvFit.shm_coeff"]], "shm_coeff (dipy.reconst.shm.sphharmfit property)": [[171, "dipy.reconst.shm.SphHarmFit.shm_coeff"]], "shore_coeff (dipy.reconst.shore.shorefit property)": [[171, "dipy.reconst.shore.ShoreFit.shore_coeff"]], "shore_indices() (in module dipy.reconst.shore)": [[171, "dipy.reconst.shore.shore_indices"]], "shore_matrix() (in module dipy.reconst.shore)": [[171, "dipy.reconst.shore.shore_matrix"]], "shore_matrix_odf() (in module dipy.reconst.shore)": [[171, "dipy.reconst.shore.shore_matrix_odf"]], "shore_matrix_pdf() (in module dipy.reconst.shore)": [[171, "dipy.reconst.shore.shore_matrix_pdf"]], "shore_order() (in module dipy.reconst.shore)": [[171, "dipy.reconst.shore.shore_order"]], "smooth_pinv() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.smooth_pinv"]], "smt2di() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[171, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.smt2di"]], "smt2f() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[171, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.smt2f"]], "smt2ufa() (dipy.reconst.msdki.meandiffusionkurtosisfit method)": [[171, "dipy.reconst.msdki.MeanDiffusionKurtosisFit.smt2uFA"]], "solve_qp() (in module dipy.reconst.mcsd)": [[171, "dipy.reconst.mcsd.solve_qp"]], "sparsity_abs() (dipy.reconst.qtdmri.qtdmrifit method)": [[171, "dipy.reconst.qtdmri.QtdmriFit.sparsity_abs"]], "sparsity_density() (dipy.reconst.qtdmri.qtdmrifit method)": [[171, "dipy.reconst.qtdmri.QtdmriFit.sparsity_density"]], "sph_harm_ind_list() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.sph_harm_ind_list"]], "spherical_harmonics() (in module dipy.reconst.shm)": [[171, "dipy.reconst.shm.spherical_harmonics"]], "sphericity() (dipy.reconst.dti.tensorfit method)": [[171, "dipy.reconst.dti.TensorFit.sphericity"]], "sphericity() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.sphericity"]], "split_cti_params() (in module dipy.reconst.cti)": [[171, "dipy.reconst.cti.split_cti_params"]], "split_dki_param() (in module dipy.reconst.dki)": [[171, "dipy.reconst.dki.split_dki_param"]], "squared_radial_component() (in module dipy.reconst.gqi)": [[171, "dipy.reconst.gqi.squared_radial_component"]], "stoc_search_cost() (dipy.reconst.ivim.ivimmodelvp method)": [[171, "dipy.reconst.ivim.IvimModelVP.stoc_search_cost"]], "sum_on_blocks_1d() (in module dipy.reconst.recspeed)": [[171, "dipy.reconst.recspeed.sum_on_blocks_1d"]], "temporal_basis() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.temporal_basis"]], "tensor_prediction() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.tensor_prediction"]], "threshold_propagator() (in module dipy.reconst.dsi)": [[171, "dipy.reconst.dsi.threshold_propagator"]], "tortuosity (dipy.reconst.dki_micro.kurtosismicrostructuralfit property)": [[171, "dipy.reconst.dki_micro.KurtosisMicrostructuralFit.tortuosity"]], "tortuosity() (in module dipy.reconst.dki_micro)": [[171, "dipy.reconst.dki_micro.tortuosity"]], "total_weight (dipy.reconst.eudx_direction_getter.eudxdirectiongetter attribute)": [[171, "dipy.reconst.eudx_direction_getter.EuDXDirectionGetter.total_weight"]], "trace() (dipy.reconst.dti.tensorfit method)": [[171, "dipy.reconst.dti.TensorFit.trace"]], "trace() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.trace"]], "triple_odf_maxima() (in module dipy.reconst.gqi)": [[171, "dipy.reconst.gqi.triple_odf_maxima"]], "ufa() (dipy.reconst.qti.qtifit method)": [[171, "dipy.reconst.qti.QtiFit.ufa"]], "upper_hemi_map() (in module dipy.reconst.gqi)": [[171, "dipy.reconst.gqi.upper_hemi_map"]], "v_iso() (dipy.reconst.qti.qtifit method)": [[171, "dipy.reconst.qti.QtiFit.v_iso"]], "v_md() (dipy.reconst.qti.qtifit method)": [[171, "dipy.reconst.qti.QtiFit.v_md"]], "v_shear() (dipy.reconst.qti.qtifit method)": [[171, "dipy.reconst.qti.QtiFit.v_shear"]], "vec_val_vect() (in module dipy.reconst.vec_val_sum)": [[171, "dipy.reconst.vec_val_sum.vec_val_vect"]], "visualise_gradient_table_g_delta_rainbow() (in module dipy.reconst.qtdmri)": [[171, "dipy.reconst.qtdmri.visualise_gradient_table_G_Delta_rainbow"]], "volume_fractions (dipy.reconst.mcsd.msdeconvfit property)": [[171, "dipy.reconst.mcsd.MSDeconvFit.volume_fractions"]], "wls_fit_msdki() (in module dipy.reconst.msdki)": [[171, "dipy.reconst.msdki.wls_fit_msdki"]], "wls_fit_tensor() (in module dipy.reconst.dti)": [[171, "dipy.reconst.dti.wls_fit_tensor"]], "wls_fit_tensor() (in module dipy.reconst.fwdti)": [[171, "dipy.reconst.fwdti.wls_fit_tensor"]], "wls_iter() (in module dipy.reconst.fwdti)": [[171, "dipy.reconst.fwdti.wls_iter"]], "x_and_f_to_x_f() (dipy.reconst.ivim.ivimmodelvp method)": [[171, "dipy.reconst.ivim.IvimModelVP.x_and_f_to_x_f"]], "x_f_to_x_and_f() (dipy.reconst.ivim.ivimmodelvp method)": [[171, "dipy.reconst.ivim.IvimModelVP.x_f_to_x_and_f"]], "arclengthfeature (class in dipy.segment.featurespeed)": [[172, "dipy.segment.featurespeed.ArcLengthFeature"]], "averagepointwiseeuclideanmetric (class in dipy.segment.metricspeed)": [[172, "dipy.segment.metricspeed.AveragePointwiseEuclideanMetric"]], "centerofmassfeature (class in dipy.segment.featurespeed)": [[172, "dipy.segment.featurespeed.CenterOfMassFeature"]], "cluster (class in dipy.segment.clustering)": [[172, "dipy.segment.clustering.Cluster"]], "clustercentroid (class in dipy.segment.clustering)": [[172, "dipy.segment.clustering.ClusterCentroid"]], "clustercentroid (class in dipy.segment.clustering_algorithms)": [[172, "dipy.segment.clustering_algorithms.ClusterCentroid"]], "clustercentroid (class in dipy.segment.clusteringspeed)": [[172, "dipy.segment.clusteringspeed.ClusterCentroid"]], "clustermap (class in dipy.segment.clustering)": [[172, "dipy.segment.clustering.ClusterMap"]], "clustermapcentroid (class in dipy.segment.clustering)": [[172, "dipy.segment.clustering.ClusterMapCentroid"]], "clustermapcentroid (class in dipy.segment.clustering_algorithms)": [[172, "dipy.segment.clustering_algorithms.ClusterMapCentroid"]], "clustermapcentroid (class in dipy.segment.clusteringspeed)": [[172, "dipy.segment.clusteringspeed.ClusterMapCentroid"]], "clustering (class in dipy.segment.clustering)": [[172, "dipy.segment.clustering.Clustering"]], "clusters (class in dipy.segment.clusteringspeed)": [[172, "dipy.segment.clusteringspeed.Clusters"]], "clusterscentroid (class in dipy.segment.clusteringspeed)": [[172, "dipy.segment.clusteringspeed.ClustersCentroid"]], "constantobservationmodel (class in dipy.segment.mrf)": [[172, "dipy.segment.mrf.ConstantObservationModel"]], "cosinemetric (class in dipy.segment.metricspeed)": [[172, "dipy.segment.metricspeed.CosineMetric"]], "cythonfeature (class in dipy.segment.featurespeed)": [[172, "dipy.segment.featurespeed.CythonFeature"]], "cythonmetric (class in dipy.segment.metricspeed)": [[172, "dipy.segment.metricspeed.CythonMetric"]], "dtype (in module dipy.segment.clustering_algorithms)": [[172, "dipy.segment.clustering_algorithms.DTYPE"]], "dtype (in module dipy.segment.clusteringspeed)": [[172, "dipy.segment.clusteringspeed.DTYPE"]], "faststreamlinesearch (class in dipy.segment.fss)": [[172, "dipy.segment.fss.FastStreamlineSearch"]], "feature (class in dipy.segment.featurespeed)": [[172, "dipy.segment.featurespeed.Feature"]], "identity (class in dipy.segment.clustering)": [[172, "dipy.segment.clustering.Identity"]], "identityfeature (class in dipy.segment.featurespeed)": [[172, "dipy.segment.featurespeed.IdentityFeature"]], "iteratedconditionalmodes (class in dipy.segment.mrf)": [[172, "dipy.segment.mrf.IteratedConditionalModes"]], "metric (class in dipy.segment.metricspeed)": [[172, "dipy.segment.metricspeed.Metric"]], "midpointfeature (class in dipy.segment.featurespeed)": [[172, "dipy.segment.featurespeed.MidpointFeature"]], "minimumaveragedirectflipmetric (class in dipy.segment.metricspeed)": [[172, "dipy.segment.metricspeed.MinimumAverageDirectFlipMetric"]], "quickbundles (class in dipy.segment.clustering)": [[172, "dipy.segment.clustering.QuickBundles"]], "quickbundles (class in dipy.segment.clusteringspeed)": [[172, "dipy.segment.clusteringspeed.QuickBundles"]], "quickbundlesx (class in dipy.segment.clustering)": [[172, "dipy.segment.clustering.QuickBundlesX"]], "quickbundlesx (class in dipy.segment.clusteringspeed)": [[172, "dipy.segment.clusteringspeed.QuickBundlesX"]], "recobundles (class in dipy.segment.bundles)": [[172, "dipy.segment.bundles.RecoBundles"]], "resamplefeature (class in dipy.segment.featurespeed)": [[172, "dipy.segment.featurespeed.ResampleFeature"]], "sumpointwiseeuclideanmetric (class in dipy.segment.metricspeed)": [[172, "dipy.segment.metricspeed.SumPointwiseEuclideanMetric"]], "tissueclassifierhmrf (class in dipy.segment.tissue)": [[172, "dipy.segment.tissue.TissueClassifierHMRF"]], "treecluster (class in dipy.segment.clustering)": [[172, "dipy.segment.clustering.TreeCluster"]], "treecluster (class in dipy.segment.clusteringspeed)": [[172, "dipy.segment.clusteringspeed.TreeCluster"]], "treeclustermap (class in dipy.segment.clustering)": [[172, "dipy.segment.clustering.TreeClusterMap"]], "treeclustermap (class in dipy.segment.clusteringspeed)": [[172, "dipy.segment.clusteringspeed.TreeClusterMap"]], "vectorofendpointsfeature (class in dipy.segment.featurespeed)": [[172, "dipy.segment.featurespeed.VectorOfEndpointsFeature"]], "__init__() (dipy.segment.bundles.recobundles method)": [[172, "dipy.segment.bundles.RecoBundles.__init__"]], "__init__() (dipy.segment.clustering.cluster method)": [[172, "dipy.segment.clustering.Cluster.__init__"]], "__init__() (dipy.segment.clustering.clustercentroid method)": [[172, "dipy.segment.clustering.ClusterCentroid.__init__"]], "__init__() (dipy.segment.clustering.clustermap method)": [[172, "dipy.segment.clustering.ClusterMap.__init__"]], "__init__() (dipy.segment.clustering.clustermapcentroid method)": [[172, "dipy.segment.clustering.ClusterMapCentroid.__init__"]], "__init__() (dipy.segment.clustering.clustering method)": [[172, "dipy.segment.clustering.Clustering.__init__"]], "__init__() (dipy.segment.clustering.identity method)": [[172, "dipy.segment.clustering.Identity.__init__"]], "__init__() (dipy.segment.clustering.quickbundles method)": [[172, "dipy.segment.clustering.QuickBundles.__init__"]], "__init__() (dipy.segment.clustering.quickbundlesx method)": [[172, "dipy.segment.clustering.QuickBundlesX.__init__"]], "__init__() (dipy.segment.clustering.treecluster method)": [[172, "dipy.segment.clustering.TreeCluster.__init__"]], "__init__() (dipy.segment.clustering.treeclustermap method)": [[172, "dipy.segment.clustering.TreeClusterMap.__init__"]], "__init__() (dipy.segment.clustering_algorithms.clustercentroid method)": [[172, "dipy.segment.clustering_algorithms.ClusterCentroid.__init__"]], "__init__() (dipy.segment.clustering_algorithms.clustermapcentroid method)": [[172, "dipy.segment.clustering_algorithms.ClusterMapCentroid.__init__"]], "__init__() (dipy.segment.clusteringspeed.clustercentroid method)": [[172, "dipy.segment.clusteringspeed.ClusterCentroid.__init__"]], "__init__() (dipy.segment.clusteringspeed.clustermapcentroid method)": [[172, "dipy.segment.clusteringspeed.ClusterMapCentroid.__init__"]], "__init__() (dipy.segment.clusteringspeed.clusters method)": [[172, "dipy.segment.clusteringspeed.Clusters.__init__"]], "__init__() (dipy.segment.clusteringspeed.clusterscentroid method)": [[172, "dipy.segment.clusteringspeed.ClustersCentroid.__init__"]], "__init__() (dipy.segment.clusteringspeed.quickbundles method)": [[172, "dipy.segment.clusteringspeed.QuickBundles.__init__"]], "__init__() (dipy.segment.clusteringspeed.quickbundlesx method)": [[172, "dipy.segment.clusteringspeed.QuickBundlesX.__init__"]], "__init__() (dipy.segment.clusteringspeed.treecluster method)": [[172, "dipy.segment.clusteringspeed.TreeCluster.__init__"]], "__init__() (dipy.segment.clusteringspeed.treeclustermap method)": [[172, "dipy.segment.clusteringspeed.TreeClusterMap.__init__"]], "__init__() (dipy.segment.featurespeed.arclengthfeature method)": [[172, "dipy.segment.featurespeed.ArcLengthFeature.__init__"]], "__init__() (dipy.segment.featurespeed.centerofmassfeature method)": [[172, "dipy.segment.featurespeed.CenterOfMassFeature.__init__"]], "__init__() (dipy.segment.featurespeed.cythonfeature method)": [[172, "dipy.segment.featurespeed.CythonFeature.__init__"]], "__init__() (dipy.segment.featurespeed.feature method)": [[172, "dipy.segment.featurespeed.Feature.__init__"]], "__init__() (dipy.segment.featurespeed.identityfeature method)": [[172, "dipy.segment.featurespeed.IdentityFeature.__init__"]], "__init__() (dipy.segment.featurespeed.midpointfeature method)": [[172, "dipy.segment.featurespeed.MidpointFeature.__init__"]], "__init__() (dipy.segment.featurespeed.resamplefeature method)": [[172, "dipy.segment.featurespeed.ResampleFeature.__init__"]], "__init__() (dipy.segment.featurespeed.vectorofendpointsfeature method)": [[172, "dipy.segment.featurespeed.VectorOfEndpointsFeature.__init__"]], "__init__() (dipy.segment.fss.faststreamlinesearch method)": [[172, "dipy.segment.fss.FastStreamlineSearch.__init__"]], "__init__() (dipy.segment.metricspeed.averagepointwiseeuclideanmetric method)": [[172, "dipy.segment.metricspeed.AveragePointwiseEuclideanMetric.__init__"]], "__init__() (dipy.segment.metricspeed.cosinemetric method)": [[172, "dipy.segment.metricspeed.CosineMetric.__init__"]], "__init__() (dipy.segment.metricspeed.cythonmetric method)": [[172, "dipy.segment.metricspeed.CythonMetric.__init__"]], "__init__() (dipy.segment.metricspeed.metric method)": [[172, "dipy.segment.metricspeed.Metric.__init__"]], "__init__() (dipy.segment.metricspeed.minimumaveragedirectflipmetric method)": [[172, "dipy.segment.metricspeed.MinimumAverageDirectFlipMetric.__init__"]], "__init__() (dipy.segment.metricspeed.sumpointwiseeuclideanmetric method)": [[172, "dipy.segment.metricspeed.SumPointwiseEuclideanMetric.__init__"]], "__init__() (dipy.segment.mrf.constantobservationmodel method)": [[172, "dipy.segment.mrf.ConstantObservationModel.__init__"]], "__init__() (dipy.segment.mrf.iteratedconditionalmodes method)": [[172, "dipy.segment.mrf.IteratedConditionalModes.__init__"]], "__init__() (dipy.segment.tissue.tissueclassifierhmrf method)": [[172, "dipy.segment.tissue.TissueClassifierHMRF.__init__"]], "add() (dipy.segment.clustering.treecluster method)": [[172, "dipy.segment.clustering.TreeCluster.add"]], "add() (dipy.segment.clusteringspeed.treecluster method)": [[172, "dipy.segment.clusteringspeed.TreeCluster.add"]], "add_cluster() (dipy.segment.clustering.clustermap method)": [[172, "dipy.segment.clustering.ClusterMap.add_cluster"]], "applymask() (in module dipy.segment.mask)": [[172, "dipy.segment.mask.applymask"]], "are_compatible() (dipy.segment.metricspeed.cythonmetric method)": [[172, "dipy.segment.metricspeed.CythonMetric.are_compatible"]], "are_compatible() (dipy.segment.metricspeed.metric method)": [[172, "dipy.segment.metricspeed.Metric.are_compatible"]], "assign() (dipy.segment.clustering.cluster method)": [[172, "dipy.segment.clustering.Cluster.assign"]], "assign() (dipy.segment.clustering.clustercentroid method)": [[172, "dipy.segment.clustering.ClusterCentroid.assign"]], "assign() (dipy.segment.clustering_algorithms.clustercentroid method)": [[172, "dipy.segment.clustering_algorithms.ClusterCentroid.assign"]], "assign() (dipy.segment.clusteringspeed.clustercentroid method)": [[172, "dipy.segment.clusteringspeed.ClusterCentroid.assign"]], "ba_analysis() (in module dipy.segment.bundles)": [[172, "dipy.segment.bundles.ba_analysis"]], "bounding_box() (in module dipy.segment.mask)": [[172, "dipy.segment.mask.bounding_box"]], "bundle_adjacency() (in module dipy.segment.bundles)": [[172, "dipy.segment.bundles.bundle_adjacency"]], "bundle_shape_similarity() (in module dipy.segment.bundles)": [[172, "dipy.segment.bundles.bundle_shape_similarity"]], "centroids (dipy.segment.clustering.clustermapcentroid property)": [[172, "dipy.segment.clustering.ClusterMapCentroid.centroids"]], "centroids (dipy.segment.clustering_algorithms.clustermapcentroid property)": [[172, "dipy.segment.clustering_algorithms.ClusterMapCentroid.centroids"]], "centroids (dipy.segment.clusteringspeed.clustermapcentroid property)": [[172, "dipy.segment.clusteringspeed.ClusterMapCentroid.centroids"]], "check_range() (in module dipy.segment.bundles)": [[172, "dipy.segment.bundles.check_range"]], "classify() (dipy.segment.tissue.tissueclassifierhmrf method)": [[172, "dipy.segment.tissue.TissueClassifierHMRF.classify"]], "clean_cc_mask() (in module dipy.segment.mask)": [[172, "dipy.segment.mask.clean_cc_mask"]], "clear() (dipy.segment.clustering.clustermap method)": [[172, "dipy.segment.clustering.ClusterMap.clear"]], "cluster() (dipy.segment.clustering.clustering method)": [[172, "dipy.segment.clustering.Clustering.cluster"]], "cluster() (dipy.segment.clustering.quickbundles method)": [[172, "dipy.segment.clustering.QuickBundles.cluster"]], "cluster() (dipy.segment.clustering.quickbundlesx method)": [[172, "dipy.segment.clustering.QuickBundlesX.cluster"]], "cluster_bundle() (in module dipy.segment.bundles)": [[172, "dipy.segment.bundles.cluster_bundle"]], "clusters (dipy.segment.clustering.clustermap property)": [[172, "dipy.segment.clustering.ClusterMap.clusters"]], "clusters_centroid2clustermap_centroid() (in module dipy.segment.clustering_algorithms)": [[172, "dipy.segment.clustering_algorithms.clusters_centroid2clustermap_centroid"]], "clusters_sizes() (dipy.segment.clustering.clustermap method)": [[172, "dipy.segment.clustering.ClusterMap.clusters_sizes"]], "crop() (in module dipy.segment.mask)": [[172, "dipy.segment.mask.crop"]], "dipy.segment": [[172, "module-dipy.segment"]], "dipy.segment.bundles": [[172, "module-dipy.segment.bundles"]], "dipy.segment.clustering": [[172, "module-dipy.segment.clustering"]], "dipy.segment.clustering_algorithms": [[172, "module-dipy.segment.clustering_algorithms"]], "dipy.segment.clusteringspeed": [[172, "module-dipy.segment.clusteringspeed"]], "dipy.segment.cythonutils": [[172, "module-dipy.segment.cythonutils"]], "dipy.segment.featurespeed": [[172, "module-dipy.segment.featurespeed"]], "dipy.segment.fss": [[172, "module-dipy.segment.fss"]], "dipy.segment.mask": [[172, "module-dipy.segment.mask"]], "dipy.segment.metric": [[172, "module-dipy.segment.metric"]], "dipy.segment.metricspeed": [[172, "module-dipy.segment.metricspeed"]], "dipy.segment.mrf": [[172, "module-dipy.segment.mrf"]], "dipy.segment.threshold": [[172, "module-dipy.segment.threshold"]], "dipy.segment.tissue": [[172, "module-dipy.segment.tissue"]], "dist() (dipy.segment.metricspeed.cythonmetric method)": [[172, "dipy.segment.metricspeed.CythonMetric.dist"]], "dist() (dipy.segment.metricspeed.metric method)": [[172, "dipy.segment.metricspeed.Metric.dist"]], "dist() (in module dipy.segment.metricspeed)": [[172, "dipy.segment.metricspeed.dist"]], "distance_matrix() (in module dipy.segment.metricspeed)": [[172, "dipy.segment.metricspeed.distance_matrix"]], "evaluate_aabb_checks() (in module dipy.segment.clusteringspeed)": [[172, "dipy.segment.clusteringspeed.evaluate_aabb_checks"]], "evaluate_results() (dipy.segment.bundles.recobundles method)": [[172, "dipy.segment.bundles.RecoBundles.evaluate_results"]], "extract() (dipy.segment.featurespeed.cythonfeature method)": [[172, "dipy.segment.featurespeed.CythonFeature.extract"]], "extract() (dipy.segment.featurespeed.feature method)": [[172, "dipy.segment.featurespeed.Feature.extract"]], "extract() (in module dipy.segment.featurespeed)": [[172, "dipy.segment.featurespeed.extract"]], "feature (dipy.segment.metricspeed.metric attribute)": [[172, "dipy.segment.metricspeed.Metric.feature"]], "get_cluster_map() (dipy.segment.clusteringspeed.quickbundles method)": [[172, "dipy.segment.clusteringspeed.QuickBundles.get_cluster_map"]], "get_clusters() (dipy.segment.clustering.treeclustermap method)": [[172, "dipy.segment.clustering.TreeClusterMap.get_clusters"]], "get_clusters() (dipy.segment.clusteringspeed.treeclustermap method)": [[172, "dipy.segment.clusteringspeed.TreeClusterMap.get_clusters"]], "get_large_clusters() (dipy.segment.clustering.clustermap method)": [[172, "dipy.segment.clustering.ClusterMap.get_large_clusters"]], "get_small_clusters() (dipy.segment.clustering.clustermap method)": [[172, "dipy.segment.clustering.ClusterMap.get_small_clusters"]], "get_stats() (dipy.segment.clusteringspeed.quickbundles method)": [[172, "dipy.segment.clusteringspeed.QuickBundles.get_stats"]], "get_stats() (dipy.segment.clusteringspeed.quickbundlesx method)": [[172, "dipy.segment.clusteringspeed.QuickBundlesX.get_stats"]], "get_tree_cluster_map() (dipy.segment.clusteringspeed.quickbundlesx method)": [[172, "dipy.segment.clusteringspeed.QuickBundlesX.get_tree_cluster_map"]], "icm_ising() (dipy.segment.mrf.iteratedconditionalmodes method)": [[172, "dipy.segment.mrf.IteratedConditionalModes.icm_ising"]], "infer_shape() (dipy.segment.featurespeed.cythonfeature method)": [[172, "dipy.segment.featurespeed.CythonFeature.infer_shape"]], "infer_shape() (dipy.segment.featurespeed.feature method)": [[172, "dipy.segment.featurespeed.Feature.infer_shape"]], "infer_shape() (in module dipy.segment.featurespeed)": [[172, "dipy.segment.featurespeed.infer_shape"]], "initialize_maximum_likelihood() (dipy.segment.mrf.iteratedconditionalmodes method)": [[172, "dipy.segment.mrf.IteratedConditionalModes.initialize_maximum_likelihood"]], "initialize_param_uniform() (dipy.segment.mrf.constantobservationmodel method)": [[172, "dipy.segment.mrf.ConstantObservationModel.initialize_param_uniform"]], "insert() (dipy.segment.clusteringspeed.quickbundlesx method)": [[172, "dipy.segment.clusteringspeed.QuickBundlesX.insert"]], "is_leaf (dipy.segment.clustering.treecluster property)": [[172, "dipy.segment.clustering.TreeCluster.is_leaf"]], "is_leaf (dipy.segment.clusteringspeed.treecluster property)": [[172, "dipy.segment.clusteringspeed.TreeCluster.is_leaf"]], "is_order_invariant (dipy.segment.featurespeed.feature attribute)": [[172, "dipy.segment.featurespeed.Feature.is_order_invariant"]], "is_order_invariant (dipy.segment.metricspeed.metric attribute)": [[172, "dipy.segment.metricspeed.Metric.is_order_invariant"]], "is_order_invariant (dipy.segment.metricspeed.minimumaveragedirectflipmetric attribute)": [[172, "dipy.segment.metricspeed.MinimumAverageDirectFlipMetric.is_order_invariant"]], "iter_preorder() (dipy.segment.clustering.treeclustermap method)": [[172, "dipy.segment.clustering.TreeClusterMap.iter_preorder"]], "iter_preorder() (dipy.segment.clusteringspeed.treeclustermap method)": [[172, "dipy.segment.clusteringspeed.TreeClusterMap.iter_preorder"]], "logger() (in module dipy.segment.bundles)": [[172, "dipy.segment.bundles.logger"]], "logger() (in module dipy.segment.clustering)": [[172, "dipy.segment.clustering.logger"]], "mdf() (in module dipy.segment.metric)": [[172, "dipy.segment.metric.mdf"]], "mean_euclidean_distance() (in module dipy.segment.metric)": [[172, "dipy.segment.metric.mean_euclidean_distance"]], "mean_manhattan_distance() (in module dipy.segment.metric)": [[172, "dipy.segment.metric.mean_manhattan_distance"]], "median_otsu() (in module dipy.segment.mask)": [[172, "dipy.segment.mask.median_otsu"]], "multi_median() (in module dipy.segment.mask)": [[172, "dipy.segment.mask.multi_median"]], "nearest_from_matrix_col() (in module dipy.segment.fss)": [[172, "dipy.segment.fss.nearest_from_matrix_col"]], "nearest_from_matrix_row() (in module dipy.segment.fss)": [[172, "dipy.segment.fss.nearest_from_matrix_row"]], "negloglikelihood() (dipy.segment.mrf.constantobservationmodel method)": [[172, "dipy.segment.mrf.ConstantObservationModel.negloglikelihood"]], "otsu() (in module dipy.segment.threshold)": [[172, "dipy.segment.threshold.otsu"]], "peek() (in module dipy.segment.clustering_algorithms)": [[172, "dipy.segment.clustering_algorithms.peek"]], "prob_image() (dipy.segment.mrf.constantobservationmodel method)": [[172, "dipy.segment.mrf.ConstantObservationModel.prob_image"]], "prob_neighborhood() (dipy.segment.mrf.iteratedconditionalmodes method)": [[172, "dipy.segment.mrf.IteratedConditionalModes.prob_neighborhood"]], "qbx_and_merge() (in module dipy.segment.clustering)": [[172, "dipy.segment.clustering.qbx_and_merge"]], "quickbundles() (in module dipy.segment.clustering_algorithms)": [[172, "dipy.segment.clustering_algorithms.quickbundles"]], "quickbundlesx() (in module dipy.segment.clustering_algorithms)": [[172, "dipy.segment.clustering_algorithms.quickbundlesx"]], "radius_search() (dipy.segment.fss.faststreamlinesearch method)": [[172, "dipy.segment.fss.FastStreamlineSearch.radius_search"]], "recognize() (dipy.segment.bundles.recobundles method)": [[172, "dipy.segment.bundles.RecoBundles.recognize"]], "refdata (dipy.segment.clustering.clustermap property)": [[172, "dipy.segment.clustering.ClusterMap.refdata"]], "refdata (dipy.segment.clustering.treeclustermap property)": [[172, "dipy.segment.clustering.TreeClusterMap.refdata"]], "refdata (dipy.segment.clusteringspeed.treeclustermap property)": [[172, "dipy.segment.clusteringspeed.TreeClusterMap.refdata"]], "refine() (dipy.segment.bundles.recobundles method)": [[172, "dipy.segment.bundles.RecoBundles.refine"]], "remove_cluster() (dipy.segment.clustering.clustermap method)": [[172, "dipy.segment.clustering.ClusterMap.remove_cluster"]], "return_indices() (dipy.segment.clustering.treecluster method)": [[172, "dipy.segment.clustering.TreeCluster.return_indices"]], "return_indices() (dipy.segment.clusteringspeed.treecluster method)": [[172, "dipy.segment.clusteringspeed.TreeCluster.return_indices"]], "seg_stats() (dipy.segment.mrf.constantobservationmodel method)": [[172, "dipy.segment.mrf.ConstantObservationModel.seg_stats"]], "segment_from_cfa() (in module dipy.segment.mask)": [[172, "dipy.segment.mask.segment_from_cfa"]], "size() (dipy.segment.clustering.clustermap method)": [[172, "dipy.segment.clustering.ClusterMap.size"]], "traverse_postorder() (dipy.segment.clustering.treeclustermap method)": [[172, "dipy.segment.clustering.TreeClusterMap.traverse_postorder"]], "traverse_postorder() (dipy.segment.clusteringspeed.treeclustermap method)": [[172, "dipy.segment.clusteringspeed.TreeClusterMap.traverse_postorder"]], "update() (dipy.segment.clustering.clustercentroid method)": [[172, "dipy.segment.clustering.ClusterCentroid.update"]], "update() (dipy.segment.clustering_algorithms.clustercentroid method)": [[172, "dipy.segment.clustering_algorithms.ClusterCentroid.update"]], "update() (dipy.segment.clusteringspeed.clustercentroid method)": [[172, "dipy.segment.clusteringspeed.ClusterCentroid.update"]], "update_param() (dipy.segment.mrf.constantobservationmodel method)": [[172, "dipy.segment.mrf.ConstantObservationModel.update_param"]], "upper_bound_by_percent() (in module dipy.segment.threshold)": [[172, "dipy.segment.threshold.upper_bound_by_percent"]], "upper_bound_by_rate() (in module dipy.segment.threshold)": [[172, "dipy.segment.threshold.upper_bound_by_rate"]], "add_noise() (in module dipy.sims.phantom)": [[173, "dipy.sims.phantom.add_noise"]], "add_noise() (in module dipy.sims.voxel)": [[173, "dipy.sims.voxel.add_noise"]], "all_tensor_evecs() (in module dipy.sims.voxel)": [[173, "dipy.sims.voxel.all_tensor_evecs"]], "callaghan_perpendicular() (in module dipy.sims.voxel)": [[173, "dipy.sims.voxel.callaghan_perpendicular"]], "cylinders_and_ball_soderman() (in module dipy.sims.voxel)": [[173, "dipy.sims.voxel.cylinders_and_ball_soderman"]], "diff2eigenvectors() (in module dipy.sims.phantom)": [[173, "dipy.sims.phantom.diff2eigenvectors"]], "diffusion_evals() (in module dipy.sims.voxel)": [[173, "dipy.sims.voxel.diffusion_evals"]], "dipy.sims": [[173, "module-dipy.sims"]], "dipy.sims.phantom": [[173, "module-dipy.sims.phantom"]], "dipy.sims.voxel": [[173, "module-dipy.sims.voxel"]], "dki_signal() (in module dipy.sims.voxel)": [[173, "dipy.sims.voxel.dki_signal"]], "gaussian_parallel() (in module dipy.sims.voxel)": [[173, "dipy.sims.voxel.gaussian_parallel"]], "kurtosis_element() (in module dipy.sims.voxel)": [[173, "dipy.sims.voxel.kurtosis_element"]], "multi_tensor() (in module dipy.sims.voxel)": [[173, "dipy.sims.voxel.multi_tensor"]], "multi_tensor_dki() (in module dipy.sims.voxel)": [[173, "dipy.sims.voxel.multi_tensor_dki"]], "multi_tensor_msd() (in module dipy.sims.voxel)": [[173, "dipy.sims.voxel.multi_tensor_msd"]], "multi_tensor_odf() (in module dipy.sims.voxel)": [[173, "dipy.sims.voxel.multi_tensor_odf"]], "multi_tensor_pdf() (in module dipy.sims.voxel)": [[173, "dipy.sims.voxel.multi_tensor_pdf"]], "multi_tensor_rtop() (in module dipy.sims.voxel)": [[173, "dipy.sims.voxel.multi_tensor_rtop"]], "orbital_phantom() (in module dipy.sims.phantom)": [[173, "dipy.sims.phantom.orbital_phantom"]], "single_tensor() (in module dipy.sims.voxel)": [[173, "dipy.sims.voxel.single_tensor"]], "single_tensor_msd() (in module dipy.sims.voxel)": [[173, "dipy.sims.voxel.single_tensor_msd"]], "single_tensor_odf() (in module dipy.sims.voxel)": [[173, "dipy.sims.voxel.single_tensor_odf"]], "single_tensor_pdf() (in module dipy.sims.voxel)": [[173, "dipy.sims.voxel.single_tensor_pdf"]], "single_tensor_rtop() (in module dipy.sims.voxel)": [[173, "dipy.sims.voxel.single_tensor_rtop"]], "sticks_and_ball() (in module dipy.sims.voxel)": [[173, "dipy.sims.voxel.sticks_and_ball"]], "afq_profile() (in module dipy.stats.analysis)": [[174, "dipy.stats.analysis.afq_profile"]], "anatomical_measures() (in module dipy.stats.analysis)": [[174, "dipy.stats.analysis.anatomical_measures"]], "assignment_map() (in module dipy.stats.analysis)": [[174, "dipy.stats.analysis.assignment_map"]], "dipy.stats": [[174, "module-dipy.stats"]], "dipy.stats.analysis": [[174, "module-dipy.stats.analysis"]], "gaussian_weights() (in module dipy.stats.analysis)": [[174, "dipy.stats.analysis.gaussian_weights"]], "peak_values() (in module dipy.stats.analysis)": [[174, "dipy.stats.analysis.peak_values"]], "actstoppingcriterion (class in dipy.tracking.stopping_criterion)": [[175, "dipy.tracking.stopping_criterion.ActStoppingCriterion"]], "anatomicalstoppingcriterion (class in dipy.tracking.stopping_criterion)": [[175, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion"]], "binarystoppingcriterion (class in dipy.tracking.stopping_criterion)": [[175, "dipy.tracking.stopping_criterion.BinaryStoppingCriterion"]], "cmcstoppingcriterion (class in dipy.tracking.stopping_criterion)": [[175, "dipy.tracking.stopping_criterion.CmcStoppingCriterion"]], "directiongetter (class in dipy.tracking.direction_getter)": [[175, "dipy.tracking.direction_getter.DirectionGetter"]], "endpoint (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[175, "dipy.tracking.stopping_criterion.StreamlineStatus.ENDPOINT"]], "fbcmeasures (class in dipy.tracking.fbcmeasures)": [[175, "dipy.tracking.fbcmeasures.FBCMeasures"]], "fiberfit (class in dipy.tracking.life)": [[175, "dipy.tracking.life.FiberFit"]], "fibermodel (class in dipy.tracking.life)": [[175, "dipy.tracking.life.FiberModel"]], "invalidpoint (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[175, "dipy.tracking.stopping_criterion.StreamlineStatus.INVALIDPOINT"]], "kdtree (class in dipy.tracking.fbcmeasures)": [[175, "dipy.tracking.fbcmeasures.KDTree"]], "kdtree.innernode (class in dipy.tracking.fbcmeasures)": [[175, "dipy.tracking.fbcmeasures.KDTree.innernode"]], "kdtree.leafnode (class in dipy.tracking.fbcmeasures)": [[175, "dipy.tracking.fbcmeasures.KDTree.leafnode"]], "kdtree.node (class in dipy.tracking.fbcmeasures)": [[175, "dipy.tracking.fbcmeasures.KDTree.node"]], "lifesignalmaker (class in dipy.tracking.life)": [[175, "dipy.tracking.life.LifeSignalMaker"]], "localtracking (class in dipy.tracking.local_tracking)": [[175, "dipy.tracking.local_tracking.LocalTracking"]], "outsideimage (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[175, "dipy.tracking.stopping_criterion.StreamlineStatus.OUTSIDEIMAGE"]], "pyerror (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[175, "dipy.tracking.stopping_criterion.StreamlineStatus.PYERROR"]], "particlefilteringtracking (class in dipy.tracking.local_tracking)": [[175, "dipy.tracking.local_tracking.ParticleFilteringTracking"]], "stoppingcriterion (class in dipy.tracking.stopping_criterion)": [[175, "dipy.tracking.stopping_criterion.StoppingCriterion"]], "streamlinestatus (class in dipy.tracking.stopping_criterion)": [[175, "dipy.tracking.stopping_criterion.StreamlineStatus"]], "streamlines (in module dipy.tracking.streamlinespeed)": [[175, "dipy.tracking.streamlinespeed.Streamlines"]], "trackpoint (dipy.tracking.stopping_criterion.streamlinestatus attribute)": [[175, "dipy.tracking.stopping_criterion.StreamlineStatus.TRACKPOINT"]], "thresholdstoppingcriterion (class in dipy.tracking.stopping_criterion)": [[175, "dipy.tracking.stopping_criterion.ThresholdStoppingCriterion"]], "__init__() (dipy.tracking.direction_getter.directiongetter method)": [[175, "dipy.tracking.direction_getter.DirectionGetter.__init__"]], "__init__() (dipy.tracking.fbcmeasures.fbcmeasures method)": [[175, "dipy.tracking.fbcmeasures.FBCMeasures.__init__"]], "__init__() (dipy.tracking.fbcmeasures.kdtree method)": [[175, "dipy.tracking.fbcmeasures.KDTree.__init__"]], "__init__() (dipy.tracking.fbcmeasures.interp1d method)": [[175, "dipy.tracking.fbcmeasures.interp1d.__init__"]], "__init__() (dipy.tracking.life.fiberfit method)": [[175, "dipy.tracking.life.FiberFit.__init__"]], "__init__() (dipy.tracking.life.fibermodel method)": [[175, "dipy.tracking.life.FiberModel.__init__"]], "__init__() (dipy.tracking.life.lifesignalmaker method)": [[175, "dipy.tracking.life.LifeSignalMaker.__init__"]], "__init__() (dipy.tracking.local_tracking.localtracking method)": [[175, "dipy.tracking.local_tracking.LocalTracking.__init__"]], "__init__() (dipy.tracking.local_tracking.particlefilteringtracking method)": [[175, "dipy.tracking.local_tracking.ParticleFilteringTracking.__init__"]], "__init__() (dipy.tracking.stopping_criterion.actstoppingcriterion method)": [[175, "dipy.tracking.stopping_criterion.ActStoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.anatomicalstoppingcriterion method)": [[175, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.binarystoppingcriterion method)": [[175, "dipy.tracking.stopping_criterion.BinaryStoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.cmcstoppingcriterion method)": [[175, "dipy.tracking.stopping_criterion.CmcStoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.stoppingcriterion method)": [[175, "dipy.tracking.stopping_criterion.StoppingCriterion.__init__"]], "__init__() (dipy.tracking.stopping_criterion.streamlinestatus method)": [[175, "dipy.tracking.stopping_criterion.StreamlineStatus.__init__"]], "__init__() (dipy.tracking.stopping_criterion.thresholdstoppingcriterion method)": [[175, "dipy.tracking.stopping_criterion.ThresholdStoppingCriterion.__init__"]], "add_3vecs() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.add_3vecs"]], "approx_polygon_track() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.approx_polygon_track"]], "approximate_mdl_trajectory() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.approximate_mdl_trajectory"]], "arbitrarypoint() (in module dipy.tracking.metrics)": [[175, "dipy.tracking.metrics.arbitrarypoint"]], "bundles_distances_mam() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.bundles_distances_mam"]], "bundles_distances_mdf() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.bundles_distances_mdf"]], "bytes() (in module dipy.tracking.metrics)": [[175, "dipy.tracking.metrics.bytes"]], "calc_signal() (dipy.tracking.life.lifesignalmaker method)": [[175, "dipy.tracking.life.LifeSignalMaker.calc_signal"]], "center_of_mass() (in module dipy.tracking.metrics)": [[175, "dipy.tracking.metrics.center_of_mass"]], "center_streamlines() (in module dipy.tracking.streamline)": [[175, "dipy.tracking.streamline.center_streamlines"]], "check_point() (dipy.tracking.stopping_criterion.stoppingcriterion method)": [[175, "dipy.tracking.stopping_criterion.StoppingCriterion.check_point"]], "children (dipy.tracking.fbcmeasures.kdtree.innernode property)": [[175, "dipy.tracking.fbcmeasures.KDTree.innernode.children"]], "children (dipy.tracking.fbcmeasures.kdtree.leafnode property)": [[175, "dipy.tracking.fbcmeasures.KDTree.leafnode.children"]], "cluster_confidence() (in module dipy.tracking.streamline)": [[175, "dipy.tracking.streamline.cluster_confidence"]], "compress_streamlines() (in module dipy.tracking.streamlinespeed)": [[175, "dipy.tracking.streamlinespeed.compress_streamlines"]], "compute_rfbc() (in module dipy.tracking.fbcmeasures)": [[175, "dipy.tracking.fbcmeasures.compute_rfbc"]], "connectivity_matrix() (in module dipy.tracking.utils)": [[175, "dipy.tracking.utils.connectivity_matrix"]], "count_neighbors() (dipy.tracking.fbcmeasures.kdtree method)": [[175, "dipy.tracking.fbcmeasures.KDTree.count_neighbors"]], "cut_plane() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.cut_plane"]], "deform_streamlines() (in module dipy.tracking.streamline)": [[175, "dipy.tracking.streamline.deform_streamlines"]], "density_map() (in module dipy.tracking.utils)": [[175, "dipy.tracking.utils.density_map"]], "detect_corresponding_tracks() (in module dipy.tracking.learning)": [[175, "dipy.tracking.learning.detect_corresponding_tracks"]], "detect_corresponding_tracks_plus() (in module dipy.tracking.learning)": [[175, "dipy.tracking.learning.detect_corresponding_tracks_plus"]], "determine_num_threads() (in module dipy.tracking.fbcmeasures)": [[175, "dipy.tracking.fbcmeasures.determine_num_threads"]], "dipy.tracking": [[175, "module-dipy.tracking"]], "dipy.tracking._utils": [[175, "module-dipy.tracking._utils"]], "dipy.tracking.direction_getter": [[175, "module-dipy.tracking.direction_getter"]], "dipy.tracking.distances": [[175, "module-dipy.tracking.distances"]], "dipy.tracking.fbcmeasures": [[175, "module-dipy.tracking.fbcmeasures"]], "dipy.tracking.learning": [[175, "module-dipy.tracking.learning"]], "dipy.tracking.life": [[175, "module-dipy.tracking.life"]], "dipy.tracking.local_tracking": [[175, "module-dipy.tracking.local_tracking"]], "dipy.tracking.localtrack": [[175, "module-dipy.tracking.localtrack"]], "dipy.tracking.mesh": [[175, "module-dipy.tracking.mesh"]], "dipy.tracking.metrics": [[175, "module-dipy.tracking.metrics"]], "dipy.tracking.propspeed": [[175, "module-dipy.tracking.propspeed"]], "dipy.tracking.stopping_criterion": [[175, "module-dipy.tracking.stopping_criterion"]], "dipy.tracking.streamline": [[175, "module-dipy.tracking.streamline"]], "dipy.tracking.streamlinespeed": [[175, "module-dipy.tracking.streamlinespeed"]], "dipy.tracking.utils": [[175, "module-dipy.tracking.utils"]], "dipy.tracking.vox2track": [[175, "module-dipy.tracking.vox2track"]], "downsample() (in module dipy.tracking.metrics)": [[175, "dipy.tracking.metrics.downsample"]], "dtype (dipy.tracking.fbcmeasures.interp1d attribute)": [[175, "dipy.tracking.fbcmeasures.interp1d.dtype"]], "endpoint() (in module dipy.tracking.metrics)": [[175, "dipy.tracking.metrics.endpoint"]], "eudx_both_directions() (in module dipy.tracking.propspeed)": [[175, "dipy.tracking.propspeed.eudx_both_directions"]], "fill_value (dipy.tracking.fbcmeasures.interp1d property)": [[175, "dipy.tracking.fbcmeasures.interp1d.fill_value"]], "fit() (dipy.tracking.life.fibermodel method)": [[175, "dipy.tracking.life.FiberModel.fit"]], "frenet_serret() (in module dipy.tracking.metrics)": [[175, "dipy.tracking.metrics.frenet_serret"]], "from_pve() (dipy.tracking.stopping_criterion.anatomicalstoppingcriterion class method)": [[175, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion.from_pve"]], "generate_combinations() (in module dipy.tracking.metrics)": [[175, "dipy.tracking.metrics.generate_combinations"]], "generate_streamline() (dipy.tracking.direction_getter.directiongetter method)": [[175, "dipy.tracking.direction_getter.DirectionGetter.generate_streamline"]], "get_direction() (dipy.tracking.direction_getter.directiongetter method)": [[175, "dipy.tracking.direction_getter.DirectionGetter.get_direction"]], "get_exclude() (dipy.tracking.stopping_criterion.anatomicalstoppingcriterion method)": [[175, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion.get_exclude"]], "get_include() (dipy.tracking.stopping_criterion.anatomicalstoppingcriterion method)": [[175, "dipy.tracking.stopping_criterion.AnatomicalStoppingCriterion.get_include"]], "get_points_rfbc_thresholded() (dipy.tracking.fbcmeasures.fbcmeasures method)": [[175, "dipy.tracking.fbcmeasures.FBCMeasures.get_points_rfbc_thresholded"]], "grad_tensor() (in module dipy.tracking.life)": [[175, "dipy.tracking.life.grad_tensor"]], "gradient() (in module dipy.tracking.life)": [[175, "dipy.tracking.life.gradient"]], "idx (dipy.tracking.fbcmeasures.kdtree.leafnode property)": [[175, "dipy.tracking.fbcmeasures.KDTree.leafnode.idx"]], "initial_direction() (dipy.tracking.direction_getter.directiongetter method)": [[175, "dipy.tracking.direction_getter.DirectionGetter.initial_direction"]], "inner_3vecs() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.inner_3vecs"]], "inside_sphere() (in module dipy.tracking.metrics)": [[175, "dipy.tracking.metrics.inside_sphere"]], "inside_sphere_points() (in module dipy.tracking.metrics)": [[175, "dipy.tracking.metrics.inside_sphere_points"]], "interp1d (class in dipy.tracking.fbcmeasures)": [[175, "dipy.tracking.fbcmeasures.interp1d"]], "intersect_segment_cylinder() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.intersect_segment_cylinder"]], "intersect_sphere() (in module dipy.tracking.metrics)": [[175, "dipy.tracking.metrics.intersect_sphere"]], "larch_3merge() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.larch_3merge"]], "larch_3split() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.larch_3split"]], "lee_angle_distance() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.lee_angle_distance"]], "lee_perpendicular_distance() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.lee_perpendicular_distance"]], "length() (in module dipy.tracking.metrics)": [[175, "dipy.tracking.metrics.length"]], "length() (in module dipy.tracking.streamlinespeed)": [[175, "dipy.tracking.streamlinespeed.length"]], "length() (in module dipy.tracking.utils)": [[175, "dipy.tracking.utils.length"]], "local_skeleton_clustering() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.local_skeleton_clustering"]], "local_skeleton_clustering_3pts() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.local_skeleton_clustering_3pts"]], "local_tracker() (in module dipy.tracking.localtrack)": [[175, "dipy.tracking.localtrack.local_tracker"]], "longest_track_bundle() (in module dipy.tracking.metrics)": [[175, "dipy.tracking.metrics.longest_track_bundle"]], "magn() (in module dipy.tracking.metrics)": [[175, "dipy.tracking.metrics.magn"]], "mam_distances() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.mam_distances"]], "max_angle_from_curvature() (in module dipy.tracking.utils)": [[175, "dipy.tracking.utils.max_angle_from_curvature"]], "mean_curvature() (in module dipy.tracking.metrics)": [[175, "dipy.tracking.metrics.mean_curvature"]], "mean_orientation() (in module dipy.tracking.metrics)": [[175, "dipy.tracking.metrics.mean_orientation"]], "midpoint() (in module dipy.tracking.metrics)": [[175, "dipy.tracking.metrics.midpoint"]], "midpoint2point() (in module dipy.tracking.metrics)": [[175, "dipy.tracking.metrics.midpoint2point"]], "min_moving_average() (in module dipy.tracking.fbcmeasures)": [[175, "dipy.tracking.fbcmeasures.min_moving_average"]], "min_radius_curvature_from_angle() (in module dipy.tracking.utils)": [[175, "dipy.tracking.utils.min_radius_curvature_from_angle"]], "minimum_closest_distance() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.minimum_closest_distance"]], "most_similar_track_mam() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.most_similar_track_mam"]], "mul_3vec() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.mul_3vec"]], "mul_3vecs() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.mul_3vecs"]], "nbytes() (in module dipy.tracking.streamline)": [[175, "dipy.tracking.streamline.nbytes"]], "ndarray_offset() (in module dipy.tracking.propspeed)": [[175, "dipy.tracking.propspeed.ndarray_offset"]], "ndbincount() (in module dipy.tracking.utils)": [[175, "dipy.tracking.utils.ndbincount"]], "near_roi() (in module dipy.tracking.utils)": [[175, "dipy.tracking.utils.near_roi"]], "norm_3vec() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.norm_3vec"]], "normalized_3vec() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.normalized_3vec"]], "orient_by_rois() (in module dipy.tracking.streamline)": [[175, "dipy.tracking.streamline.orient_by_rois"]], "orient_by_streamline() (in module dipy.tracking.streamline)": [[175, "dipy.tracking.streamline.orient_by_streamline"]], "path_length() (in module dipy.tracking.utils)": [[175, "dipy.tracking.utils.path_length"]], "pft_tracker() (in module dipy.tracking.localtrack)": [[175, "dipy.tracking.localtrack.pft_tracker"]], "point_segment_sq_distance() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.point_segment_sq_distance"]], "point_track_sq_distance_check() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.point_track_sq_distance_check"]], "predict() (dipy.tracking.life.fiberfit method)": [[175, "dipy.tracking.life.FiberFit.predict"]], "principal_components() (in module dipy.tracking.metrics)": [[175, "dipy.tracking.metrics.principal_components"]], "query() (dipy.tracking.fbcmeasures.kdtree method)": [[175, "dipy.tracking.fbcmeasures.KDTree.query"]], "query_ball_point() (dipy.tracking.fbcmeasures.kdtree method)": [[175, "dipy.tracking.fbcmeasures.KDTree.query_ball_point"]], "query_ball_tree() (dipy.tracking.fbcmeasures.kdtree method)": [[175, "dipy.tracking.fbcmeasures.KDTree.query_ball_tree"]], "query_pairs() (dipy.tracking.fbcmeasures.kdtree method)": [[175, "dipy.tracking.fbcmeasures.KDTree.query_pairs"]], "random() (in module dipy.tracking.localtrack)": [[175, "dipy.tracking.localtrack.random"]], "random_coordinates_from_surface() (in module dipy.tracking.mesh)": [[175, "dipy.tracking.mesh.random_coordinates_from_surface"]], "random_seeds_from_mask() (in module dipy.tracking.utils)": [[175, "dipy.tracking.utils.random_seeds_from_mask"]], "reduce_labels() (in module dipy.tracking.utils)": [[175, "dipy.tracking.utils.reduce_labels"]], "reduce_rois() (in module dipy.tracking.utils)": [[175, "dipy.tracking.utils.reduce_rois"]], "relist_streamlines() (in module dipy.tracking.streamline)": [[175, "dipy.tracking.streamline.relist_streamlines"]], "seeds_from_mask() (in module dipy.tracking.utils)": [[175, "dipy.tracking.utils.seeds_from_mask"]], "seeds_from_surface_coordinates() (in module dipy.tracking.mesh)": [[175, "dipy.tracking.mesh.seeds_from_surface_coordinates"]], "select_by_rois() (in module dipy.tracking.streamline)": [[175, "dipy.tracking.streamline.select_by_rois"]], "select_random_set_of_streamlines() (in module dipy.tracking.streamline)": [[175, "dipy.tracking.streamline.select_random_set_of_streamlines"]], "set_number_of_points() (in module dipy.tracking.streamlinespeed)": [[175, "dipy.tracking.streamlinespeed.set_number_of_points"]], "setup() (dipy.tracking.life.fibermodel method)": [[175, "dipy.tracking.life.FiberModel.setup"]], "sparse_distance_matrix() (dipy.tracking.fbcmeasures.kdtree method)": [[175, "dipy.tracking.fbcmeasures.KDTree.sparse_distance_matrix"]], "spline() (in module dipy.tracking.metrics)": [[175, "dipy.tracking.metrics.spline"]], "split (dipy.tracking.fbcmeasures.kdtree.innernode property)": [[175, "dipy.tracking.fbcmeasures.KDTree.innernode.split"]], "split_dim (dipy.tracking.fbcmeasures.kdtree.innernode property)": [[175, "dipy.tracking.fbcmeasures.KDTree.innernode.split_dim"]], "startpoint() (in module dipy.tracking.metrics)": [[175, "dipy.tracking.metrics.startpoint"]], "streamline_gradients() (in module dipy.tracking.life)": [[175, "dipy.tracking.life.streamline_gradients"]], "streamline_mapping() (in module dipy.tracking.vox2track)": [[175, "dipy.tracking.vox2track.streamline_mapping"]], "streamline_near_roi() (in module dipy.tracking.utils)": [[175, "dipy.tracking.utils.streamline_near_roi"]], "streamline_signal() (dipy.tracking.life.lifesignalmaker method)": [[175, "dipy.tracking.life.LifeSignalMaker.streamline_signal"]], "streamline_signal() (in module dipy.tracking.life)": [[175, "dipy.tracking.life.streamline_signal"]], "streamline_tensors() (in module dipy.tracking.life)": [[175, "dipy.tracking.life.streamline_tensors"]], "sub_3vecs() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.sub_3vecs"]], "subsegment() (in module dipy.tracking.utils)": [[175, "dipy.tracking.utils.subsegment"]], "target() (in module dipy.tracking.utils)": [[175, "dipy.tracking.utils.target"]], "target_line_based() (in module dipy.tracking.utils)": [[175, "dipy.tracking.utils.target_line_based"]], "track_counts() (in module dipy.tracking.vox2track)": [[175, "dipy.tracking.vox2track.track_counts"]], "track_dist_3pts() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.track_dist_3pts"]], "track_roi_intersection_check() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.track_roi_intersection_check"]], "transform_streamlines() (in module dipy.tracking.streamline)": [[175, "dipy.tracking.streamline.transform_streamlines"]], "transform_tracking_output() (in module dipy.tracking.utils)": [[175, "dipy.tracking.utils.transform_tracking_output"]], "tree (dipy.tracking.fbcmeasures.kdtree property)": [[175, "dipy.tracking.fbcmeasures.KDTree.tree"]], "triangles_area() (in module dipy.tracking.mesh)": [[175, "dipy.tracking.mesh.triangles_area"]], "unique_rows() (in module dipy.tracking.utils)": [[175, "dipy.tracking.utils.unique_rows"]], "unlist_streamlines() (in module dipy.tracking.streamline)": [[175, "dipy.tracking.streamline.unlist_streamlines"]], "values_from_volume() (in module dipy.tracking.streamline)": [[175, "dipy.tracking.streamline.values_from_volume"]], "vertices_to_triangles_values() (in module dipy.tracking.mesh)": [[175, "dipy.tracking.mesh.vertices_to_triangles_values"]], "voxel2streamline() (in module dipy.tracking.life)": [[175, "dipy.tracking.life.voxel2streamline"]], "warn() (in module dipy.tracking.distances)": [[175, "dipy.tracking.distances.warn"]], "winding() (in module dipy.tracking.metrics)": [[175, "dipy.tracking.metrics.winding"]], "clusterstab (class in dipy.viz.horizon.tab.cluster)": [[176, "dipy.viz.horizon.tab.cluster.ClustersTab"]], "clustersvisualizer (class in dipy.viz.horizon.visualizer.cluster)": [[176, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer"]], "globalhorizon (class in dipy.viz.gmem)": [[176, "dipy.viz.gmem.GlobalHorizon"]], "horizon (class in dipy.viz.horizon.app)": [[176, "dipy.viz.horizon.app.Horizon"]], "horizontab (class in dipy.viz.horizon.tab.base)": [[176, "dipy.viz.horizon.tab.base.HorizonTab"]], "horizonuielement (class in dipy.viz.horizon.tab.base)": [[176, "dipy.viz.horizon.tab.base.HorizonUIElement"]], "peakstab (class in dipy.viz.horizon.tab.peak)": [[176, "dipy.viz.horizon.tab.peak.PeaksTab"]], "roistab (class in dipy.viz.horizon.tab.roi)": [[176, "dipy.viz.horizon.tab.roi.ROIsTab"]], "slicestab (class in dipy.viz.horizon.tab.slice)": [[176, "dipy.viz.horizon.tab.slice.SlicesTab"]], "slicesvisualizer (class in dipy.viz.horizon.visualizer.slice)": [[176, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer"]], "tabmanager (class in dipy.viz.horizon.tab.base)": [[176, "dipy.viz.horizon.tab.base.TabManager"]], "__init__() (dipy.viz.gmem.globalhorizon method)": [[176, "dipy.viz.gmem.GlobalHorizon.__init__"]], "__init__() (dipy.viz.horizon.app.horizon method)": [[176, "dipy.viz.horizon.app.Horizon.__init__"]], "__init__() (dipy.viz.horizon.tab.base.horizontab method)": [[176, "dipy.viz.horizon.tab.base.HorizonTab.__init__"]], "__init__() (dipy.viz.horizon.tab.base.horizonuielement method)": [[176, "dipy.viz.horizon.tab.base.HorizonUIElement.__init__"]], "__init__() (dipy.viz.horizon.tab.base.tabmanager method)": [[176, "dipy.viz.horizon.tab.base.TabManager.__init__"]], "__init__() (dipy.viz.horizon.tab.cluster.clusterstab method)": [[176, "dipy.viz.horizon.tab.cluster.ClustersTab.__init__"]], "__init__() (dipy.viz.horizon.tab.peak.peakstab method)": [[176, "dipy.viz.horizon.tab.peak.PeaksTab.__init__"]], "__init__() (dipy.viz.horizon.tab.roi.roistab method)": [[176, "dipy.viz.horizon.tab.roi.ROIsTab.__init__"]], "__init__() (dipy.viz.horizon.tab.slice.slicestab method)": [[176, "dipy.viz.horizon.tab.slice.SlicesTab.__init__"]], "__init__() (dipy.viz.horizon.visualizer.cluster.clustersvisualizer method)": [[176, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.__init__"]], "__init__() (dipy.viz.horizon.visualizer.slice.slicesvisualizer method)": [[176, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.__init__"]], "actors (dipy.viz.horizon.tab.slice.slicestab property)": [[176, "dipy.viz.horizon.tab.slice.SlicesTab.actors"]], "add_cluster_actors() (dipy.viz.horizon.visualizer.cluster.clustersvisualizer method)": [[176, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.add_cluster_actors"]], "build() (dipy.viz.horizon.tab.base.horizontab method)": [[176, "dipy.viz.horizon.tab.base.HorizonTab.build"]], "build() (dipy.viz.horizon.tab.cluster.clusterstab method)": [[176, "dipy.viz.horizon.tab.cluster.ClustersTab.build"]], "build() (dipy.viz.horizon.tab.peak.peakstab method)": [[176, "dipy.viz.horizon.tab.peak.PeaksTab.build"]], "build() (dipy.viz.horizon.tab.roi.roistab method)": [[176, "dipy.viz.horizon.tab.roi.ROIsTab.build"]], "build() (dipy.viz.horizon.tab.slice.slicestab method)": [[176, "dipy.viz.horizon.tab.slice.SlicesTab.build"]], "build_checkbox() (in module dipy.viz.horizon.tab.base)": [[176, "dipy.viz.horizon.tab.base.build_checkbox"]], "build_label() (in module dipy.viz.horizon.tab.base)": [[176, "dipy.viz.horizon.tab.base.build_label"]], "build_label() (in module dipy.viz.panel)": [[176, "dipy.viz.panel.build_label"]], "build_scene() (dipy.viz.horizon.app.horizon method)": [[176, "dipy.viz.horizon.app.Horizon.build_scene"]], "build_show() (dipy.viz.horizon.app.horizon method)": [[176, "dipy.viz.horizon.app.Horizon.build_show"]], "build_slider() (in module dipy.viz.horizon.tab.base)": [[176, "dipy.viz.horizon.tab.base.build_slider"]], "build_switcher() (in module dipy.viz.horizon.tab.base)": [[176, "dipy.viz.horizon.tab.base.build_switcher"]], "bundle_shape_profile() (in module dipy.viz.plotting)": [[176, "dipy.viz.plotting.bundle_shape_profile"]], "centroid_actors (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[176, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.centroid_actors"]], "change_volume() (dipy.viz.horizon.visualizer.slice.slicesvisualizer method)": [[176, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.change_volume"]], "check_img_shapes() (in module dipy.viz.horizon.util)": [[176, "dipy.viz.horizon.util.check_img_shapes"]], "cluster_actors (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[176, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.cluster_actors"]], "color_double_slider() (in module dipy.viz.horizon.tab.base)": [[176, "dipy.viz.horizon.tab.base.color_double_slider"]], "color_single_slider() (in module dipy.viz.horizon.tab.base)": [[176, "dipy.viz.horizon.tab.base.color_single_slider"]], "compare_maps() (in module dipy.viz.plotting)": [[176, "dipy.viz.plotting.compare_maps"]], "compare_qti_maps() (in module dipy.viz.plotting)": [[176, "dipy.viz.plotting.compare_qti_maps"]], "data_shape (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[176, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.data_shape"]], "dipy.viz": [[176, "module-dipy.viz"]], "dipy.viz.gmem": [[176, "module-dipy.viz.gmem"]], "dipy.viz.horizon": [[176, "module-dipy.viz.horizon"]], "dipy.viz.horizon.app": [[176, "module-dipy.viz.horizon.app"]], "dipy.viz.horizon.tab": [[176, "module-dipy.viz.horizon.tab"]], "dipy.viz.horizon.tab.base": [[176, "module-dipy.viz.horizon.tab.base"]], "dipy.viz.horizon.tab.cluster": [[176, "module-dipy.viz.horizon.tab.cluster"]], "dipy.viz.horizon.tab.peak": [[176, "module-dipy.viz.horizon.tab.peak"]], "dipy.viz.horizon.tab.roi": [[176, "module-dipy.viz.horizon.tab.roi"]], "dipy.viz.horizon.tab.slice": [[176, "module-dipy.viz.horizon.tab.slice"]], "dipy.viz.horizon.util": [[176, "module-dipy.viz.horizon.util"]], "dipy.viz.horizon.visualizer": [[176, "module-dipy.viz.horizon.visualizer"]], "dipy.viz.horizon.visualizer.cluster": [[176, "module-dipy.viz.horizon.visualizer.cluster"]], "dipy.viz.horizon.visualizer.slice": [[176, "module-dipy.viz.horizon.visualizer.slice"]], "dipy.viz.panel": [[176, "module-dipy.viz.panel"]], "dipy.viz.plotting": [[176, "module-dipy.viz.plotting"]], "dipy.viz.projections": [[176, "module-dipy.viz.projections"]], "dipy.viz.regtools": [[176, "module-dipy.viz.regtools"]], "dipy.viz.streamline": [[176, "module-dipy.viz.streamline"]], "draw_lattice_2d() (in module dipy.viz.regtools)": [[176, "dipy.viz.regtools.draw_lattice_2d"]], "elements (dipy.viz.horizon.tab.base.horizontab property)": [[176, "dipy.viz.horizon.tab.base.HorizonTab.elements"]], "horizon() (in module dipy.viz.horizon.app)": [[176, "dipy.viz.horizon.app.horizon"]], "intensities_range (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[176, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.intensities_range"]], "lengths (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[176, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.lengths"]], "name (dipy.viz.horizon.tab.base.horizontab property)": [[176, "dipy.viz.horizon.tab.base.HorizonTab.name"]], "name (dipy.viz.horizon.tab.cluster.clusterstab property)": [[176, "dipy.viz.horizon.tab.cluster.ClustersTab.name"]], "name (dipy.viz.horizon.tab.peak.peakstab property)": [[176, "dipy.viz.horizon.tab.peak.PeaksTab.name"]], "name (dipy.viz.horizon.tab.roi.roistab property)": [[176, "dipy.viz.horizon.tab.roi.ROIsTab.name"]], "name (dipy.viz.horizon.tab.slice.slicestab property)": [[176, "dipy.viz.horizon.tab.slice.SlicesTab.name"]], "obj (dipy.viz.horizon.tab.base.horizonuielement attribute)": [[176, "dipy.viz.horizon.tab.base.HorizonUIElement.obj"]], "on_tab_selected() (dipy.viz.horizon.tab.slice.slicestab method)": [[176, "dipy.viz.horizon.tab.slice.SlicesTab.on_tab_selected"]], "overlay_images() (in module dipy.viz.regtools)": [[176, "dipy.viz.regtools.overlay_images"]], "overlay_slices() (in module dipy.viz.regtools)": [[176, "dipy.viz.regtools.overlay_slices"]], "plot_2d_diffeomorphic_map() (in module dipy.viz.regtools)": [[176, "dipy.viz.regtools.plot_2d_diffeomorphic_map"]], "plot_slices() (in module dipy.viz.regtools)": [[176, "dipy.viz.regtools.plot_slices"]], "position (dipy.viz.horizon.tab.base.horizonuielement attribute)": [[176, "dipy.viz.horizon.tab.base.HorizonUIElement.position"]], "recluster_tractograms() (dipy.viz.horizon.visualizer.cluster.clustersvisualizer method)": [[176, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.recluster_tractograms"]], "register_elements() (dipy.viz.horizon.tab.base.horizontab method)": [[176, "dipy.viz.horizon.tab.base.HorizonTab.register_elements"]], "register_picker_callback() (dipy.viz.horizon.visualizer.slice.slicesvisualizer method)": [[176, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.register_picker_callback"]], "reposition() (dipy.viz.horizon.tab.base.tabmanager method)": [[176, "dipy.viz.horizon.tab.base.TabManager.reposition"]], "rgb (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[176, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.rgb"]], "selected_slices (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[176, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.selected_slices"]], "selected_value (dipy.viz.horizon.tab.base.horizonuielement attribute)": [[176, "dipy.viz.horizon.tab.base.HorizonUIElement.selected_value"]], "show_bundles() (in module dipy.viz.streamline)": [[176, "dipy.viz.streamline.show_bundles"]], "simple_plot() (in module dipy.viz.regtools)": [[176, "dipy.viz.regtools.simple_plot"]], "sizes (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[176, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.sizes"]], "slice_actors (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[176, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.slice_actors"]], "slicer_panel() (in module dipy.viz.panel)": [[176, "dipy.viz.panel.slicer_panel"]], "sph_project() (in module dipy.viz.projections)": [[176, "dipy.viz.projections.sph_project"]], "synchronize_slices() (dipy.viz.horizon.tab.base.tabmanager method)": [[176, "dipy.viz.horizon.tab.base.TabManager.synchronize_slices"]], "tab_id (dipy.viz.horizon.tab.slice.slicestab property)": [[176, "dipy.viz.horizon.tab.slice.SlicesTab.tab_id"]], "tab_ui (dipy.viz.horizon.tab.base.tabmanager property)": [[176, "dipy.viz.horizon.tab.base.TabManager.tab_ui"]], "tractogram_clusters (dipy.viz.horizon.visualizer.cluster.clustersvisualizer property)": [[176, "dipy.viz.horizon.visualizer.cluster.ClustersVisualizer.tractogram_clusters"]], "update_slices() (dipy.viz.horizon.tab.slice.slicestab method)": [[176, "dipy.viz.horizon.tab.slice.SlicesTab.update_slices"]], "visibility (dipy.viz.horizon.tab.base.horizonuielement attribute)": [[176, "dipy.viz.horizon.tab.base.HorizonUIElement.visibility"]], "viz_displacement_mag() (in module dipy.viz.streamline)": [[176, "dipy.viz.streamline.viz_displacement_mag"]], "viz_two_bundles() (in module dipy.viz.streamline)": [[176, "dipy.viz.streamline.viz_two_bundles"]], "viz_vector_field() (in module dipy.viz.streamline)": [[176, "dipy.viz.streamline.viz_vector_field"]], "volume_max (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[176, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.volume_max"]], "volume_min (dipy.viz.horizon.visualizer.slice.slicesvisualizer property)": [[176, "dipy.viz.horizon.visualizer.slice.SlicesVisualizer.volume_min"]], "applytransformflow (class in dipy.workflows.align)": [[177, "dipy.workflows.align.ApplyTransformFlow"]], "bundleanalysistractometryflow (class in dipy.workflows.stats)": [[177, "dipy.workflows.stats.BundleAnalysisTractometryFlow"]], "bundleshapeanalysis (class in dipy.workflows.stats)": [[177, "dipy.workflows.stats.BundleShapeAnalysis"]], "bundlewarpflow (class in dipy.workflows.align)": [[177, "dipy.workflows.align.BundleWarpFlow"]], "combinedworkflow (class in dipy.workflows.combined_workflow)": [[177, "dipy.workflows.combined_workflow.CombinedWorkflow"]], "evacplusflow (class in dipy.workflows.nn)": [[177, "dipy.workflows.nn.EVACPlusFlow"]], "fetchflow (class in dipy.workflows.io)": [[177, "dipy.workflows.io.FetchFlow"]], "gibbsringingflow (class in dipy.workflows.denoise)": [[177, "dipy.workflows.denoise.GibbsRingingFlow"]], "horizonflow (class in dipy.workflows.viz)": [[177, "dipy.workflows.viz.HorizonFlow"]], "ioiterator (class in dipy.workflows.multi_io)": [[177, "dipy.workflows.multi_io.IOIterator"]], "imageregistrationflow (class in dipy.workflows.align)": [[177, "dipy.workflows.align.ImageRegistrationFlow"]], "introspectiveargumentparser (class in dipy.workflows.base)": [[177, "dipy.workflows.base.IntrospectiveArgumentParser"]], "ioinfoflow (class in dipy.workflows.io)": [[177, "dipy.workflows.io.IoInfoFlow"]], "lpcaflow (class in dipy.workflows.denoise)": [[177, "dipy.workflows.denoise.LPCAFlow"]], "labelsbundlesflow (class in dipy.workflows.segment)": [[177, "dipy.workflows.segment.LabelsBundlesFlow"]], "linearmixedmodelsflow (class in dipy.workflows.stats)": [[177, "dipy.workflows.stats.LinearMixedModelsFlow"]], "localfibertrackingpamflow (class in dipy.workflows.tracking)": [[177, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow"]], "mppcaflow (class in dipy.workflows.denoise)": [[177, "dipy.workflows.denoise.MPPCAFlow"]], "maskflow (class in dipy.workflows.mask)": [[177, "dipy.workflows.mask.MaskFlow"]], "medianotsuflow (class in dipy.workflows.segment)": [[177, "dipy.workflows.segment.MedianOtsuFlow"]], "motioncorrectionflow (class in dipy.workflows.align)": [[177, "dipy.workflows.align.MotionCorrectionFlow"]], "nlmeansflow (class in dipy.workflows.denoise)": [[177, "dipy.workflows.denoise.NLMeansFlow"]], "numpydocstring (class in dipy.workflows.docstring_parser)": [[177, "dipy.workflows.docstring_parser.NumpyDocString"]], "pftrackingpamflow (class in dipy.workflows.tracking)": [[177, "dipy.workflows.tracking.PFTrackingPAMFlow"]], "patch2selfflow (class in dipy.workflows.denoise)": [[177, "dipy.workflows.denoise.Patch2SelfFlow"]], "reader (class in dipy.workflows.docstring_parser)": [[177, "dipy.workflows.docstring_parser.Reader"]], "recobundlesflow (class in dipy.workflows.segment)": [[177, "dipy.workflows.segment.RecoBundlesFlow"]], "reconstcsaflow (class in dipy.workflows.reconst)": [[177, "dipy.workflows.reconst.ReconstCSAFlow"]], "reconstcsdflow (class in dipy.workflows.reconst)": [[177, "dipy.workflows.reconst.ReconstCSDFlow"]], "reconstdkiflow (class in dipy.workflows.reconst)": [[177, "dipy.workflows.reconst.ReconstDkiFlow"]], "reconstdtiflow (class in dipy.workflows.reconst)": [[177, "dipy.workflows.reconst.ReconstDtiFlow"]], "reconstivimflow (class in dipy.workflows.reconst)": [[177, "dipy.workflows.reconst.ReconstIvimFlow"]], "reconstmapmriflow (class in dipy.workflows.reconst)": [[177, "dipy.workflows.reconst.ReconstMAPMRIFlow"]], "reconstrumbaflow (class in dipy.workflows.reconst)": [[177, "dipy.workflows.reconst.ReconstRUMBAFlow"]], "resliceflow (class in dipy.workflows.align)": [[177, "dipy.workflows.align.ResliceFlow"]], "snrinccflow (class in dipy.workflows.stats)": [[177, "dipy.workflows.stats.SNRinCCFlow"]], "slrwithqbxflow (class in dipy.workflows.align)": [[177, "dipy.workflows.align.SlrWithQbxFlow"]], "splitflow (class in dipy.workflows.io)": [[177, "dipy.workflows.io.SplitFlow"]], "synregistrationflow (class in dipy.workflows.align)": [[177, "dipy.workflows.align.SynRegistrationFlow"]], "workflow (class in dipy.workflows.workflow)": [[177, "dipy.workflows.workflow.Workflow"]], "__init__() (dipy.workflows.align.applytransformflow method)": [[177, "dipy.workflows.align.ApplyTransformFlow.__init__"]], "__init__() (dipy.workflows.align.bundlewarpflow method)": [[177, "dipy.workflows.align.BundleWarpFlow.__init__"]], "__init__() (dipy.workflows.align.imageregistrationflow method)": [[177, "dipy.workflows.align.ImageRegistrationFlow.__init__"]], "__init__() (dipy.workflows.align.motioncorrectionflow method)": [[177, "dipy.workflows.align.MotionCorrectionFlow.__init__"]], "__init__() (dipy.workflows.align.resliceflow method)": [[177, "dipy.workflows.align.ResliceFlow.__init__"]], "__init__() (dipy.workflows.align.slrwithqbxflow method)": [[177, "dipy.workflows.align.SlrWithQbxFlow.__init__"]], "__init__() (dipy.workflows.align.synregistrationflow method)": [[177, "dipy.workflows.align.SynRegistrationFlow.__init__"]], "__init__() (dipy.workflows.base.introspectiveargumentparser method)": [[177, "dipy.workflows.base.IntrospectiveArgumentParser.__init__"]], "__init__() (dipy.workflows.combined_workflow.combinedworkflow method)": [[177, "dipy.workflows.combined_workflow.CombinedWorkflow.__init__"]], "__init__() (dipy.workflows.denoise.gibbsringingflow method)": [[177, "dipy.workflows.denoise.GibbsRingingFlow.__init__"]], "__init__() (dipy.workflows.denoise.lpcaflow method)": [[177, "dipy.workflows.denoise.LPCAFlow.__init__"]], "__init__() (dipy.workflows.denoise.mppcaflow method)": [[177, "dipy.workflows.denoise.MPPCAFlow.__init__"]], "__init__() (dipy.workflows.denoise.nlmeansflow method)": [[177, "dipy.workflows.denoise.NLMeansFlow.__init__"]], "__init__() (dipy.workflows.denoise.patch2selfflow method)": [[177, "dipy.workflows.denoise.Patch2SelfFlow.__init__"]], "__init__() (dipy.workflows.docstring_parser.numpydocstring method)": [[177, "dipy.workflows.docstring_parser.NumpyDocString.__init__"]], "__init__() (dipy.workflows.docstring_parser.reader method)": [[177, "dipy.workflows.docstring_parser.Reader.__init__"]], "__init__() (dipy.workflows.io.fetchflow method)": [[177, "dipy.workflows.io.FetchFlow.__init__"]], "__init__() (dipy.workflows.io.ioinfoflow method)": [[177, "dipy.workflows.io.IoInfoFlow.__init__"]], "__init__() (dipy.workflows.io.splitflow method)": [[177, "dipy.workflows.io.SplitFlow.__init__"]], "__init__() (dipy.workflows.mask.maskflow method)": [[177, "dipy.workflows.mask.MaskFlow.__init__"]], "__init__() (dipy.workflows.multi_io.ioiterator method)": [[177, "dipy.workflows.multi_io.IOIterator.__init__"]], "__init__() (dipy.workflows.nn.evacplusflow method)": [[177, "dipy.workflows.nn.EVACPlusFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstcsaflow method)": [[177, "dipy.workflows.reconst.ReconstCSAFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstcsdflow method)": [[177, "dipy.workflows.reconst.ReconstCSDFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstdkiflow method)": [[177, "dipy.workflows.reconst.ReconstDkiFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstdtiflow method)": [[177, "dipy.workflows.reconst.ReconstDtiFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstivimflow method)": [[177, "dipy.workflows.reconst.ReconstIvimFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstmapmriflow method)": [[177, "dipy.workflows.reconst.ReconstMAPMRIFlow.__init__"]], "__init__() (dipy.workflows.reconst.reconstrumbaflow method)": [[177, "dipy.workflows.reconst.ReconstRUMBAFlow.__init__"]], "__init__() (dipy.workflows.segment.labelsbundlesflow method)": [[177, "dipy.workflows.segment.LabelsBundlesFlow.__init__"]], "__init__() (dipy.workflows.segment.medianotsuflow method)": [[177, "dipy.workflows.segment.MedianOtsuFlow.__init__"]], "__init__() (dipy.workflows.segment.recobundlesflow method)": [[177, "dipy.workflows.segment.RecoBundlesFlow.__init__"]], "__init__() (dipy.workflows.stats.bundleanalysistractometryflow method)": [[177, "dipy.workflows.stats.BundleAnalysisTractometryFlow.__init__"]], "__init__() (dipy.workflows.stats.bundleshapeanalysis method)": [[177, "dipy.workflows.stats.BundleShapeAnalysis.__init__"]], "__init__() (dipy.workflows.stats.linearmixedmodelsflow method)": [[177, "dipy.workflows.stats.LinearMixedModelsFlow.__init__"]], "__init__() (dipy.workflows.stats.snrinccflow method)": [[177, "dipy.workflows.stats.SNRinCCFlow.__init__"]], "__init__() (dipy.workflows.tracking.localfibertrackingpamflow method)": [[177, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow.__init__"]], "__init__() (dipy.workflows.tracking.pftrackingpamflow method)": [[177, "dipy.workflows.tracking.PFTrackingPAMFlow.__init__"]], "__init__() (dipy.workflows.viz.horizonflow method)": [[177, "dipy.workflows.viz.HorizonFlow.__init__"]], "__init__() (dipy.workflows.workflow.workflow method)": [[177, "dipy.workflows.workflow.Workflow.__init__"]], "add_description() (dipy.workflows.base.introspectiveargumentparser method)": [[177, "dipy.workflows.base.IntrospectiveArgumentParser.add_description"]], "add_epilogue() (dipy.workflows.base.introspectiveargumentparser method)": [[177, "dipy.workflows.base.IntrospectiveArgumentParser.add_epilogue"]], "add_sub_flow_args() (dipy.workflows.base.introspectiveargumentparser method)": [[177, "dipy.workflows.base.IntrospectiveArgumentParser.add_sub_flow_args"]], "add_workflow() (dipy.workflows.base.introspectiveargumentparser method)": [[177, "dipy.workflows.base.IntrospectiveArgumentParser.add_workflow"]], "basename_without_extension() (in module dipy.workflows.multi_io)": [[177, "dipy.workflows.multi_io.basename_without_extension"]], "buan_bundle_profiles() (in module dipy.workflows.stats)": [[177, "dipy.workflows.stats.buan_bundle_profiles"]], "check_dimensions() (in module dipy.workflows.align)": [[177, "dipy.workflows.align.check_dimensions"]], "common_start() (in module dipy.workflows.multi_io)": [[177, "dipy.workflows.multi_io.common_start"]], "concatenate_inputs() (in module dipy.workflows.multi_io)": [[177, "dipy.workflows.multi_io.concatenate_inputs"]], "connect_output_paths() (in module dipy.workflows.multi_io)": [[177, "dipy.workflows.multi_io.connect_output_paths"]], "create_directories() (dipy.workflows.multi_io.ioiterator method)": [[177, "dipy.workflows.multi_io.IOIterator.create_directories"]], "create_outputs() (dipy.workflows.multi_io.ioiterator method)": [[177, "dipy.workflows.multi_io.IOIterator.create_outputs"]], "dedent_lines() (in module dipy.workflows.docstring_parser)": [[177, "dipy.workflows.docstring_parser.dedent_lines"]], "dipy.workflows": [[177, "module-dipy.workflows"]], "dipy.workflows.align": [[177, "module-dipy.workflows.align"]], "dipy.workflows.base": [[177, "module-dipy.workflows.base"]], "dipy.workflows.cli": [[177, "module-dipy.workflows.cli"]], "dipy.workflows.combined_workflow": [[177, "module-dipy.workflows.combined_workflow"]], "dipy.workflows.denoise": [[177, "module-dipy.workflows.denoise"]], "dipy.workflows.docstring_parser": [[177, "module-dipy.workflows.docstring_parser"]], "dipy.workflows.flow_runner": [[177, "module-dipy.workflows.flow_runner"]], "dipy.workflows.io": [[177, "module-dipy.workflows.io"]], "dipy.workflows.mask": [[177, "module-dipy.workflows.mask"]], "dipy.workflows.multi_io": [[177, "module-dipy.workflows.multi_io"]], "dipy.workflows.nn": [[177, "module-dipy.workflows.nn"]], "dipy.workflows.reconst": [[177, "module-dipy.workflows.reconst"]], "dipy.workflows.segment": [[177, "module-dipy.workflows.segment"]], "dipy.workflows.stats": [[177, "module-dipy.workflows.stats"]], "dipy.workflows.tracking": [[177, "module-dipy.workflows.tracking"]], "dipy.workflows.viz": [[177, "module-dipy.workflows.viz"]], "dipy.workflows.workflow": [[177, "module-dipy.workflows.workflow"]], "eof() (dipy.workflows.docstring_parser.reader method)": [[177, "dipy.workflows.docstring_parser.Reader.eof"]], "file_existence_check() (dipy.workflows.multi_io.ioiterator method)": [[177, "dipy.workflows.multi_io.IOIterator.file_existence_check"]], "get_args_default() (in module dipy.workflows.base)": [[177, "dipy.workflows.base.get_args_default"]], "get_fetcher_datanames() (dipy.workflows.io.fetchflow static method)": [[177, "dipy.workflows.io.FetchFlow.get_fetcher_datanames"]], "get_fitted_ivim() (dipy.workflows.reconst.reconstivimflow method)": [[177, "dipy.workflows.reconst.ReconstIvimFlow.get_fitted_ivim"]], "get_fitted_tensor() (dipy.workflows.reconst.reconstdkiflow method)": [[177, "dipy.workflows.reconst.ReconstDkiFlow.get_fitted_tensor"]], "get_fitted_tensor() (dipy.workflows.reconst.reconstdtiflow method)": [[177, "dipy.workflows.reconst.ReconstDtiFlow.get_fitted_tensor"]], "get_flow_args() (dipy.workflows.base.introspectiveargumentparser method)": [[177, "dipy.workflows.base.IntrospectiveArgumentParser.get_flow_args"]], "get_io_iterator() (dipy.workflows.workflow.workflow method)": [[177, "dipy.workflows.workflow.Workflow.get_io_iterator"]], "get_level() (in module dipy.workflows.flow_runner)": [[177, "dipy.workflows.flow_runner.get_level"]], "get_metric_name() (dipy.workflows.stats.linearmixedmodelsflow method)": [[177, "dipy.workflows.stats.LinearMixedModelsFlow.get_metric_name"]], "get_optionals() (dipy.workflows.combined_workflow.combinedworkflow method)": [[177, "dipy.workflows.combined_workflow.CombinedWorkflow.get_optionals"]], "get_short_name() (dipy.workflows.align.bundlewarpflow class method)": [[177, "dipy.workflows.align.BundleWarpFlow.get_short_name"]], "get_short_name() (dipy.workflows.align.resliceflow class method)": [[177, "dipy.workflows.align.ResliceFlow.get_short_name"]], "get_short_name() (dipy.workflows.align.slrwithqbxflow class method)": [[177, "dipy.workflows.align.SlrWithQbxFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.gibbsringingflow class method)": [[177, "dipy.workflows.denoise.GibbsRingingFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.lpcaflow class method)": [[177, "dipy.workflows.denoise.LPCAFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.mppcaflow class method)": [[177, "dipy.workflows.denoise.MPPCAFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.nlmeansflow class method)": [[177, "dipy.workflows.denoise.NLMeansFlow.get_short_name"]], "get_short_name() (dipy.workflows.denoise.patch2selfflow class method)": [[177, "dipy.workflows.denoise.Patch2SelfFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.fetchflow class method)": [[177, "dipy.workflows.io.FetchFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.ioinfoflow class method)": [[177, "dipy.workflows.io.IoInfoFlow.get_short_name"]], "get_short_name() (dipy.workflows.io.splitflow class method)": [[177, "dipy.workflows.io.SplitFlow.get_short_name"]], "get_short_name() (dipy.workflows.mask.maskflow class method)": [[177, "dipy.workflows.mask.MaskFlow.get_short_name"]], "get_short_name() (dipy.workflows.nn.evacplusflow class method)": [[177, "dipy.workflows.nn.EVACPlusFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstcsaflow class method)": [[177, "dipy.workflows.reconst.ReconstCSAFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstcsdflow class method)": [[177, "dipy.workflows.reconst.ReconstCSDFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstdkiflow class method)": [[177, "dipy.workflows.reconst.ReconstDkiFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstdtiflow class method)": [[177, "dipy.workflows.reconst.ReconstDtiFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstivimflow class method)": [[177, "dipy.workflows.reconst.ReconstIvimFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstmapmriflow class method)": [[177, "dipy.workflows.reconst.ReconstMAPMRIFlow.get_short_name"]], "get_short_name() (dipy.workflows.reconst.reconstrumbaflow class method)": [[177, "dipy.workflows.reconst.ReconstRUMBAFlow.get_short_name"]], "get_short_name() (dipy.workflows.segment.labelsbundlesflow class method)": [[177, "dipy.workflows.segment.LabelsBundlesFlow.get_short_name"]], "get_short_name() (dipy.workflows.segment.medianotsuflow class method)": [[177, "dipy.workflows.segment.MedianOtsuFlow.get_short_name"]], "get_short_name() (dipy.workflows.segment.recobundlesflow class method)": [[177, "dipy.workflows.segment.RecoBundlesFlow.get_short_name"]], "get_short_name() (dipy.workflows.stats.bundleanalysistractometryflow class method)": [[177, "dipy.workflows.stats.BundleAnalysisTractometryFlow.get_short_name"]], "get_short_name() (dipy.workflows.stats.bundleshapeanalysis class method)": [[177, "dipy.workflows.stats.BundleShapeAnalysis.get_short_name"]], "get_short_name() (dipy.workflows.stats.linearmixedmodelsflow class method)": [[177, "dipy.workflows.stats.LinearMixedModelsFlow.get_short_name"]], "get_short_name() (dipy.workflows.stats.snrinccflow class method)": [[177, "dipy.workflows.stats.SNRinCCFlow.get_short_name"]], "get_short_name() (dipy.workflows.tracking.localfibertrackingpamflow class method)": [[177, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow.get_short_name"]], "get_short_name() (dipy.workflows.tracking.pftrackingpamflow class method)": [[177, "dipy.workflows.tracking.PFTrackingPAMFlow.get_short_name"]], "get_short_name() (dipy.workflows.viz.horizonflow class method)": [[177, "dipy.workflows.viz.HorizonFlow.get_short_name"]], "get_short_name() (dipy.workflows.workflow.workflow class method)": [[177, "dipy.workflows.workflow.Workflow.get_short_name"]], "get_sub_runs() (dipy.workflows.combined_workflow.combinedworkflow method)": [[177, "dipy.workflows.combined_workflow.CombinedWorkflow.get_sub_runs"]], "get_sub_runs() (dipy.workflows.workflow.workflow method)": [[177, "dipy.workflows.workflow.Workflow.get_sub_runs"]], "io_iterator() (in module dipy.workflows.multi_io)": [[177, "dipy.workflows.multi_io.io_iterator"]], "io_iterator_() (in module dipy.workflows.multi_io)": [[177, "dipy.workflows.multi_io.io_iterator_"]], "is_empty() (dipy.workflows.docstring_parser.reader method)": [[177, "dipy.workflows.docstring_parser.Reader.is_empty"]], "load_module() (dipy.workflows.io.fetchflow static method)": [[177, "dipy.workflows.io.FetchFlow.load_module"]], "manage_output_overwrite() (dipy.workflows.workflow.workflow method)": [[177, "dipy.workflows.workflow.Workflow.manage_output_overwrite"]], "none_or_dtype() (in module dipy.workflows.base)": [[177, "dipy.workflows.base.none_or_dtype"]], "optional_parameters (dipy.workflows.base.introspectiveargumentparser property)": [[177, "dipy.workflows.base.IntrospectiveArgumentParser.optional_parameters"]], "output_parameters (dipy.workflows.base.introspectiveargumentparser property)": [[177, "dipy.workflows.base.IntrospectiveArgumentParser.output_parameters"]], "peek() (dipy.workflows.docstring_parser.reader method)": [[177, "dipy.workflows.docstring_parser.Reader.peek"]], "positional_parameters (dipy.workflows.base.introspectiveargumentparser property)": [[177, "dipy.workflows.base.IntrospectiveArgumentParser.positional_parameters"]], "read() (dipy.workflows.docstring_parser.reader method)": [[177, "dipy.workflows.docstring_parser.Reader.read"]], "read_to_condition() (dipy.workflows.docstring_parser.reader method)": [[177, "dipy.workflows.docstring_parser.Reader.read_to_condition"]], "read_to_next_empty_line() (dipy.workflows.docstring_parser.reader method)": [[177, "dipy.workflows.docstring_parser.Reader.read_to_next_empty_line"]], "read_to_next_unindented_line() (dipy.workflows.docstring_parser.reader method)": [[177, "dipy.workflows.docstring_parser.Reader.read_to_next_unindented_line"]], "reset() (dipy.workflows.docstring_parser.reader method)": [[177, "dipy.workflows.docstring_parser.Reader.reset"]], "run() (dipy.workflows.align.applytransformflow method)": [[177, "dipy.workflows.align.ApplyTransformFlow.run"]], "run() (dipy.workflows.align.bundlewarpflow method)": [[177, "dipy.workflows.align.BundleWarpFlow.run"]], "run() (dipy.workflows.align.imageregistrationflow method)": [[177, "dipy.workflows.align.ImageRegistrationFlow.run"]], "run() (dipy.workflows.align.motioncorrectionflow method)": [[177, "dipy.workflows.align.MotionCorrectionFlow.run"]], "run() (dipy.workflows.align.resliceflow method)": [[177, "dipy.workflows.align.ResliceFlow.run"]], "run() (dipy.workflows.align.slrwithqbxflow method)": [[177, "dipy.workflows.align.SlrWithQbxFlow.run"]], "run() (dipy.workflows.align.synregistrationflow method)": [[177, "dipy.workflows.align.SynRegistrationFlow.run"]], "run() (dipy.workflows.denoise.gibbsringingflow method)": [[177, "dipy.workflows.denoise.GibbsRingingFlow.run"]], "run() (dipy.workflows.denoise.lpcaflow method)": [[177, "dipy.workflows.denoise.LPCAFlow.run"]], "run() (dipy.workflows.denoise.mppcaflow method)": [[177, "dipy.workflows.denoise.MPPCAFlow.run"]], "run() (dipy.workflows.denoise.nlmeansflow method)": [[177, "dipy.workflows.denoise.NLMeansFlow.run"]], "run() (dipy.workflows.denoise.patch2selfflow method)": [[177, "dipy.workflows.denoise.Patch2SelfFlow.run"]], "run() (dipy.workflows.io.fetchflow method)": [[177, "dipy.workflows.io.FetchFlow.run"]], "run() (dipy.workflows.io.ioinfoflow method)": [[177, "dipy.workflows.io.IoInfoFlow.run"]], "run() (dipy.workflows.io.splitflow method)": [[177, "dipy.workflows.io.SplitFlow.run"]], "run() (dipy.workflows.mask.maskflow method)": [[177, "dipy.workflows.mask.MaskFlow.run"]], "run() (dipy.workflows.nn.evacplusflow method)": [[177, "dipy.workflows.nn.EVACPlusFlow.run"]], "run() (dipy.workflows.reconst.reconstcsaflow method)": [[177, "dipy.workflows.reconst.ReconstCSAFlow.run"]], "run() (dipy.workflows.reconst.reconstcsdflow method)": [[177, "dipy.workflows.reconst.ReconstCSDFlow.run"]], "run() (dipy.workflows.reconst.reconstdkiflow method)": [[177, "dipy.workflows.reconst.ReconstDkiFlow.run"]], "run() (dipy.workflows.reconst.reconstdtiflow method)": [[177, "dipy.workflows.reconst.ReconstDtiFlow.run"]], "run() (dipy.workflows.reconst.reconstivimflow method)": [[177, "dipy.workflows.reconst.ReconstIvimFlow.run"]], "run() (dipy.workflows.reconst.reconstmapmriflow method)": [[177, "dipy.workflows.reconst.ReconstMAPMRIFlow.run"]], "run() (dipy.workflows.reconst.reconstrumbaflow method)": [[177, "dipy.workflows.reconst.ReconstRUMBAFlow.run"]], "run() (dipy.workflows.segment.labelsbundlesflow method)": [[177, "dipy.workflows.segment.LabelsBundlesFlow.run"]], "run() (dipy.workflows.segment.medianotsuflow method)": [[177, "dipy.workflows.segment.MedianOtsuFlow.run"]], "run() (dipy.workflows.segment.recobundlesflow method)": [[177, "dipy.workflows.segment.RecoBundlesFlow.run"]], "run() (dipy.workflows.stats.bundleanalysistractometryflow method)": [[177, "dipy.workflows.stats.BundleAnalysisTractometryFlow.run"]], "run() (dipy.workflows.stats.bundleshapeanalysis method)": [[177, "dipy.workflows.stats.BundleShapeAnalysis.run"]], "run() (dipy.workflows.stats.linearmixedmodelsflow method)": [[177, "dipy.workflows.stats.LinearMixedModelsFlow.run"]], "run() (dipy.workflows.stats.snrinccflow method)": [[177, "dipy.workflows.stats.SNRinCCFlow.run"]], "run() (dipy.workflows.tracking.localfibertrackingpamflow method)": [[177, "dipy.workflows.tracking.LocalFiberTrackingPAMFlow.run"]], "run() (dipy.workflows.tracking.pftrackingpamflow method)": [[177, "dipy.workflows.tracking.PFTrackingPAMFlow.run"]], "run() (dipy.workflows.viz.horizonflow method)": [[177, "dipy.workflows.viz.HorizonFlow.run"]], "run() (dipy.workflows.workflow.workflow method)": [[177, "dipy.workflows.workflow.Workflow.run"]], "run() (in module dipy.workflows.cli)": [[177, "dipy.workflows.cli.run"]], "run_flow() (in module dipy.workflows.flow_runner)": [[177, "dipy.workflows.flow_runner.run_flow"]], "run_sub_flow() (dipy.workflows.combined_workflow.combinedworkflow method)": [[177, "dipy.workflows.combined_workflow.CombinedWorkflow.run_sub_flow"]], "save_lmm_plot() (dipy.workflows.stats.linearmixedmodelsflow method)": [[177, "dipy.workflows.stats.LinearMixedModelsFlow.save_lmm_plot"]], "seek_next_non_empty_line() (dipy.workflows.docstring_parser.reader method)": [[177, "dipy.workflows.docstring_parser.Reader.seek_next_non_empty_line"]], "set_inputs() (dipy.workflows.multi_io.ioiterator method)": [[177, "dipy.workflows.multi_io.IOIterator.set_inputs"]], "set_out_dir() (dipy.workflows.multi_io.ioiterator method)": [[177, "dipy.workflows.multi_io.IOIterator.set_out_dir"]], "set_out_fnames() (dipy.workflows.multi_io.ioiterator method)": [[177, "dipy.workflows.multi_io.IOIterator.set_out_fnames"]], "set_output_keys() (dipy.workflows.multi_io.ioiterator method)": [[177, "dipy.workflows.multi_io.IOIterator.set_output_keys"]], "set_sub_flows_optionals() (dipy.workflows.combined_workflow.combinedworkflow method)": [[177, "dipy.workflows.combined_workflow.CombinedWorkflow.set_sub_flows_optionals"]], "show_argument() (dipy.workflows.base.introspectiveargumentparser method)": [[177, "dipy.workflows.base.IntrospectiveArgumentParser.show_argument"]], "slash_to_under() (in module dipy.workflows.multi_io)": [[177, "dipy.workflows.multi_io.slash_to_under"]], "update_argument() (dipy.workflows.base.introspectiveargumentparser method)": [[177, "dipy.workflows.base.IntrospectiveArgumentParser.update_argument"]]}})