
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples_built/streamline_analysis/bundle_shape_similarity.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_built_streamline_analysis_bundle_shape_similarity.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_built_streamline_analysis_bundle_shape_similarity.py:


==================================
BUAN Bundle Shape Similarity Score
==================================

This example explains how we can use BUAN :footcite:p:`Chandio2020a` to calculate
shape similarity between two given bundles. Where, shape similarity score of 1
means two bundles are extremely close in shape and 0 implies no shape similarity
whatsoever.

Shape similarity score can be used to compare populations or individuals.
It can also serve as a quality assurance metric, to validate streamline
registration quality, bundle extraction quality by calculating output with a
reference bundle or other issues with pre-processing by calculating shape
dissimilarity with a reference bundle.

First import the necessary modules.

.. GENERATED FROM PYTHON SOURCE LINES 19-29

.. code-block:: Python


    import numpy as np

    from dipy.data import two_cingulum_bundles
    from dipy.segment.bundles import (
        bundle_shape_similarity,
        select_random_set_of_streamlines,
    )
    from dipy.viz import actor, window








.. GENERATED FROM PYTHON SOURCE LINES 30-32

To show the concept we will use two pre-saved cingulum bundle.
Let's start by fetching the data.

.. GENERATED FROM PYTHON SOURCE LINES 32-35

.. code-block:: Python


    cb_subj1, _ = two_cingulum_bundles()








.. GENERATED FROM PYTHON SOURCE LINES 36-38

Let's create two streamline sets (bundles) from same bundle cb_subj1 by
randomly selecting 60 streamlines two times.

.. GENERATED FROM PYTHON SOURCE LINES 38-43

.. code-block:: Python


    rng = np.random.default_rng()
    bundle1 = select_random_set_of_streamlines(cb_subj1, 60, rng=None)
    bundle2 = select_random_set_of_streamlines(cb_subj1, 60, rng=None)








.. GENERATED FROM PYTHON SOURCE LINES 44-45

Now, let's visualize two bundles.

.. GENERATED FROM PYTHON SOURCE LINES 45-69

.. code-block:: Python



    def show_both_bundles(bundles, colors=None, show=True, fname=None):
        scene = window.Scene()
        scene.SetBackground(1.0, 1, 1)
        for i, bundle in enumerate(bundles):
            color = colors[i]
            streamtube_actor = actor.streamtube(bundle, colors=color, linewidth=0.3)
            streamtube_actor.RotateX(-90)
            streamtube_actor.RotateZ(90)
            scene.add(streamtube_actor)
        if show:
            window.show(scene)
        if fname is not None:
            window.record(scene=scene, n_frames=1, out_path=fname, size=(900, 900))


    show_both_bundles(
        [bundle1, bundle2],
        colors=[(1, 0, 0), (0, 1, 0)],
        show=False,
        fname="two_bundles.png",
    )




.. image-sg:: /examples_built/streamline_analysis/images/sphx_glr_bundle_shape_similarity_001.png
   :alt: bundle shape similarity
   :srcset: /examples_built/streamline_analysis/images/sphx_glr_bundle_shape_similarity_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 70-79

.. rst-class:: centered small fst-italic fw-semibold

Two Cingulum Bundles.



Calculate shape similarity score between two bundles.
0 cluster_thr because we want to use all streamlines and not the centroids of
clusters.

.. GENERATED FROM PYTHON SOURCE LINES 79-82

.. code-block:: Python


    clust_thr = [0]








.. GENERATED FROM PYTHON SOURCE LINES 83-84

Threshold indicates how strictly we want two bundles to be similar in shape.

.. GENERATED FROM PYTHON SOURCE LINES 84-92

.. code-block:: Python


    threshold = 5

    ba_score = bundle_shape_similarity(
        bundle1, bundle2, rng, clust_thr=clust_thr, threshold=threshold
    )
    print("Shape similarity score = ", ba_score)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Shape similarity score =  0.6




.. GENERATED FROM PYTHON SOURCE LINES 93-94

Let's change the value of threshold to 10.

.. GENERATED FROM PYTHON SOURCE LINES 94-102

.. code-block:: Python


    threshold = 10

    ba_score = bundle_shape_similarity(
        bundle1, bundle2, rng, clust_thr=clust_thr, threshold=threshold
    )
    print("Shape similarity score = ", ba_score)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Shape similarity score =  0.9416666666666667




.. GENERATED FROM PYTHON SOURCE LINES 103-113

Higher value of threshold gives us higher shape similarity score as it is
more lenient.



References
----------

.. footbibliography::


.. GENERATED FROM PYTHON SOURCE LINES 115-117

.. include:: ../../links_names.inc



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.614 seconds)


.. _sphx_glr_download_examples_built_streamline_analysis_bundle_shape_similarity.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: bundle_shape_similarity.ipynb <bundle_shape_similarity.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: bundle_shape_similarity.py <bundle_shape_similarity.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: bundle_shape_similarity.zip <bundle_shape_similarity.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
