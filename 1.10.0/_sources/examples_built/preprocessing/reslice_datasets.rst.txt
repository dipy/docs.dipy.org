
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples_built/preprocessing/reslice_datasets.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_built_preprocessing_reslice_datasets.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_built_preprocessing_reslice_datasets.py:


==========================
Reslice diffusion datasets
==========================

Often in imaging it is common to reslice images in different resolutions.
Especially in dMRI we usually want images with isotropic voxel size as they
facilitate most tractography algorithms. In this example we show how you
can reslice a dMRI dataset to have isotropic voxel size.

Let's start by importing the necessary modules.

.. GENERATED FROM PYTHON SOURCE LINES 14-21

.. code-block:: Python


    import nibabel as nib

    from dipy.align.reslice import reslice
    from dipy.data import get_fnames
    from dipy.io.image import load_nifti, save_nifti








.. GENERATED FROM PYTHON SOURCE LINES 22-24

We use here a very small dataset to show the basic principles but you can
replace the following line with the path of your image.

.. GENERATED FROM PYTHON SOURCE LINES 24-27

.. code-block:: Python


    fimg = get_fnames(name="aniso_vox")








.. GENERATED FROM PYTHON SOURCE LINES 28-31

We load the image, the affine of the image and the voxel size. The affine is
the transformation matrix which maps image coordinates to world (mm)
coordinates. Then, we print the shape of the volume

.. GENERATED FROM PYTHON SOURCE LINES 31-37

.. code-block:: Python


    data, affine, voxel_size = load_nifti(fimg, return_voxsize=True)

    print(f"Data size: {data.shape}")
    print(f"Voxel size: {voxel_size}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Data size: (58, 58, 24)
    Voxel size: (4.0, 4.0, 5.0)




.. GENERATED FROM PYTHON SOURCE LINES 38-39

Set the required new voxel size.

.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: Python


    new_voxel_size = (3.0, 3.0, 3.0)
    print(f"New Voxel size: {new_voxel_size}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    New Voxel size: (3.0, 3.0, 3.0)




.. GENERATED FROM PYTHON SOURCE LINES 44-45

Start resampling (reslicing). Trilinear interpolation is used by default.

.. GENERATED FROM PYTHON SOURCE LINES 45-49

.. code-block:: Python


    data2, affine2 = reslice(data, affine, voxel_size, new_voxel_size)
    print(f"New data size: {data2.shape}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    New data size: (77, 77, 40)




.. GENERATED FROM PYTHON SOURCE LINES 50-51

Save the result as a new Nifti file.

.. GENERATED FROM PYTHON SOURCE LINES 51-54

.. code-block:: Python


    save_nifti("iso_vox.nii.gz", data2, affine2)








.. GENERATED FROM PYTHON SOURCE LINES 55-56

Or as analyze format or any other supported format.

.. GENERATED FROM PYTHON SOURCE LINES 56-60

.. code-block:: Python


    img3 = nib.Spm2AnalyzeImage(data2, affine2)
    nib.save(img3, "iso_vox.img")








.. GENERATED FROM PYTHON SOURCE LINES 61-63

Done. Check your datasets. As you may have already realized the same code
can be used for general reslicing problems not only for dMRI data.

.. GENERATED FROM PYTHON SOURCE LINES 65-67

.. include:: ../../links_names.inc



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.087 seconds)


.. _sphx_glr_download_examples_built_preprocessing_reslice_datasets.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: reslice_datasets.ipynb <reslice_datasets.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: reslice_datasets.py <reslice_datasets.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
